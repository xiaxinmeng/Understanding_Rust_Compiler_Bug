{"sha": "b9da76de89731a1f9be1d256157dfec4cdf5d323", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlkYTc2ZGU4OTczMWExZjliZTFkMjU2MTU3ZGZlYzRjZGY1ZDMyMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-07-09T11:19:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-07-09T11:19:22Z"}, "message": "re PR middle-end/40692 (Endless recursion between fold_ternary and fold_cond_expr_with_comparison)\n\n\tPR middle-end/40692\n\t* fold-const.c (fold_cond_expr_with_comparison): Don't replace\n\targ1 with arg01 if arg1 is already INTEGER_CST.\n\n\t* gcc.c-torture/compile/pr40692.c: New test.\n\nFrom-SVN: r149418", "tree": {"sha": "ef158423e9e6bf499dd3aa0f69fbbffcf173b836", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef158423e9e6bf499dd3aa0f69fbbffcf173b836"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9da76de89731a1f9be1d256157dfec4cdf5d323", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9da76de89731a1f9be1d256157dfec4cdf5d323", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9da76de89731a1f9be1d256157dfec4cdf5d323", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9da76de89731a1f9be1d256157dfec4cdf5d323/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "cc7e18644edf97b3cfaed58e1786b290edb2975b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9da76de89731a1f9be1d256157dfec4cdf5d323/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9da76de89731a1f9be1d256157dfec4cdf5d323/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9da76de89731a1f9be1d256157dfec4cdf5d323", "patch": "@@ -1,3 +1,9 @@\n+2009-07-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/40692\n+\t* fold-const.c (fold_cond_expr_with_comparison): Don't replace\n+\targ1 with arg01 if arg1 is already INTEGER_CST.\n+\n 2009-07-08  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* simplify-rtx.c (simplify_binary_operation_1) <AND>: Transform (and"}, {"sha": "f3e0614a4a67a0af80cfe4f11c763968804b87fb", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9da76de89731a1f9be1d256157dfec4cdf5d323/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9da76de89731a1f9be1d256157dfec4cdf5d323/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b9da76de89731a1f9be1d256157dfec4cdf5d323", "patch": "@@ -5303,6 +5303,8 @@ fold_cond_expr_with_comparison (tree type, tree arg0, tree arg1, tree arg2)\n     switch (comp_code)\n       {\n       case EQ_EXPR:\n+\tif (TREE_CODE (arg1) == INTEGER_CST)\n+\t  break;\n \t/* We can replace A with C1 in this case.  */\n \targ1 = fold_convert (type, arg01);\n \treturn fold_build3 (COND_EXPR, type, arg0, arg1, arg2);"}, {"sha": "736c22f5e8a9074fd4caefe9a1977731a3d21143", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9da76de89731a1f9be1d256157dfec4cdf5d323/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9da76de89731a1f9be1d256157dfec4cdf5d323/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9da76de89731a1f9be1d256157dfec4cdf5d323", "patch": "@@ -1,3 +1,8 @@\n+2009-07-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/40692\n+\t* gcc.c-torture/compile/pr40692.c: New test.\n+\n 2009-07-09  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/40604"}, {"sha": "567516e69157b57157a72cb05c18f84f75e207e5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr40692.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9da76de89731a1f9be1d256157dfec4cdf5d323/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40692.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9da76de89731a1f9be1d256157dfec4cdf5d323/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40692.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40692.c?ref=b9da76de89731a1f9be1d256157dfec4cdf5d323", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/40692 */\n+\n+#define M1(x) (((x) & 0x00000002) ? 0x2 : ((x) & 0x1))\n+#define M2(x) (((x) & 0x0000000c) ? M1 ((x) >> 2) << 2 : M1 (x))\n+#define M3(x) (((x) & 0x000000f0) ? M2 ((x) >> 4) << 4 : M2 (x))\n+#define M4(x) (((x) & 0x0000ff00) ? M3 ((x) >> 8) << 8 : M3 (x))\n+#define M5(x) (((x) & 0xffff0000) ? M4 ((x) >> 16) << 16 : M4 (x))\n+\n+struct A { char e; char f; };\n+\n+long\n+foo (void)\n+{\n+  return M5 (4096UL - (long) &((struct A *) 0)->f);\n+}"}]}