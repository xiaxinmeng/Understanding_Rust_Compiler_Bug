{"sha": "0ff0609d035ffb794449e33ed8e13d2018bc3bce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZmMDYwOWQwMzVmZmI3OTQ0NDllMzNlZDhlMTNkMjAxOGJjM2JjZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-11-09T21:28:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-11-09T21:28:57Z"}, "message": "function.h (requires_stack_frame_p): New prototype.\n\n\t* function.h (requires_stack_frame_p): New prototype.\n\t* function.c (requires_stack_frame_p): No longer static.\n\t* config/i386/i386.c (ix86_finalize_stack_realign_flags): If\n\tstack_realign_fp was just a conservative guess for a function\n\twhich doesn't use sp/fp/argp at all, clear frame_pointer_needed\n\tand stack realignment.\n\nFrom-SVN: r181236", "tree": {"sha": "2a5c62e5d8fd156f9d6fd45cbb723e18253aa233", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a5c62e5d8fd156f9d6fd45cbb723e18253aa233"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ff0609d035ffb794449e33ed8e13d2018bc3bce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff0609d035ffb794449e33ed8e13d2018bc3bce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ff0609d035ffb794449e33ed8e13d2018bc3bce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff0609d035ffb794449e33ed8e13d2018bc3bce/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ed56cbbee96b41fa9ef743c48245096d84205b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ed56cbbee96b41fa9ef743c48245096d84205b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ed56cbbee96b41fa9ef743c48245096d84205b7"}], "stats": {"total": 79, "additions": 74, "deletions": 5}, "files": [{"sha": "104de01bfe6e679809de3d02b2330eb91639e667", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff0609d035ffb794449e33ed8e13d2018bc3bce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff0609d035ffb794449e33ed8e13d2018bc3bce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ff0609d035ffb794449e33ed8e13d2018bc3bce", "patch": "@@ -1,3 +1,12 @@\n+2011-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* function.h (requires_stack_frame_p): New prototype.\n+\t* function.c (requires_stack_frame_p): No longer static.\n+\t* config/i386/i386.c (ix86_finalize_stack_realign_flags): If\n+\tstack_realign_fp was just a conservative guess for a function\n+\twhich doesn't use sp/fp/argp at all, clear frame_pointer_needed\n+\tand stack realignment.\n+\n 2011-11-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR preprocessor/51061"}, {"sha": "008af27042ad59c7760bbd1524ca1c7bbe71f511", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 60, "deletions": 4, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff0609d035ffb794449e33ed8e13d2018bc3bce/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff0609d035ffb794449e33ed8e13d2018bc3bce/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0ff0609d035ffb794449e33ed8e13d2018bc3bce", "patch": "@@ -9928,12 +9928,68 @@ ix86_finalize_stack_realign_flags (void)\n       /* After stack_realign_needed is finalized, we can't no longer\n \t change it.  */\n       gcc_assert (crtl->stack_realign_needed == stack_realign);\n+      return;\n     }\n-  else\n-    {\n-      crtl->stack_realign_needed = stack_realign;\n-      crtl->stack_realign_finalized = true;\n+\n+  /* If the only reason for frame_pointer_needed is that we conservatively\n+     assumed stack realignment might be needed, but in the end nothing that\n+     needed the stack alignment had been spilled, clear frame_pointer_needed\n+     and say we don't need stack realignment.  */\n+  if (stack_realign\n+      && !crtl->need_drap\n+      && frame_pointer_needed\n+      && current_function_is_leaf\n+      && flag_omit_frame_pointer\n+      && current_function_sp_is_unchanging\n+      && !ix86_current_function_calls_tls_descriptor\n+      && !crtl->accesses_prior_frames\n+      && !cfun->calls_alloca\n+      && !crtl->calls_eh_return\n+      && !(flag_stack_check && STACK_CHECK_MOVING_SP)\n+      && !ix86_frame_pointer_required ()\n+      && get_frame_size () == 0\n+      && ix86_nsaved_sseregs () == 0\n+      && ix86_varargs_gpr_size + ix86_varargs_fpr_size == 0)\n+    {\n+      HARD_REG_SET set_up_by_prologue, prologue_used;\n+      basic_block bb;\n+\n+      CLEAR_HARD_REG_SET (prologue_used);\n+      CLEAR_HARD_REG_SET (set_up_by_prologue);\n+      add_to_hard_reg_set (&set_up_by_prologue, Pmode, STACK_POINTER_REGNUM);\n+      add_to_hard_reg_set (&set_up_by_prologue, Pmode, ARG_POINTER_REGNUM);\n+      add_to_hard_reg_set (&set_up_by_prologue, Pmode,\n+\t\t\t   HARD_FRAME_POINTER_REGNUM);\n+      FOR_EACH_BB (bb)\n+        {\n+          rtx insn;\n+\t  FOR_BB_INSNS (bb, insn)\n+\t    if (NONDEBUG_INSN_P (insn)\n+\t\t&& requires_stack_frame_p (insn, prologue_used,\n+\t\t\t\t\t   set_up_by_prologue))\n+\t      {\n+\t\tcrtl->stack_realign_needed = stack_realign;\n+\t\tcrtl->stack_realign_finalized = true;\n+\t\treturn;\n+\t      }\n+\t}\n+\n+      frame_pointer_needed = false;\n+      stack_realign = false;\n+      crtl->max_used_stack_slot_alignment = incoming_stack_boundary;\n+      crtl->stack_alignment_needed = incoming_stack_boundary;\n+      crtl->stack_alignment_estimated = incoming_stack_boundary;\n+      if (crtl->preferred_stack_boundary > incoming_stack_boundary)\n+\tcrtl->preferred_stack_boundary = incoming_stack_boundary;\n+      df_finish_pass (true);\n+      df_scan_alloc (NULL);\n+      df_scan_blocks ();\n+      df_compute_regs_ever_live (true);\n+      df_analyze ();\n     }\n+\n+  crtl->stack_realign_needed = stack_realign;\n+  crtl->stack_realign_finalized = true;\n }\n \n /* Expand the prologue into a bunch of separate insns.  */"}, {"sha": "0ee69ef22b6831d9afdcfdae99e54d007bb3c4c9", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff0609d035ffb794449e33ed8e13d2018bc3bce/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff0609d035ffb794449e33ed8e13d2018bc3bce/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=0ff0609d035ffb794449e33ed8e13d2018bc3bce", "patch": "@@ -5284,7 +5284,7 @@ prologue_epilogue_contains (const_rtx insn)\n    PROLOGUE_USED contains the hard registers used in the function\n    prologue.  SET_UP_BY_PROLOGUE is the set of registers we expect the\n    prologue to set up for the function.  */\n-static bool\n+bool\n requires_stack_frame_p (rtx insn, HARD_REG_SET prologue_used,\n \t\t\tHARD_REG_SET set_up_by_prologue)\n {"}, {"sha": "ce67add274875d29b63b53575c09ffc04fc3a13d", "filename": "gcc/function.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff0609d035ffb794449e33ed8e13d2018bc3bce/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff0609d035ffb794449e33ed8e13d2018bc3bce/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=0ff0609d035ffb794449e33ed8e13d2018bc3bce", "patch": "@@ -753,6 +753,10 @@ extern void used_types_insert (tree);\n extern int get_next_funcdef_no (void);\n extern int get_last_funcdef_no (void);\n \n+#ifdef HAVE_simple_return\n+extern bool requires_stack_frame_p (rtx, HARD_REG_SET, HARD_REG_SET);\n+#endif                        \n+\n /* In predict.c */\n extern bool optimize_function_for_size_p (struct function *);\n extern bool optimize_function_for_speed_p (struct function *);"}]}