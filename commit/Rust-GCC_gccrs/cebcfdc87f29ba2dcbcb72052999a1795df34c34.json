{"sha": "cebcfdc87f29ba2dcbcb72052999a1795df34c34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ViY2ZkYzg3ZjI5YmEyZGNiY2I3MjA1Mjk5OWExNzk1ZGYzNGMzNA==", "commit": {"author": {"name": "Stephane Carrez", "email": "stcarrez@nerim.fr", "date": "2003-04-12T21:52:33Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2003-04-12T21:52:33Z"}, "message": "* config/m68hc11/m68hc11-protos.h\n\t(m68hc11_eq_compare_operator): Declare\n\t* config/m68hc11/m68hc11.h (PREDICATE_CODES): Register new predicate.\n\t* config/m68hc11/m68hc11.c (m68hc11_eq_compare_operator): New predicate\n\t(d_register_operand): Check the operand mode.\n\t(hard_addr_reg_operand): Likewise.\n\nFrom-SVN: r65529", "tree": {"sha": "ac756bba7a33b86f559e069a5f577170fe03c5f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac756bba7a33b86f559e069a5f577170fe03c5f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cebcfdc87f29ba2dcbcb72052999a1795df34c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebcfdc87f29ba2dcbcb72052999a1795df34c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cebcfdc87f29ba2dcbcb72052999a1795df34c34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebcfdc87f29ba2dcbcb72052999a1795df34c34/comments", "author": null, "committer": null, "parents": [{"sha": "0ae32ec0d700f0e22b803b904f3849e5b5b10360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae32ec0d700f0e22b803b904f3849e5b5b10360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ae32ec0d700f0e22b803b904f3849e5b5b10360"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "c49afa1e8f44280cbc8843a60ac8159dc3d856af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebcfdc87f29ba2dcbcb72052999a1795df34c34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebcfdc87f29ba2dcbcb72052999a1795df34c34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cebcfdc87f29ba2dcbcb72052999a1795df34c34", "patch": "@@ -1,3 +1,12 @@\n+2003-04-12  Stephane Carrez  <stcarrez@nerim.fr>\n+\n+\t* config/m68hc11/m68hc11-protos.h \n+\t(m68hc11_eq_compare_operator): Declare\n+\t* config/m68hc11/m68hc11.h (PREDICATE_CODES): Register new predicate.\n+\t* config/m68hc11/m68hc11.c (m68hc11_eq_compare_operator): New predicate\n+\t(d_register_operand): Check the operand mode.\n+\t(hard_addr_reg_operand): Likewise.\n+\n 2003-04-12  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/m68hc11.md (\"decrement_and_branch_until_zero\"): New"}, {"sha": "3c814d73ece4a74c5ed471c10b173ca34e979745", "filename": "gcc/config/m68hc11/m68hc11-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebcfdc87f29ba2dcbcb72052999a1795df34c34/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebcfdc87f29ba2dcbcb72052999a1795df34c34/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-protos.h?ref=cebcfdc87f29ba2dcbcb72052999a1795df34c34", "patch": "@@ -120,6 +120,7 @@ extern int m68hc11_arith_operator PARAMS((rtx, enum machine_mode));\n extern int m68hc11_non_shift_operator PARAMS((rtx, enum machine_mode));\n extern int m68hc11_shift_operator PARAMS((rtx, enum machine_mode));\n extern int m68hc11_unary_operator PARAMS((rtx, enum machine_mode));\n+extern int m68hc11_eq_compare_operator PARAMS((rtx, enum machine_mode));\n extern int non_push_operand PARAMS((rtx, enum machine_mode));\n extern int hard_reg_operand PARAMS((rtx, enum machine_mode));\n extern int soft_reg_operand PARAMS((rtx, enum machine_mode));"}, {"sha": "abada3cc2848d7887b545da74742272745bbf0b8", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebcfdc87f29ba2dcbcb72052999a1795df34c34/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebcfdc87f29ba2dcbcb72052999a1795df34c34/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=cebcfdc87f29ba2dcbcb72052999a1795df34c34", "patch": "@@ -1026,6 +1026,9 @@ d_register_operand (operand, mode)\n      rtx operand;\n      enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n+  if (GET_MODE (operand) != mode && mode != VOIDmode)\n+    return 0;\n+\n   if (GET_CODE (operand) == SUBREG)\n     operand = XEXP (operand, 0);\n \n@@ -1040,6 +1043,9 @@ hard_addr_reg_operand (operand, mode)\n      rtx operand;\n      enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n+  if (GET_MODE (operand) != mode && mode != VOIDmode)\n+    return 0;\n+\n   if (GET_CODE (operand) == SUBREG)\n     operand = XEXP (operand, 0);\n \n@@ -1131,6 +1137,14 @@ symbolic_memory_operand (op, mode)\n     }\n }\n \n+int\n+m68hc11_eq_compare_operator (op, mode)\n+     register rtx op;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n+{\n+  return GET_CODE (op) == EQ || GET_CODE (op) == NE;\n+}\n+\n int\n m68hc11_logical_operator (op, mode)\n      register rtx op;"}, {"sha": "a29f56d7005395844b7af5706866d6700b58d554", "filename": "gcc/config/m68hc11/m68hc11.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebcfdc87f29ba2dcbcb72052999a1795df34c34/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebcfdc87f29ba2dcbcb72052999a1795df34c34/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h?ref=cebcfdc87f29ba2dcbcb72052999a1795df34c34", "patch": "@@ -1665,6 +1665,7 @@ do {                                                                    \\\n {\"m68hc11_non_shift_operator\", {AND, IOR, XOR, PLUS, MINUS}},\t\t\\\n {\"m68hc11_unary_operator\",   {NEG, NOT, SIGN_EXTEND, ZERO_EXTEND}},\t\\\n {\"m68hc11_shift_operator\",   {ASHIFT, ASHIFTRT, LSHIFTRT, ROTATE, ROTATERT}},\\\n+{\"m68hc11_eq_compare_operator\", {EQ, NE}},                              \\\n {\"non_push_operand\",         {SUBREG, REG, MEM}},\t\t\t\\\n {\"reg_or_some_mem_operand\",  {SUBREG, REG, MEM}},\t\t\t\\\n {\"tst_operand\",              {SUBREG, REG, MEM}},\t\t\t\\"}]}