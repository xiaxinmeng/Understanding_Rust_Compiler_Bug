{"sha": "edb4c415dc1288c0137de8fa0cbb8a36376223c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRiNGM0MTVkYzEyODhjMDEzN2RlOGZhMGNiYjhhMzYzNzYyMjNjMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-08-28T01:44:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-08-28T01:44:28Z"}, "message": "c-decl.c (duplicate_decls): Don't set TREE_STATIC or clear DECL_EXTERNAL on a local extern.\n\n        * c-decl.c (duplicate_decls): Don't set TREE_STATIC or clear\n        DECL_EXTERNAL on a local extern.  Don't set DECL_IGNORED_P or\n        TREE_ASM_WRITTEN, either.\n        (finish_decl): Adjust.\n\nFrom-SVN: r36012", "tree": {"sha": "61fc1ad13675eb3e6b0c792709c98b4f16062357", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61fc1ad13675eb3e6b0c792709c98b4f16062357"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edb4c415dc1288c0137de8fa0cbb8a36376223c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edb4c415dc1288c0137de8fa0cbb8a36376223c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edb4c415dc1288c0137de8fa0cbb8a36376223c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edb4c415dc1288c0137de8fa0cbb8a36376223c3/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94dfccd136eece4162a4c78bcc14b3fa61767c0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94dfccd136eece4162a4c78bcc14b3fa61767c0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94dfccd136eece4162a4c78bcc14b3fa61767c0e"}], "stats": {"total": 39, "additions": 19, "deletions": 20}, "files": [{"sha": "14ade14d0c5234487693ebb101c2c9d1b6cc041a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb4c415dc1288c0137de8fa0cbb8a36376223c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb4c415dc1288c0137de8fa0cbb8a36376223c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edb4c415dc1288c0137de8fa0cbb8a36376223c3", "patch": "@@ -1,3 +1,10 @@\n+2000-08-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-decl.c (duplicate_decls): Don't set TREE_STATIC or clear\n+\tDECL_EXTERNAL on a local extern.  Don't set DECL_IGNORED_P or\n+\tTREE_ASM_WRITTEN, either.\n+\t(finish_decl): Adjust.\n+\n 2000-08-28  Philipp Thomas  <pthomas@suse.de>\n \n \t* ABOUT-GCC-NLS: Remove gettext patches from Paul Eggert as"}, {"sha": "5404a4ffbe27b103cd00c251d3def668f5e7e11b", "filename": "gcc/c-decl.c", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb4c415dc1288c0137de8fa0cbb8a36376223c3/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb4c415dc1288c0137de8fa0cbb8a36376223c3/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=edb4c415dc1288c0137de8fa0cbb8a36376223c3", "patch": "@@ -1947,8 +1947,14 @@ duplicate_decls (newdecl, olddecl, different_binding_level)\n     }\n   if (DECL_EXTERNAL (newdecl))\n     {\n-      TREE_STATIC (newdecl) = TREE_STATIC (olddecl);\n-      DECL_EXTERNAL (newdecl) = DECL_EXTERNAL (olddecl);\n+      if (! different_binding_level)\n+\t{\n+\t  /* Don't mess with these flags on local externs; they remain\n+\t     external even if there's a declaration at file scope which\n+\t     isn't.  */\n+\t  TREE_STATIC (newdecl) = TREE_STATIC (olddecl);\n+\t  DECL_EXTERNAL (newdecl) = DECL_EXTERNAL (olddecl);\n+\t}\n       /* An extern decl does not override previous storage class.  */\n       TREE_PUBLIC (newdecl) = TREE_PUBLIC (olddecl);\n       if (! DECL_EXTERNAL (newdecl))\n@@ -2007,19 +2013,7 @@ duplicate_decls (newdecl, olddecl, different_binding_level)\n \t}\n     }\n   if (different_binding_level)\n-    {\n-      /* Don't output a duplicate symbol or debugging information for this\n-\t declaration.\n-\n-\t Do not set TREE_ASM_WRITTEN for a FUNCTION_DECL since we may actually\n-\t just have two declarations without a definition.  VAR_DECLs may need\n-\t the same treatment, I'm not sure.  */\n-      if (TREE_CODE (newdecl) == FUNCTION_DECL)\n-\tDECL_IGNORED_P (newdecl) = 1;\n-      else\n-\tTREE_ASM_WRITTEN (newdecl) = DECL_IGNORED_P (newdecl) = 1;\n-      return 0;\n-    }\n+    return 0;\n \n   /* Copy most of the decl-specific fields of NEWDECL into OLDDECL.\n      But preserve OLDDECL's DECL_UID.  */\n@@ -2370,7 +2364,8 @@ pushdecl (x)\n \t\t      DECL_ARGUMENTS (x) = DECL_ARGUMENTS (oldglobal);\n \t\t      DECL_RESULT (x) = DECL_RESULT (oldglobal);\n \t\t      TREE_ASM_WRITTEN (x) = TREE_ASM_WRITTEN (oldglobal);\n-\t\t      DECL_ABSTRACT_ORIGIN (x) = DECL_ORIGIN (oldglobal);\n+\t\t      DECL_ABSTRACT_ORIGIN (x)\n+\t\t\t= DECL_ABSTRACT_ORIGIN (oldglobal);\n \t\t    }\n \t\t  /* Inner extern decl is built-in if global one is.  */\n \t\t  if (DECL_BUILT_IN (oldglobal))\n@@ -3648,11 +3643,8 @@ finish_decl (decl, init, asmspec_tree)\n \t\t   Also if it is not file scope.\n \t\t   Otherwise, let it through, but if it is not `extern'\n \t\t   then it may cause an error message later.  */\n-\t      /* A duplicate_decls call could have changed an extern\n-\t\t declaration into a file scope one.  This can be detected\n-\t\t by TREE_ASM_WRITTEN being set.  */\n \t\t(DECL_INITIAL (decl) != 0\n-\t\t || (DECL_CONTEXT (decl) != 0 && ! TREE_ASM_WRITTEN (decl)))\n+\t\t || DECL_CONTEXT (decl) != 0)\n \t      :\n \t\t/* An automatic variable with an incomplete type\n \t\t   is an error.  */"}]}