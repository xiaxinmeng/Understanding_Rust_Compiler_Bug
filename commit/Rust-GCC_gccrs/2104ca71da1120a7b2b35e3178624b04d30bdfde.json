{"sha": "2104ca71da1120a7b2b35e3178624b04d30bdfde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEwNGNhNzFkYTExMjBhN2IyYjM1ZTMxNzg2MjRiMDRkMzBiZGZkZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-01-29T00:47:32Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-01-29T00:47:32Z"}, "message": "Fix tests that fail in C++2a mode\n\nThe nested typedefs in std::reference_wrapper are no longer present in\nC++2a mode, so skip the tests that check for them.\n\nThe addition of the [[nodiscard]] attribute to a few functions causes\nsome failures in tests that intentionally ignore the return value.\nCasting the result to void suppresses the new warnings.\n\n\t* testsuite/20_util/reference_wrapper/result_type.cc: Disable for\n\tC++2a.\n\t* testsuite/20_util/reference_wrapper/typedefs-2.cc: Likewise.\n\t* testsuite/20_util/reference_wrapper/typedefs-3.cc: Likewise.\n\t* testsuite/20_util/reference_wrapper/typedefs.cc: Likewise.\n\t* testsuite/30_threads/async/54297.cc: Suppress nodiscard warning.\n\t* testsuite/ext/array_allocator/26875.cc: Likewise.\n\t* testsuite/ext/pool_allocator/allocate_chunk.cc: Likewise.\n\t* testsuite/util/replacement_memory_operators.h: Likewise.\n\t* testsuite/util/testsuite_allocator.h: Likewise.\n\nFrom-SVN: r268355", "tree": {"sha": "38094898f4fce66deb06503640463d2a6c24854c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38094898f4fce66deb06503640463d2a6c24854c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2104ca71da1120a7b2b35e3178624b04d30bdfde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2104ca71da1120a7b2b35e3178624b04d30bdfde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2104ca71da1120a7b2b35e3178624b04d30bdfde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2104ca71da1120a7b2b35e3178624b04d30bdfde/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f48525ded40b968792c4dfd9a7614c3e88129a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f48525ded40b968792c4dfd9a7614c3e88129a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f48525ded40b968792c4dfd9a7614c3e88129a4"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "fc6f7d1a210933db83cad620d78832c42af2a859", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2104ca71da1120a7b2b35e3178624b04d30bdfde", "patch": "@@ -1,5 +1,16 @@\n 2019-01-29  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/20_util/reference_wrapper/result_type.cc: Disable for\n+\tC++2a.\n+\t* testsuite/20_util/reference_wrapper/typedefs-2.cc: Likewise.\n+\t* testsuite/20_util/reference_wrapper/typedefs-3.cc: Likewise.\n+\t* testsuite/20_util/reference_wrapper/typedefs.cc: Likewise.\n+\t* testsuite/30_threads/async/54297.cc: Suppress nodiscard warning.\n+\t* testsuite/ext/array_allocator/26875.cc: Likewise.\n+\t* testsuite/ext/pool_allocator/allocate_chunk.cc: Likewise.\n+\t* testsuite/util/replacement_memory_operators.h: Likewise.\n+\t* testsuite/util/testsuite_allocator.h: Likewise.\n+\n \t* include/std/memory_resource (__pool_resource::_M_unpooled): Use\n \tnormal mode vector, even for debug mode.\n \t* include/std/vector [_GLIBCXX_DEBUG] (_GLIBCXX_STD_C::pmr::vector):"}, {"sha": "7c67283d2b96f0d582b95ad84df23530c386703b", "filename": "libstdc++-v3/testsuite/20_util/reference_wrapper/result_type.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Fresult_type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Fresult_type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Fresult_type.cc?ref=2104ca71da1120a7b2b35e3178624b04d30bdfde", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target c++11 } }\n+// { dg-skip-if \"result_type removed for C++20\" { c++2a } }\n \n // 2010-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "e1aebd1735220ad004cad7e3ec58af10cc35eba7", "filename": "libstdc++-v3/testsuite/20_util/reference_wrapper/typedefs-2.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs-2.cc?ref=2104ca71da1120a7b2b35e3178624b04d30bdfde", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target c++11 } }\n+// { dg-skip-if \"argument_type removed for C++20\" { c++2a } }\n \n // 2010-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "5ca596a10bca4f52a49307f04ed81c81f64712e3", "filename": "libstdc++-v3/testsuite/20_util/reference_wrapper/typedefs-3.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs-3.cc?ref=2104ca71da1120a7b2b35e3178624b04d30bdfde", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target c++11 } }\n+// { dg-skip-if \"argument_type removed for C++20\" { c++2a } }\n \n // Copyright (C) 2011-2019 Free Software Foundation, Inc.\n //"}, {"sha": "1f4c77eb006150fbc6858a79fd4181580a248d0f", "filename": "libstdc++-v3/testsuite/20_util/reference_wrapper/typedefs.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs.cc?ref=2104ca71da1120a7b2b35e3178624b04d30bdfde", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target c++11 } }\n+// { dg-skip-if \"result_type removed for C++20\" { c++2a } }\n \n // Copyright (C) 2008-2019 Free Software Foundation, Inc.\n //"}, {"sha": "654ce40f904f34523df335ffca7d6c080d90e5e2", "filename": "libstdc++-v3/testsuite/30_threads/async/54297.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F54297.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F54297.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F54297.cc?ref=2104ca71da1120a7b2b35e3178624b04d30bdfde", "patch": "@@ -45,5 +45,5 @@ struct Task\n \n int main()\n {\n-  std::async(std::launch::async, Task());\n+  (void) std::async(std::launch::async, Task());\n }"}, {"sha": "e72e3b2e0ef4458c018f5940fdc48c09468b6524", "filename": "libstdc++-v3/testsuite/ext/array_allocator/26875.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F26875.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F26875.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F26875.cc?ref=2104ca71da1120a7b2b35e3178624b04d30bdfde", "patch": "@@ -33,8 +33,8 @@ int main()\n \n   try\n     {\n-      Allocator1.allocate(1);\n-      Allocator2.allocate(1);\n+      (void) Allocator1.allocate(1);\n+      (void) Allocator2.allocate(1);\n     }\n   catch (std::bad_alloc& ex)\n     {"}, {"sha": "b90778c51d4fe6a2c10d249d0ec5243776db3baf", "filename": "libstdc++-v3/testsuite/ext/pool_allocator/allocate_chunk.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpool_allocator%2Fallocate_chunk.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpool_allocator%2Fallocate_chunk.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpool_allocator%2Fallocate_chunk.cc?ref=2104ca71da1120a7b2b35e3178624b04d30bdfde", "patch": "@@ -48,13 +48,13 @@ void test01()\n   using __gnu_cxx::__pool_alloc;\n \n   __pool_alloc<big> alloc_big;\n-  alloc_big.allocate(1);\n+  (void) alloc_big.allocate(1);\n \n   // The constant 20 comes from __pool_alloc_base::_M_refill. See\n   // also __pool_alloc_base::_M_allocate_chunk.\n   __pool_alloc<small> alloc_small;\n   for (unsigned int i = 0; i < 20 * sizeof(big) / sizeof(small) + 1; ++i)\n-    alloc_small.allocate(1);\n+    (void) alloc_small.allocate(1);\n }\n \n int main()"}, {"sha": "fb0b2be7dcf6b61e911331e6fc022790a6f650a8", "filename": "libstdc++-v3/testsuite/util/replacement_memory_operators.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Freplacement_memory_operators.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Freplacement_memory_operators.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Freplacement_memory_operators.h?ref=2104ca71da1120a7b2b35e3178624b04d30bdfde", "patch": "@@ -64,7 +64,7 @@ namespace __gnu_test\n     check_new(Alloc a = Alloc())\n     {\n       __gnu_test::counter::exceptions(false);\n-      a.allocate(10);\n+      (void) a.allocate(10);\n       const bool __b((__gnu_test::counter::count() > 0) == uses_global_new);\n       if (!__b)\n \tthrow std::logic_error(\"counter not incremented\");"}, {"sha": "044b9d5a90f29aea4a9ab684e149448fd3dc5ba0", "filename": "libstdc++-v3/testsuite/util/testsuite_allocator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2104ca71da1120a7b2b35e3178624b04d30bdfde/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h?ref=2104ca71da1120a7b2b35e3178624b04d30bdfde", "patch": "@@ -245,7 +245,7 @@ namespace __gnu_test\n       Alloc a;\n       try\n \t{\n-\t  a.allocate(a.max_size() + 1);\n+\t  (void) a.allocate(a.max_size() + 1);\n \t}\n       catch(std::bad_alloc&)\n \t{"}]}