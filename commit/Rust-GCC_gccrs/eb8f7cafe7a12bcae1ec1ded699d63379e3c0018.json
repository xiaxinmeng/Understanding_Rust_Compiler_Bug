{"sha": "eb8f7cafe7a12bcae1ec1ded699d63379e3c0018", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4ZjdjYWZlN2ExMmJjYWUxZWMxZGVkNjk5ZDYzMzc5ZTNjMDAxOA==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2007-07-12T07:22:06Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2007-07-12T07:22:06Z"}, "message": "splay-tree.h (libi_uhostptr_t, [...]): New types, needed for WIN64 when a long is not wide enough for a pointer.\n\n* splay-tree.h (libi_uhostptr_t, libi_shostptr_t): New types,\n  needed for WIN64 when a long is not wide enough for a pointer.\n  (splay_tree_key, splay_tree_value): Use the new types.\n\nFrom-SVN: r126573", "tree": {"sha": "4603319a33322f4a53fe1155edcc99be54a8b272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4603319a33322f4a53fe1155edcc99be54a8b272"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb8f7cafe7a12bcae1ec1ded699d63379e3c0018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8f7cafe7a12bcae1ec1ded699d63379e3c0018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb8f7cafe7a12bcae1ec1ded699d63379e3c0018", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8f7cafe7a12bcae1ec1ded699d63379e3c0018/comments", "author": null, "committer": null, "parents": [{"sha": "56b6a5fe69d1e0586ec38e16425386ec39449bc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b6a5fe69d1e0586ec38e16425386ec39449bc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b6a5fe69d1e0586ec38e16425386ec39449bc5"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "9700c24fd65581c5b9e9ba35bdd9c2e20aafba33", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8f7cafe7a12bcae1ec1ded699d63379e3c0018/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8f7cafe7a12bcae1ec1ded699d63379e3c0018/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=eb8f7cafe7a12bcae1ec1ded699d63379e3c0018", "patch": "@@ -1,3 +1,9 @@\n+2007-07-12  Kai Tietz   <kai.tietz@onevision.com>\n+\n+\t* splay-tree.h (libi_uhostptr_t, libi_shostptr_t): New types,\n+\tneeded for WIN64 when a long is not wide enough for a pointer.\n+        (splay_tree_key, splay_tree_value): Use the new types.\n+\n 2007-05-07  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* libiberty.h (writeargv): Declare."}, {"sha": "996d362ef83065c880b9b1f4213ce706b5dcaff2", "filename": "include/splay-tree.h", "status": "modified", "additions": 24, "deletions": 16, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8f7cafe7a12bcae1ec1ded699d63379e3c0018/include%2Fsplay-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8f7cafe7a12bcae1ec1ded699d63379e3c0018/include%2Fsplay-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fsplay-tree.h?ref=eb8f7cafe7a12bcae1ec1ded699d63379e3c0018", "patch": "@@ -1,23 +1,23 @@\n /* A splay-tree datatype.  \n-   Copyright 1998, 1999, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright 1998, 1999, 2000, 2002, 2007 Free Software Foundation, Inc.\n    Contributed by Mark Mitchell (mark@markmitchell.com).\n \n-This file is part of GCC.\n+   This file is part of GCC.\n    \n-GCC is free software; you can redistribute it and/or modify it\n-under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n \n-GCC is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n+   GCC is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n \n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street - Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING.  If not, write to\n+   the Free Software Foundation, 51 Franklin Street - Fifth Floor,\n+   Boston, MA 02110-1301, USA.  */\n \n /* For an easily readable description of splay-trees, see:\n \n@@ -36,6 +36,14 @@ extern \"C\" {\n \n #include \"ansidecl.h\"\n \n+#ifndef _WIN64\n+  typedef unsigned long int  libi_uhostptr_t;\n+  typedef long int           libi_shostptr_t;\n+#else\n+  typedef unsigned long long libi_uhostptr_t;\n+  typedef long long          libi_shostptr_t;\n+#endif\n+\n #ifndef GTY\n #define GTY(X)\n #endif\n@@ -44,8 +52,8 @@ extern \"C\" {\n    these types, if necessary.  These types should be sufficiently wide\n    that any pointer or scalar can be cast to these types, and then\n    cast back, without loss of precision.  */\n-typedef unsigned long int splay_tree_key;\n-typedef unsigned long int splay_tree_value;\n+typedef libi_uhostptr_t splay_tree_key;\n+typedef libi_uhostptr_t splay_tree_value;\n \n /* Forward declaration for a node in the tree.  */\n typedef struct splay_tree_node_s *splay_tree_node;"}]}