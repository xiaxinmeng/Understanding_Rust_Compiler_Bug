{"sha": "246cc0600251b3c8e2e237a55270816cdd5a8ad2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ2Y2MwNjAwMjUxYjNjOGUyZTIzN2E1NTI3MDgxNmNkZDVhOGFkMg==", "commit": {"author": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-11-06T20:34:12Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-11-06T20:34:12Z"}, "message": "[AArch64] Fix vqtb[lx][234] on big-endian\n\n2015-11-06  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/\n\t* config/aarch64/aarch64-simd-builtins.def: Update builtins\n\ttables: add tbl3v16qi, qtbl[34]*, tbx4v16qi, qtbx[34]*.\n\t* config/aarch64/aarch64-simd.md (aarch64_tbl3v8qi): Rename to...\n\t(aarch64_tbl3<mode>) ... this, which supports v16qi too.\n\t(aarch64_tbx4v8qi): Rename to...\n\taarch64_tbx4<mode>): ... this.\n\t(aarch64_qtbl3<mode>): New pattern.\n\t(aarch64_qtbx3<mode>): New pattern.\n\t(aarch64_qtbl4<mode>): New pattern.\n\t(aarch64_qtbx4<mode>): New pattern.\n\t* config/aarch64/arm_neon.h (vqtbl2_s8, vqtbl2_u8, vqtbl2_p8)\n\t(vqtbl2q_s8, vqtbl2q_u8, vqtbl2q_p8, vqtbl3_s8, vqtbl3_u8)\n\t(vqtbl3_p8, vqtbl3q_s8, vqtbl3q_u8, vqtbl3q_p8, vqtbl4_s8)\n\t(vqtbl4_u8, vqtbl4_p8, vqtbl4q_s8, vqtbl4q_u8, vqtbl4q_p8)\n\t(vqtbx2_s8, vqtbx2_u8, vqtbx2_p8, vqtbx2q_s8, vqtbx2q_u8)\n\t(vqtbx2q_p8, vqtbx3_s8, vqtbx3_u8, vqtbx3_p8, vqtbx3q_s8)\n\t(vqtbx3q_u8, vqtbx3q_p8, vqtbx4_s8, vqtbx4_u8, vqtbx4_p8)\n\t(vqtbx4q_s8, vqtbx4q_u8, vqtbx4q_p8): Rewrite using builtin\n\tfunctions.\n\n\tgcc/testsuite/\n\t* gcc.target/aarch64/advsimd-intrinsics/vqtbX.c: New test.\n\nFrom-SVN: r229886", "tree": {"sha": "a71f3d8001a740d1cda82e68f8e9052785ed724f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a71f3d8001a740d1cda82e68f8e9052785ed724f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/246cc0600251b3c8e2e237a55270816cdd5a8ad2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246cc0600251b3c8e2e237a55270816cdd5a8ad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/246cc0600251b3c8e2e237a55270816cdd5a8ad2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246cc0600251b3c8e2e237a55270816cdd5a8ad2/comments", "author": null, "committer": null, "parents": [{"sha": "a881fb0c2c9efa658270e6ba08fbcf4f02a0f057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a881fb0c2c9efa658270e6ba08fbcf4f02a0f057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a881fb0c2c9efa658270e6ba08fbcf4f02a0f057"}], "stats": {"total": 938, "additions": 486, "deletions": 452}, "files": [{"sha": "3fe6742545bfb844fd151ff74e231e4e5ddb3072", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/246cc0600251b3c8e2e237a55270816cdd5a8ad2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/246cc0600251b3c8e2e237a55270816cdd5a8ad2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=246cc0600251b3c8e2e237a55270816cdd5a8ad2", "patch": "@@ -1,3 +1,25 @@\n+2015-11-06  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/aarch64/aarch64-simd-builtins.def: Update builtins\n+\ttables: add tbl3v16qi, qtbl[34]*, tbx4v16qi, qtbx[34]*.\n+\t* config/aarch64/aarch64-simd.md (aarch64_tbl3v8qi): Rename to...\n+\t(aarch64_tbl3<mode>) ... this, which supports v16qi too.\n+\t(aarch64_tbx4v8qi): Rename to...\n+\taarch64_tbx4<mode>): ... this.\n+\t(aarch64_qtbl3<mode>): New pattern.\n+\t(aarch64_qtbx3<mode>): New pattern.\n+\t(aarch64_qtbl4<mode>): New pattern.\n+\t(aarch64_qtbx4<mode>): New pattern.\n+\t* config/aarch64/arm_neon.h (vqtbl2_s8, vqtbl2_u8, vqtbl2_p8)\n+\t(vqtbl2q_s8, vqtbl2q_u8, vqtbl2q_p8, vqtbl3_s8, vqtbl3_u8)\n+\t(vqtbl3_p8, vqtbl3q_s8, vqtbl3q_u8, vqtbl3q_p8, vqtbl4_s8)\n+\t(vqtbl4_u8, vqtbl4_p8, vqtbl4q_s8, vqtbl4q_u8, vqtbl4q_p8)\n+\t(vqtbx2_s8, vqtbx2_u8, vqtbx2_p8, vqtbx2q_s8, vqtbx2q_u8)\n+\t(vqtbx2q_p8, vqtbx3_s8, vqtbx3_u8, vqtbx3_p8, vqtbx3q_s8)\n+\t(vqtbx3q_u8, vqtbx3q_p8, vqtbx4_s8, vqtbx4_u8, vqtbx4_p8)\n+\t(vqtbx4q_s8, vqtbx4q_u8, vqtbx4q_p8): Rewrite using builtin\n+\tfunctions.\n+\n 2015-11-06  Mike Stump  <mikestump@comcast.net>\n \n \tPR debug/66728"}, {"sha": "aad66b134ef740e8d5372a850ec2a7601454bc61", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/246cc0600251b3c8e2e237a55270816cdd5a8ad2/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/246cc0600251b3c8e2e237a55270816cdd5a8ad2/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=246cc0600251b3c8e2e237a55270816cdd5a8ad2", "patch": "@@ -408,8 +408,26 @@\n   VAR1 (BINOPP, crypto_pmull, 0, di)\n   VAR1 (BINOPP, crypto_pmull, 0, v2di)\n \n-  /* Implemented by aarch64_tbl3v8qi.  */\n+  /* Implemented by aarch64_tbl3<mode>.  */\n   VAR1 (BINOP, tbl3, 0, v8qi)\n+  VAR1 (BINOP, tbl3, 0, v16qi)\n \n-  /* Implemented by aarch64_tbx4v8qi.  */\n+  /* Implemented by aarch64_qtbl3<mode>.  */\n+  VAR1 (BINOP, qtbl3, 0, v8qi)\n+  VAR1 (BINOP, qtbl3, 0, v16qi)\n+\n+  /* Implemented by aarch64_qtbl4<mode>.  */\n+  VAR1 (BINOP, qtbl4, 0, v8qi)\n+  VAR1 (BINOP, qtbl4, 0, v16qi)\n+\n+  /* Implemented by aarch64_tbx4<mode>.  */\n   VAR1 (TERNOP, tbx4, 0, v8qi)\n+  VAR1 (TERNOP, tbx4, 0, v16qi)\n+\n+  /* Implemented by aarch64_qtbx3<mode>.  */\n+  VAR1 (TERNOP, qtbx3, 0, v8qi)\n+  VAR1 (TERNOP, qtbx3, 0, v16qi)\n+\n+  /* Implemented by aarch64_qtbx4<mode>.  */\n+  VAR1 (TERNOP, qtbx4, 0, v8qi)\n+  VAR1 (TERNOP, qtbx4, 0, v16qi)"}, {"sha": "0fb813421283e9ab5fc2bf3cf2e63ccfc4a96c03", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 56, "deletions": 10, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/246cc0600251b3c8e2e237a55270816cdd5a8ad2/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/246cc0600251b3c8e2e237a55270816cdd5a8ad2/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=246cc0600251b3c8e2e237a55270816cdd5a8ad2", "patch": "@@ -4816,24 +4816,70 @@\n   [(set_attr \"type\" \"neon_tbl2_q\")]\n )\n \n-(define_insn \"aarch64_tbl3v8qi\"\n-  [(set (match_operand:V8QI 0 \"register_operand\" \"=w\")\n-\t(unspec:V8QI [(match_operand:OI 1 \"register_operand\" \"w\")\n-\t\t      (match_operand:V8QI 2 \"register_operand\" \"w\")]\n+(define_insn \"aarch64_tbl3<mode>\"\n+  [(set (match_operand:VB 0 \"register_operand\" \"=w\")\n+\t(unspec:VB [(match_operand:OI 1 \"register_operand\" \"w\")\n+\t\t      (match_operand:VB 2 \"register_operand\" \"w\")]\n \t\t      UNSPEC_TBL))]\n   \"TARGET_SIMD\"\n-  \"tbl\\\\t%S0.8b, {%S1.16b - %T1.16b}, %S2.8b\"\n+  \"tbl\\\\t%S0.<Vbtype>, {%S1.16b - %T1.16b}, %S2.<Vbtype>\"\n   [(set_attr \"type\" \"neon_tbl3\")]\n )\n \n-(define_insn \"aarch64_tbx4v8qi\"\n-  [(set (match_operand:V8QI 0 \"register_operand\" \"=w\")\n-\t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"0\")\n+(define_insn \"aarch64_tbx4<mode>\"\n+  [(set (match_operand:VB 0 \"register_operand\" \"=w\")\n+\t(unspec:VB [(match_operand:VB 1 \"register_operand\" \"0\")\n \t\t      (match_operand:OI 2 \"register_operand\" \"w\")\n-\t\t      (match_operand:V8QI 3 \"register_operand\" \"w\")]\n+\t\t      (match_operand:VB 3 \"register_operand\" \"w\")]\n+\t\t      UNSPEC_TBX))]\n+  \"TARGET_SIMD\"\n+  \"tbx\\\\t%S0.<Vbtype>, {%S2.16b - %T2.16b}, %S3.<Vbtype>\"\n+  [(set_attr \"type\" \"neon_tbl4\")]\n+)\n+\n+;; Three source registers.\n+\n+(define_insn \"aarch64_qtbl3<mode>\"\n+  [(set (match_operand:VB 0 \"register_operand\" \"=w\")\n+\t(unspec:VB [(match_operand:CI 1 \"register_operand\" \"w\")\n+\t\t      (match_operand:VB 2 \"register_operand\" \"w\")]\n+\t\t      UNSPEC_TBL))]\n+  \"TARGET_SIMD\"\n+  \"tbl\\\\t%S0.<Vbtype>, {%S1.16b - %U1.16b}, %S2.<Vbtype>\"\n+  [(set_attr \"type\" \"neon_tbl3\")]\n+)\n+\n+(define_insn \"aarch64_qtbx3<mode>\"\n+  [(set (match_operand:VB 0 \"register_operand\" \"=w\")\n+\t(unspec:VB [(match_operand:VB 1 \"register_operand\" \"0\")\n+\t\t      (match_operand:CI 2 \"register_operand\" \"w\")\n+\t\t      (match_operand:VB 3 \"register_operand\" \"w\")]\n+\t\t      UNSPEC_TBX))]\n+  \"TARGET_SIMD\"\n+  \"tbx\\\\t%S0.<Vbtype>, {%S2.16b - %U2.16b}, %S3.<Vbtype>\"\n+  [(set_attr \"type\" \"neon_tbl3\")]\n+)\n+\n+;; Four source registers.\n+\n+(define_insn \"aarch64_qtbl4<mode>\"\n+  [(set (match_operand:VB 0 \"register_operand\" \"=w\")\n+\t(unspec:VB [(match_operand:XI 1 \"register_operand\" \"w\")\n+\t\t      (match_operand:VB 2 \"register_operand\" \"w\")]\n+\t\t      UNSPEC_TBL))]\n+  \"TARGET_SIMD\"\n+  \"tbl\\\\t%S0.<Vbtype>, {%S1.16b - %V1.16b}, %S2.<Vbtype>\"\n+  [(set_attr \"type\" \"neon_tbl4\")]\n+)\n+\n+(define_insn \"aarch64_qtbx4<mode>\"\n+  [(set (match_operand:VB 0 \"register_operand\" \"=w\")\n+\t(unspec:VB [(match_operand:VB 1 \"register_operand\" \"0\")\n+\t\t      (match_operand:XI 2 \"register_operand\" \"w\")\n+\t\t      (match_operand:VB 3 \"register_operand\" \"w\")]\n \t\t      UNSPEC_TBX))]\n   \"TARGET_SIMD\"\n-  \"tbx\\\\t%S0.8b, {%S2.16b - %T2.16b}, %S3.8b\"\n+  \"tbx\\\\t%S0.<Vbtype>, {%S2.16b - %V2.16b}, %S3.<Vbtype>\"\n   [(set_attr \"type\" \"neon_tbl4\")]\n )\n "}, {"sha": "7f69043d8a759cbb5b08ccb0eb98f110b9856a10", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 383, "deletions": 439, "changes": 822, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/246cc0600251b3c8e2e237a55270816cdd5a8ad2/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/246cc0600251b3c8e2e237a55270816cdd5a8ad2/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=246cc0600251b3c8e2e237a55270816cdd5a8ad2", "patch": "@@ -10622,224 +10622,6 @@ vqtbl1q_u8 (uint8x16_t a, uint8x16_t b)\n   return result;\n }\n \n-__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n-vqtbl2_s8 (int8x16x2_t tab, uint8x8_t idx)\n-{\n-  int8x8_t result;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbl %0.8b, {v16.16b, v17.16b}, %2.8b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vqtbl2_u8 (uint8x16x2_t tab, uint8x8_t idx)\n-{\n-  uint8x8_t result;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbl %0.8b, {v16.16b, v17.16b}, %2.8b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n-vqtbl2_p8 (poly8x16x2_t tab, uint8x8_t idx)\n-{\n-  poly8x8_t result;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbl %0.8b, {v16.16b, v17.16b}, %2.8b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n-vqtbl2q_s8 (int8x16x2_t tab, uint8x16_t idx)\n-{\n-  int8x16_t result;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbl %0.16b, {v16.16b, v17.16b}, %2.16b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vqtbl2q_u8 (uint8x16x2_t tab, uint8x16_t idx)\n-{\n-  uint8x16_t result;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbl %0.16b, {v16.16b, v17.16b}, %2.16b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n-vqtbl2q_p8 (poly8x16x2_t tab, uint8x16_t idx)\n-{\n-  poly8x16_t result;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbl %0.16b, {v16.16b, v17.16b}, %2.16b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n-vqtbl3_s8 (int8x16x3_t tab, uint8x8_t idx)\n-{\n-  int8x8_t result;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbl %0.8b, {v16.16b - v18.16b}, %2.8b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vqtbl3_u8 (uint8x16x3_t tab, uint8x8_t idx)\n-{\n-  uint8x8_t result;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbl %0.8b, {v16.16b - v18.16b}, %2.8b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n-vqtbl3_p8 (poly8x16x3_t tab, uint8x8_t idx)\n-{\n-  poly8x8_t result;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbl %0.8b, {v16.16b - v18.16b}, %2.8b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n-vqtbl3q_s8 (int8x16x3_t tab, uint8x16_t idx)\n-{\n-  int8x16_t result;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbl %0.16b, {v16.16b - v18.16b}, %2.16b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vqtbl3q_u8 (uint8x16x3_t tab, uint8x16_t idx)\n-{\n-  uint8x16_t result;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbl %0.16b, {v16.16b - v18.16b}, %2.16b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n-vqtbl3q_p8 (poly8x16x3_t tab, uint8x16_t idx)\n-{\n-  poly8x16_t result;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbl %0.16b, {v16.16b - v18.16b}, %2.16b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n-vqtbl4_s8 (int8x16x4_t tab, uint8x8_t idx)\n-{\n-  int8x8_t result;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbl %0.8b, {v16.16b - v19.16b}, %2.8b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vqtbl4_u8 (uint8x16x4_t tab, uint8x8_t idx)\n-{\n-  uint8x8_t result;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbl %0.8b, {v16.16b - v19.16b}, %2.8b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n-vqtbl4_p8 (poly8x16x4_t tab, uint8x8_t idx)\n-{\n-  poly8x8_t result;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbl %0.8b, {v16.16b - v19.16b}, %2.8b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-\n-__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n-vqtbl4q_s8 (int8x16x4_t tab, uint8x16_t idx)\n-{\n-  int8x16_t result;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbl %0.16b, {v16.16b - v19.16b}, %2.16b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vqtbl4q_u8 (uint8x16x4_t tab, uint8x16_t idx)\n-{\n-  uint8x16_t result;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbl %0.16b, {v16.16b - v19.16b}, %2.16b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n-vqtbl4q_p8 (poly8x16x4_t tab, uint8x16_t idx)\n-{\n-  poly8x16_t result;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbl %0.16b, {v16.16b - v19.16b}, %2.16b\\n\\t\"\n-\t   :\"=w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-\n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vqtbx1_s8 (int8x8_t r, int8x16_t tab, uint8x8_t idx)\n {\n@@ -10906,227 +10688,6 @@ vqtbx1q_p8 (poly8x16_t r, poly8x16_t tab, uint8x16_t idx)\n   return result;\n }\n \n-__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n-vqtbx2_s8 (int8x8_t r, int8x16x2_t tab, uint8x8_t idx)\n-{\n-  int8x8_t result = r;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbx %0.8b, {v16.16b, v17.16b}, %2.8b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vqtbx2_u8 (uint8x8_t r, uint8x16x2_t tab, uint8x8_t idx)\n-{\n-  uint8x8_t result = r;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbx %0.8b, {v16.16b, v17.16b}, %2.8b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n-vqtbx2_p8 (poly8x8_t r, poly8x16x2_t tab, uint8x8_t idx)\n-{\n-  poly8x8_t result = r;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbx %0.8b, {v16.16b, v17.16b}, %2.8b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-\n-__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n-vqtbx2q_s8 (int8x16_t r, int8x16x2_t tab, uint8x16_t idx)\n-{\n-  int8x16_t result = r;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbx %0.16b, {v16.16b, v17.16b}, %2.16b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vqtbx2q_u8 (uint8x16_t r, uint8x16x2_t tab, uint8x16_t idx)\n-{\n-  uint8x16_t result = r;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbx %0.16b, {v16.16b, v17.16b}, %2.16b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n-vqtbx2q_p8 (poly8x16_t r, poly8x16x2_t tab, uint8x16_t idx)\n-{\n-  poly8x16_t result = r;\n-  __asm__ (\"ld1 {v16.16b, v17.16b}, %1\\n\\t\"\n-\t   \"tbx %0.16b, {v16.16b, v17.16b}, %2.16b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\");\n-  return result;\n-}\n-\n-\n-__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n-vqtbx3_s8 (int8x8_t r, int8x16x3_t tab, uint8x8_t idx)\n-{\n-  int8x8_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbx %0.8b, {v16.16b - v18.16b}, %2.8b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vqtbx3_u8 (uint8x8_t r, uint8x16x3_t tab, uint8x8_t idx)\n-{\n-  uint8x8_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbx %0.8b, {v16.16b - v18.16b}, %2.8b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n-vqtbx3_p8 (poly8x8_t r, poly8x16x3_t tab, uint8x8_t idx)\n-{\n-  poly8x8_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbx %0.8b, {v16.16b - v18.16b}, %2.8b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-\n-__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n-vqtbx3q_s8 (int8x16_t r, int8x16x3_t tab, uint8x16_t idx)\n-{\n-  int8x16_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbx %0.16b, {v16.16b - v18.16b}, %2.16b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vqtbx3q_u8 (uint8x16_t r, uint8x16x3_t tab, uint8x16_t idx)\n-{\n-  uint8x16_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbx %0.16b, {v16.16b - v18.16b}, %2.16b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n-vqtbx3q_p8 (poly8x16_t r, poly8x16x3_t tab, uint8x16_t idx)\n-{\n-  poly8x16_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v18.16b}, %1\\n\\t\"\n-\t   \"tbx %0.16b, {v16.16b - v18.16b}, %2.16b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\");\n-  return result;\n-}\n-\n-\n-__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n-vqtbx4_s8 (int8x8_t r, int8x16x4_t tab, uint8x8_t idx)\n-{\n-  int8x8_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbx %0.8b, {v16.16b - v19.16b}, %2.8b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vqtbx4_u8 (uint8x8_t r, uint8x16x4_t tab, uint8x8_t idx)\n-{\n-  uint8x8_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbx %0.8b, {v16.16b - v19.16b}, %2.8b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n-vqtbx4_p8 (poly8x8_t r, poly8x16x4_t tab, uint8x8_t idx)\n-{\n-  poly8x8_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbx %0.8b, {v16.16b - v19.16b}, %2.8b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-\n-__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n-vqtbx4q_s8 (int8x16_t r, int8x16x4_t tab, uint8x16_t idx)\n-{\n-  int8x16_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbx %0.16b, {v16.16b - v19.16b}, %2.16b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vqtbx4q_u8 (uint8x16_t r, uint8x16x4_t tab, uint8x16_t idx)\n-{\n-  uint8x16_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbx %0.16b, {v16.16b - v19.16b}, %2.16b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n-vqtbx4q_p8 (poly8x16_t r, poly8x16x4_t tab, uint8x16_t idx)\n-{\n-  poly8x16_t result = r;\n-  __asm__ (\"ld1 {v16.16b - v19.16b}, %1\\n\\t\"\n-\t   \"tbx %0.16b, {v16.16b - v19.16b}, %2.16b\\n\\t\"\n-\t   :\"+w\"(result)\n-\t   :\"Q\"(tab),\"w\"(idx)\n-\t   :\"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\n-  return result;\n-}\n-\n /* V7 legacy table intrinsics.  */\n \n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n@@ -20714,6 +20275,389 @@ vqsubd_u64 (uint64_t __a, uint64_t __b)\n   return __builtin_aarch64_uqsubdi_uuu (__a, __b);\n }\n \n+/* vqtbl2 */\n+\n+__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n+vqtbl2_s8 (int8x16x2_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[1], 1);\n+  return __builtin_aarch64_tbl3v8qi (__o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n+vqtbl2_u8 (uint8x16x2_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  return (uint8x8_t)__builtin_aarch64_tbl3v8qi (__o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n+vqtbl2_p8 (poly8x16x2_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  return (poly8x8_t)__builtin_aarch64_tbl3v8qi (__o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n+vqtbl2q_s8 (int8x16x2_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  return __builtin_aarch64_tbl3v16qi (__o, (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n+vqtbl2q_u8 (uint8x16x2_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  return (uint8x16_t)__builtin_aarch64_tbl3v16qi (__o, (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n+vqtbl2q_p8 (poly8x16x2_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  return (poly8x16_t)__builtin_aarch64_tbl3v16qi (__o, (int8x16_t)idx);\n+}\n+\n+/* vqtbl3 */\n+\n+__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n+vqtbl3_s8 (int8x16x3_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  return __builtin_aarch64_qtbl3v8qi (__o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n+vqtbl3_u8 (uint8x16x3_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  return (uint8x8_t)__builtin_aarch64_qtbl3v8qi (__o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n+vqtbl3_p8 (poly8x16x3_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  return (poly8x8_t)__builtin_aarch64_qtbl3v8qi (__o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n+vqtbl3q_s8 (int8x16x3_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  return __builtin_aarch64_qtbl3v16qi (__o, (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n+vqtbl3q_u8 (uint8x16x3_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  return (uint8x16_t)__builtin_aarch64_qtbl3v16qi (__o, (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n+vqtbl3q_p8 (poly8x16x3_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  return (poly8x16_t)__builtin_aarch64_qtbl3v16qi (__o, (int8x16_t)idx);\n+}\n+\n+/* vqtbl4 */\n+\n+__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n+vqtbl4_s8 (int8x16x4_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);\n+  return __builtin_aarch64_qtbl4v8qi (__o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n+vqtbl4_u8 (uint8x16x4_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);\n+  return (uint8x8_t)__builtin_aarch64_qtbl4v8qi (__o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n+vqtbl4_p8 (poly8x16x4_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);\n+  return (poly8x8_t)__builtin_aarch64_qtbl4v8qi (__o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n+vqtbl4q_s8 (int8x16x4_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);\n+  return __builtin_aarch64_qtbl4v16qi (__o, (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n+vqtbl4q_u8 (uint8x16x4_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);\n+  return (uint8x16_t)__builtin_aarch64_qtbl4v16qi (__o, (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n+vqtbl4q_p8 (poly8x16x4_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);\n+  return (poly8x16_t)__builtin_aarch64_qtbl4v16qi (__o, (int8x16_t)idx);\n+}\n+\n+\n+/* vqtbx2 */\n+__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n+vqtbx2_s8 (int8x8_t r, int8x16x2_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[1], 1);\n+  return __builtin_aarch64_tbx4v8qi (r, __o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n+vqtbx2_u8 (uint8x8_t r, uint8x16x2_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  return (uint8x8_t)__builtin_aarch64_tbx4v8qi ((int8x8_t)r, __o,\n+\t\t\t\t\t\t(int8x8_t)idx);\n+}\n+\n+__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n+vqtbx2_p8 (poly8x8_t r, poly8x16x2_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  return (poly8x8_t)__builtin_aarch64_tbx4v8qi ((int8x8_t)r, __o,\n+\t\t\t\t\t\t(int8x8_t)idx);\n+}\n+\n+__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n+vqtbx2q_s8 (int8x16_t r, int8x16x2_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[1], 1);\n+  return __builtin_aarch64_tbx4v16qi (r, __o, (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n+vqtbx2q_u8 (uint8x16_t r, uint8x16x2_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  return (uint8x16_t)__builtin_aarch64_tbx4v16qi ((int8x16_t)r, __o,\n+\t\t\t\t\t\t  (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n+vqtbx2q_p8 (poly8x16_t r, poly8x16x2_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_oi __o;\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  return (poly8x16_t)__builtin_aarch64_tbx4v16qi ((int8x16_t)r, __o,\n+\t\t\t\t\t\t  (int8x16_t)idx);\n+}\n+\n+/* vqtbx3 */\n+__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n+vqtbx3_s8 (int8x8_t r, int8x16x3_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[2], 2);\n+  return __builtin_aarch64_qtbx3v8qi (r, __o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n+vqtbx3_u8 (uint8x8_t r, uint8x16x3_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  return (uint8x8_t)__builtin_aarch64_qtbx3v8qi ((int8x8_t)r, __o,\n+\t\t\t\t\t\t (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n+vqtbx3_p8 (poly8x8_t r, poly8x16x3_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  return (poly8x8_t)__builtin_aarch64_qtbx3v8qi ((int8x8_t)r, __o,\n+\t\t\t\t\t\t (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n+vqtbx3q_s8 (int8x16_t r, int8x16x3_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[2], 2);\n+  return __builtin_aarch64_qtbx3v16qi (r, __o, (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n+vqtbx3q_u8 (uint8x16_t r, uint8x16x3_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  return (uint8x16_t)__builtin_aarch64_qtbx3v16qi ((int8x16_t)r, __o,\n+\t\t\t\t\t\t   (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n+vqtbx3q_p8 (poly8x16_t r, poly8x16x3_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_ci __o;\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  return (poly8x16_t)__builtin_aarch64_qtbx3v16qi ((int8x16_t)r, __o,\n+\t\t\t\t\t\t   (int8x16_t)idx);\n+}\n+\n+/* vqtbx4 */\n+\n+__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n+vqtbx4_s8 (int8x8_t r, int8x16x4_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[3], 3);\n+  return __builtin_aarch64_qtbx4v8qi (r, __o, (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n+vqtbx4_u8 (uint8x8_t r, uint8x16x4_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);\n+  return (uint8x8_t)__builtin_aarch64_qtbx4v8qi ((int8x8_t)r, __o,\n+\t\t\t\t\t\t (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n+vqtbx4_p8 (poly8x8_t r, poly8x16x4_t tab, uint8x8_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);\n+  return (poly8x8_t)__builtin_aarch64_qtbx4v8qi ((int8x8_t)r, __o,\n+\t\t\t\t\t\t (int8x8_t)idx);\n+}\n+\n+__extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n+vqtbx4q_s8 (int8x16_t r, int8x16x4_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[3], 3);\n+  return __builtin_aarch64_qtbx4v16qi (r, __o, (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n+vqtbx4q_u8 (uint8x16_t r, uint8x16x4_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);\n+  return (uint8x16_t)__builtin_aarch64_qtbx4v16qi ((int8x16_t)r, __o,\n+\t\t\t\t\t\t   (int8x16_t)idx);\n+}\n+\n+__extension__ static __inline poly8x16_t __attribute__ ((__always_inline__))\n+vqtbx4q_p8 (poly8x16_t r, poly8x16x4_t tab, uint8x16_t idx)\n+{\n+  __builtin_aarch64_simd_xi __o;\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);\n+  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);\n+  return (poly8x16_t)__builtin_aarch64_qtbx4v16qi ((int8x16_t)r, __o,\n+\t\t\t\t\t\t   (int8x16_t)idx);\n+}\n+\n /* vrbit  */\n \n __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))"}, {"sha": "564b45a9d8309a8e854306e78b87e1c424fc88f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/246cc0600251b3c8e2e237a55270816cdd5a8ad2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/246cc0600251b3c8e2e237a55270816cdd5a8ad2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=246cc0600251b3c8e2e237a55270816cdd5a8ad2", "patch": "@@ -1,3 +1,7 @@\n+2015-11-06  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqtbX.c: New test.\n+\n 2015-11-06  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/plugin/diagnostic-test-show-locus-bw.c: New file.\n@@ -17,7 +21,7 @@\n \n \t* gfortran.dg/goacc/combined_loop.f90: XFAIL.\n \n-2015-11-07  Jan Hubicka  <hubicka@ucw.cz>\n+2015-11-06  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/68057\n \tPR ipa/68220"}]}