{"sha": "af9fb8ab08852b461447e7af6d8f50edb6e16ef9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY5ZmI4YWIwODg1MmI0NjE0NDdlN2FmNmQ4ZjUwZWRiNmUxNmVmOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-12-30T01:21:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-12-30T01:21:50Z"}, "message": "i386.md (allocate_stack_worker): Use different pattern for pre and post reload expansion.\n\n\n\t* i386.md (allocate_stack_worker):  Use different pattern for pre and\n\tpost reload expansion.\n\t(allocate_stack_worker_1, allocate_stack_worker_rex64): Use\n\tmatch_scratch.\n\t(allocate_stack_worder_1_postreload,\n\tallocate_stack_worker_rex64_postreload): New.\n\nFrom-SVN: r75220", "tree": {"sha": "4b65f21a1036dfdc24c4d8f9897eb33c4d00ae38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b65f21a1036dfdc24c4d8f9897eb33c4d00ae38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af9fb8ab08852b461447e7af6d8f50edb6e16ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af9fb8ab08852b461447e7af6d8f50edb6e16ef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af9fb8ab08852b461447e7af6d8f50edb6e16ef9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af9fb8ab08852b461447e7af6d8f50edb6e16ef9/comments", "author": null, "committer": null, "parents": [{"sha": "21b75a730aa1fe6d449a9114fca0f6c98d9b7653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21b75a730aa1fe6d449a9114fca0f6c98d9b7653", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21b75a730aa1fe6d449a9114fca0f6c98d9b7653"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "a33a7c57bba242f97ec48d058e6f82f9886ac367", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af9fb8ab08852b461447e7af6d8f50edb6e16ef9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af9fb8ab08852b461447e7af6d8f50edb6e16ef9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af9fb8ab08852b461447e7af6d8f50edb6e16ef9", "patch": "@@ -1,3 +1,12 @@\n+2003-12-30  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (allocate_stack_worker):  Use different pattern for pre and\n+\tpost reload expansion.\n+\t(allocate_stack_worker_1, allocate_stack_worker_rex64): Use\n+\tmatch_scratch.\n+\t(allocate_stack_worder_1_postreload,\n+\tallocate_stack_worker_rex64_postreload): New.\n+\n 2003-12-29  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* builtins.c (expand_builtin_apply_args_1): Add pretend args size"}, {"sha": "8b32c5e014c9253375b590b8b77def91b0037334", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af9fb8ab08852b461447e7af6d8f50edb6e16ef9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af9fb8ab08852b461447e7af6d8f50edb6e16ef9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=af9fb8ab08852b461447e7af6d8f50edb6e16ef9", "patch": "@@ -17168,33 +17168,61 @@\n   [(match_operand:SI 0 \"register_operand\" \"\")]\n   \"TARGET_STACK_PROBE\"\n {\n-  if (TARGET_64BIT)\n-    emit_insn (gen_allocate_stack_worker_rex64 (operands[0]));\n+  if (reload_completed)\n+    {\n+      if (TARGET_64BIT)\n+\temit_insn (gen_allocate_stack_worker_rex64_postreload (operands[0]));\n+      else\n+\temit_insn (gen_allocate_stack_worker_postreload (operands[0]));\n+    }\n   else\n-    emit_insn (gen_allocate_stack_worker_1 (operands[0]));\n+    {\n+      if (TARGET_64BIT)\n+\temit_insn (gen_allocate_stack_worker_rex64 (operands[0]));\n+      else\n+\temit_insn (gen_allocate_stack_worker_1 (operands[0]));\n+    }\n   DONE;\n })\n \n (define_insn \"allocate_stack_worker_1\"\n   [(unspec:SI [(match_operand:SI 0 \"register_operand\" \"a\")] UNSPEC_STACK_PROBE)\n    (set (reg:SI 7) (minus:SI (reg:SI 7) (match_dup 0)))\n-   (clobber (match_dup 0))\n+   (clobber (match_scratch:SI 1 \"=0\"))\n    (clobber (reg:CC 17))]\n   \"!TARGET_64BIT && TARGET_STACK_PROBE\"\n   \"call\\t__alloca\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"5\")])\n \n+(define_expand \"allocate_stack_worker_postreload\"\n+  [(parallel [(unspec:SI [(match_operand:SI 0 \"register_operand\" \"a\")]\n+\t\t\t   UNSPEC_STACK_PROBE)\n+\t      (set (reg:SI 7) (minus:SI (reg:SI 7) (match_dup 0)))\n+\t      (clobber (match_dup 0))\n+\t      (clobber (reg:CC 17))])]\n+  \"\"\n+  \"\")\n+\n (define_insn \"allocate_stack_worker_rex64\"\n   [(unspec:DI [(match_operand:DI 0 \"register_operand\" \"a\")] UNSPEC_STACK_PROBE)\n    (set (reg:DI 7) (minus:DI (reg:DI 7) (match_dup 0)))\n-   (clobber (match_dup 0))\n+   (clobber (match_scratch:DI 1 \"=0\"))\n    (clobber (reg:CC 17))]\n   \"TARGET_64BIT && TARGET_STACK_PROBE\"\n   \"call\\t__alloca\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"5\")])\n \n+(define_expand \"allocate_stack_worker_rex64_postreload\"\n+  [(parallel [(unspec:DI [(match_operand:DI 0 \"register_operand\" \"a\")]\n+\t\t\t   UNSPEC_STACK_PROBE)\n+\t      (set (reg:DI 7) (minus:DI (reg:DI 7) (match_dup 0)))\n+\t      (clobber (match_dup 0))\n+\t      (clobber (reg:CC 17))])]\n+  \"\"\n+  \"\")\n+\n (define_expand \"allocate_stack\"\n   [(parallel [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t\t   (minus:SI (reg:SI 7)"}]}