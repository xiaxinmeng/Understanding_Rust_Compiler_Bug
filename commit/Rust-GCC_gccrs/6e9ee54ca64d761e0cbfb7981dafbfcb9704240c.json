{"sha": "6e9ee54ca64d761e0cbfb7981dafbfcb9704240c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU5ZWU1NGNhNjRkNzYxZTBjYmZiNzk4MWRhZmJmY2I5NzA0MjQwYw==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-08-09T15:09:41Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-08-09T15:09:41Z"}, "message": "mmix.h (REGISTER_MOVE_COST): Remove macro.\n\n\t* config/mmix/mmix.h (REGISTER_MOVE_COST): Remove macro.\n\t* config/mmix/mmix-protos.h (mmix_register_move_cost): Remove.\n\t* config/mmix/mmix.c (mmix_register_move_cost): Make static.\n\tChange 'from' and 'to' arguments type to reg_class_t.\n\t(TARGET_REGISTER_MOVE_COST): Define.\n\nFrom-SVN: r177600", "tree": {"sha": "e3d25a25759a060ac01da2548173d0c08a9b038f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3d25a25759a060ac01da2548173d0c08a9b038f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c/comments", "author": null, "committer": null, "parents": [{"sha": "394b15208dc632c744257ca1ea628568d6811d42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/394b15208dc632c744257ca1ea628568d6811d42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/394b15208dc632c744257ca1ea628568d6811d42"}], "stats": {"total": 43, "additions": 20, "deletions": 23}, "files": [{"sha": "a47ca453032726530d28442214caf099c20c20cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e9ee54ca64d761e0cbfb7981dafbfcb9704240c", "patch": "@@ -1,3 +1,11 @@\n+2011-08-09  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/mmix/mmix.h (REGISTER_MOVE_COST): Remove macro.\n+\t* config/mmix/mmix-protos.h (mmix_register_move_cost): Remove.\n+\t* config/mmix/mmix.c (mmix_register_move_cost): Make static.\n+\tChange 'from' and 'to' arguments type to reg_class_t.\n+\t(TARGET_REGISTER_MOVE_COST): Define.\n+\n 2011-08-09  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/50026"}, {"sha": "4e8c338b80c1698a17d4e4c26f47f23eab109023", "filename": "gcc/config/mmix/mmix-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h?ref=6e9ee54ca64d761e0cbfb7981dafbfcb9704240c", "patch": "@@ -26,8 +26,6 @@ extern int mmix_starting_frame_offset (void);\n extern int mmix_function_arg_regno_p (int, int);\n extern void mmix_function_profiler (FILE *, int);\n extern int mmix_reversible_cc_mode (enum machine_mode);\n-extern int mmix_register_move_cost\n-  (enum machine_mode, enum reg_class, enum reg_class);\n extern const char *mmix_text_section_asm_op (void);\n extern const char *mmix_data_section_asm_op (void);\n extern void mmix_output_quoted_string (FILE *, const char *, int);"}, {"sha": "f249a66081cb98790d0219a8bcfee50a14667773", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=6e9ee54ca64d761e0cbfb7981dafbfcb9704240c", "patch": "@@ -141,6 +141,8 @@ static void mmix_setup_incoming_varargs\n static void mmix_file_start (void);\n static void mmix_file_end (void);\n static bool mmix_rtx_costs (rtx, int, int, int *, bool);\n+static int mmix_register_move_cost (enum machine_mode,\n+\t\t\t\t    reg_class_t, reg_class_t);\n static rtx mmix_struct_value_rtx (tree, int);\n static enum machine_mode mmix_promote_function_mode (const_tree,\n \t\t\t\t\t\t     enum machine_mode,\n@@ -224,6 +226,9 @@ static void mmix_conditional_register_usage (void);\n #undef TARGET_ADDRESS_COST\n #define TARGET_ADDRESS_COST hook_int_rtx_bool_0\n \n+#undef TARGET_REGISTER_MOVE_COST\n+#define TARGET_REGISTER_MOVE_COST mmix_register_move_cost\n+\n #undef TARGET_MACHINE_DEPENDENT_REORG\n #define TARGET_MACHINE_DEPENDENT_REORG mmix_reorg\n \n@@ -1233,12 +1238,15 @@ mmix_rtx_costs (rtx x ATTRIBUTE_UNUSED,\n   return false;\n }\n \n-/* REGISTER_MOVE_COST.  */\n+/* TARGET_REGISTER_MOVE_COST.\n \n-int\n+   The special registers can only move to and from general regs, and we\n+   need to check that their constraints match, so say 3 for them.  */\n+\n+static int\n mmix_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n-\t\t\t enum reg_class from,\n-\t\t\t enum reg_class to)\n+\t\t\t reg_class_t from,\n+\t\t\t reg_class_t to)\n {\n   return (from == GENERAL_REGS && from == to) ? 2 : 3;\n }"}, {"sha": "787f64f4bf5557882ac7589854fe826a5417efac", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e9ee54ca64d761e0cbfb7981dafbfcb9704240c/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=6e9ee54ca64d761e0cbfb7981dafbfcb9704240c", "patch": "@@ -617,23 +617,6 @@ typedef struct { int regs; int lib; } CUMULATIVE_ARGS;\n \n /* Node: Costs */\n \n-/* The special registers can only move to and from general regs, and we\n-   need to check that their constraints match, so say 3 for them.  */\n-/* WARNING: gcc-2.7.2.2 i686-pc-linux-gnulibc1 (as shipped with RH 4.2)\n-   miscompiles reload1.c:reload_cse_simplify_set; a call to\n-   reload_cse_regno_equal_p is missing when checking if a substitution of\n-   a register setting is valid if this is defined to just the expression\n-   in mmix_register_move_cost.\n-\n-   Symptom: a (all?) register setting is optimized away for e.g.\n-   \"char *p1(char *p) { return p+1; }\" and the value of register zero ($0)\n-   is returned.\n-\n-   We can workaround by making this a function call - unknown if this\n-   causes dire speed effects.  */\n-#define REGISTER_MOVE_COST(MODE, FROM, TO) \\\n- mmix_register_move_cost (MODE, FROM, TO)\n-\n #define SLOW_BYTE_ACCESS 0\n \n "}]}