{"sha": "a85caf9e0bafa1be233b7b6d864ee96ae2dce042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg1Y2FmOWUwYmFmYTFiZTIzM2I3YjZkODY0ZWU5NmFlMmRjZTA0Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-01-21T00:39:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-01-21T00:39:57Z"}, "message": "var-tracking.c (check_value_val): Add a compile time assertion.\n\n\t* var-tracking.c (check_value_val): Add a compile time assertion.\n\t(dv_is_decl_p): Simplify.\n\t(dv_as_decl, dv_as_value, dv_from_decl, dv_from_value): Only use\n\tgcc_assert if ENABLE_CHECKING.\n\nFrom-SVN: r156101", "tree": {"sha": "0b400aa654c131eb52ad2bd56d6fc35e961de71d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b400aa654c131eb52ad2bd56d6fc35e961de71d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a85caf9e0bafa1be233b7b6d864ee96ae2dce042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85caf9e0bafa1be233b7b6d864ee96ae2dce042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a85caf9e0bafa1be233b7b6d864ee96ae2dce042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85caf9e0bafa1be233b7b6d864ee96ae2dce042/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a22d08aabf99a7886a9f7023b899a49c82d9b859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22d08aabf99a7886a9f7023b899a49c82d9b859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a22d08aabf99a7886a9f7023b899a49c82d9b859"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "6726e4400fb4eb0c8f934feafb06133989f53cf0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85caf9e0bafa1be233b7b6d864ee96ae2dce042/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85caf9e0bafa1be233b7b6d864ee96ae2dce042/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a85caf9e0bafa1be233b7b6d864ee96ae2dce042", "patch": "@@ -1,3 +1,10 @@\n+2010-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* var-tracking.c (check_value_val): Add a compile time assertion.\n+\t(dv_is_decl_p): Simplify.\n+\t(dv_as_decl, dv_as_value, dv_from_decl, dv_from_value): Only use\n+\tgcc_assert if ENABLE_CHECKING.\n+\n 2010-01-20  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/42782"}, {"sha": "5ac3222e140b46516326958c2c883726751a989b", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85caf9e0bafa1be233b7b6d864ee96ae2dce042/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85caf9e0bafa1be233b7b6d864ee96ae2dce042/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=a85caf9e0bafa1be233b7b6d864ee96ae2dce042", "patch": "@@ -110,6 +110,13 @@\n #include \"cselib.h\"\n #include \"target.h\"\n \n+/* var-tracking.c assumes that tree code with the same value as VALUE rtx code\n+   has no chance to appear in REG_EXPR/MEM_EXPRs and isn't a decl.\n+   Currently the value is the same as IDENTIFIER_NODE, which has such\n+   a property.  If this compile time assertion ever fails, make sure that\n+   the new tree code that equals (int) VALUE has the same property.  */\n+extern char check_value_val[(int) VALUE == (int) IDENTIFIER_NODE ? 1 : -1];\n+\n /* Type of micro operation.  */\n enum micro_operation_type\n {\n@@ -723,26 +730,7 @@ adjust_stack_reference (rtx mem, HOST_WIDE_INT adjustment)\n static inline bool\n dv_is_decl_p (decl_or_value dv)\n {\n-  if (!dv)\n-    return true;\n-\n-  /* Make sure relevant codes don't overlap.  */\n-  switch ((int)TREE_CODE ((tree)dv))\n-    {\n-    case (int)VAR_DECL:\n-    case (int)PARM_DECL:\n-    case (int)RESULT_DECL:\n-    case (int)FUNCTION_DECL:\n-    case (int)DEBUG_EXPR_DECL:\n-    case (int)COMPONENT_REF:\n-      return true;\n-\n-    case (int)VALUE:\n-      return false;\n-\n-    default:\n-      gcc_unreachable ();\n-    }\n+  return !dv || (int) TREE_CODE ((tree) dv) != (int) VALUE;\n }\n \n /* Return true if a decl_or_value is a VALUE rtl.  */\n@@ -756,15 +744,19 @@ dv_is_value_p (decl_or_value dv)\n static inline tree\n dv_as_decl (decl_or_value dv)\n {\n+#ifdef ENABLE_CHECKING\n   gcc_assert (dv_is_decl_p (dv));\n+#endif\n   return (tree) dv;\n }\n \n /* Return the value in the decl_or_value.  */\n static inline rtx\n dv_as_value (decl_or_value dv)\n {\n+#ifdef ENABLE_CHECKING\n   gcc_assert (dv_is_value_p (dv));\n+#endif\n   return (rtx)dv;\n }\n \n@@ -810,7 +802,9 @@ dv_from_decl (tree decl)\n {\n   decl_or_value dv;\n   dv = decl;\n+#ifdef ENABLE_CHECKING\n   gcc_assert (dv_is_decl_p (dv));\n+#endif\n   return dv;\n }\n \n@@ -820,7 +814,9 @@ dv_from_value (rtx value)\n {\n   decl_or_value dv;\n   dv = value;\n+#ifdef ENABLE_CHECKING\n   gcc_assert (dv_is_value_p (dv));\n+#endif\n   return dv;\n }\n "}]}