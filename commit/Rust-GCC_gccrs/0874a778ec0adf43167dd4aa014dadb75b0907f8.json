{"sha": "0874a778ec0adf43167dd4aa014dadb75b0907f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg3NGE3NzhlYzBhZGY0MzE2N2RkNGFhMDE0ZGFkYjc1YjA5MDdmOA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-06-07T11:19:40Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-06-07T11:19:40Z"}, "message": "re PR sanitizer/80932 (UBSAN: false positive as a result of distribution: c1*(c2*v1-c3*v2)=>c1*c2*v1-c1*c3*v2)\n\n\tPR sanitizer/80932\n\t* fold-const.c (extract_muldiv_1) <case MINUS_EXPR>: Add\n\tTYPE_OVERFLOW_WRAPS check. \n\n\t* c-c++-common/ubsan/pr80932.c: New test.\n\nFrom-SVN: r248961", "tree": {"sha": "e331107548064bd858fc2e2c59ff591607aa438a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e331107548064bd858fc2e2c59ff591607aa438a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0874a778ec0adf43167dd4aa014dadb75b0907f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0874a778ec0adf43167dd4aa014dadb75b0907f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0874a778ec0adf43167dd4aa014dadb75b0907f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0874a778ec0adf43167dd4aa014dadb75b0907f8/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55e872a462ca506350140451ad4a170d6baa462b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55e872a462ca506350140451ad4a170d6baa462b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55e872a462ca506350140451ad4a170d6baa462b"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "fa94c6fa46ac3c1f93cb37bff576360c57946c2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874a778ec0adf43167dd4aa014dadb75b0907f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874a778ec0adf43167dd4aa014dadb75b0907f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0874a778ec0adf43167dd4aa014dadb75b0907f8", "patch": "@@ -1,3 +1,9 @@\n+2017-06-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/80932\n+\t* fold-const.c (extract_muldiv_1) <case MINUS_EXPR>: Add\n+\tTYPE_OVERFLOW_WRAPS check. \n+\n 2017-06-07  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-vect-loop-manip.c (vect_do_peeling): Don't skip vector loop"}, {"sha": "f3975c7391f6f570beafe5f4bc2ed3db4ce67369", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874a778ec0adf43167dd4aa014dadb75b0907f8/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874a778ec0adf43167dd4aa014dadb75b0907f8/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=0874a778ec0adf43167dd4aa014dadb75b0907f8", "patch": "@@ -6178,6 +6178,7 @@ extract_muldiv_1 (tree t, tree c, enum tree_code code, tree wide_type,\n       t1 = extract_muldiv (op0, c, code, wide_type, &sub_strict_overflow_p);\n       t2 = extract_muldiv (op1, c, code, wide_type, &sub_strict_overflow_p);\n       if (t1 != 0 && t2 != 0\n+\t  && TYPE_OVERFLOW_WRAPS (ctype)\n \t  && (code == MULT_EXPR\n \t      /* If not multiplication, we can only do this if both operands\n \t\t are divisible by c.  */"}, {"sha": "990e10ac327993629dd00a04b788723586daf6bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874a778ec0adf43167dd4aa014dadb75b0907f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874a778ec0adf43167dd4aa014dadb75b0907f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0874a778ec0adf43167dd4aa014dadb75b0907f8", "patch": "@@ -1,3 +1,8 @@\n+2017-06-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/80932\n+\t* c-c++-common/ubsan/pr80932.c: New test.\n+\n 2017-06-07  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.target/i386/l_fma_double_1.c: Adjust test strings."}, {"sha": "a833712d383addaea955b2ee868e86b6b96a0dc6", "filename": "gcc/testsuite/c-c++-common/ubsan/pr80932.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0874a778ec0adf43167dd4aa014dadb75b0907f8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80932.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0874a778ec0adf43167dd4aa014dadb75b0907f8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80932.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80932.c?ref=0874a778ec0adf43167dd4aa014dadb75b0907f8", "patch": "@@ -0,0 +1,17 @@\n+/* PR sanitizer/80932 */\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=undefined -fsanitize-undefined-trap-on-error\" } */\n+\n+int x = 1;\n+\n+long int\n+foo (void)\n+{\n+  return ((long) (13801962912760474560ULL * x) - (long) (15334142073106273231ULL * x)) * -6;\n+}\n+\n+int\n+main ()\n+{\n+  foo ();\n+}"}]}