{"sha": "d101034cd879822fbb76d8a2a50e4e27959e9d5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEwMTAzNGNkODc5ODIyZmJiNzZkOGEyYTUwZTRlMjc5NTllOWQ1Yg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-03-23T19:47:09Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-03-23T19:47:09Z"}, "message": "langhooks.h (truthvalue_conversion): Remove.\n\n\t* langhooks.h (truthvalue_conversion): Remove.\n\t* langhooks-def.h (LANG_HOOKS_INITIALIZER): Remove\n\tLANG_HOOKS_TRUTHVALUE_CONVERSION.\n\t* system.h (LANG_HOOKS_TRUTHVALUE_CONVERSION): Poison.\n\t* gimplify.c (gimple_boolify): Don't use truthvalue_conversion.\n\t* c-objc-common.h (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove.\n\nada:\n\t* misc.c (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove.\n\ncp:\n\t* cp-objcp-common.h (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove.\n\nfortran:\n\t* f95-lang.c (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove.\n\njava:\n\t* lang.c (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove.\n\ntreelang:\n\t* treetree.c (LANG_HOOKS_TRUTHVALUE_CONVERSION,\n\ttree_lang_truthvalue_conversion): Remove.\n\t* tree-convert.c: Don't call truthvalue_conversion.\n\nFrom-SVN: r96947", "tree": {"sha": "d601d54c5e6d0effc19d6a510d362a6d23c7b8cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d601d54c5e6d0effc19d6a510d362a6d23c7b8cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d101034cd879822fbb76d8a2a50e4e27959e9d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d101034cd879822fbb76d8a2a50e4e27959e9d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d101034cd879822fbb76d8a2a50e4e27959e9d5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d101034cd879822fbb76d8a2a50e4e27959e9d5b/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e0ea5157d874e581d0687fc8bb03336ebcc3e02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0ea5157d874e581d0687fc8bb03336ebcc3e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e0ea5157d874e581d0687fc8bb03336ebcc3e02"}], "stats": {"total": 73, "additions": 33, "deletions": 40}, "files": [{"sha": "081b91a62d7988aad42158b88e78b4cbdc55d972", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -1,3 +1,12 @@\n+2005-03-23  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* langhooks.h (truthvalue_conversion): Remove.\n+\t* langhooks-def.h (LANG_HOOKS_INITIALIZER): Remove\n+\tLANG_HOOKS_TRUTHVALUE_CONVERSION.\n+\t* system.h (LANG_HOOKS_TRUTHVALUE_CONVERSION): Poison.\n+\t* gimplify.c (gimple_boolify): Don't use truthvalue_conversion.\n+\t* c-objc-common.h (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove.\n+\n 2005-03-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* params.def: Fix a typo."}, {"sha": "d0e73d327f4a0ab5b1b2376f19dca4d5a241fb50", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -1,3 +1,7 @@\n+2005-03-23  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* misc.c (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove.\n+\n 2005-03-17  Pascal Obry  <obry@adacore.com>\n \n \t* adaint.h, adaint.c (__gnat_waitpid): Moved to expect.c where it is"}, {"sha": "39feb1cc9c275ed9e4dc799704af216549a5ba85", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -137,8 +137,6 @@ static tree gnat_type_max_size\t\t(tree);\n #define LANG_HOOKS_EXPAND_EXPR\t\tgnat_expand_expr\n #undef  LANG_HOOKS_MARK_ADDRESSABLE\n #define LANG_HOOKS_MARK_ADDRESSABLE\tgnat_mark_addressable\n-#undef  LANG_HOOKS_TRUTHVALUE_CONVERSION\n-#define LANG_HOOKS_TRUTHVALUE_CONVERSION gnat_truthvalue_conversion\n #undef  LANG_HOOKS_PRINT_DECL\n #define LANG_HOOKS_PRINT_DECL\t\tgnat_print_decl\n #undef  LANG_HOOKS_PRINT_TYPE"}, {"sha": "de8c175c5c2159b04eb3b466537621b61ed67e32", "filename": "gcc/c-objc-common.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fc-objc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fc-objc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.h?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -52,8 +52,6 @@ extern void c_initialize_diagnostics (diagnostic_context *);\n #define LANG_HOOKS_MARK_ADDRESSABLE c_mark_addressable\n #undef LANG_HOOKS_PARSE_FILE\n #define LANG_HOOKS_PARSE_FILE c_common_parse_file\n-#undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n-#define LANG_HOOKS_TRUTHVALUE_CONVERSION c_common_truthvalue_conversion\n #undef LANG_HOOKS_FINISH_INCOMPLETE_DECL\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL c_finish_incomplete_decl\n #undef LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS"}, {"sha": "2b3a99b1cf0d700debb89bc7c18c03cdd230852f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -1,3 +1,7 @@\n+2005-03-23  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* cp-objcp-common.h (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove.\n+\n 2005-03-23  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* cp-tree.h (perform_integral_promotions): Remove."}, {"sha": "65a01c367f674b040a228432f1d39066cea0a709", "filename": "gcc/cp/cp-objcp-common.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fcp%2Fcp-objcp-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fcp%2Fcp-objcp-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.h?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -71,8 +71,6 @@ extern tree objcp_tsubst_copy_and_build (tree, tree, tsubst_flags_t,\n #define LANG_HOOKS_PARSE_FILE c_common_parse_file\n #undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL cxx_dup_lang_specific_decl\n-#undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n-#define LANG_HOOKS_TRUTHVALUE_CONVERSION c_common_truthvalue_conversion\n #undef LANG_HOOKS_SET_DECL_ASSEMBLER_NAME\n #define LANG_HOOKS_SET_DECL_ASSEMBLER_NAME mangle_decl\n #undef LANG_HOOKS_MARK_ADDRESSABLE"}, {"sha": "7a6962159fed0e756c16ea4acccef0d693bee737", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -1,3 +1,7 @@\n+2005-03-23  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* f95-lang.c (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove.\n+\n 2005-03-23  Steven Bosscher  <stevenb@suse.de>\n \n \t* convert.c (convert): Replace fold (buildN (...)) with fold_buildN."}, {"sha": "e0c22daad5d4820d5d36479153ce591c5f512f43", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -114,7 +114,6 @@ static void gfc_expand_function (tree);\n #undef LANG_HOOKS_POST_OPTIONS\n #undef LANG_HOOKS_PRINT_IDENTIFIER\n #undef LANG_HOOKS_PARSE_FILE\n-#undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n #undef LANG_HOOKS_MARK_ADDRESSABLE\n #undef LANG_HOOKS_TYPE_FOR_MODE\n #undef LANG_HOOKS_TYPE_FOR_SIZE\n@@ -133,7 +132,6 @@ static void gfc_expand_function (tree);\n #define LANG_HOOKS_POST_OPTIONS\t\tgfc_post_options\n #define LANG_HOOKS_PRINT_IDENTIFIER     gfc_print_identifier\n #define LANG_HOOKS_PARSE_FILE           gfc_be_parse_file\n-#define LANG_HOOKS_TRUTHVALUE_CONVERSION   gfc_truthvalue_conversion\n #define LANG_HOOKS_MARK_ADDRESSABLE        gfc_mark_addressable\n #define LANG_HOOKS_TYPE_FOR_MODE           gfc_type_for_mode\n #define LANG_HOOKS_TYPE_FOR_SIZE           gfc_type_for_size"}, {"sha": "9191baea26a8f19280d32df8be4fef25970bc654", "filename": "gcc/gimplify.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -2073,10 +2073,6 @@ gimple_boolify (tree expr)\n   if (TREE_CODE (type) == BOOLEAN_TYPE)\n     return expr;\n \n-  /* If this is the predicate of a COND_EXPR, it might not even be a\n-     truthvalue yet.  */\n-  expr = lang_hooks.truthvalue_conversion (expr);\n-\n   switch (TREE_CODE (expr))\n     {\n     case TRUTH_AND_EXPR:"}, {"sha": "70ad11c36476bdc8ce69751234d9651782e93b09", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -1,3 +1,7 @@\n+2005-03-23  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* lang.c (LANG_HOOKS_TRUTHVALUE_CONVERSION): Remove.\n+\n 2005-03-18  Andrew Haley  <aph@redhat.com>\n \n \tPR java/20522"}, {"sha": "553e20cf57f3afdfc7f23bbafcea9ab949302ff1", "filename": "gcc/java/lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -172,8 +172,6 @@ struct language_function GTY(())\n #define LANG_HOOKS_PARSE_FILE java_parse_file\n #undef LANG_HOOKS_MARK_ADDRESSABLE\n #define LANG_HOOKS_MARK_ADDRESSABLE java_mark_addressable\n-#undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n-#define LANG_HOOKS_TRUTHVALUE_CONVERSION java_truthvalue_conversion\n #undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL java_dup_lang_specific_decl\n #undef LANG_HOOKS_DECL_PRINTABLE_NAME"}, {"sha": "67ea0f325dc3aee1ef3953923ad1100962274255", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -267,7 +267,6 @@ extern tree lhd_make_node (enum tree_code);\n   LANG_HOOKS_EXPAND_CONSTANT, \\\n   LANG_HOOKS_EXPAND_EXPR, \\\n   LANG_HOOKS_EXPAND_DECL, \\\n-  LANG_HOOKS_TRUTHVALUE_CONVERSION, \\\n   LANG_HOOKS_SAFE_FROM_P, \\\n   LANG_HOOKS_FINISH_INCOMPLETE_DECL, \\\n   LANG_HOOKS_MARK_ADDRESSABLE, \\"}, {"sha": "e3ff6724eff60a2776c1df310ad204d02563e3c1", "filename": "gcc/langhooks.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -277,19 +277,6 @@ struct lang_hooks\n      1 if handled, 0 otherwise.  */\n   int (*expand_decl) (tree);\n \n-  /* Prepare expr to be an argument of a TRUTH_NOT_EXPR or other logical\n-     operation.\n-\n-     This preparation consists of taking the ordinary representation\n-     of an expression expr and producing a valid tree boolean\n-     expression describing whether expr is nonzero.  We could simply\n-     always do build_binary_op (NE_EXPR, expr, integer_zero_node, 1),\n-     but we optimize comparisons, &&, ||, and !.\n-\n-     The result should be an expression of boolean type (if not an\n-     error_mark_node).  */\n-  tree (*truthvalue_conversion) (tree);\n-\n   /* Hook called by safe_from_p for language-specific tree codes.  It is\n      up to the language front-end to install a hook if it has any such\n      codes that safe_from_p needs to know about.  Since same_from_p will"}, {"sha": "f285e87674c899bdc284c22c9682a62b9c21e964", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -670,7 +670,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tLANG_HOOKS_TREE_INLINING_ESTIMATE_NUM_INSNS \\\n \tLANG_HOOKS_PUSHLEVEL LANG_HOOKS_SET_BLOCK \\\n \tLANG_HOOKS_MAYBE_BUILD_CLEANUP LANG_HOOKS_UPDATE_DECL_AFTER_SAVING \\\n-\tLANG_HOOKS_POPLEVEL\n+\tLANG_HOOKS_POPLEVEL LANG_HOOKS_TRUTHVALUE_CONVERSION\n \n /* Libiberty macros that are no longer used in GCC.  */\n #undef ANSI_PROTOTYPES"}, {"sha": "dbf1bdc3e90e867222abeb3998c88950784e5e16", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -1,3 +1,9 @@\n+2005-03-23  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* treetree.c (LANG_HOOKS_TRUTHVALUE_CONVERSION,\n+\ttree_lang_truthvalue_conversion): Remove.\n+\t* tree-convert.c: Don't call truthvalue_conversion.\n+\n 2005-03-22  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* treetree.c (tree_code_if_start): Use fold_buildN. "}, {"sha": "929fbd5506caf82ade85649e9ef1ba56d20e1f77", "filename": "gcc/treelang/tree-convert.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Ftreelang%2Ftree-convert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Ftreelang%2Ftree-convert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftree-convert.c?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -85,7 +85,7 @@ convert (tree type, tree expr)\n     return fold (convert_to_integer (type, e));\n   if (code == BOOLEAN_TYPE)\n     {\n-      tree t = (*lang_hooks.truthvalue_conversion) (expr);\n+      tree t = expr;\n       /* If it returns a NOP_EXPR, we must fold it here to avoid\n \t infinite recursion between fold () and convert ().  */\n       if (TREE_CODE (t) == NOP_EXPR)"}, {"sha": "6d98e23502246ae388de5693ad46b4637569c75b", "filename": "gcc/treelang/treetree.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Ftreelang%2Ftreetree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d101034cd879822fbb76d8a2a50e4e27959e9d5b/gcc%2Ftreelang%2Ftreetree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftreetree.c?ref=d101034cd879822fbb76d8a2a50e4e27959e9d5b", "patch": "@@ -124,7 +124,6 @@ struct language_function GTY(())\n   char junk; /* dummy field to ensure struct is not empty */\n };\n \n-static tree tree_lang_truthvalue_conversion (tree expr);\n static bool tree_mark_addressable (tree exp);\n static tree tree_lang_type_for_size (unsigned precision, int unsignedp);\n static tree tree_lang_type_for_mode (enum machine_mode mode, int unsignedp);\n@@ -153,8 +152,6 @@ static void treelang_expand_function (tree fndecl);\n    end).  These are not really very language-dependent, i.e.\n    treelang, C, Mercury, etc. can all use almost the same definitions.  */\n \n-#undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n-#define LANG_HOOKS_TRUTHVALUE_CONVERSION tree_lang_truthvalue_conversion\n #undef LANG_HOOKS_MARK_ADDRESSABLE\n #define LANG_HOOKS_MARK_ADDRESSABLE tree_mark_addressable\n #undef LANG_HOOKS_SIGNED_TYPE\n@@ -781,13 +778,6 @@ dt (tree t)\n    allocate each of them once. Signed and unsigned types are kept separate.  */\n static GTY(()) tree signed_and_unsigned_types[MAX_BITS_PER_WORD + 1][2];\n \n-/* XXX is this definition OK? */\n-static tree\n-tree_lang_truthvalue_conversion (tree expr)\n-{\n-  return expr;\n-}\n-\n /* Mark EXP saying that we need to be able to take the\n    address of it; it should not be allocated in a register.\n    Value is 1 if successful.  "}]}