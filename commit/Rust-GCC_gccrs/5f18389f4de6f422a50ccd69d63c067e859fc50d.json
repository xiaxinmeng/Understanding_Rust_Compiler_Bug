{"sha": "5f18389f4de6f422a50ccd69d63c067e859fc50d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYxODM4OWY0ZGU2ZjQyMmE1MGNjZDY5ZDYzYzA2N2U4NTlmYzUwZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-09-27T22:13:11Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-09-27T22:13:11Z"}, "message": "reflect: Copy stack values onto heap in amd64 MakeFunc.\n\nFrom-SVN: r202995", "tree": {"sha": "723725c19f5dbb008b761be51319c63b4010da84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/723725c19f5dbb008b761be51319c63b4010da84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f18389f4de6f422a50ccd69d63c067e859fc50d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f18389f4de6f422a50ccd69d63c067e859fc50d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f18389f4de6f422a50ccd69d63c067e859fc50d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f18389f4de6f422a50ccd69d63c067e859fc50d/comments", "author": null, "committer": null, "parents": [{"sha": "a84dbde7fc88361e23609be162ba138f96ef18e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a84dbde7fc88361e23609be162ba138f96ef18e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a84dbde7fc88361e23609be162ba138f96ef18e4"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "ecc50a42520aeaf977ec2ff326974cb9b74a0424", "filename": "libgo/go/reflect/makefuncgo_amd64.go", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f18389f4de6f422a50ccd69d63c067e859fc50d/libgo%2Fgo%2Freflect%2Fmakefuncgo_amd64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f18389f4de6f422a50ccd69d63c067e859fc50d/libgo%2Fgo%2Freflect%2Fmakefuncgo_amd64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefuncgo_amd64.go?ref=5f18389f4de6f422a50ccd69d63c067e859fc50d", "patch": "@@ -431,8 +431,14 @@ argloop:\n func amd64Memarg(in []Value, ap uintptr, rt *rtype) ([]Value, uintptr) {\n \tap = align(ap, ptrSize)\n \tap = align(ap, uintptr(rt.align))\n-\tp := Value{rt, unsafe.Pointer(ap), flag(rt.Kind()<<flagKindShift) | flagIndir}\n-\tin = append(in, p)\n+\n+\t// We have to copy the argument onto the heap in case the\n+\t// function hangs onto the reflect.Value we pass it.\n+\tp := unsafe_New(rt)\n+\tmemmove(p, unsafe.Pointer(ap), rt.size)\n+\n+\tv := Value{rt, p, flag(rt.Kind()<<flagKindShift) | flagIndir}\n+\tin = append(in, v)\n \tap += rt.size\n \treturn in, ap\n }"}]}