{"sha": "039df8c7c71068e2ace9d1f8e8b26b8413b8c271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM5ZGY4YzdjNzEwNjhlMmFjZTlkMWY4ZThiMjZiODQxM2I4YzI3MQ==", "commit": {"author": {"name": "J. David Anglin", "email": "dave.anglin@nrc.ca", "date": "2000-11-30T16:43:00Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-11-30T16:43:00Z"}, "message": "prevent dual double definition protection\n\nCo-Authored-By: Bruce Korb <bkorb@gnu.org>\n\nFrom-SVN: r37895", "tree": {"sha": "ae41a80df3bf21141b3f2e8eb97820cba4f85567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae41a80df3bf21141b3f2e8eb97820cba4f85567"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/039df8c7c71068e2ace9d1f8e8b26b8413b8c271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039df8c7c71068e2ace9d1f8e8b26b8413b8c271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/039df8c7c71068e2ace9d1f8e8b26b8413b8c271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039df8c7c71068e2ace9d1f8e8b26b8413b8c271/comments", "author": null, "committer": null, "parents": [{"sha": "42cfed37148d75a8f0042a3323095655eb744a20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42cfed37148d75a8f0042a3323095655eb744a20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42cfed37148d75a8f0042a3323095655eb744a20"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "65855dde6ebeaeeecef344067938e5a70bd87ed7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039df8c7c71068e2ace9d1f8e8b26b8413b8c271/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039df8c7c71068e2ace9d1f8e8b26b8413b8c271/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=039df8c7c71068e2ace9d1f8e8b26b8413b8c271", "patch": "@@ -1,3 +1,9 @@\n+2000-11-30  J. David Anglin  <dave.anglin@nrc.ca>\n+            Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/inclhack.def(): prevent dual double definition protection\n+\t* fixinc/fixincl.x: regenerate\n+\n 2000-11-29  Loren J. Rittle  <ljrittle@acm.org>\n \n         * fixinc/Makefile.in (fixincl.x): Explicitly state the"}, {"sha": "9942790113e9e309930536a3e0ca667821add9d9", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039df8c7c71068e2ace9d1f8e8b26b8413b8c271/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039df8c7c71068e2ace9d1f8e8b26b8413b8c271/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=039df8c7c71068e2ace9d1f8e8b26b8413b8c271", "patch": "@@ -2140,10 +2140,24 @@ tSCC zHpux_MaxintList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zHpux_MaxintSelect0[] =\n-       \"^#[ \\t]*define[ \\t]*MAXINT[ \\t]\";\n+       \"^#[ \\t]*define[ \\t]+MAXINT[ \\t]\";\n \n-#define    HPUX_MAXINT_TEST_CT  1\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zHpux_MaxintBypass0[] =\n+       \"^#[ \\t]*ifndef[ \\t]+MAXINT\";\n+\n+/*\n+ *  perform the 'test' shell command - do fix on success\n+ */\n+tSCC zHpux_MaxintTest0[] =\n+       \"-n \\\"`egrep '#[ \\t]*define[ \\t]+MAXINT[ \\t]' sys/param.h`\\\"\";\n+\n+#define    HPUX_MAXINT_TEST_CT  3\n static tTestDesc aHpux_MaxintTests[] = {\n+  { TT_TEST,     zHpux_MaxintTest0,   0 /* unused */ },\n+  { TT_NEGREP,   zHpux_MaxintBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zHpux_MaxintSelect0, (regex_t*)NULL }, };\n \n /*\n@@ -2154,7 +2168,7 @@ static const char* apzHpux_MaxintPatch[] = {\n     \"#ifndef MAXINT\\n\\\n %0\\n\\\n #endif\",\n-    \"^#[ \\t]*define[ \\t]*MAXINT[ \\t].*\",\n+    \"^#[ \\t]*define[ \\t]+MAXINT[ \\t].*\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -5265,7 +5279,7 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          134\n+#define REGEX_COUNT          135\n #define MACH_LIST_SIZE_LIMIT 279\n #define FIX_COUNT            130\n "}, {"sha": "1b73f0c11d4f2eda87c786972b1d6c59c0a2f877", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039df8c7c71068e2ace9d1f8e8b26b8413b8c271/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039df8c7c71068e2ace9d1f8e8b26b8413b8c271/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=039df8c7c71068e2ace9d1f8e8b26b8413b8c271", "patch": "@@ -1221,11 +1221,14 @@ fix = {\n     hackname  = hpux_maxint;\n     files     = sys/param.h;\n     files     = values.h;\n-    select    = \"^#[ \\t]*define[ \\t]*MAXINT[ \\t]\";\n+    select    = \"^#[ \\t]*define[ \\t]+MAXINT[ \\t]\";\n+    bypass    = \"^#[ \\t]*ifndef[ \\t]+MAXINT\";\n+    test =\n+    \"-n \\\"`egrep '#[ \\t]*define[ \\t]+MAXINT[ \\t]' sys/param.h`\\\"\";\n \n     c_fix     = format;\n     c_fix_arg = \"#ifndef MAXINT\\n%0\\n#endif\";\n-    c_fix_arg = \"^#[ \\t]*define[ \\t]*MAXINT[ \\t].*\";\n+    c_fix_arg = \"^#[ \\t]*define[ \\t]+MAXINT[ \\t].*\";\n \n     test_text = '#define MAXINT 0x7FFFFFFF';\n };"}]}