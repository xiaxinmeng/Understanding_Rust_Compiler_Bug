{"sha": "91d0120e389a6d85279dd298028e1369a369070d", "node_id": "C_kwDOANBUbNoAKDkxZDAxMjBlMzg5YTZkODUyNzlkZDI5ODAyOGUxMzY5YTM2OTA3MGQ", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T05:11:06Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T03:04:08Z"}, "message": "RISC-V: Add vzext.vf2 C API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vzext_vf2-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf2_tumu-3.c: New test.", "tree": {"sha": "8c012e2b7abfffd1b34975540f569e457eb7caf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c012e2b7abfffd1b34975540f569e457eb7caf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91d0120e389a6d85279dd298028e1369a369070d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d0120e389a6d85279dd298028e1369a369070d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d0120e389a6d85279dd298028e1369a369070d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d0120e389a6d85279dd298028e1369a369070d/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9"}], "stats": {"total": 1998, "additions": 1998, "deletions": 0}, "files": [{"sha": "f5599339a365b3d2d04eb0f2ece093eda9f555a1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-1.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4(op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2(op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1(op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2(op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4(op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8(vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8(op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2(op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1(op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2(op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4(op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8(vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8(op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1(vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1(op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2(vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2(op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4(vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4(op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8(vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8(op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "553fff747ed31e5832ebc6a02061894318ac09db", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-2.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4(op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2(op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1(op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2(op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4(op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8(vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8(op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2(op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1(op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2(op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4(op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8(vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8(op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1(vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1(op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2(vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2(op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4(vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4(op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8(vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8(op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "b16a0993d4d4f737bc2a3b5ceb5e54738f4fb054", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2-3.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4(op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2(op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1(op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2(op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4(op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8(vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8(op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2(op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1(op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2(op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4(op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8(vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8(op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1(vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1(op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2(vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2(op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4(vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4(op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8(vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8(op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "c673e99b399274ec453f3a9266faf9af75128bef", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_m-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_m-1.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_m(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_m(mask,op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_m(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_m(mask,op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_m(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_m(mask,op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_m(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_m(mask,op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_m(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_m(mask,op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_m(vbool2_t mask,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_m(mask,op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_m(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_m(mask,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_m(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_m(mask,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_m(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_m(mask,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_m(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_m(mask,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_m(vbool4_t mask,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_m(vbool64_t mask,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_m(vbool32_t mask,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_m(vbool16_t mask,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_m(vbool8_t mask,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_m(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "61929878817664cc5fb1416c49fdc4eed88a4c1a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_m-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_m-2.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_m(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_m(mask,op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_m(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_m(mask,op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_m(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_m(mask,op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_m(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_m(mask,op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_m(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_m(mask,op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_m(vbool2_t mask,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_m(mask,op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_m(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_m(mask,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_m(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_m(mask,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_m(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_m(mask,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_m(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_m(mask,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_m(vbool4_t mask,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_m(mask,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_m(vbool64_t mask,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_m(mask,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_m(vbool32_t mask,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_m(mask,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_m(vbool16_t mask,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_m(mask,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_m(vbool8_t mask,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_m(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "894ae75cd377aa0a67e5122db0993ecc941b5db3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_m-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_m-3.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_m(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_m(mask,op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_m(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_m(mask,op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_m(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_m(mask,op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_m(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_m(mask,op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_m(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_m(mask,op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_m(vbool2_t mask,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_m(mask,op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_m(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_m(mask,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_m(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_m(mask,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_m(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_m(mask,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_m(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_m(mask,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_m(vbool4_t mask,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_m(mask,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_m(vbool64_t mask,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_m(mask,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_m(vbool32_t mask,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_m(mask,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_m(vbool16_t mask,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_m(mask,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_m(vbool8_t mask,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_m(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "08dba6aefb68704ef5439dc43723dd4b6d77c525", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_mu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-1.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "a82818857e93355d8eaf8bf0d0c2089b4b711bde", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_mu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-2.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "282d24db4c6e434f62194096b88fe3a3aa27e9e1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_mu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_mu-3.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4f3110367d5d8cfadc39d024d90ad6ce0e290fb9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_tu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-1.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_tu(vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_tu(vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_tu(vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_tu(merge,op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_tu(vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_tu(vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_tu(vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_tu(vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_tu(vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_tu(vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_tu(vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_tu(vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_tu(vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_tu(vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_tu(vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_tu(vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "c8df7e031f56890f317444a1e81aacc7537e93b6", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_tu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-2.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_tu(vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_tu(merge,op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_tu(vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_tu(vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_tu(merge,op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_tu(vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_tu(merge,op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_tu(vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_tu(merge,op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_tu(vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_tu(merge,op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_tu(vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_tu(vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_tu(vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_tu(vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_tu(vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_tu(vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_tu(vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_tu(vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_tu(vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "da7fce199575c214df1ee1531ce63e0c1b66afb2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_tu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tu-3.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_tu(vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_tu(merge,op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_tu(vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_tu(vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_tu(merge,op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_tu(vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_tu(merge,op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_tu(vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_tu(merge,op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_tu(vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_tu(merge,op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_tu(vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_tu(vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_tu(vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_tu(vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_tu(vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_tu(vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_tu(vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_tu(vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_tu(vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "f3016077596c4c1c7c72199df506eab2655e6c05", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_tum-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-1.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "879f9a63f7226fa951f3ba793057d6188ab83210", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_tum-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-2.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "5e1de50787f3d291d8c1242627a0166e078a0899", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_tum-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tum-3.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4c8c38e0d1d8ac2aed36e27574cc30d50228afc7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_tumu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-1.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "62b7d2b2b1043e9e28125f475caa0e2550319d8c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_tumu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-2.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "be0b074e2d54e695e3f9b0f7bad458c3a66cc5e3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf2_tumu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d0120e389a6d85279dd298028e1369a369070d/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf2_tumu-3.c?ref=91d0120e389a6d85279dd298028e1369a369070d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vzext_vf2_u16mf4_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vzext_vf2_u16mf2_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16mf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vzext_vf2_u16m1_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vzext_vf2_u16m2_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vzext_vf2_u16m4_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vzext_vf2_u16m8_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u16m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf2_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32mf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf2_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf2_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf2_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf2_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u32m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf2_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf2_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf2_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf2_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf2_u64m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}]}