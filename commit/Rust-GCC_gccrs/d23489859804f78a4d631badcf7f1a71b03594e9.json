{"sha": "d23489859804f78a4d631badcf7f1a71b03594e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIzNDg5ODU5ODA0Zjc4YTRkNjMxYmFkY2Y3ZjFhNzFiMDM1OTRlOQ==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2006-08-26T17:03:22Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2006-08-26T17:03:22Z"}, "message": "xtensa.c (function_arg_boundary): New.\n\n\t* config/xtensa/xtensa.c (function_arg_boundary): New.\n\t(function_arg, xtensa_gimplify_va_arg_expr): Limit alignment to \n\tSTACK_BOUNDARY.\n\t* config/xtensa/xtensa.h (FUNCTION_ARG_BOUNDARY): Move code to new\n\tfunction_arg_boundary function that limits alignment to STACK_BOUNDARY.\n\nFrom-SVN: r116469", "tree": {"sha": "b6d11acc1abf277ae3d293bd9728bdfdab92d507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6d11acc1abf277ae3d293bd9728bdfdab92d507"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d23489859804f78a4d631badcf7f1a71b03594e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23489859804f78a4d631badcf7f1a71b03594e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d23489859804f78a4d631badcf7f1a71b03594e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23489859804f78a4d631badcf7f1a71b03594e9/comments", "author": null, "committer": null, "parents": [{"sha": "eff3a27644c419c425e0e1a1585abefff3695ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff3a27644c419c425e0e1a1585abefff3695ca5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eff3a27644c419c425e0e1a1585abefff3695ca5"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "cfd6d8c514e989110ca0e1fac0d61f3773ca72d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23489859804f78a4d631badcf7f1a71b03594e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23489859804f78a4d631badcf7f1a71b03594e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d23489859804f78a4d631badcf7f1a71b03594e9", "patch": "@@ -1,3 +1,11 @@\n+2006-08-26  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/xtensa.c (function_arg_boundary): New.\n+\t(function_arg, xtensa_gimplify_va_arg_expr): Limit alignment to\n+\tSTACK_BOUNDARY.\n+\t* config/xtensa/xtensa.h (FUNCTION_ARG_BOUNDARY): Move code to new\n+\tfunction_arg_boundary function that limits alignment to STACK_BOUNDARY.\n+\n 2006-08-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/28683"}, {"sha": "836ae2e1687a70e9c92068c7446e376e5e879e56", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23489859804f78a4d631badcf7f1a71b03594e9/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23489859804f78a4d631badcf7f1a71b03594e9/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=d23489859804f78a4d631badcf7f1a71b03594e9", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Tensilica's Xtensa architecture.\n-   Copyright 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Bob Wilson (bwilson@tensilica.com) at Tensilica.\n \n This file is part of GCC.\n@@ -1470,7 +1470,7 @@ function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type,\n \n   if (type && (TYPE_ALIGN (type) > BITS_PER_WORD))\n     {\n-      int align = TYPE_ALIGN (type) / BITS_PER_WORD;\n+      int align = MIN (TYPE_ALIGN (type), STACK_BOUNDARY) / BITS_PER_WORD;\n       *arg_words = (*arg_words + align - 1) & -align;\n     }\n \n@@ -1486,6 +1486,20 @@ function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type,\n }\n \n \n+int\n+function_arg_boundary (enum machine_mode mode, tree type)\n+{\n+  unsigned int alignment;\n+\n+  alignment = type ? TYPE_ALIGN (type) : GET_MODE_ALIGNMENT (mode);\n+  if (alignment < PARM_BOUNDARY)\n+    alignment = PARM_BOUNDARY;\n+  if (alignment > STACK_BOUNDARY)\n+    alignment = STACK_BOUNDARY;\n+  return alignment;\n+}\n+\n+\n static bool\n xtensa_return_in_msb (tree valtype)\n {\n@@ -2185,7 +2199,7 @@ xtensa_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p,\n \n   if (TYPE_ALIGN (type) > BITS_PER_WORD)\n     {\n-      int align = TYPE_ALIGN (type) / BITS_PER_UNIT;\n+      int align = MIN (TYPE_ALIGN (type), STACK_BOUNDARY) / BITS_PER_UNIT;\n \n       t = build2 (PLUS_EXPR, integer_type_node, orig_ndx,\n \t\t  build_int_cst (NULL_TREE, align - 1));"}, {"sha": "d7f70102611d715d5738cb01f72c2828ace589d8", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23489859804f78a4d631badcf7f1a71b03594e9/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23489859804f78a4d631badcf7f1a71b03594e9/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=d23489859804f78a4d631badcf7f1a71b03594e9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of Tensilica's Xtensa target machine for GNU compiler.\n-   Copyright 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Bob Wilson (bwilson@tensilica.com) at Tensilica.\n \n This file is part of GCC.\n@@ -728,15 +728,7 @@ typedef struct xtensa_args\n #define FUNCTION_INCOMING_ARG(CUM, MODE, TYPE, NAMED) \\\n   function_arg (&CUM, MODE, TYPE, TRUE)\n \n-/* Specify function argument alignment.  */\n-#define FUNCTION_ARG_BOUNDARY(MODE, TYPE)\t\t\t\t\\\n-  ((TYPE) != 0\t\t\t\t\t\t\t\t\\\n-   ? (TYPE_ALIGN (TYPE) <= PARM_BOUNDARY\t\t\t\t\\\n-      ? PARM_BOUNDARY\t\t\t\t\t\t\t\\\n-      : TYPE_ALIGN (TYPE))\t\t\t\t\t\t\\\n-   : (GET_MODE_ALIGNMENT (MODE) <= PARM_BOUNDARY\t\t\t\\\n-      ? PARM_BOUNDARY\t\t\t\t\t\t\t\\\n-      : GET_MODE_ALIGNMENT (MODE)))\n+#define FUNCTION_ARG_BOUNDARY function_arg_boundary\n \n /* Profiling Xtensa code is typically done with the built-in profiling\n    feature of Tensilica's instruction set simulator, which does not"}]}