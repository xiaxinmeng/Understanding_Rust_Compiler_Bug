{"sha": "cd1e666505bb187f71f02bba5bdc17ff885ce243", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QxZTY2NjUwNWJiMTg3ZjcxZjAyYmJhNWJkYzE3ZmY4ODVjZTI0Mw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2013-03-08T21:39:24Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2013-03-08T21:39:24Z"}, "message": "memoryfwd.h: New.\n\n\t* include/bits/memoryfwd.h: New. Centralize forward declarations.\n\t* include/bits/algorithmfwd.h: Consistent comments.\n\t* include/bits/localefwd.h: Same.\n\t* include/ext/vstring_fwd.h: Same.\n\t* include/parallel/algorithmfwd.h: Same.\n\t* include/parallel/numericfwd.h: Same.\n\t* include/std/iosfwd: Same.\n\n\t* include/bits/alloc_traits.h: Include memoryfwd.h, remove allocator\n\tforward decl.\n\t* include/ext/alloc_traits.h: Remove allocator forward decl.\n\t* include/bits/stl_construct.h: Same.\n\t* include/bits/stringfwd.h: Include memoryfwd.h, remove allocator\n\tforward decl. Consistent comments.\n\n\t* doc/doxygen/user.cfg.in (TEMPLATE_RELATIONS): To NO.\n\n\t* include/Makefile.am (bits_headers): Add memoryfwd.h.\n\t* include/Makefile.in: Regenerate.\n\t* configure: Same.\n\ne enter the commit message for your changes. Lines starting\n\nFrom-SVN: r196559", "tree": {"sha": "8b939f7ba3e32e0b985c6064776b621710a1dc02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b939f7ba3e32e0b985c6064776b621710a1dc02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd1e666505bb187f71f02bba5bdc17ff885ce243", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1e666505bb187f71f02bba5bdc17ff885ce243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1e666505bb187f71f02bba5bdc17ff885ce243", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1e666505bb187f71f02bba5bdc17ff885ce243/comments", "author": null, "committer": null, "parents": [{"sha": "68d047cb48654a89da139e03c6c5e424734a194e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d047cb48654a89da139e03c6c5e424734a194e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d047cb48654a89da139e03c6c5e424734a194e"}], "stats": {"total": 215, "additions": 132, "deletions": 83}, "files": [{"sha": "601c4deecee20cbfe4ebde8b096c0c43ddb86984", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -1,3 +1,26 @@\n+2013-03-08  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/memoryfwd.h: New. Centralize forward declarations.\n+\t* include/bits/algorithmfwd.h: Consistent comments.\n+\t* include/bits/localefwd.h: Same.\n+\t* include/ext/vstring_fwd.h: Same.\n+\t* include/parallel/algorithmfwd.h: Same.\n+\t* include/parallel/numericfwd.h: Same.\n+\t* include/std/iosfwd: Same.\n+\n+\t* include/bits/alloc_traits.h: Include memoryfwd.h, remove allocator\n+\tforward decl.\n+\t* include/ext/alloc_traits.h: Remove allocator forward decl.\n+\t* include/bits/stl_construct.h: Same.\n+\t* include/bits/stringfwd.h: Include memoryfwd.h, remove allocator\n+\tforward decl. Consistent comments.\n+\n+\t* doc/doxygen/user.cfg.in (TEMPLATE_RELATIONS): To NO.\n+\n+\t* include/Makefile.am (bits_headers): Add memoryfwd.h.\n+\t* include/Makefile.in: Regenerate.\n+\t* configure: Same.\n+\n 2013-03-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/bits/vector.tcc (vector<>operator=(const vector<>&):"}, {"sha": "fa44bacc448ef265781d740f150b893ca2177bc7", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -3530,11 +3530,11 @@ MAKEINFO=${MAKEINFO-\"${am_missing_run}makeinfo\"}\n \n # We need awk for the \"check\" target.  The system \"awk\" is bad on\n # some platforms.\n-# Always define AMTAR for backward compatibility.  Yes, it's still used\n-# in the wild :-(  We should find a proper way to deprecate it ...\n-AMTAR='$${TAR-tar}'\n+# Always define AMTAR for backward compatibility.\n \n-am__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'\n+AMTAR=${AMTAR-\"${am_missing_run}tar\"}\n+\n+am__tar='${AMTAR} chof - \"$$tardir\"'; am__untar='${AMTAR} xf -'\n \n \n "}, {"sha": "45efb632b87004e180f29d9af8a215cf0aacd37f", "filename": "libstdc++-v3/doc/doxygen/user.cfg.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -1957,7 +1957,7 @@ UML_LIMIT_NUM_FIELDS   = 10\n # If set to YES, the inheritance and collaboration graphs will show the\n # relations between templates and their instances.\n \n-TEMPLATE_RELATIONS     = YES\n+TEMPLATE_RELATIONS     = NO\n \n # If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT\n # tags are set to YES then doxygen will generate a graph for each documented"}, {"sha": "6bd3b438065b6369c93f69fb06f1340ad65e51aa", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -113,6 +113,7 @@ bits_headers = \\\n \t${bits_srcdir}/locale_facets_nonio.tcc \\\n \t${bits_srcdir}/localefwd.h \\\n \t${bits_srcdir}/mask_array.h \\\n+\t${bits_srcdir}/memoryfwd.h \\\n \t${bits_srcdir}/move.h \\\n \t${bits_srcdir}/ostream.tcc \\\n \t${bits_srcdir}/ostream_insert.h \\"}, {"sha": "6e3c89453562f8ddab3e22d607946cfba3da2751", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 8, "deletions": 35, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.6 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -15,23 +15,6 @@\n \n @SET_MAKE@\n VPATH = @srcdir@\n-am__make_dryrun = \\\n-  { \\\n-    am__dry=no; \\\n-    case $$MAKEFLAGS in \\\n-      *\\\\[\\ \\\t]*) \\\n-        echo 'am--echo: ; @echo \"AM\"  OK' | $(MAKE) -f - 2>/dev/null \\\n-          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \\\n-      *) \\\n-        for am__flg in $$MAKEFLAGS; do \\\n-          case $$am__flg in \\\n-            *=*|--*) ;; \\\n-            *n*) am__dry=yes; break;; \\\n-          esac; \\\n-        done;; \\\n-    esac; \\\n-    test $$am__dry = yes; \\\n-  }\n pkgdatadir = $(datadir)/@PACKAGE@\n pkgincludedir = $(includedir)/@PACKAGE@\n pkglibdir = $(libdir)/@PACKAGE@\n@@ -84,11 +67,6 @@ CONFIG_CLEAN_VPATH_FILES =\n depcomp =\n am__depfiles_maybe =\n SOURCES =\n-am__can_run_installinfo = \\\n-  case $$AM_UPDATE_INFO_DIR in \\\n-    n|no|NO) false;; \\\n-    *) (install-info --version) >/dev/null 2>&1;; \\\n-  esac\n ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n@@ -397,6 +375,7 @@ bits_headers = \\\n \t${bits_srcdir}/locale_facets_nonio.tcc \\\n \t${bits_srcdir}/localefwd.h \\\n \t${bits_srcdir}/mask_array.h \\\n+\t${bits_srcdir}/memoryfwd.h \\\n \t${bits_srcdir}/move.h \\\n \t${bits_srcdir}/ostream.tcc \\\n \t${bits_srcdir}/ostream_insert.h \\\n@@ -1214,7 +1193,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -1250,15 +1228,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "e6321b2eb5045653f8c08b5139c4be825197cf2d", "filename": "libstdc++-v3/include/bits/algorithmfwd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -1,4 +1,4 @@\n-// <algorithm> declarations  -*- C++ -*-\n+// <algorithm> Forward declarations  -*- C++ -*-\n \n // Copyright (C) 2007-2013 Free Software Foundation, Inc.\n //"}, {"sha": "33ea145d521d45ce6e8d87fd5e1545e6e223ee53", "filename": "libstdc++-v3/include/bits/alloc_traits.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -32,16 +32,14 @@\n \n #if __cplusplus >= 201103L\n \n+#include <bits/memoryfwd.h>\n #include <bits/ptr_traits.h>\n #include <ext/numeric_traits.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n-  template<typename _Tp>\n-    class allocator;\n-\n   template<typename _Alloc, typename _Tp>\n     class __alloctr_rebind_helper\n     {"}, {"sha": "28df242b1bc75b8249815beff46bfddab2c094b6", "filename": "libstdc++-v3/include/bits/allocator.h", "status": "modified", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -43,8 +43,8 @@\n #ifndef _ALLOCATOR_H\n #define _ALLOCATOR_H 1\n \n-// Define the base class to std::allocator.\n-#include <bits/c++allocator.h>\n+#include <bits/c++allocator.h> // Define the base class to std::allocator.\n+#include <bits/memoryfwd.h>\n #if __cplusplus >= 201103L\n #include <type_traits>\n #endif\n@@ -54,17 +54,10 @@ namespace std _GLIBCXX_VISIBILITY(default)\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n-   * @defgroup allocators Allocators\n-   * @ingroup memory\n-   *\n-   * Classes encapsulating memory operations.\n-   *\n-   * @{\n+   *  @addtogroup allocators\n+   *  @{\n    */\n \n-  template<typename _Tp>\n-    class allocator;\n-\n   /// allocator<void> specialization.\n   template<>\n     class allocator<void>\n@@ -150,13 +143,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator!=(const allocator<_Tp>&, const allocator<_Tp>&)\n     { return false; }\n \n-  /// Declare uses_allocator so it can be specialized in \\<queue\\> etc.\n-  template<typename, typename>\n-    struct uses_allocator;\n-\n-  /**\n-   * @}\n-   */\n+  /// @} group allocator\n \n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere."}, {"sha": "ca06dc11bea243fca0fd0452d400d9a153a9c6b2", "filename": "libstdc++-v3/include/bits/localefwd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -1,4 +1,4 @@\n-// Locale support -*- C++ -*-\n+// <locale> Forward declarations -*- C++ -*-\n \n // Copyright (C) 1997-2013 Free Software Foundation, Inc.\n //\n@@ -185,6 +185,6 @@ _GLIBCXX_END_NAMESPACE_LDBL\n     class messages_byname;\n \n _GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace\n+} // namespace std\n \n #endif"}, {"sha": "7c859705a27d20eaf19c248c91d5c9eec01f64dc", "filename": "libstdc++-v3/include/bits/memoryfwd.h", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmemoryfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmemoryfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmemoryfwd.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -0,0 +1,78 @@\n+// <memory> Forward declarations -*- C++ -*-\n+\n+// Copyright (C) 2001-2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/*\n+ * Copyright (c) 1996-1997\n+ * Silicon Graphics Computer Systems, Inc.\n+ *\n+ * Permission to use, copy, modify, distribute and sell this software\n+ * and its documentation for any purpose is hereby granted without fee,\n+ * provided that the above copyright notice appear in all copies and\n+ * that both that copyright notice and this permission notice appear\n+ * in supporting documentation.  Silicon Graphics makes no\n+ * representations about the suitability of this software for any\n+ * purpose.  It is provided \"as is\" without express or implied warranty.\n+ */\n+\n+/** @file bits/memoryfwd.h\n+ *  This is an internal header file, included by other library headers.\n+ *  Do not attempt to use it directly. @headername{memory}\n+ */\n+\n+#ifndef _MEMORYFWD_H\n+#define _MEMORYFWD_H 1\n+\n+#pragma GCC system_header\n+\n+#include <bits/c++config.h>\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  /**\n+   * @defgroup allocators Allocators\n+   * @ingroup memory\n+   *\n+   * Classes encapsulating memory operations.\n+   *\n+   * @{\n+   */\n+\n+  template<typename>\n+    class allocator;\n+\n+  template<>\n+    class allocator<void>;\n+\n+  /// Declare uses_allocator so it can be specialized in \\<queue\\> etc.\n+  template<typename, typename>\n+    struct uses_allocator;\n+\n+  /// @} group memory\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace std\n+\n+#endif"}, {"sha": "c1863e6492673ecada31de0ff16e49a59c16871e", "filename": "libstdc++-v3/include/bits/stl_construct.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_construct.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -133,8 +133,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * destroy() even if _Tp has a trivial destructor.\n    */\n \n-  template <typename _Tp> class allocator;\n-\n   template<typename _ForwardIterator, typename _Allocator>\n     void\n     _Destroy(_ForwardIterator __first, _ForwardIterator __last,\n@@ -154,7 +152,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n _GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace\n+} // namespace std\n \n #endif /* _STL_CONSTRUCT_H */\n "}, {"sha": "9601116d0a0aee4a91258fbc74c9539cd3b8288c", "filename": "libstdc++-v3/include/bits/stringfwd.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -1,4 +1,4 @@\n-// String support -*- C++ -*-\n+// <string> Forward declarations -*- C++ -*-\n \n // Copyright (C) 2001-2013 Free Software Foundation, Inc.\n //\n@@ -37,14 +37,12 @@\n #pragma GCC system_header\n \n #include <bits/c++config.h>\n+#include <bits/memoryfwd.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n-  template<typename _Alloc>\n-    class allocator;\n-\n   /**\n    *  @defgroup strings Strings\n    *"}, {"sha": "333473ad87b2540fb9c4234c1e68b80f67917b0a", "filename": "libstdc++-v3/include/ext/alloc_traits.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fext%2Falloc_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fext%2Falloc_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Falloc_traits.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -38,13 +38,6 @@\n # include <bits/allocator.h>  // for __alloc_swap\n #endif\n \n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n-  template<typename> struct allocator;\n-_GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace\n-\n namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -244,6 +237,6 @@ template<typename _Alloc>\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace\n+} // namespace std\n \n #endif"}, {"sha": "b917e93a96e3bf93a02b577107d3356722e8ebbe", "filename": "libstdc++-v3/include/ext/vstring_fwd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_fwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_fwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_fwd.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -1,4 +1,4 @@\n-// Versatile string forward -*- C++ -*-\n+// <vstring.h> Forward declarations -*- C++ -*-\n \n // Copyright (C) 2005-2013 Free Software Foundation, Inc.\n //"}, {"sha": "01a8a5a78fd729539175165efa6dfc3350c9f976", "filename": "libstdc++-v3/include/parallel/algorithmfwd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgorithmfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgorithmfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgorithmfwd.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -1,4 +1,4 @@\n-// <algorithm> parallel extensions -*- C++ -*-\n+// <parallel/algorithm> Forward declarations -*- C++ -*-\n \n // Copyright (C) 2007-2013 Free Software Foundation, Inc.\n //"}, {"sha": "6b3d2f156ec2ec013611d79f72c0af67b2f274b4", "filename": "libstdc++-v3/include/parallel/numericfwd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fnumericfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fnumericfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fnumericfwd.h?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -1,4 +1,4 @@\n-// <numeric> parallel extensions -*- C++ -*-\n+// <parallel/numeric> Forward declarations -*- C++ -*-\n \n // Copyright (C) 2007-2013 Free Software Foundation, Inc.\n //"}, {"sha": "c5fe26d8bc6cbd05034d838933fc14e72eef96ff", "filename": "libstdc++-v3/include/std/iosfwd", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiosfwd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1e666505bb187f71f02bba5bdc17ff885ce243/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiosfwd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiosfwd?ref=cd1e666505bb187f71f02bba5bdc17ff885ce243", "patch": "@@ -1,4 +1,4 @@\n-// Forwarding declarations -*- C++ -*-\n+// <iosfwd> Forward declarations -*- C++ -*-\n \n // Copyright (C) 1997-2013 Free Software Foundation, Inc.\n //"}]}