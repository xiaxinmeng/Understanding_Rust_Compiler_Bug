{"sha": "a83169cd671ac6aa5583e0679c94e84051df3675", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgzMTY5Y2Q2NzFhYzZhYTU1ODNlMDY3OWM5NGU4NDA1MWRmMzY3NQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2010-06-09T12:56:35Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2010-06-09T12:56:35Z"}, "message": "mk-kinds-h.sh: Define GFC_REAL_*_LITERAL_SUFFIX and GFC_REAL_*_LITERAL macros for each kind.\n\n\t* mk-kinds-h.sh: Define GFC_REAL_*_LITERAL_SUFFIX and\n\tGFC_REAL_*_LITERAL macros for each kind.\n\t* intrinsics/cpu_time.c (cpu_time_4, cpu_time_8, cpu_time_10,\n\tcpu_time_16): Use them.\n\t* intrinsics/random.c (rnumber_4, rnumber_8, rnumber_10,\n\trnumber_16): Likewise.\n\nFrom-SVN: r160470", "tree": {"sha": "f236884d1821a2340e632d7e6e3a973a81059b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f236884d1821a2340e632d7e6e3a973a81059b85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a83169cd671ac6aa5583e0679c94e84051df3675", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a83169cd671ac6aa5583e0679c94e84051df3675", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a83169cd671ac6aa5583e0679c94e84051df3675", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a83169cd671ac6aa5583e0679c94e84051df3675/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b807f4f826c9d1ddf96df2ed54f6e6fe94f3df6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b807f4f826c9d1ddf96df2ed54f6e6fe94f3df6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b807f4f826c9d1ddf96df2ed54f6e6fe94f3df6a"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "f71567d7d42de843391d40cd5ec39513d59a8b43", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a83169cd671ac6aa5583e0679c94e84051df3675/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a83169cd671ac6aa5583e0679c94e84051df3675/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=a83169cd671ac6aa5583e0679c94e84051df3675", "patch": "@@ -1,3 +1,12 @@\n+2010-06-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* mk-kinds-h.sh: Define GFC_REAL_*_LITERAL_SUFFIX and\n+\tGFC_REAL_*_LITERAL macros for each kind.\n+\t* intrinsics/cpu_time.c (cpu_time_4, cpu_time_8, cpu_time_10,\n+\tcpu_time_16): Use them.\n+\t* intrinsics/random.c (rnumber_4, rnumber_8, rnumber_10,\n+\trnumber_16): Likewise.\n+\n 2010-06-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* intrinsics/system_clock.c (system_clock_4, system_clock_8):"}, {"sha": "3580bba0928160495167d58d6fcfc23c61e6228b", "filename": "libgfortran/intrinsics/cpu_time.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a83169cd671ac6aa5583e0679c94e84051df3675/libgfortran%2Fintrinsics%2Fcpu_time.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a83169cd671ac6aa5583e0679c94e84051df3675/libgfortran%2Fintrinsics%2Fcpu_time.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fcpu_time.c?ref=a83169cd671ac6aa5583e0679c94e84051df3675", "patch": "@@ -78,7 +78,7 @@ void cpu_time_4 (GFC_REAL_4 *time)\n {\n   long sec, usec;\n   __cpu_time_1 (&sec, &usec);\n-  *time = sec + usec * (GFC_REAL_4)1.e-6;\n+  *time = sec + usec * GFC_REAL_4_LITERAL(1.e-6);\n }\n iexport(cpu_time_4);\n \n@@ -89,7 +89,7 @@ void cpu_time_8 (GFC_REAL_8 *time)\n {\n   long sec, usec;\n   __cpu_time_1 (&sec, &usec);\n-  *time = sec + usec * (GFC_REAL_8)1.e-6;\n+  *time = sec + usec * GFC_REAL_8_LITERAL(1.e-6);\n }\n \n #ifdef HAVE_GFC_REAL_10\n@@ -100,7 +100,7 @@ void cpu_time_10 (GFC_REAL_10 *time)\n {\n   long sec, usec;\n   __cpu_time_1 (&sec, &usec);\n-  *time = sec + usec * (GFC_REAL_10)1.e-6;\n+  *time = sec + usec * GFC_REAL_10_LITERAL(1.e-6);\n }\n #endif\n \n@@ -112,7 +112,7 @@ void cpu_time_16 (GFC_REAL_16 *time)\n {\n   long sec, usec;\n   __cpu_time_1 (&sec, &usec);\n-  *time = sec + usec * (GFC_REAL_16)1.e-6;\n+  *time = sec + usec * GFC_REAL_16_LITERAL(1.e-6);\n }\n #endif\n "}, {"sha": "cbe4f90322b8b37398efda06f27fec6dd743ac72", "filename": "libgfortran/intrinsics/random.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a83169cd671ac6aa5583e0679c94e84051df3675/libgfortran%2Fintrinsics%2Frandom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a83169cd671ac6aa5583e0679c94e84051df3675/libgfortran%2Fintrinsics%2Frandom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Frandom.c?ref=a83169cd671ac6aa5583e0679c94e84051df3675", "patch": "@@ -85,7 +85,7 @@ rnumber_4 (GFC_REAL_4 *f, GFC_UINTEGER_4 v)\n #error \"GFC_REAL_4_RADIX has unknown value\"\n #endif\n   v = v & mask;\n-  *f = (GFC_REAL_4) v * (GFC_REAL_4) 0x1.p-32f;\n+  *f = (GFC_REAL_4) v * GFC_REAL_4_LITERAL(0x1.p-32);\n }\n \n static inline void\n@@ -100,7 +100,7 @@ rnumber_8 (GFC_REAL_8 *f, GFC_UINTEGER_8 v)\n #error \"GFC_REAL_8_RADIX has unknown value\"\n #endif\n   v = v & mask;\n-  *f = (GFC_REAL_8) v * (GFC_REAL_8) 0x1.p-64;\n+  *f = (GFC_REAL_8) v * GFC_REAL_8_LITERAL(0x1.p-64);\n }\n \n #ifdef HAVE_GFC_REAL_10\n@@ -117,7 +117,7 @@ rnumber_10 (GFC_REAL_10 *f, GFC_UINTEGER_8 v)\n #error \"GFC_REAL_10_RADIX has unknown value\"\n #endif\n   v = v & mask;\n-  *f = (GFC_REAL_10) v * (GFC_REAL_10) 0x1.p-64;\n+  *f = (GFC_REAL_10) v * GFC_REAL_10_LITERAL(0x1.p-64);\n }\n #endif\n \n@@ -137,8 +137,8 @@ rnumber_16 (GFC_REAL_16 *f, GFC_UINTEGER_8 v1, GFC_UINTEGER_8 v2)\n #error \"GFC_REAL_16_RADIX has unknown value\"\n #endif\n   v2 = v2 & mask;\n-  *f = (GFC_REAL_16) v1 * (GFC_REAL_16) 0x1.p-64\n-    + (GFC_REAL_16) v2 * (GFC_REAL_16) 0x1.p-128;\n+  *f = (GFC_REAL_16) v1 * GFC_REAL_16_LITERAL(0x1.p-64)\n+    + (GFC_REAL_16) v2 * GFC_REAL_16_LITERAL(0x1.p-128);\n }\n #endif\n /* libgfortran previously had a Mersenne Twister, taken from the paper:"}, {"sha": "a16f98502542365bcb553e883c0d98fdc5980b94", "filename": "libgfortran/mk-kinds-h.sh", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a83169cd671ac6aa5583e0679c94e84051df3675/libgfortran%2Fmk-kinds-h.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a83169cd671ac6aa5583e0679c94e84051df3675/libgfortran%2Fmk-kinds-h.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fmk-kinds-h.sh?ref=a83169cd671ac6aa5583e0679c94e84051df3675", "patch": "@@ -82,6 +82,12 @@ for k in $possible_real_kinds; do\n     echo \"#define HAVE_GFC_REAL_${k}\"\n     echo \"#define HAVE_GFC_COMPLEX_${k}\"\n     echo \"#define GFC_REAL_${k}_HUGE ${huge}${suffix}\"\n+    echo \"#define GFC_REAL_${k}_LITERAL_SUFFIX ${suffix}\"\n+    if [ \"x$suffix\" = \"x\" ]; then\n+      echo \"#define GFC_REAL_${k}_LITERAL(X) (X)\"\n+    else\n+      echo \"#define GFC_REAL_${k}_LITERAL(X) (X ## ${suffix})\"\n+    fi\n     echo \"#define GFC_REAL_${k}_DIGITS ${digits}\"\n     echo \"#define GFC_REAL_${k}_RADIX ${radix}\"\n     echo \"\""}]}