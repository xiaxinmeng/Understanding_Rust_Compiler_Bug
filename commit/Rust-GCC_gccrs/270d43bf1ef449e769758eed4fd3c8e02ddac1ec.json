{"sha": "270d43bf1ef449e769758eed4fd3c8e02ddac1ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcwZDQzYmYxZWY0NDllNzY5NzU4ZWVkNGZkM2M4ZTAyZGRhYzFlYw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2007-03-04T19:03:13Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2007-03-04T19:03:13Z"}, "message": "re PR middle-end/30744 (ICE in compare_values, at tree-vrp.c:466)\n\n\n\tPR middle-end/30744\n\t* fold-const.c (fold_comparison): Enforce type consistency when\n\ttransforming ~X op ~Y to Y op X, and ~X op C to X op' ~C.\n\n\t* gcc.dg/pr30744-1.c: New test case.\n\nFrom-SVN: r122531", "tree": {"sha": "a609ca95a2be9b1ca5061bfa82fdba65079759d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a609ca95a2be9b1ca5061bfa82fdba65079759d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/270d43bf1ef449e769758eed4fd3c8e02ddac1ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270d43bf1ef449e769758eed4fd3c8e02ddac1ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/270d43bf1ef449e769758eed4fd3c8e02ddac1ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270d43bf1ef449e769758eed4fd3c8e02ddac1ec/comments", "author": null, "committer": null, "parents": [{"sha": "3af836867fc2213cd3b93ced426ba2d5ffc55e9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af836867fc2213cd3b93ced426ba2d5ffc55e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3af836867fc2213cd3b93ced426ba2d5ffc55e9a"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "2646f347f16469c9892601b367e6277c6559a8af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270d43bf1ef449e769758eed4fd3c8e02ddac1ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270d43bf1ef449e769758eed4fd3c8e02ddac1ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=270d43bf1ef449e769758eed4fd3c8e02ddac1ec", "patch": "@@ -1,3 +1,9 @@\n+2007-03-04  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/30744\n+\t* fold-const.c (fold_comparison): Enforce type consistency when\n+\ttransforming ~X op ~Y to Y op X, and ~X op C to X op' ~C.\n+\n 2007-03-04  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-ssa-address.c (create_mem_ref): Do not put an expression"}, {"sha": "dab2647ee288cb26cc05de4bb4e9b322eaeb5d07", "filename": "gcc/fold-const.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270d43bf1ef449e769758eed4fd3c8e02ddac1ec/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270d43bf1ef449e769758eed4fd3c8e02ddac1ec/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=270d43bf1ef449e769758eed4fd3c8e02ddac1ec", "patch": "@@ -8921,16 +8921,23 @@ fold_comparison (enum tree_code code, tree type, tree op0, tree op1)\n   /* Fold ~X op ~Y as Y op X.  */\n   if (TREE_CODE (arg0) == BIT_NOT_EXPR\n       && TREE_CODE (arg1) == BIT_NOT_EXPR)\n-    return fold_build2 (code, type,\n-\t\t\tTREE_OPERAND (arg1, 0),\n-\t\t\tTREE_OPERAND (arg0, 0));\n+    {\n+      tree cmp_type = TREE_TYPE (TREE_OPERAND (arg0, 0));\n+      return fold_build2 (code, type,\n+\t\t\t  fold_convert (cmp_type, TREE_OPERAND (arg1, 0)),\n+\t\t\t  TREE_OPERAND (arg0, 0));\n+    }\n \n   /* Fold ~X op C as X op' ~C, where op' is the swapped comparison.  */\n   if (TREE_CODE (arg0) == BIT_NOT_EXPR\n       && TREE_CODE (arg1) == INTEGER_CST)\n-    return fold_build2 (swap_tree_comparison (code), type,\n-\t\t\tTREE_OPERAND (arg0, 0),\n-\t\t\tfold_build1 (BIT_NOT_EXPR, TREE_TYPE (arg1), arg1));\n+    {\n+      tree cmp_type = TREE_TYPE (TREE_OPERAND (arg0, 0));\n+      return fold_build2 (swap_tree_comparison (code), type,\n+\t\t\t  TREE_OPERAND (arg0, 0),\n+\t\t\t  fold_build1 (BIT_NOT_EXPR, cmp_type,\n+\t\t\t\t       fold_convert (cmp_type, arg1)));\n+    }\n \n   return NULL_TREE;\n }"}, {"sha": "d469c95e120ff7b0f44314a654c990fe4e097d60", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270d43bf1ef449e769758eed4fd3c8e02ddac1ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270d43bf1ef449e769758eed4fd3c8e02ddac1ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=270d43bf1ef449e769758eed4fd3c8e02ddac1ec", "patch": "@@ -1,3 +1,8 @@\n+2007-03-04  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/30744\n+\t* gcc.dg/pr30744-1.c: New test case.\n+\n 2007-03-04  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/c_by_val.c: Use _Complex instead of a struct."}, {"sha": "f0734db60f280e3e8a125de207e1b2b4059f5575", "filename": "gcc/testsuite/gcc.dg/pr30744-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270d43bf1ef449e769758eed4fd3c8e02ddac1ec/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30744-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270d43bf1ef449e769758eed4fd3c8e02ddac1ec/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30744-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30744-1.c?ref=270d43bf1ef449e769758eed4fd3c8e02ddac1ec", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef struct {\n+  unsigned long unique;\n+} G;\n+\n+void r(G* n)\n+{\n+  unsigned long p;\n+  if (((G *) ((void *)((~(unsigned long)(p))))) != ((void *)0)) {\n+    ((G *) ((void *)((~(unsigned long)(p)))))->unique = n->unique;\n+  }\n+}\n+"}]}