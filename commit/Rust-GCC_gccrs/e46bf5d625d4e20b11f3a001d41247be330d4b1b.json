{"sha": "e46bf5d625d4e20b11f3a001d41247be330d4b1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ2YmY1ZDYyNWQ0ZTIwYjExZjNhMDAxZDQxMjQ3YmUzMzBkNGIxYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-12-23T09:10:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-12-23T09:10:18Z"}, "message": "re PR rtl-optimization/50396 (SSE division by zero generates incorrect code with optimizations enabled)\n\n2011-12-23  Richard Guenther  <rguenther@suse.de>\n\n\tPR rtl-optimization/50396\n\t* simplify-rtx.c (simplify_binary_operation_1): Properly\n\tguard code that only works for integers.\n\n\t* gcc.dg/torture/pr50396.c: New testcase.\n\nFrom-SVN: r182653", "tree": {"sha": "ff3f050835a600396300926ed08f80d6958c7f10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff3f050835a600396300926ed08f80d6958c7f10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e46bf5d625d4e20b11f3a001d41247be330d4b1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e46bf5d625d4e20b11f3a001d41247be330d4b1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e46bf5d625d4e20b11f3a001d41247be330d4b1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e46bf5d625d4e20b11f3a001d41247be330d4b1b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a27d7a6fdf22848b10ca91d6417ade086ff5c4e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a27d7a6fdf22848b10ca91d6417ade086ff5c4e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a27d7a6fdf22848b10ca91d6417ade086ff5c4e0"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "508ce456bde627d205bfee697921902481892aa2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e46bf5d625d4e20b11f3a001d41247be330d4b1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e46bf5d625d4e20b11f3a001d41247be330d4b1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e46bf5d625d4e20b11f3a001d41247be330d4b1b", "patch": "@@ -1,3 +1,9 @@\n+2011-12-23  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/50396\n+\t* simplify-rtx.c (simplify_binary_operation_1): Properly\n+\tguard code that only works for integers.\n+\n 2011-12-23  Tristan Gingold  <gingold@adacore.com>\n \n \t* config/vms/vms-crtlmap.map (log10): Fix typo."}, {"sha": "6733b84d572d41228add2c9bfd991b0ded5d885b", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e46bf5d625d4e20b11f3a001d41247be330d4b1b/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e46bf5d625d4e20b11f3a001d41247be330d4b1b/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=e46bf5d625d4e20b11f3a001d41247be330d4b1b", "patch": "@@ -2953,7 +2953,7 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n \t\t}\n \t    }\n \t}\n-      else\n+      else if (SCALAR_INT_MODE_P (mode))\n \t{\n \t  /* 0/x is 0 (or x&0 if x has side-effects).  */\n \t  if (trueop0 == CONST0_RTX (mode)"}, {"sha": "86ff93e385f45b43129d1d9fb33331fd09aeec99", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e46bf5d625d4e20b11f3a001d41247be330d4b1b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e46bf5d625d4e20b11f3a001d41247be330d4b1b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e46bf5d625d4e20b11f3a001d41247be330d4b1b", "patch": "@@ -1,3 +1,8 @@\n+2011-12-23  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/50396\n+\t* gcc.dg/torture/pr50396.c: New testcase.\n+\n 2011-12-22  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/43491"}, {"sha": "8e5d008ca01f0762a80c83acca8ca826a761b9a3", "filename": "gcc/testsuite/gcc.dg/torture/pr50396.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e46bf5d625d4e20b11f3a001d41247be330d4b1b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr50396.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e46bf5d625d4e20b11f3a001d41247be330d4b1b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr50396.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr50396.c?ref=e46bf5d625d4e20b11f3a001d41247be330d4b1b", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+typedef float vf128 __attribute__((vector_size(16)));\n+typedef float vf64 __attribute__((vector_size(8)));\n+int main()\n+{\n+#if !__FINITE_MATH_ONLY__\n+#if __FLT_HAS_QUIET_NAN__\n+  vf128 v = (vf128){ 0.f, 0.f, 0.f, 0.f };\n+  vf64 u = (vf64){ 0.f, 0.f };\n+  v = v / (vf128){ 0.f, 0.f, 0.f, 0.f };\n+  if (v[0] == v[0])\n+    abort ();\n+  u = u / (vf64){ 0.f, 0.f };\n+  if (u[0] == u[0])\n+    abort ();\n+#endif\n+#endif\n+  return 0;\n+}"}]}