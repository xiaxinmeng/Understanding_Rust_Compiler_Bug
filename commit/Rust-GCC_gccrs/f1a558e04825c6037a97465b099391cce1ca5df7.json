{"sha": "f1a558e04825c6037a97465b099391cce1ca5df7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFhNTU4ZTA0ODI1YzYwMzdhOTc0NjViMDk5MzkxY2NlMWNhNWRmNw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-02-24T06:47:56Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-02-24T06:47:56Z"}, "message": "re PR middle-end/39260 (Failed to build lame-3.98-2 source with graphite)\n\n2009-02-23  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR tree-optimization/39260\n\t* graphite.c (harmful_stmt_in_bb): Stop a SCoP when the basic block\n\tcontains a condition with a real type.\n\t(build_scop_conditions_1): Conditions are always last_stmt of a bb.\n\n\t* gcc.dg/graphite/pr39260.c: New.\n\nFrom-SVN: r144403", "tree": {"sha": "03dbde98fe3056b2c3957813884660d4779552ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03dbde98fe3056b2c3957813884660d4779552ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1a558e04825c6037a97465b099391cce1ca5df7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a558e04825c6037a97465b099391cce1ca5df7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a558e04825c6037a97465b099391cce1ca5df7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a558e04825c6037a97465b099391cce1ca5df7/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e62a4cc1b9de4b48849f3201e977602a1f124f8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62a4cc1b9de4b48849f3201e977602a1f124f8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e62a4cc1b9de4b48849f3201e977602a1f124f8d"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "19104625f6cdf9c1122c780d236f6d4a8c5ad257", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a558e04825c6037a97465b099391cce1ca5df7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a558e04825c6037a97465b099391cce1ca5df7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1a558e04825c6037a97465b099391cce1ca5df7", "patch": "@@ -1,3 +1,10 @@\n+2009-02-23  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/39260\n+\t* graphite.c (harmful_stmt_in_bb): Stop a SCoP when the basic block\n+\tcontains a condition with a real type.\n+\t(build_scop_conditions_1): Conditions are always last_stmt of a bb.\n+\n 2009-02-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/38880"}, {"sha": "a4cbdfd75a86c4cd37ca91c8d6382bea229d6607", "filename": "gcc/graphite.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a558e04825c6037a97465b099391cce1ca5df7/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a558e04825c6037a97465b099391cce1ca5df7/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=f1a558e04825c6037a97465b099391cce1ca5df7", "patch": "@@ -1209,11 +1209,23 @@ static gimple\n harmful_stmt_in_bb (basic_block scop_entry, basic_block bb)\n {\n   gimple_stmt_iterator gsi;\n+  gimple stmt;\n \n   for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n     if (!stmt_simple_for_scop_p (scop_entry, gsi_stmt (gsi)))\n       return gsi_stmt (gsi);\n \n+  stmt = last_stmt (bb);\n+  if (stmt && gimple_code (stmt) == GIMPLE_COND)\n+    {\n+      tree lhs = gimple_cond_lhs (stmt);\n+      tree rhs = gimple_cond_rhs (stmt);\n+\n+      if (TREE_CODE (TREE_TYPE (lhs)) == REAL_TYPE\n+\t  || TREE_CODE (TREE_TYPE (rhs)) == REAL_TYPE)\n+\treturn stmt;\n+    }\n+\n   return NULL;\n }\n \n@@ -3410,9 +3422,9 @@ build_scop_conditions_1 (VEC (gimple, heap) **conditions,\n   bool res = true;\n   int i, j;\n   graphite_bb_p gbb;\n-  gimple_stmt_iterator gsi;\n   basic_block bb_child, bb_iter;\n   VEC (basic_block, heap) *dom;\n+  gimple stmt;\n   \n   /* Make sure we are in the SCoP.  */\n   if (!bb_in_sese_p (bb, SCOP_REGION (scop)))\n@@ -3430,9 +3442,9 @@ build_scop_conditions_1 (VEC (gimple, heap) **conditions,\n \n   dom = get_dominated_by (CDI_DOMINATORS, bb);\n \n-  for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+  stmt = last_stmt (bb);\n+  if (stmt)\n     {\n-      gimple stmt = gsi_stmt (gsi);\n       VEC (edge, gc) *edges;\n       edge e;\n "}, {"sha": "4256418d318d8303ee8e70719d73e30bdf5a92f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a558e04825c6037a97465b099391cce1ca5df7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a558e04825c6037a97465b099391cce1ca5df7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f1a558e04825c6037a97465b099391cce1ca5df7", "patch": "@@ -1,3 +1,8 @@\n+2009-02-23  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/39260\n+\t* gcc.dg/graphite/pr39260.c: New.\n+\n 2009-02-23  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* g++.dg/init/static-init1.C: Replace int with __PTRDIFF_TYPE__."}, {"sha": "066b5bde8c21f3cbd45227ef83769451974f48d7", "filename": "gcc/testsuite/gcc.dg/graphite/pr39260.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a558e04825c6037a97465b099391cce1ca5df7/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr39260.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a558e04825c6037a97465b099391cce1ca5df7/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr39260.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr39260.c?ref=f1a558e04825c6037a97465b099391cce1ca5df7", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O2 -fgraphite-identity -ffast-math\" } */\n+\n+VBR_encode_frame (int mode_gr, int channels_out, int max_bits[2][2])\n+{\n+ int max_nbits_ch[2][2];\n+ int gr, ch;\n+ for (gr = 0; gr < mode_gr; ++gr)\n+   {\n+     float f[2], s = 0;\n+     for (ch = 0; ch < channels_out; ++ch)\n+       if (max_nbits_ch[gr][ch] > 0)\n+         s += f[ch];\n+     for (ch = 0; ch < channels_out; ++ch)\n+       if (s > 0)\n+         max_nbits_ch[gr][ch] = 7680 * f[ch] / s;\n+   }\n+}"}]}