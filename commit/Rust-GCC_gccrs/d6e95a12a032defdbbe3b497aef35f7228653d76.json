{"sha": "d6e95a12a032defdbbe3b497aef35f7228653d76", "node_id": "C_kwDOANBUbNoAKGQ2ZTk1YTEyYTAzMmRlZmRiYmUzYjQ5N2FlZjM1ZjcyMjg2NTNkNzY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-13T20:59:01Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-14T08:35:05Z"}, "message": "Revert \"sphinx: fix cross manual references\"\n\nThis reverts commit 72318642439703bba8c83423d4706e06444254d6.", "tree": {"sha": "47fbcefbc6e898b15daf90532799c1933a87e09d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47fbcefbc6e898b15daf90532799c1933a87e09d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6e95a12a032defdbbe3b497aef35f7228653d76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e95a12a032defdbbe3b497aef35f7228653d76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6e95a12a032defdbbe3b497aef35f7228653d76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e95a12a032defdbbe3b497aef35f7228653d76/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcdbe60266928bf25dd93463371da66d43240cb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcdbe60266928bf25dd93463371da66d43240cb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcdbe60266928bf25dd93463371da66d43240cb6"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "6c2616a0f1c016e869c15322b8c5965aaf104650", "filename": "gcc/ada/doc/gnat_rm/index.rst", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e95a12a032defdbbe3b497aef35f7228653d76/gcc%2Fada%2Fdoc%2Fgnat_rm%2Findex.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e95a12a032defdbbe3b497aef35f7228653d76/gcc%2Fada%2Fdoc%2Fgnat_rm%2Findex.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Findex.rst?ref=d6e95a12a032defdbbe3b497aef35f7228653d76", "patch": "@@ -1,7 +1,6 @@\n-.. _top:\n-\n GNAT Reference Manual\n =====================\n+\n .. only:: not latex\n \n     *GNAT, The GNU Ada Development Environment*"}, {"sha": "61420c1c3956b49512000562b441f33b2e716eae", "filename": "gcc/doc/gcc/gcc-command-options/options-controlling-the-kind-of-output.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e95a12a032defdbbe3b497aef35f7228653d76/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foptions-controlling-the-kind-of-output.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e95a12a032defdbbe3b497aef35f7228653d76/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foptions-controlling-the-kind-of-output.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foptions-controlling-the-kind-of-output.rst?ref=d6e95a12a032defdbbe3b497aef35f7228653d76", "patch": "@@ -700,7 +700,7 @@ one of the options :option:`-c`, :option:`-S`, or :option:`-E` to say where\n .. option:: -fdump-ada-spec[-slim]\n \n   For C and C++ source and include files, generate corresponding Ada specs.\n-  See :ref:`gnat_ugn:Generating_Ada_Bindings_for_C_and_C++_headers`, which provides detailed documentation on this feature.\n+  See :ref:`gnat_ugn:generating-ada-bindings-for-c-and-c++-headers`, which provides detailed documentation on this feature.\n \n .. option:: -fada-spec-parent={unit}\n "}, {"sha": "001116ac260ee92f45118db2ad053d95a5505eb7", "filename": "gcc/doc/gcc/language-standards-supported-by-gcc/references-for-other-languages.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e95a12a032defdbbe3b497aef35f7228653d76/gcc%2Fdoc%2Fgcc%2Flanguage-standards-supported-by-gcc%2Freferences-for-other-languages.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e95a12a032defdbbe3b497aef35f7228653d76/gcc%2Fdoc%2Fgcc%2Flanguage-standards-supported-by-gcc%2Freferences-for-other-languages.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc%2Flanguage-standards-supported-by-gcc%2Freferences-for-other-languages.rst?ref=d6e95a12a032defdbbe3b497aef35f7228653d76", "patch": "@@ -10,4 +10,4 @@ See :ref:`gnat_rm:top`, for information on standard\n conformance and compatibility of the Ada compiler.\n \n See :ref:`gfortran:standards`, for details\n-of standards supported by GNU Fortran.\n+of standards supported by GNU Fortran.\n\\ No newline at end of file"}, {"sha": "092380c8f2088b7fcd1e4e16970f7b09062dbbdb", "filename": "gcc/jit/doc/internals/index.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e95a12a032defdbbe3b497aef35f7228653d76/gcc%2Fjit%2Fdoc%2Finternals%2Findex.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e95a12a032defdbbe3b497aef35f7228653d76/gcc%2Fjit%2Fdoc%2Finternals%2Findex.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdoc%2Finternals%2Findex.rst?ref=d6e95a12a032defdbbe3b497aef35f7228653d76", "patch": "@@ -173,7 +173,7 @@ For example, the following invocation verbosely runs the testcase\n   (...shows full valgrind report for this test case...)\n \n When running under valgrind, it's best to have configured gcc with\n-:option:`install:--enable-valgrind-annotations`, which automatically suppresses\n+:option:`--enable-valgrind-annotations`, which automatically suppresses\n various known false positives.\n \n Environment variables"}, {"sha": "b1a7a0af56fcb4bdd8cd3b997a1425da5b8ac4b6", "filename": "gcc/jit/doc/topics/contexts.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e95a12a032defdbbe3b497aef35f7228653d76/gcc%2Fjit%2Fdoc%2Ftopics%2Fcontexts.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e95a12a032defdbbe3b497aef35f7228653d76/gcc%2Fjit%2Fdoc%2Ftopics%2Fcontexts.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdoc%2Ftopics%2Fcontexts.rst?ref=d6e95a12a032defdbbe3b497aef35f7228653d76", "patch": "@@ -237,7 +237,7 @@ future activies on a context to the given `FILE *`.\n    a much simpler executable that performs the equivalent calls into\n    libgccjit, without needing the client code and its data.\n \n-   Typically you need to supply :option:`gcc:-Wno-unused-variable` when\n+   Typically you need to supply :option:`-Wno-unused-variable` when\n    compiling the generated file (since the result of each API call is\n    assigned to a unique variable within the generated C source, and not\n    all are necessarily then used).\n@@ -252,7 +252,7 @@ future activies on a context to the given `FILE *`.\n \n    Parameter \"dumpname\" corresponds to the equivalent gcc command-line\n    option, without the \"-fdump-\" prefix.\n-   For example, to get the equivalent of :option:`-fdump-tree-vrp <gcc:-fdump-tree-all>`,\n+   For example, to get the equivalent of :option:`-fdump-tree-vrp1`,\n    supply ``\"tree-vrp1\"``:\n \n    .. code-block:: c"}]}