{"sha": "55d61dbaccbb0d9bf0c758f7819fd062b29c68c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVkNjFkYmFjY2JiMGQ5YmYwYzc1OGY3ODE5ZmQwNjJiMjljNjhjMw==", "commit": {"author": {"name": "Paul Woegerer", "email": "paul.woegerer@nsc.com", "date": "2005-08-26T08:20:55Z"}, "committer": {"name": "Paul Woegerer", "email": "woepaul@gcc.gnu.org", "date": "2005-08-26T08:20:55Z"}, "message": "crx.md: Make doloop_end pattern usage controllable via mloop-nesting=<max-nesting>...\n\n\t* config/crx/crx.md: Make doloop_end pattern usage controllable\n\tvia mloop-nesting=<max-nesting> command line switch. Make sure\n\tthe combiner cannot use doloop_end_<mode> in an illegal way.\n\t* config/crx/crx.c: Use regs up to r6 for argument passing.\n\tRefine crx_address_cost (non cst4 displacements are expensive).\n\t* config/crx/crx.opt: Add switch for mloop-nesting=.\n\nFrom-SVN: r103518", "tree": {"sha": "de36a3fcf8b3c9b0c48ef8571fa90048c8649816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de36a3fcf8b3c9b0c48ef8571fa90048c8649816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3/comments", "author": null, "committer": null, "parents": [{"sha": "742090fc6f48db006c598a5ad829047724796aa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742090fc6f48db006c598a5ad829047724796aa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/742090fc6f48db006c598a5ad829047724796aa0"}], "stats": {"total": 144, "additions": 85, "deletions": 59}, "files": [{"sha": "5ed3aca1cc762e19bec66c1b9cd39beb26a2edf3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55d61dbaccbb0d9bf0c758f7819fd062b29c68c3", "patch": "@@ -1,3 +1,12 @@\n+2005-08-26  Paul Woegerer  <paul.woegerer@nsc.com>\n+\n+\t* config/crx/crx.md: Make doloop_end pattern usage controllable\n+\tvia mloop-nesting=<max-nesting> command line switch. Make sure\n+\tthe combiner cannot use doloop_end_<mode> in an illegal way.\n+\t* config/crx/crx.c: Use regs up to r6 for argument passing.\n+\tRefine crx_address_cost (non cst4 displacements are expensive).\n+\t* config/crx/crx.opt: Add switch for mloop-nesting=.\n+\n 2005-08-26  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/s390/s390.md: (\"movstr\", \"*movstr\"): Add patterns."}, {"sha": "b73cde84ec0a1a5801a7e7f70cd4d06b7afe7ca4", "filename": "gcc/config/crx/crx.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3/gcc%2Fconfig%2Fcrx%2Fcrx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3/gcc%2Fconfig%2Fcrx%2Fcrx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcrx%2Fcrx.c?ref=55d61dbaccbb0d9bf0c758f7819fd062b29c68c3", "patch": "@@ -54,7 +54,7 @@\n /*****************************************************************************/\n \n /* Maximum number of register used for passing parameters.  */\n-#define MAX_REG_FOR_PASSING_ARGS 5\n+#define MAX_REG_FOR_PASSING_ARGS 6\n \n /* Minimum number register used for passing parameters.  */\n #define MIN_REG_FOR_PASSING_ARGS 2\n@@ -827,6 +827,15 @@ crx_address_cost (rtx addr)\n   if (address.index && address.scale == 1)\n     cost+=5;\n \n+  if (address.disp && !INT_CST4 (INTVAL (address.disp)))\n+    cost+=2;\n+\n+  if (TARGET_DEBUG_ADDR)\n+    {\n+      fprintf (stderr, \"\\n======\\nTARGET_ADDRESS_COST = %d\\n\", cost);\n+      debug_rtx (addr);\n+    }\n+  \n   return cost;\n }\n "}, {"sha": "bb052d206d00310b3ec6248505da830391aa30d9", "filename": "gcc/config/crx/crx.md", "status": "modified", "additions": 62, "deletions": 58, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3/gcc%2Fconfig%2Fcrx%2Fcrx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3/gcc%2Fconfig%2Fcrx%2Fcrx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcrx%2Fcrx.md?ref=55d61dbaccbb0d9bf0c758f7819fd062b29c68c3", "patch": "@@ -31,7 +31,7 @@\n   ]\n )\n \n-(define_attr \"length\" \"\" ( const_int 6 ) )\n+(define_attr \"length\" \"\" ( const_int 6 ))\n \n (define_asm_attributes\n   [(set_attr \"length\" \"6\")]\n@@ -118,7 +118,7 @@\n \t\t (match_operand:DI 2 \"nonmemory_operand\" \"r,i\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"addd\\\\t%L2, %L1\\;addcd\\\\t%H2, %H1\"\n+  \"addd\\t%L2, %L1\\;addcd\\t%H2, %H1\"\n   [(set_attr \"length\" \"4,12\")]\n )\n \n@@ -128,7 +128,7 @@\n \t\t    (match_operand:CRXIM 2 \"nonmemory_operand\" \"r,i\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"add<tIsa>\\\\t%2, %0\"\n+  \"add<tIsa>\\t%2, %0\"\n   [(set_attr \"length\" \"2,<lImmArith>\")]\n )\n \n@@ -140,7 +140,7 @@\n \t\t  (match_operand:DI 2 \"nonmemory_operand\" \"r,i\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"subd\\\\t%L2, %L1\\;subcd\\\\t%H2, %H1\"\n+  \"subd\\t%L2, %L1\\;subcd\\t%H2, %H1\"\n   [(set_attr \"length\" \"4,12\")]\n )\n \n@@ -150,7 +150,7 @@\n \t\t     (match_operand:CRXIM 2 \"nonmemory_operand\" \"r,i\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"sub<tIsa>\\\\t%2, %0\"\n+  \"sub<tIsa>\\t%2, %0\"\n   [(set_attr \"length\" \"2,<lImmArith>\")]\n )\n \n@@ -162,7 +162,7 @@\n \t\t    (match_operand:CRXIM 2 \"nonmemory_operand\" \"r,i\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"mul<tIsa>\\\\t%2, %0\"\n+  \"mul<tIsa>\\t%2, %0\"\n   [(set_attr \"length\" \"2,<lImmArith>\")]\n )\n \n@@ -174,7 +174,7 @@\n \t\t (sz_xtnd:DI (match_operand:SI 2 \"register_operand\" \"r\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"mull<sPat>d\\\\t%2, %1\"\n+  \"mull<sPat>d\\t%2, %1\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -184,7 +184,7 @@\n \t\t (sz_xtnd:SI (match_operand:HI 2 \"register_operand\" \"r\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"mul<sPat>wd\\\\t%2, %0\"\n+  \"mul<sPat>wd\\t%2, %0\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -194,7 +194,7 @@\n \t\t (sz_xtnd:HI (match_operand:QI 2 \"register_operand\" \"r\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"mul<sPat>bw\\\\t%2, %0\"\n+  \"mul<sPat>bw\\t%2, %0\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -206,7 +206,7 @@\n \t\t   (match_operand:CRXIM 2 \"nonmemory_operand\" \"r,i\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"and<tIsa>\\\\t%2, %0\"\n+  \"and<tIsa>\\t%2, %0\"\n   [(set_attr \"length\" \"2,<lImmArith>\")]\n )\n \n@@ -218,7 +218,7 @@\n \t\t   (match_operand:CRXIM 2 \"nonmemory_operand\" \"r,i\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"or<tIsa>\\\\t%2, %0\"\n+  \"or<tIsa>\\t%2, %0\"\n   [(set_attr \"length\" \"2,<lImmArith>\")]\n )\n \n@@ -230,7 +230,7 @@\n \t\t   (match_operand:CRXIM 2 \"nonmemory_operand\" \"r,i\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"xor<tIsa>\\\\t%2, %0\"\n+  \"xor<tIsa>\\t%2, %0\"\n   [(set_attr \"length\" \"2,<lImmArith>\")]\n )\n \n@@ -241,7 +241,7 @@\n \t(sz_xtnd:SI (match_operand:HI 1 \"register_operand\" \"r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"<szIsa>extwd\\\\t%1, %0\"\n+  \"<szIsa>extwd\\t%1, %0\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -250,7 +250,7 @@\n \t(sz_xtnd:SI (match_operand:QI 1 \"register_operand\" \"r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"<szIsa>extbd\\\\t%1, %0\"\n+  \"<szIsa>extbd\\t%1, %0\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -259,7 +259,7 @@\n \t(sz_xtnd:HI (match_operand:QI 1 \"register_operand\" \"r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"<szIsa>extbw\\\\t%1, %0\"\n+  \"<szIsa>extbw\\t%1, %0\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -270,7 +270,7 @@\n \t(neg:CRXIM (match_operand:CRXIM 1 \"register_operand\" \"r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"neg<tIsa>\\\\t%1, %0\"\n+  \"neg<tIsa>\\t%1, %0\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -281,7 +281,7 @@\n \t(abs:CRXIM (match_operand:CRXIM 1 \"register_operand\" \"r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"abs<tIsa>\\\\t%1, %0\"\n+  \"abs<tIsa>\\t%1, %0\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -292,7 +292,7 @@\n \t(mima_oprnd:CRXIM (match_operand:CRXIM 1 \"register_operand\"  \"%0\")\n \t\t\t  (match_operand:CRXIM 2 \"register_operand\"  \"r\")))]\n   \"\"\n-  \"<mimaIsa><tIsa>\\\\t%2, %0\"\n+  \"<mimaIsa><tIsa>\\t%2, %0\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -303,7 +303,7 @@\n \t(not:CRXIM (match_operand:CRXIM 1 \"register_operand\" \"0\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"xor<tIsa>\\\\t$-1, %0\"\n+  \"xor<tIsa>\\t$-1, %0\"\n   [(set_attr \"length\" \"2\")]\n )\n \n@@ -316,8 +316,8 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"@\n-  rotl<tIsa>\\\\t%2, %0\n-  rot<tIsa>\\\\t%2, %0\"\n+  rotl<tIsa>\\t%2, %0\n+  rot<tIsa>\\t%2, %0\"\n   [(set_attr \"length\" \"4,<lImmRotl>\")]\n )\n \n@@ -327,7 +327,7 @@\n \t\t\t(match_operand:CRXIM 2 \"register_operand\" \"r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"rotr<tIsa>\\\\t%2, %0\"\n+  \"rotr<tIsa>\\t%2, %0\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -339,7 +339,7 @@\n \t\t\t(match_operand:QI 2 \"nonmemory_operand\" \"r,<IJK>\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n-  \"s<shIsa><tIsa>\\\\t%2, %0\"\n+  \"s<shIsa><tIsa>\\t%2, %0\"\n   [(set_attr \"length\" \"2,2\")]\n )\n \n@@ -433,10 +433,10 @@\n \t(match_operand:SISFM 1 \"nonmemory_operand\" \"r, <iF>, k, r\"))]\n   \"\"\n   \"@\n-  movd\\\\t%1, %0\n-  movd\\\\t%1, %0\n-  mfpr\\\\t%1, %0\n-  mtpr\\\\t%1, %0\"\n+  movd\\t%1, %0\n+  movd\\t%1, %0\n+  mfpr\\t%1, %0\n+  mtpr\\t%1, %0\"\n   [(set_attr \"length\" \"2,6,4,4\")]\n )\n \n@@ -464,15 +464,15 @@\n   [(set (match_operand:SHORT 0 \"register_operand\" \"=r, r\")\n \t(match_operand:SHORT 1 \"nonmemory_operand\" \"r, i\"))]\n   \"\"\n-  \"mov<tIsa>\\\\t%1, %0\"\n+  \"mov<tIsa>\\t%1, %0\"\n   [(set_attr \"length\" \"2,<lImmArith>\")]\n )\n \n (define_insn \"mov<mode>_load\"\n   [(set (match_operand:CRXMM 0 \"register_operand\" \"=r\")\n \t(match_operand:CRXMM 1 \"memory_operand\" \"m\"))]\n   \"\"\n-  \"load<tIsa>\\\\t%1, %0\"\n+  \"load<tIsa>\\t%1, %0\"\n   [(set_attr \"length\" \"6\")]\n )\n \n@@ -493,7 +493,7 @@\n   [(set (match_operand:CRXMM 0 \"store_operand\" \"=m, m\")\n \t(match_operand:CRXMM 1 \"reg_or_u4bits_operand\" \"r, <JG>\"))]\n   \"\"\n-  \"stor<tIsa>\\\\t%1, %0\"\n+  \"stor<tIsa>\\t%1, %0\"\n   [(set_attr \"length\" \"6\")]\n )\n \n@@ -531,7 +531,7 @@\n \t\t      (label_ref (match_operand 3 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n-  \"cmpb%d0<tIsa>\\\\t%2, %1, %l3\"\n+  \"cmpb%d0<tIsa>\\t%2, %1, %l3\"\n   [(set_attr \"length\" \"6\")]\n )\n \n@@ -554,7 +554,7 @@\n \t(compare:CC (match_operand:CRXIM 0 \"register_operand\" \"r,r\")\n \t\t    (match_operand:CRXIM 1 \"nonmemory_operand\" \"r,i\")))]\n   \"\"\n-  \"cmp<tIsa>\\\\t%1, %0\"\n+  \"cmp<tIsa>\\t%1, %0\"\n   [(set_attr \"length\" \"2,<lImmArith>\")]\n )\n \n@@ -581,7 +581,7 @@\n \t\t      (label_ref (match_operand 1 \"\"))\n \t\t      (pc)))]\n   \"\"\n-  \"b%d0\\\\t%l1\"\n+  \"b%d0\\t%l1\"\n   [(set_attr \"length\" \"6\")]\n )\n \n@@ -602,7 +602,7 @@\n \t(match_operator:SI 1 \"comparison_operator\"\n \t  [(reg:CC CC_REGNUM) (const_int 0)]))]\n   \"\"\n-  \"s%d1\\\\t%0\"\n+  \"s%d1\\t%0\"\n   [(set_attr \"length\" \"2\")]\n )\n \n@@ -615,7 +615,7 @@\n      (return)])\n   ]\n   \"reload_completed\"\n-  \"jump\\\\tra\"\n+  \"jump\\tra\"\n   [(set_attr \"length\" \"2\")]\n )\n \n@@ -624,8 +624,8 @@\n \t(match_operand:SI 0 \"reg_or_sym_operand\" \"r,i\"))]\n   \"\"\n   \"@\n-  jump\\\\t%0\n-  br\\\\t%a0\"\n+  jump\\t%0\n+  br\\t%a0\"\n   [(set_attr \"length\" \"2,6\")]\n )\n \n@@ -644,15 +644,15 @@\n   [(set (pc)\n \t(match_operand 0 \"immediate_operand\" \"i\"))]\n   \"\"\n-  \"br\\\\t%c0\"\n+  \"br\\t%c0\"\n   [(set_attr \"length\" \"6\")]\n )\n \n (define_insn \"jump\"\n   [(set (pc)\n \t(label_ref (match_operand 0 \"\" \"\")))]\n   \"\"\n-  \"br\\\\t%l0\"\n+  \"br\\t%l0\"\n   [(set_attr \"length\" \"6\")]\n )\n \n@@ -709,7 +709,7 @@\n      (return)])\n   ]\n   \"reload_completed\"\n-  \"popret\\\\tra\"\n+  \"popret\\tra\"\n   [(set_attr \"length\" \"2\")]\n )\n \n@@ -720,7 +720,7 @@\n \t(match_operand:SI 0 \"register_operand\" \"r\"))\n \t(use (label_ref:SI (match_operand 1 \"\" \"\" )))]\n   \"\"\n-  \"jump\\\\t%0\"\n+  \"jump\\t%0\"\n   [(set_attr \"length\" \"2\")]\n )\n \n@@ -750,7 +750,7 @@\n \t (match_operand 1 \"\" \"\"))\n    (clobber (match_operand:SI 2 \"register_operand\" \"+r\"))]\n   \"\"\n-  \"bal\\\\tra, %a0\"\n+  \"bal\\tra, %a0\"\n   [(set_attr \"length\" \"6\")]\n )\n \n@@ -759,7 +759,7 @@\n \t (match_operand 1 \"\" \"\"))\n    (clobber (match_operand:SI 2 \"register_operand\" \"+r\"))]\n   \"\"\n-  \"jal\\\\t%0\"\n+  \"jal\\t%0\"\n   [(set_attr \"length\" \"2\")]\n )\n \n@@ -770,7 +770,7 @@\n \t (match_operand 2 \"\" \"\"))\n    (clobber (match_operand:SI 3 \"register_operand\" \"+r\"))]\n   \"\"\n-  \"jalid\\\\t%0, %1\"\n+  \"jalid\\t%0, %1\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -803,7 +803,7 @@\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (match_operand:SI 3 \"register_operand\" \"+r\"))]\n   \"\"\n-  \"bal\\\\tra, %a1\"\n+  \"bal\\tra, %a1\"\n   [(set_attr \"length\" \"6\")]\n )\n \n@@ -813,7 +813,7 @@\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (match_operand:SI 3 \"register_operand\" \"+r\"))]\n   \"\"\n-  \"jal\\\\t%1\"\n+  \"jal\\t%1\"\n   [(set_attr \"length\" \"2\")]\n )\n \n@@ -825,7 +825,7 @@\n \t      (match_operand 3 \"\" \"\")))\n    (clobber (match_operand:SI 4 \"register_operand\" \"+r\"))]\n   \"\"\n-  \"jalid\\\\t%0, %1\"\n+  \"jalid\\t%0, %1\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -847,7 +847,7 @@\n \t  (match_dup 0)))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_MAC\"\n-  \"mac<sPat>d\\\\t%2, %1\"\n+  \"mac<sPat>d\\t%2, %1\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -859,7 +859,7 @@\n \t  (match_dup 0)))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_MAC\"\n-  \"mac<sPat>w\\\\t%2, %1\"\n+  \"mac<sPat>w\\t%2, %1\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -871,7 +871,7 @@\n \t  (match_dup 0)))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_MAC\"\n-  \"mac<sPat>b\\\\t%2, %1\"\n+  \"mac<sPat>b\\t%2, %1\"\n   [(set_attr \"length\" \"4\")]\n )\n \n@@ -885,16 +885,18 @@\n    (use (match_operand 4 \"\" \"\"))]       ; label\n   \"\"\n   {\n+    if (INTVAL (operands[3]) > crx_loop_nesting)\n+      FAIL;\n     switch (GET_MODE (operands[0]))\n       {\n       case SImode:\n-\temit_jump_insn (gen_doloop_end_si (operands[4], operands[0], operands[0]));\n+\temit_jump_insn (gen_doloop_end_si (operands[4], operands[0]));\n \tbreak;\n       case HImode:\n-\temit_jump_insn (gen_doloop_end_hi (operands[4], operands[0], operands[0]));\n+\temit_jump_insn (gen_doloop_end_hi (operands[4], operands[0]));\n \tbreak;\n       case QImode:\n-\temit_jump_insn (gen_doloop_end_qi (operands[4], operands[0], operands[0]));\n+\temit_jump_insn (gen_doloop_end_qi (operands[4], operands[0]));\n \tbreak;\n       default:\n \tFAIL;\n@@ -903,18 +905,20 @@\n   }\n )\n \n+;   CRX dbnz[bwd] used explicitly (see above) but also by the combiner.\n+\n (define_insn \"doloop_end_<mode>\"\n   [(set (pc)\n-\t(if_then_else (ne (match_operand:CRXIM 1 \"register_operand\" \"r,m\")\n+\t(if_then_else (ne (match_operand:CRXIM 1 \"register_operand\" \"+r,!m\")\n \t\t\t  (const_int 1))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n-   (set (match_operand:CRXIM 2 \"register_operand\" \"=r,m\") (plus:CRXIM (match_dup 1) (const_int -1)))\n-   (clobber (match_scratch:CRXIM 3 \"=X,r\"))\n+   (set (match_dup 1) (plus:CRXIM (match_dup 1) (const_int -1)))\n+   (clobber (match_scratch:CRXIM 2 \"=X,r\"))\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"@\n-  dbnz<tIsa>\\\\t%1, %l0\n-  load<tIsa>\\\\t%1, %3\\;add<tIsa>\\\\t$-1, %3\\;stor<tIsa>\\\\t%3, %1\\;bne\\\\t%l0\"\n+  dbnz<tIsa>\\t%1, %l0\n+  load<tIsa>\\t%1, %2\\;add<tIsa>\\t$-1, %2\\;stor<tIsa>\\t%2, %1\\;bne\\t%l0\"\n   [(set_attr \"length\" \"6, 12\")]\n )"}, {"sha": "c8208f1acd55a9974e3a94f7f8e822b5709d91e2", "filename": "gcc/config/crx/crx.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3/gcc%2Fconfig%2Fcrx%2Fcrx.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d61dbaccbb0d9bf0c758f7819fd062b29c68c3/gcc%2Fconfig%2Fcrx%2Fcrx.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcrx%2Fcrx.opt?ref=55d61dbaccbb0d9bf0c758f7819fd062b29c68c3", "patch": "@@ -27,5 +27,9 @@ mno-push-args\n Target Report RejectNegative Mask(NO_PUSH_ARGS)\n Do not use push to store function arguments\n \n+mloop-nesting=\n+Common RejectNegative Joined UInteger Var(crx_loop_nesting) Init(12)\n+Restrict doloop to the given nesting level\n+\n mdebug-addr\n Target RejectNegative Var(TARGET_DEBUG_ADDR) Undocumented"}]}