{"sha": "05e73743d5c48509ad97d996e0c5ad07d30edef7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVlNzM3NDNkNWM0ODUwOWFkOTdkOTk2ZTBjNWFkMDdkMzBlZGVmNw==", "commit": {"author": {"name": "Sa Liu", "email": "saliu@gcc.gnu.org", "date": "2008-05-15T12:51:56Z"}, "committer": {"name": "Sa Liu", "email": "saliu@gcc.gnu.org", "date": "2008-05-15T12:51:56Z"}, "message": "New helper function to return the standard that supports this isocbinding symbol.Do not generate GNU extension symbols if std=f2003. Add new parameter to NAMED_INTCST.\n\nFrom-SVN: r135341", "tree": {"sha": "1174e9fa095e18d4a167bd2d98cc046678963e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1174e9fa095e18d4a167bd2d98cc046678963e8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05e73743d5c48509ad97d996e0c5ad07d30edef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05e73743d5c48509ad97d996e0c5ad07d30edef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05e73743d5c48509ad97d996e0c5ad07d30edef7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05e73743d5c48509ad97d996e0c5ad07d30edef7/comments", "author": null, "committer": null, "parents": [{"sha": "ec9231857bb739c9facebaeb52f9cacb4116a6d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec9231857bb739c9facebaeb52f9cacb4116a6d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec9231857bb739c9facebaeb52f9cacb4116a6d1"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "7f79ee38d6a2402fe006a365fbae58d07ce5de26", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05e73743d5c48509ad97d996e0c5ad07d30edef7/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05e73743d5c48509ad97d996e0c5ad07d30edef7/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=05e73743d5c48509ad97d996e0c5ad07d30edef7", "patch": "@@ -3740,6 +3740,20 @@ build_formal_args (gfc_symbol *new_proc_sym,\n   gfc_current_ns = parent_ns;\n }\n \n+static int\n+std_for_isocbinding_symbol (int id)\n+{\n+  switch (id)\n+    {\n+#define NAMED_INTCST(a,b,c,d) \\\n+      case a:\\\n+        return d;\n+#include \"iso-c-binding.def\"\n+#undef NAMED_INTCST\n+       default:\n+         return GFC_STD_F2003;\n+    }\n+}\n \n /* Generate the given set of C interoperable kind objects, or all\n    interoperable kinds.  This function will only be given kind objects\n@@ -3765,6 +3779,8 @@ generate_isocbinding_symbol (const char *mod_name, iso_c_binding_symbol s,\n   char comp_name[(GFC_MAX_SYMBOL_LEN * 2) + 1];\n   int index;\n \n+  if (gfc_notification_std (std_for_isocbinding_symbol (s)) == FAILURE)\n+    return;\n   tmp_symtree = gfc_find_symtree (gfc_current_ns->sym_root, name);\n \n   /* Already exists in this scope so don't re-add it.\n@@ -3788,7 +3804,7 @@ generate_isocbinding_symbol (const char *mod_name, iso_c_binding_symbol s,\n   switch (s)\n     {\n \n-#define NAMED_INTCST(a,b,c) case a :\n+#define NAMED_INTCST(a,b,c,d) case a : \n #define NAMED_REALCST(a,b,c) case a :\n #define NAMED_CMPXCST(a,b,c) case a :\n #define NAMED_LOGCST(a,b,c) case a :"}]}