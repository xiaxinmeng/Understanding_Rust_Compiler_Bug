{"sha": "2b61ed838c7f3f4bf54d4530c0f053b420623beb", "node_id": "C_kwDOANBUbNoAKDJiNjFlZDgzOGM3ZjNmNGJmNTRkNDUzMGMwZjA1M2I0MjA2MjNiZWI", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-17T08:17:13Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-20T05:15:53Z"}, "message": "frange: flush denormals to zero\n\nFor some architectures (or for -funsafe-math-optimizations) we may\nflush denormals to zero, in which case we need to be careful to\nextend the ranges to the appropriate zero.  This patch does exactly that.\nFor a range of [x, -DENORMAL] we flush to [x, -0.0] and for [+DENORMAL, x]\nwe flush to [+0.0, x].\n\ngcc/ChangeLog:\n\n\t* value-range.cc (frange::flush_denormals_to_zero): New.\n\t(frange::set): Call flush_denormals_to_zero.\n\t* value-range.h (class frange): Add flush_denormals_to_zero.", "tree": {"sha": "fe47a01ed74f10a60e11a5514e3f1040125648a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe47a01ed74f10a60e11a5514e3f1040125648a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b61ed838c7f3f4bf54d4530c0f053b420623beb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b61ed838c7f3f4bf54d4530c0f053b420623beb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b61ed838c7f3f4bf54d4530c0f053b420623beb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b61ed838c7f3f4bf54d4530c0f053b420623beb/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "041812f584a1c82f1255bd96f3503493bd9fb127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/041812f584a1c82f1255bd96f3503493bd9fb127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/041812f584a1c82f1255bd96f3503493bd9fb127"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "a8e3bb39babed6da54142e0940b342d66531f72f", "filename": "gcc/value-range.cc", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b61ed838c7f3f4bf54d4530c0f053b420623beb/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b61ed838c7f3f4bf54d4530c0f053b420623beb/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=2b61ed838c7f3f4bf54d4530c0f053b420623beb", "patch": "@@ -267,6 +267,26 @@ tree_compare (tree_code code, tree op1, tree op2)\n   return !integer_zerop (fold_build2 (code, integer_type_node, op1, op2));\n }\n \n+// Flush denormal endpoints to the appropriate 0.0.\n+\n+void\n+frange::flush_denormals_to_zero ()\n+{\n+  if (undefined_p () || known_isnan ())\n+    return;\n+\n+  // Flush [x, -DENORMAL] to [x, -0.0].\n+  if (real_isdenormal (&m_max) && real_isneg (&m_max))\n+    {\n+      m_max = dconst0;\n+      if (HONOR_SIGNED_ZEROS (m_type))\n+\tm_max.sign = 1;\n+    }\n+  // Flush [+DENORMAL, x] to [+0.0, x].\n+  if (real_isdenormal (&m_min) && !real_isneg (&m_min))\n+    m_min = dconst0;\n+}\n+\n // Setter for franges.\n \n void\n@@ -317,6 +337,9 @@ frange::set (tree min, tree max, value_range_kind kind)\n   gcc_checking_assert (tree_compare (LE_EXPR, min, max));\n \n   normalize_kind ();\n+\n+  flush_denormals_to_zero ();\n+\n   if (flag_checking)\n     verify_range ();\n }"}, {"sha": "795b1f00fdc1083d6ac54c52c6de4a6188bdfe96", "filename": "gcc/value-range.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b61ed838c7f3f4bf54d4530c0f053b420623beb/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b61ed838c7f3f4bf54d4530c0f053b420623beb/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=2b61ed838c7f3f4bf54d4530c0f053b420623beb", "patch": "@@ -327,6 +327,7 @@ class frange : public vrange\n   bool union_nans (const frange &);\n   bool intersect_nans (const frange &);\n   bool combine_zeros (const frange &, bool union_p);\n+  void flush_denormals_to_zero ();\n \n   tree m_type;\n   REAL_VALUE_TYPE m_min;"}]}