{"sha": "28c56d256992d5d330ebec07b1e939924b8d1086", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhjNTZkMjU2OTkyZDVkMzMwZWJlYzA3YjFlOTM5OTI0YjhkMTA4Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2002-09-16T14:34:02Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-09-16T14:34:02Z"}, "message": "re PR c++/7015 (certain __asm__ constructs rejected)\n\ncp:\n2002-09-16  Nathan Sidwell  <nathan@codesourcery.com>\n\n\tPR c++/7015\n\t* semantic.c (finish_asm_stmt): Fix operand/output_operands\n\tthinko.\n\t* typeck.c (c_expand_asm_operands): Protect from error_mark_node.\ntestsuite\n\t* g++.dg/ext/asm3.C: New test.\n\nFrom-SVN: r57192", "tree": {"sha": "a944ac0264fe665e3967a1545691b375acdbdc06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a944ac0264fe665e3967a1545691b375acdbdc06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28c56d256992d5d330ebec07b1e939924b8d1086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c56d256992d5d330ebec07b1e939924b8d1086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28c56d256992d5d330ebec07b1e939924b8d1086", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c56d256992d5d330ebec07b1e939924b8d1086/comments", "author": null, "committer": null, "parents": [{"sha": "a41c6c533d4b1081fdb453cfa8fa5526af764151", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a41c6c533d4b1081fdb453cfa8fa5526af764151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a41c6c533d4b1081fdb453cfa8fa5526af764151"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "3c3fb937d88c3582e9595c8b007e68605a5fe6e7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c56d256992d5d330ebec07b1e939924b8d1086/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c56d256992d5d330ebec07b1e939924b8d1086/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=28c56d256992d5d330ebec07b1e939924b8d1086", "patch": "@@ -1,3 +1,10 @@\n+2002-09-16  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/7015\n+\t* semantic.c (finish_asm_stmt): Fix operand/output_operands\n+\tthinko.\n+\t* typeck.c (c_expand_asm_operands): Protect from error_mark_node.\n+\n 2002-09-15  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/7919"}, {"sha": "cae2ecdb972454d57aa2b46c32e8578533dfd296", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c56d256992d5d330ebec07b1e939924b8d1086/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c56d256992d5d330ebec07b1e939924b8d1086/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=28c56d256992d5d330ebec07b1e939924b8d1086", "patch": "@@ -929,7 +929,7 @@ finish_asm_stmt (cv_qualifier, string, output_operands,\n \t  tree operand;\n \n \t  constraint = TREE_STRING_POINTER (TREE_VALUE (TREE_PURPOSE (t)));\n-\t  operand = TREE_VALUE (output_operands);\n+\t  operand = TREE_VALUE (t);\n \n \t  if (!parse_output_constraint (&constraint,\n \t\t\t\t\ti, ninputs, noutputs,"}, {"sha": "f591bc6e911f6c962f3bf4b7eda44dbc6d064d59", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c56d256992d5d330ebec07b1e939924b8d1086/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c56d256992d5d330ebec07b1e939924b8d1086/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=28c56d256992d5d330ebec07b1e939924b8d1086", "patch": "@@ -6045,9 +6045,10 @@ c_expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n       else\n \t{\n \t  tree type = TREE_TYPE (o[i]);\n-\t  if (CP_TYPE_CONST_P (type)\n-\t      || (IS_AGGR_TYPE_CODE (TREE_CODE (type))\n-\t\t  && C_TYPE_FIELDS_READONLY (type)))\n+\t  if (type != error_mark_node\n+\t      && (CP_TYPE_CONST_P (type)\n+\t\t  || (IS_AGGR_TYPE_CODE (TREE_CODE (type))\n+\t\t      && C_TYPE_FIELDS_READONLY (type))))\n \t    readonly_error (o[i], \"modification by `asm'\", 1);\n \t}\n     }"}, {"sha": "603b39d080ae2724673be2bba77ea6cb5719a1bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c56d256992d5d330ebec07b1e939924b8d1086/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c56d256992d5d330ebec07b1e939924b8d1086/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28c56d256992d5d330ebec07b1e939924b8d1086", "patch": "@@ -1,3 +1,7 @@\n+2002-09-16  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/ext/asm3.C: New test.\n+\n 2002-09-16  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* objc.dg/bitfield-2.m (dg-options): Add -fsigned-char."}, {"sha": "699ab4c82525cd796f27649eaad460c6ee8b2d73", "filename": "gcc/testsuite/g++.dg/ext/asm3.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c56d256992d5d330ebec07b1e939924b8d1086/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c56d256992d5d330ebec07b1e939924b8d1086/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm3.C?ref=28c56d256992d5d330ebec07b1e939924b8d1086", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 16 Sep 2002 <nathan@codesourcery.com>\n+\n+// PR 7015. ICE with asms\n+\n+int two(int in)\n+{\n+  register int out;\n+  __asm__ (\"\" : \"r\" (out) : \"r\" (in)); // { dg-error \"output operand\" \"\" }\n+  return out;\n+}"}]}