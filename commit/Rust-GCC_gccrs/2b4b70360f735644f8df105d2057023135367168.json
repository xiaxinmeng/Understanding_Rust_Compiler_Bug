{"sha": "2b4b70360f735644f8df105d2057023135367168", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI0YjcwMzYwZjczNTY0NGY4ZGYxMDVkMjA1NzAyMzEzNTM2NzE2OA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-04-18T22:34:10Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-04-18T22:34:10Z"}, "message": "re PR c/22367 (constraints on '&' not fully implemented)\n\n\tPR c/22367\n\t* c-typeck.c (build_unary_op): Check for taking address of\n\texpression of type void.\n\ntestsuite:\n\t* gcc.dg/lvalue-6.c, gcc.dg/lvalue-7.c: New tests.\n\nFrom-SVN: r146332", "tree": {"sha": "77e977c132707d7acd5acdad294ab595d741a594", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77e977c132707d7acd5acdad294ab595d741a594"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b4b70360f735644f8df105d2057023135367168", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4b70360f735644f8df105d2057023135367168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b4b70360f735644f8df105d2057023135367168", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4b70360f735644f8df105d2057023135367168/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cf217fff1128005fb24e95ffa0b72c844af3d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cf217fff1128005fb24e95ffa0b72c844af3d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cf217fff1128005fb24e95ffa0b72c844af3d37"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "4035b2c90ebc8e4eee7056220246b83ca3d0762b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4b70360f735644f8df105d2057023135367168/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4b70360f735644f8df105d2057023135367168/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b4b70360f735644f8df105d2057023135367168", "patch": "@@ -1,3 +1,9 @@\n+2009-04-18  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/22367\n+\t* c-typeck.c (build_unary_op): Check for taking address of\n+\texpression of type void.\n+\n 2009-04-18  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/35210"}, {"sha": "bacfdc0e8493e78c1de51d717a1a254103cfd8a5", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4b70360f735644f8df105d2057023135367168/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4b70360f735644f8df105d2057023135367168/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=2b4b70360f735644f8df105d2057023135367168", "patch": "@@ -3346,6 +3346,15 @@ build_unary_op (location_t location,\n     case ADDR_EXPR:\n       /* Note that this operation never does default_conversion.  */\n \n+      /* The operand of unary '&' must be an lvalue (which excludes\n+\t expressions of type void), or, in C99, the result of a [] or\n+\t unary '*' operator.  */\n+      if (VOID_TYPE_P (TREE_TYPE (arg))\n+\t  && TYPE_QUALS (TREE_TYPE (arg)) == TYPE_UNQUALIFIED\n+\t  && (TREE_CODE (arg) != INDIRECT_REF\n+\t      || !flag_isoc99))\n+\tpedwarn (location, 0, \"taking address of expression of type %<void%>\");\n+\n       /* Let &* cancel out to simplify resulting code.  */\n       if (TREE_CODE (arg) == INDIRECT_REF)\n \t{"}, {"sha": "a2b0bb043c3c5f75e4e4703e4fa847029fe8d64b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4b70360f735644f8df105d2057023135367168/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4b70360f735644f8df105d2057023135367168/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b4b70360f735644f8df105d2057023135367168", "patch": "@@ -1,3 +1,8 @@\n+2009-04-18  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/22367\n+\t* gcc.dg/lvalue-6.c, gcc.dg/lvalue-7.c: New tests.\n+\n 2009-04-18  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/cpp/include5.c: New test."}, {"sha": "af69de4df4c8a428e8d883c97bd49bec4686c216", "filename": "gcc/testsuite/gcc.dg/lvalue-6.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4b70360f735644f8df105d2057023135367168/gcc%2Ftestsuite%2Fgcc.dg%2Flvalue-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4b70360f735644f8df105d2057023135367168/gcc%2Ftestsuite%2Fgcc.dg%2Flvalue-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flvalue-6.c?ref=2b4b70360f735644f8df105d2057023135367168", "patch": "@@ -0,0 +1,17 @@\n+/* Test constraints on unary '&': PR 22367.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1990 -pedantic-errors\" } */\n+\n+extern void v;\n+void f1 (void) { &v; } /* { dg-error \"taking address of expression of type 'void'\" } */\n+\n+extern void *pv;\n+void f2 (void) { &*pv; } /* { dg-warning \"dereferencing\" } */\n+/* { dg-error \"taking address of expression of type 'void'\" \"C90 only error\" { target *-*-* } 10 } */\n+\n+extern const void cv;\n+void f3 (void) { &cv; }\n+\n+extern const void *pcv;\n+void f4 (void) { &*pcv; } /* { dg-warning \"dereferencing\" } */"}, {"sha": "37964e1cd7633dd51ff356340d210f34d87c18ff", "filename": "gcc/testsuite/gcc.dg/lvalue-7.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4b70360f735644f8df105d2057023135367168/gcc%2Ftestsuite%2Fgcc.dg%2Flvalue-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4b70360f735644f8df105d2057023135367168/gcc%2Ftestsuite%2Fgcc.dg%2Flvalue-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flvalue-7.c?ref=2b4b70360f735644f8df105d2057023135367168", "patch": "@@ -0,0 +1,16 @@\n+/* Test constraints on unary '&': PR 22367.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+\n+extern void v;\n+void f1 (void) { &v; } /* { dg-error \"taking address of expression of type 'void'\" } */\n+\n+extern void *pv;\n+void f2 (void) { &*pv; } /* { dg-warning \"dereferencing\" } */\n+\n+extern const void cv;\n+void f3 (void) { &cv; }\n+\n+extern const void *pcv;\n+void f4 (void) { &*pcv; } /* { dg-warning \"dereferencing\" } */"}]}