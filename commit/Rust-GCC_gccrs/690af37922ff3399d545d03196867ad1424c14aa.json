{"sha": "690af37922ff3399d545d03196867ad1424c14aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkwYWYzNzkyMmZmMzM5OWQ1NDVkMDMxOTY4NjdhZDE0MjRjMTRhYQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2007-04-12T18:07:09Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2007-04-12T18:07:09Z"}, "message": "decl.c (gfc_match_end): Also check for construct name in END FORALL and END WERE statements.\n\n        fortran/31471\nfortran/\n* decl.c (gfc_match_end): Also check for construct name in END\nFORALL and END WERE statements.\n* match.c (match_case_eos): Use uppercase for statement name in\nerror message.\n(match_elsewhere): Construct name may appear iff construct has a\nname.\ntestsuite/\n* gfortran.dg/block_name_1.f90: New.\n* gfortran.dg/block_name_2.f90: New.\n\nFrom-SVN: r123758", "tree": {"sha": "cd6e32a845d732e339b5c424410684c412ab5248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd6e32a845d732e339b5c424410684c412ab5248"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/690af37922ff3399d545d03196867ad1424c14aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690af37922ff3399d545d03196867ad1424c14aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/690af37922ff3399d545d03196867ad1424c14aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690af37922ff3399d545d03196867ad1424c14aa/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cb6400cdaea428d965f6a22b39e4b7d2acff880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cb6400cdaea428d965f6a22b39e4b7d2acff880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cb6400cdaea428d965f6a22b39e4b7d2acff880"}], "stats": {"total": 166, "additions": 163, "deletions": 3}, "files": [{"sha": "e99ccd15af7e42192faef703fb94cb43023f462a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=690af37922ff3399d545d03196867ad1424c14aa", "patch": "@@ -1,5 +1,13 @@\n 2007-04-12  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n \n+\tPR fortran/31471\n+\t* decl.c (gfc_match_end): Also check for construct name in END\n+\tFORALL and END WERE statements.\n+\t* match.c (match_case_eos): Use uppercase for statement name in\n+\terror message.\n+\t(match_elsewhere): Construct name may appear iff construct has a\n+\tname.\n+\n \t* trans-types.c: Update copyright years.  Reformat long comment\n \texplaining array descriptor format.  Remove obsolete mention of\n \tTYPE_SET."}, {"sha": "43e0235facd2f8354f18f28edbc25caebc8e1ccf", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=690af37922ff3399d545d03196867ad1424c14aa", "patch": "@@ -3340,7 +3340,8 @@ gfc_match_end (gfc_statement *st)\n   if (gfc_match_eos () == MATCH_YES)\n     {\n \n-      if (*st != ST_ENDDO && *st != ST_ENDIF && *st != ST_END_SELECT)\n+      if (*st != ST_ENDDO && *st != ST_ENDIF && *st != ST_END_SELECT\n+\t  && *st != ST_END_FORALL && *st != ST_END_WHERE)\n \treturn MATCH_YES;\n \n       if (gfc_current_block () == NULL)"}, {"sha": "2483ea3b9dac81362c378776e45aab89cafa32c4", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=690af37922ff3399d545d03196867ad1424c14aa", "patch": "@@ -3053,7 +3053,7 @@ match_case_eos (void)\n      should have matched the EOS.  */\n   if (!gfc_current_block ())\n     {\n-      gfc_error (\"Expected the name of the select case construct at %C\");\n+      gfc_error (\"Expected the name of the SELECT CASE construct at %C\");\n       return MATCH_ERROR;\n     }\n \n@@ -3299,7 +3299,14 @@ gfc_match_elsewhere (void)\n     }\n \n   if (gfc_match_eos () != MATCH_YES)\n-    {\t\t\t\t/* Better be a name at this point */\n+    {\n+      /* Only makes sense if we have a where-construct-name.  */\n+      if (!gfc_current_block ())\n+\t{\n+\t  m = MATCH_ERROR;\n+\t  goto cleanup;\n+\t}\n+      /* Better be a name at this point */\n       m = gfc_match_name (name);\n       if (m == MATCH_NO)\n \tgoto syntax;"}, {"sha": "8a409386fd895cf4f1664613f45606e59aef979e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=690af37922ff3399d545d03196867ad1424c14aa", "patch": "@@ -1,3 +1,9 @@\n+2007-04-12  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n+\n+\tPR fortran/31471\n+\t* gfortran.dg/block_name_1.f90: New.\n+\t* gfortran.dg/block_name_2.f90: New.\n+\n 2007-04-12  Douglas Gregor  <doug.gregor@gmail.com>\n \n \tPR c++/31078"}, {"sha": "600885c3ad54888c75343e62aaccfc31b3fdb8cc", "filename": "gcc/testsuite/gfortran.dg/block_name_1.f90", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_name_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_name_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_name_1.f90?ref=690af37922ff3399d545d03196867ad1424c14aa", "patch": "@@ -0,0 +1,78 @@\n+! { dg-do compile }\n+! Verify that the compiler accepts the various legal combinations of\n+! using construct names.\n+!\n+! The correct behavior of EXIT and CYCLE is already established in\n+! the various DO related testcases, they're included here for\n+! completeness.\n+       dimension a(5)\n+       i = 0\n+       ! construct name is optional on else clauses\n+       ia: if (i > 0) then\n+          i = 1\n+       else\n+          i = 2\n+       end if ia\n+       ib: if (i < 0) then\n+          i = 3\n+       else ib\n+          i = 4\n+       end if ib\n+       ic: if (i < 0) then\n+          i = 5\n+       else if (i == 0) then ic\n+          i = 6\n+       else if (i == 1) then\n+          i =7\n+       else if (i == 2) then ic\n+          i = 8\n+       end if ic\n+\n+       fa: forall (i=1:5, a(i) > 0)\n+          a(i) = 9\n+       end forall fa\n+\n+       wa: where (a > 0)\n+          a = -a\n+       elsewhere\n+          wb: where (a == 0)\n+             a = a + 1.\n+          elsewhere wb\n+             a = 2*a\n+          end where wb\n+       end where wa\n+\n+       j = 1\n+       sa: select case (i)\n+          case (1)\n+             i = 2\n+          case (2) sa\n+             i = 3\n+          case default sa\n+             sb: select case (j)\n+                case (1) sb\n+                   i = j\n+                case default\n+                   j = i\n+             end select sb\n+       end select sa\n+\n+       da: do i=1,10\n+          cycle da\n+          cycle\n+          exit da\n+          exit\n+          db: do\n+             cycle da\n+             cycle db\n+             cycle\n+             exit da\n+             exit db\n+             exit\n+             j = i+1\n+          end do db\n+          dc: do while (j>0)\n+             j = j-1\n+          end do dc\n+       end do da\n+end"}, {"sha": "590a015ffe9209f70ddc90f896b6b00eff48f6c7", "filename": "gcc/testsuite/gfortran.dg/block_name_2.f90", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_name_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690af37922ff3399d545d03196867ad1424c14aa/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_name_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_name_2.f90?ref=690af37922ff3399d545d03196867ad1424c14aa", "patch": "@@ -0,0 +1,60 @@\n+! { dg-do compile }\n+! Test that various illegal combinations of block statements with\n+! block names yield the correct error messages.  Motivated by PR31471.\n+program blocks\n+  dimension a(5,2)\n+\n+  a = 0\n+\n+  ! The END statement of a labelled block needs to carry the construct\n+  ! name.\n+  d1: do i=1,10\n+  end do      ! { dg-error \"Expected block name of .... in END DO statement\" }\n+  end do d1\n+\n+  i1: if (i > 0) then\n+  end if      ! { dg-error \"Expected block name of .... in END IF statement\" }\n+  end if i1\n+\n+  s1: select case (i)\n+  end select ! { dg-error \"Expected block name of .... in END SELECT statement\" }\n+  end select s1\n+\n+  w1: where (a > 0)\n+  end where ! { dg-error \"Expected block name of .... in END WHERE statement\" }\n+  end where w1\n+\n+  f1: forall (i = 1:10)\n+  end forall ! { dg-error \"Expected block name of .... in END FORALL statement\" }\n+  end forall f1\n+\n+  ! A construct name may not appear in the END statement, if it\n+  ! doesn't appear in the statement beginning the block.\n+  ! Likewise it may not appear in ELSE IF, ELSE, ELSEWHERE or CASE\n+  ! statements.\n+  do i=1,10\n+  end do d2 ! { dg-error \"Syntax error in END DO statement\" }\n+  end do\n+\n+  if (i > 0) then\n+  else if (i ==0) then i2 ! { dg-error \"Unexpected junk after ELSE IF statement\" }\n+  else i2 ! { dg-error \"Unexpected junk after ELSE statement\" }\n+  end if i2 ! { dg-error \"Syntax error in END IF statement\" }\n+  end if\n+\n+  select case (i)\n+  case (1) s2  ! { dg-error \"Expected the name of the SELECT CASE construct\" }\n+  case default s2 ! { dg-error \"Expected the name of the SELECT CASE construct\" }\n+  end select s2 ! { dg-error \"Syntax error in END SELECT statement\" }\n+  end select\n+\n+  where (a > 0)\n+  elsewhere w2  ! { dg-error \"Unexpected junk after ELSE statement\" }\n+  end where w2 ! { dg-error \"Syntax error in END WHERE statement\" }\n+  end where\n+\n+  forall (i=1:10)\n+  end forall f2 ! { dg-error \"Syntax error in END FORALL statement\" }\n+  end forall\n+  \n+end program blocks"}]}