{"sha": "187bd6cd5e46e3b51aecd537582b146ccb6f21bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg3YmQ2Y2Q1ZTQ2ZTNiNTFhZWNkNTM3NTgyYjE0NmNjYjZmMjFiZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-11-03T14:09:10Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-11-03T14:09:10Z"}, "message": "rs6000: Improve *lt0 patterns\n\nThe rs6000 port currently has an *lt0_disi define_insn, setting the DI\nresult to whether the SI argument is negative or not.  It turns out the\ngeneric optimisers cannot always figure out in the other cases either\nthat this is just a shift for us.  This patch adds patterns for all\nfour SI/DI combinations.\n\n\n\t* config/rs6000/rs6000.md (*lt0_disi): Delete.\n\t(*lt0_<mode>di, *lt0_<mode>si): New.\n\nFrom-SVN: r254374", "tree": {"sha": "403297c8347a87832d7bb492a995b7d645e19a29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/403297c8347a87832d7bb492a995b7d645e19a29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/187bd6cd5e46e3b51aecd537582b146ccb6f21bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187bd6cd5e46e3b51aecd537582b146ccb6f21bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187bd6cd5e46e3b51aecd537582b146ccb6f21bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187bd6cd5e46e3b51aecd537582b146ccb6f21bd/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b15a4bc97246f8d6add88f26807291e0a4fe2711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15a4bc97246f8d6add88f26807291e0a4fe2711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b15a4bc97246f8d6add88f26807291e0a4fe2711"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "561e3dae7c9178e3bee69462e68633a95ae7cba0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187bd6cd5e46e3b51aecd537582b146ccb6f21bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187bd6cd5e46e3b51aecd537582b146ccb6f21bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=187bd6cd5e46e3b51aecd537582b146ccb6f21bd", "patch": "@@ -1,3 +1,8 @@\n+2017-11-03  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (*lt0_disi): Delete.\n+\t(*lt0_<mode>di, *lt0_<mode>si): New.\n+\n 2017-11-03  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (move_from_CR_ov_bit): Change condition to"}, {"sha": "2ef028f93b329daf5d573d3d0374a548fa8ae00e", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187bd6cd5e46e3b51aecd537582b146ccb6f21bd/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187bd6cd5e46e3b51aecd537582b146ccb6f21bd/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=187bd6cd5e46e3b51aecd537582b146ccb6f21bd", "patch": "@@ -3829,11 +3829,19 @@\n \n ; Special case for less-than-0.  We can do it with just one machine\n ; instruction, but the generic optimizers do not realise it is cheap.\n-(define_insn \"*lt0_disi\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(lt:DI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n-\t       (const_int 0)))]\n+(define_insn \"*lt0_<mode>di\"\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(lt:GPR (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t(const_int 0)))]\n   \"TARGET_POWERPC64\"\n+  \"srdi %0,%1,63\"\n+  [(set_attr \"type\" \"shift\")])\n+\n+(define_insn \"*lt0_<mode>si\"\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(lt:GPR (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t(const_int 0)))]\n+  \"\"\n   \"rlwinm %0,%1,1,31,31\"\n   [(set_attr \"type\" \"shift\")])\n "}]}