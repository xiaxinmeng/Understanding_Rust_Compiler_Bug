{"sha": "2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEyOGE3NTIzZmIxYzQwMWVjZDlhM2EwNTQ4ZTNlYjgwN2ZmOWMyZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-11-13T17:29:37Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-11-13T17:29:37Z"}, "message": "re PR lto/81351 (Many LTO testcases FAIL)\n\n\tPR lto/81351\n\t* dwarf2out.c (do_eh_frame): New static variable.\n\t(dwarf2out_begin_prologue): Set it.\n\t(dwarf2out_frame_finish): Test it instead of dwarf2out_do_eh_frame.\n\nFrom-SVN: r254700", "tree": {"sha": "47f082389df2aaef9b825b3dfa12c9e66fe9b9da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47f082389df2aaef9b825b3dfa12c9e66fe9b9da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e/comments", "author": null, "committer": null, "parents": [{"sha": "c0264f676283bee5aee79591bd16b1b8f54b6f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0264f676283bee5aee79591bd16b1b8f54b6f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0264f676283bee5aee79591bd16b1b8f54b6f54"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "543a8e1a739cb71e84244b1c8e1dcdbb23fe2676", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e", "patch": "@@ -1,3 +1,10 @@\n+2017-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR lto/81351\n+\t* dwarf2out.c (do_eh_frame): New static variable.\n+\t(dwarf2out_begin_prologue): Set it.\n+\t(dwarf2out_frame_finish): Test it instead of dwarf2out_do_eh_frame.\n+\n 2017-11-13  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-ssa-coalesce.c (coalesce_cost): Fix formating."}, {"sha": "1c08a2b4e18c7593f48fc2d4683be515357cc5d1", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=2a28a7523fb1c401ecd9a3a0548e3eb807ff9c2e", "patch": "@@ -284,6 +284,9 @@ static void dwarf2out_note_section_used (void);\n    personality CFI.  */\n static GTY(()) rtx current_unit_personality;\n \n+/* Whether an eh_frame section is required.  */\n+static GTY(()) bool do_eh_frame = false;\n+\n /* .debug_rnglists next index.  */\n static unsigned int rnglist_idx;\n \n@@ -1063,6 +1066,10 @@ dwarf2out_begin_prologue (unsigned int line ATTRIBUTE_UNUSED,\n   if (!do_frame)\n     return;\n \n+  /* Unlike the debug version, the EH version of frame unwind info is a per-\n+     function setting so we need to record whether we need it for the unit.  */\n+  do_eh_frame |= dwarf2out_do_eh_frame ();\n+\n   /* Cater to the various TARGET_ASM_OUTPUT_MI_THUNK implementations that\n      emit insns as rtx but bypass the bulk of rest_of_compilation, which\n      would include pass_dwarf2_frame.  If we've not created the FDE yet,\n@@ -1179,7 +1186,7 @@ dwarf2out_frame_finish (void)\n     output_call_frame_info (0);\n \n   /* Output another copy for the unwinder.  */\n-  if (dwarf2out_do_eh_frame ())\n+  if (do_eh_frame)\n     output_call_frame_info (1);\n }\n "}]}