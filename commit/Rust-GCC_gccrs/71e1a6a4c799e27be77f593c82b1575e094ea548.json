{"sha": "71e1a6a4c799e27be77f593c82b1575e094ea548", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFlMWE2YTRjNzk5ZTI3YmU3N2Y1OTNjODJiMTU3NWUwOTRlYTU0OA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2016-08-12T07:11:36Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2016-08-12T07:11:36Z"}, "message": "[PR55641] drop spurious const_type from reference_type variables\n\nAlthough C++ reference types, denoted by DW_TAG_reference_type in\nDWARFv2+ debug info, are unchangeable, we output names of reference type\nwith DW_TAG_const_type, because internally we mark such variables as\nTREE_READONLY.  That's an internal implementation detail that shouldn't\nleak to debug information.  This patch fixes this.\n\nfor  gcc/ChangeLog\n\n\tPR debug/55641\n\t* dwarf2out.c (decl_quals): Don't map TREE_READONLY to\n\tTYPE_QUAL_CONST in reference-typed decls.\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR debug/55641\n\t* g++.dg/debug/dwarf2/ref-1.C: New.\n\nFrom-SVN: r239402", "tree": {"sha": "4cbe33f6735cc7602988194ca2515c67d921361d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cbe33f6735cc7602988194ca2515c67d921361d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71e1a6a4c799e27be77f593c82b1575e094ea548", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e1a6a4c799e27be77f593c82b1575e094ea548", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71e1a6a4c799e27be77f593c82b1575e094ea548", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e1a6a4c799e27be77f593c82b1575e094ea548/comments", "author": null, "committer": null, "parents": [{"sha": "8aaf799b005461231d75f0889e3c78bd9b35eed9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aaf799b005461231d75f0889e3c78bd9b35eed9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aaf799b005461231d75f0889e3c78bd9b35eed9"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "59e4fcf0eac8a6cd040dabc3d71f5f82732f6403", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e1a6a4c799e27be77f593c82b1575e094ea548/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e1a6a4c799e27be77f593c82b1575e094ea548/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71e1a6a4c799e27be77f593c82b1575e094ea548", "patch": "@@ -1,5 +1,9 @@\n 2016-08-12  Alexandre Oliva <aoliva@redhat.com>\n \n+\tPR debug/55641\n+\t* dwarf2out.c (decl_quals): Don't map TREE_READONLY to\n+\tTYPE_QUAL_CONST in reference-typed decls.\n+\n \tPR debug/49366\n \t* dwarf2out.c (loc_list_from_tree_1): Expand some CONSTRUCTORs\n \tin DW_OP_pieces, just enough to handle pointers to member"}, {"sha": "06dbadbd15f95b97d0a85ae59a2ba91a33b7323c", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e1a6a4c799e27be77f593c82b1575e094ea548/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e1a6a4c799e27be77f593c82b1575e094ea548/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=71e1a6a4c799e27be77f593c82b1575e094ea548", "patch": "@@ -11126,6 +11126,10 @@ static int\n decl_quals (const_tree decl)\n {\n   return ((TREE_READONLY (decl)\n+\t   /* The C++ front-end correctly marks reference-typed\n+\t      variables as readonly, but from a language (and debug\n+\t      info) standpoint they are not const-qualified.  */\n+\t   && TREE_CODE (TREE_TYPE (decl)) != REFERENCE_TYPE\n \t   ? TYPE_QUAL_CONST : TYPE_UNQUALIFIED)\n \t  | (TREE_THIS_VOLATILE (decl)\n \t     ? TYPE_QUAL_VOLATILE : TYPE_UNQUALIFIED));"}, {"sha": "1726157067ec6e59cbf969b2baead403dd1ad0ac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e1a6a4c799e27be77f593c82b1575e094ea548/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e1a6a4c799e27be77f593c82b1575e094ea548/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71e1a6a4c799e27be77f593c82b1575e094ea548", "patch": "@@ -1,5 +1,8 @@\n 2016-08-12  Alexandre Oliva <aoliva@redhat.com>\n \n+\tPR debug/55641\n+\t* g++.dg/debug/dwarf2/ref-1.C: New.\n+\n \tPR debug/49366\n \t* g++.dg/debug/dwarf2/template-params-12.H: New.\n \t* g++.dg/debug/dwarf2/template-params-12f.C: New."}, {"sha": "75e9fcaa89b203224528cc6c01a24228952103ad", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/ref-1.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e1a6a4c799e27be77f593c82b1575e094ea548/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fref-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e1a6a4c799e27be77f593c82b1575e094ea548/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fref-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fref-1.C?ref=71e1a6a4c799e27be77f593c82b1575e094ea548", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile }\n+// { dg-options \"-O -g -dA -gno-strict-dwarf\" }\n+// { dg-final { scan-assembler-not \"DW_TAG_const_type\" { xfail { powerpc-ibm-aix* } } } }\n+\n+int x;\n+int &y = x;\n+\n+typedef int &z_t;\n+z_t z = x;\n+\n+void f(int &p) {}\n+\n+struct foo {\n+  int &bar;\n+  typedef int &bart;\n+  bart fool;\n+};\n+\n+void f3(struct foo &p) {}"}]}