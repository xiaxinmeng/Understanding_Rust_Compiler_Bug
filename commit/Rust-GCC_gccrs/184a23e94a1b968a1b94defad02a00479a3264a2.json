{"sha": "184a23e94a1b968a1b94defad02a00479a3264a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg0YTIzZTk0YTFiOTY4YTFiOTRkZWZhZDAyYTAwNDc5YTMyNjRhMg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2015-03-02T10:52:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-03-02T10:52:59Z"}, "message": "exp_util.adb (Possible_Bit_Aligned_Component): Do not process an unanalyzed node.\n\n2015-03-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb (Possible_Bit_Aligned_Component): Do not process\n\tan unanalyzed node.\n\t* sem_util.adb (Kill_Current_Values): Do not invalidate and\n\tde-null a constant.\n\nFrom-SVN: r221107", "tree": {"sha": "0b975fbc43cba4fbd9c3c2613e69d12e0b352639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b975fbc43cba4fbd9c3c2613e69d12e0b352639"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/184a23e94a1b968a1b94defad02a00479a3264a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/184a23e94a1b968a1b94defad02a00479a3264a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/184a23e94a1b968a1b94defad02a00479a3264a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/184a23e94a1b968a1b94defad02a00479a3264a2/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df265bd262f3f39d9eaf19087f0139ffb53a4d75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df265bd262f3f39d9eaf19087f0139ffb53a4d75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df265bd262f3f39d9eaf19087f0139ffb53a4d75"}], "stats": {"total": 49, "additions": 38, "deletions": 11}, "files": [{"sha": "6220a7ed89ba016aa60d73eec0463368754756ee", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/184a23e94a1b968a1b94defad02a00479a3264a2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/184a23e94a1b968a1b94defad02a00479a3264a2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=184a23e94a1b968a1b94defad02a00479a3264a2", "patch": "@@ -1,3 +1,10 @@\n+2015-03-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb (Possible_Bit_Aligned_Component): Do not process\n+\tan unanalyzed node.\n+\t* sem_util.adb (Kill_Current_Values): Do not invalidate and\n+\tde-null a constant.\n+\n 2015-03-02  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, exp_attr.adb, checks.adb, exp_aggr.adb: Minor"}, {"sha": "a565e7f023be57cf867aa3d900320651b3311413", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/184a23e94a1b968a1b94defad02a00479a3264a2/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/184a23e94a1b968a1b94defad02a00479a3264a2/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=184a23e94a1b968a1b94defad02a00479a3264a2", "patch": "@@ -6938,6 +6938,13 @@ package body Exp_Util is\n \n    function Possible_Bit_Aligned_Component (N : Node_Id) return Boolean is\n    begin\n+      --  Do not process an unanalyzed node because it is not yet decorated and\n+      --  most checks performed below will fail.\n+\n+      if not Analyzed (N) then\n+         return False;\n+      end if;\n+\n       case Nkind (N) is\n \n          --  Case of indexed component"}, {"sha": "2ea04d700b93d5ea9e4e32a542bcbf99920fc87b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/184a23e94a1b968a1b94defad02a00479a3264a2/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/184a23e94a1b968a1b94defad02a00479a3264a2/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=184a23e94a1b968a1b94defad02a00479a3264a2", "patch": "@@ -13012,20 +13012,33 @@ package body Sem_Util is\n             Kill_Checks (Ent);\n             Set_Current_Value (Ent, Empty);\n \n-            if not Can_Never_Be_Null (Ent) then\n-               Set_Is_Known_Non_Null (Ent, False);\n-            end if;\n+            --  Do not reset the Is_Known_[Non_]Null and Is_Known_Valid flags\n+            --  for a constant. Once the constant is elaborated, its value is\n+            --  not changed, therefore the associated flags that describe the\n+            --  value should not be modified either.\n \n-            Set_Is_Known_Null (Ent, False);\n+            if Ekind (Ent) = E_Constant then\n+               null;\n \n-            --  Reset Is_Known_Valid unless type is always valid, or if we have\n-            --  a loop parameter (loop parameters are always valid, since their\n-            --  bounds are defined by the bounds given in the loop header).\n+            --  Non-constant entities\n \n-            if not Is_Known_Valid (Etype (Ent))\n-              and then Ekind (Ent) /= E_Loop_Parameter\n-            then\n-               Set_Is_Known_Valid (Ent, False);\n+            else\n+               if not Can_Never_Be_Null (Ent) then\n+                  Set_Is_Known_Non_Null (Ent, False);\n+               end if;\n+\n+               Set_Is_Known_Null (Ent, False);\n+\n+               --  Reset the Is_Known_Valid flag unless the type is always\n+               --  valid. This does not apply to a loop parameter because its\n+               --  bounds are defined by the loop header and therefore always\n+               --  valid.\n+\n+               if not Is_Known_Valid (Etype (Ent))\n+                 and then Ekind (Ent) /= E_Loop_Parameter\n+               then\n+                  Set_Is_Known_Valid (Ent, False);\n+               end if;\n             end if;\n          end if;\n       end if;"}]}