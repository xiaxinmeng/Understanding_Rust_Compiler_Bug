{"sha": "35dd7cc326a43e7323effe52421eb237701ee71b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVkZDdjYzMyNmE0M2U3MzIzZWZmZTUyNDIxZWIyMzc3MDFlZTcxYg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-03-26T13:30:18Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-03-26T13:30:18Z"}, "message": "cygming.h (BIGGEST_ALIGNMENT): Removed.\n\n2008-03-26  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/cygming.h (BIGGEST_ALIGNMENT): Removed.\n\n\t* config/i386/i386.c (ix86_function_arg_boundary): Check\n\tBIGGEST_ALIGNMENT instead of 128.\n\t(setup_incoming_varargs_64): Likewise.\n\nFrom-SVN: r133605", "tree": {"sha": "8c2d35749e1abec00419ab6dd6e9a148595b8dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c2d35749e1abec00419ab6dd6e9a148595b8dcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35dd7cc326a43e7323effe52421eb237701ee71b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35dd7cc326a43e7323effe52421eb237701ee71b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35dd7cc326a43e7323effe52421eb237701ee71b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35dd7cc326a43e7323effe52421eb237701ee71b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f91ed78d627f4eb09c0cf820cfde6b10e3a5bb4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91ed78d627f4eb09c0cf820cfde6b10e3a5bb4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f91ed78d627f4eb09c0cf820cfde6b10e3a5bb4f"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "3d746b81ad7a8df957eb9c22e7962cc075bf97c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35dd7cc326a43e7323effe52421eb237701ee71b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35dd7cc326a43e7323effe52421eb237701ee71b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35dd7cc326a43e7323effe52421eb237701ee71b", "patch": "@@ -1,3 +1,11 @@\n+2008-03-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/cygming.h (BIGGEST_ALIGNMENT): Removed.\n+\n+\t* config/i386/i386.c (ix86_function_arg_boundary): Check\n+\tBIGGEST_ALIGNMENT instead of 128.\n+\t(setup_incoming_varargs_64): Likewise.\n+\n 2008-03-26  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in (DEPFILES): Add missing '/'."}, {"sha": "da6f61980e2cead5aa3fbd9d66abca4fcba1560c", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35dd7cc326a43e7323effe52421eb237701ee71b/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35dd7cc326a43e7323effe52421eb237701ee71b/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=35dd7cc326a43e7323effe52421eb237701ee71b", "patch": "@@ -327,10 +327,6 @@ do {\t\t\t\t\t\t\\\n #undef MS_AGGREGATE_RETURN\n #define MS_AGGREGATE_RETURN 1\n \n-/* No data type wants to be aligned rounder than this.  */\n-#undef\tBIGGEST_ALIGNMENT\n-#define BIGGEST_ALIGNMENT 128\n-\n /* Biggest alignment supported by the object file format of this\n    machine.  Use this macro to limit the alignment which can be\n    specified using the `__attribute__ ((aligned (N)))' construct.  If"}, {"sha": "e1d5aad6de1c7cb9fa210ed461b5d7897d61ad4f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35dd7cc326a43e7323effe52421eb237701ee71b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35dd7cc326a43e7323effe52421eb237701ee71b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=35dd7cc326a43e7323effe52421eb237701ee71b", "patch": "@@ -4599,8 +4599,8 @@ ix86_function_arg_boundary (enum machine_mode mode, tree type)\n \t    align = PARM_BOUNDARY;\n \t}\n     }\n-  if (align > 128)\n-    align = 128;\n+  if (align > BIGGEST_ALIGNMENT)\n+    align = BIGGEST_ALIGNMENT;\n   return align;\n }\n \n@@ -4997,8 +4997,8 @@ setup_incoming_varargs_64 (CUMULATIVE_ARGS *cum)\n \n      We also may end up assuming that only 64bit values are stored in SSE\n      register let some floating point program work.  */\n-  if (ix86_preferred_stack_boundary >= 128)\n-    cfun->stack_alignment_needed = 128;\n+  if (ix86_preferred_stack_boundary >= BIGGEST_ALIGNMENT)\n+    cfun->stack_alignment_needed = BIGGEST_ALIGNMENT;\n \n   save_area = frame_pointer_rtx;\n   set = get_varargs_alias_set ();"}]}