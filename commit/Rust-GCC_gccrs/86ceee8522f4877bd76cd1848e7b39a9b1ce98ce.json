{"sha": "86ceee8522f4877bd76cd1848e7b39a9b1ce98ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZjZWVlODUyMmY0ODc3YmQ3NmNkMTg0OGU3YjM5YTliMWNlOThjZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-02-08T09:49:10Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-02-08T09:49:10Z"}, "message": "decl.c (is_cplusplus_method): Use Is_Primitive flag to detect primitive operations of tagged and untagged types.\n\n\t* gcc-interface/decl.c (is_cplusplus_method): Use Is_Primitive flag to\n\tdetect primitive operations of tagged and untagged types.\n\nFrom-SVN: r220512", "tree": {"sha": "fae4f50a44e1126d3d1d84888f5eb26ed02370f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fae4f50a44e1126d3d1d84888f5eb26ed02370f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86ceee8522f4877bd76cd1848e7b39a9b1ce98ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ceee8522f4877bd76cd1848e7b39a9b1ce98ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86ceee8522f4877bd76cd1848e7b39a9b1ce98ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ceee8522f4877bd76cd1848e7b39a9b1ce98ce/comments", "author": null, "committer": null, "parents": [{"sha": "9d11273c622b4b50d5bc5a4c9b382fd2b2dddaee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d11273c622b4b50d5bc5a4c9b382fd2b2dddaee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d11273c622b4b50d5bc5a4c9b382fd2b2dddaee"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "59c6c3886eb331d17946c10c00612b0fcd7fb3ca", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ceee8522f4877bd76cd1848e7b39a9b1ce98ce/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ceee8522f4877bd76cd1848e7b39a9b1ce98ce/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=86ceee8522f4877bd76cd1848e7b39a9b1ce98ce", "patch": "@@ -1,3 +1,8 @@\n+2015-02-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (is_cplusplus_method): Use Is_Primitive flag to\n+\tdetect primitive operations of tagged and untagged types.\n+\n 2015-02-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity): Do not bother about alias"}, {"sha": "c7d64aab4497f2609f1cc4d9b4327f2f44dc8dc0", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ceee8522f4877bd76cd1848e7b39a9b1ce98ce/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ceee8522f4877bd76cd1848e7b39a9b1ce98ce/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=86ceee8522f4877bd76cd1848e7b39a9b1ce98ce", "patch": "@@ -5448,16 +5448,17 @@ is_cplusplus_method (Entity_Id gnat_entity)\n   if (Convention (gnat_entity) != Convention_CPP)\n     return false;\n \n-  /* This is the main case: C++ method imported as a primitive operation.  */\n-  if (Is_Dispatching_Operation (gnat_entity))\n+  /* This is the main case: C++ method imported as a primitive operation.\n+     Note that a C++ class with no virtual functions can be imported as a\n+     limited record type so the operation is not necessarily dispatching.  */\n+  if (Is_Primitive (gnat_entity))\n     return true;\n \n   /* A thunk needs to be handled like its associated primitive operation.  */\n   if (Is_Subprogram (gnat_entity) && Is_Thunk (gnat_entity))\n     return true;\n \n-  /* C++ classes with no virtual functions can be imported as limited\n-     record types, but we need to return true for the constructors.  */\n+  /* A constructor is a method on the C++ side.  */\n   if (Is_Constructor (gnat_entity))\n     return true;\n "}]}