{"sha": "67bf2939d3d2765d2eabbb8905a70384f7039f69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdiZjI5MzlkM2QyNzY1ZDJlYWJiYjg5MDVhNzAzODRmNzAzOWY2OQ==", "commit": {"author": {"name": "Laurent Alfonsi", "email": "laurent.alfonsi@st.com", "date": "2014-01-15T19:37:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-01-15T19:37:35Z"}, "message": "re PR c++/49718 (please allow no_instrument_function attribute in class member definition/declaration)\n\n\tPR c++/49718\n\t* c-common.c (handle_no_instrument_function_attribute): Allow\n\tno_instrument_function attribute in class member\n\tdefinition/declaration.\n\n\tPR c++/49718\n\t* g++.dg/pr49718.C: New test.\n\nFrom-SVN: r206643", "tree": {"sha": "705afa968fdbcdcb027d1f5a0b8acc748b7b4a0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/705afa968fdbcdcb027d1f5a0b8acc748b7b4a0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67bf2939d3d2765d2eabbb8905a70384f7039f69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67bf2939d3d2765d2eabbb8905a70384f7039f69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67bf2939d3d2765d2eabbb8905a70384f7039f69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67bf2939d3d2765d2eabbb8905a70384f7039f69/comments", "author": {"login": "laurent-alfonsi", "id": 11767133, "node_id": "MDQ6VXNlcjExNzY3MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/11767133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurent-alfonsi", "html_url": "https://github.com/laurent-alfonsi", "followers_url": "https://api.github.com/users/laurent-alfonsi/followers", "following_url": "https://api.github.com/users/laurent-alfonsi/following{/other_user}", "gists_url": "https://api.github.com/users/laurent-alfonsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurent-alfonsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurent-alfonsi/subscriptions", "organizations_url": "https://api.github.com/users/laurent-alfonsi/orgs", "repos_url": "https://api.github.com/users/laurent-alfonsi/repos", "events_url": "https://api.github.com/users/laurent-alfonsi/events{/privacy}", "received_events_url": "https://api.github.com/users/laurent-alfonsi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "352e9ecd3f8a8a7739100752b6a276c9fc95a63f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/352e9ecd3f8a8a7739100752b6a276c9fc95a63f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/352e9ecd3f8a8a7739100752b6a276c9fc95a63f"}], "stats": {"total": 59, "additions": 53, "deletions": 6}, "files": [{"sha": "fede01f6ede7803810d98902f0709a41527399f2", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67bf2939d3d2765d2eabbb8905a70384f7039f69/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67bf2939d3d2765d2eabbb8905a70384f7039f69/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=67bf2939d3d2765d2eabbb8905a70384f7039f69", "patch": "@@ -1,3 +1,10 @@\n+2014-01-15  Laurent Alfonsi <laurent.alfonsi@st.com>\n+\n+\tPR c++/49718\n+\t* c-common.c (handle_no_instrument_function_attribute): Allow\n+\tno_instrument_function attribute in class member\n+\tdefinition/declaration.\n+\n 2014-01-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/58943"}, {"sha": "35958ea41f07c8e373dd48759cf9866d99833d89", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67bf2939d3d2765d2eabbb8905a70384f7039f69/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67bf2939d3d2765d2eabbb8905a70384f7039f69/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=67bf2939d3d2765d2eabbb8905a70384f7039f69", "patch": "@@ -7985,12 +7985,6 @@ handle_no_instrument_function_attribute (tree *node, tree name,\n \t\t\"%qE attribute applies only to functions\", name);\n       *no_add_attrs = true;\n     }\n-  else if (DECL_INITIAL (decl))\n-    {\n-      error_at (DECL_SOURCE_LOCATION (decl),\n-\t\t\"can%'t set %qE attribute after definition\", name);\n-      *no_add_attrs = true;\n-    }\n   else\n     DECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT (decl) = 1;\n "}, {"sha": "2a5ded2d5ea72c37bb6a3cb4a9654535c68948f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67bf2939d3d2765d2eabbb8905a70384f7039f69/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67bf2939d3d2765d2eabbb8905a70384f7039f69/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67bf2939d3d2765d2eabbb8905a70384f7039f69", "patch": "@@ -1,3 +1,8 @@\n+2014-01-15  Laurent Alfonsi <laurent.alfonsi@st.com>\n+\n+\tPR c++/49718\n+\t* g++.dg/pr49718.C: New test.\n+\n 2014-01-15  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/umips-branch-4.c: Add addressing=absolute."}, {"sha": "f80f995bdf1e5a729effe5bfa2f8732bc4227bf1", "filename": "gcc/testsuite/g++.dg/pr49718.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67bf2939d3d2765d2eabbb8905a70384f7039f69/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr49718.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67bf2939d3d2765d2eabbb8905a70384f7039f69/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr49718.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr49718.C?ref=67bf2939d3d2765d2eabbb8905a70384f7039f69", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -finstrument-functions\" } */\n+/* { dg-final { scan-assembler-times \"__cyg_profile_func_enter\" 1} } */\n+\n+#define NOINSTR __attribute__((no_instrument_function))\n+\n+struct t\n+{\n+   public:\n+       /* Function code should be instrumented */\n+       __attribute__((noinline)) t() {}\n+\n+       /* Function t::a() should not be instrumented */\n+       NOINSTR void a(){\n+       }\n+       /* Function t::b() should not be instrumented */\n+       void NOINSTR b(){\n+       }\n+       /* Function t::c() should not be instrumented */\n+       void c() NOINSTR {\n+       }\n+       /* Function t::d() should not be instrumented */\n+       void d() NOINSTR;\n+};\n+\n+void t::d()\n+{\n+}\n+\n+/* Function call_all_functions() should not be instrumented */\n+struct t call_all_functions() __attribute__((no_instrument_function));\n+struct t call_all_functions()\n+{\n+       struct t a;     /* Constructor not inlined */\n+       a.a();\t       /* Inlined t::a() should not be instrumented */\n+       a.b();\t       /* Inlined t::b() should not be instrumented */\n+       a.c();\t       /* Inlined t::c() should not be instrumented */\n+       a.d();\t       /* Inlined t::d() should not be instrumented */\n+       return a;\n+}\n+"}]}