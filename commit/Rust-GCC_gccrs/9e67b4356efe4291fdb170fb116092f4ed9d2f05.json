{"sha": "9e67b4356efe4291fdb170fb116092f4ed9d2f05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU2N2I0MzU2ZWZlNDI5MWZkYjE3MGZiMTE2MDkyZjRlZDlkMmYwNQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-07-30T11:23:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-07-30T12:09:18Z"}, "message": "libstdc++: cv bool can't be an integer-like type (LWG 3467)\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/iterator_concepts.h (__detail::__cv_bool): New\n\thelper concept.\n\t(__detail::__integral_nonbool): Likewise.\n\t(__detail::__is_integer_like): Use __integral_nonbool.\n\t* testsuite/std/ranges/access/lwg3467.cc: New test.", "tree": {"sha": "3baed627d75d55d30e701e032ac5d86376dfa9e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3baed627d75d55d30e701e032ac5d86376dfa9e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e67b4356efe4291fdb170fb116092f4ed9d2f05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e67b4356efe4291fdb170fb116092f4ed9d2f05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e67b4356efe4291fdb170fb116092f4ed9d2f05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e67b4356efe4291fdb170fb116092f4ed9d2f05/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eeb45f8a41f7214d86824444151bff7c7f00b06a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb45f8a41f7214d86824444151bff7c7f00b06a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeb45f8a41f7214d86824444151bff7c7f00b06a"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "aad6c2dcd91def973f00802422d7eccd758d1fd4", "filename": "libstdc++-v3/include/bits/iterator_concepts.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e67b4356efe4291fdb170fb116092f4ed9d2f05/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fiterator_concepts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e67b4356efe4291fdb170fb116092f4ed9d2f05/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fiterator_concepts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fiterator_concepts.h?ref=9e67b4356efe4291fdb170fb116092f4ed9d2f05", "patch": "@@ -520,7 +520,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n \n     template<typename _Tp>\n-      concept __is_integer_like = integral<_Tp>\n+      concept __cv_bool = same_as<const volatile _Tp, const volatile bool>;\n+\n+    template<typename _Tp>\n+      concept __integral_nonbool = integral<_Tp> && !__cv_bool<_Tp>;\n+\n+    template<typename _Tp>\n+      concept __is_integer_like = __integral_nonbool<_Tp>\n \t|| same_as<_Tp, __max_diff_type> || same_as<_Tp, __max_size_type>;\n \n     template<typename _Tp>"}, {"sha": "23418b476a0bda640b9a9de638134b61e566cd58", "filename": "libstdc++-v3/testsuite/std/ranges/access/lwg3467.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e67b4356efe4291fdb170fb116092f4ed9d2f05/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Faccess%2Flwg3467.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e67b4356efe4291fdb170fb116092f4ed9d2f05/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Faccess%2Flwg3467.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Faccess%2Flwg3467.cc?ref=9e67b4356efe4291fdb170fb116092f4ed9d2f05", "patch": "@@ -0,0 +1,33 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+// LWG 3467. bool can't be an integer-like type\n+\n+#include <ranges>\n+\n+struct R\n+{\n+  bool size() const;\n+};\n+\n+template<typename T>\n+concept sized = requires(T t) { std::ranges::size(t); };\n+\n+static_assert( !sized<R> );"}]}