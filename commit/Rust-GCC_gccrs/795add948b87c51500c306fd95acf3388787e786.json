{"sha": "795add948b87c51500c306fd95acf3388787e786", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk1YWRkOTQ4Yjg3YzUxNTAwYzMwNmZkOTVhY2YzMzg4Nzg3ZTc4Ng==", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@cygnus.com", "date": "1998-07-08T12:16:05Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "1998-07-08T12:16:05Z"}, "message": "toplev.c (lang_options): Add -Wlong-long, -Wno-long-long options.\n\n\t* toplev.c (lang_options): Add -Wlong-long, -Wno-long-long\n\toptions.\n\t* c-decl.c (warn_long_long): Define.\n\t(c_decode_option): Parse -Wlong-long, -Wno-long-long options.\n\t(grokdeclarator): Add flag `warn_long_long' as guard for\n\twarning \"ANSI C does not support `long long'\".\n\t* invoke.texi: Add description of options -Wlong-long,\n\t-Wno-long-long.\n\t* gcc.1: The same as above.\n\t* cp-tree.h (warn_long_long): Define.\n\t* decl.c (grokdeclarator): Add flag `warn_long_long' as guard for\n\twarning \"ANSI C++ does not support `long long'\".\n\t* decl2.c (warn_long_long): Define.\n\t(lang_decode_option): Parse -Wlong-long, -Wno-long-long options.\n\nFrom-SVN: r21007", "tree": {"sha": "1a09517983f5d1a0757410a58f92ae55ac9a33a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a09517983f5d1a0757410a58f92ae55ac9a33a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/795add948b87c51500c306fd95acf3388787e786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/795add948b87c51500c306fd95acf3388787e786", "html_url": "https://github.com/Rust-GCC/gccrs/commit/795add948b87c51500c306fd95acf3388787e786", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/795add948b87c51500c306fd95acf3388787e786/comments", "author": null, "committer": null, "parents": [{"sha": "37785a19fde91819c6f441c49a7e56c5f1ae638c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37785a19fde91819c6f441c49a7e56c5f1ae638c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37785a19fde91819c6f441c49a7e56c5f1ae638c"}], "stats": {"total": 68, "additions": 65, "deletions": 3}, "files": [{"sha": "9fdfd60490bb2e9fa08dd0cdf6b447bda31ed6a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795add948b87c51500c306fd95acf3388787e786/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795add948b87c51500c306fd95acf3388787e786/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=795add948b87c51500c306fd95acf3388787e786", "patch": "@@ -1,3 +1,15 @@\n+1998-07-08  Vladimir N. Makarov  <vmakarov@cygnus.com>\n+\n+\t* toplev.c (lang_options): Add -Wlong-long, -Wno-long-long\n+\toptions.\n+\t* c-decl.c (warn_long_long): Define.\n+\t(c_decode_option): Parse -Wlong-long, -Wno-long-long options.\n+\t(grokdeclarator): Add flag `warn_long_long' as guard for\n+\twarning \"ANSI C does not support `long long'\".\n+\t* invoke.texi: Add description of options -Wlong-long,\n+\t-Wno-long-long.\n+\t* gcc.1: The same as above.\n+\t\n Wed Jul  8 02:43:34 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* rtlanal.c (reg_overlap_mentioned_p): Handle STRICT_LOW_PART.  If"}, {"sha": "3af985d732d1807da2169c14692d4a5ee8ff3ce0", "filename": "gcc/c-decl.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795add948b87c51500c306fd95acf3388787e786/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795add948b87c51500c306fd95acf3388787e786/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=795add948b87c51500c306fd95acf3388787e786", "patch": "@@ -485,6 +485,10 @@ int flag_no_ident = 0;\n \n int warn_implicit_int;\n \n+/* Nonzero means warn about usage of long long when `-pedantic'.  */\n+\n+int warn_long_long = 1;\n+\n /* Nonzero means message about use of implicit function declarations;\n  1 means warning; 2 means error. */\n \n@@ -704,6 +708,10 @@ c_decode_option (argc, argv)\n     }\n   else if (!strcmp (p, \"-Wno-implicit\"))\n     warn_implicit_int = 0, mesg_implicit_function_declaration = 0;\n+  else if (!strcmp (p, \"-Wlong-long\"))\n+    warn_long_long = 1;\n+  else if (!strcmp (p, \"-Wno-long-long\"))\n+    warn_long_long = 0;\n   else if (!strcmp (p, \"-Wwrite-strings\"))\n     warn_write_strings = 1;\n   else if (!strcmp (p, \"-Wno-write-strings\"))\n@@ -4406,7 +4414,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \t\t      error (\"`long long long' is too long for GCC\");\n \t\t    else\n \t\t      {\n-\t\t\tif (pedantic && ! in_system_header)\n+\t\t\tif (pedantic && ! in_system_header && warn_long_long)\n \t\t\t  pedwarn (\"ANSI C does not support `long long'\");\n \t\t\tlonglong = 1;\n \t\t      }"}, {"sha": "3849f64c59645b85fb9157df75c351c5424a42be", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795add948b87c51500c306fd95acf3388787e786/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795add948b87c51500c306fd95acf3388787e786/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=795add948b87c51500c306fd95acf3388787e786", "patch": "@@ -1,3 +1,11 @@\n+1998-07-08  Vladimir N. Makarov  <vmakarov@cygnus.com>\n+\n+\t* cp-tree.h (warn_long_long): Define.\n+\t* decl.c (grokdeclarator): Add flag `warn_long_long' as guard for\n+\twarning \"ANSI C++ does not support `long long'\".\n+\t* decl2.c (warn_long_long): Define.\n+\t(lang_decode_option): Parse -Wlong-long, -Wno-long-long options.\n+\n 1998-07-07  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (xref_tag): Handle attributes between 'class' and name."}, {"sha": "71ae91128e59c8fc82025438d88eccf4273bb6d8", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795add948b87c51500c306fd95acf3388787e786/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795add948b87c51500c306fd95acf3388787e786/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=795add948b87c51500c306fd95acf3388787e786", "patch": "@@ -329,6 +329,10 @@ extern int flag_no_ident;\n \n extern int warn_implicit;\n \n+/* Nonzero means warn about usage of long long when `-pedantic'.  */\n+\n+extern int warn_long_long;\n+\n /* Nonzero means warn when all ctors or dtors are private, and the class\n    has no friends.  */\n "}, {"sha": "d8522e0e949ec17bf714501d5d117a0a58f39864", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795add948b87c51500c306fd95acf3388787e786/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795add948b87c51500c306fd95acf3388787e786/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=795add948b87c51500c306fd95acf3388787e786", "patch": "@@ -8436,7 +8436,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\t{\n \t\t  if (i == (int) RID_LONG && RIDBIT_SETP (i, specbits))\n \t\t    {\n-\t\t      if (pedantic && ! in_system_header)\n+\t\t      if (pedantic && ! in_system_header && warn_long_long)\n \t\t\tpedwarn (\"ANSI C++ does not support `long long'\");\n \t\t      if (longlong)\n \t\t\terror (\"`long long long' is too long for GCC\");"}, {"sha": "8f844076a016752896f814ccbbb9e5b3be097ea3", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795add948b87c51500c306fd95acf3388787e786/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795add948b87c51500c306fd95acf3388787e786/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=795add948b87c51500c306fd95acf3388787e786", "patch": "@@ -178,6 +178,10 @@ int flag_implicit_templates = 1;\n \n int warn_implicit = 1;\n \n+/* Nonzero means warn about usage of long long when `-pedantic'.  */\n+\n+int warn_long_long = 1;\n+\n /* Nonzero means warn when all ctors or dtors are private, and the class\n    has no friends.  */\n \n@@ -686,6 +690,8 @@ lang_decode_option (argc, argv)\n \n       if (!strcmp (p, \"implicit\"))\n \twarn_implicit = setting;\n+      else if (!strcmp (p, \"long-long\"))\n+\twarn_long_long = setting;\n       else if (!strcmp (p, \"return-type\"))\n \twarn_return_type = setting;\n       else if (!strcmp (p, \"ctor-dtor-privacy\"))"}, {"sha": "b4ff586e906f9a1ee056d5ec6b5edd8a1129a3da", "filename": "gcc/gcc.1", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795add948b87c51500c306fd95acf3388787e786/gcc%2Fgcc.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795add948b87c51500c306fd95acf3388787e786/gcc%2Fgcc.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.1?ref=795add948b87c51500c306fd95acf3388787e786", "patch": "@@ -193,6 +193,7 @@ in the following sections.\n \\-Wimplicit\\-int\n \\-Wimplicit\\-function\\-declaration\n \\-Winline\n+\\-Wlong\\-long\n \\-Wmain\n \\-Wmissing\\-prototypes\n \\-Wmissing\\-declarations\n@@ -2004,6 +2005,20 @@ Warn if an \\c\n .B \\-Wenum\\-clash\n Warn about conversion between different enumeration types (C++ only).\n .TP\n+.B \\-Wlong-long\n+Warn if\n+.B long long \\c\n+type is used.  This is default.  To inhibit\n+the warning messages, use flag `\\|\\c\n+.B \\-Wno\\-long\\-long\\c\n+\\&\\|'.  Flags `\\|\\c\n+.B \\-W\\-long\\-long\\c\n+\\&\\|' and `\\|\\c\n+.B \\-Wno\\-long\\-long\\c\n+\\&\\|' are taken into account only when flag `\\|\\c\n+.B \\-pedantic\\c\n+\\&\\|' is used.\n+.TP\n .B \\-Woverloaded\\-virtual\n (C++ only.)\n In a derived class, the definitions of virtual functions must match"}, {"sha": "5cd5432bcad466e3a502ba5043a74e935d8da9db", "filename": "gcc/invoke.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795add948b87c51500c306fd95acf3388787e786/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795add948b87c51500c306fd95acf3388787e786/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=795add948b87c51500c306fd95acf3388787e786", "patch": "@@ -121,7 +121,8 @@ in the following sections.\n -Wid-clash-@var{len}  -Wimplicit -Wimplicit-int \n -Wimplicit-function-declaration  -Wimport\n -Werror-implicit-function-declaration  -Winline\n--Wlarger-than-@var{len}  -Wmain  -Wmissing-declarations\n+-Wlarger-than-@var{len}  -Wlong-long\n+-Wmain  -Wmissing-declarations\n -Wmissing-prototypes  -Wmultichar  -Wnested-externs  -Wno-import  \n -Wold-style-cast  -Woverloaded-virtual  -Wparentheses\n -Wpointer-arith  -Wredundant-decls  -Wreorder  -Wreturn-type\n@@ -1704,6 +1705,12 @@ main ()\n In this example, g++ will synthesize a default @samp{A& operator =\n (const A&);}, while cfront will use the user-defined @samp{operator =}.\n \n+@item -Wlong-long\n+Warn if @samp{long long} type is used.  This is default.  To inhibit\n+the warning messages, use @samp{-Wno-long-long}.  Flags\n+@samp{-Wlong-long} and @samp{-Wno-long-long} are taken into account\n+only when @samp{-pedantic} flag is used.\n+\n @item -Werror\n Make all warnings into errors.\n @end table"}, {"sha": "d63b0c25c806e92f46a40537185c8f7ed8b05f0d", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795add948b87c51500c306fd95acf3388787e786/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795add948b87c51500c306fd95acf3388787e786/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=795add948b87c51500c306fd95acf3388787e786", "patch": "@@ -864,6 +864,8 @@ char *lang_options[] =\n   \"-Wno-implicit-int\",\n   \"-Wimplicit\",\n   \"-Wno-implicit\",\n+  \"-Wlong-long\",\n+  \"-Wno-long-long\",\n   \"-Wmain\",\n   \"-Wno-main\",\n   \"-Wmissing-braces\","}]}