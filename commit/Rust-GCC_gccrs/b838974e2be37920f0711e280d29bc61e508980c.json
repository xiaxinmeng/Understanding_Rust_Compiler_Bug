{"sha": "b838974e2be37920f0711e280d29bc61e508980c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgzODk3NGUyYmUzNzkyMGYwNzExZTI4MGQyOWJjNjFlNTA4OTgwYw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-05-27T01:19:12Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-05-27T01:19:12Z"}, "message": "reload.c (push_reload): Do not call remove_address_replacements when...\n\np\n        * reload.c (push_reload): Do not call remove_address_replacements\n        when presented with identical optional reloads.\n\nFrom-SVN: r27191", "tree": {"sha": "9bdc224bb6b0a3678377fbf8e213738c6ec92bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bdc224bb6b0a3678377fbf8e213738c6ec92bb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b838974e2be37920f0711e280d29bc61e508980c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b838974e2be37920f0711e280d29bc61e508980c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b838974e2be37920f0711e280d29bc61e508980c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b838974e2be37920f0711e280d29bc61e508980c/comments", "author": null, "committer": null, "parents": [{"sha": "b5c15deb09a336bb1b61a52493e0db43490603e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c15deb09a336bb1b61a52493e0db43490603e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c15deb09a336bb1b61a52493e0db43490603e4"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "011f89955c6e897eae1cfc30a9a9d807dd1475e9", "filename": "gcc/reload.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b838974e2be37920f0711e280d29bc61e508980c/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b838974e2be37920f0711e280d29bc61e508980c/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=b838974e2be37920f0711e280d29bc61e508980c", "patch": "@@ -1360,8 +1360,18 @@ push_reload (in, out, inloc, outloc, class,\n \t     are identical in content, there might be duplicate address\n \t     reloads.  Remove the extra set now, so that if we later find\n \t     that we can inherit this reload, we can get rid of the\n-\t     address reloads altogether.  */\n-\t  if (reload_in[i] != in && rtx_equal_p (in, reload_in[i]))\n+\t     address reloads altogether.\n+\n+\t     Do not do this if both reloads are optional since the result\n+\t     would be an optional reload which could potentially leave\n+\t     unresolved address replacements.\n+\n+\t     It is not sufficient to call transfer_replacements since\n+\t     choose_reload_regs will remove the replacements for address\n+\t     reloads of inherited reloads which results in the same\n+\t     problem.  */\n+\t  if (reload_in[i] != in && rtx_equal_p (in, reload_in[i])\n+\t      && ! (reload_optional[i] && optional))\n \t    {\n \t      /* We must keep the address reload with the lower operand\n \t\t number alive.  */"}]}