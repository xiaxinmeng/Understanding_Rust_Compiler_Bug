{"sha": "63d6cbd1ff94e61809d84efab9794c18337b2568", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNkNmNiZDFmZjk0ZTYxODA5ZDg0ZWZhYjk3OTRjMTgzMzdiMjU2OA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2018-04-17T18:22:08Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2018-04-17T18:22:08Z"}, "message": "re PR target/85424 (The __builtin_packlongdouble function might have issues with the output overlapping the inputs)\n\n2018-04-17  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/85424\n\t* config/rs6000/rs6000.md (pack<mode>): Do not try handle a pack\n\twhere the inputs overlap with the output.\n\nFrom-SVN: r259441", "tree": {"sha": "97ebf68c9c27ad9cde2343691eb98b18e3f481ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97ebf68c9c27ad9cde2343691eb98b18e3f481ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63d6cbd1ff94e61809d84efab9794c18337b2568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d6cbd1ff94e61809d84efab9794c18337b2568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d6cbd1ff94e61809d84efab9794c18337b2568", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d6cbd1ff94e61809d84efab9794c18337b2568/comments", "author": null, "committer": null, "parents": [{"sha": "21070494d80ebf9586ecf2fe9a3c24d34329e4db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21070494d80ebf9586ecf2fe9a3c24d34329e4db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21070494d80ebf9586ecf2fe9a3c24d34329e4db"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "54dfb4ff35164b30a73c890e8200173d770df18b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d6cbd1ff94e61809d84efab9794c18337b2568/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d6cbd1ff94e61809d84efab9794c18337b2568/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63d6cbd1ff94e61809d84efab9794c18337b2568", "patch": "@@ -1,3 +1,9 @@\n+2018-04-17  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/85424\n+\t* config/rs6000/rs6000.md (pack<mode>): Do not try handle a pack\n+\twhere the inputs overlap with the output.\n+\n 2018-04-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (vec_extract_lo_<mode><mask_name>): Add"}, {"sha": "2b15cca88432938cfb1c751a2c3048a5785cea35", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d6cbd1ff94e61809d84efab9794c18337b2568/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d6cbd1ff94e61809d84efab9794c18337b2568/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=63d6cbd1ff94e61809d84efab9794c18337b2568", "patch": "@@ -13934,16 +13934,14 @@\n    (set_attr \"length\" \"4\")])\n \n (define_insn_and_split \"pack<mode>\"\n-  [(set (match_operand:FMOVE128 0 \"register_operand\" \"=d,&d\")\n+  [(set (match_operand:FMOVE128 0 \"register_operand\" \"=&d\")\n \t(unspec:FMOVE128\n-\t [(match_operand:<FP128_64> 1 \"register_operand\" \"0,d\")\n-\t  (match_operand:<FP128_64> 2 \"register_operand\" \"d,d\")]\n+\t [(match_operand:<FP128_64> 1 \"register_operand\" \"d\")\n+\t  (match_operand:<FP128_64> 2 \"register_operand\" \"d\")]\n \t UNSPEC_PACK_128BIT))]\n   \"FLOAT128_2REG_P (<MODE>mode)\"\n-  \"@\n-   fmr %L0,%2\n-   #\"\n-  \"&& reload_completed && REGNO (operands[0]) != REGNO (operands[1])\"\n+  \"#\"\n+  \"&& reload_completed\"\n   [(set (match_dup 3) (match_dup 1))\n    (set (match_dup 4) (match_dup 2))]\n {\n@@ -13956,8 +13954,8 @@\n   operands[3] = gen_rtx_REG (<FP128_64>mode, dest_hi);\n   operands[4] = gen_rtx_REG (<FP128_64>mode, dest_lo);\n }\n-  [(set_attr \"type\" \"fpsimple,fp\")\n-   (set_attr \"length\" \"4,8\")])\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"unpack<mode>\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=wa,wa\")"}]}