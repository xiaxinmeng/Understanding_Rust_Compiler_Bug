{"sha": "c05800b6ef28ad14facfba2b09d37d99709fc609", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1ODAwYjZlZjI4YWQxNGZhY2ZiYTJiMDlkMzdkOTk3MDlmYzYwOQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-02-24T19:18:27Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-02-24T19:18:27Z"}, "message": "re PR fortran/35223 (IBITS gives compiler error)\n\n2008-02-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/35223\n\t* simplify.c (gfc_simplify_ibclr), (gfc_simplify_ibits),\n\t(gfc_simplify_ibset): Remove call to range_check.\n\t(simplify_cmplx), (gfc_simplify_dble), (gfc_simplify_float)\n\t(gfc_simplify_real): Add call gfc_clear_ts to initialize the\n\ttemporary gfc_typspec variable.\n\nFrom-SVN: r132597", "tree": {"sha": "f3ffea23f2672d149b7fa56d5dd83a243c975e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3ffea23f2672d149b7fa56d5dd83a243c975e9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c05800b6ef28ad14facfba2b09d37d99709fc609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05800b6ef28ad14facfba2b09d37d99709fc609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05800b6ef28ad14facfba2b09d37d99709fc609", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05800b6ef28ad14facfba2b09d37d99709fc609/comments", "author": null, "committer": null, "parents": [{"sha": "849998c28cd5e37775c2be9505eeecc8deb9ac9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/849998c28cd5e37775c2be9505eeecc8deb9ac9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/849998c28cd5e37775c2be9505eeecc8deb9ac9f"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "a70d95ecb79b77ff9c3edd0a8559240f147882dd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05800b6ef28ad14facfba2b09d37d99709fc609/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05800b6ef28ad14facfba2b09d37d99709fc609/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c05800b6ef28ad14facfba2b09d37d99709fc609", "patch": "@@ -1,3 +1,12 @@\n+2008-02-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/35223\n+\t* simplify.c (gfc_simplify_ibclr), (gfc_simplify_ibits),\n+\t(gfc_simplify_ibset): Remove call to range_check.\n+\t(simplify_cmplx), (gfc_simplify_dble), (gfc_simplify_float)\n+\t(gfc_simplify_real): Add call gfc_clear_ts to initialize the\n+\ttemporary gfc_typspec variable.\n+\n 2008-02-23  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR target/25477\n@@ -7,7 +16,15 @@\n \tgfor_fndecl_math_cpowl10, gfor_fndecl_math_cpowl16): Remove.\n \t* trans-decl.c: Likewise.\n \n-2008-02-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+2008-02-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/35059\n+\t* expr.c (find_array_element): Modify traversing the constructor to\n+\tavoid trying to access NULL memory pointed to by next for the\n+\tlast element. (find_array_section): Exit while loop if cons->next is\n+\tNULL.\n+\n+2008-02-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/34907\n \t* iresolve.c (resolve_mask_arg): Add gfc_clear_ts to initialize"}, {"sha": "77af04d4c45991a1f8a529a00fb17588aca1043a", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05800b6ef28ad14facfba2b09d37d99709fc609/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05800b6ef28ad14facfba2b09d37d99709fc609/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=c05800b6ef28ad14facfba2b09d37d99709fc609", "patch": "@@ -779,6 +779,7 @@ simplify_cmplx (const char *name, gfc_expr *x, gfc_expr *y, int kind)\n   if (x->is_boz)\n     {\n       gfc_typespec ts;\n+      gfc_clear_ts (&ts);\n       ts.kind = result->ts.kind;\n       ts.type = BT_REAL;\n       if (!gfc_convert_boz (x, &ts))\n@@ -789,6 +790,7 @@ simplify_cmplx (const char *name, gfc_expr *x, gfc_expr *y, int kind)\n   if (y && y->is_boz)\n     {\n       gfc_typespec ts;\n+      gfc_clear_ts (&ts);\n       ts.kind = result->ts.kind;\n       ts.type = BT_REAL;\n       if (!gfc_convert_boz (y, &ts))\n@@ -960,6 +962,7 @@ gfc_simplify_dble (gfc_expr *e)\n   if (e->ts.type == BT_INTEGER && e->is_boz)\n     {\n       gfc_typespec ts;\n+      gfc_clear_ts (&ts);\n       ts.type = BT_REAL;\n       ts.kind = gfc_default_double_kind;\n       result = gfc_copy_expr (e);\n@@ -1148,6 +1151,7 @@ gfc_simplify_float (gfc_expr *a)\n   if (a->is_boz)\n     {\n       gfc_typespec ts;\n+      gfc_clear_ts (&ts);\n \n       ts.type = BT_REAL;\n       ts.kind = gfc_default_real_kind;\n@@ -1359,7 +1363,7 @@ gfc_simplify_ibclr (gfc_expr *x, gfc_expr *y)\n   convert_mpz_to_signed (result->value.integer,\n \t\t\t gfc_integer_kinds[k].bit_size);\n \n-  return range_check (result, \"IBCLR\");\n+  return result;\n }\n \n \n@@ -1400,6 +1404,8 @@ gfc_simplify_ibits (gfc_expr *x, gfc_expr *y, gfc_expr *z)\n     }\n \n   result = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+  convert_mpz_to_unsigned (result->value.integer,\n+\t\t\t   gfc_integer_kinds[k].bit_size);\n \n   bits = gfc_getmem (bitsize * sizeof (int));\n \n@@ -1421,7 +1427,10 @@ gfc_simplify_ibits (gfc_expr *x, gfc_expr *y, gfc_expr *z)\n \n   gfc_free (bits);\n \n-  return range_check (result, \"IBITS\");\n+  convert_mpz_to_signed (result->value.integer,\n+\t\t\t gfc_integer_kinds[k].bit_size);\n+\n+  return result;\n }\n \n \n@@ -1459,7 +1468,7 @@ gfc_simplify_ibset (gfc_expr *x, gfc_expr *y)\n   convert_mpz_to_signed (result->value.integer,\n \t\t\t gfc_integer_kinds[k].bit_size);\n \n-  return range_check (result, \"IBSET\");\n+  return result;\n }\n \n \n@@ -3020,6 +3029,7 @@ gfc_simplify_real (gfc_expr *e, gfc_expr *k)\n   if (e->ts.type == BT_INTEGER && e->is_boz)\n     {\n       gfc_typespec ts;\n+      gfc_clear_ts (&ts);\n       ts.type = BT_REAL;\n       ts.kind = kind;\n       result = gfc_copy_expr (e);"}]}