{"sha": "fa2988b4ff261844ea2e02ca8f0188b984e3cb26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmEyOTg4YjRmZjI2MTg0NGVhMmUwMmNhOGYwMTg4Yjk4NGUzY2IyNg==", "commit": {"author": {"name": "Dehao Chen", "email": "dehao@google.com", "date": "2011-10-20T00:39:12Z"}, "committer": {"name": "Dehao Chen", "email": "dehao@gcc.gnu.org", "date": "2011-10-20T00:39:12Z"}, "message": "profile.c (compute_branch_probabilities): Compute and dump the overlap between the static estimation and the...\n\n2011-10-20  Dehao Chen  <dehao@google.com>\n\n\t* profile.c (compute_branch_probabilities): Compute and dump the\n\toverlap between the static estimation and the instrumentation profile.\n\t(OVERLAP_BASE): New macro.\n\t(compute_frequency_overlap): New function\n\nFrom-SVN: r180233", "tree": {"sha": "76bde5baecd77f90b1a5f484260cec5d7d322bd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76bde5baecd77f90b1a5f484260cec5d7d322bd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa2988b4ff261844ea2e02ca8f0188b984e3cb26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa2988b4ff261844ea2e02ca8f0188b984e3cb26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa2988b4ff261844ea2e02ca8f0188b984e3cb26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa2988b4ff261844ea2e02ca8f0188b984e3cb26/comments", "author": {"login": "danielcdh", "id": 694263, "node_id": "MDQ6VXNlcjY5NDI2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcdh", "html_url": "https://github.com/danielcdh", "followers_url": "https://api.github.com/users/danielcdh/followers", "following_url": "https://api.github.com/users/danielcdh/following{/other_user}", "gists_url": "https://api.github.com/users/danielcdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcdh/subscriptions", "organizations_url": "https://api.github.com/users/danielcdh/orgs", "repos_url": "https://api.github.com/users/danielcdh/repos", "events_url": "https://api.github.com/users/danielcdh/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcdh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b6843f176f1258b9a18d833ae14937ab0ce0827", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b6843f176f1258b9a18d833ae14937ab0ce0827", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b6843f176f1258b9a18d833ae14937ab0ce0827"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "34e94e403fe68e6acf79f4a622e7d1eba570845b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa2988b4ff261844ea2e02ca8f0188b984e3cb26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa2988b4ff261844ea2e02ca8f0188b984e3cb26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa2988b4ff261844ea2e02ca8f0188b984e3cb26", "patch": "@@ -1,3 +1,10 @@\n+2011-10-20  Dehao Chen  <dehao@google.com>\n+\n+\t* profile.c (compute_branch_probabilities): Compute and dump the\n+\toverlap between the static estimation and the instrumentation profile.\n+\t(OVERLAP_BASE): New macro.\n+\t(compute_frequency_overlap): New function\n+\n 2011-10-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.c (expand_vec_perm_vpshufb2_vpermq_even_odd): Use"}, {"sha": "41108394e98a68eefc2605edf8af5299146d2410", "filename": "gcc/profile.c", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa2988b4ff261844ea2e02ca8f0188b984e3cb26/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa2988b4ff261844ea2e02ca8f0188b984e3cb26/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=fa2988b4ff261844ea2e02ca8f0188b984e3cb26", "patch": "@@ -437,6 +437,39 @@ read_profile_edge_counts (gcov_type *exec_counts)\n     return num_edges;\n }\n \n+#define OVERLAP_BASE 10000\n+\n+/* Compare the static estimated profile to the actual profile, and\n+   return the \"degree of overlap\" measure between them.\n+\n+   Degree of overlap is a number between 0 and OVERLAP_BASE. It is\n+   the sum of each basic block's minimum relative weights between\n+   two profiles. And overlap of OVERLAP_BASE means two profiles are\n+   identical.  */\n+\n+static int\n+compute_frequency_overlap (void)\n+{\n+  gcov_type count_total = 0, freq_total = 0;\n+  int overlap = 0;\n+  basic_block bb;\n+\n+  FOR_BB_BETWEEN (bb, ENTRY_BLOCK_PTR, NULL, next_bb)\n+    {\n+      count_total += bb->count;\n+      freq_total += bb->frequency;\n+    }\n+\n+  if (count_total == 0 || freq_total == 0)\n+    return 0;\n+\n+  FOR_BB_BETWEEN (bb, ENTRY_BLOCK_PTR, NULL, next_bb)\n+    overlap += MIN (bb->count * OVERLAP_BASE / count_total,\n+\t\t    bb->frequency * OVERLAP_BASE / freq_total);\n+\n+  return overlap;\n+}\n+\n /* Compute the branch probabilities for the various branches.\n    Annotate them accordingly.  \n \n@@ -607,7 +640,13 @@ compute_branch_probabilities (unsigned cfg_checksum, unsigned lineno_checksum)\n \t}\n     }\n   if (dump_file)\n-    dump_flow_info (dump_file, dump_flags);\n+    {\n+      int overlap = compute_frequency_overlap ();\n+      dump_flow_info (dump_file, dump_flags);\n+      fprintf (dump_file, \"Static profile overlap: %d.%d%%\\n\",\n+\t       overlap / (OVERLAP_BASE / 100),\n+\t       overlap % (OVERLAP_BASE / 100));\n+    }\n \n   total_num_passes += passes;\n   if (dump_file)"}]}