{"sha": "f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAyNjUzMGE4NWMzZDEzYWFlYmVjNWM0ZTk2Y2QwYTJmNmVmNGYxNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-30T21:21:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-30T21:21:25Z"}, "message": "PR c++/85305 - pack in lambda init-capture.\n\n\t* parser.c (cp_parser_initializer): Add subexpression_p parm; don't\n\tcheck_for_bare_parameter_packs in a subexpression.\n\t(cp_parser_lambda_introducer): Use it.\n\nFrom-SVN: r259779", "tree": {"sha": "0b723e6548ef3884af4b49ddcad43de0c2aad2c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b723e6548ef3884af4b49ddcad43de0c2aad2c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d6df811e5db4d0f2cfa27c33dd97bf0ab3fe0822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6df811e5db4d0f2cfa27c33dd97bf0ab3fe0822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6df811e5db4d0f2cfa27c33dd97bf0ab3fe0822"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "95f77f4bf985964475e6be9b817f606be777d7eb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17", "patch": "@@ -1,5 +1,10 @@\n 2018-04-30  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/85305 - pack in lambda init-capture.\n+\t* parser.c (cp_parser_initializer): Add subexpression_p parm; don't\n+\tcheck_for_bare_parameter_packs in a subexpression.\n+\t(cp_parser_lambda_introducer): Use it.\n+\n \tPR c++/61982 - dead stores to destroyed objects.\n \t* call.c (build_trivial_dtor_call): New, assigns a clobber.\n \t(build_over_call, build_special_member_call): Use it."}, {"sha": "b839232bcbe0b93f40290a19db6f80bf1ba43c19", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17", "patch": "@@ -2243,7 +2243,7 @@ static tree cp_parser_default_argument\n static void cp_parser_function_body\n   (cp_parser *, bool);\n static tree cp_parser_initializer\n-  (cp_parser *, bool *, bool *);\n+  (cp_parser *, bool *, bool *, bool = false);\n static cp_expr cp_parser_initializer_clause\n   (cp_parser *, bool *);\n static cp_expr cp_parser_braced_list\n@@ -10358,7 +10358,7 @@ cp_parser_lambda_introducer (cp_parser* parser, tree lambda_expr)\n \t\t     \"lambda capture initializers \"\n \t\t     \"only available with -std=c++14 or -std=gnu++14\");\n \t  capture_init_expr = cp_parser_initializer (parser, &direct,\n-\t\t\t\t\t\t     &non_constant);\n+\t\t\t\t\t\t     &non_constant, true);\n \t  explicit_init_p = true;\n \t  if (capture_init_expr == NULL_TREE)\n \t    {\n@@ -21860,7 +21860,7 @@ cp_parser_ctor_initializer_opt_and_function_body (cp_parser *parser,\n \n static tree\n cp_parser_initializer (cp_parser* parser, bool* is_direct_init,\n-\t\t       bool* non_constant_p)\n+\t\t       bool* non_constant_p, bool subexpression_p)\n {\n   cp_token *token;\n   tree init;\n@@ -21907,7 +21907,7 @@ cp_parser_initializer (cp_parser* parser, bool* is_direct_init,\n       init = error_mark_node;\n     }\n \n-  if (check_for_bare_parameter_packs (init))\n+  if (!subexpression_p && check_for_bare_parameter_packs (init))\n     init = error_mark_node;\n \n   return init;"}, {"sha": "e93f55f7fd83774d797dbe6d191224d868790801", "filename": "gcc/testsuite/g++.dg/cpp1z/fold-lambda2.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-lambda2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-lambda2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-lambda2.C?ref=f026530a85c3d13aaebec5c4e96cd0a2f6ef4f17", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/85305\n+// { dg-additional-options -std=c++17 }\n+\n+template <int... Is>\n+void foo()\n+{\n+  ([i = Is]{}(), ...); \n+}"}]}