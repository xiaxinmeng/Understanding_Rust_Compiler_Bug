{"sha": "be4ba8aef398e6177b62d3ced6c9a086082d94f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU0YmE4YWVmMzk4ZTYxNzdiNjJkM2NlZDZjOWEwODYwODJkOTRmMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-10-03T22:07:12Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-10-03T22:07:12Z"}, "message": "dwarf.c (read_uleb128): Fix overflow test.\n\n\t* dwarf.c (read_uleb128): Fix overflow test.\n\t(read_sleb128): Likewise.\n\t(build_address_map): Don't change unit_buf.start.\n\nFrom-SVN: r192053", "tree": {"sha": "0b7f834cad3ef78befbe7181d423d4ee7dde5768", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b7f834cad3ef78befbe7181d423d4ee7dde5768"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be4ba8aef398e6177b62d3ced6c9a086082d94f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be4ba8aef398e6177b62d3ced6c9a086082d94f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be4ba8aef398e6177b62d3ced6c9a086082d94f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be4ba8aef398e6177b62d3ced6c9a086082d94f2/comments", "author": null, "committer": null, "parents": [{"sha": "91ba65f2f0cacac286907b8a465f42b4e56aeda3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91ba65f2f0cacac286907b8a465f42b4e56aeda3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91ba65f2f0cacac286907b8a465f42b4e56aeda3"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "88a7eb0ba8e131322f2e398e320532ef6005b9a0", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4ba8aef398e6177b62d3ced6c9a086082d94f2/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4ba8aef398e6177b62d3ced6c9a086082d94f2/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=be4ba8aef398e6177b62d3ced6c9a086082d94f2", "patch": "@@ -1,3 +1,9 @@\n+2012-10-03  Ian Lance Taylor  <iant@google.com>\n+\n+\t* dwarf.c (read_uleb128): Fix overflow test.\n+\t(read_sleb128): Likewise.\n+\t(build_address_map): Don't change unit_buf.start.\n+\n 2012-10-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR other/54761"}, {"sha": "25973cb76218b23720bd601f29678fdc6d01a80f", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4ba8aef398e6177b62d3ced6c9a086082d94f2/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4ba8aef398e6177b62d3ced6c9a086082d94f2/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=be4ba8aef398e6177b62d3ced6c9a086082d94f2", "patch": "@@ -524,10 +524,12 @@ read_uleb128 (struct dwarf_buf *buf)\n {\n   uint64_t ret;\n   unsigned int shift;\n+  int overflow;\n   unsigned char b;\n \n   ret = 0;\n   shift = 0;\n+  overflow = 0;\n   do\n     {\n       const unsigned char *p;\n@@ -536,14 +538,17 @@ read_uleb128 (struct dwarf_buf *buf)\n       if (!advance (buf, 1))\n \treturn 0;\n       b = *p;\n-      ret |= ((uint64_t) (b & 0x7f)) << shift;\n+      if (shift < 64)\n+\tret |= ((uint64_t) (b & 0x7f)) << shift;\n+      else if (!overflow)\n+\t{\n+\t  dwarf_buf_error (buf, \"LEB128 overflows uint64_t\");\n+\t  overflow = 1;\n+\t}\n       shift += 7;\n     }\n   while ((b & 0x80) != 0);\n \n-  if (shift > 64)\n-    dwarf_buf_error (buf, \"LEB128 overflows uint64_5\");\n-\n   return ret;\n }\n \n@@ -554,10 +559,12 @@ read_sleb128 (struct dwarf_buf *buf)\n {\n   uint64_t val;\n   unsigned int shift;\n+  int overflow;\n   unsigned char b;\n \n   val = 0;\n   shift = 0;\n+  overflow = 0;\n   do\n     {\n       const unsigned char *p;\n@@ -566,15 +573,18 @@ read_sleb128 (struct dwarf_buf *buf)\n       if (!advance (buf, 1))\n \treturn 0;\n       b = *p;\n-      val |= ((uint64_t) (b & 0x7f)) << shift;\n+      if (shift < 64)\n+\tval |= ((uint64_t) (b & 0x7f)) << shift;\n+      else if (!overflow)\n+\t{\n+\t  dwarf_buf_error (buf, \"signed LEB128 overflows uint64_t\");\n+\t  overflow = 1;\n+\t}\n       shift += 7;\n     }\n   while ((b & 0x80) != 0);\n \n-  if (shift > 64)\n-    dwarf_buf_error (buf, \"signed LEB128 overflows uint64_t\");\n-\n-  if ((b & 0x40) != 0)\n+  if ((b & 0x40) != 0 && shift < 64)\n     val |= ((uint64_t) -1) << shift;\n \n   return (int64_t) val;\n@@ -1262,7 +1272,6 @@ build_address_map (struct backtrace_state *state,\n \t}\n \n       unit_buf = info;\n-      unit_buf.start = info.buf;\n       unit_buf.left = len;\n \n       if (!advance (&info, len))"}]}