{"sha": "9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcyOWE1ZDUyNDEyNTdkMDdhYTJhOWMyZmE2YzNhYmJkNzNlMjVlNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-08-26T15:10:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-08-26T15:10:51Z"}, "message": "PR c++/57728 - explicit instantiation and defaulted functions\n\n\t* pt.c (do_type_instantiation): Don't mess with non-user-provided\n\tmember functions.\n\nFrom-SVN: r239782", "tree": {"sha": "fbf8cca60d7fea7d7d76ac821515aed3cf1cba36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbf8cca60d7fea7d7d76ac821515aed3cf1cba36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10491e4c0450dc8e01ed9bec6db061c34a352781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10491e4c0450dc8e01ed9bec6db061c34a352781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10491e4c0450dc8e01ed9bec6db061c34a352781"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "812c8c10f66618b908e05059e712ba7b51b88c41", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "patch": "@@ -1,3 +1,9 @@\n+2016-08-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/57728\n+\t* pt.c (do_type_instantiation): Don't mess with non-user-provided\n+\tmember functions.\n+\n 2016-08-25  Marek Polacek  <polacek@redhat.com>\n \n \t* parser.c (cp_parser_binary_expression): Pass LHS to"}, {"sha": "20689e4dd063aabd1cee9aeebc94b539457f882e", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "patch": "@@ -5186,8 +5186,7 @@ in_class_defaulted_default_constructor (tree t)\n }\n \n /* Returns true iff FN is a user-provided function, i.e. user-declared\n-   and not defaulted at its first declaration; or explicit, private,\n-   protected, or non-const.  */\n+   and not defaulted at its first declaration.  */\n \n bool\n user_provided_p (tree fn)"}, {"sha": "b0f06649c582f9654143efb7f660c92fad74c0b4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "patch": "@@ -21479,7 +21479,8 @@ do_type_instantiation (tree t, tree storage, tsubst_flags_t complain)\n     if (! static_p)\n       for (tmp = TYPE_METHODS (t); tmp; tmp = DECL_CHAIN (tmp))\n \tif (TREE_CODE (tmp) == FUNCTION_DECL\n-\t    && DECL_TEMPLATE_INSTANTIATION (tmp))\n+\t    && DECL_TEMPLATE_INSTANTIATION (tmp)\n+\t    && user_provided_p (tmp))\n \t  instantiate_class_member (tmp, extern_p);\n \n     for (tmp = TYPE_FIELDS (t); tmp; tmp = DECL_CHAIN (tmp))"}, {"sha": "06d607f1a98c529d6464cf5d07b863c3ec988d46", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit11.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit11.C?ref=9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "patch": "@@ -0,0 +1,19 @@\n+// Test that we treat defaulted-in-class members like implicitly declared\n+// members for explicit instantiation.\n+\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T>\n+struct A\n+{\n+  T x;\n+  A() = default;\n+  A(const A &other) = default;\n+  A& operator=(const A&) = default;\n+};\n+\n+template class A<int>;\n+\n+// { dg-final { scan-assembler-not \"_ZN1AIiEC1Ev\" } }\n+// { dg-final { scan-assembler-not \"_ZN1AIiEC1ERKS0_\" } }\n+// { dg-final { scan-assembler-not \"_ZN1AIiEaSERKS0_\" } }"}, {"sha": "5c14c019d88f10c1663956c48f6cfe355544e21f", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit12.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit12.C?ref=9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/57728\n+// { dg-do link { target c++11 } }\n+\n+template<typename T>\n+struct A\n+{\n+  T x;\n+  A() = default;\n+  A(const A &other) = delete;\n+};\n+\n+extern template class A<int>;\n+\n+int main()\n+{\n+  A<int> a;\n+}"}]}