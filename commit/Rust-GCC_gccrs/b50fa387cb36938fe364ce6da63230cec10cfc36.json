{"sha": "b50fa387cb36938fe364ce6da63230cec10cfc36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUwZmEzODdjYjM2OTM4ZmUzNjRjZTZkYTYzMjMwY2VjMTBjZmMzNg==", "commit": {"author": {"name": "Craig Burley", "email": "burley@gnu.org", "date": "1998-02-22T19:39:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-22T19:39:08Z"}, "message": "expr.c (ffeexpr_token_arguments_): Make sure outer exprstack isn't null.\n\n\t* expr.c (ffeexpr_token_arguments_): Make sure\n\touter exprstack isn't null.\n\nFrom-SVN: r18190", "tree": {"sha": "a74be17cefff3c94c91cfff1320bacb66a9caed5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a74be17cefff3c94c91cfff1320bacb66a9caed5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b50fa387cb36938fe364ce6da63230cec10cfc36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b50fa387cb36938fe364ce6da63230cec10cfc36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b50fa387cb36938fe364ce6da63230cec10cfc36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b50fa387cb36938fe364ce6da63230cec10cfc36/comments", "author": null, "committer": null, "parents": [{"sha": "a52ad720f49dfcad889aa34f6c0df5523a2de8a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a52ad720f49dfcad889aa34f6c0df5523a2de8a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a52ad720f49dfcad889aa34f6c0df5523a2de8a6"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "94031d87ed3060bb5d2522a66c980bf381cd6bb0", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b50fa387cb36938fe364ce6da63230cec10cfc36/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b50fa387cb36938fe364ce6da63230cec10cfc36/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=b50fa387cb36938fe364ce6da63230cec10cfc36", "patch": "@@ -1,3 +1,8 @@\n+Fri Feb 20 12:45:53 1998  Craig Burley  <burley@gnu.org>\n+\n+\t* expr.c (ffeexpr_token_arguments_): Make sure\n+\touter exprstack isn't null.\n+\n Fri Feb 20 10:11:20 1998  Craig Burley  <burley@gnu.org>\n \n \t* Make-lang.in (f77.install-info): Fix typo in script."}, {"sha": "8dbab2f3099a627883ad6c71223d9c21b4ef27e5", "filename": "gcc/f/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b50fa387cb36938fe364ce6da63230cec10cfc36/gcc%2Ff%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b50fa387cb36938fe364ce6da63230cec10cfc36/gcc%2Ff%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fexpr.c?ref=b50fa387cb36938fe364ce6da63230cec10cfc36", "patch": "@@ -18540,6 +18540,7 @@ ffeexpr_token_arguments_ (ffelexToken ft, ffebld expr, ffelexToken t)\n \t     only if next token isn't the close-paren for REAL(me).  */\n \n \t  if ((ffeexpr_stack_->previous != NULL)\n+\t      && (ffeexpr_stack_->previous->exprstack != NULL)\n \t      && (ffeexpr_stack_->previous->exprstack->type == FFEEXPR_exprtypeOPERAND_)\n \t      && ((reduced = ffeexpr_stack_->previous->exprstack->u.operand) != NULL)\n \t      && (ffebld_op (reduced) == FFEBLD_opSYMTER)"}, {"sha": "2853dfd13d1551a40aa9802f9cb4620aec5bc510", "filename": "gcc/f/news.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b50fa387cb36938fe364ce6da63230cec10cfc36/gcc%2Ff%2Fnews.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b50fa387cb36938fe364ce6da63230cec10cfc36/gcc%2Ff%2Fnews.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fnews.texi?ref=b50fa387cb36938fe364ce6da63230cec10cfc36", "patch": "@@ -27,6 +27,10 @@ involve a combination of these elements.\n @heading In 0.5.22:\n @itemize @bullet\n @item\n+Fix a compiler crash on statements such as\n+@samp{PRINT *, (REAL(Z(I)),I=1,2)}, where\n+@samp{Z} is @code{DOUBLE COMPLEX}.\n+\n @item\n Improve diagnostic messages from @code{libf2c}\n so it is more likely that the printing of the\n@@ -47,6 +51,7 @@ is a constant.\n This provides a cleaner run-time diagnostic as provided\n by @code{libf2c} for statements like @samp{PRINT '(I1', 42}.\n \n+@item\n Fix @code{SIGNAL} intrinsic so it offers portable\n support for 64-bit systems (such as Digital Alphas\n running GNU/Linux)."}]}