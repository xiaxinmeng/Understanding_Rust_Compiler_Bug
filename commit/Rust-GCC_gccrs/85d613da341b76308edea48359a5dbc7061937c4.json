{"sha": "85d613da341b76308edea48359a5dbc7061937c4", "node_id": "C_kwDOANBUbNoAKDg1ZDYxM2RhMzQxYjc2MzA4ZWRlYTQ4MzU5YTVkYmM3MDYxOTM3YzQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-06-21T15:51:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-06-21T15:51:08Z"}, "message": "libgomp: Fix up target-31.c test [PR106045]\n\nThe i variable is used inside of the parallel in:\n      #pragma omp simd safelen(32) private (v)\n      for (i = 0; i < 64; i++)\n        {\n          v = 3 * i;\n          ll[i] = u1 + v * u2[0] + u2[1] + x + y[0] + y[1] + v + h[0] + u3[i];\n        }\nwhere i is predetermined linear (so while inside of the body\nit is safe, private per SIMD lane var) the final value is written to\nthe shared variable, and in:\n      for (i = 0; i < 64; i++)\n        if (ll[i] != u1 + 3 * i * u2[0] + u2[1] + x + y[0] + y[1] + 3 * i + 13 + 14 + i)\n          #pragma omp atomic write\n            err = 1;\nwhich is a normal loop and so it isn't in any way privatized there.\nSo we have a data race, fixed by adding private (i) clause to the\nparallel.\n\n2022-06-21  Jakub Jelinek  <jakub@redhat.com>\n\t    Paul Iannetta  <piannetta@kalrayinc.com>\n\n\tPR libgomp/106045\n\t* testsuite/libgomp.c/target-31.c: Add private (i) clause.", "tree": {"sha": "1331a2c23dbd117d86110acbd4b1f0b7d85bb556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1331a2c23dbd117d86110acbd4b1f0b7d85bb556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85d613da341b76308edea48359a5dbc7061937c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d613da341b76308edea48359a5dbc7061937c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d613da341b76308edea48359a5dbc7061937c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d613da341b76308edea48359a5dbc7061937c4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7905a9ac26707ed6ac49e40e35a9c8755c6574e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7905a9ac26707ed6ac49e40e35a9c8755c6574e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7905a9ac26707ed6ac49e40e35a9c8755c6574e3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1123b7ea56105f3ab0bc687dddb682cc8d876518", "filename": "libgomp/testsuite/libgomp.c/target-31.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d613da341b76308edea48359a5dbc7061937c4/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d613da341b76308edea48359a5dbc7061937c4/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-31.c?ref=85d613da341b76308edea48359a5dbc7061937c4", "patch": "@@ -76,7 +76,7 @@ main ()\n       m[1] += 3 * b;\n     }\n     use (&a, &b, &c, &d, e, f, g, h);\n-    #pragma omp parallel firstprivate (u1, u2)\n+    #pragma omp parallel firstprivate (u1, u2) private (i)\n     {\n       int w = omp_get_thread_num ();\n       int x = 19;"}]}