{"sha": "528d9c63e7e9f21c50f7dc2161e8e22a2665ba49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI4ZDljNjNlN2U5ZjIxYzUwZjdkYzIxNjFlOGUyMmEyNjY1YmE0OQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2004-11-25T05:14:25Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2004-11-25T05:14:25Z"}, "message": "verify-impl.c (vfy_push_type): Removed bogus \"return\".\n\n\t* verify-impl.c (vfy_push_type): Removed bogus \"return\".\n\t(initialize_stack): Use vfy_alloc and vfy_free.\n\t(verify_instructions_0): Likewise.\n\nFrom-SVN: r91276", "tree": {"sha": "59ffd8370684bd2356e37f7b80a95402b8635c06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59ffd8370684bd2356e37f7b80a95402b8635c06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/528d9c63e7e9f21c50f7dc2161e8e22a2665ba49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/528d9c63e7e9f21c50f7dc2161e8e22a2665ba49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/528d9c63e7e9f21c50f7dc2161e8e22a2665ba49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/528d9c63e7e9f21c50f7dc2161e8e22a2665ba49/comments", "author": null, "committer": null, "parents": [{"sha": "91ff9507732360d4706492d86452a6e8103860ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91ff9507732360d4706492d86452a6e8103860ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91ff9507732360d4706492d86452a6e8103860ef"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "921aeb714c8ff25a3b18c7d4790ca5f613ae01a9", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528d9c63e7e9f21c50f7dc2161e8e22a2665ba49/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528d9c63e7e9f21c50f7dc2161e8e22a2665ba49/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=528d9c63e7e9f21c50f7dc2161e8e22a2665ba49", "patch": "@@ -1,5 +1,9 @@\n 2004-11-24  Tom Tromey  <tromey@redhat.com>\n \n+\t* verify-impl.c (vfy_push_type): Removed bogus \"return\".\n+\t(initialize_stack): Use vfy_alloc and vfy_free.\n+\t(verify_instructions_0): Likewise.\n+\n \t* Merged gcj-abi-2-dev-branch to trunk.\n \n 2004-11-24  Andrew Haley  <aph@redhat.com>"}, {"sha": "f48797892b2a1c553abe086b57acd69c1d8a7f48", "filename": "gcc/java/verify-impl.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528d9c63e7e9f21c50f7dc2161e8e22a2665ba49/gcc%2Fjava%2Fverify-impl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528d9c63e7e9f21c50f7dc2161e8e22a2665ba49/gcc%2Fjava%2Fverify-impl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify-impl.c?ref=528d9c63e7e9f21c50f7dc2161e8e22a2665ba49", "patch": "@@ -1329,7 +1329,7 @@ static void\n vfy_push_type (type_val tval)\n {\n   type t = make_type (tval);\n-  return vfy_push_type_t (t);\n+  vfy_push_type_t (t);\n }\n \n #define push_type vfy_push_type\n@@ -2267,7 +2267,7 @@ initialize_stack (void)\n   /* We have to handle wide arguments specially here.  */\n   arg_count = vfy_count_arguments (vfy_get_signature (vfr->current_method));\n   {\n-    type arg_types[arg_count];\n+    type *arg_types = (type *) vfy_alloc (arg_count * sizeof (type));\n     compute_argument_types (vfy_get_signature (vfr->current_method), arg_types);\n     for (i = 0; i < arg_count; ++i)\n       {\n@@ -2276,6 +2276,7 @@ initialize_stack (void)\n \tif (type_iswide (&arg_types[i]))\n \t  ++var;\n       }\n+    vfy_free (arg_types);\n   }\n \n   return is_init;\n@@ -3037,7 +3038,7 @@ verify_instructions_0 (void)\n \t    arg_count = vfy_count_arguments (method_signature);\n             {\n \t      /* Pop arguments and check types.  */\n-\t      type arg_types[arg_count];\n+\t      type *arg_types = (type *) vfy_alloc (arg_count * sizeof (type));\n \n \t      compute_argument_types (method_signature, arg_types);\n \t      for (i = arg_count - 1; i >= 0; --i)\n@@ -3047,6 +3048,8 @@ verify_instructions_0 (void)\n \t\t  nargs -= type_depth (&arg_types[i]);\n \t\t  pop_init_ref_t (arg_types[i]);\n \t\t}\n+\n+\t      vfy_free (arg_types);\n \t    }\n \n \t    if (opcode == op_invokeinterface"}]}