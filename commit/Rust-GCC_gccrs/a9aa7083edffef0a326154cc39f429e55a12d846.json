{"sha": "a9aa7083edffef0a326154cc39f429e55a12d846", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlhYTcwODNlZGZmZWYwYTMyNjE1NGNjMzlmNDI5ZTU1YTEyZDg0Ng==", "commit": {"author": {"name": "Jerry Quinn", "email": "jlquinn@optonline.net", "date": "2003-03-06T22:37:01Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-03-06T22:37:01Z"}, "message": "ios_base_storage.cc (test02): Set exception mask.\n\n\n2003-03-06  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* testsuite/27_io/ios_base_storage.cc (test02): Set exception\n\tmask.  Test setting small-numbered pword and iword slots.  Test\n\tbehavior at limit of numeric_limits::max.  Check that values are\n\tstill good after failures.\n\nFrom-SVN: r63908", "tree": {"sha": "0ab56d29605ebe4694ab53b6a737221ff326a83d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab56d29605ebe4694ab53b6a737221ff326a83d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9aa7083edffef0a326154cc39f429e55a12d846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9aa7083edffef0a326154cc39f429e55a12d846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9aa7083edffef0a326154cc39f429e55a12d846", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9aa7083edffef0a326154cc39f429e55a12d846/comments", "author": {"login": "jlquinn", "id": 826841, "node_id": "MDQ6VXNlcjgyNjg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/826841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlquinn", "html_url": "https://github.com/jlquinn", "followers_url": "https://api.github.com/users/jlquinn/followers", "following_url": "https://api.github.com/users/jlquinn/following{/other_user}", "gists_url": "https://api.github.com/users/jlquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlquinn/subscriptions", "organizations_url": "https://api.github.com/users/jlquinn/orgs", "repos_url": "https://api.github.com/users/jlquinn/repos", "events_url": "https://api.github.com/users/jlquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/jlquinn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "37f5242b58f51568fcb60fd2fb35ca61c92b2305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37f5242b58f51568fcb60fd2fb35ca61c92b2305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37f5242b58f51568fcb60fd2fb35ca61c92b2305"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "f0bd09abe6ee91ec422120b3080ba90004ab8f22", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9aa7083edffef0a326154cc39f429e55a12d846/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9aa7083edffef0a326154cc39f429e55a12d846/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a9aa7083edffef0a326154cc39f429e55a12d846", "patch": "@@ -1,3 +1,10 @@\n+2003-03-06  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* testsuite/27_io/ios_base_storage.cc (test02): Set exception\n+\tmask.  Test setting small-numbered pword and iword slots.  Test\n+\tbehavior at limit of numeric_limits::max.  Check that values are\n+\tstill good after failures.\n+\n 2003-03-06  Jerry Quinn  <jlquinn@optonline.net>\n \n \t* src/ios.cc (ios_base::_M_init): Remove _M_word_size."}, {"sha": "7033466e69128198fc9f2e51a79cdb71960f8645", "filename": "libstdc++-v3/testsuite/27_io/ios_base_storage.cc", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9aa7083edffef0a326154cc39f429e55a12d846/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_storage.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9aa7083edffef0a326154cc39f429e55a12d846/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_storage.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_storage.cc?ref=a9aa7083edffef0a326154cc39f429e55a12d846", "patch": "@@ -55,10 +55,15 @@ void test02()\n   std::stringbuf        strbuf;\n   std::ios              ios(&strbuf);\n \n+  ios.exceptions(std::ios::badbit);\n+\n   long l = 0;\n   void* v = 0;\n \n   // pword\n+  ios.pword(1) = v;\n+  VERIFY( ios.pword(1) == v );\n+  \n   try \n     {\n       v = ios.pword(max);\n@@ -74,7 +79,29 @@ void test02()\n     }\n   VERIFY( v == 0 );\n \n+  VERIFY( ios.pword(1) == v );\n+  \n+  // max is different code path from max-1\n+  v = &test;\n+  try \n+    {\n+      v = ios.pword(std::numeric_limits<int>::max());\n+    }\n+  catch(std::ios_base::failure& obj)\n+    {\n+      // Ok.\n+      VERIFY( ios.bad() );\n+    }\n+  catch(...)\n+    {\n+      VERIFY( test = false );\n+    }\n+  VERIFY( v == &test );\n+\n   // iword\n+  ios.iword(1) = 1;\n+  VERIFY( ios.iword(1) == 1 );\n+  \n   try \n     {\n       l = ios.iword(max);\n@@ -89,6 +116,26 @@ void test02()\n       VERIFY( test = false );\n     }\n   VERIFY( l == 0 );\n+\n+  VERIFY( ios.iword(1) == 1 );\n+\n+  // max is different code path from max-1\n+  l = 1;\n+  try \n+    {\n+      l = ios.iword(std::numeric_limits<int>::max());\n+    }\n+  catch(std::ios_base::failure& obj)\n+    {\n+      // Ok.\n+      VERIFY( ios.bad() );\n+    }\n+  catch(...)\n+    {\n+      VERIFY( test = false );\n+    }\n+  VERIFY( l == 1 );\n+\n }\n \n class derived : public std::ios_base"}]}