{"sha": "750e83485a2a2e2a6b09368000961827d0f7b8a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUwZTgzNDg1YTJhMmUyYTZiMDkzNjgwMDA5NjE4MjdkMGY3YjhhOA==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "1997-10-28T19:02:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-28T19:02:23Z"}, "message": "fold-const.c (fold): For ((a * C1) / C3) or (((a * C1) + C2) / C3) optimizations...\n\n        * fold-const.c (fold): For ((a * C1) / C3) or (((a * C1) + C2) / C3)\n        optimizations, look inside dividend to determine if the expression\n        can be simplified by using EXACT_DIV_EXPR.\n\nFrom-SVN: r16216", "tree": {"sha": "b9bcdf0a69d79c64253d4f4fd74b9910a63c10c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9bcdf0a69d79c64253d4f4fd74b9910a63c10c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/750e83485a2a2e2a6b09368000961827d0f7b8a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750e83485a2a2e2a6b09368000961827d0f7b8a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/750e83485a2a2e2a6b09368000961827d0f7b8a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750e83485a2a2e2a6b09368000961827d0f7b8a8/comments", "author": null, "committer": null, "parents": [{"sha": "ede199329090ba13ce5679dbf99732f2727f8ee9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ede199329090ba13ce5679dbf99732f2727f8ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ede199329090ba13ce5679dbf99732f2727f8ee9"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "0b3f40f3f6e8ae9306cefffa80f12cd03fe63bd9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750e83485a2a2e2a6b09368000961827d0f7b8a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750e83485a2a2e2a6b09368000961827d0f7b8a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=750e83485a2a2e2a6b09368000961827d0f7b8a8", "patch": "@@ -1,3 +1,9 @@\n+Tue Oct 28 11:58:40 1997  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* fold-const.c (fold): For ((a * C1) / C3) or (((a * C1) + C2) / C3)\n+\toptimizations, look inside dividend to determine if the expression\n+\tcan be simplified by using EXACT_DIV_EXPR.\n+\n Tue Oct 28 10:19:01 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \tFrom Brendan:"}, {"sha": "da18997acc335751d216c4975a1ef3476a113852", "filename": "gcc/fold-const.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750e83485a2a2e2a6b09368000961827d0f7b8a8/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750e83485a2a2e2a6b09368000961827d0f7b8a8/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=750e83485a2a2e2a6b09368000961827d0f7b8a8", "patch": "@@ -4655,6 +4655,37 @@ fold (expr)\n \n \t  STRIP_NOPS (xarg0);\n \n+\t  /* Look inside the dividend and simplify using EXACT_DIV_EXPR\n+\t     if possible.  */\n+\t  if (TREE_CODE (xarg0) == MULT_EXPR\n+\t      && multiple_of_p (type, TREE_OPERAND (xarg0, 0), arg1))\n+\t    {\n+\t      tree t;\n+\n+\t      t = fold (build (MULT_EXPR, type,\n+\t\t\t       fold (build (EXACT_DIV_EXPR, type,\n+\t\t\t\t\t    TREE_OPERAND (xarg0, 0), arg1)),\n+\t\t\t       TREE_OPERAND (xarg0, 1)));\n+\t      if (have_save_expr)\n+\t\tt = save_expr (t);\n+\t      return t;\n+\n+\t    }\n+\n+\t  if (TREE_CODE (xarg0) == MULT_EXPR\n+\t      && multiple_of_p (type, TREE_OPERAND (xarg0, 1), arg1))\n+\t    {\n+\t      tree t;\n+\n+\t      t = fold (build (MULT_EXPR, type,\n+\t\t\t       fold (build (EXACT_DIV_EXPR, type,\n+\t\t\t\t\t    TREE_OPERAND (xarg0, 1), arg1)),\n+\t\t\t       TREE_OPERAND (xarg0, 0)));\n+\t      if (have_save_expr)\n+\t\tt = save_expr (t);\n+\t      return t;\n+\t    }\n+\n \t  if (TREE_CODE (xarg0) == PLUS_EXPR\n \t      && TREE_CODE (TREE_OPERAND (xarg0, 1)) == INTEGER_CST)\n \t    c2 = TREE_OPERAND (xarg0, 1), xarg0 = TREE_OPERAND (xarg0, 0);"}]}