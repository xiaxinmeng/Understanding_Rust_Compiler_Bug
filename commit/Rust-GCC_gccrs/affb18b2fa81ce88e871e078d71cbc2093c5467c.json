{"sha": "affb18b2fa81ce88e871e078d71cbc2093c5467c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZmYjE4YjJmYTgxY2U4OGU4NzFlMDc4ZDcxY2JjMjA5M2M1NDY3Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-03-24T15:25:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-03-24T15:25:37Z"}, "message": "mt_allocator.h (__mt_alloc<>::allocate, [...]): Avoid redundant conditionals.\n\n2004-03-24  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/ext/mt_allocator.h (__mt_alloc<>::allocate,\n\t__mt_alloc<>::deallocate): Avoid redundant conditionals.\n\nFrom-SVN: r79917", "tree": {"sha": "d14f47a24e78327d76fcac4f374107e8f8d6d95c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d14f47a24e78327d76fcac4f374107e8f8d6d95c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/affb18b2fa81ce88e871e078d71cbc2093c5467c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/affb18b2fa81ce88e871e078d71cbc2093c5467c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/affb18b2fa81ce88e871e078d71cbc2093c5467c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/affb18b2fa81ce88e871e078d71cbc2093c5467c/comments", "author": null, "committer": null, "parents": [{"sha": "398a94926cdd9adf3c14eff4b757795ca53e2af9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/398a94926cdd9adf3c14eff4b757795ca53e2af9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/398a94926cdd9adf3c14eff4b757795ca53e2af9"}], "stats": {"total": 62, "additions": 15, "deletions": 47}, "files": [{"sha": "9a3980f6b35d9475e14ce0d19d5ea9c76c7e1675", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affb18b2fa81ce88e871e078d71cbc2093c5467c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affb18b2fa81ce88e871e078d71cbc2093c5467c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=affb18b2fa81ce88e871e078d71cbc2093c5467c", "patch": "@@ -1,3 +1,8 @@\n+2004-03-24  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/ext/mt_allocator.h (__mt_alloc<>::allocate,\n+\t__mt_alloc<>::deallocate): Avoid redundant conditionals.\n+\n 2004-03-23  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.h: Tweaks for 80 column."}, {"sha": "ce080c797a22fe338b12b2f5ee7c121c7d25696c", "filename": "libstdc++-v3/include/ext/mt_allocator.h", "status": "modified", "additions": 10, "deletions": 47, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affb18b2fa81ce88e871e078d71cbc2093c5467c/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affb18b2fa81ce88e871e078d71cbc2093c5467c/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h?ref=affb18b2fa81ce88e871e078d71cbc2093c5467c", "patch": "@@ -353,16 +353,8 @@ namespace __gnu_cxx\n \t\t      tmp = __bin.first[0]->next;\n \t\t      block = __bin.first[0];\n \n-\t\t      if (__bin.first[__thread_id] == NULL)\n-\t\t\t{\n-\t\t\t  __bin.first[__thread_id] = block;\n-\t\t\t  block->next = NULL;\n-\t\t\t}\n-\t\t      else\n-\t\t\t{\n-\t\t\t  block->next = __bin.first[__thread_id];\n-\t\t\t  __bin.first[__thread_id] = block;\n-\t\t\t}\n+\t\t      block->next = __bin.first[__thread_id];\n+\t\t      __bin.first[__thread_id] = block;\t\t      \n \t\t      \n \t\t      block->thread_id = __thread_id;\n \t\t      __bin.free[__thread_id]++;\n@@ -466,16 +458,8 @@ namespace __gnu_cxx\n \t      while (remove > 0)\n \t\t{\n \t\t  tmp = __bin.first[thread_id]->next;\n-\t\t  if (__bin.first[0] == NULL)\n-\t\t    {\n-\t\t      __bin.first[0] = __bin.first[thread_id];\n-\t\t      __bin.first[0]->next = NULL;\n-\t\t    }\n-\t\t  else\n-\t\t    {\n-\t\t      __bin.first[thread_id]->next = __bin.first[0];\n-\t\t      __bin.first[0] = __bin.first[thread_id];\n-\t\t    }\n+\t\t  __bin.first[thread_id]->next = __bin.first[0];\n+\t\t  __bin.first[0] = __bin.first[thread_id];\n \t\t  \n \t\t  __bin.first[thread_id] = tmp;\n \t\t  __bin.free[thread_id]--;\n@@ -486,41 +470,20 @@ namespace __gnu_cxx\n \t  \n \t  // Return this block to our list and update counters and\n \t  // owner id as needed.\n-\t  if (__bin.first[thread_id] == NULL)\n-\t    {\n-\t      __bin.first[thread_id] = block;\n-\t      block->next = NULL;\n-\t    }\n-\t  else\n-\t    {\n-\t      block->next = __bin.first[thread_id];\n-\t      __bin.first[thread_id] = block;\n-\t    }\n+\t  block->next = __bin.first[thread_id];\n+\t  __bin.first[thread_id] = block;\n \t  \n \t  __bin.free[thread_id]++;\n \t  \n-\t  if (thread_id == block->thread_id)\n-\t    __bin.used[thread_id]--;\n-\t  else\n-\t    {\n-\t      __bin.used[block->thread_id]--;\n-\t      block->thread_id = thread_id;\n-\t    }\n+\t  __bin.used[block->thread_id]--;\n+\t  block->thread_id = thread_id;\n \t}\n       else\n #endif\n \t{\n \t  // Single threaded application - return to global pool.\n-\t  if (__bin.first[0] == NULL)\n-\t    {\n-\t      __bin.first[0] = block;\n-\t      block->next = NULL;\n-\t    }\n-\t  else\n-\t    {\n-\t      block->next = __bin.first[0];\n-\t      __bin.first[0] = block;\n-\t    }\n+\t  block->next = __bin.first[0];\n+\t  __bin.first[0] = block;\n \t}\n     }\n   "}]}