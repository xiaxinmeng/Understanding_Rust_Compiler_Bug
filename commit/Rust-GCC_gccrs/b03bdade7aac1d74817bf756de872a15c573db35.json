{"sha": "b03bdade7aac1d74817bf756de872a15c573db35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAzYmRhZGU3YWFjMWQ3NDgxN2JmNzU2ZGU4NzJhMTVjNTczZGIzNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2011-03-14T13:46:12Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-03-14T13:46:12Z"}, "message": "re PR rtl-optimization/47166 (SpecCpu2000 Ammp segfaults for ARM with -O3 -mthumb)\n\ngcc/testsuite/\n\tPR rtl-optimization/47166\n\t* gcc.c-torture/execute/postmod-1.c: New test.\n\nFrom-SVN: r170939", "tree": {"sha": "7cfc412319b9f818ecd117a6dcf007d3d4ed3ac4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cfc412319b9f818ecd117a6dcf007d3d4ed3ac4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b03bdade7aac1d74817bf756de872a15c573db35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03bdade7aac1d74817bf756de872a15c573db35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b03bdade7aac1d74817bf756de872a15c573db35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03bdade7aac1d74817bf756de872a15c573db35/comments", "author": null, "committer": null, "parents": [{"sha": "6bd73dd88994055cdddca4225a5305f7a9282df9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd73dd88994055cdddca4225a5305f7a9282df9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bd73dd88994055cdddca4225a5305f7a9282df9"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "67ba0710e27023b9164affdad5ab10be8a6df963", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03bdade7aac1d74817bf756de872a15c573db35/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03bdade7aac1d74817bf756de872a15c573db35/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b03bdade7aac1d74817bf756de872a15c573db35", "patch": "@@ -1,3 +1,8 @@\n+2011-03-14  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\tPR rtl-optimization/47166\n+\t* gcc.c-torture/execute/postmod-1.c: New test.\n+\n 2011-03-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/48098"}, {"sha": "b56454f4170262dd2746a347080a0f5a78fad126", "filename": "gcc/testsuite/gcc.c-torture/execute/postmod-1.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03bdade7aac1d74817bf756de872a15c573db35/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpostmod-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03bdade7aac1d74817bf756de872a15c573db35/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpostmod-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpostmod-1.c?ref=b03bdade7aac1d74817bf756de872a15c573db35", "patch": "@@ -0,0 +1,62 @@\n+#define DECLARE_ARRAY(A) array##A[0x10]\n+#define DECLARE_COUNTER(A) counter##A = 0\n+#define DECLARE_POINTER(A) *pointer##A = array##A + x\n+/* Create a loop that allows post-modification of pointerA, followed by\n+   a use of the post-modified address.  */\n+#define BEFORE(A) counter##A += *pointer##A, pointer##A += 3\n+#define AFTER(A) counter##A += pointer##A[x]\n+\n+/* Set up the arrays so that one iteration of the loop sets the counter\n+   to 3.0f.  */\n+#define INIT_ARRAY(A) array##A[1] = 1.0f, array##A[5] = 2.0f\n+\n+/* Check that the loop worked correctly for all values.  */\n+#define CHECK_ARRAY(A) exit_code |= (counter##A != 3.0f)\n+\n+/* Having 6 copies triggered the bug for ARM and Thumb.  */\n+#define MANY(A) A (0), A (1), A (2), A (3), A (4), A (5)\n+\n+/* Each addendA should be allocated a register.  */\n+#define INIT_VOLATILE(A) addend##A = vol\n+#define ADD_VOLATILE(A) vol += addend##A\n+\n+/* Having 5 copies triggered the bug for ARM and Thumb.  */\n+#define MANY2(A) A (0), A (1), A (2), A (3), A (4)\n+\n+float MANY (DECLARE_ARRAY);\n+float MANY (DECLARE_COUNTER);\n+\n+volatile int stop = 1;\n+volatile int vol;\n+\n+void __attribute__((noinline))\n+foo (int x)\n+{\n+  float MANY (DECLARE_POINTER);\n+  int i;\n+\n+  do\n+    {\n+      MANY (BEFORE);\n+      MANY (AFTER);\n+      /* Create an inner loop that should ensure the code above\n+\t has registers free for reload inheritance.  */\n+      {\n+\tint MANY2 (INIT_VOLATILE);\n+\tfor (i = 0; i < 10; i++)\n+\t  MANY2 (ADD_VOLATILE);\n+      }\n+    }\n+  while (!stop);\n+}\n+\n+int\n+main (void)\n+{\n+  int exit_code = 0;\n+\n+  MANY (INIT_ARRAY);\n+  foo (1);\n+  MANY (CHECK_ARRAY);\n+  return exit_code;\n+}"}]}