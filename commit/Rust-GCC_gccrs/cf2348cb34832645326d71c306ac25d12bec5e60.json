{"sha": "cf2348cb34832645326d71c306ac25d12bec5e60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YyMzQ4Y2IzNDgzMjY0NTMyNmQ3MWMzMDZhYzI1ZDEyYmVjNWU2MA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-11-22T16:11:27Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-11-22T16:11:27Z"}, "message": "i386.c (classify_argument): Pass __float128 in memory.\n\n\t* i386.c (classify_argument): Pass __float128 in memory.\n\t(ix86_return_in_memory): Likewise.\n\t(ix86_libcall_value): Likewsie.\n\nFrom-SVN: r73842", "tree": {"sha": "9df700f9209c594ee17de6bccec1e05c2c157201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9df700f9209c594ee17de6bccec1e05c2c157201"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf2348cb34832645326d71c306ac25d12bec5e60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf2348cb34832645326d71c306ac25d12bec5e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf2348cb34832645326d71c306ac25d12bec5e60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf2348cb34832645326d71c306ac25d12bec5e60/comments", "author": null, "committer": null, "parents": [{"sha": "dd4c376388b556043897a092d6ec212418d7b685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4c376388b556043897a092d6ec212418d7b685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd4c376388b556043897a092d6ec212418d7b685"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "386148447601c680ee4b1a0e0a7937204cac1938", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf2348cb34832645326d71c306ac25d12bec5e60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf2348cb34832645326d71c306ac25d12bec5e60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf2348cb34832645326d71c306ac25d12bec5e60", "patch": "@@ -1,3 +1,9 @@\n+2003-11-22  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (classify_argument): Pass __float128 in memory.\n+\t(ix86_return_in_memory): Likewise.\n+\t(ix86_libcall_value): Likewsie.\n+\n 2003-11-22  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (dosize): Convert to ISO-C."}, {"sha": "240e46a32002718b197d822ed444908457f48764", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf2348cb34832645326d71c306ac25d12bec5e60/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf2348cb34832645326d71c306ac25d12bec5e60/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=cf2348cb34832645326d71c306ac25d12bec5e60", "patch": "@@ -2182,7 +2182,6 @@ classify_argument (enum machine_mode mode, tree type,\n       return 1;\n     case CDImode:\n     case TImode:\n-    case TCmode:\n       classes[0] = classes[1] = X86_64_INTEGER_CLASS;\n       return 2;\n     case CTImode:\n@@ -2203,9 +2202,8 @@ classify_argument (enum machine_mode mode, tree type,\n       classes[1] = X86_64_X87UP_CLASS;\n       return 2;\n     case TFmode:\n-      classes[0] = X86_64_INTEGER_CLASS;\n-      classes[1] = X86_64_INTEGER_CLASS;\n-      return 2;\n+    case TCmode:\n+      return 0;\n     case XCmode:\n       classes[0] = X86_64_X87_CLASS;\n       classes[1] = X86_64_X87UP_CLASS;\n@@ -2784,7 +2782,7 @@ ix86_return_in_memory (tree type)\n \t}\n     }\n \n-  if (mode == TFmode || mode == XFmode)\n+  if (mode == XFmode)\n     return 0;\n \n   if (size > 12)\n@@ -2810,18 +2808,6 @@ ix86_libcall_value (enum machine_mode mode)\n \tcase XCmode:\n \t  return gen_rtx_REG (mode, FIRST_FLOAT_REG);\n \tcase TFmode:\n-\t  {\n-\t    rtx ret = gen_rtx_PARALLEL (mode, rtvec_alloc (2));\n-\t    XVECEXP (ret, 0, 0) = gen_rtx_EXPR_LIST\n-\t       (VOIDmode,\n-\t\tgen_rtx_REG (DImode, x86_64_int_parameter_registers [0]),\n-\t\t\t     const0_rtx);\n-\t    XVECEXP (ret, 0, 1) = gen_rtx_EXPR_LIST\n-\t       (VOIDmode,\n-\t\tgen_rtx_REG (DImode, x86_64_int_parameter_registers [1]),\n-\t\t\t     GEN_INT (64));\n-\t    return ret;\n-\t  }\n \tcase TCmode:\n \t  return NULL;\n \tdefault:"}]}