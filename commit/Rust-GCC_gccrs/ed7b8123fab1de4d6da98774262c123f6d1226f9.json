{"sha": "ed7b8123fab1de4d6da98774262c123f6d1226f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ3YjgxMjNmYWIxZGU0ZDZkYTk4Nzc0MjYyYzEyM2Y2ZDEyMjZmOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-06-20T08:06:33Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-06-20T08:06:33Z"}, "message": "[3/n] PR85694: Fix dummy assignment handling in vectorizable_call\n\nvectorizable_call stubs out the original scalar statement with\na dummy assignment to the same lhs, so that we don't leave any bogus\nscalar calls around.  If the call is actually a pattern statement,\nthe code rightly took the lhs of the original bb statement:\n\n  if (is_pattern_stmt_p (stmt_info))\n    lhs = gimple_call_lhs (STMT_VINFO_RELATED_STMT (stmt_info));\n  else\n    lhs = gimple_call_lhs (stmt);\n\nBut it then associated the new statement with the stmt_vec_info of the\npattern statement rather than the bb statement, which meant we had two\nstmt_vec_infos assigning to the same lhs.  This seems to be latent at\nthe moment but caused problems further into the series.\n\n2018-06-20  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vect-stmts.c (vectorizable_call): Make sure that we\n\tuse the stmt_vec_info of the original bb statement for the\n\tnew zero assignment, even if the call is part of a pattern.\n\nFrom-SVN: r261786", "tree": {"sha": "f0439f36d8ce7061d229946bd7478130edc6aaee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0439f36d8ce7061d229946bd7478130edc6aaee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed7b8123fab1de4d6da98774262c123f6d1226f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed7b8123fab1de4d6da98774262c123f6d1226f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed7b8123fab1de4d6da98774262c123f6d1226f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed7b8123fab1de4d6da98774262c123f6d1226f9/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3947d809d75c6bc47e600ce490c238006c2de2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3947d809d75c6bc47e600ce490c238006c2de2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3947d809d75c6bc47e600ce490c238006c2de2b"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "e55c67b9e141663af78a6edd2e98fa066f3ebbb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed7b8123fab1de4d6da98774262c123f6d1226f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed7b8123fab1de4d6da98774262c123f6d1226f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed7b8123fab1de4d6da98774262c123f6d1226f9", "patch": "@@ -1,3 +1,9 @@\n+2018-06-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-stmts.c (vectorizable_call): Make sure that we\n+\tuse the stmt_vec_info of the original bb statement for the\n+\tnew zero assignment, even if the call is part of a pattern.\n+\n 2018-06-20  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vectorizer.h (_stmt_vec_info): Note above pattern_def_seq"}, {"sha": "1181bc9d3dadfcf1ef01089f6da2abb4315829b3", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed7b8123fab1de4d6da98774262c123f6d1226f9/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed7b8123fab1de4d6da98774262c123f6d1226f9/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=ed7b8123fab1de4d6da98774262c123f6d1226f9", "patch": "@@ -3605,13 +3605,12 @@ vectorizable_call (gimple *gs, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \n   type = TREE_TYPE (scalar_dest);\n   if (is_pattern_stmt_p (stmt_info))\n-    lhs = gimple_call_lhs (STMT_VINFO_RELATED_STMT (stmt_info));\n-  else\n-    lhs = gimple_call_lhs (stmt);\n+    stmt_info = vinfo_for_stmt (STMT_VINFO_RELATED_STMT (stmt_info));\n+  lhs = gimple_get_lhs (stmt_info->stmt);\n \n   new_stmt = gimple_build_assign (lhs, build_zero_cst (type));\n   set_vinfo_for_stmt (new_stmt, stmt_info);\n-  set_vinfo_for_stmt (stmt, NULL);\n+  set_vinfo_for_stmt (stmt_info->stmt, NULL);\n   STMT_VINFO_STMT (stmt_info) = new_stmt;\n   gsi_replace (gsi, new_stmt, false);\n "}]}