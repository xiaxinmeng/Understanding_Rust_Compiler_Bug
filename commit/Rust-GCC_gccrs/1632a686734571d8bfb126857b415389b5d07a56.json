{"sha": "1632a686734571d8bfb126857b415389b5d07a56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYzMmE2ODY3MzQ1NzFkOGJmYjEyNjg1N2I0MTUzODliNWQwN2E1Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-09-16T11:47:48Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-09-16T11:47:48Z"}, "message": "gimple-fold.c (can_refer_decl_in_current_unit_p): Do not accept abstract functions; for static functions check the presence of body.\n\n\n\n\t* gimple-fold.c (can_refer_decl_in_current_unit_p): Do not accept\n\tabstract functions; for static functions check the presence\n\tof body.\n\nFrom-SVN: r202626", "tree": {"sha": "057bdf48e7cbcbd0d6da68e1404286f06fab3e77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/057bdf48e7cbcbd0d6da68e1404286f06fab3e77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1632a686734571d8bfb126857b415389b5d07a56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1632a686734571d8bfb126857b415389b5d07a56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1632a686734571d8bfb126857b415389b5d07a56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1632a686734571d8bfb126857b415389b5d07a56/comments", "author": null, "committer": null, "parents": [{"sha": "828e70c1d7bb5c849a2df44aa832793c71833058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/828e70c1d7bb5c849a2df44aa832793c71833058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/828e70c1d7bb5c849a2df44aa832793c71833058"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "b9a335adaac85f32892f4670aa090f12dd9fde29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1632a686734571d8bfb126857b415389b5d07a56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1632a686734571d8bfb126857b415389b5d07a56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1632a686734571d8bfb126857b415389b5d07a56", "patch": "@@ -1,3 +1,9 @@\n+2013-09-16  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gimple-fold.c (can_refer_decl_in_current_unit_p): Do not accept\n+\tabstract functions; for static functions check the presence\n+\tof body.\n+\n 2013-09-16  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64-simd-builtins.def (fma): New."}, {"sha": "51713e64655055bf0644576313b01e7a466118eb", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1632a686734571d8bfb126857b415389b5d07a56/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1632a686734571d8bfb126857b415389b5d07a56/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=1632a686734571d8bfb126857b415389b5d07a56", "patch": "@@ -60,6 +60,24 @@ can_refer_decl_in_current_unit_p (tree decl, tree from_decl)\n   struct cgraph_node *node;\n   symtab_node snode;\n \n+  if (DECL_ABSTRACT (decl))\n+    return false;\n+\n+  /* We are concerned only about static/external vars and functions.  */\n+  if ((!TREE_STATIC (decl) && !DECL_EXTERNAL (decl))\n+      || (TREE_CODE (decl) != VAR_DECL && TREE_CODE (decl) != FUNCTION_DECL))\n+    return true;\n+\n+  /* Static objects can be referred only if they was not optimized out yet.  */\n+  if (!TREE_PUBLIC (decl) && !DECL_EXTERNAL (decl))\n+    {\n+      snode = symtab_get_node (decl);\n+      if (!snode)\n+\treturn false;\n+      node = dyn_cast <cgraph_node> (snode);\n+      return !node || !node->global.inlined_to;\n+    }\n+\n   /* We will later output the initializer, so we can refer to it.\n      So we are concerned only when DECL comes from initializer of\n      external var.  */\n@@ -69,10 +87,6 @@ can_refer_decl_in_current_unit_p (tree decl, tree from_decl)\n       || (flag_ltrans\n \t  && symtab_get_node (from_decl)->symbol.in_other_partition))\n     return true;\n-  /* We are concerned only about static/external vars and functions.  */\n-  if ((!TREE_STATIC (decl) && !DECL_EXTERNAL (decl))\n-      || (TREE_CODE (decl) != VAR_DECL && TREE_CODE (decl) != FUNCTION_DECL))\n-    return true;\n   /* We are folding reference from external vtable.  The vtable may reffer\n      to a symbol keyed to other compilation unit.  The other compilation\n      unit may be in separate DSO and the symbol may be hidden.  */"}]}