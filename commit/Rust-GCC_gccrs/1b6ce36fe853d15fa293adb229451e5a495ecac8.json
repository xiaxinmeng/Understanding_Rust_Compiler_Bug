{"sha": "1b6ce36fe853d15fa293adb229451e5a495ecac8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI2Y2UzNmZlODUzZDE1ZmEyOTNhZGIyMjk0NTFlNWE0OTVlY2FjOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-03-02T07:13:55Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-03-02T07:13:55Z"}, "message": "re PR libstdc++/51785 (gets not anymore declared)\n\n2012-03-01  Benjamin Kosnik  <bkoz@redhat.com>\n            Ramana Radhakrishnan <ramana@gcc.gnu.org>\n\n\tPR libstdc++/51785\n\t* acinclude.m4 (GLIBCXX_CHECK_STDIO_PROTO): New.\n\t* configure.ac: Call it.\n\t* configure: Regenerate.\n\t* config.h.in: Same.\n\t* config/os/gnu-linux/os_defines.h: Conditionally undefine\n\t_GLIBCXX_HAVE_GETS.\n\t* include/c_global/cstdio: Conditionally declare deprecated gets.\n\t* include/c_std/cstdio: Same.\n\nCo-Authored-By: Ramana Radhakrishnan <ramana@gcc.gnu.org>\n\nFrom-SVN: r184774", "tree": {"sha": "e985560be9110d458283492f3000892e803d40a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e985560be9110d458283492f3000892e803d40a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b6ce36fe853d15fa293adb229451e5a495ecac8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b6ce36fe853d15fa293adb229451e5a495ecac8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b6ce36fe853d15fa293adb229451e5a495ecac8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b6ce36fe853d15fa293adb229451e5a495ecac8/comments", "author": null, "committer": null, "parents": [{"sha": "bd7a440b017a2f65e1aa7663d75a513a8ae009d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7a440b017a2f65e1aa7663d75a513a8ae009d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd7a440b017a2f65e1aa7663d75a513a8ae009d1"}], "stats": {"total": 118, "additions": 114, "deletions": 4}, "files": [{"sha": "dba9a79bedf1eab441bdd26f55afc33a1a7a9763", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1b6ce36fe853d15fa293adb229451e5a495ecac8", "patch": "@@ -1,3 +1,16 @@\n+2012-03-01  Benjamin Kosnik  <bkoz@redhat.com>\n+            Ramana Radhakrishnan <ramana@gcc.gnu.org>\n+\n+\tPR libstdc++/51785\n+\t* acinclude.m4 (GLIBCXX_CHECK_STDIO_PROTO): New.\n+\t* configure.ac: Call it.\n+\t* configure: Regenerate.\n+\t* config.h.in: Same.\n+\t* config/os/gnu-linux/os_defines.h: Conditionally undefine\n+\t_GLIBCXX_HAVE_GETS.\n+\t* include/c_global/cstdio: Conditionally declare deprecated gets.\n+\t* include/c_std/cstdio: Same.\n+\n 2012-03-01  Michael Spertus  <mike_spertus@symantec.com>\n \n \t* include/tr2/type_traits (typelist): To __reflection_typelist."}, {"sha": "56711c06475c4579ccb8352d5216eacc0d133c9d", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=1b6ce36fe853d15fa293adb229451e5a495ecac8", "patch": "@@ -1808,6 +1808,35 @@ AC_DEFUN([GLIBCXX_CHECK_STDLIB_PROTO], [\n   AC_LANG_RESTORE\n ])\n \n+dnl\n+dnl Check whether required C++ overloads are present in <stdio.h>.\n+dnl\n+AC_DEFUN([GLIBCXX_CHECK_STDIO_PROTO], [\n+\n+  AC_LANG_SAVE\n+  AC_LANG_CPLUSPLUS\n+\n+  AC_MSG_CHECKING([for gets declaration])\n+  AC_CACHE_VAL(glibcxx_cv_gets, [\n+  AC_COMPILE_IFELSE([AC_LANG_SOURCE(\n+\t  [#include <stdio.h>\n+\t   namespace test \n+\t   {\n+              using ::gets;\n+\t   }\n+\t])],\n+\t[glibcxx_cv_gets=yes],\n+\t[glibcxx_cv_gets=no]\n+      )])\n+\n+  if test $glibcxx_cv_gets = yes; then\n+    AC_DEFINE(HAVE_GETS, 1, [Define if gets is available in <stdio.h>.])\n+  fi\n+  AC_MSG_RESULT($glibcxx_cv_gets)\n+\n+  AC_LANG_RESTORE\n+])\n+\n dnl\n dnl Check whether macros, etc are present for <system_error>\n dnl"}, {"sha": "4dea92b6d14ac0fc50943f4b45b6d208d05e71b7", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=1b6ce36fe853d15fa293adb229451e5a495ecac8", "patch": "@@ -171,6 +171,9 @@\n /* Define if _Unwind_GetIPInfo is available. */\n #undef HAVE_GETIPINFO\n \n+/* Define if gets is available in <stdio.h>. */\n+#undef HAVE_GETS\n+\n /* Define to 1 if you have the `hypot' function. */\n #undef HAVE_HYPOT\n "}, {"sha": "c4aa305487db7fb02133cc1edf5173abb533f2dd", "filename": "libstdc++-v3/config/os/gnu-linux/os_defines.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fos_defines.h?ref=1b6ce36fe853d15fa293adb229451e5a495ecac8", "patch": "@@ -1,6 +1,6 @@\n // Specific definitions for GNU/Linux  -*- C++ -*-\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2009, 2010\n+// Copyright (C) 2000, 2001, 2002, 2003, 2009, 2010, 2012\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -39,4 +39,11 @@\n \n #include <features.h>\n \n+// Provide a declaration for the possibly deprecated gets function, as\n+// glibc 2.15 and later does not declare gets for ISO C11 when\n+// __GNU_SOURCE is defined.\n+#if __GLIBC_PREREQ(2,15) && defined(_GNU_SOURCE)\n+# undef _GLIBCXX_HAVE_GETS\n+#endif\n+\n #endif"}, {"sha": "9e5731f8c55395ac431197e0f45574eb995efaa9", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=1b6ce36fe853d15fa293adb229451e5a495ecac8", "patch": "@@ -17415,6 +17415,56 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n+\n+  ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for gets declaration\" >&5\n+$as_echo_n \"checking for gets declaration... \" >&6; }\n+  if test \"${glibcxx_cv_gets+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdio.h>\n+\t   namespace test\n+\t   {\n+              using ::gets;\n+\t   }\n+\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_gets=yes\n+else\n+  glibcxx_cv_gets=no\n+\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+\n+\n+  if test $glibcxx_cv_gets = yes; then\n+\n+$as_echo \"#define HAVE_GETS 1\" >>confdefs.h\n+\n+  fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_gets\" >&5\n+$as_echo \"$glibcxx_cv_gets\" >&6; }\n+\n+  ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for EOWNERDEAD\" >&5\n $as_echo_n \"checking for EOWNERDEAD... \" >&6; }\n if test \"${glibcxx_cv_system_error1+set}\" = set; then :"}, {"sha": "f04563ea7586a847f1c7e7fdda5710a329d14478", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=1b6ce36fe853d15fa293adb229451e5a495ecac8", "patch": "@@ -136,6 +136,7 @@ GLIBCXX_ENABLE_WERROR([yes])\n # Checks for operating systems support that doesn't require linking.\n GLIBCXX_CHECK_MATH_PROTO\n GLIBCXX_CHECK_STDLIB_PROTO\n+GLIBCXX_CHECK_STDIO_PROTO\n GLIBCXX_CHECK_SYSTEM_ERROR\n \n # For the streamoff typedef."}, {"sha": "d11743a349da97dd2e0242da2ab869c0322d58de", "filename": "libstdc++-v3/include/c_global/cstdio", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdio", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdio", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdio?ref=1b6ce36fe853d15fa293adb229451e5a495ecac8", "patch": "@@ -1,7 +1,7 @@\n // -*- C++ -*- forwarding header.\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2008, 2009, 2010\n+// 2006, 2007, 2008, 2009, 2010, 2012\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -46,6 +46,10 @@\n #ifndef _GLIBCXX_CSTDIO\n #define _GLIBCXX_CSTDIO 1\n \n+#ifndef _GLIBCXX_HAVE_GETS\n+extern \"C\" extern char* gets (char* __s) __attribute__((deprecated));\n+#endif\n+\n // Get rid of those macros defined in <stdio.h> in lieu of real functions.\n #undef clearerr\n #undef fclose\n@@ -67,7 +71,6 @@\n #undef ftell\n #undef fwrite\n #undef getc\n-#undef getchar\n #undef gets\n #undef perror\n #undef printf"}, {"sha": "1588fc9e55b501559746296979d9ebf739e68d02", "filename": "libstdc++-v3/include/c_std/cstdio", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstdio", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b6ce36fe853d15fa293adb229451e5a495ecac8/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstdio", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcstdio?ref=1b6ce36fe853d15fa293adb229451e5a495ecac8", "patch": "@@ -1,7 +1,7 @@\n // -*- C++ -*- forwarding header.\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2009, 2010  Free Software Foundation, Inc.\n+// 2009, 2010, 2012  Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -45,6 +45,10 @@\n #include <bits/c++config.h>\n #include <stdio.h>\n \n+#ifndef _GLIBCXX_HAVE_GETS\n+extern \"C\" extern char* gets (char* __s) __attribute__((deprecated));\n+#endif\n+\n // Get rid of those macros defined in <stdio.h> in lieu of real functions.\n #undef clearerr\n #undef fclose"}]}