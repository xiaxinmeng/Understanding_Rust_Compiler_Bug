{"sha": "37cd34543d9e6407fe527b6fc7ba5dd55b61f33a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdjZDM0NTQzZDllNjQwN2ZlNTI3YjZmYzdiYTVkZDU1YjYxZjMzYQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-12-06T00:18:32Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-12-06T00:18:32Z"}, "message": "PR middle-end/92622 - FAIL: gcc.dg/Warray-bounds-22.c on ILP32: missing warnings for VLA on lines 67 and 69\n\ngcc/ChangeLog:\n\n\tPR middle-end/92622\n\t* tree-vrp.c (vrp_prop::check_array_ref): Avoid using a variable\n\tleft uninitialized by get_addr_base_and_unit_offset ofn failure.\n\nFrom-SVN: r279029", "tree": {"sha": "8a37cf90d314f0ce37673a0eae359a49b00d574c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a37cf90d314f0ce37673a0eae359a49b00d574c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37cd34543d9e6407fe527b6fc7ba5dd55b61f33a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37cd34543d9e6407fe527b6fc7ba5dd55b61f33a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37cd34543d9e6407fe527b6fc7ba5dd55b61f33a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37cd34543d9e6407fe527b6fc7ba5dd55b61f33a/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b801c7cd79f15e834d4cd6f5584d76459ecf7da0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b801c7cd79f15e834d4cd6f5584d76459ecf7da0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b801c7cd79f15e834d4cd6f5584d76459ecf7da0"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "31b03fffff251d5c7b55e1d2bb6cf84db53d3413", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37cd34543d9e6407fe527b6fc7ba5dd55b61f33a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37cd34543d9e6407fe527b6fc7ba5dd55b61f33a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37cd34543d9e6407fe527b6fc7ba5dd55b61f33a", "patch": "@@ -1,3 +1,9 @@\n+2019-12-05  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/92622\n+\t* tree-vrp.c (vrp_prop::check_array_ref): Avoid using a variable\n+\tleft uninitialized by get_addr_base_and_unit_offset on failure.\n+\n 2019-12-05  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-prop.c (ipa_set_jf_unknown): Do not clear bits and m_vr.\n@@ -1488,7 +1494,7 @@\n \t(ipa_update_overall_fn_summary): Add RESET parameter.\n \t* ipa-fnsummary.h (ipa_update_overall_fn_summary): Update prototype.\n \t* ipa-inline-transform.c (inline_call): Enable incremental updates.\n-\t\n+\n 2019-11-20  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-slp.c (vect_schedule_slp_instance): Restore stmt"}, {"sha": "cce63155b6c48cf36641ab7eabef07b4351bbabf", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37cd34543d9e6407fe527b6fc7ba5dd55b61f33a/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37cd34543d9e6407fe527b6fc7ba5dd55b61f33a/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=37cd34543d9e6407fe527b6fc7ba5dd55b61f33a", "patch": "@@ -3516,7 +3516,6 @@ vrp_prop::check_array_ref (location_t location, tree ref,\n \t  tree ptrdiff_max = TYPE_MAX_VALUE (ptrdiff_type_node);\n \t  tree maxbound = ptrdiff_max;\n \t  tree arg = TREE_OPERAND (ref, 0);\n-\t  poly_int64 off;\n \n \t  const bool compref = TREE_CODE (arg) == COMPONENT_REF;\n \t  if (compref)\n@@ -3535,19 +3534,22 @@ vrp_prop::check_array_ref (location_t location, tree ref,\n \t\t size wouldn't necessarily be correct if the reference is\n \t\t to its flexible array member initialized in a different\n \t\t translation unit.  */\n-\t      tree base = get_addr_base_and_unit_offset (arg, &off);\n-\t      if (!compref && base && DECL_P (base))\n-\t\tif (tree basesize = DECL_SIZE_UNIT (base))\n-\t\t  if (TREE_CODE (basesize) == INTEGER_CST)\n-\t\t    {\n-\t\t      maxbound = basesize;\n-\t\t      decl = base;\n-\t\t    }\n-\n-\t      if (known_gt (off, 0))\n-\t\tmaxbound = wide_int_to_tree (sizetype,\n-\t\t\t\t\t     wi::sub (wi::to_wide (maxbound),\n-\t\t\t\t\t\t      off));\n+\t      poly_int64 off;\n+\t      if (tree base = get_addr_base_and_unit_offset (arg, &off))\n+\t\t{\n+\t\t  if (!compref && DECL_P (base))\n+\t\t    if (tree basesize = DECL_SIZE_UNIT (base))\n+\t\t      if (TREE_CODE (basesize) == INTEGER_CST)\n+\t\t\t{\n+\t\t\t  maxbound = basesize;\n+\t\t\t  decl = base;\n+\t\t\t}\n+\n+\t\t  if (known_gt (off, 0))\n+\t\t    maxbound = wide_int_to_tree (sizetype,\n+\t\t\t\t\t\t wi::sub (wi::to_wide (maxbound),\n+\t\t\t\t\t\t\t  off));\n+\t\t}\n \t    }\n \t  else\n \t    maxbound = fold_convert (sizetype, maxbound);"}]}