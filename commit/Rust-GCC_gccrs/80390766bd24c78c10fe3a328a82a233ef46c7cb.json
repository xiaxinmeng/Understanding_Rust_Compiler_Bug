{"sha": "80390766bd24c78c10fe3a328a82a233ef46c7cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAzOTA3NjZiZDI0Yzc4YzEwZmUzYTMyOGE4MmEyMzNlZjQ2YzdjYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-16T22:08:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-16T22:08:57Z"}, "message": "re PR c++/49251 ([C++0x][parameter pack expanding] unused parameter warning with unpacking empty tuples)\n\n\tPR c++/49251\n\t* semantics.c (finish_id_expression): Mark even dependent\n\tvariables as used.\n\nFrom-SVN: r175119", "tree": {"sha": "38202239f90e2ac0121457f20d26ec5b75e34473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38202239f90e2ac0121457f20d26ec5b75e34473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80390766bd24c78c10fe3a328a82a233ef46c7cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80390766bd24c78c10fe3a328a82a233ef46c7cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80390766bd24c78c10fe3a328a82a233ef46c7cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80390766bd24c78c10fe3a328a82a233ef46c7cb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89a27d8fa26ed41071db524875a00086fac9002a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89a27d8fa26ed41071db524875a00086fac9002a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89a27d8fa26ed41071db524875a00086fac9002a"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "a8baca2eb6539732005ef1494e7be80baf919729", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80390766bd24c78c10fe3a328a82a233ef46c7cb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80390766bd24c78c10fe3a328a82a233ef46c7cb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=80390766bd24c78c10fe3a328a82a233ef46c7cb", "patch": "@@ -1,5 +1,9 @@\n 2011-06-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49251\n+\t* semantics.c (finish_id_expression): Mark even dependent\n+\tvariables as used.\n+\n \tPR c++/49420\n \t* error.c (dump_template_argument): Don't try to omit default\n \ttemplate args from an argument pack."}, {"sha": "bad7acbb6714c7a8e2941533b99dd4c4fbebe51c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80390766bd24c78c10fe3a328a82a233ef46c7cb/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80390766bd24c78c10fe3a328a82a233ef46c7cb/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=80390766bd24c78c10fe3a328a82a233ef46c7cb", "patch": "@@ -3196,7 +3196,10 @@ finish_id_expression (tree id_expression,\n \t     (or an instantiation thereof).  */\n \t  if (TREE_CODE (decl) == VAR_DECL\n \t      || TREE_CODE (decl) == PARM_DECL)\n-\t    return convert_from_reference (decl);\n+\t    {\n+\t      mark_used (decl);\n+\t      return convert_from_reference (decl);\n+\t    }\n \t  /* The same is true for FIELD_DECL, but we also need to\n \t     make sure that the syntax is correct.  */\n \t  else if (TREE_CODE (decl) == FIELD_DECL)"}, {"sha": "cc12e7bf27949dcff78cdc4d68b47df0e1c45b92", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80390766bd24c78c10fe3a328a82a233ef46c7cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80390766bd24c78c10fe3a328a82a233ef46c7cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=80390766bd24c78c10fe3a328a82a233ef46c7cb", "patch": "@@ -1,5 +1,8 @@\n 2011-06-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49251\n+\t* g++.dg/cpp0x/variadic113.C: New.\n+\n \tPR c++/49420\n \t* g++.dg/cpp0x/variadic112.C: New.\n "}, {"sha": "3f1bb2ad04a741d57912e1d63f0aca7d9389a910", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic113.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80390766bd24c78c10fe3a328a82a233ef46c7cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic113.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80390766bd24c78c10fe3a328a82a233ef46c7cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic113.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic113.C?ref=80390766bd24c78c10fe3a328a82a233ef46c7cb", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/49251\n+// { dg-options \"-std=c++0x -Wunused-parameter\" }\n+\n+struct A {};\n+template <int> int f(A);\n+\n+template< int... Indices >\n+struct indices {};\n+\n+template< class... Args >\n+void sink( Args&&... ) {}\n+\n+template< class T, int... Indices >\n+void unpack_test( T && t, indices<Indices...> ) {\n+  sink( f<Indices>(t)... );\n+}\n+\n+int main() {\n+  unpack_test( A(), indices<>() );\n+}"}]}