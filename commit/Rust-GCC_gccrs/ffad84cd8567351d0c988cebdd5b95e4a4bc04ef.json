{"sha": "ffad84cd8567351d0c988cebdd5b95e4a4bc04ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhZDg0Y2Q4NTY3MzUxZDBjOTg4Y2ViZGQ1Yjk1ZTRhNGJjMDRlZg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2004-03-10T17:47:45Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2004-03-10T17:47:45Z"}, "message": "function.c (expand_function_end): Emit a blockage insn before the epilogue when -fnon-call-exceptions is used.\n\n2004-03-10  Andrew Haley  <aph@redhat.com>\n\n\t* function.c (expand_function_end): Emit a blockage insn before\n\tthe epilogue when -fnon-call-exceptions is used.\n\n\t* except.c (expand_start_all_catch): Make comment more accurate.\n\nFrom-SVN: r79265", "tree": {"sha": "9b9a5f5981328e5ac58fde98a1519e76bad04d2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b9a5f5981328e5ac58fde98a1519e76bad04d2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffad84cd8567351d0c988cebdd5b95e4a4bc04ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffad84cd8567351d0c988cebdd5b95e4a4bc04ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffad84cd8567351d0c988cebdd5b95e4a4bc04ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffad84cd8567351d0c988cebdd5b95e4a4bc04ef/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65cd26a6f5334fceb8b1a8c21d22b00e05215290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65cd26a6f5334fceb8b1a8c21d22b00e05215290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65cd26a6f5334fceb8b1a8c21d22b00e05215290"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "3bfc3ede49c51271381ce8bff94328e38af8d7d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffad84cd8567351d0c988cebdd5b95e4a4bc04ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffad84cd8567351d0c988cebdd5b95e4a4bc04ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffad84cd8567351d0c988cebdd5b95e4a4bc04ef", "patch": "@@ -1,3 +1,10 @@\n+2004-03-10  Andrew Haley  <aph@redhat.com>\n+\n+\t* function.c (expand_function_end): Emit a blockage insn before\n+\tthe epilogue when -fnon-call-exceptions is used.\n+\n+\t* except.c (expand_start_all_catch): Make comment more accurate.\n+\n 2004-03-08  Joel Sherrill  <joel@oarcorp.com>\n \n \tPR target/14480"}, {"sha": "60edf8227b94d9260d06323ebf3145c9539d6981", "filename": "gcc/except.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffad84cd8567351d0c988cebdd5b95e4a4bc04ef/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffad84cd8567351d0c988cebdd5b95e4a4bc04ef/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=ffad84cd8567351d0c988cebdd5b95e4a4bc04ef", "patch": "@@ -602,10 +602,12 @@ expand_start_all_catch (void)\n   emit_jump (region->u.try.continue_label);\n }\n \n-/* Begin a catch clause.  TYPE is the type caught, a list of such types, or\n-   null if this is a catch-all clause. Providing a type list enables to\n-   associate the catch region with potentially several exception types, which\n-   is useful e.g. for Ada.  */\n+/* Begin a catch clause.  TYPE is the type caught, a list of such\n+   types, (in the case of Java) an ADDR_EXPR which points to the\n+   runtime type to match, or null if this is a catch-all\n+   clause. Providing a type list enables to associate the catch region\n+   with potentially several exception types, which is useful e.g. for\n+   Ada.  */\n \n void\n expand_start_catch (tree type_or_list)"}, {"sha": "2f68eaa007292eee4a562e8d14d5593b7d6db474", "filename": "gcc/function.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffad84cd8567351d0c988cebdd5b95e4a4bc04ef/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffad84cd8567351d0c988cebdd5b95e4a4bc04ef/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=ffad84cd8567351d0c988cebdd5b95e4a4bc04ef", "patch": "@@ -7016,6 +7016,14 @@ expand_function_end (void)\n   clear_pending_stack_adjust ();\n   do_pending_stack_adjust ();\n \n+  /* @@@ This is a kludge.  We want to ensure that instructions that\n+     may trap are not moved into the epilogue by scheduling, because\n+     we don't always emit unwind information for the epilogue.\n+     However, not all machine descriptions define a blockage insn, so\n+     emit an ASM_INPUT to act as one.  */\n+  if (flag_non_call_exceptions)\n+    emit_insn (gen_rtx_ASM_INPUT (VOIDmode, \"\"));\n+\n   /* Mark the end of the function body.\n      If control reaches this insn, the function can drop through\n      without returning a value.  */"}]}