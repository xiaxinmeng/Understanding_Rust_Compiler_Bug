{"sha": "b3989a7b1069ef9ed56911d96e1ad153e506aabb", "node_id": "C_kwDOANBUbNoAKGIzOTg5YTdiMTA2OWVmOWVkNTY5MTFkOTZlMWFkMTUzZTUwNmFhYmI", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2021-11-25T13:38:03Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2022-01-14T10:24:51Z"}, "message": "arc: Update stack size computation when accumulator registers are available.\n\nWhen accumulator registers are available in a processor, they need to\nbe save onto stack durring interrupts.  We were already doing so, but\nthe stack size was wrongly computed in the case other than ARC600.\n\ngcc/\n\n\t* config/arc/arc.c (arc_compute_frame_size): Remove condition when\n\tcomputin checking accumulator regs.\n\t(arc_expand_prologue): Update comments.\n\t(arc_expand_epilogue): Likewise.\n\nSigned-off-by: Claudiu Zissulescu <claziss@synopsys.com>", "tree": {"sha": "a4d6028de414d5c047279e61e7ab80c69703ec23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4d6028de414d5c047279e61e7ab80c69703ec23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3989a7b1069ef9ed56911d96e1ad153e506aabb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3989a7b1069ef9ed56911d96e1ad153e506aabb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3989a7b1069ef9ed56911d96e1ad153e506aabb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3989a7b1069ef9ed56911d96e1ad153e506aabb/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a0b518a82db68c5cbd9ea8ccc47c2ff45182519", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a0b518a82db68c5cbd9ea8ccc47c2ff45182519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a0b518a82db68c5cbd9ea8ccc47c2ff45182519"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "3096a9bef4487a0ed313302f4928c915aacee6ba", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3989a7b1069ef9ed56911d96e1ad153e506aabb/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3989a7b1069ef9ed56911d96e1ad153e506aabb/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=b3989a7b1069ef9ed56911d96e1ad153e506aabb", "patch": "@@ -2897,9 +2897,8 @@ arc_compute_frame_size (void)\n \t\t\t      cfun, TARGET_DPFP))\n     reg_size += UNITS_PER_WORD * 2;\n \n-  /* Check for special MLO/MHI case used by ARC600' MUL64\n-     extension.  */\n-  if (arc_must_save_register (R58_REG, cfun, TARGET_MUL64_SET))\n+  /* Check if R58 is used.  */\n+  if (arc_must_save_register (R58_REG, cfun, true))\n     reg_size += UNITS_PER_WORD * 2;\n \n   /* 4) Calculate extra size made up of the blink + fp size.  */\n@@ -3878,7 +3877,7 @@ arc_expand_prologue (void)\n \t}\n     }\n \n-  /* Save ARC600' MUL64 registers.  */\n+  /* Save accumulator registers.  */\n   if (arc_must_save_register (R58_REG, cfun, true))\n     frame_size_to_allocate -= arc_save_callee_saves (3ULL << 58,\n \t\t\t\t\t\t     false, false, 0, false);\n@@ -3971,7 +3970,7 @@ arc_expand_epilogue (int sibcall_p)\n       first_offset = 0;\n     }\n \n-  /* Restore ARC600' MUL64 registers.  */\n+  /* Restore accumulator registers.  */\n   if (arc_must_save_register (R58_REG, cfun, true))\n     {\n       rtx insn;"}]}