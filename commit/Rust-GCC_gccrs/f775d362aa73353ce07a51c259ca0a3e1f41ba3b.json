{"sha": "f775d362aa73353ce07a51c259ca0a3e1f41ba3b", "node_id": "C_kwDOANBUbNoAKGY3NzVkMzYyYWE3MzM1M2NlMDdhNTFjMjU5Y2EwYTNlMWY0MWJhM2I", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2022-09-28T17:22:26Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-10-06T09:22:48Z"}, "message": "ada: Accessibility error incorrectly flagged on call within Pre'Class expression\n\nThe compiler was wrongly reporting an error on a function call within\na Pre'Class expression when a formal of the aspect's subprogram was\npassed to an aliased formal. This occurred due to the call appearing\nwith the return statement of the wrapper function created for the\nprecondition, but the accessibility error check should only be done\nfor return statements that appear in the source program.\n\ngcc/ada/\n\n\t* sem_ch4.adb (Analyze_Call): Add test of Comes_From_Source on the\n\tenclosing subprogram's Entity_Id for determining whether to\n\tperform the compile-time accessibility check on actuals passed to\n\taliased formals in a function call occurring within a return\n\tstatement. That test excludes cases where the call occurs within\n\tthe return statement of a Pre'Class wrapper function.", "tree": {"sha": "f0d479cf5fa4f1fd678e4bd6967be04b44ab9b6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0d479cf5fa4f1fd678e4bd6967be04b44ab9b6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f775d362aa73353ce07a51c259ca0a3e1f41ba3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f775d362aa73353ce07a51c259ca0a3e1f41ba3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f775d362aa73353ce07a51c259ca0a3e1f41ba3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f775d362aa73353ce07a51c259ca0a3e1f41ba3b/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e7ff131f47f2a07c497af1c5b2df6bf1ba842fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7ff131f47f2a07c497af1c5b2df6bf1ba842fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e7ff131f47f2a07c497af1c5b2df6bf1ba842fb"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "6824941fa34998b37e9e822d814543a6417da5c0", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f775d362aa73353ce07a51c259ca0a3e1f41ba3b/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f775d362aa73353ce07a51c259ca0a3e1f41ba3b/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=f775d362aa73353ce07a51c259ca0a3e1f41ba3b", "patch": "@@ -1467,12 +1467,17 @@ package body Sem_Ch4 is\n       end if;\n \n       --  Check the accessibility level for actuals for explicitly aliased\n-      --  formals.\n+      --  formals when a function call appears within a return statement.\n+      --  This is only checked if the enclosing subprogram Comes_From_Source,\n+      --  to avoid issuing errors on calls occurring in wrapper subprograms\n+      --  (for example, where the call is part of an expression of an aspect\n+      --  associated with a wrapper, such as Pre'Class).\n \n       if Nkind (N) = N_Function_Call\n         and then Comes_From_Source (N)\n         and then Present (Nam_Ent)\n         and then In_Return_Value (N)\n+        and then Comes_From_Source (Current_Subprogram)\n       then\n          declare\n             Form : Node_Id;"}]}