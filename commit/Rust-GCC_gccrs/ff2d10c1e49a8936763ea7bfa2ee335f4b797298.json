{"sha": "ff2d10c1e49a8936763ea7bfa2ee335f4b797298", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYyZDEwYzFlNDlhODkzNjc2M2VhN2JmYTJlZTMzNWY0Yjc5NzI5OA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2005-11-18T01:55:34Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2005-11-18T01:55:34Z"}, "message": "rs6000.h (ASM_OUTPUT_WEAKREF): Define.\n\n* config/rs6000/rs6000.h (ASM_OUTPUT_WEAKREF): Define.\n* defaults.h (ASM_OUTPUT_WEAKREF): Add decl argument.\n* varasm.c (do_assemble_alias): Adjust call.\n(weak_finish): Don't use ASM_WEAKEN_LABEL if ASM_WEAKEN_DECL\nis defined.\n* doc/tm.texi (ASM_OUTPUT_WEAKREF): Document it.\n\nFrom-SVN: r107156", "tree": {"sha": "f7de15014a0085f44ce51e707c4844ee5dd161a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7de15014a0085f44ce51e707c4844ee5dd161a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff2d10c1e49a8936763ea7bfa2ee335f4b797298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2d10c1e49a8936763ea7bfa2ee335f4b797298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff2d10c1e49a8936763ea7bfa2ee335f4b797298", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/comments", "author": null, "committer": null, "parents": [{"sha": "ebb23329cd736e3f60eb60f544e9e218baa3a9ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb23329cd736e3f60eb60f544e9e218baa3a9ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebb23329cd736e3f60eb60f544e9e218baa3a9ab"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "22a6b70aed20a3f982680f43214590b508018d72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff2d10c1e49a8936763ea7bfa2ee335f4b797298", "patch": "@@ -1,3 +1,12 @@\n+2005-11-17  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/rs6000/rs6000.h (ASM_OUTPUT_WEAKREF): Define.\n+\t* defaults.h (ASM_OUTPUT_WEAKREF): Add decl argument.\n+\t* varasm.c (do_assemble_alias): Adjust call.\n+\t(weak_finish): Don't use ASM_WEAKEN_LABEL if ASM_WEAKEN_DECL\n+\tis defined.\n+\t* doc/tm.texi (ASM_OUTPUT_WEAKREF): Document it.\n+\n 2005-11-17  James E Wilson  <wilson@specifix.com>\n \n \t* tree.def (FUNCTION_DECL): Correct typo in comment."}, {"sha": "d2b54916003dd9ea4bf95c07c20fc396d71189c2", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=ff2d10c1e49a8936763ea7bfa2ee335f4b797298", "patch": "@@ -2033,6 +2033,26 @@ extern int toc_initialized;\n   while (0)\n #endif\n \n+#if HAVE_GAS_WEAKREF\n+#define ASM_OUTPUT_WEAKREF(FILE, DECL, NAME, VALUE)\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      fputs (\"\\t.weakref\\t\", (FILE));\t\t\t\t\t\\\n+      RS6000_OUTPUT_BASENAME ((FILE), (NAME)); \t\t\t\t\\\n+      fputs (\", \", (FILE));\t\t\t\t\t\t\\\n+      RS6000_OUTPUT_BASENAME ((FILE), (VALUE));\t\t\t\t\\\n+      if ((DECL) && TREE_CODE (DECL) == FUNCTION_DECL\t\t\t\\\n+\t  && DEFAULT_ABI == ABI_AIX && DOT_SYMBOLS)\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  fputs (\"\\n\\t.weakref\\t.\", (FILE));\t\t\t\t\\\n+\t  RS6000_OUTPUT_BASENAME ((FILE), (NAME)); \t\t\t\\\n+\t  fputs (\", .\", (FILE));\t\t\t\t\t\\\n+\t  RS6000_OUTPUT_BASENAME ((FILE), (VALUE));\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      fputc ('\\n', (FILE));\t\t\t\t\t\t\\\n+    } while (0)\n+#endif\n+\n /* This implements the `alias' attribute.  */\n #undef\tASM_OUTPUT_DEF_FROM_DECLS\n #define\tASM_OUTPUT_DEF_FROM_DECLS(FILE, DECL, TARGET)\t\t\t\\"}, {"sha": "38dab339e341b58af4d8e6870ee53224c6edab76", "filename": "gcc/defaults.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=ff2d10c1e49a8936763ea7bfa2ee335f4b797298", "patch": "@@ -174,7 +174,7 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n    the latter is referenced directly, a strong reference prevails.  */\n #ifndef ASM_OUTPUT_WEAKREF\n #if defined HAVE_GAS_WEAKREF\n-#define ASM_OUTPUT_WEAKREF(FILE, NAME, VALUE)\t\t\t\t\\\n+#define ASM_OUTPUT_WEAKREF(FILE, DECL, NAME, VALUE)\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       fprintf ((FILE), \"\\t.weakref\\t\");\t\t\t\t\t\\"}, {"sha": "09279ec7af5c1e9975f46b1aff5c3ffe51b49e9a", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=ff2d10c1e49a8936763ea7bfa2ee335f4b797298", "patch": "@@ -6766,6 +6766,12 @@ defines (equates) the weak symbol @var{name} to have the value\n to make @var{name} weak.\n @end defmac\n \n+@defmac ASM_OUTPUT_WEAKREF (@var{stream}, @var{decl}, @var{name}, @var{value})\n+Outputs a directive that enables @var{name} to be used to refer to\n+symbol @var{value} with weak-symbol semantics.  @code{decl} is the\n+declaration of @code{name}.\n+@end defmac\n+\n @defmac SUPPORTS_WEAK\n A C expression which evaluates to true if the target supports weak symbols.\n "}, {"sha": "68a46eab5e2963f9e18af6a96d1c5ab3cdf9cdee", "filename": "gcc/varasm.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2d10c1e49a8936763ea7bfa2ee335f4b797298/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=ff2d10c1e49a8936763ea7bfa2ee335f4b797298", "patch": "@@ -4551,7 +4551,10 @@ weak_finish (void)\n #ifndef ASM_OUTPUT_WEAKREF\n       else if (! TREE_SYMBOL_REFERENCED (target))\n \t{\n-# ifdef ASM_WEAKEN_LABEL\n+\t  /* Use ASM_WEAKEN_LABEL only if ASM_WEAKEN_DECL is not\n+\t     defined, otherwise we and weak_finish_1 would use a\n+\t     different macros.  */\n+# if defined ASM_WEAKEN_LABEL && ! defined ASM_WEAKEN_DECL\n \t  ASM_WEAKEN_LABEL (asm_out_file, IDENTIFIER_POINTER (target));\n # else\n \t  tree decl = find_decl_and_mark_needed (alias_decl, target);\n@@ -4736,7 +4739,7 @@ do_assemble_alias (tree decl, tree target)\n \tweakref_targets = tree_cons (decl, target, weakref_targets);\n \n #ifdef ASM_OUTPUT_WEAKREF\n-      ASM_OUTPUT_WEAKREF (asm_out_file,\n+      ASM_OUTPUT_WEAKREF (asm_out_file, decl,\n \t\t\t  IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)),\n \t\t\t  IDENTIFIER_POINTER (target));\n #else"}]}