{"sha": "3da2b176b387f367a02f5299607204ee6b27e359", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RhMmIxNzZiMzg3ZjM2N2EwMmY1Mjk5NjA3MjA0ZWU2YjI3ZTM1OQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2012-12-08T01:19:13Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2012-12-08T01:19:13Z"}, "message": "re PR c++/55513 (Incorrect snprintf folding when building with -std=c++0x)\n\n\tPR c++/55513\n\t* semantics.c (cxx_eval_builtin_function_call): Set non_constant_p\n\tafter folding.\n\nFrom-SVN: r194316", "tree": {"sha": "4c535a0da796f017a8885686ffc62ef2d9e1130a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c535a0da796f017a8885686ffc62ef2d9e1130a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3da2b176b387f367a02f5299607204ee6b27e359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da2b176b387f367a02f5299607204ee6b27e359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3da2b176b387f367a02f5299607204ee6b27e359", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da2b176b387f367a02f5299607204ee6b27e359/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cea55d343c4e04b1c2bd568d809c791f8c98c088", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea55d343c4e04b1c2bd568d809c791f8c98c088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cea55d343c4e04b1c2bd568d809c791f8c98c088"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "cee5db6c9ecdb175fb168ba9dde97b3ba3dc520e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da2b176b387f367a02f5299607204ee6b27e359/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da2b176b387f367a02f5299607204ee6b27e359/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3da2b176b387f367a02f5299607204ee6b27e359", "patch": "@@ -1,3 +1,9 @@\n+2012-12-07  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR c++/55513\n+\t* semantics.c (cxx_eval_builtin_function_call): Set non_constant_p\n+\tafter folding.\n+\n 2012-12-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* tree.c (build_aggr_init_expr): Remove tsubst_flags_t parameter."}, {"sha": "92b4a2b2f6c95074ba59dbb8ce8192ab9be740ce", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da2b176b387f367a02f5299607204ee6b27e359/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da2b176b387f367a02f5299607204ee6b27e359/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=3da2b176b387f367a02f5299607204ee6b27e359", "patch": "@@ -45,6 +45,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"bitmap.h\"\n #include \"hash-table.h\"\n \n+static bool verify_constant (tree, bool, bool *, bool *);\n+#define VERIFY_CONSTANT(X)\t\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (verify_constant ((X), allow_non_constant, non_constant_p, overflow_p)) \\\n+    return t;\t\t\t\t\t\t\t\t\\\n+ } while (0)\n+\n /* There routines provide a modular interface to perform many parsing\n    operations.  They may therefore be used during actual parsing, or\n    during template instantiation, which may be regarded as a\n@@ -6437,7 +6444,9 @@ cxx_eval_builtin_function_call (const constexpr_call *call, tree t,\n     return t;\n   new_call = build_call_array_loc (EXPR_LOCATION (t), TREE_TYPE (t),\n                                    CALL_EXPR_FN (t), nargs, args);\n-  return fold (new_call);\n+  new_call = fold (new_call);\n+  VERIFY_CONSTANT (new_call);\n+  return new_call;\n }\n \n /* TEMP is the constant value of a temporary object of type TYPE.  Adjust\n@@ -6738,11 +6747,6 @@ verify_constant (tree t, bool allow_non_constant, bool *non_constant_p,\n     }\n   return *non_constant_p;\n }\n-#define VERIFY_CONSTANT(X)\t\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (verify_constant ((X), allow_non_constant, non_constant_p, overflow_p)) \\\n-    return t;\t\t\t\t\t\t\t\t\\\n- } while (0)\n \n /* Subroutine of cxx_eval_constant_expression.\n    Attempt to reduce the unary expression tree T to a compile time value."}, {"sha": "06eedee8a04e4bb4a911cea6714665065d9e88e1", "filename": "gcc/testsuite/g++.dg/pr55513.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da2b176b387f367a02f5299607204ee6b27e359/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr55513.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da2b176b387f367a02f5299607204ee6b27e359/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr55513.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr55513.C?ref=3da2b176b387f367a02f5299607204ee6b27e359", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+// { dg-options \"-O0 -fdump-tree-gimple\" }\n+\n+main ()\n+{\n+  char s[10];\n+  const int t = (__builtin_memcpy (s, \"Hello\", 6), 777);\n+  __builtin_printf (\"%d %s\\n\", t, s);\n+}\n+\n+// { dg-final { scan-tree-dump-times \"memcpy\" 1 \"gimple\" } }\n+// { dg-final { cleanup-tree-dump \"gimple\" } }"}]}