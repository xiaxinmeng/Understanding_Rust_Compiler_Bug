{"sha": "df096e508e95abecfacdf0c18abae8807b56cc11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYwOTZlNTA4ZTk1YWJlY2ZhY2RmMGMxOGFiYWU4ODA3YjU2Y2MxMQ==", "commit": {"author": {"name": "Jan Sommer", "email": "soja-lists@aries.uberspace.de", "date": "2015-12-02T07:09:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-12-02T07:09:41Z"}, "message": "[PATCH] Fix declaration of pthread-structs in s-osinte-rtems.ads (ada/68169)\n\n\tPR ada/68169\n\t* s-oscons-tmplt.c: Generate pthread constants for RTEMS\n\t* s-osinte-rtems.ads: Declare pthread structs as opaque types in Ada\n\nFrom-SVN: r231145", "tree": {"sha": "734f36f91e19997e1d5a30a7641bf430f905ceb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/734f36f91e19997e1d5a30a7641bf430f905ceb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df096e508e95abecfacdf0c18abae8807b56cc11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df096e508e95abecfacdf0c18abae8807b56cc11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df096e508e95abecfacdf0c18abae8807b56cc11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df096e508e95abecfacdf0c18abae8807b56cc11/comments", "author": null, "committer": null, "parents": [{"sha": "1ac22e762e2a5f2c6d48afbe16393d204d9caf47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac22e762e2a5f2c6d48afbe16393d204d9caf47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ac22e762e2a5f2c6d48afbe16393d204d9caf47"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "848578132022541ea1789ac215fbd49881d4b47a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df096e508e95abecfacdf0c18abae8807b56cc11/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df096e508e95abecfacdf0c18abae8807b56cc11/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=df096e508e95abecfacdf0c18abae8807b56cc11", "patch": "@@ -1,3 +1,9 @@\n+2015-12-01  Jan Sommer <soja-lists@aries.uberspace.de>\n+\n+\tPR ada/68169\n+\t* s-oscons-tmplt.c: Generate pthread constants for RTEMS\n+\t* s-osinte-rtems.ads: Declare pthread structs as opaque types in Ada\n+\n 2015-12-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/Makefile.in (ADA_EXCLUDE_SRCS): Reorder."}, {"sha": "d1b522d6701415e9cc945e872e3a4f7414b12e5f", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df096e508e95abecfacdf0c18abae8807b56cc11/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df096e508e95abecfacdf0c18abae8807b56cc11/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=df096e508e95abecfacdf0c18abae8807b56cc11", "patch": "@@ -157,7 +157,7 @@ pragma Style_Checks (\"M32766\");\n # include <_types.h>\n #endif\n \n-#if defined (__linux__) || defined (__ANDROID__)\n+#if defined (__linux__) || defined (__ANDROID__) || defined (__rtems__)\n # include <pthread.h>\n # include <signal.h>\n #endif\n@@ -1458,7 +1458,7 @@ CNS(CLOCK_RT_Ada, \"\")\n #endif\n \n #if defined (__APPLE__) || defined (__linux__) || defined (__ANDROID__) \\\n-  || defined (DUMMY)\n+  || defined (__rtems__) || defined (DUMMY)\n /*\n \n    --  Sizes of pthread data types\n@@ -1501,7 +1501,7 @@ CND(PTHREAD_RWLOCKATTR_SIZE, \"pthread_rwlockattr_t\")\n CND(PTHREAD_RWLOCK_SIZE,     \"pthread_rwlock_t\")\n CND(PTHREAD_ONCE_SIZE,       \"pthread_once_t\")\n \n-#endif /* __APPLE__ || __linux__ || __ANDROID__ */\n+#endif /* __APPLE__ || __linux__ || __ANDROID__ || __rtems__ */\n \n /*\n "}, {"sha": "5a143cc666a7054f91277eb3f2e3815029392e72", "filename": "gcc/ada/s-osinte-rtems.ads", "status": "modified", "additions": 22, "deletions": 28, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df096e508e95abecfacdf0c18abae8807b56cc11/gcc%2Fada%2Fs-osinte-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df096e508e95abecfacdf0c18abae8807b56cc11/gcc%2Fada%2Fs-osinte-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-rtems.ads?ref=df096e508e95abecfacdf0c18abae8807b56cc11", "patch": "@@ -51,6 +51,8 @@\n --  It is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with System.OS_Constants;\n+\n package System.OS_Interface is\n    pragma Preelaborate;\n \n@@ -60,6 +62,7 @@ package System.OS_Interface is\n    subtype rtems_id       is Interfaces.C.unsigned;\n \n    subtype int            is Interfaces.C.int;\n+   subtype char           is Interfaces.C.char;\n    subtype short          is Interfaces.C.short;\n    subtype long           is Interfaces.C.long;\n    subtype unsigned       is Interfaces.C.unsigned;\n@@ -68,19 +71,18 @@ package System.OS_Interface is\n    subtype unsigned_char  is Interfaces.C.unsigned_char;\n    subtype plain_char     is Interfaces.C.plain_char;\n    subtype size_t         is Interfaces.C.size_t;\n-\n    -----------\n    -- Errno --\n    -----------\n \n    function errno return int;\n    pragma Import (C, errno, \"__get_errno\");\n \n-   EAGAIN    : constant := 11;\n-   EINTR     : constant := 4;\n-   EINVAL    : constant := 22;\n-   ENOMEM    : constant := 12;\n-   ETIMEDOUT : constant := 116;\n+   EAGAIN    : constant := System.OS_Constants.EAGAIN;\n+   EINTR     : constant := System.OS_Constants.EINTR;\n+   EINVAL    : constant := System.OS_Constants.EINVAL;\n+   ENOMEM    : constant := System.OS_Constants.ENOMEM;\n+   ETIMEDOUT : constant := System.OS_Constants.ETIMEDOUT;\n \n    -------------\n    -- Signals --\n@@ -448,6 +450,7 @@ package System.OS_Interface is\n       ss_low_priority     : int;\n       ss_replenish_period : timespec;\n       ss_initial_budget   : timespec;\n+      sched_ss_max_repl   : int;\n    end record;\n    pragma Convention (C, struct_sched_param);\n \n@@ -621,43 +624,34 @@ private\n    end record;\n    pragma Convention (C, timespec);\n \n-   CLOCK_REALTIME :  constant clockid_t := 1;\n-   CLOCK_MONOTONIC : constant clockid_t := 4;\n+   CLOCK_REALTIME :  constant clockid_t := System.OS_Constants.CLOCK_REALTIME;\n+   CLOCK_MONOTONIC : constant clockid_t := System.OS_Constants.CLOCK_MONOTONIC;\n+\n+   subtype char_array is Interfaces.C.char_array;\n \n    type pthread_attr_t is record\n-      is_initialized  : int;\n-      stackaddr       : System.Address;\n-      stacksize       : int;\n-      contentionscope : int;\n-      inheritsched    : int;\n-      schedpolicy     : int;\n-      schedparam      : struct_sched_param;\n-      cputime_clocked_allowed : int;\n-      detatchstate    : int;\n+      Data : char_array (1 .. OS_Constants.PTHREAD_ATTR_SIZE);\n    end record;\n    pragma Convention (C, pthread_attr_t);\n+   for pthread_attr_t'Alignment use Interfaces.C.double'Alignment;\n \n    type pthread_condattr_t is record\n-      flags           : int;\n-      process_shared  : int;\n+      Data : char_array (1 .. OS_Constants.PTHREAD_CONDATTR_SIZE);\n    end record;\n    pragma Convention (C, pthread_condattr_t);\n+   for pthread_condattr_t'Alignment use Interfaces.C.double'Alignment;\n \n    type pthread_mutexattr_t is record\n-      is_initialized  : int;\n-      process_shared  : int;\n-      prio_ceiling    : int;\n-      protocol        : int;\n-      mutex_type      : int;\n-      recursive       : int;\n-   end record;\n+      Data : char_array (1 .. OS_Constants.PTHREAD_MUTEXATTR_SIZE);\n+   end  record;\n    pragma Convention (C, pthread_mutexattr_t);\n+   for pthread_mutexattr_t'Alignment use Interfaces.C.double'Alignment;\n \n    type pthread_rwlockattr_t is record\n-      is_initialized  : int;\n-      process_shared  : int;\n+      Data : char_array (1 .. OS_Constants.PTHREAD_RWLOCKATTR_SIZE);\n    end record;\n    pragma Convention (C, pthread_rwlockattr_t);\n+   for pthread_rwlockattr_t'Alignment use Interfaces.C.double'Alignment;\n \n    type pthread_t is new rtems_id;\n "}]}