{"sha": "70e7fabe9e7e2db26a3a25424ada897e4365583f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBlN2ZhYmU5ZTdlMmRiMjZhM2EyNTQyNGFkYTg5N2U0MzY1NTgzZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-24T11:41:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-24T11:41:09Z"}, "message": "(GET_MODE_ALIGNMENT): Delete definition; duplicate.\n\nFrom-SVN: r13026", "tree": {"sha": "6c6ee898bae4340edae7178952ead3823176b969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c6ee898bae4340edae7178952ead3823176b969"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70e7fabe9e7e2db26a3a25424ada897e4365583f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e7fabe9e7e2db26a3a25424ada897e4365583f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e7fabe9e7e2db26a3a25424ada897e4365583f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e7fabe9e7e2db26a3a25424ada897e4365583f/comments", "author": null, "committer": null, "parents": [{"sha": "32051ff51c38d3f48ac737c3df09092ab0ab5740", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32051ff51c38d3f48ac737c3df09092ab0ab5740", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32051ff51c38d3f48ac737c3df09092ab0ab5740"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "6f78992da104b61fbb2b5907cdb177526023d518", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e7fabe9e7e2db26a3a25424ada897e4365583f/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e7fabe9e7e2db26a3a25424ada897e4365583f/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=70e7fabe9e7e2db26a3a25424ada897e4365583f", "patch": "@@ -51,10 +51,6 @@ int maximum_field_alignment;\n    May be overridden by front-ends.  */\n int set_alignment = 0;\n \n-#define GET_MODE_ALIGNMENT(MODE)   \\\n-  MIN (BIGGEST_ALIGNMENT, \t   \\\n-       MAX (1, (GET_MODE_UNIT_SIZE (MODE) * BITS_PER_UNIT)))\n-\n static enum machine_mode smallest_mode_for_size  PROTO((unsigned int,\n \t\t\t\t\t\t\tenum mode_class));\n static tree layout_record\tPROTO((tree));"}]}