{"sha": "25a92d2f912c6b5a486bd7625d7e363617e20627", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVhOTJkMmY5MTJjNmI1YTQ4NmJkNzYyNWQ3ZTM2MzYxN2UyMDYyNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-07-25T14:56:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-07-25T14:56:41Z"}, "message": "* pt.c (print_candidates_1): Use inform instead of error.\n\nFrom-SVN: r189849", "tree": {"sha": "8e7ee7081f67f113e40ba36f56c22fbb89241590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e7ee7081f67f113e40ba36f56c22fbb89241590"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25a92d2f912c6b5a486bd7625d7e363617e20627", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25a92d2f912c6b5a486bd7625d7e363617e20627", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25a92d2f912c6b5a486bd7625d7e363617e20627", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25a92d2f912c6b5a486bd7625d7e363617e20627/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "229ecb89356fe16fac2bf2a90f47e8c9325898b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229ecb89356fe16fac2bf2a90f47e8c9325898b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/229ecb89356fe16fac2bf2a90f47e8c9325898b1"}], "stats": {"total": 154, "additions": 80, "deletions": 74}, "files": [{"sha": "e9c6cff594037cca1182b73bf05630d90c8a8ffc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -1,3 +1,7 @@\n+2012-07-25  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (print_candidates_1): Use inform instead of error.\n+\n 2012-07-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* pt.c (convert_template_argument, tsubst): Simplify fourth argument"}, {"sha": "07b294f36eeb9f95fcb37b4e4fcb42b83acc6022", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -1718,19 +1718,21 @@ print_candidates_1 (tree fns, bool more, const char **str)\n       }\n     else\n       {\n+\ttree cand = OVL_CURRENT (fn);\n         if (!*str)\n           {\n             /* Pick the prefix string.  */\n             if (!more && !OVL_NEXT (fns))\n               {\n-                error (\"candidate is: %+#D\", OVL_CURRENT (fn));\n+                inform (DECL_SOURCE_LOCATION (cand),\n+\t\t\t\"candidate is: %#D\", cand);\n                 continue;\n               }\n \n             *str = _(\"candidates are:\");\n             spaces = get_spaces (*str);\n           }\n-        error (\"%s %+#D\", *str, OVL_CURRENT (fn));\n+        inform (DECL_SOURCE_LOCATION (cand), \"%s %#D\", *str, cand);\n         *str = spaces ? spaces : *str;\n       }\n "}, {"sha": "17a8bf6019231e87e266eff88911dacc74771e38", "filename": "gcc/testsuite/g++.dg/cpp0x/inline-ns2.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finline-ns2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finline-ns2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finline-ns2.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -2,17 +2,17 @@\n \n namespace Q {\n   inline namespace V1 {\n-    extern int i;\t\t// { dg-error \"\" }\n-    extern int j;\t\t// { dg-error \"\" }\n-    void f();\t\t\t// { dg-error \"\" }\n-    void g();\t\t\t// { dg-error \"\" }\n+    extern int i;\t\t// { dg-message \"\" }\n+    extern int j;\t\t// { dg-message \"\" }\n+    void f();\t\t\t// { dg-message \"\" }\n+    void g();\t\t\t// { dg-message \"\" }\n   }\n   inline namespace V2 {\n-    extern int j;\t\t// { dg-error \"\" }\n-    void g();\t\t\t// { dg-error \"\" }\n+    extern int j;\t\t// { dg-message \"\" }\n+    void g();\t\t\t// { dg-message \"\" }\n   }\n-  extern int i;\t\t\t// { dg-error \"\" }\n-  void f();\t\t\t// { dg-error \"\" }\n+  extern int i;\t\t\t// { dg-message \"\" }\n+  void f();\t\t\t// { dg-message \"\" }\n   void h();\n }\n namespace R {"}, {"sha": "438555e1344f2d1071c54d021e39fa45959faa0b", "filename": "gcc/testsuite/g++.dg/cpp0x/range-for14.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for14.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -59,7 +59,7 @@ void test1()\n \n struct base_begin\n {\n-    int *begin(); // { dg-error \"\" }\n+    int *begin(); // { dg-message \"\" }\n };\n \n struct base_end"}, {"sha": "c027428899ba85135a250d00dad404dfa18aaeea", "filename": "gcc/testsuite/g++.dg/lookup/ambig1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig1.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -7,7 +7,7 @@\n // Bug 16889:Undetected ambiguity.\n \n struct B { \n-  int f(); // { dg-error \"int B::f\" \"\" }\n+  int f(); // { dg-message \"int B::f\" \"\" }\n }; \n  \n struct B1 : virtual B {}; "}, {"sha": "505eda60d556ce33c85a0be5eec18edf5f1a9955", "filename": "gcc/testsuite/g++.dg/lookup/ambig2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig2.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -7,7 +7,7 @@\n // Bug 16889:Undetected ambiguity.\n \n struct B { \n-  int i; // { dg-error \"int B::i\" \"\" }\n+  int i; // { dg-message \"int B::i\" \"\" }\n }; \n  \n struct B1 : virtual B {}; "}, {"sha": "5a3f5b94929116c8941ec2507a2ca996b5e2d90e", "filename": "gcc/testsuite/g++.dg/lookup/ambig3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig3.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -7,7 +7,7 @@\n // Follow on from Bug 16889:Undetected ambiguity.\n \n struct B { \n-  int f(); // { dg-error \"int B::f\" \"\" }\n+  int f(); // { dg-message \"int B::f\" \"\" }\n }; \n  \n struct B1 : virtual B {}; "}, {"sha": "1f3daa1e5e4442fd103f6e48a3da10e8eba4e15f", "filename": "gcc/testsuite/g++.dg/lookup/ambig4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig4.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -4,10 +4,10 @@\n \n namespace N\n {\n-  int i;            // { dg-error \"i\" }\n+  int i;            // { dg-message \"i\" }\n }\n \n-int i;              // { dg-error \"i\" }\n+int i;              // { dg-message \"i\" }\n \n using namespace N;\n "}, {"sha": "fb48ff3c8aca3958e4105e5bc8edba07e77e70b7", "filename": "gcc/testsuite/g++.dg/lookup/ambig5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fambig5.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -4,10 +4,10 @@\n \n namespace N\n {\n-  namespace M {}    // { dg-error \"M\" }\n+  namespace M {}    // { dg-message \"M\" }\n }\n \n-namespace M {}      // { dg-error \"M\" }\n+namespace M {}      // { dg-message \"M\" }\n \n using namespace N;\n using namespace M;  // { dg-error \"namespace-name|ambiguous\" }"}, {"sha": "5b58e8ed5596bb2c9b803b64cd939d93a7f266a7", "filename": "gcc/testsuite/g++.dg/lookup/crash3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fcrash3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fcrash3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fcrash3.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -4,8 +4,8 @@\n \n typedef __SIZE_TYPE__ size_t; \n \n-struct A { void *operator new(size_t s){} };  // { dg-error \"operator new\" }\n-struct B { void *operator new(size_t s){} };  // { dg-error \"operator new\" }\n+struct A { void *operator new(size_t s){} };  // { dg-message \"operator new\" }\n+struct B { void *operator new(size_t s){} };  // { dg-message \"operator new\" }\n \n struct C : A,B {}; \n "}, {"sha": "d9f99a8d1288caefa0cae0d0db17c441deb57994", "filename": "gcc/testsuite/g++.dg/lookup/strong-using-2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fstrong-using-2.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -5,12 +5,12 @@\n \n namespace foo {\n   inline namespace foo_impl {\n-    class T; // { dg-error \"T\" \"\" }\n+    class T; // { dg-message \"T\" \"\" }\n   }\n }\n namespace bar {\n   inline namespace bar_impl {\n-    class T; // { dg-error \"T\" \"\" }\n+    class T; // { dg-message \"T\" \"\" }\n   }\n   using namespace foo;\n }"}, {"sha": "8a36504caf25f4d4c6a6bf8224607f3e9bd3138c", "filename": "gcc/testsuite/g++.dg/lookup/using16.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing16.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -3,12 +3,12 @@\n // { dg-do compile }\n \n namespace M {\n-  struct S {}; // { dg-error \"struct M::S\" \"candidate 1\" }\n+  struct S {}; // { dg-message \"struct M::S\" \"candidate 1\" }\n }\n \n namespace N {\n   int S;\n-  struct S {}; // { dg-error \"struct N::S\" \"candidate 2\" }\n+  struct S {}; // { dg-message \"struct N::S\" \"candidate 2\" }\n }\n \n using namespace M;"}, {"sha": "9019dabf5df5ce194c64082c73e04b49348138c7", "filename": "gcc/testsuite/g++.dg/lookup/using17.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing17.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -3,11 +3,11 @@\n // { dg-do compile }\n \n namespace M {\n-  struct S {}; // { dg-error \"struct M::S\" \"candidate 2\" }\n+  struct S {}; // { dg-message \"struct M::S\" \"candidate 2\" }\n }\n \n int S;\n-struct S {}; // { dg-error \"candidates are: struct S\" \"candidate 1\" }\n+struct S {}; // { dg-message \"candidates are: struct S\" \"candidate 1\" }\n \n using namespace M;\n "}, {"sha": "d64fbc6e91697d8beeb2f96ef7ad14b4dabc1ac6", "filename": "gcc/testsuite/g++.dg/lookup/using18.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing18.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -4,12 +4,12 @@\n \n namespace N1 {\n   void f ();\n-  struct f; // { dg-error \"\" \"candidate\" }\n+  struct f; // { dg-message \"\" \"candidate\" }\n }\n \n namespace N2 {\n   void f (int);\n-  struct f; // { dg-error \"\" \"candidate\" }\n+  struct f; // { dg-message \"\" \"candidate\" }\n }\n \n namespace M {"}, {"sha": "f1be41fea95e0b0a0ca53668c3213738d5456179", "filename": "gcc/testsuite/g++.dg/lookup/using20.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing20.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -2,14 +2,14 @@\n \n namespace A\n {\n-  int i;\t\t\t// { dg-error \"i\" }\n+  int i;\t\t\t// { dg-message \"i\" }\n }\n using namespace A;\n namespace B\n {\n   namespace B2\n   {\n-    int i;\t\t\t// { dg-error \"i\" }\n+    int i;\t\t\t// { dg-message \"i\" }\n   }\n   using namespace B2;\n }"}, {"sha": "02e39b80f0cea246785aad3f7077fd4e5d82826a", "filename": "gcc/testsuite/g++.dg/parse/ambig4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig4.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -1,12 +1,12 @@\n // PR c++/20293\n \n-namespace hide { // { dg-error \"hide\" }\n+namespace hide { // { dg-message \"hide\" }\n   int k;\n }\n \n namespace {\n   int i; \n-  namespace hide { // { dg-error \"hide\" }\n+  namespace hide { // { dg-message \"hide\" }\n     int j; \n   }\n }"}, {"sha": "0bd2302fe0057243b9dc4b7605c252a71ae3465a", "filename": "gcc/testsuite/g++.dg/parse/ambig6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig6.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -1,7 +1,7 @@\n // PR c++/48046\n \n-namespace N1 { typedef int   T; } // { dg-error \"\" }\n-namespace N2 { typedef float T; } // { dg-error \"\" }\n+namespace N1 { typedef int   T; } // { dg-message \"\" }\n+namespace N2 { typedef float T; } // { dg-message \"\" }\n \n int main()\n {"}, {"sha": "ba8870376fa9e9fbf744a814b446ed74fd015e74", "filename": "gcc/testsuite/g++.dg/parse/crash22.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash22.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -4,17 +4,17 @@\n // PR 19030: ICE\n // Origin: Volker Reichelt <reichelt@gcc.gnu.org>\n \n-struct A; // { dg-error \"A\" }\n+struct A; // { dg-message \"A\" }\n \n namespace N\n {\n-  struct A; // { dg-error \"A\" }\n+  struct A; // { dg-message \"A\" }\n }\n \n using namespace N;\n \n-int A::i; // { dg-error \"ambiguous|declared here\" \"\" }\n-int A::i; // { dg-error \"ambiguous|redefinition of\" \"\" }\n+int A::i; // { dg-message \"ambiguous|declared here\" \"\" }\n+int A::i; // { dg-message \"ambiguous|redefinition of\" \"\" }\n \n namespace N\n {"}, {"sha": "c19feafc1896d6f2b24808af395c351d6ec8c5e6", "filename": "gcc/testsuite/g++.dg/parse/crash53.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash53.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash53.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash53.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -1,9 +1,9 @@\n // PR c++/35112\n \n-namespace X { struct A; }  // { dg-error \"struct X::A\" }\n-namespace Y { struct A; }  // { dg-error \"struct Y::A\" }\n-namespace Z { struct A; }  // { dg-error \"struct Z::A\" }\n-namespace W { struct A; }  // { dg-error \"struct W::A\" }\n+namespace X { struct A; }  // { dg-message \"struct X::A\" }\n+namespace Y { struct A; }  // { dg-message \"struct Y::A\" }\n+namespace Z { struct A; }  // { dg-message \"struct Z::A\" }\n+namespace W { struct A; }  // { dg-message \"struct W::A\" }\n \n using namespace X;\n using namespace Y;"}, {"sha": "a2ae81d7f8d02996df7337511a24091527a7617e", "filename": "gcc/testsuite/g++.dg/parse/non-dependent2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-dependent2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-dependent2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-dependent2.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -8,14 +8,14 @@\n template <class T>\n struct Foo {\n   int j; // we never see this one.\n-  int k; // { dg-error \"Foo\" \"\" }\n+  int k; // { dg-message \"Foo\" \"\" }\n   \n };\n \n struct Baz \n {\n   int j;\n-  int k; // { dg-error \"candidates\" \"\" }\n+  int k; // { dg-message \"candidates\" \"\" }\n   \n };\n "}, {"sha": "1153ef61934faa3d26165c5ef0d59ea47c177976", "filename": "gcc/testsuite/g++.dg/template/crash92.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash92.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash92.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash92.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -1,7 +1,7 @@\n // PR c++/42055\n \n-template<typename T> void foo(T, T); // { dg-error \"candidates|template\" }\n+template<typename T> void foo(T, T); // { dg-message \"candidates|template\" }\n \n-template<typename T> void foo(T, int); // { dg-error \"template\" }\n+template<typename T> void foo(T, int); // { dg-message \"template\" }\n \n template void foo(int, int); // { dg-error \"ambiguous template specialization\" }"}, {"sha": "58ec3cba6a3916dd88d2e5a9ffd6d85f30b6dea5", "filename": "gcc/testsuite/g++.dg/template/injected1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finjected1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finjected1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finjected1.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -1,6 +1,6 @@\n // PR c++/13950, DR 176\n \n-template <class T> struct Base { }; // { dg-error \"\" } candidate\n+template <class T> struct Base { }; // { dg-message \"\" } candidate\n \n struct D1: Base<void>\n {"}, {"sha": "84078bd87250c5ceb7e06a91ee6f0a770c34e7c4", "filename": "gcc/testsuite/g++.dg/template/overload10.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload10.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -1,6 +1,6 @@\n // PR c++40342\n \n-template <typename T1, typename T2> int f(T1 *, const T2 *); // { dg-error \"\" }\n-template <typename T1, typename T2> int f(const T1 *, T2 *); // { dg-error \"\" }\n+template <typename T1, typename T2> int f(T1 *, const T2 *); // { dg-message \"\" }\n+template <typename T1, typename T2> int f(const T1 *, T2 *); // { dg-message \"\" }\n \n int (*p)(const int *, const int *) = f; // { dg-error \"ambiguous\" }"}, {"sha": "6b8260d418ba408c97d17e25ed406300185bf1f1", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900519_13.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900519_13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900519_13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900519_13.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -12,15 +12,15 @@\n // keywords: inheritance, ambiguity resolution, members\n \n struct base_0 {\n-  enum { base_member }; // { dg-error \"\" } candidate (26, 30)\n+  enum { base_member }; // { dg-message \"\" } candidate (26, 30)\n };\n \n struct base_1 {\n-  int base_member;      // { dg-error \"\" } candidate (26, 34)\n+  int base_member;      // { dg-message \"\" } candidate (26, 34)\n };\n \n struct base_2 {\n-  int base_member ();   // { dg-error \"\" } candidate (30, 34)\n+  int base_member ();   // { dg-message \"\" } candidate (30, 34)\n };\n \n struct derived_0 : public base_0, public base_1 {"}, {"sha": "ef8504b2affd7d6c8dbb31baa93ad683b031a108", "filename": "gcc/testsuite/g++.old-deja/g++.jason/overload20.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload20.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -4,8 +4,8 @@\n void f (char *);\n void f (int);\n struct A {\n-  void f ();\t\t\t// { dg-error \"\" } candidate\n-  void f (int);\t\t\t// { dg-error \"\" } candidate\n+  void f ();\t\t\t// { dg-message \"\" } candidate\n+  void f (int);\t\t\t// { dg-message \"\" } candidate\n   void g () {\n     void (*p)(char *) = f;\t// { dg-error \"\" } no matching function in scope\n   }"}, {"sha": "f2a7f1e2f4bcf42e30c69076e8718e5c37afae65", "filename": "gcc/testsuite/g++.old-deja/g++.martin/ambig1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fambig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fambig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fambig1.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -2,12 +2,12 @@\n //Based on a report by Bill Currie <bcurrie@tssc.co.nz>\n struct foo {\n   protected:\n-    int x;        // { dg-error \"\" } candidate\n+    int x;        // { dg-message \"\" } candidate\n };\n \n struct bar {\n   public:\n-    int x();      // { dg-error \"\" } candidate\n+    int x();      // { dg-message \"\" } candidate\n };\n \n struct foobar: public foo, public bar {"}, {"sha": "5ee1e343a2ac97b35156ad902e63a6732972421d", "filename": "gcc/testsuite/g++.old-deja/g++.mike/pmf3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf3.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -6,9 +6,9 @@ struct Fooey {\n   void h(double dx);\n };\n \n-void Fooey::f(char*) { }\t// { dg-error \"\" } candidate\n-void Fooey::f(int) { }\t\t// { dg-error \"\" } candidate\n-void Fooey::f(float) { }\t// { dg-error \"\" } candidate\n+void Fooey::f(char*) { }\t// { dg-message \"\" } candidate\n+void Fooey::f(int) { }\t\t// { dg-message \"\" } candidate\n+void Fooey::f(float) { }\t// { dg-message \"\" } candidate\n void Fooey::h(double zahl) { }\n \n int main() {"}, {"sha": "69a4fa5dcb79f09c1199017e34cd34200d8e67c5", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/overload1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Foverload1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Foverload1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Foverload1.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -6,8 +6,8 @@\n // Based on bug report by JDonner <jdonner@schedsys.com>\n \n struct foo {\n-  static int bar(); // { dg-error \"foo::bar\" }\n-  void bar(int); // { dg-error \"foo::bar\" }\n+  static int bar(); // { dg-message \"foo::bar\" }\n+  void bar(int); // { dg-message \"foo::bar\" }\n };\n \n /* gcc emits a hard error without -pedantic, and a warning with"}, {"sha": "b18c5290d6e90ebd0a90364f7ef5efc35efc8112", "filename": "gcc/testsuite/g++.old-deja/g++.other/ambig1.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fambig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fambig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fambig1.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -1,15 +1,15 @@\n // { dg-do assemble  }\n \n struct A {\n-  int operator ++(); // { dg-error \"\" } candidates\n-  void operator ()(); // { dg-error \"\" } candidates\n-  void operator delete(void*); // { dg-error \"\" } candidates\n+  int operator ++(); // { dg-message \"\" } candidates\n+  void operator ()(); // { dg-message \"\" } candidates\n+  void operator delete(void*); // { dg-message \"\" } candidates\n };\n \n struct B {\n-  int operator ++(int); // { dg-error \"\" } candidates\n-  void operator ()(); // { dg-error \"\" } candidates\n-  void operator delete(void*); // { dg-error \"\" } candidates\n+  int operator ++(int); // { dg-message \"\" } candidates\n+  void operator ()(); // { dg-message \"\" } candidates\n+  void operator delete(void*); // { dg-message \"\" } candidates\n   void f();\n };\n "}, {"sha": "d6aca8b9cfd084525eed7c74df7de7fdcea48cb5", "filename": "gcc/testsuite/g++.old-deja/g++.other/lineno2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flineno2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flineno2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flineno2.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -2,9 +2,9 @@\n // Submitted by Nathan Sidwell <nathan@acm.org>\n // Bug: g++ wasn't listing candidates for a failed conversion.\n \n-void f(int, double);\t\t// { dg-error \"\" } candidate\n-void f(double, int);\t\t// { dg-error \"\" } candidate\n-void f(int);\t\t\t// { dg-error \"\" } candidate\n+void f(int, double);\t\t// { dg-message \"\" } candidate\n+void f(double, int);\t\t// { dg-message \"\" } candidate\n+void f(int);\t\t\t// { dg-message \"\" } candidate\n \n int\n main ()"}, {"sha": "f0b609a91837d7dc953dc455cd3e180954e4b799", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash58.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash58.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -6,9 +6,9 @@\n // bug 147. We ICE'd on an unprocessed LOOKUP_EXPR during tsubsting\n \n namespace EManip {\n-    template <class T> void do_assign(T* d);  // { dg-error \"\" } candidate\n+    template <class T> void do_assign(T* d);  // { dg-message \"\" } candidate\n }\n-template <class T> void do_assign(T* d);    // { dg-error \"\" } candidate\n+template <class T> void do_assign(T* d);    // { dg-message \"\" } candidate\n \n template <class T>\n struct MatrixC"}, {"sha": "c58bd6eab191d2aa32b74e2114655bca2f5107a7", "filename": "gcc/testsuite/g++.old-deja/g++.pt/koenig1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fkoenig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fkoenig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fkoenig1.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -12,7 +12,7 @@ struct A {\n template <int s>\n static void g();\n template <int s>\n-void f();         // { dg-error \"\" } candiate\n+void f();         // { dg-message \"\" } candiate\n \n static void f_plus ()\n   {"}, {"sha": "50febb2e7aa136f8781027079b63fbf06d056ef9", "filename": "gcc/testsuite/g++.old-deja/g++.pt/overload5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a92d2f912c6b5a486bd7625d7e363617e20627/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload5.C?ref=25a92d2f912c6b5a486bd7625d7e363617e20627", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n \n-template <class T> void foo();\t// { dg-error \"\" } candidate\n+template <class T> void foo();\t// { dg-message \"\" } candidate\n \n void (*bar)() = foo<void>;\n void (*baz)() = foo; // { dg-error \"\" } can't deduce T"}]}