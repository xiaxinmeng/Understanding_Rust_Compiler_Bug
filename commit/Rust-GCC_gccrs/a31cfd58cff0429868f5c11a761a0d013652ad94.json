{"sha": "a31cfd58cff0429868f5c11a761a0d013652ad94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMxY2ZkNThjZmYwNDI5ODY4ZjVjMTFhNzYxYTBkMDEzNjUyYWQ5NA==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-02-04T01:26:14Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2008-02-04T01:26:14Z"}, "message": "re PR other/29972 (typos in the manual)\n\n\tPR other/29972\n\t* doc/invoke.texi (C++ Dialect Options, Optimize Options)\n\t(HPPA Options, i386 and x86-64 Options, IA-64 Options)\n\t(RS/6000 and PowerPC Options): Fix typos and markup.\n\t* doc/passes.texi (Tree-SSA passes): Likewise.\n\nFrom-SVN: r132087", "tree": {"sha": "c4764df0154b831018e20477758b9f2b265d8097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4764df0154b831018e20477758b9f2b265d8097"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a31cfd58cff0429868f5c11a761a0d013652ad94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31cfd58cff0429868f5c11a761a0d013652ad94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a31cfd58cff0429868f5c11a761a0d013652ad94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31cfd58cff0429868f5c11a761a0d013652ad94/comments", "author": null, "committer": null, "parents": [{"sha": "91f385f8cda40def5c748d9b76b7ca56be79b765", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f385f8cda40def5c748d9b76b7ca56be79b765", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f385f8cda40def5c748d9b76b7ca56be79b765"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "8426d4153bc5f42726dfadd72b0965fc30e3596e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31cfd58cff0429868f5c11a761a0d013652ad94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31cfd58cff0429868f5c11a761a0d013652ad94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a31cfd58cff0429868f5c11a761a0d013652ad94", "patch": "@@ -1,3 +1,11 @@\n+2008-02-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR other/29972\n+\t* doc/invoke.texi (C++ Dialect Options, Optimize Options)\n+\t(HPPA Options, i386 and x86-64 Options, IA-64 Options)\n+\t(RS/6000 and PowerPC Options): Fix typos and markup.\n+\t* doc/passes.texi (Tree-SSA passes): Likewise.\n+\n 2008-02-02  Michael Matz  <matz@suse.de>\n \n \tPR target/35045"}, {"sha": "b6174e912975029b8e3d7bd882421e67a8d6a18a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31cfd58cff0429868f5c11a761a0d013652ad94/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31cfd58cff0429868f5c11a761a0d013652ad94/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a31cfd58cff0429868f5c11a761a0d013652ad94", "patch": "@@ -1782,7 +1782,7 @@ functions for use by the C++ runtime type identification features\n of the language, you can save some space by using this flag.  Note that\n exception handling uses the same information, but it will generate it as\n needed. The @samp{dynamic_cast} operator can still be used for casts that\n-do not require runtime type information, i.e. casts to @code{void *} or to\n+do not require runtime type information, i.e.@: casts to @code{void *} or to\n unambiguous base classes.\n \n @item -fstats\n@@ -6764,7 +6764,7 @@ units larger than this limit is limited by @option{--param inline-unit-growth}.\n For small units this might be too tight (consider unit consisting of function A\n that is inline and B that just calls A three time.  If B is small relative to\n A, the growth of unit is 300\\% and yet such inlining is very sane.  For very\n-large units consisting of small inlininable functions however the overall unit\n+large units consisting of small inlineable functions however the overall unit\n growth limit is needed to avoid exponential explosion of code size.  Thus for\n smaller units, the size is increased to @option{--param large-unit-insns}\n before applying @option{--param inline-unit-growth}.  The default is 10000\n@@ -7125,7 +7125,7 @@ is 10000.\n @item integer-share-limit\n Small integer constants can use a shared data structure, reducing the\n compiler's memory usage and increasing its speed.  This sets the maximum\n-value of a shared integer constant's.  The default value is 256.\n+value of a shared integer constant.  The default value is 256.\n \n @item min-virtual-mappings\n Specifies the minimum number of virtual mappings in the incremental\n@@ -7140,7 +7140,7 @@ SSA updater switches to a full update for those symbols.  The default\n ratio is 3.\n \n @item ssp-buffer-size\n-The minimum size of buffers (i.e. arrays) that will receive stack smashing\n+The minimum size of buffers (i.e.@: arrays) that will receive stack smashing\n protection when @option{-fstack-protection} is used.\n \n @item max-jump-thread-duplication-stmts\n@@ -10107,7 +10107,7 @@ are passed to that ld.  The ld that is called is determined by the\n @option{--with-ld} configure option, GCC's program search path, and\n finally by the user's @env{PATH}.  The linker used by GCC can be printed\n using @samp{which `gcc -print-prog-name=ld`}.  This option is only available\n-on the 64 bit HP-UX GCC, i.e. configured with @samp{hppa*64*-*-hpux*}.\n+on the 64 bit HP-UX GCC, i.e.@: configured with @samp{hppa*64*-*-hpux*}.\n \n @item -mhp-ld\n @opindex hp-ld\n@@ -10120,7 +10120,7 @@ ld.  The ld that is called is determined by the @option{--with-ld}\n configure option, GCC's program search path, and finally by the user's\n @env{PATH}.  The linker used by GCC can be printed using @samp{which\n `gcc -print-prog-name=ld`}.  This option is only available on the 64 bit\n-HP-UX GCC, i.e. configured with @samp{hppa*64*-*-hpux*}.\n+HP-UX GCC, i.e.@: configured with @samp{hppa*64*-*-hpux*}.\n \n @item -mlong-calls\n @opindex mno-long-calls\n@@ -10277,16 +10277,16 @@ instruction set support.\n @item k6\n AMD K6 CPU with MMX instruction set support.\n @item k6-2, k6-3\n-Improved versions of AMD K6 CPU with MMX and 3dNOW! instruction set support.\n+Improved versions of AMD K6 CPU with MMX and 3dNOW!@: instruction set support.\n @item athlon, athlon-tbird\n-AMD Athlon CPU with MMX, 3dNOW!, enhanced 3dNOW! and SSE prefetch instructions\n+AMD Athlon CPU with MMX, 3dNOW!, enhanced 3dNOW!@: and SSE prefetch instructions\n support.\n @item athlon-4, athlon-xp, athlon-mp\n-Improved AMD Athlon CPU with MMX, 3dNOW!, enhanced 3dNOW! and full SSE\n+Improved AMD Athlon CPU with MMX, 3dNOW!, enhanced 3dNOW!@: and full SSE\n instruction set support.\n @item k8, opteron, athlon64, athlon-fx\n AMD K8 core based CPUs with x86-64 instruction set support.  (This supersets\n-MMX, SSE, SSE2, 3dNOW!, enhanced 3dNOW! and 64-bit instruction set extensions.)\n+MMX, SSE, SSE2, 3dNOW!, enhanced 3dNOW!@: and 64-bit instruction set extensions.)\n @item k8-sse3, opteron-sse3, athlon64-sse3\n Improved versions of k8, opteron and athlon64 with SSE3 instruction set support.\n @item amdfam10, barcelona\n@@ -10297,10 +10297,10 @@ instruction set extensions.)\n IDT Winchip C6 CPU, dealt in same way as i486 with additional MMX instruction\n set support.\n @item winchip2\n-IDT Winchip2 CPU, dealt in same way as i486 with additional MMX and 3dNOW!\n+IDT Winchip2 CPU, dealt in same way as i486 with additional MMX and 3dNOW!@:\n instruction set support.\n @item c3\n-Via C3 CPU with MMX and 3dNOW! instruction set support.  (No scheduling is\n+Via C3 CPU with MMX and 3dNOW!@: instruction set support.  (No scheduling is\n implemented for this chip.)\n @item c3-2\n Via C3-2 CPU with MMX and SSE instruction set support.  (No scheduling is\n@@ -10614,7 +10614,7 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @opindex m3dnow\n @opindex mno-3dnow\n These switches enable or disable the use of instructions in the MMX,\n-SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4A, SSE5, ABM or 3DNow! extended\n+SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4A, SSE5, ABM or 3DNow!@: extended\n instruction sets.\n These extensions are also available as built-in functions: see\n @ref{X86 Built-in Functions}, for details of the functions enabled and\n@@ -10973,7 +10973,7 @@ The default is 'enable'.\n @opindex mno-sched-control-spec\n @opindex msched-control-spec\n (Dis/En)able control speculative scheduling.  This feature is\n-available only during region scheduling (i.e. before reload).\n+available only during region scheduling (i.e.@: before reload).\n This will result in generation of the ld.s instructions and\n the corresponding check instructions chk.s .\n The default is 'disable'.\n@@ -13291,7 +13291,7 @@ will set or clear the bit.\n @opindex msim\n On embedded PowerPC systems, assume that the startup module is called\n @file{sim-crt0.o} and that the standard C libraries are @file{libsim.a} and\n-@file{libc.a}.  This is the default for @samp{powerpc-*-eabisim}.\n+@file{libc.a}.  This is the default for @samp{powerpc-*-eabisim}\n configurations.\n \n @item -mmvme"}, {"sha": "eab45378eb68f96ddddfcbc4c0f86be5278037fa", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31cfd58cff0429868f5c11a761a0d013652ad94/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31cfd58cff0429868f5c11a761a0d013652ad94/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=a31cfd58cff0429868f5c11a761a0d013652ad94", "patch": "@@ -490,7 +490,7 @@ described by @code{pass_vrp}.\n @item Folding built-in functions\n \n This pass simplifies built-in functions, as applicable, with constant\n-arguments or with inferrable string lengths.  It is located in\n+arguments or with inferable string lengths.  It is located in\n @file{tree-ssa-ccp.c} and is described by @code{pass_fold_builtins}.\n \n @item Split critical edges"}]}