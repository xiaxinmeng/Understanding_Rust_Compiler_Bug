{"sha": "8024d4b6c9ce06d63a87788c7fd4f74461552227", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAyNGQ0YjZjOWNlMDZkNjNhODc3ODhjN2ZkNGY3NDQ2MTU1MjIyNw==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2014-11-19T10:44:58Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2014-11-19T10:44:58Z"}, "message": "Fix tail-merge pass for dead type-unsafe code\n\n2014-11-19  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/62167\n\t* tree-ssa-tail-merge.c (stmt_local_def): Handle statements with vuse\n\tconservatively.\n\t(gimple_equal_p): Don't use vn_valueize to compare for lhs equality of\n\tassigns.\n\n\t* gcc.dg/pr51879-12.c: Add xfails.\n\t* gcc.dg/pr62167-run.c: New test.\n\t* gcc.dg/pr62167.c: New test.\n\nFrom-SVN: r217761", "tree": {"sha": "37b8a91d895a605dcdce91289d14dca2c4b9d0b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37b8a91d895a605dcdce91289d14dca2c4b9d0b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8024d4b6c9ce06d63a87788c7fd4f74461552227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8024d4b6c9ce06d63a87788c7fd4f74461552227", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8024d4b6c9ce06d63a87788c7fd4f74461552227", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8024d4b6c9ce06d63a87788c7fd4f74461552227/comments", "author": null, "committer": null, "parents": [{"sha": "4a19f719d621dc98a7983964a6b76e9d653479a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a19f719d621dc98a7983964a6b76e9d653479a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a19f719d621dc98a7983964a6b76e9d653479a8"}], "stats": {"total": 122, "additions": 118, "deletions": 4}, "files": [{"sha": "9169e354e8e2cab7161744711b0fdc8c37466516", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8024d4b6c9ce06d63a87788c7fd4f74461552227", "patch": "@@ -1,3 +1,11 @@\n+2014-11-19  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/62167\n+\t* tree-ssa-tail-merge.c (stmt_local_def): Handle statements with vuse\n+\tconservatively.\n+\t(gimple_equal_p): Don't use vn_valueize to compare for lhs equality of\n+\tassigns.\n+\n 2014-11-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/63915"}, {"sha": "35cb09ce4d3c6d42cf69c10287b0414589c1c395", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8024d4b6c9ce06d63a87788c7fd4f74461552227", "patch": "@@ -1,3 +1,10 @@\n+2014-11-19  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/62167\n+\t* gcc.dg/pr51879-12.c: Add xfails.\n+\t* gcc.dg/pr62167-run.c: New test.\n+\t* gcc.dg/pr62167.c: New test.\n+\n 2014-11-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/63915"}, {"sha": "85e2687da171ad59fd5f22f71d464773cd3e305c", "filename": "gcc/testsuite/gcc.dg/pr51879-12.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51879-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51879-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51879-12.c?ref=8024d4b6c9ce06d63a87788c7fd4f74461552227", "patch": "@@ -24,6 +24,6 @@ foo (int y)\n   baz (a);\n }\n \n-/* { dg-final { scan-tree-dump-times \"bar \\\\(\" 1 \"pre\"} } */\n-/* { dg-final { scan-tree-dump-times \"bar2 \\\\(\" 1 \"pre\"} } */\n+/* { dg-final { scan-tree-dump-times \"bar \\\\(\" 1 \"pre\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"bar2 \\\\(\" 1 \"pre\" { xfail *-*-* } } } */\n /* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "37214a3ecee27d6c0f967188b6abc13bd833cbd0", "filename": "gcc/testsuite/gcc.dg/pr62167-run.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62167-run.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62167-run.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62167-run.c?ref=8024d4b6c9ce06d63a87788c7fd4f74461552227", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftree-tail-merge\" } */\n+\n+struct node\n+{\n+  struct node *next;\n+  struct node *prev;\n+};\n+\n+struct node node;\n+\n+struct head\n+{\n+  struct node *first;\n+};\n+\n+struct head heads[5];\n+\n+int k = 2;\n+\n+struct head *head = &heads[2];\n+\n+int\n+main ()\n+{\n+  struct node *p;\n+\n+  node.next = (void*)0;\n+\n+  node.prev = (void *)head;\n+\n+  head->first = &node;\n+\n+  struct node *n = head->first;\n+\n+  struct head *h = &heads[k];\n+\n+  heads[2].first = n->next;\n+\n+  if ((void*)n->prev == (void *)h)\n+    p = h->first;\n+  else\n+    /* Dead tbaa-unsafe load from ((struct node *)&heads[2])->next.  */\n+    p = n->prev->next;\n+\n+  return !(p == (void*)0);\n+}"}, {"sha": "f8c31a0792f2f75d189ff4fbc23bf55c8a6dcb2a", "filename": "gcc/testsuite/gcc.dg/pr62167.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62167.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62167.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62167.c?ref=8024d4b6c9ce06d63a87788c7fd4f74461552227", "patch": "@@ -0,0 +1,50 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-tail-merge -fdump-tree-pre\" } */\n+\n+struct node\n+{\n+  struct node *next;\n+  struct node *prev;\n+};\n+\n+struct node node;\n+\n+struct head\n+{\n+  struct node *first;\n+};\n+\n+struct head heads[5];\n+\n+int k = 2;\n+\n+struct head *head = &heads[2];\n+\n+int\n+main ()\n+{\n+  struct node *p;\n+\n+  node.next = (void*)0;\n+\n+  node.prev = (void *)head;\n+\n+  head->first = &node;\n+\n+  struct node *n = head->first;\n+\n+  struct head *h = &heads[k];\n+\n+  heads[2].first = n->next;\n+\n+  if ((void*)n->prev == (void *)h)\n+    p = h->first;\n+  else\n+    /* Dead tbaa-unsafe load from ((struct node *)&heads[2])->next.  */\n+    p = n->prev->next;\n+\n+  return !(p == (void*)0);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"Removing basic block\" \"pre\"} } */\n+/* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "16519853b0e019188c2b3739cb1e6d6a06e9909a", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8024d4b6c9ce06d63a87788c7fd4f74461552227/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=8024d4b6c9ce06d63a87788c7fd4f74461552227", "patch": "@@ -326,7 +326,8 @@ stmt_local_def (gimple stmt)\n \n   if (gimple_vdef (stmt) != NULL_TREE\n       || gimple_has_side_effects (stmt)\n-      || gimple_could_trap_p_1 (stmt, false, false))\n+      || gimple_could_trap_p_1 (stmt, false, false)\n+      || gimple_vuse (stmt) != NULL_TREE)\n     return false;\n \n   def_p = SINGLE_SSA_DEF_OPERAND (stmt, SSA_OP_DEF);\n@@ -1175,7 +1176,8 @@ gimple_equal_p (same_succ same_succ, gimple s1, gimple s2)\n \t\t\t\t\t\t gimple_assign_rhs1 (s2)));\n       else if (TREE_CODE (lhs1) == SSA_NAME\n \t       && TREE_CODE (lhs2) == SSA_NAME)\n-\treturn vn_valueize (lhs1) == vn_valueize (lhs2);\n+\treturn operand_equal_p (gimple_assign_rhs1 (s1),\n+\t\t\t\tgimple_assign_rhs1 (s2), 0);\n       return false;\n \n     case GIMPLE_COND:"}]}