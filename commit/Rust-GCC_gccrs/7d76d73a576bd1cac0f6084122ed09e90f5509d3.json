{"sha": "7d76d73a576bd1cac0f6084122ed09e90f5509d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q3NmQ3M2E1NzZiZDFjYWMwZjYwODQxMjJlZDA5ZTkwZjU1MDlkMw==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-07-10T12:45:33Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-07-10T12:45:33Z"}, "message": "expr.c (gfc_check_pointer_assign): Verify that rank of the LHS and RHS match.\n\n* expr.c (gfc_check_pointer_assign): Verify that rank of the LHS\nand RHS match. Return early if the RHS is NULL().\n\nFrom-SVN: r84458", "tree": {"sha": "57ec2cbe9f8f2290ec632f170cb3cbc49d276643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57ec2cbe9f8f2290ec632f170cb3cbc49d276643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d76d73a576bd1cac0f6084122ed09e90f5509d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d76d73a576bd1cac0f6084122ed09e90f5509d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d76d73a576bd1cac0f6084122ed09e90f5509d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d76d73a576bd1cac0f6084122ed09e90f5509d3/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "290e757a36c8d3503de812abdfbd84d85c0336e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/290e757a36c8d3503de812abdfbd84d85c0336e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/290e757a36c8d3503de812abdfbd84d85c0336e3"}], "stats": {"total": 64, "additions": 36, "deletions": 28}, "files": [{"sha": "deb15661bb0867e74ca0215c6a1d38a7b2a45bd1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d76d73a576bd1cac0f6084122ed09e90f5509d3/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d76d73a576bd1cac0f6084122ed09e90f5509d3/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7d76d73a576bd1cac0f6084122ed09e90f5509d3", "patch": "@@ -1,3 +1,8 @@\n+2004-07-10  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* expr.c (gfc_check_pointer_assign): Verify that rank of the LHS\n+\tand RHS match. Return early if the RHS is NULL().\n+\n 2004-07-10  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* trans-common.c: Fix whitespace issues, make variable names"}, {"sha": "ad9f42a3f7c6305c041a35582e238f14eec369af", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 31, "deletions": 28, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d76d73a576bd1cac0f6084122ed09e90f5509d3/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d76d73a576bd1cac0f6084122ed09e90f5509d3/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=7d76d73a576bd1cac0f6084122ed09e90f5509d3", "patch": "@@ -1807,39 +1807,42 @@ gfc_check_pointer_assign (gfc_expr * lvalue, gfc_expr * rvalue)\n   /* If rvalue is a NULL() or NULLIFY, we're done. Otherwise the type,\n      kind, etc for lvalue and rvalue must match, and rvalue must be a\n      pure variable if we're in a pure function.  */\n-  if (rvalue->expr_type != EXPR_NULL)\n+  if (rvalue->expr_type == EXPR_NULL)\n+    return SUCCESS;\n+\n+  if (!gfc_compare_types (&lvalue->ts, &rvalue->ts))\n     {\n+      gfc_error (\"Different types in pointer assignment at %L\",\n+\t\t &lvalue->where);\n+      return FAILURE;\n+    }\n \n-      if (!gfc_compare_types (&lvalue->ts, &rvalue->ts))\n-\t{\n-\t  gfc_error (\"Different types in pointer assignment at %L\",\n-\t\t     &lvalue->where);\n-\t  return FAILURE;\n-\t}\n+  if (lvalue->ts.kind != rvalue->ts.kind)\n+    {\n+      gfc_error\t(\"Different kind type parameters in pointer \"\n+\t\t \"assignment at %L\", &lvalue->where);\n+      return FAILURE;\n+    }\n \n-      if (lvalue->ts.kind != rvalue->ts.kind)\n-\t{\n-\t  gfc_error\n-\t    (\"Different kind type parameters in pointer assignment at %L\",\n-\t     &lvalue->where);\n-\t  return FAILURE;\n-\t}\n+  attr = gfc_expr_attr (rvalue);\n+  if (!attr.target && !attr.pointer)\n+    {\n+      gfc_error\t(\"Pointer assignment target is neither TARGET \"\n+\t\t \"nor POINTER at %L\", &rvalue->where);\n+      return FAILURE;\n+    }\n \n-      attr = gfc_expr_attr (rvalue);\n-      if (!attr.target && !attr.pointer)\n-\t{\n-\t  gfc_error\n-\t    (\"Pointer assignment target is neither TARGET nor POINTER at \"\n-\t     \"%L\", &rvalue->where);\n-\t  return FAILURE;\n-\t}\n+  if (is_pure && gfc_impure_variable (rvalue->symtree->n.sym))\n+    {\n+      gfc_error\t(\"Bad target in pointer assignment in PURE \"\n+\t\t \"procedure at %L\", &rvalue->where);\n+    }\n \n-      if (is_pure && gfc_impure_variable (rvalue->symtree->n.sym))\n-\t{\n-\t  gfc_error\n-\t    (\"Bad target in pointer assignment in PURE procedure at %L\",\n-\t     &rvalue->where);\n-\t}\n+  if (lvalue->rank != rvalue->rank)\n+    {\n+      gfc_error (\"Unequal ranks %d and %d in pointer assignment at %L\", \n+\t\t lvalue->rank, rvalue->rank, &rvalue->where);\n+      return FAILURE;\n     }\n \n   return SUCCESS;"}]}