{"sha": "edb2b1b1fa0af901ab22ed58a4644115d3f4bbff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRiMmIxYjFmYTBhZjkwMWFiMjJlZDU4YTQ2NDQxMTVkM2Y0YmJmZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-04-08T20:35:14Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-04-08T20:35:14Z"}, "message": "re PR ada/60411 (Ada bootstrap failure on ARM)\n\n\tPR ada/60411\n\t* sigtramp.h: Add Android support.\n\nFrom-SVN: r209227", "tree": {"sha": "2b9c54c7b795270c7b18bc5b4d3ac27af14a14e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b9c54c7b795270c7b18bc5b4d3ac27af14a14e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edb2b1b1fa0af901ab22ed58a4644115d3f4bbff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edb2b1b1fa0af901ab22ed58a4644115d3f4bbff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edb2b1b1fa0af901ab22ed58a4644115d3f4bbff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edb2b1b1fa0af901ab22ed58a4644115d3f4bbff/comments", "author": null, "committer": null, "parents": [{"sha": "98e6ecab8caecd055780ee085e59c9858886169c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e6ecab8caecd055780ee085e59c9858886169c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98e6ecab8caecd055780ee085e59c9858886169c"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "e3a690ad0ec4f7979d665179d0476bd23fb124d1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb2b1b1fa0af901ab22ed58a4644115d3f4bbff/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb2b1b1fa0af901ab22ed58a4644115d3f4bbff/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=edb2b1b1fa0af901ab22ed58a4644115d3f4bbff", "patch": "@@ -5,6 +5,7 @@\n \t* s-linux-android.ads: New file.\n \t* s-intman-android.adb: Likewise.\n \t* sigtramp-armdroid.c: Likewise.\n+\t* sigtramp.h: Add Android support.\n \n 2014-04-07  Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "7419e172510e3bb3aaf24153f156d1e0e1b0740b", "filename": "gcc/ada/sigtramp.h", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edb2b1b1fa0af901ab22ed58a4644115d3f4bbff/gcc%2Fada%2Fsigtramp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edb2b1b1fa0af901ab22ed58a4644115d3f4bbff/gcc%2Fada%2Fsigtramp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp.h?ref=edb2b1b1fa0af901ab22ed58a4644115d3f4bbff", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 2011-2013, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 2011-2014, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -41,10 +41,29 @@\n extern \"C\" {\n #endif\n \n-  typedef void sighandler_t (int signo, void *siginfo, void *sigcontext);\n+#ifdef __ANDROID__\n+#include <stdlib.h>\n+#include <asm/signal.h>\n+#include <asm/sigcontext.h>\n+\n+/* Android SDK doesn't define these structs */\n+typedef struct sigcontext mcontext_t;\n+\n+typedef struct ucontext\n+  {\n+    unsigned long uc_flags;\n+    struct ucontext *uc_link;\n+    stack_t uc_stack;\n+    mcontext_t uc_mcontext;\n+} ucontext_t;\n+#endif\n+\n+  /* This typedef signature sometimes conflicts with the sighandler_t from\n+     system headers so call it something unique.  */\n+  typedef void __sigtramphandler_t (int signo, void *siginfo, void *sigcontext);\n \n   void __gnat_sigtramp  (int signo, void *siginfo, void *sigcontext,\n-\t\t\t sighandler_t * handler);\n+\t\t\t __sigtramphandler_t * handler);\n \n   /* To be called from an established signal handler.  Setup the DWARF CFI\n      bits letting unwinders walk through the signal frame up into the"}]}