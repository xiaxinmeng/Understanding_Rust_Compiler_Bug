{"sha": "5c8b27d7da8d5ba797bb4156caef9ad855f4d96d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM4YjI3ZDdkYThkNWJhNzk3YmI0MTU2Y2FlZjlhZDg1NWY0ZDk2ZA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-06-25T18:38:25Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-06-25T18:38:25Z"}, "message": "Do not insert statements computing the true predicate.\n\n2010-06-25  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* tree-if-conv.c (insert_gimplified_predicates): Do not insert\n\tstatements computing the true predicate.\n\nFrom-SVN: r161398", "tree": {"sha": "8924ea7be3d0df196bea2329078a656b81b7d462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8924ea7be3d0df196bea2329078a656b81b7d462"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c8b27d7da8d5ba797bb4156caef9ad855f4d96d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c8b27d7da8d5ba797bb4156caef9ad855f4d96d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c8b27d7da8d5ba797bb4156caef9ad855f4d96d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c8b27d7da8d5ba797bb4156caef9ad855f4d96d/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29caa68aa5ee0e2defeb6331d15b458f3e6853ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29caa68aa5ee0e2defeb6331d15b458f3e6853ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29caa68aa5ee0e2defeb6331d15b458f3e6853ba"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "34afcc15c715e1a6ea74c168aa1bea0b6196f5d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b27d7da8d5ba797bb4156caef9ad855f4d96d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b27d7da8d5ba797bb4156caef9ad855f4d96d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c8b27d7da8d5ba797bb4156caef9ad855f4d96d", "patch": "@@ -1,3 +1,8 @@\n+2010-06-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-if-conv.c (insert_gimplified_predicates): Do not insert\n+\tstatements computing the true predicate.\n+\n 2010-06-25  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-if-conv.c (init_bb_predicate): Initialize the predicate"}, {"sha": "8d5d2268ec55a6eb74121feaa32106caf792693a", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b27d7da8d5ba797bb4156caef9ad855f4d96d/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b27d7da8d5ba797bb4156caef9ad855f4d96d/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=5c8b27d7da8d5ba797bb4156caef9ad855f4d96d", "patch": "@@ -1021,6 +1021,15 @@ insert_gimplified_predicates (loop_p loop)\n       basic_block bb = ifc_bbs[i];\n       gimple_seq stmts = bb_predicate_gimplified_stmts (bb);\n \n+      if (!is_predicated (bb))\n+\t{\n+\t  /* Do not insert statements for a basic block that is not\n+\t     predicated.  Also make sure that the predicate of the\n+\t     basic block is set to true.  */\n+\t  reset_bb_predicate (bb);\n+\t  continue;\n+\t}\n+\n       if (stmts)\n \t{\n \t  gimple_stmt_iterator gsi = gsi_last_bb (bb);"}]}