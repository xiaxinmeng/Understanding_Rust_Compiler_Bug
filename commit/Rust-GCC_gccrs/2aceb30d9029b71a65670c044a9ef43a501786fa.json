{"sha": "2aceb30d9029b71a65670c044a9ef43a501786fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjZWIzMGQ5MDI5YjcxYTY1NjcwYzA0NGE5ZWY0M2E1MDE3ODZmYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.soma.redhat.com", "date": "2000-06-06T01:56:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-06-06T01:56:06Z"}, "message": "Makefile.in (libgcc.ready): Lose.\n\n        * Makefile.in (libgcc.ready): Lose.\n        (libgcc.mk): Just use mv, not move-if-change.\n        (LIBGCC_DEPS): New macro.\n        (libgcc.a): Use it.\n        (stmp-multilib): Likewise.\n        * mklibgcc.in (stmp-dirs): New target.  Make everything depend on\n        it rather than the directories themselves.\n        (LIB2ADD): Depend on the list file rather than 'force'.\n\nFrom-SVN: r34419", "tree": {"sha": "5268c770b2db6d65f7968bbc4518ed5dab018a39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5268c770b2db6d65f7968bbc4518ed5dab018a39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aceb30d9029b71a65670c044a9ef43a501786fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aceb30d9029b71a65670c044a9ef43a501786fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aceb30d9029b71a65670c044a9ef43a501786fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aceb30d9029b71a65670c044a9ef43a501786fa/comments", "author": null, "committer": null, "parents": [{"sha": "fce8451d8208d1a5ada66135128bc2cd08820abe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fce8451d8208d1a5ada66135128bc2cd08820abe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fce8451d8208d1a5ada66135128bc2cd08820abe"}], "stats": {"total": 99, "additions": 39, "deletions": 60}, "files": [{"sha": "c74aaf981d56790356467cf5b91541d78d6dda98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aceb30d9029b71a65670c044a9ef43a501786fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aceb30d9029b71a65670c044a9ef43a501786fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2aceb30d9029b71a65670c044a9ef43a501786fa", "patch": "@@ -1,5 +1,14 @@\n 2000-06-05  Jason Merrill  <jason@casey.soma.redhat.com>\n \n+\t* Makefile.in (libgcc.ready): Lose.\n+\t(libgcc.mk): Just use mv, not move-if-change.\n+\t(LIBGCC_DEPS): New macro.\n+\t(libgcc.a): Use it.\n+\t(stmp-multilib): Likewise.\n+\t* mklibgcc.in (stmp-dirs): New target.  Make everything depend on\n+\tit rather than the directories themselves.\n+\t(LIB2ADD): Depend on the list file rather than 'force'.\n+\n \t* fold-const.c (fold, case COND_EXPR): Elide conversion between\n \tcv-qualified versions of types.\n "}, {"sha": "089da1ecb1258241bd95608a42841da1f5b98468", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aceb30d9029b71a65670c044a9ef43a501786fa/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aceb30d9029b71a65670c044a9ef43a501786fa/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2aceb30d9029b71a65670c044a9ef43a501786fa", "patch": "@@ -941,16 +941,6 @@ xlimits.h: glimits.h limitx.h limity.h\n #\f\n # Build libgcc.a.\n \n-# Compiling libgcc.a requires making sure that cc1, etc. have been compiled.\n-# But recompiling cc1 should not force recompilation of libgcc.a.\n-# If you want to force recompilation, delete libgcc.a.\n-libgcc.ready: $(GCC_PASSES) $(LANGUAGES) stmp-int-hdrs $(STMP_FIXPROTO)\n-\t-if [ -f libgcc.ready ] ; then \\\n-\t\ttrue; \\\n-\telse \\\n-\t\ttouch libgcc.ready; \\\n-\tfi\n-\n LIB2ADD = $(LIB2ADDEH) $(LIB2FUNCS_EXTRA) $(LANG_LIB2FUNCS)\n \n libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) xgcc$(exeext)\n@@ -970,9 +960,15 @@ libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) xgcc$(exeext)\n \tMULTILIBS=`$(GCC_FOR_TARGET) --print-multi-lib` \\\n \tEXTRA_MULTILIB_PARTS='$(EXTRA_MULTILIB_PARTS)' \\\n \t  $(SHELL) mklibgcc > tmp-libgcc.mk\n-\t$(SHELL) $(srcdir)/move-if-change tmp-libgcc.mk libgcc.mk\n+\tmv tmp-libgcc.mk libgcc.mk\n+\n+# All the things that might cause us to want to recompile bits of libgcc.\n+LIBGCC_DEPS = $(GCC_PASSES) $(LANGUAGES) stmp-int-hdrs $(STMP_FIXPROTO) \\\n+\tlibgcc.mk $(srcdir)/libgcc1.c $(srcdir)/libgcc2.c $(CONFIG_H) \\\n+\t$(MACHMODE_H) longlong.h frame.h gbl-ctors.h config.status \\\n+\tstmp-int-hdrs tsystem.h $(FPBIT) $(DPBIT) $(LIB2ADD)\n \n-libgcc.a: libgcc.ready libgcc.mk $(FPBIT) $(DPBIT) $(LIB2ADD)\n+libgcc.a: $(LIBGCC_DEPS)\n \t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t  HOST_PREFIX=\"$(HOST_PREFIX)\" HOST_PREFIX_1=\"$(HOST_PREFIX_1)\" \\\n \t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\\n@@ -1003,7 +999,7 @@ s-mlib: $(srcdir)/genmultilib Makefile\n \ttouch s-mlib\n \n # Build multiple copies of libgcc.a, one for each target switch.\n-stmp-multilib: libgcc.ready libgcc.mk $(FPBIT) $(DPBIT)\n+stmp-multilib: $(LIBGCC_DEPS)\n \t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t  HOST_PREFIX=\"$(HOST_PREFIX)\" HOST_PREFIX_1=\"$(HOST_PREFIX_1)\" \\\n \t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\\n@@ -2137,7 +2133,7 @@ mostlyclean: $(INTL_MOSTLYCLEAN) lang.mostlyclean\n # that don't exist in the distribution.\n INTL_CLEAN = intl.clean\n clean: mostlyclean $(INTL_CLEAN) lang.clean\n-\t-rm -f libgcc.a libgcc.ready\n+\t-rm -f libgcc.a\n \t-rm -f *.dvi\n \t-rm -f */*.dvi\n \t-if [ -f md.pre-cpp ]; then \\"}, {"sha": "c46c63875824cb90a209f8d50a55cdd87da3eb41", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 20, "deletions": 46, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aceb30d9029b71a65670c044a9ef43a501786fa/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aceb30d9029b71a65670c044a9ef43a501786fa/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=2aceb30d9029b71a65670c044a9ef43a501786fa", "patch": "@@ -65,13 +65,13 @@ make_compile='$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t  LANGUAGES=\"$(LANGUAGES)\"'\n \n # Dependancies for libgcc1.c\n-libgcc1_c_dep='$(srcdir)/libgcc1.c $(CONFIG_H)'\n+libgcc1_c_dep='stmp-dirs $(srcdir)/libgcc1.c $(CONFIG_H)'\n \n # Dependancies for libgcc2.c\n-libgcc2_c_dep='$(srcdir)/libgcc2.c $(CONFIG_H) $(MACHMODE_H) longlong.h frame.h gbl-ctors.h config.status stmp-int-hdrs tsystem.h'\n+libgcc2_c_dep='stmp-dirs $(srcdir)/libgcc2.c $(CONFIG_H) $(MACHMODE_H) longlong.h frame.h gbl-ctors.h config.status stmp-int-hdrs tsystem.h'\n \n # Dependancies for fp-bit.c\n-fpbit_c_dep='config.status tsystem.h'\n+fpbit_c_dep='stmp-dirs config.status tsystem.h'\n \n #\n # Build libgcc1 components.\n@@ -94,12 +94,7 @@ case X\"$LIBGCC1\" in\n         flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n         out=\"libgcc/${dir}/${name}${objext}\"\n \n-\tif [ $dir = . ]; then\n-\t  libgccdir=\"libgcc\"\n-\telse\n-\t  libgccdir=\"libgcc/${dir}\"\n-\tfi\n-        echo ${out}: ${libgccdir} '$(srcdir)/config/$(LIB1ASMSRC)'\n+        echo ${out}: stmp-dirs '$(srcdir)/config/$(LIB1ASMSRC)'\n \techo \"\t$gcc_compile\" $flags -DL$name -xassembler-with-cpp \\\n \t  -c '$(srcdir)/config/$(LIB1ASMSRC)' -o $out\n       done\n@@ -161,12 +156,7 @@ for name in $LIB2FUNCS; do\n     flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n     out=\"libgcc/${dir}/${name}${objext}\"\n \n-    if [ $dir = . ]; then\n-      libgccdir=\"libgcc\"\n-    else\n-      libgccdir=\"libgcc/${dir}\"\n-    fi\n-    echo $out: $libgccdir $libgcc2_c_dep\n+    echo $out: $libgcc2_c_dep\n     echo \"\t$gcc_compile\" '$(MAYBE_USE_COLLECT2)' $flags -DL$name \\\n       -c '$(srcdir)/libgcc2.c' -o $out\n   done\n@@ -179,12 +169,7 @@ for name in $LIB2FUNCS_EH; do\n     flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n     out=\"libgcc/${dir}/${name}${objext}\"\n \n-    if [ $dir = . ]; then\n-      libgccdir=\"libgcc\"\n-    else\n-      libgccdir=\"libgcc/${dir}\"\n-    fi\n-    echo $out: $libgccdir $libgcc2_c_dep\n+    echo $out: $libgcc2_c_dep\n     echo \"\t$gcc_compile\" '$(MAYBE_USE_COLLECT2)' -fexceptions \\\n       $flags -DL$name -c '$(srcdir)/libgcc2.c' -o $out\n   done\n@@ -198,12 +183,7 @@ if [ \"$FPBIT\" ]; then\n       flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n       out=\"libgcc/${dir}/${name}${objext}\"\n \n-      if [ $dir = . ]; then\n-\tlibgccdir=\"libgcc\"\n-      else\n-\tlibgccdir=\"libgcc/${dir}\"\n-      fi\n-      echo $out: $libgccdir $FPBIT $fpbit_c_dep\n+      echo $out: $FPBIT $fpbit_c_dep\n       echo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n \t-c $FPBIT -o $out\n     done\n@@ -218,12 +198,7 @@ if [ \"$DPBIT\" ]; then\n       flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n       out=\"libgcc/${dir}/${name}${objext}\"\n \n-      if [ $dir = . ]; then\n-\tlibgccdir=\"libgcc\"\n-      else\n-\tlibgccdir=\"libgcc/${dir}\"\n-      fi\n-      echo $out: $libgccdir $DPBIT $fpbit_c_dep\n+      echo $out: $DPBIT $fpbit_c_dep\n       echo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name \\\n \t-c $DPBIT -o $out\n     done\n@@ -239,7 +214,7 @@ for file in $LIB2ADD; do\n     fprime=`cat $file`\n     for f in $fprime; do\n \n-      lastout=\"force\"\n+      lastout=\"stmp-dirs $file\"\n       for ml in $MULTILIBS; do\n         dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n         flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n@@ -268,12 +243,7 @@ for file in $LIB2ADD; do\n \tflags=\"$flags -xassembler-with-cpp\"\n       fi\n \n-      if [ $dir = . ]; then\n-\tlibgccdir=\"libgcc\"\n-      else\n-\tlibgccdir=\"libgcc/${dir}\"\n-      fi\n-      echo $out: $libgccdir $file\n+      echo $out: stmp-dirs $file\n       echo \"\t$gcc_compile\" $flags -c $file -o $out\n     done\n     libgcc2_objs=\"$libgcc2_objs ${oname}${objext}\"\n@@ -305,21 +275,25 @@ for ml in $MULTILIBS; do\n done\n \n echo \"\"\n-all=\"libgcc\"\n+all=stmp-dirs\n+dirs=libgcc\n \n-echo \"libgcc:; -mkdir libgcc\"\n for ml in $MULTILIBS; do\n   dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n   if [ $dir != . ]; then\n-    echo \"libgcc/${dir}: libgcc; -mkdir libgcc/${dir}\"\n-    echo \"${dir}:; -mkdir ${dir}\"\n-    all=\"$all ${dir} libgcc/${dir}\"\n+    dirs=\"$dirs ${dir} libgcc/${dir}\"\n   fi\n   all=\"$all ${dir}/libgcc.a\"\n done\n \n+echo 'stmp-dirs: force'\n+echo '\tfor d in '\"$dirs\"'; do \\'\n+echo '\t  if [ -d $$d ]; then true; else mkdir $$d; fi \\'\n+echo '\tdone'\n+echo '\tif [ -f stmp-dirs ]; then true; else touch stmp-dirs; fi'\n+\n for f in $EXTRA_MULTILIB_PARTS; do\n-  lastout=\"force\"\n+  lastout=\"stmp-dirs force\"\n   for ml in $MULTILIBS; do\n     dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n     flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;"}]}