{"sha": "4a582c9fda392a8218c427c60fe6378956de1831", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE1ODJjOWZkYTM5MmE4MjE4YzQyN2M2MGZlNjM3ODk1NmRlMTgzMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-02-15T08:31:21Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-02-15T08:31:21Z"}, "message": "volatile10.adb: New case.\n\n\t* gnat.dg/volatile10.adb: New case.\n\t* gnat.dg/volatile10_pkg.ads: New helper.\n\nFrom-SVN: r184257", "tree": {"sha": "b228fa61c83988bd772d7a1ed811abf657a86589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b228fa61c83988bd772d7a1ed811abf657a86589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a582c9fda392a8218c427c60fe6378956de1831", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a582c9fda392a8218c427c60fe6378956de1831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a582c9fda392a8218c427c60fe6378956de1831", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a582c9fda392a8218c427c60fe6378956de1831/comments", "author": null, "committer": null, "parents": [{"sha": "0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f952eb4cc0fe7a0a7b0a60e093f8c1f6e13dd75"}], "stats": {"total": 94, "additions": 77, "deletions": 17}, "files": [{"sha": "9b62238957de36342dbdfab4bb2bd47dfb12d7c5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a582c9fda392a8218c427c60fe6378956de1831/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a582c9fda392a8218c427c60fe6378956de1831/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4a582c9fda392a8218c427c60fe6378956de1831", "patch": "@@ -1,3 +1,9 @@\n+2012-02-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (call_to_gnu): Create the temporary for the\n+\treturn value in the by-reference return type case if this isn't the\n+\texpression of an object declaration. \ufffdTidy up.\n+\n 2012-02-09  Tristan Gingold  <gingold@adacore.com>\n \n \t* gcc-interface/Makefile.in: Remove .sym rule (not used)."}, {"sha": "e310004b216281b40475b2e8fd38d62092e39019", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 27, "deletions": 17, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a582c9fda392a8218c427c60fe6378956de1831/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a582c9fda392a8218c427c60fe6378956de1831/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=4a582c9fda392a8218c427c60fe6378956de1831", "patch": "@@ -3642,24 +3642,34 @@ call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target,\n       went_into_elab_proc = true;\n     }\n \n-  /* First, create the temporary for the return value if we need it: for a\n-     variable-sized return type if there is no target and this is not an\n-     object declaration, or else there is a target and it is a slice or an\n-     array with fixed size, as the gimplifier doesn't handle these cases;\n-     otherwise for a function with copy-in/copy-out parameters if there is\n-     no target, because we need to preserve the return value before copying\n-     back the parameters.  This must be done before we push a binding level\n-     around the call as we will pop it before copying the return value.  */\n+  /* First, create the temporary for the return value when:\n+\n+       1. There is no target and the function has copy-in/copy-out parameters,\n+\t  because we need to preserve the return value before copying back the\n+\t  parameters.\n+\n+       2. There is no target and this is not an object declaration, and the\n+\t  return type is by-reference or has variable size, because in these\n+\t  cases the gimplifier cannot create the temporary.\n+\n+       3. There is a target and it is a slice or an array with fixed size,\n+\t  and the return type has variable size, because the gimplifier\n+\t  doesn't handle these cases.\n+\n+     This must be done before we push a binding level around the call, since\n+     we will pop it before copying the return value.  */\n   if (function_call\n-      && ((TREE_CODE (TYPE_SIZE (gnu_result_type)) != INTEGER_CST\n-\t   && ((!gnu_target\n-\t\t&& Nkind (Parent (gnat_node)) != N_Object_Declaration)\n-\t       || (gnu_target\n-\t\t   && (TREE_CODE (gnu_target) == ARRAY_RANGE_REF\n-\t\t       || (TREE_CODE (TREE_TYPE (gnu_target)) == ARRAY_TYPE\n-\t\t\t   && TREE_CODE (TYPE_SIZE (TREE_TYPE (gnu_target)))\n-\t\t\t      == INTEGER_CST)))))\n-\t  || (!gnu_target && TYPE_CI_CO_LIST (gnu_subprog_type))))\n+      && ((!gnu_target && TYPE_CI_CO_LIST (gnu_subprog_type))\n+\t  || (!gnu_target\n+\t      && Nkind (Parent (gnat_node)) != N_Object_Declaration\n+\t      && (TREE_ADDRESSABLE (gnu_result_type)\n+\t\t  || TREE_CODE (TYPE_SIZE (gnu_result_type)) != INTEGER_CST))\n+\t  || (gnu_target\n+\t      && (TREE_CODE (gnu_target) == ARRAY_RANGE_REF\n+\t\t  || (TREE_CODE (TREE_TYPE (gnu_target)) == ARRAY_TYPE\n+\t\t      && TREE_CODE (TYPE_SIZE (TREE_TYPE (gnu_target)))\n+\t\t\t == INTEGER_CST))\n+\t      && TREE_CODE (TYPE_SIZE (gnu_result_type)) != INTEGER_CST)))\n     gnu_retval = create_temporary (\"R\", gnu_result_type);\n \n   /* Create the list of the actual parameters as GCC expects it, namely a"}, {"sha": "a90a6ae76a78871bf8201ed011680a3af7fa2e75", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a582c9fda392a8218c427c60fe6378956de1831/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a582c9fda392a8218c427c60fe6378956de1831/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a582c9fda392a8218c427c60fe6378956de1831", "patch": "@@ -1,3 +1,8 @@\n+2012-02-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/volatile10.adb: New case.\n+\t* gnat.dg/volatile10_pkg.ads: New helper.\n+\n 2012-02-14  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/ext/attrib43.C: New."}, {"sha": "5f295b9664421f573cdccfc75c82e3a7bac097e1", "filename": "gcc/testsuite/gnat.dg/volatile10.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a582c9fda392a8218c427c60fe6378956de1831/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a582c9fda392a8218c427c60fe6378956de1831/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10.adb?ref=4a582c9fda392a8218c427c60fe6378956de1831", "patch": "@@ -0,0 +1,10 @@\n+-- { dg-do compile }\r\n+\r\n+with Volatile10_Pkg; use Volatile10_Pkg;\r\n+\r\n+procedure Volatile10 is\r\n+   N : Num;\r\n+begin\r\n+   N := F.N1;\r\n+   N := F.N2;\r\n+end;\r"}, {"sha": "3ad2a79635cf06a5b8f7ec1da17b89546ab7c5df", "filename": "gcc/testsuite/gnat.dg/volatile10_pkg.ads", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a582c9fda392a8218c427c60fe6378956de1831/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a582c9fda392a8218c427c60fe6378956de1831/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvolatile10_pkg.ads?ref=4a582c9fda392a8218c427c60fe6378956de1831", "patch": "@@ -0,0 +1,29 @@\n+package Volatile10_Pkg is\r\n+\r\n+   type Num is mod 2**9;\r\n+\r\n+   type Rec is record\r\n+      B1  : Boolean;\r\n+      N1  : Num;\r\n+      B2  : Boolean;\r\n+      N2  : Num;\r\n+      B3  : Boolean;\r\n+      B4  : Boolean;\r\n+      B5  : Boolean;\r\n+      B6  : Boolean;\r\n+      B7  : Boolean;\r\n+      B8  : Boolean;\r\n+      B9  : Boolean;\r\n+      B10 : Boolean;\r\n+      B11 : Boolean;\r\n+      B12 : Boolean;\r\n+      B13 : Boolean;\r\n+      B14 : Boolean;\r\n+   end record;\r\n+   pragma Pack (Rec);\r\n+   for Rec'Size use 32;\r\n+   pragma Volatile(Rec);\r\n+\r\n+   function F return Rec;\r\n+\r\n+end Volatile10_Pkg;\r"}]}