{"sha": "b0ea9c011d246200641ca2d085a0337d8b2af0ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBlYTljMDExZDI0NjIwMDY0MWNhMmQwODVhMDMzN2Q4YjJhZjBlZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-03-16T11:24:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-03-16T11:24:36Z"}, "message": "binders.cc: Remove explicit instantiations for non-weak systems.\n\n2005-03-16  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/20_util/functional/binders.cc: Remove explicit\n\tinstantiations for non-weak systems.\n\t* testsuite/20_util/memory/allocator/1.cc: Likewise.\n\t* testsuite/20_util/memory/allocator/10378.cc: Likewise.\n\t* testsuite/20_util/memory/allocator/10416.cc: Likewise.\n\t* testsuite/20_util/memory/allocator/8230.cc: Likewise.\n\t* testsuite/20_util/utility/rel_ops.cc: Likewise.\n\t* testsuite/22_locale/ctype/is/char/2.cc: Likewise.\n\t* testsuite/22_locale/ctype/is/wchar_t/2.cc: Likewise.\n\t* testsuite/23_containers/deque/cons/1.cc: Likewise.\n\t* testsuite/23_containers/deque/cons/2.cc: Likewise.\n\t* testsuite/23_containers/deque/invalidation/1.cc: Likewise.\n\t* testsuite/23_containers/deque/invalidation/2.cc: Likewise.\n\t* testsuite/23_containers/deque/invalidation/3.cc: Likewise.\n\t* testsuite/23_containers/deque/invalidation/4.cc: Likewise.\n\t* testsuite/23_containers/deque/modifiers/swap.cc: Likewise.\n\t* testsuite/23_containers/deque/operators/1.cc: Likewise.\n\t* testsuite/23_containers/list/capacity/1.cc: Likewise.\n\t* testsuite/23_containers/list/cons/1.cc: Likewise.\n\t* testsuite/23_containers/list/cons/2.cc: Likewise.\n\t* testsuite/23_containers/list/cons/3.cc: Likewise.\n\t* testsuite/23_containers/list/cons/4.cc: Likewise.\n\t* testsuite/23_containers/list/cons/5.cc: Likewise.\n\t* testsuite/23_containers/list/cons/6.cc: Likewise.\n\t* testsuite/23_containers/list/cons/7.cc: Likewise.\n\t* testsuite/23_containers/list/cons/8.cc: Likewise.\n\t* testsuite/23_containers/list/cons/9.cc: Likewise.\n\t* testsuite/23_containers/list/invalidation/1.cc: Likewise.\n\t* testsuite/23_containers/list/invalidation/2.cc: Likewise.\n\t* testsuite/23_containers/list/invalidation/3.cc: Likewise.\n\t* testsuite/23_containers/list/invalidation/4.cc: Likewise.\n\t* testsuite/23_containers/list/modifiers/1.cc: Likewise.\n\t* testsuite/23_containers/list/modifiers/2.cc: Likewise.\n\t* testsuite/23_containers/list/modifiers/3.cc: Likewise.\n\t* testsuite/23_containers/list/operators/1.cc: Likewise.\n\t* testsuite/23_containers/list/operators/2.cc: Likewise.\n\t* testsuite/23_containers/list/operators/3.cc: Likewise.\n\t* testsuite/23_containers/list/operators/4.cc: Likewise.\n\t* testsuite/23_containers/map/insert/1.cc: Likewise.\n\t* testsuite/23_containers/map/invalidation/1.cc: Likewise.\n\t* testsuite/23_containers/map/invalidation/2.cc: Likewise.\n\t* testsuite/23_containers/map/modifiers/swap.cc: Likewise.\n\t* testsuite/23_containers/map/operators/1.cc: Likewise.\n\t* testsuite/23_containers/multimap/invalidation/1.cc: Likewise.\n\t* testsuite/23_containers/multimap/invalidation/2.cc: Likewise.\n\t* testsuite/23_containers/multimap/modifiers/swap.cc: Likewise.\n\t* testsuite/23_containers/multiset/insert/1.cc: Likewise.\n\t* testsuite/23_containers/multiset/insert/2.cc: Likewise.\n\t* testsuite/23_containers/multiset/invalidation/1.cc: Likewise.\n\t* testsuite/23_containers/multiset/invalidation/2.cc: Likewise.\n\t* testsuite/23_containers/multiset/modifiers/swap.cc: Likewise.\n\t* testsuite/23_containers/priority_queue/members/7161.cc: Likewise.\n\t* testsuite/23_containers/queue/members/7157.cc: Likewise.\n\t* testsuite/23_containers/set/insert/1.cc: Likewise.\n\t* testsuite/23_containers/set/invalidation/1.cc: Likewise.\n\t* testsuite/23_containers/set/invalidation/2.cc: Likewise.\n\t* testsuite/23_containers/set/modifiers/swap.cc: Likewise.\n\t* testsuite/23_containers/stack/members/7158.cc: Likewise.\n\t* testsuite/23_containers/vector/bool/6886.cc: Likewise.\n\t* testsuite/23_containers/vector/capacity/1.cc: Likewise.\n\t* testsuite/23_containers/vector/capacity/8230.cc: Likewise.\n\t* testsuite/23_containers/vector/cons/1.cc: Likewise.\n\t* testsuite/23_containers/vector/cons/2.cc: Likewise.\n\t* testsuite/23_containers/vector/cons/3.cc: Likewise.\n\t* testsuite/23_containers/vector/cons/6513.cc: Likewise.\n\t* testsuite/23_containers/vector/element_access/1.cc: Likewise.\n\t* testsuite/23_containers/vector/invalidation/1.cc: Likewise.\n\t* testsuite/23_containers/vector/invalidation/2.cc: Likewise.\n\t* testsuite/23_containers/vector/invalidation/3.cc: Likewise.\n\t* testsuite/23_containers/vector/invalidation/4.cc: Likewise.\n\t* testsuite/23_containers/vector/modifiers/1.cc: Likewise.\n\t* testsuite/23_containers/vector/modifiers/2.cc: Likewise.\n\t* testsuite/23_containers/vector/modifiers/swap.cc: Likewise.\n\t* testsuite/23_containers/vector/resize/1.cc: Likewise.\n\t* testsuite/24_iterators/back_insert_iterator.cc: Likewise.\n\t* testsuite/24_iterators/front_insert_iterator.cc: Likewise.\n\t* testsuite/24_iterators/insert_iterator.cc: Likewise.\n\t* testsuite/24_iterators/iterator.cc: Likewise.\n\t* testsuite/25_algorithms/copy/1.cc: Likewise.\n\t* testsuite/25_algorithms/copy/2.cc: Likewise.\n\t* testsuite/25_algorithms/copy/3.cc: Likewise.\n\t* testsuite/25_algorithms/copy/4.cc: Likewise.\n\t* testsuite/25_algorithms/equal.cc: Likewise.\n\t* testsuite/25_algorithms/fill/1.cc: Likewise.\n\t* testsuite/25_algorithms/fill/2.cc: Likewise.\n\t* testsuite/25_algorithms/min_max.cc: Likewise.\n\t* testsuite/25_algorithms/rotate.cc: Likewise.\n\t* testsuite/25_algorithms/unique/1.cc: Likewise.\n\t* testsuite/25_algorithms/unique/2.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekpos/wchar_t/9874.cc: Likewise.\n\t* testsuite/ext/concept_checks.cc: Likewise.\n\t* testsuite/ext/hash_map/1.cc: Likewise.\n\t* testsuite/ext/hash_set/1.cc: Likewise.\n\t* testsuite/ext/rope/1.cc: Likewise.\n\t* testsuite/ext/rope/2.cc: Likewise.\n\t* testsuite/ext/rope/3.cc: Likewise.\n\t* testsuite/thread/pthread1.cc: Likewise.\n\t* testsuite/thread/pthread4.cc: Likewise.\n\t* testsuite/thread/pthread5.cc: Likewise.\n\t* testsuite/thread/pthread6.cc: Likewise.\n\t* testsuite/thread/pthread7-rope.cc: Likewise.\n\nFrom-SVN: r96551", "tree": {"sha": "9f09f929c327b5f92dacc8eff9b10d97e0b9b7e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f09f929c327b5f92dacc8eff9b10d97e0b9b7e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0ea9c011d246200641ca2d085a0337d8b2af0ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0ea9c011d246200641ca2d085a0337d8b2af0ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0ea9c011d246200641ca2d085a0337d8b2af0ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0ea9c011d246200641ca2d085a0337d8b2af0ef/comments", "author": null, "committer": null, "parents": [{"sha": "b8c4a565c9b541d9568c1cba2e8266fc5c37113f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c4a565c9b541d9568c1cba2e8266fc5c37113f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8c4a565c9b541d9568c1cba2e8266fc5c37113f"}], "stats": {"total": 858, "additions": 209, "deletions": 649}, "files": [{"sha": "540c73ab2a3353985b40f87a881f1b0d6e6c7b6b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,3 +1,107 @@\n+2005-03-16  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/20_util/functional/binders.cc: Remove explicit\n+\tinstantiations for non-weak systems.\n+\t* testsuite/20_util/memory/allocator/1.cc: Likewise.\n+\t* testsuite/20_util/memory/allocator/10378.cc: Likewise.\n+\t* testsuite/20_util/memory/allocator/10416.cc: Likewise.\n+\t* testsuite/20_util/memory/allocator/8230.cc: Likewise.\n+\t* testsuite/20_util/utility/rel_ops.cc: Likewise.\n+\t* testsuite/22_locale/ctype/is/char/2.cc: Likewise.\n+\t* testsuite/22_locale/ctype/is/wchar_t/2.cc: Likewise.\n+\t* testsuite/23_containers/deque/cons/1.cc: Likewise.\n+\t* testsuite/23_containers/deque/cons/2.cc: Likewise.\n+\t* testsuite/23_containers/deque/invalidation/1.cc: Likewise.\n+\t* testsuite/23_containers/deque/invalidation/2.cc: Likewise.\n+\t* testsuite/23_containers/deque/invalidation/3.cc: Likewise.\n+\t* testsuite/23_containers/deque/invalidation/4.cc: Likewise.\n+\t* testsuite/23_containers/deque/modifiers/swap.cc: Likewise.\n+\t* testsuite/23_containers/deque/operators/1.cc: Likewise.\n+\t* testsuite/23_containers/list/capacity/1.cc: Likewise.\n+\t* testsuite/23_containers/list/cons/1.cc: Likewise.\n+\t* testsuite/23_containers/list/cons/2.cc: Likewise.\n+\t* testsuite/23_containers/list/cons/3.cc: Likewise.\n+\t* testsuite/23_containers/list/cons/4.cc: Likewise.\n+\t* testsuite/23_containers/list/cons/5.cc: Likewise.\n+\t* testsuite/23_containers/list/cons/6.cc: Likewise.\n+\t* testsuite/23_containers/list/cons/7.cc: Likewise.\n+\t* testsuite/23_containers/list/cons/8.cc: Likewise.\n+\t* testsuite/23_containers/list/cons/9.cc: Likewise.\n+\t* testsuite/23_containers/list/invalidation/1.cc: Likewise.\n+\t* testsuite/23_containers/list/invalidation/2.cc: Likewise.\n+\t* testsuite/23_containers/list/invalidation/3.cc: Likewise.\n+\t* testsuite/23_containers/list/invalidation/4.cc: Likewise.\n+\t* testsuite/23_containers/list/modifiers/1.cc: Likewise.\n+\t* testsuite/23_containers/list/modifiers/2.cc: Likewise.\n+\t* testsuite/23_containers/list/modifiers/3.cc: Likewise.\n+\t* testsuite/23_containers/list/operators/1.cc: Likewise.\n+\t* testsuite/23_containers/list/operators/2.cc: Likewise.\n+\t* testsuite/23_containers/list/operators/3.cc: Likewise.\n+\t* testsuite/23_containers/list/operators/4.cc: Likewise.\n+\t* testsuite/23_containers/map/insert/1.cc: Likewise.\n+\t* testsuite/23_containers/map/invalidation/1.cc: Likewise.\n+\t* testsuite/23_containers/map/invalidation/2.cc: Likewise.\n+\t* testsuite/23_containers/map/modifiers/swap.cc: Likewise.\n+\t* testsuite/23_containers/map/operators/1.cc: Likewise.\n+\t* testsuite/23_containers/multimap/invalidation/1.cc: Likewise.\n+\t* testsuite/23_containers/multimap/invalidation/2.cc: Likewise.\n+\t* testsuite/23_containers/multimap/modifiers/swap.cc: Likewise.\n+\t* testsuite/23_containers/multiset/insert/1.cc: Likewise.\n+\t* testsuite/23_containers/multiset/insert/2.cc: Likewise.\n+\t* testsuite/23_containers/multiset/invalidation/1.cc: Likewise.\n+\t* testsuite/23_containers/multiset/invalidation/2.cc: Likewise.\n+\t* testsuite/23_containers/multiset/modifiers/swap.cc: Likewise.\n+\t* testsuite/23_containers/priority_queue/members/7161.cc: Likewise.\n+\t* testsuite/23_containers/queue/members/7157.cc: Likewise.\n+\t* testsuite/23_containers/set/insert/1.cc: Likewise.\n+\t* testsuite/23_containers/set/invalidation/1.cc: Likewise.\n+\t* testsuite/23_containers/set/invalidation/2.cc: Likewise.\n+\t* testsuite/23_containers/set/modifiers/swap.cc: Likewise.\n+\t* testsuite/23_containers/stack/members/7158.cc: Likewise.\n+\t* testsuite/23_containers/vector/bool/6886.cc: Likewise.\n+\t* testsuite/23_containers/vector/capacity/1.cc: Likewise.\n+\t* testsuite/23_containers/vector/capacity/8230.cc: Likewise.\n+\t* testsuite/23_containers/vector/cons/1.cc: Likewise.\n+\t* testsuite/23_containers/vector/cons/2.cc: Likewise.\n+\t* testsuite/23_containers/vector/cons/3.cc: Likewise.\n+\t* testsuite/23_containers/vector/cons/6513.cc: Likewise.\t\n+\t* testsuite/23_containers/vector/element_access/1.cc: Likewise.\n+\t* testsuite/23_containers/vector/invalidation/1.cc: Likewise.\n+\t* testsuite/23_containers/vector/invalidation/2.cc: Likewise.\n+\t* testsuite/23_containers/vector/invalidation/3.cc: Likewise.\n+\t* testsuite/23_containers/vector/invalidation/4.cc: Likewise.\n+\t* testsuite/23_containers/vector/modifiers/1.cc: Likewise.\n+\t* testsuite/23_containers/vector/modifiers/2.cc: Likewise.\n+\t* testsuite/23_containers/vector/modifiers/swap.cc: Likewise.\t\n+\t* testsuite/23_containers/vector/resize/1.cc: Likewise.\n+\t* testsuite/24_iterators/back_insert_iterator.cc: Likewise.\n+\t* testsuite/24_iterators/front_insert_iterator.cc: Likewise.\n+\t* testsuite/24_iterators/insert_iterator.cc: Likewise.\n+\t* testsuite/24_iterators/iterator.cc: Likewise.\n+\t* testsuite/25_algorithms/copy/1.cc: Likewise.\n+\t* testsuite/25_algorithms/copy/2.cc: Likewise.\n+\t* testsuite/25_algorithms/copy/3.cc: Likewise.\n+\t* testsuite/25_algorithms/copy/4.cc: Likewise.\t\n+\t* testsuite/25_algorithms/equal.cc: Likewise.\n+\t* testsuite/25_algorithms/fill/1.cc: Likewise.\n+\t* testsuite/25_algorithms/fill/2.cc: Likewise.\n+\t* testsuite/25_algorithms/min_max.cc: Likewise.\n+\t* testsuite/25_algorithms/rotate.cc: Likewise.\n+\t* testsuite/25_algorithms/unique/1.cc: Likewise.\n+\t* testsuite/25_algorithms/unique/2.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekpos/wchar_t/9874.cc: Likewise.\n+\t* testsuite/ext/concept_checks.cc: Likewise.\n+\t* testsuite/ext/hash_map/1.cc: Likewise.\n+\t* testsuite/ext/hash_set/1.cc: Likewise.\n+\t* testsuite/ext/rope/1.cc: Likewise.\n+\t* testsuite/ext/rope/2.cc: Likewise.\n+\t* testsuite/ext/rope/3.cc: Likewise.\n+\t* testsuite/thread/pthread1.cc: Likewise.\n+\t* testsuite/thread/pthread4.cc: Likewise.\n+\t* testsuite/thread/pthread5.cc: Likewise.\n+\t* testsuite/thread/pthread6.cc: Likewise.\n+\t* testsuite/thread/pthread7-rope.cc: Likewise.\n+\n 2005-03-15  Zack Weinberg  <zack@codesourcery.com>\n \n \t* include/Makefile.am (c++config.h): Depend on DATESTAMP from gcc"}, {"sha": "dfcd41957d59abddfb38e3cb7cd744d559c98ad7", "filename": "libstdc++-v3/testsuite/20_util/functional/binders.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunctional%2Fbinders.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunctional%2Fbinders.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunctional%2Fbinders.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -43,11 +43,6 @@ void test01()\n \t   std::bind2nd(std::mem_fun_ref(&Elem::modify), 42));\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<Elem>;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "28da99735ea0e4612abc871fd74b60ef90e79110", "filename": "libstdc++-v3/testsuite/20_util/memory/allocator/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -43,11 +43,6 @@ void operator delete(void *v) throw()\n   return std::free(v);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<gnu>;\n-#endif\n-\n void test01()\n {\n   bool test __attribute__((unused)) = true;"}, {"sha": "308a2e126e8ef5fc83c8f9fd6ba9949e4a0f3510", "filename": "libstdc++-v3/testsuite/20_util/memory/allocator/10378.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F10378.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F10378.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F10378.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,11 +39,6 @@ void test01()\n   uniset.push_back(Bob());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<Bob> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "e83e46c63bf3b1e538f04f77a38ab29faef1afa3", "filename": "libstdc++-v3/testsuite/20_util/memory/allocator/14176.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F14176.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F14176.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F14176.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,11 +30,6 @@ void test02()\n   a.deallocate(p, len);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "d8d5f691963970cc101f1fb4d9cb3b827f0ba723", "filename": "libstdc++-v3/testsuite/20_util/memory/allocator/8230.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F8230.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F8230.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fallocator%2F8230.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -47,11 +47,6 @@ void test02()\n   VERIFY( test );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "2a121ee826434efa723c10c64df217f0502a45f4", "filename": "libstdc++-v3/testsuite/20_util/utility/rel_ops.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Futility%2Frel_ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Futility%2Frel_ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Futility%2Frel_ops.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2002-04-13  Paolo Carlini  <pcarlini@unitus.it>\n \n-// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,11 +38,6 @@ void test01()\n   vi >= v.begin();\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "90c8a850e5a5dc0dfec8eebc6a445febf2048799", "filename": "libstdc++-v3/testsuite/22_locale/ctype/is/char/2.cc", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fchar%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,5 +1,6 @@\n // { dg-do run { xfail *-*-![linux]* } }\n-// Copyright (C) 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -97,10 +98,6 @@ void test02()\n   VERIFY( v_c != v_de );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::ctype_base::mask>;\n-#endif\n int main() \n {\n   test02();"}, {"sha": "658135b5550248b6233627fd31b511da44f4ce95", "filename": "libstdc++-v3/testsuite/22_locale/ctype/is/wchar_t/2.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype%2Fis%2Fwchar_t%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,5 +1,6 @@\n // { dg-do run { xfail *-*-![linux]* } }\n-// Copyright (C) 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -97,11 +98,6 @@ void test02()\n   VERIFY( v_c != v_de );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::ctype_base::mask>;\n-#endif\n-\n int main() \n {\n   test02();"}, {"sha": "3e3458672a2c7b52c903e62ccc678884b26de066", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-12-27 pme\n //\n-// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,12 +42,6 @@ test01()\n   assert_count (0);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<__gnu_test::counter>;\n-template class __gnu_cxx::__mt_alloc<__gnu_test::counter*>;\n-#endif\n-\n int main()\n {\n   // specific bug fix checks"}, {"sha": "81301a560a628a991bee5454d14089512d88bd65", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/2.cc", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-12-27 pme\n //\n-// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -499,14 +499,6 @@ test_copy_ctor_exception_safety()\n   // teardown\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-template class __gnu_cxx::__mt_alloc<int*>;\n-template class __gnu_cxx::__mt_alloc<__gnu_test::copy_tracker>;\n-template class __gnu_cxx::__mt_alloc<__gnu_test::copy_tracker*>;\n-#endif\n-\n int main()\n {\n   // basic functionality and standard conformance checks"}, {"sha": "6bfd074523a8242671d6b263ad6961709ce94f53", "filename": "libstdc++-v3/testsuite/23_containers/deque/invalidation/1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Deque iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,12 +46,6 @@ void test01()\n   VERIFY(i._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int*>;\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "ea401a9f725a01188b2f8675ba842026bc84e7a7", "filename": "libstdc++-v3/testsuite/23_containers/deque/invalidation/2.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Deque iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,12 +46,6 @@ void test02()\n   VERIFY(before._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int*>;\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "e6978e02fd288c26e593939d7b8e28a805686f44", "filename": "libstdc++-v3/testsuite/23_containers/deque/invalidation/3.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F3.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Deque iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,12 +56,6 @@ void test03()\n   VERIFY(at._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int*>;\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test03();"}, {"sha": "acbcd3ddec244123139072f5449fdd2fcfc3466b", "filename": "libstdc++-v3/testsuite/23_containers/deque/invalidation/4.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Finvalidation%2F4.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Deque iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -68,12 +68,6 @@ void test04()\n   VERIFY(before._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int*>;\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test04();"}, {"sha": "c835b3036357b683f1a4ffd16cdfe847c9055cbb", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/swap.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation\n+// Copyright (C) 2004, 2005 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -54,11 +54,6 @@ void test02()\n   VERIFY(1 == swap_calls);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-template class __gnu_cxx::__mt_alloc<T>;\n-template class __gnu_cxx::__mt_alloc<T*>;\n-#endif\n-\n // See c++/13658 for background info.\n int main()\n {"}, {"sha": "335cd9e3c84e493650b3301569605d45c03e4789", "filename": "libstdc++-v3/testsuite/23_containers/deque/operators/1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2002-05-18  Paolo Carlini  <pcarlini@unitus.it>\n \n-// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -77,12 +77,6 @@ void test02()\n   VERIFY( constend - beg > 0 );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int*>;\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "fd08e34e062cfd867f40994c3490478636096617", "filename": "libstdc++-v3/testsuite/23_containers/list/capacity/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -59,11 +59,6 @@ test01()\n   VERIFY(list0101.size() == 0);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int\n main()\n {"}, {"sha": "b53a6da6e134a86132c58b3ac1ee74637e1a3bcf", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -71,11 +71,6 @@ test01()\n   // allocator checks?\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<A<B> > >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "a02102bffa79733587f84cbb4d02d2e0e87855c8", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/2.cc", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -75,13 +75,6 @@ test02()\n   VERIFY(list0203.size() == LIST_SIZE);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<A<B> > >;\n-template class __gnu_cxx::__mt_alloc<int>;\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test02(); "}, {"sha": "3b90961aa0c738b07e7cd861f2a144ef95a653d2", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/3.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F3.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -52,11 +52,6 @@ test02D()\n   VERIFY(list0204.size() == LIST_SIZE);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<C> >;\n-#endif\n-\n int main()\n {\n   test02D(); "}, {"sha": "76b147d7227f1029c751e638aef1175e7b709ba3", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/4.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F4.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,11 +58,6 @@ test03()\n   VERIFY(list0302.size() == N);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test03();"}, {"sha": "c44ed9fdd91a2a9228734ea1fdd85e0ead72330b", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/5.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F5.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,11 +49,6 @@ test04()\n   VERIFY(list0401.size() == N);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test04();"}, {"sha": "a44f12783722e1361acb04284b18c7d592c61da8", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/6.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F6.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -62,11 +62,6 @@ test05()\n   VERIFY(list0501.size() == M);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test05();"}, {"sha": "49d74dfb76e4a3011ba96bb34de1a77ec35aa81c", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/7.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F7.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -63,11 +63,6 @@ test06()\n   VERIFY(list0601.size() == SMALL_LIST_SIZE);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test06();"}, {"sha": "430dc9cd2e4c79709279114596e3f3ab7c17ec18", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/8.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F8.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,11 +56,6 @@ test06D()\n   VERIFY(list0604.size() == LIST_SIZE);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<C> >;\n-#endif\n-\n int main()\n {\n   test06D();"}, {"sha": "f83363021feea76e0db114157cf7104d512bec48", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/9.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F9.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,11 +56,6 @@ test07()\n   VERIFY(list0702 == list0701);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test07();"}, {"sha": "4812a56f105d2408eea317603fdf9a3c2dac966a", "filename": "libstdc++-v3/testsuite/23_containers/list/invalidation/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // List iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -53,11 +53,6 @@ void test01()\n   VERIFY(!finish._M_dereferenceable() && !finish._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "a793997edae3db2d3bdd1cc5336ed97c05a6e637", "filename": "libstdc++-v3/testsuite/23_containers/list/invalidation/2.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // List iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,11 +48,6 @@ void test02()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "4691c81fbd515e90343e82752ee73efedb0ed15c", "filename": "libstdc++-v3/testsuite/23_containers/list/invalidation/3.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F3.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // List iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -71,11 +71,6 @@ void test03()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test03();"}, {"sha": "a831b4893de7186724a3d414b550f5abb086c840", "filename": "libstdc++-v3/testsuite/23_containers/list/invalidation/4.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Finvalidation%2F4.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // List iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,11 +48,6 @@ void test04()\n   VERIFY(after2._M_attached_to(&l2));\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test04();"}, {"sha": "ba00fdf95a571145b208fbef981a38939f96b329", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -112,12 +112,6 @@ test03()\n   VERIFY(e == list0301.end());\n }\n \n-#if !__GXX_WEAK__ && defined(_MT_ALLOCATOR_H)\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<__gnu_test::copy_tracker>;\n-template class __gnu_cxx::__mt_alloc<std::_List_node<__gnu_test::copy_tracker> >;\n-#endif\n-\n int main()\n {\n   test03();"}, {"sha": "6aca9d9460e57d5202e2b118e226939db720d870", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/2.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -84,12 +84,6 @@ test02()\n   VERIFY(T::dtorCount() == 0);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<__gnu_test::copy_tracker>;\n-template class __gnu_cxx::__mt_alloc<std::_List_node<__gnu_test::copy_tracker> >;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "720310f5501f5f75de33e8a49b06b5bcfb65a3aa", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/3.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F3.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -116,12 +116,6 @@ test01()\n   VERIFY(k->id() == 1);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<__gnu_test::copy_tracker>;\n-template class __gnu_cxx::__mt_alloc<std::_List_node<__gnu_test::copy_tracker> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "7848fa027c7994704f9c5960d4aa2ea9d4c7097e", "filename": "libstdc++-v3/testsuite/23_containers/list/operators/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -66,11 +66,6 @@ test01()\n   VERIFY(p == list0101.end());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main(void)\n {\n   test01();"}, {"sha": "90af8c52299b0401d375e8ef69637cdad85c6f4d", "filename": "libstdc++-v3/testsuite/23_containers/list/operators/2.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -52,11 +52,6 @@ test02()\n   VERIFY(list0201 == list0204);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "37e14b7140d03730414c6791e8cfdb41cb9786ce", "filename": "libstdc++-v3/testsuite/23_containers/list/operators/3.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F3.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -66,11 +66,6 @@ test03()\n   VERIFY(list0301 == list0304);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main(void)\n {\n   test03();"}, {"sha": "caf13b50bb26d0b704e02263755ec0b85b63e579", "filename": "libstdc++-v3/testsuite/23_containers/list/operators/4.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperators%2F4.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -90,11 +90,6 @@ test04()\n #endif\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test04();"}, {"sha": "33bee2f679b55e0e261dd471ca60b471c74f5611", "filename": "libstdc++-v3/testsuite/23_containers/map/insert/1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finsert%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finsert%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finsert%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-08-23 pme & Sylvain.Pion@sophia.inria.fr\n \n-// Copyright (C) 2001, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -60,12 +60,6 @@ void test01()\n   VERIFY ( M.find(9) != M.end() );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::pair<int const, int> >;\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "2e9c24f8a5e4384f2f433a9c12fcff5eb0e8b1bf", "filename": "libstdc++-v3/testsuite/23_containers/map/invalidation/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Map iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -45,11 +45,6 @@ void test01()\n   VERIFY(!finish._M_dereferenceable() && !finish._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "eac7aeaa37f50abfbf5b3b33a6a1d0f261a2beb5", "filename": "libstdc++-v3/testsuite/23_containers/map/invalidation/2.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finvalidation%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Map iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -64,11 +64,6 @@ void test02()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "889ac69aa558d7900363ce625ebe6babbb5c8c3e", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/swap.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation\n+// Copyright (C) 2004, 2005 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -57,10 +57,6 @@ void test02()\n   VERIFY(1 == swap_calls);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<T const, int> > >;\n-#endif\n-\n // See c++/13658 for background info.\n int main()\n {"}, {"sha": "2da51e86805b1b92e2af2d024034835f91259a89", "filename": "libstdc++-v3/testsuite/23_containers/map/operators/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2000-09-07 bgarcia@laurelnetworks.com\n \n-// Copyright (C) 2000, 2001, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,11 +42,6 @@ void test02()\n     std::cerr << i->second << ' ';\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "69bb529a1efbb05c1bcfe40bb076f207dc468472", "filename": "libstdc++-v3/testsuite/23_containers/multimap/invalidation/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Multimap iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,11 +46,6 @@ void test01()\n   VERIFY(!finish._M_dereferenceable() && !finish._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "1de9d278a77aaa71dfb9eabe34ed093192844824", "filename": "libstdc++-v3/testsuite/23_containers/multimap/invalidation/2.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finvalidation%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Multimap iterator invalidation tests\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -65,11 +65,6 @@ void test02()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int const, int> > >;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "5a17d76a6e006140b3caec2eee117de5a4b2fb1c", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/swap.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation\n+// Copyright (C) 2004, 2005 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -57,10 +57,6 @@ void test02()\n   VERIFY(1 == swap_calls);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<T const, int> > >;\n-#endif\n-\n // See c++/13658 for background info.\n int main()\n {"}, {"sha": "38de31389ead029e51cbdf37ff74d3a87204c704", "filename": "libstdc++-v3/testsuite/23_containers/multiset/insert/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finsert%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finsert%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finsert%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 1999-06-24 bkoz\n \n-// Copyright (C) 1999, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,11 +37,6 @@ bool\n operator<(std::pair<int, int> const& lhs, std::pair<int, int> const& rhs) \n { return lhs.first < rhs.first; }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<int, int> > >;\n-#endif\n-\n int main () \n {\n   bool test __attribute__((unused)) = true;"}, {"sha": "8acf859c07dc36a224f4a6fdc552c6e607b2b96d", "filename": "libstdc++-v3/testsuite/23_containers/multiset/insert/2.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finsert%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finsert%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finsert%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -85,11 +85,6 @@ void test01()\n   VERIFY( ms0 == ms1 );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<int> >;\n-#endif\n-\n int main ()\n {\n   test01();"}, {"sha": "d860183e0dafeb9c983d84de17941232f7377d2d", "filename": "libstdc++-v3/testsuite/23_containers/multiset/invalidation/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Multiset iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -45,11 +45,6 @@ void test01()\n   VERIFY(!finish._M_dereferenceable() && !finish._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<int> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "1a2ec3612b40e9b20bace145a5973cc1ee73dc2d", "filename": "libstdc++-v3/testsuite/23_containers/multiset/invalidation/2.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finvalidation%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Multiset iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -63,11 +63,6 @@ void test02()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<int> >;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "5c9315415ecc806685d47f3a74b71d13b20d45be", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/swap.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation\n+// Copyright (C) 2004, 2005 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -57,10 +57,6 @@ void test02()\n   VERIFY(1 == swap_calls);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<T> >;\n-#endif\n-\n // See c++/13658 for background info.\n int main()\n {"}, {"sha": "64c68c5e25fcbb093cf13803c6b5ab3430509bdb", "filename": "libstdc++-v3/testsuite/23_containers/priority_queue/members/7161.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmembers%2F7161.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmembers%2F7161.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmembers%2F7161.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2002-06-28 pme\n \n-// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -43,11 +43,6 @@ test03()\n     pq.pop();\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test03();"}, {"sha": "523d50a66dabe89166cc8424be687730505162f3", "filename": "libstdc++-v3/testsuite/23_containers/queue/members/7157.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmembers%2F7157.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmembers%2F7157.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmembers%2F7157.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2002-06-28 pme\n \n-// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,12 +34,6 @@ test01()\n   q.pop();\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-template class __gnu_cxx::__mt_alloc<int*>;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "0bd42fe02abed662f45e26254dd098b17c23e984", "filename": "libstdc++-v3/testsuite/23_containers/set/insert/1.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finsert%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finsert%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finsert%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -85,11 +85,6 @@ void test01()\n   VERIFY( s0 == s1 );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<int> >;\n-#endif\n-\n int main ()\n {\n   test01();"}, {"sha": "f279c28101f96ba3b4d99f4787c48bff734bb652", "filename": "libstdc++-v3/testsuite/23_containers/set/invalidation/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Set iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -45,11 +45,6 @@ void test01()\n   VERIFY(!finish._M_dereferenceable() && !finish._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<int> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "96be957a5cb8e818d06861ed99546687a6279c4e", "filename": "libstdc++-v3/testsuite/23_containers/set/invalidation/2.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finvalidation%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Set iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -64,11 +64,6 @@ void test02()\n   VERIFY(!finish._M_singular() && !finish._M_dereferenceable());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<int> >;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "6cde4f1ff7c1631a4253a24782dfefb53b5184e4", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/swap.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation\n+// Copyright (C) 2004, 2005 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -57,10 +57,6 @@ void test02()\n   VERIFY(1 == swap_calls);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<T> >;\n-#endif\n-\n // See c++/13658 for background info.\n int main()\n {"}, {"sha": "a3d173a7f84cac223f82ce595133da9368bb73a8", "filename": "libstdc++-v3/testsuite/23_containers/stack/members/7158.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fmembers%2F7158.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fmembers%2F7158.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fmembers%2F7158.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2002-06-28 pme\n \n-// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,12 +34,6 @@ test02()\n   st.pop();\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int*>;\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "72a043d0e718792e37bd59c52637d29a17f1f586", "filename": "libstdc++-v3/testsuite/23_containers/vector/bool/6886.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2F6886.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2F6886.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2F6886.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2002-03-05 Stephen M. Webb  <stephen.webb@bregmasoft.com>\n \n-// Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -47,11 +47,6 @@ void test02()\n   VERIFY( num == 4 );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<unsigned long>;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "70e1482fb59347b9380cf4997c18a32b9ad36c2c", "filename": "libstdc++-v3/testsuite/23_containers/vector/capacity/1.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,7 +1,8 @@\n // 1999-05-07\n // bkoz \n \n-// Copyright (C) 1999, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2002, 2003, 2004, 2005\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -54,11 +55,6 @@ void test01()\n   VERIFY( sz01 == sz02 );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<A<B> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "8dd88ec530efa5c0f56f303825892e9b3c68cd67", "filename": "libstdc++-v3/testsuite/23_containers/vector/capacity/8230.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F8230.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F8230.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2F8230.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,7 +1,7 @@\n // 1999-05-07\n // bkoz \n \n-// Copyright (C) 1999, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -71,11 +71,6 @@ void test02()\n   }\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "fe618e6253b59b09f9de35f50e7ce7911ddb6a1a", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/1.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,7 @@\n // 1999-06-29 bkoz\n \n-// Copyright (C) 1999-2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999-2001, 2002, 2003, 2004, 2005\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -40,11 +41,6 @@ void test01()\n   vec01 = vec02;\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<A<B> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "629195ee93e733b6f0825caf8ba269ea26edd940", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/2.cc", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,7 @@\n // 1999-06-29 bkoz\n \n-// Copyright (C) 1999-2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999-2001, 2002, 2003, 2004, 2005\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,13 +42,6 @@ void test02()\n   std::vector<int> v2(v1);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-template class __gnu_cxx::__mt_alloc<double>;\n-template class __gnu_cxx::__mt_alloc<A<B> >;\n-#endif\n-\n int main()\n {\n   test02(); "}, {"sha": "a2dcdee7366e10cc018a446f5d5a2b0c8735ab80", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/3.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F3.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,7 @@\n // 1999-06-29 bkoz\n \n-// Copyright (C) 1999-2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999-2001, 2002, 2003, 2004, 2005\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,11 +47,6 @@ test03()\n   VERIFY(std::equal(B, B + M, v5.begin()));\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test03();"}, {"sha": "2748a4e54cc3296ea46734d598af8ab5f46d5144", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/6513.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F6513.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F6513.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F6513.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,7 @@\n // 1999-06-29 bkoz\n \n-// Copyright (C) 1999-2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999-2001, 2002, 2003, 2004, 2005\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,11 +33,6 @@ void test04()\n   std::vector<std::string> strings(c_strings, c_strings + 5);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::string>;\n-#endif\n-\n int main()\n {\n   test04();"}, {"sha": "36397640765e0775464d5d969ced440b18a3693e", "filename": "libstdc++-v3/testsuite/23_containers/vector/element_access/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Felement_access%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Felement_access%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Felement_access%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,7 +1,7 @@\n // 2000-09-06\n // bkoz \n \n-// Copyright (C) 2000, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,11 +55,6 @@ bool test01()\n   return test;\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<A<B> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "634dba4aa12797de0c3fb6f090d92aa13d365dbb", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Vector iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -53,11 +53,6 @@ void test01()\n   VERIFY(i._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "d8ba4d639d0135434202c70e0cddccc123eb187c", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/2.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Vector iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,11 +58,6 @@ void test02()\n   VERIFY(before._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test02();"}, {"sha": "ac7f9ec99cefde6d59beceb1c853ed06f2763781", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/3.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F3.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Vector iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -83,11 +83,6 @@ void test03()\n   VERIFY(before._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test03();"}, {"sha": "1189f3cc3e5165341a5220531a2f6c4297cb336d", "filename": "libstdc++-v3/testsuite/23_containers/vector/invalidation/4.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Finvalidation%2F4.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // Vector iterator invalidation tests\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -60,11 +60,6 @@ void test04()\n   VERIFY(before._M_singular());\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test04();"}, {"sha": "e9e61cbfb763aa237007c98799ff5be72bafcb4a", "filename": "libstdc++-v3/testsuite/23_containers/vector/modifiers/1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 1999-11-09 bkoz\n \n-// Copyright (C) 1999, 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,12 +49,6 @@ test01()\n   vec02.insert(vec02.begin(), pnp01, pnp01 + 1);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-template class __gnu_cxx::__mt_alloc<A<B> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "9cb276b394c44733f420c1b551d53b66200d0b98", "filename": "libstdc++-v3/testsuite/23_containers/vector/modifiers/2.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 1999-11-09 bkoz\n \n-// Copyright (C) 1999, 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,11 +55,6 @@ test03()\n   VERIFY((v4.size() == M) && (M != N));\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test03();"}, {"sha": "decaab0026f946b5b266827e221b618b96da83f9", "filename": "libstdc++-v3/testsuite/23_containers/vector/modifiers/swap.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Fswap.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation\n+// Copyright (C) 2004, 2005 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -54,10 +54,6 @@ void test02()\n   VERIFY(1 == swap_calls);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-template class __gnu_cxx::__mt_alloc<T>;\n-#endif\n-\n // See c++/13658 for background info.\n int main()\n {"}, {"sha": "d3deb0d9cf292a9d4d246613bd5e814d9b35d7c6", "filename": "libstdc++-v3/testsuite/23_containers/vector/resize/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fresize%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fresize%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fresize%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,7 +1,7 @@\n // 1999-05-07\n // bkoz \n \n-// Copyright (C) 1999, 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -50,11 +50,6 @@ void test01()\n   VERIFY( test );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "f7a26e74c2c1ae37091fa16150a2727d4d33af1f", "filename": "libstdc++-v3/testsuite/24_iterators/back_insert_iterator.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -63,11 +63,6 @@ class test_dm : public std::back_insert_iterator<std::list<int> >\n   test_dm():  std::back_insert_iterator<std::list<int> >(l), p(container) { }\n };\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main() \n { \n   test01();"}, {"sha": "644f9c8b444dc8fba89a2369b8d686534b6deb9b", "filename": "libstdc++-v3/testsuite/24_iterators/front_insert_iterator.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -62,11 +62,6 @@ class test_dm : public std::front_insert_iterator<std::list<int> >\n   test_dm(): std::front_insert_iterator<std::list<int> >(l), p(container) { }\n };\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main() \n { \n   test01();"}, {"sha": "f76e08e97717cf226aff8e033da1802e835bed0a", "filename": "libstdc++-v3/testsuite/24_iterators/insert_iterator.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -70,11 +70,6 @@ class test_dm : public std::insert_iterator<std::list<int> >\n   test_dm(): std::insert_iterator<std::list<int> >(l, i), p(container) { }\n };\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main() \n { \n   test01();"}, {"sha": "8573d41abfad64473b50aa6728b5aad6c666d20a", "filename": "libstdc++-v3/testsuite/24_iterators/iterator.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -2,7 +2,7 @@\n // 24.3.1 Iterator traits\n // (basic_string and vector implementations)\n //\n-// Copyright (C) 1999, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2003, 2004, 2005 Free Software Foundation, Inc.\n // This program is free software; you can redistribute it and/or modify\n // it under the terms of the GNU General Public License as published by\n // the Free Software Foundation; either version 2 of the License, or \n@@ -588,12 +588,6 @@ test6642()\n    return it - cit;\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-template class __gnu_cxx::__mt_alloc<std::string>;\n-#endif\n-\n int\n main()\n {"}, {"sha": "ed56c97fd492612dbda1be6f86e41a48411f0be9", "filename": "libstdc++-v3/testsuite/25_algorithms/copy/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,11 +56,6 @@ test01()\n   VERIFY( equal(s2, s2 + N, A) );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int\n main()\n {"}, {"sha": "bc9147d5289a493add371d363c8388c553a6b034", "filename": "libstdc++-v3/testsuite/25_algorithms/copy/2.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -57,11 +57,6 @@ test01()\n   VERIFY( equal(s2, s2 + N, a.begin()) );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int\n main()\n {"}, {"sha": "f6ad8b4cde872393edf1d8f2bbd10e1a1f85dce7", "filename": "libstdc++-v3/testsuite/25_algorithms/copy/3.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F3.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,12 +58,6 @@ test01()\n   VERIFY( equal(s2, s2 + N, a.begin()) );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int*>;\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int\n main()\n {"}, {"sha": "cee7cc9d62134a343940eefc6766479ede371caf", "filename": "libstdc++-v3/testsuite/25_algorithms/copy/4.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F4.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,12 +58,6 @@ test01()\n   VERIFY( equal(s2, s2 + N, a.begin()) );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-template class __gnu_cxx::__mt_alloc<int>;\n-#endif\n-\n int\n main()\n {"}, {"sha": "abb0446be210927c564339c4a0723e504ba2139f", "filename": "libstdc++-v3/testsuite/25_algorithms/equal.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-04-06 gdr\n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,11 +33,6 @@ bool operator==(X, X) { return true; }\n // Not implemented on purpose.  { dg-do link }\n bool operator!=(X, X);\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<X>;\n-#endif\n-\n int main()\n {\n   std::vector<X> v, w;"}, {"sha": "64c071c384b1660f66b0c1d533b5dfbc3d8ee104", "filename": "libstdc++-v3/testsuite/25_algorithms/fill/1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2004-06-25  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -57,12 +57,6 @@ void test01()\n   VERIFY( equal(coll2.begin(), coll2.end(), V) );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-template class __gnu_cxx::__mt_alloc<std::_List_node<num> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "18ae2ee39c66a0b718457f37f3e12afa7c372516", "filename": "libstdc++-v3/testsuite/25_algorithms/fill/2.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2004-06-25  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -57,12 +57,6 @@ void test01()\n   VERIFY( equal(coll2.begin(), coll2.end(), V) );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-template class __gnu_cxx::__mt_alloc<std::_List_node<num> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "4a3b35a69f9e4ff3859e2fec628d244fa369ad2c", "filename": "libstdc++-v3/testsuite/25_algorithms/min_max.cc", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_max.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_max.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_max.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2000-03-29 sss/bkoz\n \n-// Copyright (C) 2000, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -53,25 +53,6 @@ template<typename T>\n template<typename T>\n const T A<T>::a = T(3);\n \n-#if !__GXX_WEAK__\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template int A<int>::a;\n-template int A<unsigned int>::a;\n-template int A<short>::a;\n-template int A<unsigned short>::a;\n-template int A<long>::a;\n-template int A<unsigned long>::a;\n-template int A<long long>::a;\n-template int A<unsigned long long>::a;\n-template int A<char>::a;\n-template int A<signed char>::a;\n-template int A<unsigned char>::a;\n-template int A<wchar_t>::a;\n-template int A<float>::a;\n-template int A<double>::a;\n-template int A<long double>::a;\n-#endif\n-\n void test02()\n {\n   bool test __attribute__((unused)) = true;"}, {"sha": "00768a230c8b62a80a8be1c5e89ba7e52b207f0d", "filename": "libstdc++-v3/testsuite/25_algorithms/rotate.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -71,11 +71,6 @@ test03()\n     VERIFY(std::equal(A, A + N, D));\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int\n main()\n {"}, {"sha": "1c503cb756a1d11ecaf326d760954c47675ca8fa", "filename": "libstdc++-v3/testsuite/25_algorithms/unique/1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-07-19 Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -23,11 +23,6 @@\n #include <list>\n #include <algorithm>\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   using namespace std;"}, {"sha": "10039d675f5260afb3d88351740c493ae5250bf0", "filename": "libstdc++-v3/testsuite/25_algorithms/unique/2.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2003-10-14  Paolo Carlini  <pcarlini@unitus.it>\n \n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -86,11 +86,6 @@ void test03()\n   VERIFY( equal(coll2.begin(), pos, B3) );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "fbe43b826351d0a6d95a57e68831644e8645bf28", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/wchar_t/9874.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fwchar_t%2F9874.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fwchar_t%2F9874.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fwchar_t%2F9874.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2003-10-07  Petur Runolfsson  <peturr02@ru.is>\n //\n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -131,11 +131,6 @@ void test01()\n   fb.close();\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::pair<std::fpos<__mbstate_t>, std::size_t> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "644caf4f32360007b905f2c2e72b381eab8cd8f0", "filename": "libstdc++-v3/testsuite/ext/concept_checks.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fconcept_checks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fconcept_checks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fconcept_checks.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-12-28  Phil Edwards  <pme@gcc.gnu.org>\n //\n-// Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -76,12 +76,6 @@ test2054( )\n   binary_search(Index.begin(), Index.end(), SearchTerm, aComparison);\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<int>;\n-template class __gnu_cxx::__mt_alloc<std::string>;\n-#endif\n-\n int main()\n {\n   test2054();"}, {"sha": "1b5d6f0ed910311f13b6141d3c32eb6c0787826d", "filename": "libstdc++-v3/testsuite/ext/hash_map/1.cc", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_map%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_map%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_map%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -95,13 +95,6 @@ void test01()\n   }\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Hashtable_node<std::pair<const std::string, int> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Hashtable_node<std::pair<const std::string, int> >* >;\n-template class __gnu_cxx::__mt_alloc<std::pair<std::string, int> >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "afc7caec05b5b1b25250dc82775509e5958ab8f9", "filename": "libstdc++-v3/testsuite/ext/hash_set/1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_set%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_set%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_set%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,7 +1,7 @@\n // 2002-04-28  Paolo Carlini  <pcarlini@unitus.it>\n //             Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-// Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,12 +32,6 @@ test01()\n   __gnu_cxx::hash_set<int> intTable(werte, werte + anzahl);\n }\n                                        \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Hashtable_node<int> >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Hashtable_node<int>* >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "fc1cc9aae62ce808d559832b27290bac7b1c9564", "filename": "libstdc++-v3/testsuite/ext/rope/1.cc", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2001-10-03 From: Dimitris Vyzovitis <vyzo@media.mit.edu>\n \n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,14 +31,6 @@ void test01()\n   std::cout << data << std::endl;\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeLeaf<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeFunction<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeSubstring<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeConcatenation<char, std::allocator<char> > >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "e331cbf9cc07f642c36ab589a978ae3c0a6e6b85", "filename": "libstdc++-v3/testsuite/ext/rope/2.cc", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F2.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,14 +42,6 @@ test01()\n   VERIFY( r5[1] == 'a' );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeLeaf<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeFunction<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeSubstring<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeConcatenation<char, std::allocator<char> > >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "ae990ca166f83cdcd4637df640fca78e4d5efa2c", "filename": "libstdc++-v3/testsuite/ext/rope/3.cc", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F3.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -93,14 +93,6 @@ test01()\n   VERIFY( r1.substr(88888, 6)[2] == 'h' );\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeLeaf<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeFunction<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeSubstring<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeConcatenation<char, std::allocator<char> > >;\n-#endif\n-\n int main()\n {\n   test01();"}, {"sha": "83c0126848bf0bf26baf215cb40ac357e4afa7e8", "filename": "libstdc++-v3/testsuite/thread/pthread1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread1.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2002-01-23  Loren J. Rittle <rittle@labs.mot.com> <ljrittle@acm.org>\n //\n-// Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -98,11 +98,6 @@ consume (void* t)\n   return 0;\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_List_node<int> >;\n-#endif                                                                \n-\n int\n main ()\n {"}, {"sha": "bab42569c453df95082d78a86948bf67a81528e9", "filename": "libstdc++-v3/testsuite/thread/pthread4.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread4.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -2,7 +2,7 @@\n // Adapted from http://gcc.gnu.org/ml/gcc-bugs/2002-01/msg00679.html\n // which was adapted from pthread1.cc by Mike Lu <MLu@dynamicsoft.com>\n //\n-// Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -89,12 +89,6 @@ consume (void*)\n   return 0;\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::string>;\n-template class __gnu_cxx::__mt_alloc<std::_List_node<std::string> >;\n-#endif\n-\n int\n main (void)\n {"}, {"sha": "76220fbdbd577a110d3f33c5f1ca340afe61374a", "filename": "libstdc++-v3/testsuite/thread/pthread5.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread5.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -2,7 +2,7 @@\n // Adpated from libstdc++/5464 submitted by jjessel@amadeus.net\n // Jean-Francois JESSEL (Amadeus SAS Development) \n //\n-// Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -86,12 +86,6 @@ thread_function (void* arg)\n   return arg;\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<tt_t>;\n-template class __gnu_cxx::__mt_alloc<std::_List_node<std::string*> >;\n-#endif   \n-\n int\n main ()\n {"}, {"sha": "9bf8cd56229d1293094f0877472d43385f404d6f", "filename": "libstdc++-v3/testsuite/thread/pthread6.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread6.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,7 +1,7 @@\n // 2002-01-23  Loren J. Rittle <rittle@labs.mot.com> <ljrittle@acm.org>\n // Adpated from libstdc++/5444 submitted by markus.breuer@materna.de\n //\n-// Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -70,11 +70,6 @@ thread_main (void*)\n   return 0;\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<std::_Rb_tree_node<std::pair<unsigned int const, std::string> > >;\n-#endif\n-\n int\n main (void)\n {"}, {"sha": "0e8431b7f3215ba79ecc689675a77ad3f7514090", "filename": "libstdc++-v3/testsuite/thread/pthread7-rope.cc", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread7-rope.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ea9c011d246200641ca2d085a0337d8b2af0ef/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread7-rope.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fpthread7-rope.cc?ref=b0ea9c011d246200641ca2d085a0337d8b2af0ef", "patch": "@@ -1,6 +1,6 @@\n // 2003-05-03  Loren J. Rittle <rittle@labs.mot.com> <ljrittle@acm.org>\n //\n-// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -53,14 +53,6 @@ void* thread_main(void *)\n   return 0;\n }\n \n-#if !__GXX_WEAK__ && _MT_ALLOCATOR_H\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeLeaf<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeFunction<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeSubstring<char, std::allocator<char> > >;\n-template class __gnu_cxx::__mt_alloc<__gnu_cxx::_Rope_RopeConcatenation<char, std::allocator<char> > >;\n-#endif                                                                \n-\n int\n main()\n {"}]}