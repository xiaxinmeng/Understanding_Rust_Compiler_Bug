{"sha": "3f9f4ae70554ee0f7b756fc1d811aefb6e70f076", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y5ZjRhZTcwNTU0ZWUwZjdiNzU2ZmMxZDgxMWFlZmI2ZTcwZjA3Ng==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-01-09T10:33:00Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-01-09T10:33:00Z"}, "message": "IPA ICF: target and optimization flags comparison.\n\n\t* cgraphunit.c (cgraph_node::create_wrapper): Fix level of indentation.\n\t* ipa-icf.c (sem_function::equals_private): Add support for target and\n\t(sem_item_optimizer::merge_classes): Remove redundant function\n\toptimization flags comparison.\n\t* tree.h (target_opts_for_fn): New function.\n\t* gcc.dg/ipa/ipa-icf-32.c: New test.\n\nFrom-SVN: r219377", "tree": {"sha": "1c877e5ceb75376cc425d2d78971a217c753a79c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c877e5ceb75376cc425d2d78971a217c753a79c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56f6033d2bc75b90a1006b5245a8da338224506d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f6033d2bc75b90a1006b5245a8da338224506d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f6033d2bc75b90a1006b5245a8da338224506d"}], "stats": {"total": 142, "additions": 115, "deletions": 27}, "files": [{"sha": "eb69b39cf36624be7414b62f27594b252ee8ba37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f9f4ae70554ee0f7b756fc1d811aefb6e70f076", "patch": "@@ -1,3 +1,11 @@\n+2015-01-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* cgraphunit.c (cgraph_node::create_wrapper): Fix level of indentation.\n+\t* ipa-icf.c (sem_function::equals_private): Add support for target and\n+\t(sem_item_optimizer::merge_classes): Remove redundant function\n+\toptimization flags comparison.\n+\t* tree.h (target_opts_for_fn): New function.\n+\n 2015-01-09  Tom de Vries  <tom@codesourcery.com>\n \n \t* omp-low.c (expand_omp_for_static_chunk): Fix assert."}, {"sha": "81246e28fc8537baa16a70b7599f1d13b31d9766", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=3f9f4ae70554ee0f7b756fc1d811aefb6e70f076", "patch": "@@ -2385,40 +2385,40 @@ cgraphunit_c_finalize (void)\n void\n cgraph_node::create_wrapper (cgraph_node *target)\n {\n-    /* Preserve DECL_RESULT so we get right by reference flag.  */\n-    tree decl_result = DECL_RESULT (decl);\n+  /* Preserve DECL_RESULT so we get right by reference flag.  */\n+  tree decl_result = DECL_RESULT (decl);\n \n-    /* Remove the function's body but keep arguments to be reused\n-       for thunk.  */\n-    release_body (true);\n-    reset ();\n+  /* Remove the function's body but keep arguments to be reused\n+     for thunk.  */\n+  release_body (true);\n+  reset ();\n \n-    DECL_RESULT (decl) = decl_result;\n-    DECL_INITIAL (decl) = NULL;\n-    allocate_struct_function (decl, false);\n-    set_cfun (NULL);\n+  DECL_RESULT (decl) = decl_result;\n+  DECL_INITIAL (decl) = NULL;\n+  allocate_struct_function (decl, false);\n+  set_cfun (NULL);\n \n-    /* Turn alias into thunk and expand it into GIMPLE representation.  */\n-    definition = true;\n-    thunk.thunk_p = true;\n-    thunk.this_adjusting = false;\n+  /* Turn alias into thunk and expand it into GIMPLE representation.  */\n+  definition = true;\n+  thunk.thunk_p = true;\n+  thunk.this_adjusting = false;\n \n-    cgraph_edge *e = create_edge (target, NULL, 0, CGRAPH_FREQ_BASE);\n+  cgraph_edge *e = create_edge (target, NULL, 0, CGRAPH_FREQ_BASE);\n \n-    tree arguments = DECL_ARGUMENTS (decl);\n+  tree arguments = DECL_ARGUMENTS (decl);\n \n-    while (arguments)\n-      {\n-\tTREE_ADDRESSABLE (arguments) = false;\n-\targuments = TREE_CHAIN (arguments);\n-      }\n+  while (arguments)\n+    {\n+      TREE_ADDRESSABLE (arguments) = false;\n+      arguments = TREE_CHAIN (arguments);\n+    }\n \n-    expand_thunk (false, true);\n-    e->call_stmt_cannot_inline_p = true;\n+  expand_thunk (false, true);\n+  e->call_stmt_cannot_inline_p = true;\n \n-    /* Inline summary set-up.  */\n-    analyze ();\n-    inline_analyze_function (this);\n+  /* Inline summary set-up.  */\n+  analyze ();\n+  inline_analyze_function (this);\n }\n \n #include \"gt-cgraphunit.h\""}, {"sha": "28158b35312029009e79ad151833bc9ed8c25620", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=3f9f4ae70554ee0f7b756fc1d811aefb6e70f076", "patch": "@@ -427,6 +427,49 @@ sem_function::equals_private (sem_item *item,\n   if (!equals_wpa (item, ignored_nodes))\n     return false;\n \n+  /* Checking function TARGET and OPTIMIZATION flags.  */\n+  cl_target_option *tar1 = target_opts_for_fn (decl);\n+  cl_target_option *tar2 = target_opts_for_fn (m_compared_func->decl);\n+\n+  if (tar1 != NULL || tar2 != NULL)\n+    {\n+      if (!cl_target_option_eq (tar1, tar2))\n+\t{\n+\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t    {\n+\t      fprintf (dump_file, \"Source target flags\\n\");\n+\t      cl_target_option_print (dump_file, 2, tar1);\n+\t      fprintf (dump_file, \"Target target flags\\n\");\n+\t      cl_target_option_print (dump_file, 2, tar2);\n+\t    }\n+\n+\t  return return_false_with_msg (\"Target flags are different\");\n+\t}\n+    }\n+  else if (tar1 != NULL || tar2 != NULL)\n+    return return_false_with_msg (\"Target flags are different\");\n+\n+  cl_optimization *opt1 = opts_for_fn (decl);\n+  cl_optimization *opt2 = opts_for_fn (m_compared_func->decl);\n+\n+  if (opt1 != NULL && opt2 != NULL)\n+    {\n+      if (memcmp (opt1, opt2, sizeof(cl_optimization)))\n+\t{\n+\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t    {\n+\t      fprintf (dump_file, \"Source optimization flags\\n\");\n+\t      cl_optimization_print (dump_file, 2, opt1);\n+\t      fprintf (dump_file, \"Target optimization flags\\n\");\n+\t      cl_optimization_print (dump_file, 2, opt2);\n+\t    }\n+\n+\t  return return_false_with_msg (\"optimization flags are different\");\n+\t}\n+    }\n+  else if (opt1 != NULL || opt2 != NULL)\n+    return return_false_with_msg (\"optimization flags are different\");\n+\n   /* Checking function arguments.  */\n   tree decl1 = DECL_ATTRIBUTES (decl);\n   tree decl2 = DECL_ATTRIBUTES (m_compared_func->decl);\n@@ -2302,7 +2345,6 @@ sem_item_optimizer::merge_classes (unsigned int prev_class_count)\n \tfor (unsigned int j = 1; j < c->members.length (); j++)\n \t  {\n \t    sem_item *alias = c->members[j];\n-\t    source->equals (alias, m_symtab_node_map);\n \n \t    if (dump_file)\n \t      {"}, {"sha": "b1aff26b889cedd91ddfef084371ca4d5abc7a13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f9f4ae70554ee0f7b756fc1d811aefb6e70f076", "patch": "@@ -1,3 +1,7 @@\n+2015-01-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/ipa/ipa-icf-32.c: New test.\n+\n 2015-01-08  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* c-c++-common/tsan/tsan_barrier.h: New."}, {"sha": "22544a70d46ed2b72b4ab2140cee20f62834dd1c", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-32.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-32.c?ref=3f9f4ae70554ee0f7b756fc1d811aefb6e70f076", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O0 -fipa-icf -fdump-ipa-icf-details\" } */\n+\n+int\n+__attribute__((optimize(\"O0\"), noinline, noclone))\n+foo(int a)\n+{\n+  return a * a;\n+}\n+\n+__attribute__ ((noinline, noclone))\n+int bar(int b)\n+{\n+  return b * b;\n+}\n+\n+int main()\n+{\n+  return foo (0) + bar (0);\n+}\n+\n+/* { dg-final { scan-ipa-dump \"optimization flags are different\" \"icf\"  } } */\n+/* { dg-final { scan-ipa-dump \"Equal symbols: 0\" \"icf\"  } } */\n+/* { dg-final { cleanup-ipa-dump \"icf\" } } */"}, {"sha": "e9af9bf239165358286c8ad80bc31ecae3d80fe4", "filename": "gcc/tree.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f4ae70554ee0f7b756fc1d811aefb6e70f076/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=3f9f4ae70554ee0f7b756fc1d811aefb6e70f076", "patch": "@@ -4671,6 +4671,16 @@ opts_for_fn (const_tree fndecl)\n   return TREE_OPTIMIZATION (fn_opts);\n }\n \n+/* Return pointer to target flags of FNDECL.  */\n+static inline cl_target_option *\n+target_opts_for_fn (const_tree fndecl)\n+{\n+  tree fn_opts = DECL_FUNCTION_SPECIFIC_TARGET (fndecl);\n+  if (fn_opts == NULL_TREE)\n+    fn_opts = target_option_default_node;\n+  return TREE_TARGET_OPTION (fn_opts);\n+}\n+\n /* opt flag for function FNDECL, e.g. opts_for_fn (fndecl, optimize) is\n    the optimization level of function fndecl.  */\n #define opt_for_fn(fndecl, opt) (opts_for_fn (fndecl)->x_##opt)"}]}