{"sha": "7cc63a88cba755a302ca3995039cfe852be3ee60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NjNjNhODhjYmE3NTVhMzAyY2EzOTk1MDM5Y2ZlODUyYmUzZWU2MA==", "commit": {"author": {"name": "David Ung", "email": "davidu@mips.com", "date": "2005-06-15T12:17:08Z"}, "committer": {"name": "David Ung", "email": "davidu@gcc.gnu.org", "date": "2005-06-15T12:17:08Z"}, "message": "mips.h (GENERATE_MIPS16E): New definition.\n\n* config/mips/mips.h (GENERATE_MIPS16E): New definition.\n* config/mips/mips.md (zero_extend<SHORT:mode><GPR:mode>2):\nChanged expand condition to exclude generating of \"and\" if\nGENERATE_MIPS16E is true.\n(*zero_extend<SHORT:mode><GPR:mode>2_mips16e): New pattern for\nmatching mips16e zeb/zeh.\n(*extend<SHORT:mode><GPR:mode>2_mips16e): New pattern for matching\nmips16e seb/seh.\n(*extend<SHORT:mode><GPR:mode>2): Disable this pattern for\nGENERATE_MIPS16E.\n* doc/invoke.texi (MIPS Options): Add comment to -mips16\nindicating MIPS16e ASE is used if targetting for MIPS32 or MIPS64.\n\nFrom-SVN: r100979", "tree": {"sha": "d1107596f11cf882f13ae7c901022281d6a68534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1107596f11cf882f13ae7c901022281d6a68534"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cc63a88cba755a302ca3995039cfe852be3ee60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc63a88cba755a302ca3995039cfe852be3ee60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cc63a88cba755a302ca3995039cfe852be3ee60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc63a88cba755a302ca3995039cfe852be3ee60/comments", "author": null, "committer": null, "parents": [{"sha": "9983270bec0a18f6230a5bdaf9a15f69da8e8baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9983270bec0a18f6230a5bdaf9a15f69da8e8baa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9983270bec0a18f6230a5bdaf9a15f69da8e8baa"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "1d7a0d58c123ce269f7ea55ec0be5eadeb7e3a82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc63a88cba755a302ca3995039cfe852be3ee60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc63a88cba755a302ca3995039cfe852be3ee60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7cc63a88cba755a302ca3995039cfe852be3ee60", "patch": "@@ -1,3 +1,18 @@\n+2005-06-15  David Ung  <davidu@mips.com>\n+\n+\t* config/mips/mips.h (GENERATE_MIPS16E): New definition.\n+\t* config/mips/mips.md (zero_extend<SHORT:mode><GPR:mode>2):\n+\tChanged expand condition to exclude generating of \"and\" if\n+\tGENERATE_MIPS16E is true.\n+\t(*zero_extend<SHORT:mode><GPR:mode>2_mips16e): New pattern for\n+\tmatching mips16e zeb/zeh.\n+\t(*extend<SHORT:mode><GPR:mode>2_mips16e): New pattern for matching\n+\tmips16e seb/seh. \n+\t(*extend<SHORT:mode><GPR:mode>2): Disable this pattern for\n+\tGENERATE_MIPS16E. \n+        * doc/invoke.texi (MIPS Options): Add comment to -mips16\n+\tindicating MIPS16e ASE is used if targetting for MIPS32 or MIPS64.\n+\t\n 2005-06-15  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR 22018"}, {"sha": "6eb4f4aabdd4a3f1d6f946603bc7be38b57c7e74", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc63a88cba755a302ca3995039cfe852be3ee60/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc63a88cba755a302ca3995039cfe852be3ee60/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=7cc63a88cba755a302ca3995039cfe852be3ee60", "patch": "@@ -168,8 +168,10 @@ extern const struct mips_rtx_cost_data *mips_cost;\n    We therefore disable GP-relative switch tables for n64 on IRIX targets.  */\n #define TARGET_GPWORD (TARGET_ABICALLS && !(mips_abi == ABI_64 && TARGET_IRIX))\n \n-\t\t\t\t\t/* Generate mips16 code */\n+/* Generate mips16 code */\n #define TARGET_MIPS16\t\t((target_flags & MASK_MIPS16) != 0)\n+/* Generate mips16e code. Default 16bit ASE for mips32/mips32r2/mips64 */\n+#define GENERATE_MIPS16E\t(TARGET_MIPS16 && mips_isa >= 32)\n \n /* Generic ISA defines.  */\n #define ISA_MIPS1\t\t    (mips_isa == 1)"}, {"sha": "84f0767d395e2d94d37dbb3724fdcca9febf748d", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc63a88cba755a302ca3995039cfe852be3ee60/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc63a88cba755a302ca3995039cfe852be3ee60/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=7cc63a88cba755a302ca3995039cfe852be3ee60", "patch": "@@ -2319,7 +2319,8 @@ beq\\t%2,%.,1b\\;\\\n         (zero_extend:GPR (match_operand:SHORT 1 \"nonimmediate_operand\")))]\n   \"\"\n {\n-  if (TARGET_MIPS16 && !memory_operand (operands[1], <SHORT:MODE>mode))\n+  if (TARGET_MIPS16 && !GENERATE_MIPS16E\n+      && !memory_operand (operands[1], <SHORT:MODE>mode))\n     {\n       emit_insn (gen_and<GPR:mode>3 (operands[0],\n \t\t\t\t     gen_lowpart (<GPR:MODE>mode, operands[1]),\n@@ -2340,6 +2341,14 @@ beq\\t%2,%.,1b\\;\\\n   [(set_attr \"type\" \"arith,load\")\n    (set_attr \"mode\" \"<GPR:MODE>\")])\n \n+(define_insn \"*zero_extend<SHORT:mode><GPR:mode>2_mips16e\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n+        (zero_extend:GPR (match_operand:SHORT 1 \"register_operand\" \"0\")))]\n+  \"GENERATE_MIPS16E\"\n+  \"ze<SHORT:size>\\t%0\"\n+  [(set_attr \"type\" \"arith\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n (define_insn \"*zero_extend<SHORT:mode><GPR:mode>2_mips16\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n         (zero_extend:GPR (match_operand:SHORT 1 \"memory_operand\" \"m\")))]\n@@ -2418,11 +2427,21 @@ beq\\t%2,%.,1b\\;\\\n         (sign_extend:GPR (match_operand:SHORT 1 \"nonimmediate_operand\")))]\n   \"\")\n \n+(define_insn \"*extend<SHORT:mode><GPR:mode>2_mips16e\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n+        (sign_extend:GPR (match_operand:SHORT 1 \"nonimmediate_operand\" \"0,m\")))]\n+  \"GENERATE_MIPS16E\"\n+  \"@\n+   se<SHORT:size>\\t%0\n+   l<SHORT:size>\\t%0,%1\"\n+  [(set_attr \"type\" \"arith,load\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n (define_insn_and_split \"*extend<SHORT:mode><GPR:mode>2\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n         (sign_extend:GPR\n \t     (match_operand:SHORT 1 \"nonimmediate_operand\" \"d,m\")))]\n-  \"!ISA_HAS_SEB_SEH\"\n+  \"!ISA_HAS_SEB_SEH && !GENERATE_MIPS16E\"\n   \"@\n    #\n    l<SHORT:size>\\t%0,%1\""}, {"sha": "47f7766cf324d7f19dbc5072837720d77818dd0b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc63a88cba755a302ca3995039cfe852be3ee60/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc63a88cba755a302ca3995039cfe852be3ee60/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7cc63a88cba755a302ca3995039cfe852be3ee60", "patch": "@@ -9861,7 +9861,8 @@ Equivalent to @samp{-march=mips64}.\n @itemx -mno-mips16\n @opindex mips16\n @opindex mno-mips16\n-Use (do not use) the MIPS16 ISA@.\n+Generate (do not generate) MIPS16 code.  If GCC is targetting a\n+MIP32 or MIPS64 architecture, it will make use of the MIPS16e ASE@.\n \n @item -mabi=32\n @itemx -mabi=o64"}]}