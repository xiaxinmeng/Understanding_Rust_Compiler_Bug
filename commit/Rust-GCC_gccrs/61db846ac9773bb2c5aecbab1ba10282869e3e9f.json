{"sha": "61db846ac9773bb2c5aecbab1ba10282869e3e9f", "node_id": "C_kwDOANBUbNoAKDYxZGI4NDZhYzk3NzNiYjJjNWFlY2JhYjFiYTEwMjgyODY5ZTNlOWY", "commit": {"author": {"name": "wan-nyan-wan", "email": "distributed.system.love@gmail.com", "date": "2021-10-12T16:28:33Z"}, "committer": {"name": "Kazuki Hanai", "email": "distributed.system.love@gmail.com", "date": "2021-10-13T10:47:00Z"}, "message": "remove AST::BlockExpr lambda and add get_statements\n\nSigned-off-by: Kazuki Hanai <distributed.system.love@gmail.com>", "tree": {"sha": "95df6bc56f57b8f26c872ea411a55485bebdd86f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95df6bc56f57b8f26c872ea411a55485bebdd86f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61db846ac9773bb2c5aecbab1ba10282869e3e9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61db846ac9773bb2c5aecbab1ba10282869e3e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61db846ac9773bb2c5aecbab1ba10282869e3e9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61db846ac9773bb2c5aecbab1ba10282869e3e9f/comments", "author": {"login": "kazuki-hanai", "id": 63966451, "node_id": "MDQ6VXNlcjYzOTY2NDUx", "avatar_url": "https://avatars.githubusercontent.com/u/63966451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kazuki-hanai", "html_url": "https://github.com/kazuki-hanai", "followers_url": "https://api.github.com/users/kazuki-hanai/followers", "following_url": "https://api.github.com/users/kazuki-hanai/following{/other_user}", "gists_url": "https://api.github.com/users/kazuki-hanai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kazuki-hanai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kazuki-hanai/subscriptions", "organizations_url": "https://api.github.com/users/kazuki-hanai/orgs", "repos_url": "https://api.github.com/users/kazuki-hanai/repos", "events_url": "https://api.github.com/users/kazuki-hanai/events{/privacy}", "received_events_url": "https://api.github.com/users/kazuki-hanai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kazuki-hanai", "id": 63966451, "node_id": "MDQ6VXNlcjYzOTY2NDUx", "avatar_url": "https://avatars.githubusercontent.com/u/63966451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kazuki-hanai", "html_url": "https://github.com/kazuki-hanai", "followers_url": "https://api.github.com/users/kazuki-hanai/followers", "following_url": "https://api.github.com/users/kazuki-hanai/following{/other_user}", "gists_url": "https://api.github.com/users/kazuki-hanai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kazuki-hanai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kazuki-hanai/subscriptions", "organizations_url": "https://api.github.com/users/kazuki-hanai/orgs", "repos_url": "https://api.github.com/users/kazuki-hanai/repos", "events_url": "https://api.github.com/users/kazuki-hanai/events{/privacy}", "received_events_url": "https://api.github.com/users/kazuki-hanai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99c28309d3553346d4f0337dbae49f4a8e48da01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c28309d3553346d4f0337dbae49f4a8e48da01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99c28309d3553346d4f0337dbae49f4a8e48da01"}], "stats": {"total": 36, "additions": 13, "deletions": 23}, "files": [{"sha": "5cbc8de112e30bc7d580e38c2aa3608fac4e1592", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61db846ac9773bb2c5aecbab1ba10282869e3e9f/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61db846ac9773bb2c5aecbab1ba10282869e3e9f/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=61db846ac9773bb2c5aecbab1ba10282869e3e9f", "patch": "@@ -2438,15 +2438,6 @@ class BlockExpr : public ExprWithBlock\n   void mark_for_strip () override { marked_for_strip = true; }\n   bool is_marked_for_strip () const override { return marked_for_strip; }\n \n-  void iterate_stmts (std::function<bool (Stmt *)> cb)\n-  {\n-    for (auto it = statements.begin (); it != statements.end (); it++)\n-      {\n-\tif (!cb (it->get ()))\n-\t  return;\n-      }\n-  }\n-\n   size_t num_statements () const { return statements.size (); }\n \n   // TODO: this mutable getter seems really dodgy. Think up better way."}, {"sha": "3a675b7cef995e861a905a48f839ee0322996283", "filename": "gcc/rust/hir/rust-ast-lower.cc", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61db846ac9773bb2c5aecbab1ba10282869e3e9f/gcc%2Frust%2Fhir%2Frust-ast-lower.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61db846ac9773bb2c5aecbab1ba10282869e3e9f/gcc%2Frust%2Fhir%2Frust-ast-lower.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower.cc?ref=61db846ac9773bb2c5aecbab1ba10282869e3e9f", "patch": "@@ -64,16 +64,17 @@ ASTLoweringBlock::visit (AST::BlockExpr &expr)\n {\n   std::vector<std::unique_ptr<HIR::Stmt> > block_stmts;\n   bool block_did_terminate = false;\n-  expr.iterate_stmts ([&] (AST::Stmt *s) mutable -> bool {\n-    if (block_did_terminate)\n-      rust_warning_at (s->get_locus (), 0, \"unreachable statement\");\n-\n-    bool terminated = false;\n-    auto translated_stmt = ASTLoweringStmt::translate (s, &terminated);\n-    block_stmts.push_back (std::unique_ptr<HIR::Stmt> (translated_stmt));\n-    block_did_terminate |= terminated;\n-    return true;\n-  });\n+\n+  for (auto &s : expr.get_statements ())\n+    {\n+      if (block_did_terminate)\n+\trust_warning_at (s->get_locus (), 0, \"unreachable statement\");\n+\n+      bool terminated = false;\n+      auto translated_stmt = ASTLoweringStmt::translate (s.get (), &terminated);\n+      block_stmts.push_back (std::unique_ptr<HIR::Stmt> (translated_stmt));\n+      block_did_terminate |= terminated;\n+    }\n \n   if (expr.has_tail_expr () && block_did_terminate)\n     {"}, {"sha": "b2fe331bffaea3f4870506537ceb47a75ce717a9", "filename": "gcc/rust/resolve/rust-ast-resolve.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61db846ac9773bb2c5aecbab1ba10282869e3e9f/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61db846ac9773bb2c5aecbab1ba10282869e3e9f/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc?ref=61db846ac9773bb2c5aecbab1ba10282869e3e9f", "patch": "@@ -348,10 +348,8 @@ ResolveExpr::visit (AST::BlockExpr &expr)\n   resolver->push_new_type_rib (resolver->get_type_scope ().peek ());\n   resolver->push_new_label_rib (resolver->get_type_scope ().peek ());\n \n-  expr.iterate_stmts ([&] (AST::Stmt *s) mutable -> bool {\n-    ResolveStmt::go (s, s->get_node_id ());\n-    return true;\n-  });\n+  for (auto &s : expr.get_statements ())\n+    ResolveStmt::go (s.get (), s->get_node_id ());\n \n   if (expr.has_tail_expr ())\n     ResolveExpr::go (expr.get_tail_expr ().get (), expr.get_node_id ());"}]}