{"sha": "02bc9733948fb3f06d4aa1ad1c93f4c67688545c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJiYzk3MzM5NDhmYjNmMDZkNGFhMWFkMWM5M2Y0YzY3Njg4NTQ1Yw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-19T09:44:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-19T09:44:36Z"}, "message": "sched.c (update_flow_info): Handle death notes made invalid by instruction splitting.\n\n\ufffd\n        * sched.c (update_flow_info): Handle death notes made invalid by\n        instruction splitting.  Partially reverts Oct 15, 1998 patch.\n        * haifa-sched.c (update_flow_info): Likewise.\n\nFrom-SVN: r23171", "tree": {"sha": "4fd568e70b40740c9210f2e161387f49f2d20cf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fd568e70b40740c9210f2e161387f49f2d20cf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02bc9733948fb3f06d4aa1ad1c93f4c67688545c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02bc9733948fb3f06d4aa1ad1c93f4c67688545c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02bc9733948fb3f06d4aa1ad1c93f4c67688545c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02bc9733948fb3f06d4aa1ad1c93f4c67688545c/comments", "author": null, "committer": null, "parents": [{"sha": "5f5702e21c93df1c76780b3ae40f7abe1d3b2a3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f5702e21c93df1c76780b3ae40f7abe1d3b2a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f5702e21c93df1c76780b3ae40f7abe1d3b2a3e"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "ce2f248e00e654daf19c16a8464676ac5432098e", "filename": "gcc/sched.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02bc9733948fb3f06d4aa1ad1c93f4c67688545c/gcc%2Fsched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02bc9733948fb3f06d4aa1ad1c93f4c67688545c/gcc%2Fsched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched.c?ref=02bc9733948fb3f06d4aa1ad1c93f4c67688545c", "patch": "@@ -3828,7 +3828,21 @@ update_flow_info (notes, first, last, orig_insn)\n \t\t register that was not needed by this instantiation of the\n \t\t pattern, so we can safely ignore it.  */\n \t      if (insn == first)\n-\t\t{\t\t\t\n+\t\t{\n+\t\t  /* We have accurate death notes after reload now, but this\n+\t\t     code is still necessary.  Consider splitting a store into\n+\t\t     (subreg:DF (reg:DC) 0).  The death notes will claim the\n+\t\t     entire DCmode value is dead.  But after splitting we know\n+\t\t     that only part of it is dead.  Ie, the splitting action\n+\t\t     actually eliminated the death of one or more hard\n+\t\t     registers.  */\n+\t\t  if (reload_completed && REG_NOTE_KIND (note) == REG_DEAD)\n+\t\t    {\n+\t\t      XEXP (note, 1) = REG_NOTES (insn);\n+\t\t      REG_NOTES (insn) = note;\n+\t\t      break;\n+\t\t    }\n+\t\t\t\n \t\t  if (REG_NOTE_KIND (note) != REG_UNUSED)\n \t\t    abort ();\n "}]}