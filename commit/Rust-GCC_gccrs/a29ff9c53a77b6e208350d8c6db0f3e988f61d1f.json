{"sha": "a29ff9c53a77b6e208350d8c6db0f3e988f61d1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI5ZmY5YzUzYTc3YjZlMjA4MzUwZDhjNmRiMGYzZTk4OGY2MWQxZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-24T06:41:16Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-24T06:42:33Z"}, "message": "cgraph: move former_thunk_p out of CHECKING_P macro.\n\nThis fixes the following failure:\n\nld: cgraph.o: in function `cgraph_edge::verify_corresponds_to_fndecl(tree_node*)':\ngcc/cgraph.c:3067: undefined reference to `cgraph_node::former_thunk_p()'\nld: cgraph.o: in function `clone_of_p':\n\ngcc/ChangeLog:\n\n\t* cgraph.c (cgraph_node::former_thunk_p): Move out of CHECKING_P\n\tmacro.", "tree": {"sha": "78f21910dde4ee008a78cf947b1c2d1c897a8516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78f21910dde4ee008a78cf947b1c2d1c897a8516"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a29ff9c53a77b6e208350d8c6db0f3e988f61d1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a29ff9c53a77b6e208350d8c6db0f3e988f61d1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a29ff9c53a77b6e208350d8c6db0f3e988f61d1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a29ff9c53a77b6e208350d8c6db0f3e988f61d1f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0e2ffcca0ef6d526de8d221ba41567526b4cb40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0e2ffcca0ef6d526de8d221ba41567526b4cb40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0e2ffcca0ef6d526de8d221ba41567526b4cb40"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "d1a773d386fe516848d353eaec61e65b0e4f4438", "filename": "gcc/cgraph.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a29ff9c53a77b6e208350d8c6db0f3e988f61d1f/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a29ff9c53a77b6e208350d8c6db0f3e988f61d1f/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=a29ff9c53a77b6e208350d8c6db0f3e988f61d1f", "patch": "@@ -4098,6 +4098,21 @@ cgraph_node::check_calls_comdat_local_p ()\n   return false;\n }\n \n+/* Return true if this node represents a former, i.e. an expanded, thunk.  */\n+\n+bool\n+cgraph_node::former_thunk_p (void)\n+{\n+  if (thunk)\n+    return false;\n+  thunk_info *i = thunk_info::get (this);\n+  if (!i)\n+    return false;\n+  gcc_checking_assert (i->fixed_offset || i->virtual_offset_p\n+\t\t       || i->indirect_offset);\n+  return true;\n+}\n+\n /* A stashed copy of \"symtab\" for use by selftest::symbol_table_test.\n    This needs to be a global so that it can be a GC root, and thus\n    prevent the stashed copy from being garbage-collected if the GC runs\n@@ -4162,21 +4177,6 @@ cgraph_c_tests ()\n \n } // namespace selftest\n \n-/* Return true if this node represents a former, i.e. an expanded, thunk.  */\n-\n-bool\n-cgraph_node::former_thunk_p (void)\n-{\n-  if (thunk)\n-    return false;\n-  thunk_info *i = thunk_info::get (this);\n-  if (!i)\n-    return false;\n-  gcc_checking_assert (i->fixed_offset || i->virtual_offset_p\n-\t\t       || i->indirect_offset);\n-  return true;\n-}\n-\n #endif /* CHECKING_P */\n \n #include \"gt-cgraph.h\""}]}