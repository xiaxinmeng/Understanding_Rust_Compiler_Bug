{"sha": "8f3a7ad64aa9ad98921ad3baf01095589dcd312c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYzYTdhZDY0YWE5YWQ5ODkyMWFkM2JhZjAxMDk1NTg5ZGNkMzEyYw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2005-03-08T03:40:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2005-03-08T03:40:58Z"}, "message": "20030821-1.c: Verify that the computed goto was folded away.\n\n        * gcc.dg/tree-ssa/20030821-1.c: Verify that the computed goto\n        was folded away.\n        * gcc.dg/tree-ssa/pr18133-1.c: New test.\n        * gcc.dg/tree-ssa/pr18133-2.c: New test.\n\nFrom-SVN: r96085", "tree": {"sha": "5786d0f7eef0941019e0ce455a8420083fd616b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5786d0f7eef0941019e0ce455a8420083fd616b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f3a7ad64aa9ad98921ad3baf01095589dcd312c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f3a7ad64aa9ad98921ad3baf01095589dcd312c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f3a7ad64aa9ad98921ad3baf01095589dcd312c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f3a7ad64aa9ad98921ad3baf01095589dcd312c/comments", "author": null, "committer": null, "parents": [{"sha": "be477406042409e5431463f963e02b4365e94ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be477406042409e5431463f963e02b4365e94ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be477406042409e5431463f963e02b4365e94ef6"}], "stats": {"total": 81, "additions": 80, "deletions": 1}, "files": [{"sha": "26c29d59f801f90eeebc5774c7b5fdcc273f2b13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f3a7ad64aa9ad98921ad3baf01095589dcd312c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f3a7ad64aa9ad98921ad3baf01095589dcd312c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8f3a7ad64aa9ad98921ad3baf01095589dcd312c", "patch": "@@ -1,3 +1,10 @@\n+2005-03-07  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.dg/tree-ssa/20030821-1.c: Verify that the computed goto\n+\twas folded away.\n+\t* gcc.dg/tree-ssa/pr18133-1.c: New test.\n+\t* gcc.dg/tree-ssa/pr18133-2.c: New test.\n+\n 2005-03-07  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* g++.dg/warn/weak1.C: Skip test on hppa*-*-hpux*."}, {"sha": "08062ef1e44b6a6d3c087d8196f855980f14c6d1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030821-1.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f3a7ad64aa9ad98921ad3baf01095589dcd312c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030821-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f3a7ad64aa9ad98921ad3baf01095589dcd312c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030821-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030821-1.c?ref=8f3a7ad64aa9ad98921ad3baf01095589dcd312c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-optimized\" } */\n+/* { dg-options \"-O1 -fdump-tree-dom1 -fdump-tree-optimized\" } */\n \n void foo(int k)\n {\n@@ -21,3 +21,6 @@ y: ;\n }\n \n /* { dg-final { scan-tree-dump-times \"dont_remove \\\\(\\\\)\" 1 \"optimized\"} } */\n+\n+/* We should have folded away the goto &x  */\n+/* { dg-final { scan-tree-dump-times \"goto &x\" 0 \"optimized\"} } */"}, {"sha": "62356a156d6adfda5405f784c9cb70b0e2752783", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr18133-1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f3a7ad64aa9ad98921ad3baf01095589dcd312c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f3a7ad64aa9ad98921ad3baf01095589dcd312c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-1.c?ref=8f3a7ad64aa9ad98921ad3baf01095589dcd312c", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-optimized-blocks\" } */\n+\n+void foo (void)\n+{\n+void *p;\n+p = &&L0;\n+goto *p;\n+L0:\n+return;\n+}\n+\n+/* The goto &L0 should have been optimized away during CFG\n+   cleanups.  */\n+/* { dg-final { scan-tree-dump-times \"goto &L0\" 0 \"optimized\" } } */\n+\n+/* There should not be any abnormal edges as DOM removed the\n+   computed goto.  */\n+\n+/* { dg-final { scan-tree-dump-times \"ab\" 0 \"optimized\" } } */\n+\n+/* And verify that we have fixed the fallthru flag as well. \n+   After DOM we will have two fallthru edges (e->0, 0->1),\n+   but in the dump files we mention the 0->1 two times.  So\n+   scan for 3 instances of \"fallthru\".  */\n+\n+/* { dg-final { scan-tree-dump-times \"fallthru\" 3 \"optimized\" } } */"}, {"sha": "8717640e3272267604cd741efe8c35b590952a05", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr18133-2.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f3a7ad64aa9ad98921ad3baf01095589dcd312c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f3a7ad64aa9ad98921ad3baf01095589dcd312c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-2.c?ref=8f3a7ad64aa9ad98921ad3baf01095589dcd312c", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-optimized-blocks\" } */\n+\n+int c, d;\n+\n+int\n+bar (int a)\n+{\n+  void *p;\n+  int b;\n+\n+  if (a!=0)\n+    {\n+      b = 3;\n+      p = &&L0;\n+    }\n+  else\n+    {\n+      b = 5;\n+      p = &&L1;\n+    }\n+\n+  goto *p;\n+\n+ L0:\n+  c = b;\n+  return 1;\n+\n+ L1:\n+  d = b;\n+  return 0;\n+}\n+\n+/* The both paths to the block containing the goto *p should\n+   have been threaded, thus eliminating the need for the goto *p.  */\n+\n+/* { dg-final { scan-tree-dump-times \"goto p\" 0 \"optimized\" } } */\n+\n+/* There should not be any abnormal edges as DOM removed the\n+   computed goto.  */\n+\n+/* { dg-final { scan-tree-dump-times \"ab\" 0 \"optimized\" } } */"}]}