{"sha": "68ba1039c7daf0485b167fe199ed7e8031158091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhiYTEwMzljN2RhZjA0ODViMTY3ZmUxOTllZDdlODAzMTE1ODA5MQ==", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-01-21T22:27:01Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-01-21T23:06:49Z"}, "message": "[PR98777] LRA: Use preliminary created pseudo for in LRA elimination subpass\n\nLRA did not extend ira_reg_equiv after generation of a pseudo in\neliminate_regs_in_insn which might results in LRA crash.  It is better not\nto extend ira_reg_equiv but to use preliminary generated pseudo.  The\npatch implements it.\n\ngcc/ChangeLog:\n\n\tPR rtl-optimization/98777\n\t* lra-int.h (lra_pmode_pseudo): New extern.\n\t* lra.c (lra_pmode_pseudo): New global.\n\t(lra): Set it up.\n\t* lra-eliminations.c (eliminate_regs_in_insn): Use it.\n\ngcc/testsuite/ChangeLog:\n\n\tPR rtl-optimization/98777\n\t* gcc.target/riscv/pr98777.c: New.", "tree": {"sha": "8e772cc2843b097a3ce590403ed20d0b5b0e4032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e772cc2843b097a3ce590403ed20d0b5b0e4032"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68ba1039c7daf0485b167fe199ed7e8031158091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ba1039c7daf0485b167fe199ed7e8031158091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68ba1039c7daf0485b167fe199ed7e8031158091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ba1039c7daf0485b167fe199ed7e8031158091/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efb6bc55a93a1b8a719e0dab344c0a21344a67a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb6bc55a93a1b8a719e0dab344c0a21344a67a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efb6bc55a93a1b8a719e0dab344c0a21344a67a9"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "c97f9ca4c68ec1f1c68c8a55eb785599ce7a77e5", "filename": "gcc/lra-eliminations.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ba1039c7daf0485b167fe199ed7e8031158091/gcc%2Flra-eliminations.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ba1039c7daf0485b167fe199ed7e8031158091/gcc%2Flra-eliminations.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-eliminations.c?ref=68ba1039c7daf0485b167fe199ed7e8031158091", "patch": "@@ -1059,7 +1059,7 @@ eliminate_regs_in_insn (rtx_insn *insn, bool replace_p, bool first_p,\n \t  && REGNO (reg1) < FIRST_PSEUDO_REGISTER\n \t  && REGNO (reg2) >= FIRST_PSEUDO_REGISTER\n \t  && GET_MODE (reg1) == Pmode\n-\t  && !have_addptr3_insn (gen_reg_rtx (Pmode), reg1,\n+\t  && !have_addptr3_insn (lra_pmode_pseudo, reg1,\n \t\t\t\t XEXP (XEXP (SET_SRC (set), 0), 1)))\n \t{\n \t  XEXP (XEXP (SET_SRC (set), 0), 0) = op2;"}, {"sha": "4dadccc79f45d8a94a43ca31b229fff68aa842dc", "filename": "gcc/lra-int.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ba1039c7daf0485b167fe199ed7e8031158091/gcc%2Flra-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ba1039c7daf0485b167fe199ed7e8031158091/gcc%2Flra-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-int.h?ref=68ba1039c7daf0485b167fe199ed7e8031158091", "patch": "@@ -324,6 +324,7 @@ extern lra_copy_t lra_get_copy (int);\n extern int lra_new_regno_start;\n extern int lra_constraint_new_regno_start;\n extern int lra_bad_spill_regno_start;\n+extern rtx lra_pmode_pseudo;\n extern bitmap_head lra_inheritance_pseudos;\n extern bitmap_head lra_split_regs;\n extern bitmap_head lra_subreg_reload_pseudos;"}, {"sha": "5a4b6638913f1112e538fd3417cc6c6b7d9e2958", "filename": "gcc/lra.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ba1039c7daf0485b167fe199ed7e8031158091/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ba1039c7daf0485b167fe199ed7e8031158091/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=68ba1039c7daf0485b167fe199ed7e8031158091", "patch": "@@ -2192,6 +2192,9 @@ int lra_constraint_new_regno_start;\n    it is possible.  */\n int lra_bad_spill_regno_start;\n \n+/* A pseudo of Pmode.  */\n+rtx lra_pmode_pseudo;\n+\n /* Inheritance pseudo regnos before the new spill pass.\t */\n bitmap_head lra_inheritance_pseudos;\n \n@@ -2255,6 +2258,7 @@ lra (FILE *f)\n \n   lra_dump_file = f;\n   lra_asm_error_p = false;\n+  lra_pmode_pseudo = gen_reg_rtx (Pmode);\n   \n   timevar_push (TV_LRA);\n "}, {"sha": "ea2c2f9ca64e3aff89de52e0a0739409400e9ade", "filename": "gcc/testsuite/gcc.target/riscv/pr98777.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ba1039c7daf0485b167fe199ed7e8031158091/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr98777.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ba1039c7daf0485b167fe199ed7e8031158091/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr98777.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr98777.c?ref=68ba1039c7daf0485b167fe199ed7e8031158091", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fstrict-aliasing -O\" } */\n+\n+typedef struct {\n+  _Complex e;\n+  _Complex f;\n+  _Complex g;\n+  _Complex h;\n+  _Complex i;\n+  _Complex j;\n+  _Complex k;\n+  _Complex l;\n+  _Complex m;\n+  _Complex n;\n+  _Complex o;\n+  _Complex p;\n+} Scl16;\n+\n+Scl16 g1sScl16, g2sScl16, g3sScl16, g4sScl16, g5sScl16, g6sScl16, g7sScl16,\n+    g8sScl16, g9sScl16, g10sScl16, g11sScl16, g12sScl16, g13sScl16, g14sScl16,\n+    g15sScl16, g16sScl16;\n+\n+void testvaScl16();\n+\n+void\n+testitScl16() {\n+  testvaScl16(g10sScl16, g11sScl16, g12sScl16, g13sScl16, g14sScl16, g1sScl16,\n+              g2sScl16, g3sScl16, g4sScl16, g5sScl16, g6sScl16, g7sScl16,\n+              g8sScl16, g9sScl16, g10sScl16, g11sScl16, g12sScl16, g13sScl16,\n+              g14sScl16, g15sScl16, g16sScl16);\n+}"}]}