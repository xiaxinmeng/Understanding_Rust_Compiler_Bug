{"sha": "f9a024084fa2fb9dd89d19019e473eb7dae61e08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlhMDI0MDg0ZmEyZmI5ZGQ4OWQxOTAxOWU0NzNlYjdkYWU2MWUwOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-09-01T06:08:34Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-09-01T06:08:34Z"}, "message": "config.gcc (arm*-*-symbianelf*): Do not include t-bpabi.\n\n\t* config.gcc (arm*-*-symbianelf*): Do not include t-bpabi.\n\t* config/arm/lib1funcs.asm: Do not include supplemental .S files\n\twhen compiling for Symbian.\n\t* config/arm/symbian.h (RENAME_LIBRARY): New macro.\n\t(TARGET_OS_CPP_BUILTINS): Likewise.\n\t* config/arm/t-symbian (LIB1ASMFUNCS): Define.\n\nFrom-SVN: r86875", "tree": {"sha": "723131b3f2c5cea8c4151beefbc1da59a6c4451b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/723131b3f2c5cea8c4151beefbc1da59a6c4451b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9a024084fa2fb9dd89d19019e473eb7dae61e08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9a024084fa2fb9dd89d19019e473eb7dae61e08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9a024084fa2fb9dd89d19019e473eb7dae61e08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9a024084fa2fb9dd89d19019e473eb7dae61e08/comments", "author": null, "committer": null, "parents": [{"sha": "14945fe6b38b48f568e043070b81c04c60e08168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14945fe6b38b48f568e043070b81c04c60e08168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14945fe6b38b48f568e043070b81c04c60e08168"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "576694fbe02317327b55d548817c910b9151f743", "filename": "gcc/config.gcc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9a024084fa2fb9dd89d19019e473eb7dae61e08/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9a024084fa2fb9dd89d19019e473eb7dae61e08/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=f9a024084fa2fb9dd89d19019e473eb7dae61e08", "patch": "@@ -658,10 +658,15 @@ arm*-*-eabi* | arm*-*-symbianelf* )\n \t# TImode.\n \tneed_64bit_hwint=yes\n \ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/bpabi.h\"\n-\ttmake_file=\"t-slibgcc-elf-ver arm/t-arm arm/t-arm-elf arm/t-bpabi\"\n+\ttmake_file=\"t-slibgcc-elf-ver arm/t-arm arm/t-arm-elf\"\n \tcase ${target} in\n+\tarm*-*-eabi*)\n+\t  tmake_file=\"${tmake_file} arm/t-bpabi\"\n+\t  ;;\n \tarm*-*-symbianelf*)\n \t  tm_file=\"${tm_file} arm/symbian.h\"\n+\t  # We do not include t-bpabi for Symbian OS because the system\n+\t  # provides its own implementation of the BPABI functions.\n \t  tmake_file=\"${tmake_file} arm/t-symbian\"\n \t  ;;\n \tesac"}, {"sha": "bc425e5e840bdb56d4d4ab0a66806364d9cc1d57", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9a024084fa2fb9dd89d19019e473eb7dae61e08/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9a024084fa2fb9dd89d19019e473eb7dae61e08/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=f9a024084fa2fb9dd89d19019e473eb7dae61e08", "patch": "@@ -1163,6 +1163,8 @@ LSYM(Lchange_\\register):\n #endif /* L_interwork_call_via_rX */\n #endif /* Arch supports thumb.  */\n \n+#ifndef __symbian__\n #include \"ieee754-df.S\"\n #include \"ieee754-sf.S\"\n #include \"bpabi.S\"\n+#endif /* __symbian__ */"}, {"sha": "47fe2cbba003fa031e5f84cd936c9b19366bd77a", "filename": "gcc/config/arm/symbian.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9a024084fa2fb9dd89d19019e473eb7dae61e08/gcc%2Fconfig%2Farm%2Fsymbian.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9a024084fa2fb9dd89d19019e473eb7dae61e08/gcc%2Fconfig%2Farm%2Fsymbian.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsymbian.h?ref=f9a024084fa2fb9dd89d19019e473eb7dae61e08", "patch": "@@ -64,3 +64,15 @@\n #define SUBTARGET_ASM_FLOAT_SPEC \\\n   \"%{!mfpu=*:-mfpu=vfp} %{!mcpu=*:%{!march=*:-march=armv5t}}\"\n   \n+/* SymbianOS provides the BPABI routines in a separate library.\n+   Therefore, we do not need to define any of them in libgcc.  */\n+#undef RENAME_LIBRARY\n+#define RENAME_LIBRARY(GCC_NAME, AEABI_NAME) /* empty */\n+\n+/* Define the __symbian__ macro.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do \t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define (\"__symbian__\");\t\t\\\n+    } \t\t\t\t\t\t\\\n+  while (false)"}, {"sha": "1b7208b936a5b279eab1ee727751392ef19d5e71", "filename": "gcc/config/arm/t-symbian", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9a024084fa2fb9dd89d19019e473eb7dae61e08/gcc%2Fconfig%2Farm%2Ft-symbian", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9a024084fa2fb9dd89d19019e473eb7dae61e08/gcc%2Fconfig%2Farm%2Ft-symbian", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-symbian?ref=f9a024084fa2fb9dd89d19019e473eb7dae61e08", "patch": "@@ -1,3 +1,17 @@\n+LIB1ASMFUNCS = _bb_init_func _call_via_rX _interwork_call_via_rX\n+\n+# These functions have __aeabi equivalents and will never be called by GCC.  \n+# By putting them in LIB1ASMFUNCS, we avoid the standard libgcc2.c code being\n+# used -- and we make sure that definitions are not available in lib1funcs.asm,\n+# either, so they end up undefined.\n+LIB1ASMFUNCS += \\\n+\t_ashldi3 _ashrdi3 _divdi3 _floatdidf _udivmoddi4 _umoddi3 \\\n+\t_udivdi3 _lshrdi3 _moddi3 _muldi3 _negdi2 _cmpdi2 \\\n+\t_fixdfdi _fixsfdi _fixunsdfdi _fixunssfdi _floatdisf \\\n+\t_negdf2 _addsubdf3 _muldivdf3 _cmpdf2 _unorddf2 _fixdfsi _fixunsdfsi \\\n+\t_truncdfsf2 _negsf2 _addsubsf3 _muldivsf3 _cmpsf2 _unordsf2 \\\n+\t_fixsfsi _fixunssfsi\n+\n # Create a multilib for processors with VFP floating-point, and a\n # multilib for those without -- using the soft-float ABI in both\n # cases.  Symbian OS object should be compiled with interworking"}]}