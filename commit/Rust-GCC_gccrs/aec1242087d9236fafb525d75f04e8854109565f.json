{"sha": "aec1242087d9236fafb525d75f04e8854109565f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVjMTI0MjA4N2Q5MjM2ZmFmYjUyNWQ3NWYwNGU4ODU0MTA5NTY1Zg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T05:31:36Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T05:31:36Z"}, "message": "graphite-interchange.c (memory_strides_in_loop_depth): New.\n\n2009-11-18  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-interchange.c (memory_strides_in_loop_depth): New.\n\t(pbb_interchange_profitable_p): Call memory_strides_in_loop_depth.\n\nFrom-SVN: r154639", "tree": {"sha": "344ce27f744edd0dc4cfd8b8894c04d59965f202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/344ce27f744edd0dc4cfd8b8894c04d59965f202"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aec1242087d9236fafb525d75f04e8854109565f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aec1242087d9236fafb525d75f04e8854109565f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aec1242087d9236fafb525d75f04e8854109565f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aec1242087d9236fafb525d75f04e8854109565f/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25e20d33e670ee1602e51cdf4be0c25a8d97954d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25e20d33e670ee1602e51cdf4be0c25a8d97954d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25e20d33e670ee1602e51cdf4be0c25a8d97954d"}], "stats": {"total": 57, "additions": 35, "deletions": 22}, "files": [{"sha": "567d0e97cc22f5e42130f433adb3bb8a3a367cd6", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aec1242087d9236fafb525d75f04e8854109565f/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aec1242087d9236fafb525d75f04e8854109565f/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=aec1242087d9236fafb525d75f04e8854109565f", "patch": "@@ -1,3 +1,8 @@\n+2009-11-18  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-interchange.c (memory_strides_in_loop_depth): New.\n+\t(pbb_interchange_profitable_p): Call memory_strides_in_loop_depth.\n+\n 2009-11-18  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-blocking.c (scop_do_block): New."}, {"sha": "280a14e6d45844c96b61c85479594e9654bc0975", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 30, "deletions": 22, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aec1242087d9236fafb525d75f04e8854109565f/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aec1242087d9236fafb525d75f04e8854109565f/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=aec1242087d9236fafb525d75f04e8854109565f", "patch": "@@ -193,7 +193,7 @@ build_partial_difference (ppl_Pointset_Powerset_C_Polyhedron_t *p,\n \n \n /* Set STRIDE to the stride of PDR in memory by advancing by one in\n-   time dimension DEPTH.  */\n+   the loop at DEPTH.  */\n \n static void\n memory_stride_in_loop (Value stride, graphite_dim_t depth, poly_dr_p pdr)\n@@ -329,6 +329,32 @@ memory_stride_in_loop (Value stride, graphite_dim_t depth, poly_dr_p pdr)\n   ppl_delete_Linear_Expression (le);\n }\n \n+/* Sets STRIDES to the sum of all the strides of the data references accessed   */\n+\n+static void\n+memory_strides_in_loop_depth (poly_bb_p pbb, graphite_dim_t depth, Value strides)\n+{\n+  int i;\n+  poly_dr_p pdr;\n+  Value s, n;\n+\n+  value_set_si (strides, 0);\n+  value_init (s);\n+  value_init (n);\n+\n+  for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb), i, pdr); i++)\n+    {\n+      value_set_si (n, PDR_NB_REFS (pdr));\n+\n+      memory_stride_in_loop (s, depth, pdr);\n+      value_multiply (s, s, n);\n+      value_addto (strides, strides, s);\n+    }\n+\n+  value_clear (s);\n+  value_clear (n);\n+}\n+\n /* Returns true when it is profitable to interchange time dimensions DEPTH1\n    and DEPTH2 with DEPTH1 < DEPTH2 for PBB.\n \n@@ -414,39 +440,21 @@ static bool\n pbb_interchange_profitable_p (graphite_dim_t depth1, graphite_dim_t depth2,\n \t\t\t      poly_bb_p pbb)\n {\n-  int i;\n-  poly_dr_p pdr;\n-  Value d1, d2, s, n;\n+  Value d1, d2;\n   bool res;\n \n   gcc_assert (depth1 < depth2);\n \n   value_init (d1);\n-  value_set_si (d1, 0);\n   value_init (d2);\n-  value_set_si (d2, 0);\n-  value_init (s);\n-  value_init (n);\n \n-  for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb), i, pdr); i++)\n-    {\n-      value_set_si (n, PDR_NB_REFS (pdr));\n-\n-      memory_stride_in_loop (s, depth1, pdr);\n-      value_multiply (s, s, n);\n-      value_addto (d1, d1, s);\n-\n-      memory_stride_in_loop (s, depth2, pdr);\n-      value_multiply (s, s, n);\n-      value_addto (d2, d2, s);\n-    }\n+  memory_strides_in_loop_depth (pbb, depth1, d1);\n+  memory_strides_in_loop_depth (pbb, depth2, d2);\n \n   res = value_lt (d1, d2);\n \n   value_clear (d1);\n   value_clear (d2);\n-  value_clear (s);\n-  value_clear (n);\n \n   return res;\n }"}]}