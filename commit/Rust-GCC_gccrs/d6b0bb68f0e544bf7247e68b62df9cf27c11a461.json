{"sha": "d6b0bb68f0e544bf7247e68b62df9cf27c11a461", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZiMGJiNjhmMGU1NDRiZjcyNDdlNjhiNjJkZjljZjI3YzExYTQ2MQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-07-03T18:43:21Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-07-03T18:43:21Z"}, "message": "formatting tweaks\n\nFrom-SVN: r12387", "tree": {"sha": "d4ef5545062dcc3680216535a75f70f921f372ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4ef5545062dcc3680216535a75f70f921f372ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6b0bb68f0e544bf7247e68b62df9cf27c11a461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b0bb68f0e544bf7247e68b62df9cf27c11a461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6b0bb68f0e544bf7247e68b62df9cf27c11a461", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b0bb68f0e544bf7247e68b62df9cf27c11a461/comments", "author": null, "committer": null, "parents": [{"sha": "ba0d6745bdf71e0b08dbb05c2a712fb3e0225a75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba0d6745bdf71e0b08dbb05c2a712fb3e0225a75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba0d6745bdf71e0b08dbb05c2a712fb3e0225a75"}], "stats": {"total": 70, "additions": 35, "deletions": 35}, "files": [{"sha": "6ff5d49f43aa1e33cf9df1b502d21c90b005eee3", "filename": "gcc/collect2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6b0bb68f0e544bf7247e68b62df9cf27c11a461/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6b0bb68f0e544bf7247e68b62df9cf27c11a461/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=d6b0bb68f0e544bf7247e68b62df9cf27c11a461", "patch": "@@ -1352,13 +1352,13 @@ main (argc, argv)\n   unlink (ldout);\n \n   /* If -r or they'll be run via some other method, don't build the\n-     constructor or destructor list, just return now. */\n+     constructor or destructor list, just return now.  */\n   if (rflag || ! do_collecting)\n     return 0;\n \n   /* Examine the namelist with nm and search it for static constructors\n      and destructors to call.\n-     Write the constructor and destructor tables to a .s file and reload. */\n+     Write the constructor and destructor tables to a .s file and reload.  */\n \n   scan_prog_file (output_file, PASS_FIRST);\n "}, {"sha": "8cf39d1aea85a78f7ce8005cfbc91ae4b070c35b", "filename": "gcc/longlong.h", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6b0bb68f0e544bf7247e68b62df9cf27c11a461/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6b0bb68f0e544bf7247e68b62df9cf27c11a461/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=d6b0bb68f0e544bf7247e68b62df9cf27c11a461", "patch": "@@ -91,65 +91,65 @@\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"add %1,%4,%5\n \taddc %0,%2,%3\"\t\t\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n-\t    \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n-\t   : \"%r\" ((USItype)(ah)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype)(bh)),\t\t\t\t\t\\\n-\t     \"%r\" ((USItype)(al)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype)(bl)))\n+\t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n+\t    \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n+\t   : \"%r\" ((USItype) (ah)),\t\t\t\t\t\\\n+\t     \"rI\" ((USItype) (bh)),\t\t\t\t\t\\\n+\t     \"%r\" ((USItype) (al)),\t\t\t\t\t\\\n+\t     \"rI\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"sub %1,%4,%5\n \tsubc %0,%2,%3\"\t\t\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n-\t     \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n-\t   : \"r\" ((USItype)(ah)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype)(bh)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(al)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype)(bl)))\n+\t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n+\t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n+\t   : \"r\" ((USItype) (ah)),\t\t\t\t\t\\\n+\t     \"rI\" ((USItype) (bh)),\t\t\t\t\t\\\n+\t     \"r\" ((USItype) (al)),\t\t\t\t\t\\\n+\t     \"rI\" ((USItype) (bl)))\n #define umul_ppmm(xh, xl, m0, m1) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     USItype __m0 = (m0), __m1 = (m1);\t\t\t\t\t\\\n     __asm__ (\"multiplu %0,%1,%2\"\t\t\t\t\t\\\n-\t     : \"=r\" ((USItype)(xl))\t\t\t\t\t\\\n+\t     : \"=r\" ((USItype) (xl))\t\t\t\t\t\\\n \t     : \"r\" (__m0),\t\t\t\t\t\t\\\n \t       \"r\" (__m1));\t\t\t\t\t\t\\\n     __asm__ (\"multmu %0,%1,%2\"\t\t\t\t\t\t\\\n-\t     : \"=r\" ((USItype)(xh))\t\t\t\t\t\\\n+\t     : \"=r\" ((USItype) (xh))\t\t\t\t\t\\\n \t     : \"r\" (__m0),\t\t\t\t\t\t\\\n \t       \"r\" (__m1));\t\t\t\t\t\t\\\n   } while (0)\n #define udiv_qrnnd(q, r, n1, n0, d) \\\n   __asm__ (\"dividu %0,%3,%4\"\t\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype)(q)),\t\t\t\t\t\\\n-\t     \"=q\" ((USItype)(r))\t\t\t\t\t\\\n-\t   : \"1\" ((USItype)(n1)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(n0)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(d)))\n+\t   : \"=r\" ((USItype) (q)),\t\t\t\t\t\\\n+\t     \"=q\" ((USItype) (r))\t\t\t\t\t\\\n+\t   : \"1\" ((USItype) (n1)),\t\t\t\t\t\\\n+\t     \"r\" ((USItype) (n0)),\t\t\t\t\t\\\n+\t     \"r\" ((USItype) (d)))\n #define count_leading_zeros(count, x) \\\n     __asm__ (\"clz %0,%1\"\t\t\t\t\t\t\\\n-\t     : \"=r\" ((USItype)(count))\t\t\t\t\t\\\n-\t     : \"r\" ((USItype)(x)))\n+\t     : \"=r\" ((USItype) (count))\t\t\t\t\t\\\n+\t     : \"r\" ((USItype) (x)))\n #endif /* __a29k__ */\n \n #if defined (__arm__)\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"adds\t%1, %4, %5\n \tadc\t%0, %2, %3\"\t\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n-\t     \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n-\t   : \"%r\" ((USItype)(ah)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype)(bh)),\t\t\t\t\t\\\n-\t     \"%r\" ((USItype)(al)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype)(bl)))\n+\t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n+\t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n+\t   : \"%r\" ((USItype) (ah)),\t\t\t\t\t\\\n+\t     \"rI\" ((USItype) (bh)),\t\t\t\t\t\\\n+\t     \"%r\" ((USItype) (al)),\t\t\t\t\t\\\n+\t     \"rI\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"subs\t%1, %4, %5\n \tsbc\t%0, %2, %3\"\t\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n-\t     \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n-\t   : \"r\" ((USItype)(ah)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype)(bh)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(al)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype)(bl)))\n+\t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n+\t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n+\t   : \"r\" ((USItype) (ah)),\t\t\t\t\t\\\n+\t     \"rI\" ((USItype) (bh)),\t\t\t\t\t\\\n+\t     \"r\" ((USItype) (al)),\t\t\t\t\t\\\n+\t     \"rI\" ((USItype) (bl)))\n #define umul_ppmm(xh, xl, a, b) \\\n {register USItype __t0, __t1, __t2;\t\t\t\t\t\\\n   __asm__ (\"%@ Inlined umul_ppmm"}]}