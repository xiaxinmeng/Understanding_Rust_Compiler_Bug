{"sha": "74045879770ace0b14f0f809c8e795069044cf41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQwNDU4Nzk3NzBhY2UwYjE0ZjBmODA5YzhlNzk1MDY5MDQ0Y2Y0MQ==", "commit": {"author": {"name": "Jan-Benedict Glaw", "email": "jbglaw@lug-owl.de", "date": "2021-05-26T13:22:11Z"}, "committer": {"name": "Jan-Benedict Glaw", "email": "jbglaw@getslash.de", "date": "2021-05-26T13:22:11Z"}, "message": "arc: Remove useless register keyword\n\nThe \"register\" keyword was removed in C++17, remove them to get the backend\nto build again.\n\ngcc/\n\t* config/arc/arc.c (arc_address_cost, arc_print_operand_address,\n\tarc_ccfsm_advance, symbolic_reference_mentioned_p,\n\tarc_raw_symbolic_reference_mentioned_p): Remove register\n\tkeyword.", "tree": {"sha": "117bf208a457c162fd2faa0df3548b1e920f9815", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/117bf208a457c162fd2faa0df3548b1e920f9815"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74045879770ace0b14f0f809c8e795069044cf41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74045879770ace0b14f0f809c8e795069044cf41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74045879770ace0b14f0f809c8e795069044cf41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74045879770ace0b14f0f809c8e795069044cf41/comments", "author": {"login": "jbglaw", "id": 7965297, "node_id": "MDQ6VXNlcjc5NjUyOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/7965297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbglaw", "html_url": "https://github.com/jbglaw", "followers_url": "https://api.github.com/users/jbglaw/followers", "following_url": "https://api.github.com/users/jbglaw/following{/other_user}", "gists_url": "https://api.github.com/users/jbglaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbglaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbglaw/subscriptions", "organizations_url": "https://api.github.com/users/jbglaw/orgs", "repos_url": "https://api.github.com/users/jbglaw/repos", "events_url": "https://api.github.com/users/jbglaw/events{/privacy}", "received_events_url": "https://api.github.com/users/jbglaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88834c7d05acf5ce4eaccda56fb04436595e2a52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88834c7d05acf5ce4eaccda56fb04436595e2a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88834c7d05acf5ce4eaccda56fb04436595e2a52"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "9153f0529abcd18b7fe6df1c373d493ec312fba6", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74045879770ace0b14f0f809c8e795069044cf41/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74045879770ace0b14f0f809c8e795069044cf41/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=74045879770ace0b14f0f809c8e795069044cf41", "patch": "@@ -2488,8 +2488,8 @@ arc_address_cost (rtx addr, machine_mode, addr_space_t, bool speed)\n \n     case PLUS :\n       {\n-\tregister rtx plus0 = XEXP (addr, 0);\n-\tregister rtx plus1 = XEXP (addr, 1);\n+\trtx plus0 = XEXP (addr, 0);\n+\trtx plus1 = XEXP (addr, 1);\n \n \tif (GET_CODE (plus0) != REG\n \t    && (GET_CODE (plus0) != MULT\n@@ -5032,7 +5032,7 @@ arc_print_operand (FILE *file, rtx x, int code)\n void\n arc_print_operand_address (FILE *file , rtx addr)\n {\n-  register rtx base, index = 0;\n+  rtx base, index = 0;\n \n   switch (GET_CODE (addr))\n     {\n@@ -5157,7 +5157,7 @@ static void\n arc_ccfsm_advance (rtx_insn *insn, struct arc_ccfsm *state)\n {\n   /* BODY will hold the body of INSN.  */\n-  register rtx body;\n+  rtx body;\n \n   /* This will be 1 if trying to repeat the trick (ie: do the `else' part of\n      an if/then/else), and things need to be reversed.  */\n@@ -6130,8 +6130,8 @@ arc_legitimate_pic_addr_p (rtx addr)\n static bool\n symbolic_reference_mentioned_p (rtx op)\n {\n-  register const char *fmt;\n-  register int i;\n+  const char *fmt;\n+  int i;\n \n   if (GET_CODE (op) == SYMBOL_REF || GET_CODE (op) == LABEL_REF)\n     return true;\n@@ -6141,7 +6141,7 @@ symbolic_reference_mentioned_p (rtx op)\n     {\n       if (fmt[i] == 'E')\n \t{\n-\t  register int j;\n+\t  int j;\n \n \t  for (j = XVECLEN (op, i) - 1; j >= 0; j--)\n \t    if (symbolic_reference_mentioned_p (XVECEXP (op, i, j)))\n@@ -6163,8 +6163,8 @@ symbolic_reference_mentioned_p (rtx op)\n bool\n arc_raw_symbolic_reference_mentioned_p (rtx op, bool skip_local)\n {\n-  register const char *fmt;\n-  register int i;\n+  const char *fmt;\n+  int i;\n \n   if (GET_CODE(op) == UNSPEC)\n     return false;\n@@ -6184,7 +6184,7 @@ arc_raw_symbolic_reference_mentioned_p (rtx op, bool skip_local)\n     {\n       if (fmt[i] == 'E')\n \t{\n-\t  register int j;\n+\t  int j;\n \n \t  for (j = XVECLEN (op, i) - 1; j >= 0; j--)\n \t    if (arc_raw_symbolic_reference_mentioned_p (XVECEXP (op, i, j),"}]}