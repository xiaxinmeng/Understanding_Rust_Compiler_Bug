{"sha": "6a2053773b894b7f347752396d64e28e326d733e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyMDUzNzczYjg5NGI3ZjM0Nzc1MjM5NmQ2NGUyOGUzMjZkNzMzZQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-02-01T16:17:21Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-02-01T16:17:21Z"}, "message": "Document various BLOCK macros.\n\ngcc/ChangeLog:\n\n\t* tree.h (BLOCK_VARS): Add comment.\n\t(BLOCK_SUBBLOCKS): Same.\n\t(BLOCK_SUPERCONTEXT): Same.\n\t(BLOCK_ABSTRACT_ORIGIN): Same.\n\t(inlined_function_outer_scope_p): Same.", "tree": {"sha": "fe67a3ff857f03109e0f49d93b889122bcca19fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe67a3ff857f03109e0f49d93b889122bcca19fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a2053773b894b7f347752396d64e28e326d733e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2053773b894b7f347752396d64e28e326d733e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2053773b894b7f347752396d64e28e326d733e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2053773b894b7f347752396d64e28e326d733e/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0718336a5284dd5b40fd6691a94d6be93a80f279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0718336a5284dd5b40fd6691a94d6be93a80f279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0718336a5284dd5b40fd6691a94d6be93a80f279"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "4f33868e8e1d01e2ae5621d7444e20d46c68013c", "filename": "gcc/tree.h", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2053773b894b7f347752396d64e28e326d733e/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2053773b894b7f347752396d64e28e326d733e/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=6a2053773b894b7f347752396d64e28e326d733e", "patch": "@@ -1912,16 +1912,27 @@ class auto_suppress_location_wrappers\n #define OMP_CLAUSE_OPERAND(NODE, I)\t\t\t\t\\\n \tOMP_CLAUSE_ELT_CHECK (NODE, I)\n \n-/* In a BLOCK node.  */\n+/* In a BLOCK (scope) node:\n+   Variables declared in the scope NODE.  */\n #define BLOCK_VARS(NODE) (BLOCK_CHECK (NODE)->block.vars)\n #define BLOCK_NONLOCALIZED_VARS(NODE) \\\n   (BLOCK_CHECK (NODE)->block.nonlocalized_vars)\n #define BLOCK_NUM_NONLOCALIZED_VARS(NODE) \\\n   vec_safe_length (BLOCK_NONLOCALIZED_VARS (NODE))\n #define BLOCK_NONLOCALIZED_VAR(NODE,N) (*BLOCK_NONLOCALIZED_VARS (NODE))[N]\n+/* A chain of BLOCKs (scopes) nested within the scope NODE.  */\n #define BLOCK_SUBBLOCKS(NODE) (BLOCK_CHECK (NODE)->block.subblocks)\n+/* The scope enclosing the scope NODE, or FUNCTION_DECL for the \"outermost\"\n+   function scope.  Inlined functions are chained by this so that given\n+   expression E and its TREE_BLOCK(E) B, BLOCK_SUPERCONTEXT(B) is the scope\n+   in which E has been made or into which E has been inlined.   */\n #define BLOCK_SUPERCONTEXT(NODE) (BLOCK_CHECK (NODE)->block.supercontext)\n+/* Points to the next scope at the same level of nesting as scope NODE.  */\n #define BLOCK_CHAIN(NODE) (BLOCK_CHECK (NODE)->block.chain)\n+/* A BLOCK, or FUNCTION_DECL of the function from which a block has been\n+   inlined.  In a scope immediately enclosing an inlined leaf expression,\n+   points to the outermost scope into which it has been inlined (thus\n+   bypassing all intermediate BLOCK_SUPERCONTEXTs). */\n #define BLOCK_ABSTRACT_ORIGIN(NODE) (BLOCK_CHECK (NODE)->block.abstract_origin)\n #define BLOCK_ORIGIN(NODE) \\\n   (BLOCK_ABSTRACT_ORIGIN(NODE) ? BLOCK_ABSTRACT_ORIGIN(NODE) : (NODE))\n@@ -5077,7 +5088,10 @@ function_args_iter_next (function_args_iterator *i)\n   i->next = TREE_CHAIN (i->next);\n }\n \n-/* We set BLOCK_SOURCE_LOCATION only to inlined function entry points.  */\n+/* Returns true if a BLOCK has a source location.\n+   BLOCK_SOURCE_LOCATION is set only to inlined function entry points,\n+   so the function returns true for all but the innermost and outermost\n+   blocks into which an expression has been inlined.  */\n \n static inline bool\n inlined_function_outer_scope_p (const_tree block)"}]}