{"sha": "7543a6da90def8a847bb147444e8d42365c223f7", "node_id": "C_kwDOANBUbNoAKDc1NDNhNmRhOTBkZWY4YTg0N2JiMTQ3NDQ0ZThkNDIzNjVjMjIzZjc", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-11T21:52:13Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-11T21:52:13Z"}, "message": "analyzer: more state machine documentation\n\ngcc/analyzer/ChangeLog:\n\t* sm-fd.dot: Fix typo in comment.\n\t* sm-file.dot: New file.\n\t* varargs.cc: Fix typo in comment.\n\t* varargs.dot: New file.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "b1895eb570f7ae50d48d4b51fa76f272f8ca55e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1895eb570f7ae50d48d4b51fa76f272f8ca55e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7543a6da90def8a847bb147444e8d42365c223f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7543a6da90def8a847bb147444e8d42365c223f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7543a6da90def8a847bb147444e8d42365c223f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7543a6da90def8a847bb147444e8d42365c223f7/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65752c1f7c41c5641eef298454825910a57146e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65752c1f7c41c5641eef298454825910a57146e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65752c1f7c41c5641eef298454825910a57146e4"}], "stats": {"total": 127, "additions": 125, "deletions": 2}, "files": [{"sha": "5c9984a0fb7338a3b02125e63077cdf8a62b2c35", "filename": "gcc/analyzer/sm-fd.dot", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7543a6da90def8a847bb147444e8d42365c223f7/gcc%2Fanalyzer%2Fsm-fd.dot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7543a6da90def8a847bb147444e8d42365c223f7/gcc%2Fanalyzer%2Fsm-fd.dot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-fd.dot?ref=7543a6da90def8a847bb147444e8d42365c223f7", "patch": "@@ -18,7 +18,7 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-/* Keep this in-sync with sm-dot.cc  */\n+/* Keep this in-sync with sm-fd.cc  */\n \n digraph \"fd\" {\n "}, {"sha": "ac0f3610f146bf4f43ae434b3ec749d4203a6a87", "filename": "gcc/analyzer/sm-file.dot", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7543a6da90def8a847bb147444e8d42365c223f7/gcc%2Fanalyzer%2Fsm-file.dot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7543a6da90def8a847bb147444e8d42365c223f7/gcc%2Fanalyzer%2Fsm-file.dot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-file.dot?ref=7543a6da90def8a847bb147444e8d42365c223f7", "patch": "@@ -0,0 +1,67 @@\n+/* An overview of the state machine from sm-file.cc.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+   Contributed by David Malcolm <dmalcolm@redhat.com>.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/* Keep this in-sync with sm-file.cc  */\n+\n+digraph \"file\" {\n+\n+  /* STATES. */\n+\n+  /* Start state.  */\n+  start;\n+\n+  /* State for a FILE * returned from fopen that hasn't been checked for\n+     NULL.\n+     It could be an open stream, or could be NULL.  */\n+  unchecked;\n+\n+  /* State for a FILE * that's known to be NULL.  */\n+  null;\n+\n+  /* State for a FILE * that's known to be a non-NULL open stream.  */\n+  nonnull;\n+\n+  /* State for a FILE * that's had fclose called on it.  */\n+  closed;\n+\n+  /* Stop state, for a FILE * we don't want to track any more.  */\n+  stop;\n+\n+  /* TRANSITIONS. */\n+\n+  /* On \"fopen\".  */\n+  start -> unchecked [label=\"on 'X = fopen(...);'\"];\n+\n+  /* On \"fclose\".  */\n+  start -> closed [label=\"on 'close(X);'\"];\n+  /* TODO: is it safe to call fclose (NULL) ? */\n+  unchecked -> closed [label=\"on 'close(X);'\"];\n+  null -> closed [label=\"on 'close(X);'\"];\n+  nonnull -> closed [label=\"on 'close(X);'\"];\n+  closed -> stop [label=\"on 'close(X);':\\nWarn('double fclose')\"];\n+\n+  /* on_condition.  */\n+  unchecked -> nonnull [label=\"on 'X != 0'\"];\n+  unchecked -> null [label=\"on 'X == 0'\"];\n+\n+  /* Leaks.  */\n+  unchecked -> stop [label=\"on leak:\\nWarn('leak')\"];\n+  nonnull -> stop [label=\"on leak:\\nWarn('leak')\"];\n+}"}, {"sha": "6fc20f07a37ebda4e19edd3fa0f0519e48e425a8", "filename": "gcc/analyzer/varargs.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7543a6da90def8a847bb147444e8d42365c223f7/gcc%2Fanalyzer%2Fvarargs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7543a6da90def8a847bb147444e8d42365c223f7/gcc%2Fanalyzer%2Fvarargs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fvarargs.cc?ref=7543a6da90def8a847bb147444e8d42365c223f7", "patch": "@@ -216,7 +216,7 @@ class va_list_state_machine : public state_machine\n   }\n   std::unique_ptr<pending_diagnostic> on_leak (tree var) const final override;\n \n-  /* State for a va_list that the result of a va_start or va_copy.  */\n+  /* State for a va_list that is the result of a va_start or va_copy.  */\n   state_t m_started;\n \n   /* State for a va_list that has had va_end called on it.  */"}, {"sha": "b456c9675c6fb11ee98b95524163610eccba37e2", "filename": "gcc/analyzer/varargs.dot", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7543a6da90def8a847bb147444e8d42365c223f7/gcc%2Fanalyzer%2Fvarargs.dot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7543a6da90def8a847bb147444e8d42365c223f7/gcc%2Fanalyzer%2Fvarargs.dot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fvarargs.dot?ref=7543a6da90def8a847bb147444e8d42365c223f7", "patch": "@@ -0,0 +1,56 @@\n+/* An overview of the state machine from varargs.cc\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+   Contributed by David Malcolm <dmalcolm@redhat.com>.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/* Keep this in-sync with varargs.cc  */\n+\n+digraph \"va_list\" {\n+\n+  /* STATES. */\n+\n+  /* Start state.  */\n+  start;\n+\n+  /* State for a va_list that is the result of a va_start or va_copy.  */\n+  started;\n+\n+  /* State for a va_list that has had va_end called on it.  */\n+  ended;\n+\n+  /* TRANSITIONS. */\n+\n+  /* on_va_start: */\n+  start -> started [label=\"on 'va_start(X, ...)'\"];\n+\n+  /* on_va_copy: */\n+  start -> started [label=\"on 'va_copy(X, ...)'\"];\n+  // in check_for_ended_va_list:\n+  ended -> ended [label=\"on 'va_copy(X, ...)':\\nWarn('use after va_end')\"];\n+\n+  /* on_va_arg: */\n+  started -> started [label=\"on 'va_arg(X, ...)'\"];\n+  started -> started [label=\"on 'va_copy(..., X)'\"];\n+  // in check_for_ended_va_list:\n+  ended -> ended [label=\"on 'va_arg(X, ...)':\\nWarn('use after va_end')\"];\n+\n+  /* on_va_end: */\n+  started -> ended [label=\"on 'va_end(X)'\"];\n+  // in check_for_ended_va_list:\n+  ended -> ended [label=\"on 'va_end(X)':\\nWarn('use after va_end')\"];\n+}"}]}