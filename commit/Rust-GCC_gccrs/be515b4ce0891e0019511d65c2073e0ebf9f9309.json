{"sha": "be515b4ce0891e0019511d65c2073e0ebf9f9309", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU1MTViNGNlMDg5MWUwMDE5NTExZDY1YzIwNzNlMGViZjlmOTMwOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-10-20T17:21:19Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-10-20T17:21:19Z"}, "message": "*.C: Use target c++17 instead of explicit dg-options.\n\n\t* g++.dg/*.C: Use target c++17 instead of explicit dg-options.\n\t* lib/g++-dg.exp: Don't test C++11 by default.  Add C++17 to\n\tthe list of default stds to test.\n\nFrom-SVN: r265343", "tree": {"sha": "735f98fc939ad847b620a55583a4dfd614998209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/735f98fc939ad847b620a55583a4dfd614998209"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be515b4ce0891e0019511d65c2073e0ebf9f9309", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be515b4ce0891e0019511d65c2073e0ebf9f9309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be515b4ce0891e0019511d65c2073e0ebf9f9309", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be515b4ce0891e0019511d65c2073e0ebf9f9309/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca66a6cd6101b234a0506715f517cc16e570b123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca66a6cd6101b234a0506715f517cc16e570b123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca66a6cd6101b234a0506715f517cc16e570b123"}], "stats": {"total": 987, "additions": 554, "deletions": 433}, "files": [{"sha": "eff5d08faed8141d2ca2a1e2f74d142182d6d523", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,3 +1,9 @@\n+2018-10-20  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/*.C: Use target c++17 instead of explicit dg-options.\n+\t* lib/g++-dg.exp: Don't test C++11 by default.  Add C++17 to\n+\tthe list of default stds to test.\n+\n 2018-10-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/87647"}, {"sha": "279a478757680e3cb44afdce18a10137b68be9b2", "filename": "gcc/testsuite/g++.dg/concepts/alias1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "06ffb1af5297db49420d2800e2966412758a9a99", "filename": "gcc/testsuite/g++.dg/concepts/alias2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "2901c04188165cafe6f665b70e9c3223e978407d", "filename": "gcc/testsuite/g++.dg/concepts/alias3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "2c9f5defeb0115b781d7c90c2640aef0c091c0d4", "filename": "gcc/testsuite/g++.dg/concepts/alias4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "2682940cedd36185c9dcdcd91a715c37ece4f147", "filename": "gcc/testsuite/g++.dg/concepts/auto1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T1, class T2> class A { };\n "}, {"sha": "abfb20191251a8e93aee61d86b728aa8aac9c147", "filename": "gcc/testsuite/g++.dg/concepts/auto3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class...> class tuple {};\n "}, {"sha": "4eb2ae8f7d53d7af1163b5505536cfc56bd3b6f2", "filename": "gcc/testsuite/g++.dg/concepts/auto4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/85006\n-// { dg-additional-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-additional-options \"-fconcepts\" }\n \n template<typename... Ts> struct A {};\n "}, {"sha": "936dd6826f0e4ede0bf1f25cc86334e9b6781991", "filename": "gcc/testsuite/g++.dg/concepts/class-deduction1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass-deduction1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass-deduction1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass-deduction1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T>\n concept bool Isint = __is_same_as(T,int);"}, {"sha": "e0718d1d0cf8228c7928ab43c8baf7bb7133ae52", "filename": "gcc/testsuite/g++.dg/concepts/class-deduction2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass-deduction2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass-deduction2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass-deduction2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/85706\n-// { dg-additional-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-additional-options \"-fconcepts\" }\n \n template<class T> struct S {\n   S(T);"}, {"sha": "dc5523e240733a019b3521cc467e1325178cb4ef", "filename": "gcc/testsuite/g++.dg/concepts/class.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Class() { return __is_class(T); }"}, {"sha": "a738e6e82cde5987635e23d3e2764e1b2fecc1bc", "filename": "gcc/testsuite/g++.dg/concepts/class1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "ec8718114a7368c19a65aa13c9109f0c41fe905a", "filename": "gcc/testsuite/g++.dg/concepts/class2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "256370df46d61b1957d24df9c0e665019ec5d067", "filename": "gcc/testsuite/g++.dg/concepts/class3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "b583e55411df8359f9b54de5856793b02c277485", "filename": "gcc/testsuite/g++.dg/concepts/class4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Class() { return __is_class(T); }"}, {"sha": "7bf620edc5cafef3c436d72d9ddd5cca7af84f59", "filename": "gcc/testsuite/g++.dg/concepts/class5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool One() { return sizeof(T) >= 4; }"}, {"sha": "bdd60918c8e096ea5477dcd0c583c757140ec8c4", "filename": "gcc/testsuite/g++.dg/concepts/class6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool One() { return sizeof(T) >= 4; }"}, {"sha": "c2b6614aeea3955997afef377ed2e8f9e91c9bde", "filename": "gcc/testsuite/g++.dg/concepts/constrained-parm.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fconstrained-parm.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fconstrained-parm.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fconstrained-parm.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "87f2ac90b20177a85399d9f2329d34d80efdfd3f", "filename": "gcc/testsuite/g++.dg/concepts/debug1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdebug1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdebug1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdebug1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/84551\n-// { dg-options \"-g -O -std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-g -O -fconcepts\" }\n \n template<typename> concept bool C() { return true; }\n "}, {"sha": "7ac7872efb585294572aa8b387dda7fe5a27fba2", "filename": "gcc/testsuite/g++.dg/concepts/decl-diagnose.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdecl-diagnose.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdecl-diagnose.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdecl-diagnose.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n typedef concept int CINT; // { dg-error \"'concept' cannot appear in a typedef declaration\" }\n "}, {"sha": "bebbda1a1faea11a3c878a8bc4da9fefec8b35f6", "filename": "gcc/testsuite/g++.dg/concepts/deduction-constraint1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdeduction-constraint1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdeduction-constraint1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdeduction-constraint1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/67007\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class U>\n concept bool A ="}, {"sha": "9bb150605731aadc107482269ac664c7acbfdf01", "filename": "gcc/testsuite/g++.dg/concepts/diagnostic1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/67159\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T, class U>\n concept bool SameAs = __is_same_as(T, U);"}, {"sha": "930adf405c9ec0a26a47d5016ad9438fee7d2cd8", "filename": "gcc/testsuite/g++.dg/concepts/disjunction1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdisjunction1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdisjunction1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdisjunction1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66962\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <typename> struct remove_cv;\n template <typename> struct is_reference;"}, {"sha": "f865d5ec2c70f4fccc194c2f817684fc431be338", "filename": "gcc/testsuite/g++.dg/concepts/dr1430.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66092\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <type_traits>\n "}, {"sha": "faec3543461f7d8ccd8f469f4607969f914f36dc", "filename": "gcc/testsuite/g++.dg/concepts/equiv.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Check equivalence of short- and longhand declarations.\n "}, {"sha": "2094ca9f388b996f79b04ae2887b59c424c47e8c", "filename": "gcc/testsuite/g++.dg/concepts/equiv2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n \n // template<typename T>"}, {"sha": "99bd72e069c88f58fd32d66a485b6c67c1564eb3", "filename": "gcc/testsuite/g++.dg/concepts/explicit-inst1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "ea313876f017945c7f86efe283418a18294c2a7f", "filename": "gcc/testsuite/g++.dg/concepts/explicit-inst2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "18d3c496f38919a3e06e6542b431a41010c8ef13", "filename": "gcc/testsuite/g++.dg/concepts/explicit-inst3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "20f437705391138beb9200d3408bc425fad60bf4", "filename": "gcc/testsuite/g++.dg/concepts/explicit-inst4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "bff06f21b6fe6433e17c84493fa154e855c0b762", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "ca8b8a037bcbc9f3d289d13bf406c6f4921997d1", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "fd48da1c2805aec26932bf319099bdca3f675e0d", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "75a2dec6f49b3e5dffd90d77486bfde3b30be7c0", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "d83eec11bc288592c1b2c2626735e5d846129ff2", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "b5487072e22e6300a530ae93b2f68c9e56648a09", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n struct A {"}, {"sha": "33dad0a47a6892aa77c9e88981b0433df8733cc6", "filename": "gcc/testsuite/g++.dg/concepts/expression.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <cassert>\n #include <iostream>"}, {"sha": "c5447df1d87a439e0a78f957d70f5fe51d421eb7", "filename": "gcc/testsuite/g++.dg/concepts/expression2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n concept bool C1()"}, {"sha": "26b829d338dca05e5d433c1324fd5380b2d9c7d2", "filename": "gcc/testsuite/g++.dg/concepts/expression3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n concept bool C()"}, {"sha": "d3d9b5420a85676241316a2eba09da1057cead41", "filename": "gcc/testsuite/g++.dg/concepts/feature-macro.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffeature-macro.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffeature-macro.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffeature-macro.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #ifndef __cpp_concepts\n #error __cpp_concepts not defined"}, {"sha": "a4ade7c628d1da5e1a88906efbf92e0bf12cbf1c", "filename": "gcc/testsuite/g++.dg/concepts/fn-concept1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Tuple() { // { dg-error \"multiple statements\" }"}, {"sha": "0d70728abe87412e048dd61a1ce525a434c4d2b3", "filename": "gcc/testsuite/g++.dg/concepts/fn-concept2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept auto C1() { return 0; } // { dg-error \"16:concept .concept auto C1\\\\(\\\\). declared with a deduced return type\" }"}, {"sha": "17f14b9a46bfec4fb104af7b082c0d39cfde759b", "filename": "gcc/testsuite/g++.dg/concepts/fn1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "6993f34a89fc11b422c3943e3060678d36ee17ed", "filename": "gcc/testsuite/g++.dg/concepts/fn10.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn10.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Test that constraint satisfaction checks work even when\n // processing template declarations."}, {"sha": "250e0a8713aee9a48ac7cfd30596f92fa0d454a7", "filename": "gcc/testsuite/g++.dg/concepts/fn2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "bc0e126c96c88ae6e6caf1bf28daae9dc5424c27", "filename": "gcc/testsuite/g++.dg/concepts/fn3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "830a1747865ecff5413f33fed2bf6fb817960e9c", "filename": "gcc/testsuite/g++.dg/concepts/fn4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "018b12f86e111371e3d8b22d1ac5aa3145d4bbae", "filename": "gcc/testsuite/g++.dg/concepts/fn5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Check shorthand notation.\n "}, {"sha": "97155f8eb8651c87c9c197e52f67eb50374d7105", "filename": "gcc/testsuite/g++.dg/concepts/fn6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Redefinition errors.\n "}, {"sha": "0052f1aee73943060dd5914c92716d3fb9e85dbb", "filename": "gcc/testsuite/g++.dg/concepts/fn7.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn7.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do link }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do link { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // FIXME: What is this actually testing?\n "}, {"sha": "a3daf4e1bade0d31b5a2ad60534defba9ffae8dc", "filename": "gcc/testsuite/g++.dg/concepts/fn8.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Class() { return __is_class(T); }"}, {"sha": "84ed77ce1c1de47336389bfda0d4fbe88669a3a4", "filename": "gcc/testsuite/g++.dg/concepts/fn9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn9.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "9050b557b3bc9a02d951cde7afc3a161823bf326", "filename": "gcc/testsuite/g++.dg/concepts/friend1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Eq() { return requires(T t) { t == t; }; }"}, {"sha": "8ef600222e5cc0dd2a71eaabf5921de2e757d701", "filename": "gcc/testsuite/g++.dg/concepts/friend2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Eq() { return requires(T t) { t == t; }; }"}, {"sha": "5a9556531e75067a864949ca4b08fb6085eabf74", "filename": "gcc/testsuite/g++.dg/concepts/generic-fn-err.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn-err.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn-err.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn-err.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "3b10327a493e03c4f23dbfa04b76888493c53022", "filename": "gcc/testsuite/g++.dg/concepts/generic-fn.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <cassert>\n #include <type_traits>"}, {"sha": "e99254f3c27af5e5e2ea2107bd8843e20424346e", "filename": "gcc/testsuite/g++.dg/concepts/iconv1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ficonv1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ficonv1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ficonv1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/67240\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n int foo(int x)\n {"}, {"sha": "4b3f56193317b3d3988a5cd3fa0545f8a309cffc", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "cb81d13e6d909a7a7a5dba2980ee6f974ae711d4", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "6f046323346a3dcfe6cf232db619b7a8220dddae", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "43df6e671862369dc4cd2d30b066c0fc653d388a", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "84fa6dbbed4ec35e035a0f127b24b8cdff43bb75", "filename": "gcc/testsuite/g++.dg/concepts/intro1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C = __is_class(T);"}, {"sha": "9c7c1733c6df1b3958d83ae6da0f00971253514d", "filename": "gcc/testsuite/g++.dg/concepts/intro2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "5e93f31327058bf2eb1cd94c9a50a7371f39b3af", "filename": "gcc/testsuite/g++.dg/concepts/intro3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename ... T>\n   concept bool C1 = true;"}, {"sha": "a7e513535aaffc1721c1b674cab31e790a07617b", "filename": "gcc/testsuite/g++.dg/concepts/intro4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename ... T>\n   concept bool C1 = true;"}, {"sha": "e7cd7a48066417b7841071139d2d2479aa9f9f9e", "filename": "gcc/testsuite/g++.dg/concepts/intro5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T, typename U = int>\n   concept bool C()"}, {"sha": "57b325a0e38fb4e3b15873402879cc61ccde7169", "filename": "gcc/testsuite/g++.dg/concepts/intro6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/67003\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n namespace X {\n   template<class>"}, {"sha": "d5bdc7e2789e09c2f446aa50fb50dd2f8ebaf440", "filename": "gcc/testsuite/g++.dg/concepts/intro7.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro7.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66985\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <template <class> class T>\n concept bool _Valid = requires { typename T<int>; };"}, {"sha": "33c3b6227c739f3ae41abadd3ddedf4d9148b987", "filename": "gcc/testsuite/g++.dg/concepts/locations1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Flocations1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Flocations1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Flocations1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-additional-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-additional-options \"-fconcepts\" }\n \n struct S\n {"}, {"sha": "ef577a19d0770dd1327e0a9e73383902680c1937", "filename": "gcc/testsuite/g++.dg/concepts/member-concept.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmember-concept.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmember-concept.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmember-concept.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n struct Base {\n   template<typename T>"}, {"sha": "69ce6b845d1acea6b7819e0bcbe2caeeff67be7a", "filename": "gcc/testsuite/g++.dg/concepts/memfun-err.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun-err.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun-err.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun-err.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run}\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n \n template<typename T>"}, {"sha": "818c7e61c8a862343b559cf5df18d2bc5374b3c0", "filename": "gcc/testsuite/g++.dg/concepts/memfun.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run}\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "78a2cf7badaefb63e643c19067e80a84868d1a63", "filename": "gcc/testsuite/g++.dg/concepts/memfun2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/72415\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<int... Indices>\n struct indices {};"}, {"sha": "dc00a07a22b9ae93645268885f44e4a714c04c92", "filename": "gcc/testsuite/g++.dg/concepts/memtmpl1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemtmpl1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemtmpl1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemtmpl1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T>\n struct A {"}, {"sha": "5f0f3468ea120fa271c55090f90fe1ccd752c85c", "filename": "gcc/testsuite/g++.dg/concepts/partial-concept-id1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Type() { return true; }"}, {"sha": "e51894bb1c02f71de16046d8bbb6cdf005a52153", "filename": "gcc/testsuite/g++.dg/concepts/partial-concept-id2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Make sure that we check partial concept ids\n // with variable concepts."}, {"sha": "0ff8ec2fa1a4d15fa4b6a5a929a1d6ba6f9c63d6", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Check that constraints don't break unconstrained partial\n // specializations."}, {"sha": "2449c37fc9930183aa960d97178d96adc49d36c0", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/67084\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T>\n constexpr bool p = false;"}, {"sha": "d4071814909ea49ee0dd57b9f29e3af8df03fe15", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T> struct A { };\n template <class T> requires false struct A<T*> { };"}, {"sha": "70461b4370f6f16da3c525e9db8f7d43c8473d74", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T> concept bool is_int = __is_same_as(T,int);\n "}, {"sha": "a5b853cfb3f3325ba39273277a95b130892602bd", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/67138\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T>\n concept bool _Auto = true;"}, {"sha": "1d80ee36e5c38945455da269a9fda8763b83e7a8", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/67152\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T>\n concept bool HasType = requires { typename T::type; };"}, {"sha": "edd00033603dadb6ec9a9c54baf6638fbe4cb88c", "filename": "gcc/testsuite/g++.dg/concepts/placeholder1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T, typename U>\n struct is_same"}, {"sha": "3d6fc813a6acc860075939784e96e440924bcf81", "filename": "gcc/testsuite/g++.dg/concepts/placeholder2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Check argument deduction constraints.\n // TODO: We shoul have more of these..."}, {"sha": "93f0c0d161fa3eeb06ef3ceea497a7622205f5e3", "filename": "gcc/testsuite/g++.dg/concepts/placeholder3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66218\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T, class U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "d1308137c0481077ba8c03a21fc68d1bcc8e715c", "filename": "gcc/testsuite/g++.dg/concepts/placeholder4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66218\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T, class U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "245e27a75ed3d6d9ca809249ec57f64666164aa7", "filename": "gcc/testsuite/g++.dg/concepts/placeholder5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T, class U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "51282d93a5d302ec1ab3a10226267a549258f694", "filename": "gcc/testsuite/g++.dg/concepts/placeholder6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <int I> struct B { static const int i = I; };\n template <int I> concept bool Few = I < 10;"}, {"sha": "318fdccfbdc9439e854f086d861f9dbe7b71d884", "filename": "gcc/testsuite/g++.dg/concepts/pr65552.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65552.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65552.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65552.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n concept bool Concept() {"}, {"sha": "efaf958121bfeee2be6fad7146d698183406d6b7", "filename": "gcc/testsuite/g++.dg/concepts/pr65575.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65575.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65575.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65575.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n concept bool C = false;"}, {"sha": "e383653b6a3b3e65afbb643ced05c5363651bcb0", "filename": "gcc/testsuite/g++.dg/concepts/pr65634.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65634.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65634.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65634.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n concept bool C1() {"}, {"sha": "2aec0e545d2e6aac68088048e49b76767515972b", "filename": "gcc/testsuite/g++.dg/concepts/pr65636.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65636.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65636.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65636.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n using TD = int;\n "}, {"sha": "0d8a69d0bd1acb8f64244768af19abc49ad012c6", "filename": "gcc/testsuite/g++.dg/concepts/pr65681.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65681.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65681.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65681.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n concept bool C()"}, {"sha": "067801844dccdca91cf9933fc779473592d343b0", "filename": "gcc/testsuite/g++.dg/concepts/pr65848.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65848.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65848.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65848.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Performance test... This should be fast.\n "}, {"sha": "28eac885a4628e9c63dabbf6c43c2e5b8d044f52", "filename": "gcc/testsuite/g++.dg/concepts/pr65854.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65854.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65854.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65854.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Handle alias templates in type requirements.\n "}, {"sha": "a71cd7b8bee77ad29901008e61bfaa5f52dabe1a", "filename": "gcc/testsuite/g++.dg/concepts/pr66091.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr66091.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr66091.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr66091.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n concept bool C1()"}, {"sha": "a0eca9ba8c0e72955ff0a50884994d35253289b9", "filename": "gcc/testsuite/g++.dg/concepts/pr67249.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67249.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67249.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67249.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<class T> concept bool C1 = true;\n template<class A, class B> struct Pair {};"}, {"sha": "7b5d712512eeb5d249b9f5a2129de3444f8c6fd5", "filename": "gcc/testsuite/g++.dg/concepts/pr67595.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67595.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67595.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67595.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class X> concept bool allocatable = requires{{new X}->X * };\n template <class X> concept bool semiregular = allocatable<X>;"}, {"sha": "fc458989c3430b762ea6f585b7d3d3ba5fb79468", "filename": "gcc/testsuite/g++.dg/concepts/pr68434.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class>\n concept bool C1 () {"}, {"sha": "ff7709e40aaac911468daddd308450ede5626331", "filename": "gcc/testsuite/g++.dg/concepts/pr68683.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68683.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68683.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68683.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <typename, typename>\n struct is_same {"}, {"sha": "5cd2b54cd7cd5ce7bf3f1fa7d4cec6877fb69155", "filename": "gcc/testsuite/g++.dg/concepts/pr71368.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71368.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71368.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71368.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n struct inner;\n "}, {"sha": "42d21f57161578a8e33e51a7f2edbd4eb1627355", "filename": "gcc/testsuite/g++.dg/concepts/pr71385.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71385.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71385.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr71385.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<class T>\n concept bool Addable(){"}, {"sha": "637f9932870720ec06c0f8679512ba0ec5655096", "filename": "gcc/testsuite/g++.dg/concepts/req-neg1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq-neg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq-neg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq-neg1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n void f1(int a) requires true;         // OK\n auto f2(int a) -> bool requires true; // OK"}, {"sha": "fedea73587c8352230b11a5dae27b19987d67689", "filename": "gcc/testsuite/g++.dg/concepts/req1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Class () { return __is_class(T); }"}, {"sha": "949859ccce0d573cfd7f72e17807e875f6b25396", "filename": "gcc/testsuite/g++.dg/concepts/req10.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq10.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Test that standard conversions are checked with\n // implicit conversion constraints."}, {"sha": "8891cce08a91354f6e988932bf4c2c74d7e0f7e3", "filename": "gcc/testsuite/g++.dg/concepts/req11.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq11.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Check that we can evaluate constant requires-expressions\n // as constant expressions, for the curious case when they"}, {"sha": "c6b345a08e993be76300064e2617952a3d0891f5", "filename": "gcc/testsuite/g++.dg/concepts/req12.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq12.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66218\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <type_traits>\n "}, {"sha": "4fd2312ef8c687616c7927d8a920f9b75d589146", "filename": "gcc/testsuite/g++.dg/concepts/req13.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq13.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66758\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T, class...Args>\n concept bool Constructible ="}, {"sha": "6e60b6f194f0939b301e9332738e9dca3da357e1", "filename": "gcc/testsuite/g++.dg/concepts/req14.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq14.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66758\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T, class U>\n concept bool C = requires (T t, U u) { t + u; };"}, {"sha": "385d51da8cd6b90d5d0c78b25651ca69016f9b1a", "filename": "gcc/testsuite/g++.dg/concepts/req15.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq15.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66832\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T, class U, unsigned N>\n   requires requires (T& t, U &u) { t.foo(); u.foo(); }"}, {"sha": "ca04d60180c90d29a89822c3cb385a1fa687223b", "filename": "gcc/testsuite/g++.dg/concepts/req16.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq16.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66988\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <type_traits>\n "}, {"sha": "472cfef34a0a8882a8984233d472ff1e2c13d8a8", "filename": "gcc/testsuite/g++.dg/concepts/req17.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq17.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/67018\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <typename T>\n constexpr bool Val = true;"}, {"sha": "cccfaed7bb6d943f672be4d5f94e63fd58427bb1", "filename": "gcc/testsuite/g++.dg/concepts/req18.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq18.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class> struct all_same {\n   static constexpr bool value = 1;"}, {"sha": "97cd9e52fe2155259837e52259fc774211207bf9", "filename": "gcc/testsuite/g++.dg/concepts/req19.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq19.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n struct B\n {"}, {"sha": "b32845a96c9fb00cc18a7935fc3284017b543868", "filename": "gcc/testsuite/g++.dg/concepts/req2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Class () { return __is_class(T); }"}, {"sha": "bd6b0f98390c97ee6dc82a210dd9e08edfd1e1b2", "filename": "gcc/testsuite/g++.dg/concepts/req20.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq20.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T> concept bool C = true;\n "}, {"sha": "8ce58e56ebfe51306284f61349208dbc2279d4da", "filename": "gcc/testsuite/g++.dg/concepts/req3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Class () { return __is_class(T); }"}, {"sha": "fcc13c6dcea7e74f1ac49a7a3dc50d202641d02f", "filename": "gcc/testsuite/g++.dg/concepts/req4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n struct fool {\n   constexpr fool operator&&(fool) const { return {}; }"}, {"sha": "7ad1cab9e93e119d0aac3de056bd0b05af39e955", "filename": "gcc/testsuite/g++.dg/concepts/req5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n struct fool { };\n "}, {"sha": "dd7dbdd9239550be754bf915a8b9d8b739c6d69d", "filename": "gcc/testsuite/g++.dg/concepts/req6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n struct X { };\n int operator==(X, X) { return 0; }"}, {"sha": "a6cfb4bf56d8769ee7cdaffdc44d21f50df2a763", "filename": "gcc/testsuite/g++.dg/concepts/req7.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq7.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <vector>\n "}, {"sha": "201be37e9c71beff5912b2ead42f93beb0a5a9a6", "filename": "gcc/testsuite/g++.dg/concepts/req8.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq8.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n // Check that type requirements are normalized correctly.\n "}, {"sha": "497154cd11fb031eeebb799cd62528fbab5652de", "filename": "gcc/testsuite/g++.dg/concepts/req9.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq9.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n struct S1 {};"}, {"sha": "192226f6ae2d5f72d5c57517b0c40d87208b3da5", "filename": "gcc/testsuite/g++.dg/concepts/template-parm1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "33bf372d64688a09e9754fffaa20d116d8484bb8", "filename": "gcc/testsuite/g++.dg/concepts/template-parm10.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm10.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<int N, class T>\n   concept bool P() { return true; }"}, {"sha": "04e11e2e69788f1c5d2235816ebb13914dcdd6fe", "filename": "gcc/testsuite/g++.dg/concepts/template-parm11.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n concept bool NameProvider()"}, {"sha": "8745bb1d9216d8e454f43c592d10a02aae98abdc", "filename": "gcc/testsuite/g++.dg/concepts/template-parm12.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm12.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // Conceptized version of template/ttp23.C\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T> concept bool Foo = true;\n "}, {"sha": "adecc12f0f9ec17e8e8ea19fd1db8214e4214e7e", "filename": "gcc/testsuite/g++.dg/concepts/template-parm2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "3d37e9c4c250e3da0138c6bc7536e706014671c0", "filename": "gcc/testsuite/g++.dg/concepts/template-parm3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "f546a758c06d696b92c6bbef8ec5e8a2097bc0d9", "filename": "gcc/testsuite/g++.dg/concepts/template-parm4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "cd93c60778a50b9ef98d1297fcf6d12b2110a2b5", "filename": "gcc/testsuite/g++.dg/concepts/template-parm5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "9efe4094f215ce8e019154ebd47a37425d1fb60d", "filename": "gcc/testsuite/g++.dg/concepts/template-parm6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename... Ts> struct are_same;\n "}, {"sha": "1dfa0d16ee537cb43d3e99ec6054d999ad19947d", "filename": "gcc/testsuite/g++.dg/concepts/template-parm7.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm7.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename... Ts> struct are_same;\n "}, {"sha": "63c451242226de810dabf9cda8659c5874785c25", "filename": "gcc/testsuite/g++.dg/concepts/template-parm8.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm8.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "64308cdd6e67fbe509b0adbc997bee4cf933643b", "filename": "gcc/testsuite/g++.dg/concepts/template-parm9.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm9.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "6c4dc2cec3149449b47c02908a2458664a04ac12", "filename": "gcc/testsuite/g++.dg/concepts/template-template-parm1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-template-parm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-template-parm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-template-parm1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66937\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n #include <tuple>\n "}, {"sha": "27610e25a5403ab43696c7e9811fcd2ca0c43987", "filename": "gcc/testsuite/g++.dg/concepts/traits1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Nothrow_assignable() { return __has_nothrow_assign(T); }"}, {"sha": "71dcfd37e6a5c2b98ab8ed2b781229f17158c328", "filename": "gcc/testsuite/g++.dg/concepts/traits2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool Nothrow_assignable() { return __has_nothrow_assign(T); }"}, {"sha": "90a88d83cc9947c9b865000256917bbdd0d95d57", "filename": "gcc/testsuite/g++.dg/concepts/var-concept1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n concept bool C1 = __is_class(T);"}, {"sha": "c16d3e4a57e0e2c00073fc1f6816b71bb79f6ab7", "filename": "gcc/testsuite/g++.dg/concepts/var-concept2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_class(T);"}, {"sha": "f3d642b1a5352cbe15d90e9167817dcfbeac098f", "filename": "gcc/testsuite/g++.dg/concepts/var-concept3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_class(T);"}, {"sha": "3864c9db99c84442745868c57f0d463e5c1940aa", "filename": "gcc/testsuite/g++.dg/concepts/var-concept4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T, typename U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "b1e9cb5379c864d4a67405f305a102fbfea97d39", "filename": "gcc/testsuite/g++.dg/concepts/var-concept5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename T1, typename T2>\n concept bool C1 = true;"}, {"sha": "8f5ac62953821484667e315a50872842e68fee4a", "filename": "gcc/testsuite/g++.dg/concepts/var-concept6.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T>\n concept int C = true;\t\t// { dg-error \"bool\" }"}, {"sha": "8371b373f6472352a1b07c9c0d0f3e58f0291c05", "filename": "gcc/testsuite/g++.dg/concepts/var-concept7.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept7.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/85133\n-// { dg-additional-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-additional-options \"-fconcepts\" }\n \n template<typename> concept bool C; // { dg-error \"no initializer\" }\n "}, {"sha": "b69d7d8d6a2aa61861713d42b8e2cd195930feb7", "filename": "gcc/testsuite/g++.dg/concepts/var-templ1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/67117\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T>\n   requires false"}, {"sha": "ffe5f1ffe05670ec5d5fb8422532c8ba4fd4d68a", "filename": "gcc/testsuite/g++.dg/concepts/var-templ2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/67139\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T>\n constexpr typename T::type::value_type _v = T::type::value;"}, {"sha": "22f07eef827aa8d885451bcb899811fc96ccfd00", "filename": "gcc/testsuite/g++.dg/concepts/var-templ3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/68666\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n struct A {\n   template <class>"}, {"sha": "4c0f437c32c9f94b98fa8a11fa243039f987b81a", "filename": "gcc/testsuite/g++.dg/concepts/variadic1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/66712\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T, class...Args>\n concept bool _Constructible_ ="}, {"sha": "4675d97ca1885c0164f433ec804b323b49e88d36", "filename": "gcc/testsuite/g++.dg/concepts/variadic2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template <class T> concept bool Copyable = requires (T t) { T(t); };\n template <class T> concept bool Constructable = requires { T(); };"}, {"sha": "e0f7903cac557e4f63f3ca6ef98f4ff8408b0e3d", "filename": "gcc/testsuite/g++.dg/concepts/variadic4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/73456\n-// { dg-options \"-std=c++17 -fconcepts\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-fconcepts\" }\n \n template<typename...> struct list {};\n "}, {"sha": "9dec587cb0f07f860599d9e9c08c531964950456", "filename": "gcc/testsuite/g++.dg/cpp1z/Wpessimizing-move1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2FWpessimizing-move1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2FWpessimizing-move1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2FWpessimizing-move1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/86981\n-// { dg-options \"-Wpessimizing-move -std=c++17\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-Wpessimizing-move\" }\n \n #include <utility>\n #include <optional>"}, {"sha": "40353f480e2b1972847dd56b49c39c985c22454e", "filename": "gcc/testsuite/g++.dg/cpp1z/aggr-base1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-options -std=c++17 }\n-// { dg-do run }\n+// { dg-do run { target c++17 } }\n \n struct base1 { int b1, b2 = 42; };\n struct base2 {"}, {"sha": "855bed9d7b997dbfee75656a6a98d8f698baed9a", "filename": "gcc/testsuite/g++.dg/cpp1z/aggr-base2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct derived;\n struct base {"}, {"sha": "c051c086488f0b53b3077b22116c6576db7aab7f", "filename": "gcc/testsuite/g++.dg/cpp1z/aggr-base3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct derived;\n struct base { };"}, {"sha": "7a4865a1dd0bbdbd9308ff2c80d8a9e0f6938c54", "filename": "gcc/testsuite/g++.dg/cpp1z/aggr-base4.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-options -std=c++17 }\n-// { dg-do run }\n+// { dg-do run { target c++17 } }\n \n struct derived;\n struct base { };"}, {"sha": "17882b7be59255cad9545f0a33ce91da816734fe", "filename": "gcc/testsuite/g++.dg/cpp1z/aggr-base5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-options \"-std=c++17 -w\" }\n-// { dg-do run }\n+// { dg-options \"-w\" }\n+// { dg-do run { target c++17 } }\n \n struct A { };\n struct B: A { int i; };"}, {"sha": "3de2e722f7dce07e59c38afd970e6ba1bf297e6f", "filename": "gcc/testsuite/g++.dg/cpp1z/aggr-base6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-options \"-std=c++17 -w\" }\n-// { dg-do run }\n+// { dg-options \"-w\" }\n+// { dg-do run { target c++17 } }\n \n struct A { };\n struct B: A { int i; };"}, {"sha": "48e9e945766aa6a5d00ba62029929fccd49a40f2", "filename": "gcc/testsuite/g++.dg/cpp1z/aligned-new1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-options -std=c++17 }\n-// { dg-do run }\n+// { dg-do run { target c++17 } }\n \n #ifndef __STDCPP_DEFAULT_NEW_ALIGNMENT__\n #error __STDCPP_DEFAULT_NEW_ALIGNMENT__ not defined"}, {"sha": "5c1c4eb09defa091c5c9a63e957a4f7663248584", "filename": "gcc/testsuite/g++.dg/cpp1z/aligned-new2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-options -std=c++17 }\n-// { dg-do run }\n+// { dg-do run { target c++17 } }\n \n #include <new>\n "}, {"sha": "08cd732ac7b90a7c86cda371777b5a75fe56be00", "filename": "gcc/testsuite/g++.dg/cpp1z/aligned-new3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-options -std=c++17 }\n-// { dg-do run }\n+// { dg-do run { target c++17 } }\n \n #include <new>\n "}, {"sha": "5b364d6966201bd9c1ccbbc310e7356c964905cd", "filename": "gcc/testsuite/g++.dg/cpp1z/aligned-new7.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new7.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // PR c++/77742\n-// { dg-options \"-Wall -std=c++17\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-Wall\" }\n \n #include <new>\n "}, {"sha": "9c125204d635b4a84e104d206aa3da725ed9e15b", "filename": "gcc/testsuite/g++.dg/cpp1z/aligned-new8.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new8.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,6 +1,5 @@\n // PR c++/82760\n-// { dg-options -std=c++17 }\n-// { dg-do run }\n+// { dg-do run { target c++17 } }\n \n #include <new>\n #include <cstddef>"}, {"sha": "1e9e996568c5edc29b08a55343405ec58b096b36", "filename": "gcc/testsuite/g++.dg/cpp1z/attributes-enum-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fattributes-enum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fattributes-enum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fattributes-enum-1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++17\" }\n+// { dg-do compile { target c++17 } }\n \n #ifndef __cpp_enumerator_attributes\n #error __cpp_enumerator_attributes not defined"}, {"sha": "0355dc879a6bd9f9cf6ef7e9d49b32cd1358035a", "filename": "gcc/testsuite/g++.dg/cpp1z/bool-increment1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbool-increment1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbool-increment1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbool-increment1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n int\n fn (bool b)"}, {"sha": "631b18d126c67862cdc29348b7809ab3e3334244", "filename": "gcc/testsuite/g++.dg/cpp1z/byte1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbyte1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbyte1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbyte1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,6 @@\n // Test for std::byte aliasing properties.\n-// { dg-options \"-std=c++17 -O3\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-O3\" }\n \n #include <cstddef>\n "}, {"sha": "717aea85c5ca8791d8dba2d4bf127a993e6af788", "filename": "gcc/testsuite/g++.dg/cpp1z/byte2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbyte2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbyte2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbyte2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -Wall\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-Wall\" }\n \n #include <cstddef>\n "}, {"sha": "752b430181df678e53c51424642de97c2a06cc05", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "eb0b15ee14977f7105bee38eb14bb9177cd33f8a", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction10.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "2a7594918e5a42368c56e56619623e6603e9edf8", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction11.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "a31cc1526db1a814a5a8e40e1c2cd31d8c4df9de", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction12.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "7a07befc4746b1eefaa4ee900b51aaca4c695492", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction13.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "ba2ba9bd1ec164c65390f6ac9f768cb0d8c0782d", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction14.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction14.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n #include <vector>\n "}, {"sha": "5d050f13e308ddb744f3e461b052ef12c34369e0", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction15.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n #include <utility>\n "}, {"sha": "3db8a0238c198376d5363f83a758bbb9bc2c7b39", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction16.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction16.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n #include <tuple>\n "}, {"sha": "e8d1ab22e3638a11cbed09a82cc2b33efc49a29e", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction17.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n #include <initializer_list>\n template <class T>"}, {"sha": "a0e6a73f197e5e00a614f90a48e2db7e1b7013b4", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction18.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<class T> struct S{S(T){}};\n "}, {"sha": "a098e1472dd3c2fbf38f296f21919a65bb58bf6b", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction19.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/77912\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<class T> struct S{S(T){}}; \n "}, {"sha": "a0cd20ce2fa812db1346facc488957a130f1c44b", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "4c009e70140b54bab9a21991bbee09c4e81ce49b", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction20.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/77890\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<class F> struct S{S(F&&f){}}; \n void f()"}, {"sha": "e8cd5621a095e7c0a2288057873c6527079aa948", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction21.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction21.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<class T, class D = int>\n struct S { T t; };"}, {"sha": "0a260850be073c702d3af8a925cc42405f2a5439", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction22.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction22.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,10 +1,10 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <template <class> class T>\n void f()\n {\n   T t = 42;\t\t\t// { dg-error \"B\" }\n-};\n+}\n \n template <class T>\n struct A"}, {"sha": "a383304667db1ea577ba5b43c005d5021e2079d8", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction23.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "1d05a0867ffa7d512a4cf1eaaea7d6575d988053", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction24.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction24.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/78894\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct A\n {"}, {"sha": "2d8c3ef46514802f6997ba03aa6e2c29c563a85a", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction25.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction25.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Testcase from P0512R0 for C++17 NB comment US 19\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<typename> struct remove_ref;\n template<typename _Tp> struct remove_ref { typedef _Tp type; };"}, {"sha": "bfdba796d0a5256afc45df1bc54626eaf83039b8", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction26.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction26.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Testcase from P0512R0 for C++17 NB comment US 20\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class,class> struct same;\n template <class T> struct same<T,T> {};"}, {"sha": "a9a9d8c0c3cd760e2395032f3f6daa303d9d3ce7", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction27.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction27.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/79316\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n   template<typename T> struct S { S(T t) {} };\n   template<typename T> S(T, int = 7) -> S<T>;"}, {"sha": "2fec7f79bac347c81871f9f338e6ec8bcf794a49", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction28.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction28.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/79350\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "6c2471696212c15b31ecdde4844357c59e375898", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction29.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction29.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/79500\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<typename T> struct A {};\n A(...) -> A<int>;"}, {"sha": "9b327835f3822002836f2fa77f373d238e9edb38", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <int I>\n struct A { };"}, {"sha": "4339a5e08c5a77f0acaa69bfa9b5b6d14c087be7", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction30.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction30.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T = void> struct A { };\n "}, {"sha": "67243b2f80074093cbc288acd26b6aa960bba361", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction31.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction31.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T> struct A {\n   A(T); // #1"}, {"sha": "ef21c9620acfafc1159f2187af5a89e41dcd28ad", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction32.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction32.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n #include <initializer_list>\n "}, {"sha": "4572b0a2265f79f02d0153ca8c420b30e6a43901", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction33.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction33.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class,class> struct same;\n template <class T> struct same<T,T> {};"}, {"sha": "26c063a9e729b4d2d7d9b99a938413441640fc49", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction34.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction34.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "b63cf8209da9d57a5f763ae0e277ecc7d01c3400", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction35.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction35.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T> struct A;\n "}, {"sha": "a9c95fe9fc4b1df6b1de085da28535af7d3e22c2", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction36.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction36.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T> struct A {\n   A(T&);"}, {"sha": "64c276aecae0737cb290fc549b0591ed6657d6bf", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction38.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction38.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T> struct A {\n   using value_type = T;"}, {"sha": "772434aee716f9f3688402c80a9708d4ba402529", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction39.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction39.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction39.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction39.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T> struct A { };\n "}, {"sha": "391beee8d8f41ed876a5be6255898fc4189bea5d", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <int I, int J>\n struct A { };"}, {"sha": "4420277479ac65dd5b82b6aba8889e48a118dec8", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction40.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction40.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/81180\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template < int I > struct int_{};\n "}, {"sha": "5557ae99161358eac1b85840c676bb57ec411f54", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction41.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction41.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n #include <initializer_list>\n "}, {"sha": "dfba8266da6f4623af129ca504a45d268fc8db21", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction42.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction42.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n #include <initializer_list>\n "}, {"sha": "55a79b327f4eb34977c7e645432c7a7d6eba2a78", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction43.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction43.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction43.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction43.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/79790\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <int N>\n struct array"}, {"sha": "225652cd2e43470184d3b54e9678e5f2513e1bc0", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction44.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction44.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/80412\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <typename> struct A;\n template <typename> struct B : A < B { ,  // { dg-error \"\" }"}, {"sha": "6f72b5f15ae4cf207609184e61ada2a0d8cf3b5c", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction45.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction45.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction45.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction45.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/82308\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<typename, unsigned>\n struct array {};"}, {"sha": "513e16057af76b22484747246b305d9cfe871c94", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction46.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction46.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction46.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction46.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/80449\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<class S> struct C;\n template<> struct C<int> { C(int, int) {} };"}, {"sha": "ab64cc4a0a60fe5af19c897b73a0890018515f5e", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction48.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction48.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/82468\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <template <class> class TT>\n TT(double) -> TT<int>;  // { dg-error \"template template\" }"}, {"sha": "658ae43e7005564e43161a5f07de6b2e00d580df", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction49.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction49.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/84015\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <int I>\n struct A { };"}, {"sha": "49d4c948aff1568040211300b927c443d864d99a", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "7289932c486a8ea8e914ae6566d839cf137a7749", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction50.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction50.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/84355\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class, class> struct same;\n template <class T> struct same<T,T> {};"}, {"sha": "ef593ff614b8296c04d2eb86a7fbb979230ffa10", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction51.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction51.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction51.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction51.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/84937\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<int, int> struct A {};\n "}, {"sha": "6ea9e8087d64a97dfcad3c1fbe4f33febf605aba", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction52.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction52.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/84768\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<typename> struct A {};\n "}, {"sha": "2e87139b4d804304ce82d638f4928af9c28c55f3", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction54.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction54.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction54.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction54.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/82152\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct Base {};\n "}, {"sha": "74fd29f66dc4517e809ad8e27b42ce2bf627a5ba", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction55.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction55.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction55.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction55.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85883\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <typename T>\n struct Bar"}, {"sha": "6cf54b31e2dc64b09f3d47e57e3cac54d08f3e03", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction56.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction56.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85883\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <typename T1, typename T2>\n struct Bar"}, {"sha": "f1c776ec70decf80bc7d26936ae14fd85535b516", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction57.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction57.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction57.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction57.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85883\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <typename T1, typename T2, typename T3>\n struct Bar"}, {"sha": "0613a9e9a7b076fb2e008c7ff192feeb6c86b7c1", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction58.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction58.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/86098\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class _Res> class future;\n template <class T> T&& declval();"}, {"sha": "b20bd75b98d9d1fcb446bc7eb47d8de037e437d5", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "ab96774d5e9ca95f277bb3348fb5b8c433f13870", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction7.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "20cabe00a74605421f473506cd94094fa40d1739", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction8.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n struct A"}, {"sha": "c0af9447e7b53ad6f10553c045d9a4a31a29b7a4", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction9.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n namespace N {\n   template <class T>"}, {"sha": "3c6592c2dde6e4077d7ea4c79719b027c423075f", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-83692.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-83692.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-83692.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-83692.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/83692\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct integer {\n   constexpr int value() const { return m_value;\t}"}, {"sha": "43dcf7145026e0439548fc707a50df5a61c9db03", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-84684.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-84684.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-84684.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-84684.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/84684\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n typedef decltype (sizeof (0)) size_t;\n "}, {"sha": "84d7b20b10a18349a5245ea88f095c19e507ba73", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if10.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/78948\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <int T>\n void sizeof_mismatch()"}, {"sha": "56922bb19ea6dde5b674bdc7994378ff48bd722d", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if11.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,6 +1,6 @@\n // Test that discarded statements differ from unevaluated operands in some\n // ways.\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct A { int i; };\n "}, {"sha": "f21a9896ff288f7569c5d1f9f3242989cbf93936", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if12.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/80562\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct T {\n   constexpr auto foo() { return false; }"}, {"sha": "459fa132d63b4573dd6eb5637bd9f55faedde973", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if13.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/83273\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n int main()\n {"}, {"sha": "69af7753116b11e132cf52d4f30efe372850f77d", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if14.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if14.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/84421\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct A{\n   constexpr operator bool() const { return true; }"}, {"sha": "1dd8beab89ca5d17e82e4e4b0a8f3f646ead257c", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if15.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/84854\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n constexpr int foo () { return 1; }\n constexpr int foo (int) { return 2; }"}, {"sha": "dfece047ca2b011b5ce721a634d424d46a840e78", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if16.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if16.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct A\n {"}, {"sha": "cf637f6c3d7dd8aca583d96a0087553562e8d801", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if17.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if17.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,6 +1,5 @@\n // PR c++/85149\n-// { dg-do run }\n-// { dg-additional-options -std=c++17 }\n+// { dg-do run { target c++17 } }\n \n template <typename T> struct is_void { static constexpr bool value = false; };\n template <> struct is_void<void> { static constexpr bool value = true; };"}, {"sha": "a5601176be139b8489cf9c5e49f158198b465cf2", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if18.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85200\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <typename T>\n void f(){"}, {"sha": "a1eaf320221f4930d4758a14d673a2e5828ea123", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if19.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85200\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct A{\n     constexpr operator int(){ return 0; }"}, {"sha": "2fd678bb38362a08383acc3ac26dc7526c860cd9", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if20.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85214\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct g {\n   constexpr operator int() { return true; }"}, {"sha": "b02417fd34e635ce54c80ae9834715b9b82568ab", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if21.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if21.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85032\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct A\n {"}, {"sha": "32ed5df8b4e7f152163b0ceb77f7f408942e4b2f", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if22.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85695\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <typename T, T v>\n struct integral_constant {"}, {"sha": "4f6cf3d5490081fa747ee77dcfbc5902daaef69d", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if23.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85842\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<class T>\n auto f = [](auto&& arg) -> T* {"}, {"sha": "8e6034c4dfc7cd5f1651a988fed5f983e948b7d5", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if24.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if24.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/86480\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class...> constexpr bool val = true;\n "}, {"sha": "a2250a2e84560ec576c99fbfb783499afc5eb89e", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n constexpr auto Add5 = [](int i) { return i+5; };\n "}, {"sha": "d13053a9c4e2a4dd8e484163501605bdbe018b63", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda10.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Testcase from P0170R1\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n void g() {\n   const int n = 0;"}, {"sha": "98b27c1d06b12065f35a9ae57c7b82526661e5a5", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda11.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Testcase from P0170R1\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n // 'v' & 'm' are odr-used but do not occur in a constant-expression within the nested\n // lambda, so are well-formed."}, {"sha": "a59bf497b30adc9bc1a35cc7717f578147762c7e", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda12.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n void f(int i)\n {"}, {"sha": "962ec8db62c0e99e40428675273acb0e97167e8a", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda13.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n auto l1 = []() constexpr constexpr { }; // { dg-error \"duplicate\" }\n auto l2 = []() mutable mutable { }; // { dg-error \"duplicate\" }"}, {"sha": "89585f3a39512fda0f750aab2aa6f6e803faab24", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda17.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/78131\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <typename TF>\n constexpr auto f(TF)"}, {"sha": "c7ef8d0752e8ef3553b5c44050dc9bf3702bcb51", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda18.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/82570\n-// { dg-options \"-std=c++17\" }\n+// { dg-do compile { target c++17 } }\n \n template< typename Body >\n inline void iterate(Body body)"}, {"sha": "c6266c2bfbbe2f611a750bcc017fe04a5a06eb13", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda19.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/84098\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct A{};\n "}, {"sha": "3cf9d03e741a4bb8f8e7bd8617f761a70f3207be", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Testcase from P0170R1\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n constexpr int AddEleven(int n){\n   return[n]{return n+11;}();"}, {"sha": "d2d220c2d6c59a14d21ec73f78ba098d1312695c", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda20.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/82022\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class T>\n void f2()"}, {"sha": "210726b82775517c40283b0755f23e43603da67c", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda21.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda21.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85228\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<int> struct A\n {"}, {"sha": "ccdf697708240890ccdd4f299beac72d7d4e7674", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n constexpr auto add = [] (int n, int m) {\n   auto L = [=] { return n; };"}, {"sha": "83a2029fdb3a338469765b1d00349557e9923887", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n auto ID = [] (int n) constexpr { return n; };\n constexpr int I = ID(3);"}, {"sha": "c9fa63d1bf5cb22ef65b2bd282b78fefa0e5f1ae", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n auto addOne = [] (int n) {\n   return n + 1;"}, {"sha": "214d3821299e216b2b287e5b6118798811da622a", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Testcase from P0170R1\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n auto monoid = [](auto v) { return [=] { return v; }; };\n auto add = [](auto m1) constexpr {"}, {"sha": "474ce88f81f3151b9711e2f67fbc2d1414934d5c", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda7.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Testcase from P0170R1\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n auto ID = [](auto a) { return a; };\n static_assert( ID (3) == 3); // OK"}, {"sha": "84be68ab7f042177b181c75f62b3212dc234c09f", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda8.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Testcase from P0170R1\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n auto Fwd = [](int (*fp)(int), auto a) { return fp(a); };\n auto C = [](auto a) { return a; };"}, {"sha": "c4999c59acc9ee2e9dea1c508be6f01b95a0bad0", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda9.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n // Testcase from P0170R1\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n static_assert([](int n) { return [&n] { return ++n; }(); }(3) == 4);"}, {"sha": "cc27e1e803644d385d9e454165e00446eb8d6a16", "filename": "gcc/testsuite/g++.dg/cpp1z/cplusplus.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fcplusplus.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fcplusplus.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fcplusplus.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++17\" }\n+// { dg-do compile { target c++17_only } }\n \n #if __cplusplus != 201703L\n #error \"__cplusplus != 201703L\""}, {"sha": "1a14997a76f116e60d2e5a3a99d5004310b6dfaa", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp-bitfield1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp-bitfield1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp-bitfield1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp-bitfield1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Test of bit-fields.\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct A { long i: 2; } a;\n "}, {"sha": "1a5374158d19b7300e0e2de7e139126be29af518", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp-constexpr1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp-constexpr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp-constexpr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp-constexpr1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Test for reference address comparison in constant expression.\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n int i[2];\n struct A { int i, j; } a;"}, {"sha": "6161e4da23eac12e89810566894fcba9fd0f2f10", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp-lambda1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp-lambda1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp-lambda1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp-lambda1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/84420\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n int main(){\n     int a[1]{};"}, {"sha": "f0723f8d85f2f909ff9fb7977f57aa0091659835", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp10.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n namespace std {\n   template<typename T> struct tuple_size;"}, {"sha": "38dfb366dd923ba77b9d1d71c730efac1e4db0d9", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp11.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Test for decltype of direct decomposition.\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class,class> struct same_type;\n template <class T> struct same_type<T,T> {};"}, {"sha": "56fd49871659624d325fc3dfef01a08de27a6e7d", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp12.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp12.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,6 +1,5 @@\n // PR c++/78358\n-// { dg-do run }\n-// { dg-options -std=c++17 }\n+// { dg-do run { target c++17 } }\n \n #include <tuple>\n "}, {"sha": "72e2c52f5c68cd99e4554d53b1849d067b2b46b1", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp15.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp15.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++17\" }\n+// { dg-do compile { target c++17 } }\n \n struct A { bool a, b; };\n struct B { int a, b; };"}, {"sha": "fe0be16e167ab9045cf38207cf8946518df5bf9a", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp16.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp16.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++17\" }\n+// { dg-do compile { target c++17 } }\n \n struct A { bool a, b; };\n struct B { int a, b; };"}, {"sha": "73dbebea896a4ecb51279bd377ba22fdd47b426f", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp17.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n #include <tuple>\n "}, {"sha": "8309ce8896c2d8e71e7c65f28985529df58a2f87", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp20.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct A { int i,j; };\n "}, {"sha": "9ed0da3de3e36f704e0eb5b935dd50af7f5de17a", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp21.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp21.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n int a[3];\n struct S { int b, c, d; } s;"}, {"sha": "a28f500c038ef7627756a4006f17bb547c27f666", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp27.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp27.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,6 +1,5 @@\n // PR c++/80084\n-// { dg-options -std=c++17 }\n-// { dg-do run }\n+// { dg-do run { target c++17 } }\n \n struct A\n {"}, {"sha": "3404a58f2258754a431ea0e2b9df2b58201d7e40", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp29.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp29.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -Wunused\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-Wunused\" }\n \n #include <tuple>\n "}, {"sha": "9de3979edce38322383549366dec0bce4510b69b", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp30.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp30.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/81258\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n int a[2];\n auto [b, c] (a);"}, {"sha": "6bf81769b7ef5aa853bd9a63e356f93a6b84daa7", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp37.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp37.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-additional-options -std=c++17 }\n-// { dg-do compile }\n+// { dg-do compile { target c++17 } }\n \n #include <memory>\n #include <tuple>"}, {"sha": "769318e89763a8318581d3f26b699809f6634c08", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp38.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp38.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-additional-options -std=c++17 }\n-// { dg-do compile }\n+// { dg-do compile { target c++17 } }\n \n class X\n {"}, {"sha": "845635a2994e54af6a245b2166fe82629a0d8bf3", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp9.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp9.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do run }\n-// { dg-options -std=c++17 }\n+// { dg-do run { target c++17 } }\n \n #define assert(X) do { if (!(X)) __builtin_abort(); } while (0)\n "}, {"sha": "7b35b9e0391b159f09ebe4a2e086b4684f919b04", "filename": "gcc/testsuite/g++.dg/cpp1z/elide1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Felide1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Felide1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Felide1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct A\n {"}, {"sha": "af26cb20744e1aa34a18be6a7153346ef93e265f", "filename": "gcc/testsuite/g++.dg/cpp1z/eval-order2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,6 +1,5 @@\n // P0145R2: Refining Expression Order for C++\n-// { dg-do run }\n-// { dg-options \"-std=c++17\" }\n+// { dg-do run { target c++17 } }\n \n #include <string>\n #define assert(X) if (!(X)) __builtin_abort();"}, {"sha": "5773591d49f216cf33fe9c0583ea5889a0efdf0f", "filename": "gcc/testsuite/g++.dg/cpp1z/eval-order3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,6 +1,5 @@\n // P0145R2: Refining Expression Order for C++\n-// { dg-do run }\n-// { dg-options \"-std=c++17\" }\n+// { dg-do run { target c++17 } }\n \n extern \"C\" int printf (const char *, ...);\n void sink(...) { }"}, {"sha": "c6f54ce06d7e77e85d804f5ee066212a1f39a347", "filename": "gcc/testsuite/g++.dg/cpp1z/fallthrough1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffallthrough1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffallthrough1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffallthrough1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,6 +1,6 @@\n // PR c/7652\n-// { dg-do compile }\n-// { dg-options \"-std=c++17 -Wextra -Wall -Wpedantic\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-Wextra -Wall -Wpedantic\" }\n \n // Check that we accept attribute [[fallthrough]].\n "}, {"sha": "f551892a045d1fdbc99c4f0610cd3d3e1909339d", "filename": "gcc/testsuite/g++.dg/cpp1z/feat-cxx1z.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffeat-cxx1z.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffeat-cxx1z.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffeat-cxx1z.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=c++17 -I${srcdir}/g++.dg/cpp1y -I${srcdir}/g++.dg/cpp1y/testinc\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"-I${srcdir}/g++.dg/cpp1y -I${srcdir}/g++.dg/cpp1y/testinc\" }\n \n //  C++98 features:\n "}, {"sha": "e65730bce263206da639816334bde70c9379def0", "filename": "gcc/testsuite/g++.dg/cpp1z/fold-ice1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-ice1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-ice1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-ice1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67926\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <bool ... T> bool FUR = (T && ...);\n template <bool ... T> bool FUL = (... && T);"}, {"sha": "8ccf42bedb320666da6c7b6b6fc807e367dea79a", "filename": "gcc/testsuite/g++.dg/cpp1z/fold-lambda.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-lambda.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-lambda.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-lambda.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do run }\n-// { dg-options -std=c++17 }\n+// { dg-do run { target c++17 } }\n \n template <class... T>\n auto f() {"}, {"sha": "14ca95457da71d64ea9167781dab54070c67c902", "filename": "gcc/testsuite/g++.dg/cpp1z/fold-lambda2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-lambda2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-lambda2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-lambda2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/85305\n-// { dg-additional-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <int... Is>\n void foo()"}, {"sha": "6957d9c37c9cf701f3e949400de4fb56e501052a", "filename": "gcc/testsuite/g++.dg/cpp1z/fold-mangle.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-mangle.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-mangle.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold-mangle.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/71711\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template < int > struct A {};\n template < int ... N > void unary_left (A < (... + N) >);"}, {"sha": "6d004676707d40e4360f2c8d17e3cbf5b926f24e", "filename": "gcc/testsuite/g++.dg/cpp1z/fold1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold1.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run }\n-// { dg-options \"-std=c++17\" }\n+// { dg-do run { target c++17 } }\n+// { dg-options \"\" }\n \n #include <cassert>\n "}, {"sha": "6610c19a6a93758ec8e465930d459bcd97e4d852", "filename": "gcc/testsuite/g++.dg/cpp1z/fold2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++17\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"\" }\n \n // Check that we can fold over all of the operators required\n // by the standard in every possible way."}, {"sha": "787bf792be9b08c9bfad7b6145b4d700bb9bcc51", "filename": "gcc/testsuite/g++.dg/cpp1z/fold3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-std=c++17\" }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"\" }\n \n // Check that empty expansions and required failures.\n "}, {"sha": "e0ee131a9bbaa706cef9f10339ed4fe6eb77f802", "filename": "gcc/testsuite/g++.dg/cpp1z/fold4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template <class...T>\n constexpr auto f(T... t)"}, {"sha": "df290335b14387adf6dd9f6d667af8943e82664e", "filename": "gcc/testsuite/g++.dg/cpp1z/fold6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,7 +1,7 @@\n // Test that we reject a fold-expression with an LHS that is not a\n // cast-expression.\n \n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n int i;\n "}, {"sha": "d65d6e9d805dfd02f55d0d922aef5ca3681c34d7", "filename": "gcc/testsuite/g++.dg/cpp1z/fold7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold7.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++17\" }\n+// { dg-do compile { target c++17 } }\n \n #ifndef __cpp_fold_expressions\n #error __cpp_fold_expressions not defined"}, {"sha": "983e9eeec0d6ec571032c00ebf49b94411bc8179", "filename": "gcc/testsuite/g++.dg/cpp1z/fold8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold8.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/68377\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n struct Sink { } s;\n template <class T> Sink& operator<<(Sink&, const T&);"}, {"sha": "956d51d3c4947f22de8c638a348a6a687850b7d0", "filename": "gcc/testsuite/g++.dg/cpp1z/fold9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffold9.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // PR c++/71285\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n template<typename... Args>\n void spurious(Args... args)"}, {"sha": "df788172c55c9168ad2bb4b6eb5e254fa4ada632", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement2.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n+// { dg-options \"\" }\n // Test C++17 selection statements with initializer, basic use.\n \n extern int foo (void);"}, {"sha": "5b067a98574124a320de4580f79c5ee27233940a", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement3.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do run }\n-// { dg-options -std=c++17 }\n+// { dg-do run { target c++17 } }\n // Test C++17 selection statements with initializer, side-effects.\n \n int"}, {"sha": "a049adb657a5f58e1a2ba184febf10881290aad1", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement4.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n extern int foo (void);\n extern void bar (int), die (void);"}, {"sha": "867955b285eb331262e65c25530b572f5bb80f67", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement5.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Testcase from P0305R1\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n enum class status_code { SUCCESS };\n extern int get_value ();"}, {"sha": "e1848aa5e4abfdaa50e1dfb68b9dda3639f7356c", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement6.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,5 @@\n // Testcase from P0305R1\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n #include <string>\n #include <map>"}, {"sha": "b2cf72d6d4aae5a60dec3ffe2c0a27dd0f525658", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement7.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement7.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do run }\n-// { dg-options -std=c++17 }\n+// { dg-do run { target c++17 } }\n \n int\n main ()"}, {"sha": "9b613e706316aa609c25a8ec5a34fcda50a50261", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement8.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n int\n f ()"}, {"sha": "84b24d4eb2dd8f21ed2bee3e746b4766b38f30a9", "filename": "gcc/testsuite/g++.dg/cpp1z/init-statement9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be515b4ce0891e0019511d65c2073e0ebf9f9309/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finit-statement9.C?ref=be515b4ce0891e0019511d65c2073e0ebf9f9309", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++17 }\n+// { dg-do compile { target c++17 } }\n \n void\n f ()"}]}