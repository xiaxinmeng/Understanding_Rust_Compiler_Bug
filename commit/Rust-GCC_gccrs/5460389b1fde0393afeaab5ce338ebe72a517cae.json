{"sha": "5460389b1fde0393afeaab5ce338ebe72a517cae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ2MDM4OWIxZmRlMDM5M2FmZWFhYjVjZTMzOGViZTcyYTUxN2NhZQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-07-03T08:16:11Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-03T08:16:11Z"}, "message": "[Ada] Crash on front-end inlining of subp. with aspect specifications\n\nThis patch fixes a gap in the handling of formals when inlining a call\nto a subprogram marked Inline_Always. For the inlining, the formals are\nreplaced by the actuals in the block constructed for inlining, The\ntraversal that performs this replacement does not apply to aspect\nspecifications that may appear in the original body, because these\naspects are only indirectly reachable from the nodes to which they\napply: a separate traversal is required to perform the replacement in\nthe expressions for any aspect specification present in the source.\n\n2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* inline.adb (Process_Formals_In_Aspects): New procedure within\n\tExpand_Inlined_Call, to perform a replacement of references to\n\tformals that appear in aspect specifications within the body\n\tbeing inlined.\n\ngcc/testsuite/\n\n\t* gnat.dg/inline16.adb, gnat.dg/inline16_gen.adb,\n\tgnat.dg/inline16_gen.ads, gnat.dg/inline16_types.ads: New\n\ttestcase.\n\nFrom-SVN: r272983", "tree": {"sha": "8ede8d2ef640803b5dc6e2a8358d56ff9cc36a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ede8d2ef640803b5dc6e2a8358d56ff9cc36a3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5460389b1fde0393afeaab5ce338ebe72a517cae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5460389b1fde0393afeaab5ce338ebe72a517cae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5460389b1fde0393afeaab5ce338ebe72a517cae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5460389b1fde0393afeaab5ce338ebe72a517cae/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eee51f3dd6d8e444270efb6fe191524b79a01445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee51f3dd6d8e444270efb6fe191524b79a01445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eee51f3dd6d8e444270efb6fe191524b79a01445"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "f06663d9c126f9cf320409afbc125f71de5485ff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5460389b1fde0393afeaab5ce338ebe72a517cae", "patch": "@@ -1,3 +1,10 @@\n+2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* inline.adb (Process_Formals_In_Aspects): New procedure within\n+\tExpand_Inlined_Call, to perform a replacement of references to\n+\tformals that appear in aspect specifications within the body\n+\tbeing inlined.\n+\n 2019-07-03  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_ch8.adb (Analyze_Object_Renaming): Add call to search for"}, {"sha": "b2038a6a047cdf4f84d52a2cf002e5538d1df3a9", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=5460389b1fde0393afeaab5ce338ebe72a517cae", "patch": "@@ -2481,6 +2481,13 @@ package body Inline is\n       --  thunk generated for it. Replace a return statement with an assignment\n       --  to the target of the call, with appropriate conversions if needed.\n \n+      function Process_Formals_In_Aspects (N : Node_Id)\n+        return Traverse_Result;\n+      --  Because aspects are linked indirectly to the rest of the tree,\n+      --  replacement of formals appearing in aspect specifications must\n+      --  be performed in a separate pass, using an instantiation of the\n+      --  previous subprogram over aspect specifications reachable from N.\n+\n       function Process_Sloc (Nod : Node_Id) return Traverse_Result;\n       --  If the call being expanded is that of an internal subprogram, set the\n       --  sloc of the generated block to that of the call itself, so that the\n@@ -2821,6 +2828,29 @@ package body Inline is\n \n       procedure Replace_Formals is new Traverse_Proc (Process_Formals);\n \n+      --------------------------------\n+      -- Process_Formals_In_Aspects --\n+      --------------------------------\n+\n+      function Process_Formals_In_Aspects (N : Node_Id)\n+        return Traverse_Result\n+      is\n+         A : Node_Id;\n+      begin\n+         if Has_Aspects (N) then\n+            A := First (Aspect_Specifications (N));\n+            while Present (A) loop\n+               Replace_Formals (Expression (A));\n+\n+               Next (A);\n+            end loop;\n+         end if;\n+         return OK;\n+      end Process_Formals_In_Aspects;\n+\n+      procedure Replace_Formals_In_Aspects is\n+         new Traverse_Proc (Process_Formals_In_Aspects);\n+\n       ------------------\n       -- Process_Sloc --\n       ------------------\n@@ -3633,6 +3663,7 @@ package body Inline is\n       --  Attach block to tree before analysis and rewriting.\n \n       Replace_Formals (Blk);\n+      Replace_Formals_In_Aspects (Blk);\n       Set_Parent (Blk, N);\n \n       if GNATprove_Mode then"}, {"sha": "3b615398f8685c8649b19074326e4d3d6ac49752", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5460389b1fde0393afeaab5ce338ebe72a517cae", "patch": "@@ -1,3 +1,9 @@\n+2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/inline16.adb, gnat.dg/inline16_gen.adb,\n+\tgnat.dg/inline16_gen.ads, gnat.dg/inline16_types.ads: New\n+\ttestcase.\n+\n 2019-07-03  Justin Squirek  <squirek@adacore.com>\n \n \t* gnat.dg/renaming13.adb, gnat.dg/renaming14.adb: New testcases."}, {"sha": "ebe8482f15e0c78cea0057ffb842ce449580eee5", "filename": "gcc/testsuite/gnat.dg/inline16.adb", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Ftestsuite%2Fgnat.dg%2Finline16.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Ftestsuite%2Fgnat.dg%2Finline16.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline16.adb?ref=5460389b1fde0393afeaab5ce338ebe72a517cae", "patch": "@@ -0,0 +1,26 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatN\" }\n+\n+with Inline16_Types; use Inline16_Types;\n+with Inline16_Gen;\n+\n+procedure Inline16 is\n+   type TYPE1 is record\n+      f1 : NvU32;\n+      f2 : NvU32;\n+      f3 : NvU32;\n+   end record\n+      with Size => 96, Object_Size => 96;\n+\n+   package Gfw_Image_Read_Pkg1 is new Inline16_Gen (Payload_Type => TYPE1);\n+   use Gfw_Image_Read_Pkg1;\n+   procedure Get_Boot_Block_Info(Status : out Integer)\n+   is\n+      Ifr_Fixed_Min       : TYPE1;\n+   begin\n+      Gfw_Image_Read(Ifr_Fixed_Min);\n+      Status := 13;\n+   end Get_Boot_Block_Info;\n+begin\n+   null;\n+end Inline16;"}, {"sha": "bd5b749b120b2fece7a5ccfae783c6e614c9b437", "filename": "gcc/testsuite/gnat.dg/inline16_gen.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Ftestsuite%2Fgnat.dg%2Finline16_gen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Ftestsuite%2Fgnat.dg%2Finline16_gen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline16_gen.adb?ref=5460389b1fde0393afeaab5ce338ebe72a517cae", "patch": "@@ -0,0 +1,16 @@\n+with Inline16_Types; use Inline16_Types;\n+\n+package body Inline16_Gen\n+with SPARK_Mode => On\n+is\n+   procedure Gfw_Image_Read (Data    : out Payload_Type)\n+      with SPARK_Mode => Off\n+   is\n+      Array_Len     : constant NvU32 := Data'Size / NvU8'Size;\n+      Array_Max_Idx : constant NvU32 := Array_Len - 1;\n+      type Payload_As_Arr_Type is new Arr_NvU8_Idx32(0 .. Array_Max_Idx);\n+      Data_As_Array : Payload_As_Arr_Type with Address => Data'Address;\n+   begin\n+      null;\n+   end Gfw_Image_Read;\n+end Inline16_Gen;"}, {"sha": "90f1f58d0390aa84705059a2a3f7db4bc3d47fcb", "filename": "gcc/testsuite/gnat.dg/inline16_gen.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Ftestsuite%2Fgnat.dg%2Finline16_gen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Ftestsuite%2Fgnat.dg%2Finline16_gen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline16_gen.ads?ref=5460389b1fde0393afeaab5ce338ebe72a517cae", "patch": "@@ -0,0 +1,9 @@\n+generic\n+   type Payload_Type is private;\n+package Inline16_Gen\n+with SPARK_Mode => On\n+is\n+   procedure Gfw_Image_Read(Data   : out Payload_Type)\n+     with Inline_Always;\n+\n+end Inline16_Gen;"}, {"sha": "dfaf640cb607103dcb136f7a2d1e477d0bdbfec4", "filename": "gcc/testsuite/gnat.dg/inline16_types.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Ftestsuite%2Fgnat.dg%2Finline16_types.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5460389b1fde0393afeaab5ce338ebe72a517cae/gcc%2Ftestsuite%2Fgnat.dg%2Finline16_types.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline16_types.ads?ref=5460389b1fde0393afeaab5ce338ebe72a517cae", "patch": "@@ -0,0 +1,7 @@\n+package Inline16_Types with SPARK_Mode is\n+\n+   type  NvU8 is mod 2 ** 8  with Size => 8;\n+   type NvU32 is mod 2 ** 32 with Size => 32;\n+\n+   type Arr_NvU8_Idx32 is array (NvU32 range <>) of NvU8;\n+end Inline16_Types;"}]}