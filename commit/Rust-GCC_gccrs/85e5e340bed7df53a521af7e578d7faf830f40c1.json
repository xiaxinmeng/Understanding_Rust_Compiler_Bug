{"sha": "85e5e340bed7df53a521af7e578d7faf830f40c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVlNWUzNDBiZWQ3ZGY1M2E1MjFhZjdlNTc4ZDdmYWY4MzBmNDBjMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-13T13:31:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-13T13:31:26Z"}, "message": "re PR c++/36960 (Reference variable in virtually inherited base corrupted under optimization)\n\n2010-07-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/36960\n\t* g++.dg/torture/pr36960.C: New testcase.\n\nFrom-SVN: r162141", "tree": {"sha": "ed9dc46c16075b18652f3ffbe697319ba7351e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed9dc46c16075b18652f3ffbe697319ba7351e9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85e5e340bed7df53a521af7e578d7faf830f40c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e5e340bed7df53a521af7e578d7faf830f40c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85e5e340bed7df53a521af7e578d7faf830f40c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e5e340bed7df53a521af7e578d7faf830f40c1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6368f1660455952e8892338b517407bc1c70503e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6368f1660455952e8892338b517407bc1c70503e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6368f1660455952e8892338b517407bc1c70503e"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "fe67559ae1e0d6b894fb9ce5ea2b58ac0ec90c07", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85e5e340bed7df53a521af7e578d7faf830f40c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85e5e340bed7df53a521af7e578d7faf830f40c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85e5e340bed7df53a521af7e578d7faf830f40c1", "patch": "@@ -1,3 +1,8 @@\n+2010-07-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36960\n+\t* g++.dg/torture/pr36960.C: New testcase.\n+\n 2010-07-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/44908"}, {"sha": "280a6755d9577940c287d5869c98349ffc1fd3dc", "filename": "gcc/testsuite/g++.dg/torture/pr36960.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85e5e340bed7df53a521af7e578d7faf830f40c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36960.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85e5e340bed7df53a521af7e578d7faf830f40c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36960.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36960.C?ref=85e5e340bed7df53a521af7e578d7faf830f40c1", "patch": "@@ -0,0 +1,22 @@\n+// { dg-do run }\n+\n+struct Lower {\n+    const int& ref;\n+    Lower(const int& ref) : ref(ref) { }\n+};\n+struct Middle : public virtual Lower {\n+    Middle(const int& ref) : Lower(ref) { }\n+};\n+struct Upper : public Middle {\n+    Upper(const int& ref) : Lower(ref), Middle(ref) { }\n+    int get() { return ref; }\n+};\n+extern \"C\" void abort (void);\n+int main()\n+{\n+  int i = 0;\n+  Upper upper(i);\n+  if (upper.get() != 0)\n+    abort ();\n+  return 0;\n+}"}]}