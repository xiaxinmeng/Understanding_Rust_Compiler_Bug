{"sha": "4c1177e161e329b741e7b5ae55950fe65dfc8df5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMxMTc3ZTE2MWUzMjliNzQxZTdiNWFlNTU5NTBmZTY1ZGZjOGRmNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-06-25T17:07:01Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-06-25T17:07:01Z"}, "message": "hash-table.h (has_is_deleted, [...]): Delete.\n\ngcc/\n\t* hash-table.h (has_is_deleted, is_deleted_helper): Delete.\n\t(has_is_empty, is_empty_helper): Delete.\n\t(has_mark_deleted, mark_deleted_helper): Delete.\n\t(has_mark_empty, mark_empty_helper): Delete.\n\t(hash_table::is_deleted): Call the Descriptor unconditionally.\n\t(hash_table::is_empty): Likewise.\n\t(hash_table::mark_deleted): Likewise.\n\t(hash_table::mark_empty): Likewise.\n\nFrom-SVN: r224962", "tree": {"sha": "bb67e870ff653ec7597c71fa8cc275fcacbb2c25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb67e870ff653ec7597c71fa8cc275fcacbb2c25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c1177e161e329b741e7b5ae55950fe65dfc8df5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1177e161e329b741e7b5ae55950fe65dfc8df5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c1177e161e329b741e7b5ae55950fe65dfc8df5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1177e161e329b741e7b5ae55950fe65dfc8df5/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7edd9b154d9f03c1006722aff36caa0955198c31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7edd9b154d9f03c1006722aff36caa0955198c31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7edd9b154d9f03c1006722aff36caa0955198c31"}], "stats": {"total": 152, "additions": 24, "deletions": 128}, "files": [{"sha": "3a7e1b052ab26edeab5f1a2b2ab5ed1ea8f63cdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1177e161e329b741e7b5ae55950fe65dfc8df5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1177e161e329b741e7b5ae55950fe65dfc8df5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c1177e161e329b741e7b5ae55950fe65dfc8df5", "patch": "@@ -1,3 +1,14 @@\n+2015-06-25  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* hash-table.h (has_is_deleted, is_deleted_helper): Delete.\n+\t(has_is_empty, is_empty_helper): Delete.\n+\t(has_mark_deleted, mark_deleted_helper): Delete.\n+\t(has_mark_empty, mark_empty_helper): Delete.\n+\t(hash_table::is_deleted): Call the Descriptor unconditionally.\n+\t(hash_table::is_empty): Likewise.\n+\t(hash_table::mark_deleted): Likewise.\n+\t(hash_table::mark_empty): Likewise.\n+\n 2015-06-25  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* cgraph.h (asmname_hasher): Inherit from ggc_ptr_hash.  Remove"}, {"sha": "618845335cd62b69eeda819c02e4cd215e8c3b8e", "filename": "gcc/hash-table.h", "status": "modified", "additions": 13, "deletions": 128, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1177e161e329b741e7b5ae55950fe65dfc8df5/gcc%2Fhash-table.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1177e161e329b741e7b5ae55950fe65dfc8df5/gcc%2Fhash-table.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-table.h?ref=4c1177e161e329b741e7b5ae55950fe65dfc8df5", "patch": "@@ -323,122 +323,6 @@ hash_table_mod2 (hashval_t hash, unsigned int index)\n   return 1 + mul_mod (hash, p->prime - 2, p->inv_m2, p->shift);\n }\n \n- template<typename Traits>\n- struct has_is_deleted\n-{\n-  template<typename U, bool (*)(U &)> struct helper {};\n-  template<typename U> static char test (helper<U, U::is_deleted> *);\n-  template<typename U> static int test (...);\n-  static const bool value = sizeof (test<Traits> (0)) == sizeof (char);\n-};\n-\n-template<typename Type, typename Traits, bool = has_is_deleted<Traits>::value>\n-struct is_deleted_helper\n-{\n-  static inline bool\n-  call (Type &v)\n-  {\n-    return Traits::is_deleted (v);\n-  }\n-};\n-\n-template<typename Type, typename Traits>\n-struct is_deleted_helper<Type *, Traits, false>\n-{\n-  static inline bool\n-  call (Type *v)\n-  {\n-    return v == HTAB_DELETED_ENTRY;\n-  }\n-};\n-\n- template<typename Traits>\n- struct has_is_empty\n-{\n-  template<typename U, bool (*)(U &)> struct helper {};\n-  template<typename U> static char test (helper<U, U::is_empty> *);\n-  template<typename U> static int test (...);\n-  static const bool value = sizeof (test<Traits> (0)) == sizeof (char);\n-};\n-\n-template<typename Type, typename Traits, bool = has_is_deleted<Traits>::value>\n-struct is_empty_helper\n-{\n-  static inline bool\n-  call (Type &v)\n-  {\n-    return Traits::is_empty (v);\n-  }\n-};\n-\n-template<typename Type, typename Traits>\n-struct is_empty_helper<Type *, Traits, false>\n-{\n-  static inline bool\n-  call (Type *v)\n-  {\n-    return v == HTAB_EMPTY_ENTRY;\n-  }\n-};\n-\n- template<typename Traits>\n- struct has_mark_deleted\n-{\n-  template<typename U, void (*)(U &)> struct helper {};\n-  template<typename U> static char test (helper<U, U::mark_deleted> *);\n-  template<typename U> static int test (...);\n-  static const bool value = sizeof (test<Traits> (0)) == sizeof (char);\n-};\n-\n-template<typename Type, typename Traits, bool = has_is_deleted<Traits>::value>\n-struct mark_deleted_helper\n-{\n-  static inline void\n-  call (Type &v)\n-  {\n-    Traits::mark_deleted (v);\n-  }\n-};\n-\n-template<typename Type, typename Traits>\n-struct mark_deleted_helper<Type *, Traits, false>\n-{\n-  static inline void\n-  call (Type *&v)\n-  {\n-    v = static_cast<Type *> (HTAB_DELETED_ENTRY);\n-  }\n-};\n-\n- template<typename Traits>\n- struct has_mark_empty\n-{\n-  template<typename U, void (*)(U &)> struct helper {};\n-  template<typename U> static char test (helper<U, U::mark_empty> *);\n-  template<typename U> static int test (...);\n-  static const bool value = sizeof (test<Traits> (0)) == sizeof (char);\n-};\n-\n-template<typename Type, typename Traits, bool = has_is_deleted<Traits>::value>\n-struct mark_empty_helper\n-{\n-  static inline void\n-  call (Type &v)\n-  {\n-    Traits::mark_empty (v);\n-  }\n-};\n-\n-template<typename Type, typename Traits>\n-struct mark_empty_helper<Type *, Traits, false>\n-{\n-  static inline void\n-  call (Type *&v)\n-  {\n-    v = static_cast<Type *> (HTAB_EMPTY_ENTRY);\n-  }\n-};\n-\n class mem_usage;\n \n /* User-facing hash table type.\n@@ -610,23 +494,24 @@ class hash_table\n   value_type *find_empty_slot_for_expand (hashval_t);\n   void expand ();\n   static bool is_deleted (value_type &v)\n-    {\n-      return is_deleted_helper<value_type, Descriptor>::call (v);\n-    }\n+  {\n+    return Descriptor::is_deleted (v);\n+  }\n+\n   static bool is_empty (value_type &v)\n-    {\n-      return is_empty_helper<value_type, Descriptor>::call (v);\n-    }\n+  {\n+    return Descriptor::is_empty (v);\n+  }\n \n   static void mark_deleted (value_type &v)\n-    {\n-      return mark_deleted_helper<value_type, Descriptor>::call (v);\n-    }\n+  {\n+    Descriptor::mark_deleted (v);\n+  }\n \n   static void mark_empty (value_type &v)\n-    {\n-      return mark_empty_helper<value_type, Descriptor>::call (v);\n-    }\n+  {\n+    Descriptor::mark_empty (v);\n+  }\n \n   /* Table itself.  */\n   typename Descriptor::value_type *m_entries;"}]}