{"sha": "bbafa6251ed34c3753d3efd821338b493cc957e0", "node_id": "C_kwDOANBUbNoAKGJiYWZhNjI1MWVkMzRjMzc1M2QzZWZkODIxMzM4YjQ5M2NjOTU3ZTA", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-11-18T18:00:45Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-01T10:24:43Z"}, "message": "[Ada] Do not return freeze nodes for start of early call regions\n\ngcc/ada/\n\n\t* sem_elab.adb (Previous_Suitable_Construct): New function declared\n\tin the Early_Call_Region_Processor package.\n\t(Find_ECR): Call it to get the previous node at the start.\n\t(Include): Call it to get the previous node during the traversal.", "tree": {"sha": "ae688ab3dcd79d17e2dc70781d0c2ac660d8d91f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae688ab3dcd79d17e2dc70781d0c2ac660d8d91f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbafa6251ed34c3753d3efd821338b493cc957e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbafa6251ed34c3753d3efd821338b493cc957e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbafa6251ed34c3753d3efd821338b493cc957e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbafa6251ed34c3753d3efd821338b493cc957e0/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ce9322ccc4aa873d732554c895b821c90017511", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ce9322ccc4aa873d732554c895b821c90017511", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ce9322ccc4aa873d732554c895b821c90017511"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "29f306994f73961548c8283b9d5ed1fba24e0f55", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbafa6251ed34c3753d3efd821338b493cc957e0/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbafa6251ed34c3753d3efd821338b493cc957e0/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=bbafa6251ed34c3753d3efd821338b493cc957e0", "patch": "@@ -6965,6 +6965,11 @@ package body Sem_Elab is\n          --  Determine whether arbitrary node N denotes a suitable construct\n          --  for inclusion into the early call region.\n \n+         function Previous_Suitable_Construct (N : Node_Id) return Node_Id;\n+         pragma Inline (Previous_Suitable_Construct);\n+         --  Return the previous node suitable for inclusion into the early\n+         --  call region.\n+\n          procedure Transition_Body_Declarations\n            (Bod  : Node_Id;\n             Curr : out Node_Id);\n@@ -7209,7 +7214,7 @@ package body Sem_Elab is\n          begin\n             --  The early call region starts at N\n \n-            Curr  := Prev (N);\n+            Curr  := Previous_Suitable_Construct (N);\n             Start := N;\n \n             --  Inspect each node in reverse declarative order while going in\n@@ -7286,7 +7291,7 @@ package body Sem_Elab is\n             --  Otherwise the input node is still within some list\n \n             else\n-               Curr := Prev (Start);\n+               Curr := Previous_Suitable_Construct (Start);\n             end if;\n          end Include;\n \n@@ -7378,6 +7383,23 @@ package body Sem_Elab is\n             end case;\n          end Is_Suitable_Construct;\n \n+         ---------------------------------\n+         -- Previous_Suitable_Construct --\n+         ---------------------------------\n+\n+         function Previous_Suitable_Construct (N : Node_Id) return Node_Id is\n+            P : Node_Id;\n+\n+         begin\n+            P := Prev (N);\n+\n+            while Present (P) and then not Is_Suitable_Construct (P) loop\n+               Prev (P);\n+            end loop;\n+\n+            return P;\n+         end Previous_Suitable_Construct;\n+\n          ----------------------------------\n          -- Transition_Body_Declarations --\n          ----------------------------------"}]}