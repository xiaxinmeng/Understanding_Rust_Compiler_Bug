{"sha": "b0fd92a3c810b5de3dbf020ca540dfefde4df924", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBmZDkyYTNjODEwYjVkZTNkYmYwMjBjYTU0MGRmZWZkZTRkZjkyNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-07-25T22:36:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-07-25T22:36:42Z"}, "message": "Fix typo spotted by Richard.\n\nFrom-SVN: r44370", "tree": {"sha": "60603c052468e93ec2819e62075b1476341f7771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60603c052468e93ec2819e62075b1476341f7771"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0fd92a3c810b5de3dbf020ca540dfefde4df924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0fd92a3c810b5de3dbf020ca540dfefde4df924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0fd92a3c810b5de3dbf020ca540dfefde4df924", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0fd92a3c810b5de3dbf020ca540dfefde4df924/comments", "author": null, "committer": null, "parents": [{"sha": "c4f81e4a6b4a1ff4774c8836de4a7241c57b278f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f81e4a6b4a1ff4774c8836de4a7241c57b278f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4f81e4a6b4a1ff4774c8836de4a7241c57b278f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "53e807374679c006851155e28453c54323cf3006", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0fd92a3c810b5de3dbf020ca540dfefde4df924/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0fd92a3c810b5de3dbf020ca540dfefde4df924/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=b0fd92a3c810b5de3dbf020ca540dfefde4df924", "patch": "@@ -2679,7 +2679,7 @@ find_and_verify_loops (f, loops)\n \t\trtx tmp;\n \n \t\t/* Search for possible garbage past the conditional jumps\n-\t\t   and look for latest barrier.  */\n+\t\t   and look for the last barrier.  */\n \t\tfor (tmp = last_insn_to_move;\n \t\t     tmp && GET_CODE (tmp) != CODE_LABEL; tmp = NEXT_INSN (tmp))\n \t\t  if (GET_CODE (tmp) == BARRIER)"}]}