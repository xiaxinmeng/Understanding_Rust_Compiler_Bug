{"sha": "c3ed5e9eaf279c24b3fb69bf261f4abef67aad04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNlZDVlOWVhZjI3OWMyNGIzZmI2OWJmMjYxZjRhYmVmNjdhYWQwNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T08:49:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T08:49:10Z"}, "message": "[multiple changes]\n\n2014-10-17  Vincent Celier  <celier@adacore.com>\n\n\t* prj-conf.adb (Get_Config_Switches): In CodePeer mode, do\n\tnot take into account any compiler command from package IDE.\n\n2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Build_Function_Wrapper): The formals of the\n\twrapper must have the same identifiers as those of the formal\n\tsubprogram, because calls within the generic may use named\n\tassociations.\n\nFrom-SVN: r216376", "tree": {"sha": "4696b7be1561bcdcc7a26b2e1647f2a48b859eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4696b7be1561bcdcc7a26b2e1647f2a48b859eed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3ed5e9eaf279c24b3fb69bf261f4abef67aad04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ed5e9eaf279c24b3fb69bf261f4abef67aad04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3ed5e9eaf279c24b3fb69bf261f4abef67aad04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ed5e9eaf279c24b3fb69bf261f4abef67aad04/comments", "author": null, "committer": null, "parents": [{"sha": "e7cd165c2fdf395c487a13db8c17a678620e2716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7cd165c2fdf395c487a13db8c17a678620e2716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7cd165c2fdf395c487a13db8c17a678620e2716"}], "stats": {"total": 239, "additions": 113, "deletions": 126}, "files": [{"sha": "7773970e4c7b9d2de2de345643564644ee592aed", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ed5e9eaf279c24b3fb69bf261f4abef67aad04/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ed5e9eaf279c24b3fb69bf261f4abef67aad04/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c3ed5e9eaf279c24b3fb69bf261f4abef67aad04", "patch": "@@ -1,3 +1,15 @@\n+2014-10-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-conf.adb (Get_Config_Switches): In CodePeer mode, do\n+\tnot take into account any compiler command from package IDE.\n+\n+2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Build_Function_Wrapper): The formals of the\n+\twrapper must have the same identifiers as those of the formal\n+\tsubprogram, because calls within the generic may use named\n+\tassociations.\n+\n 2014-10-17  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, a-strsea.adb: Minor reformatting."}, {"sha": "56d116ec75b76e734691a5033003bf31e7287a85", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 24, "deletions": 27, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ed5e9eaf279c24b3fb69bf261f4abef67aad04/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ed5e9eaf279c24b3fb69bf261f4abef67aad04/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=c3ed5e9eaf279c24b3fb69bf261f4abef67aad04", "patch": "@@ -172,7 +172,7 @@ package body Prj.Conf is\n    begin\n       if Config_File = Empty_Node then\n \n-         --  Create a dummy config file is none was found\n+         --  Create a dummy config file if none was found\n \n          Name_Len := Auto_Cgpr'Length;\n          Name_Buffer (1 .. Name_Len) := Auto_Cgpr;\n@@ -587,7 +587,7 @@ package body Prj.Conf is\n           or else\n             (Tgt_Name /= No_Name\n               and then (Length_Of_Name (Tgt_Name) = 0\n-                          or else Target = Get_Name_String (Tgt_Name)));\n+                         or else Target = Get_Name_String (Tgt_Name)));\n \n       if not OK then\n          if Autoconf_Specified then\n@@ -980,7 +980,7 @@ package body Prj.Conf is\n             end if;\n \n             --  Get the config switches. This should be done only now, as some\n-            --  runtimes may have been found if the Builder switches.\n+            --  runtimes may have been found in the Builder switches.\n \n             Config_Switches := Get_Config_Switches;\n \n@@ -1082,12 +1082,11 @@ package body Prj.Conf is\n                Write_Eol;\n \n             elsif not Quiet_Output then\n+\n                --  Display no message if we are creating auto.cgpr, unless in\n-               --  verbose mode\n+               --  verbose mode.\n \n-               if Config_File_Name'Length > 0\n-                 or else Verbose_Mode\n-               then\n+               if Config_File_Name'Length > 0 or else Verbose_Mode then\n                   Write_Str (\"creating \");\n                   Write_Str (Simple_Name (Args (3).all));\n                   Write_Eol;\n@@ -1300,11 +1299,14 @@ package body Prj.Conf is\n                Config_Command : constant String :=\n                                   \"--config=\" & Get_Name_String (Name);\n \n-               Runtime_Name   : constant String :=\n-                                  Runtime_Name_For (Name);\n+               Runtime_Name : constant String := Runtime_Name_For (Name);\n \n             begin\n-               if Variable = Nil_Variable_Value\n+               --  In CodePeer mode, we do not take into account any compiler\n+               --  command from the package IDE.\n+\n+               if CodePeer_Mode\n+                 or else Variable = Nil_Variable_Value\n                  or else Length_Of_Name (Variable.Value) = 0\n                then\n                   Result (Count) :=\n@@ -1321,14 +1323,14 @@ package body Prj.Conf is\n                      if Is_Absolute_Path (Compiler_Command) then\n                         Result (Count) :=\n                           new String'\n-                            (Config_Command & \",,\" & Runtime_Name & \",\" &\n-                             Containing_Directory (Compiler_Command) & \",\" &\n-                             Simple_Name (Compiler_Command));\n+                            (Config_Command & \",,\" & Runtime_Name & \",\"\n+                             & Containing_Directory (Compiler_Command) & \",\"\n+                             & Simple_Name (Compiler_Command));\n                      else\n                         Result (Count) :=\n                           new String'\n-                            (Config_Command & \",,\" & Runtime_Name & \",,\" &\n-                             Compiler_Command);\n+                            (Config_Command & \",,\" & Runtime_Name & \",,\"\n+                             & Compiler_Command);\n                      end if;\n                   end;\n                end if;\n@@ -1350,20 +1352,14 @@ package body Prj.Conf is\n \n       begin\n          Variable :=\n-           Value_Of\n-             (Name_Source_Dirs,\n-              Project.Decl.Attributes,\n-              Shared);\n+           Value_Of (Name_Source_Dirs, Project.Decl.Attributes, Shared);\n \n          if Variable = Nil_Variable_Value\n            or else Variable.Default\n            or else Variable.Values /= Nil_String\n          then\n             Variable :=\n-              Value_Of\n-                (Name_Source_Files,\n-                 Project.Decl.Attributes,\n-                 Shared);\n+              Value_Of (Name_Source_Files, Project.Decl.Attributes, Shared);\n             return Variable = Nil_Variable_Value\n               or else Variable.Default\n               or else Variable.Values /= Nil_String;\n@@ -1373,9 +1369,13 @@ package body Prj.Conf is\n          end if;\n       end Might_Have_Sources;\n \n+      --  Local Variables\n+\n       Success             : Boolean;\n       Config_Project_Node : Project_Node_Id := Empty_Node;\n \n+   --  Start of processing for Get_Or_Create_Configuration_File\n+\n    begin\n       pragma Assert (Prj.Env.Is_Initialized (Env.Project_Path));\n \n@@ -1472,9 +1472,7 @@ package body Prj.Conf is\n             On_New_Tree_Loaded     => null);\n       end if;\n \n-      if Config_Project_Node = Empty_Node\n-        or else Config = No_Project\n-      then\n+      if Config_Project_Node = Empty_Node or else Config = No_Project then\n          Raise_Invalid_Config\n            (\"processing of configuration project \"\"\"\n             & Config_File_Path.all & \"\"\" failed\");\n@@ -1606,7 +1604,6 @@ package body Prj.Conf is\n          Implicit_Project  => Implicit_Project);\n \n       if User_Project_Node = Empty_Node then\n-         User_Project_Node := Empty_Node;\n          return;\n       end if;\n "}, {"sha": "3b84679534a329bdcb3c6a5db6f82478f8b46c29", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 77, "deletions": 99, "changes": 176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ed5e9eaf279c24b3fb69bf261f4abef67aad04/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ed5e9eaf279c24b3fb69bf261f4abef67aad04/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=c3ed5e9eaf279c24b3fb69bf261f4abef67aad04", "patch": "@@ -1032,11 +1032,11 @@ package body Sem_Ch12 is\n          Decl      : Node_Id;\n          Func_Name : Node_Id;\n          Func      : Entity_Id;\n-         N_Parms   : Natural;\n          Parm_Type : Node_Id;\n          Profile   : List_Id := New_List;\n          Spec      : Node_Id;\n-         F         : Entity_Id;\n+         Act_F     : Entity_Id;\n+         Form_F    : Entity_Id;\n          New_F     : Entity_Id;\n \n       begin\n@@ -1057,52 +1057,56 @@ package body Sem_Ch12 is\n          Profile := New_List;\n \n          if Present (Actual) then\n-            F := First_Formal (Entity (Actual));\n+            Act_F := First_Formal (Entity (Actual));\n          else\n-            F := First_Formal (Formal);\n+            Act_F := Empty;\n          end if;\n \n-         N_Parms := 0;\n-         while Present (F) loop\n+         Form_F := First_Formal (Formal);\n+         while Present (Form_F) loop\n \n             --  Create new formal for profile of wrapper, and add a reference\n-            --  to it in the list of actuals for the enclosing call.\n+            --  to it in the list of actuals for the enclosing call. The name\n+            --  must be that of the formal in the formal subprogram, because\n+            --  calls to it in the generic body may use named associations.\n \n-            New_F := Make_Temporary\n-                       (Loc, Character'Val (Character'Pos ('A') + N_Parms));\n+            New_F := Make_Defining_Identifier (Loc, Chars (Form_F));\n \n             if No (Actual) then\n \n                --  If formal has a class-wide type rewrite as the corresponding\n                --  attribute, because the class-wide type is not retrievable by\n                --  visbility.\n \n-               if Is_Class_Wide_Type (Etype (F)) then\n+               if Is_Class_Wide_Type (Etype (Form_F)) then\n                   Parm_Type :=\n                     Make_Attribute_Reference (Loc,\n                       Attribute_Name => Name_Class,\n                       Prefix         =>\n-                        Make_Identifier (Loc, Chars (Etype (Etype (F)))));\n+                        Make_Identifier (Loc, Chars (Etype (Etype (Form_F)))));\n \n                else\n                   Parm_Type :=\n-                    Make_Identifier (Loc, Chars (Etype (Etype (F))));\n+                    Make_Identifier (Loc, Chars (Etype (Etype (Form_F))));\n                end if;\n \n             --  If actual is present, use the type of its own formal\n \n             else\n-               Parm_Type := New_Occurrence_Of (Etype (F), Loc);\n+               Parm_Type := New_Occurrence_Of (Etype (Act_F), Loc);\n             end if;\n \n             Append_To (Profile,\n               Make_Parameter_Specification (Loc,\n-              Defining_Identifier => New_F,\n-              Parameter_Type      => Parm_Type));\n+                Defining_Identifier => New_F,\n+                Parameter_Type      => Parm_Type));\n \n             Append_To (Actuals, New_Occurrence_Of (New_F, Loc));\n-            Next_Formal (F);\n-            N_Parms := N_Parms + 1;\n+            Next_Formal (Form_F);\n+\n+            if Present (Act_F) then\n+               Next_Formal (Act_F);\n+            end if;\n          end loop;\n \n          Spec :=\n@@ -1111,6 +1115,7 @@ package body Sem_Ch12 is\n              Parameter_Specifications => Profile,\n              Result_Definition        =>\n                Make_Identifier (Loc, Chars (Etype (Formal))));\n+\n          Decl :=\n            Make_Expression_Function (Loc,\n              Specification => Spec,\n@@ -2465,11 +2470,8 @@ package body Sem_Ch12 is\n          Set_Ekind (Id, K);\n          Set_Etype (Id, T);\n \n-         if (Is_Array_Type (T)\n-              and then not Is_Constrained (T))\n-           or else\n-            (Ekind (T) = E_Record_Type\n-              and then Has_Discriminants (T))\n+         if (Is_Array_Type (T) and then not Is_Constrained (T))\n+           or else (Ekind (T) = E_Record_Type and then Has_Discriminants (T))\n          then\n             declare\n                Non_Freezing_Ref : constant Node_Id :=\n@@ -4036,17 +4038,17 @@ package body Sem_Ch12 is\n \n             Needs_Body :=\n               (Unit_Requires_Body (Gen_Unit)\n-                  or else Enclosing_Body_Present\n-                  or else Present (Corresponding_Body (Gen_Decl)))\n-                and then (Is_In_Main_Unit (N) or else Might_Inline_Subp)\n-                and then not Is_Actual_Pack\n-                and then not Inline_Now\n-                and then (Operating_Mode = Generate_Code\n+                or else Enclosing_Body_Present\n+                or else Present (Corresponding_Body (Gen_Decl)))\n+               and then (Is_In_Main_Unit (N) or else Might_Inline_Subp)\n+               and then not Is_Actual_Pack\n+               and then not Inline_Now\n+               and then (Operating_Mode = Generate_Code\n \n-                           --  Need comment for this check ???\n+                          --  Need comment for this check ???\n \n-                           or else (Operating_Mode = Check_Semantics\n-                                     and then (ASIS_Mode or GNATprove_Mode)));\n+                          or else (Operating_Mode = Check_Semantics\n+                                    and then (ASIS_Mode or GNATprove_Mode)));\n \n             --  If front_end_inlining is enabled, do not instantiate body if\n             --  within a generic context.\n@@ -4452,14 +4454,13 @@ package body Sem_Ch12 is\n \n                exit when Scope_Stack.Last - Num_Scopes + 1 = Scope_Stack.First\n                  or else Scope_Stack.Table\n-                           (Scope_Stack.Last - Num_Scopes).Entity\n-                             = Scope (S);\n+                           (Scope_Stack.Last - Num_Scopes).Entity = Scope (S);\n             end loop;\n \n             exit when Is_Generic_Instance (S)\n               and then (In_Package_Body (S)\n-                          or else Ekind (S) = E_Procedure\n-                          or else Ekind (S) = E_Function);\n+                         or else Ekind (S) = E_Procedure\n+                         or else Ekind (S) = E_Function);\n             S := Scope (S);\n          end loop;\n \n@@ -4498,8 +4499,7 @@ package body Sem_Ch12 is\n          loop\n             if Is_Generic_Instance (S)\n               and then (In_Package_Body (S)\n-                          or else Ekind (S) = E_Procedure\n-                            or else Ekind (S) = E_Function)\n+                         or else Ekind_In (S, E_Procedure, E_Function))\n             then\n                --  We still have to remove the entities of the enclosing\n                --  instance from direct visibility.\n@@ -4559,6 +4559,7 @@ package body Sem_Ch12 is\n \n             S := Scope (S);\n          end loop;\n+\n          pragma Assert (Num_Inner < Num_Scopes);\n \n          Push_Scope (Standard_Standard);\n@@ -4668,8 +4669,7 @@ package body Sem_Ch12 is\n                Set_Is_Generic_Instance (Inst, True);\n \n                if In_Package_Body (Inst)\n-                 or else Ekind (S) = E_Procedure\n-                 or else Ekind (S) = E_Function\n+                 or else Ekind_In (S, E_Procedure, E_Function)\n                then\n                   E := First_Entity (Instances (J));\n                   while Present (E) loop\n@@ -5042,9 +5042,8 @@ package body Sem_Ch12 is\n          --  If renaming, get original unit\n \n          if Present (Renamed_Object (Gen_Unit))\n-           and then (Ekind (Renamed_Object (Gen_Unit)) = E_Generic_Procedure\n-                       or else\n-                     Ekind (Renamed_Object (Gen_Unit)) = E_Generic_Function)\n+           and then Ekind_In (Renamed_Object (Gen_Unit), E_Generic_Procedure,\n+                                                         E_Generic_Function)\n          then\n             Gen_Unit := Renamed_Object (Gen_Unit);\n             Set_Is_Instantiated (Gen_Unit);\n@@ -5998,9 +5997,7 @@ package body Sem_Ch12 is\n          --  If the formal package is declared with a box, or if the formal\n          --  parameter is defaulted, it is visible in the body.\n \n-         elsif Is_Formal_Box\n-           or else Is_Visible_Formal (E)\n-         then\n+         elsif Is_Formal_Box or else Is_Visible_Formal (E) then\n             Set_Is_Hidden (E, False);\n          end if;\n \n@@ -6284,7 +6281,7 @@ package body Sem_Ch12 is\n                if Is_Child_Unit (E)\n                  and then not Comes_From_Source (Entity (Prefix (Gen_Id)))\n                  and then (not In_Instance\n-                             or else Nkind (Parent (Parent (Gen_Id))) =\n+                            or else Nkind (Parent (Parent (Gen_Id))) =\n                                                          N_Compilation_Unit)\n                then\n                   Error_Msg_N\n@@ -10031,15 +10028,13 @@ package body Sem_Ch12 is\n             --  access type.\n \n             if Ada_Version < Ada_2005\n-              or else\n-                Ekind (Base_Type (Ftyp)) /=\n-                  E_Anonymous_Access_Type\n-              or else\n-                Ekind (Base_Type (Etype (Actual))) /=\n-                  E_Anonymous_Access_Type\n+              or else Ekind (Base_Type (Ftyp))           /=\n+                                                  E_Anonymous_Access_Type\n+              or else Ekind (Base_Type (Etype (Actual))) /=\n+                                                  E_Anonymous_Access_Type\n             then\n-               Error_Msg_NE (\"type of actual does not match type of&\",\n-                             Actual, Gen_Obj);\n+               Error_Msg_NE\n+                 (\"type of actual does not match type of&\", Actual, Gen_Obj);\n             end if;\n          end if;\n \n@@ -10048,19 +10043,16 @@ package body Sem_Ch12 is\n          --  Check for instantiation of atomic/volatile actual for\n          --  non-atomic/volatile formal (RM C.6 (12)).\n \n-         if Is_Atomic_Object (Actual)\n-           and then not Is_Atomic (Orig_Ftyp)\n-         then\n+         if Is_Atomic_Object (Actual) and then not Is_Atomic (Orig_Ftyp) then\n             Error_Msg_N\n-              (\"cannot instantiate non-atomic formal object \" &\n-               \"with atomic actual\", Actual);\n+              (\"cannot instantiate non-atomic formal object \"\n+               & \"with atomic actual\", Actual);\n \n-         elsif Is_Volatile_Object (Actual)\n-           and then not Is_Volatile (Orig_Ftyp)\n+         elsif Is_Volatile_Object (Actual) and then not Is_Volatile (Orig_Ftyp)\n          then\n             Error_Msg_N\n-              (\"cannot instantiate non-volatile formal object \" &\n-               \"with volatile actual\", Actual);\n+              (\"cannot instantiate non-volatile formal object \"\n+               & \"with volatile actual\", Actual);\n          end if;\n \n       --  Formal in-parameter\n@@ -11257,9 +11249,10 @@ package body Sem_Ch12 is\n \n          if Subtypes_Match\n            (Component_Type (A_Gen_T), Component_Type (Act_T))\n-             or else Subtypes_Match\n-               (Find_Actual_Type (Component_Type (A_Gen_T), A_Gen_T),\n-               Component_Type (Act_T))\n+             or else\n+               Subtypes_Match\n+                 (Find_Actual_Type (Component_Type (A_Gen_T), A_Gen_T),\n+                  Component_Type (Act_T))\n          then\n             null;\n          else\n@@ -11514,12 +11507,10 @@ package body Sem_Ch12 is\n \n             elsif Is_Constrained (Act_T) then\n                if Ekind (Ancestor) = E_Access_Type\n-                 or else\n-                   (not Is_Constrained (A_Gen_T)\n-                     and then Is_Composite_Type (A_Gen_T))\n+                 or else (not Is_Constrained (A_Gen_T)\n+                           and then Is_Composite_Type (A_Gen_T))\n                then\n-                  Error_Msg_N\n-                    (\"actual subtype must be unconstrained\", Actual);\n+                  Error_Msg_N (\"actual subtype must be unconstrained\", Actual);\n                   Abandon_Instantiation (Actual);\n                end if;\n \n@@ -11958,14 +11949,11 @@ package body Sem_Ch12 is\n                 Actual, Gen_T);\n \n          elsif Is_Limited_Type (Act_T) /= Is_Limited_Type (A_Gen_T)\n-           or else\n-             Is_Task_Interface (A_Gen_T) /= Is_Task_Interface (Act_T)\n-           or else\n-             Is_Protected_Interface (A_Gen_T) /=\n-               Is_Protected_Interface (Act_T)\n-           or else\n-             Is_Synchronized_Interface (A_Gen_T) /=\n-               Is_Synchronized_Interface (Act_T)\n+           or else Is_Task_Interface (A_Gen_T) /= Is_Task_Interface (Act_T)\n+           or else Is_Protected_Interface (A_Gen_T) /=\n+                   Is_Protected_Interface (Act_T)\n+           or else Is_Synchronized_Interface (A_Gen_T) /=\n+                   Is_Synchronized_Interface (Act_T)\n          then\n             Error_Msg_NE\n               (\"actual for interface& does not match (RM 12.5.5(4))\",\n@@ -12041,15 +12029,13 @@ package body Sem_Ch12 is\n \n          if Is_Unchecked_Union (Base_Type (Act_T)) then\n             if not Has_Discriminants (A_Gen_T)\n-                     or else\n-                   (Is_Derived_Type (A_Gen_T)\n-                     and then\n-                    Is_Unchecked_Union (A_Gen_T))\n+              or else (Is_Derived_Type (A_Gen_T)\n+                        and then Is_Unchecked_Union (A_Gen_T))\n             then\n                null;\n             else\n-               Error_Msg_N (\"unchecked union cannot be the actual for a\" &\n-                 \" discriminated formal type\", Act_T);\n+               Error_Msg_N (\"unchecked union cannot be the actual for a \"\n+                            & \"discriminated formal type\", Act_T);\n \n             end if;\n          end if;\n@@ -12068,8 +12054,7 @@ package body Sem_Ch12 is\n \n          if Ekind (Act_T) = E_Incomplete_Type\n            or else (Is_Class_Wide_Type (Act_T)\n-                      and then\n-                         Ekind (Root_Type (Act_T)) = E_Incomplete_Type)\n+                     and then Ekind (Root_Type (Act_T)) = E_Incomplete_Type)\n          then\n             --  If the formal is an incomplete type, the actual can be\n             --  incomplete as well.\n@@ -12452,7 +12437,7 @@ package body Sem_Ch12 is\n       if not In_Same_Source_Unit (N, Spec)\n         or else Nkind (Unit (Comp_Unit)) = N_Package_Declaration\n         or else (Nkind (Unit (Comp_Unit)) = N_Package_Body\n-                   and then not Is_In_Main_Unit (Spec))\n+                  and then not Is_In_Main_Unit (Spec))\n       then\n          --  Find body of parent of spec, and analyze it. A special case arises\n          --  when the parent is an instantiation, that is to say when we are\n@@ -13622,7 +13607,7 @@ package body Sem_Ch12 is\n             elsif Nkind (N) = N_Op_Concat\n               and then Is_Generic_Type (Etype (N2))\n               and then (Base_Type (Etype (Right_Opnd (N2))) = Etype (N2)\n-                         or else\n+                          or else\n                         Base_Type (Etype (Left_Opnd (N2)))  = Etype (N2))\n               and then Is_Intrinsic_Subprogram (E)\n             then\n@@ -13915,9 +13900,7 @@ package body Sem_Ch12 is\n             end if;\n \n          elsif D in List_Range then\n-            if D = Union_Id (No_List)\n-              or else Is_Empty_List (List_Id (D))\n-            then\n+            if D = Union_Id (No_List) or else Is_Empty_List (List_Id (D)) then\n                null;\n \n             else\n@@ -14169,10 +14152,7 @@ package body Sem_Ch12 is\n                      end if;\n                   end if;\n \n-                  if No (N2)\n-                    or else No (Typ)\n-                    or else not Is_Global (Typ)\n-                  then\n+                  if No (N2) or else No (Typ) or else not Is_Global (Typ) then\n                      Set_Associated_Node (N, Empty);\n \n                      --  If the aggregate is an actual in a call, it has been\n@@ -14438,9 +14418,7 @@ package body Sem_Ch12 is\n       OK      : Boolean;\n \n    begin\n-      if No (T)\n-        or else T = Any_Id\n-      then\n+      if No (T) or else T = Any_Id then\n          return;\n       end if;\n "}]}