{"sha": "76dcb70dab490c5dbabaf1b982a1650da2a341cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZkY2I3MGRhYjQ5MGM1ZGJhYmFmMWI5ODJhMTY1MGRhMmEzNDFjZg==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2019-10-11T09:03:00Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@gcc.gnu.org", "date": "2019-10-11T09:03:00Z"}, "message": "S/390: Test signaling FP comparison instructions\n\ngcc/testsuite/ChangeLog:\n\n2019-10-11  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\tPR target/77918\n\t* gcc.target/s390/s390.exp: Enable Fortran tests.\n\t* gcc.target/s390/zvector/autovec-double-quiet-eq.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-quiet-ge.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-quiet-gt.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-quiet-le.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-quiet-lt.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-quiet-ordered.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-quiet-uneq.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-quiet-unordered.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-eq-z13-finite.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-eq-z13.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-eq.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-ge-z13-finite.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-ge-z13.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-ge.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-gt-z13-finite.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-gt-z13.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-gt.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-le-z13-finite.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-le-z13.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-le.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-lt-z13-finite.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-lt-z13.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-lt.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-ltgt-z13-finite.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-ltgt-z13.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-signaling-ltgt.c: New test.\n\t* gcc.target/s390/zvector/autovec-double-smax-z13.F90: New test.\n\t* gcc.target/s390/zvector/autovec-double-smax.F90: New test.\n\t* gcc.target/s390/zvector/autovec-double-smin-z13.F90: New test.\n\t* gcc.target/s390/zvector/autovec-double-smin.F90: New test.\n\t* gcc.target/s390/zvector/autovec-float-quiet-eq.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-quiet-ge.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-quiet-gt.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-quiet-le.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-quiet-lt.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-quiet-ordered.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-quiet-uneq.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-quiet-unordered.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-signaling-eq.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-signaling-ge.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-signaling-gt.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-signaling-le.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-signaling-lt.c: New test.\n\t* gcc.target/s390/zvector/autovec-float-signaling-ltgt.c: New test.\n\t* gcc.target/s390/zvector/autovec-fortran.h: New test.\n\t* gcc.target/s390/zvector/autovec-long-double-signaling-ge.c: New test.\n\t* gcc.target/s390/zvector/autovec-long-double-signaling-gt.c: New test.\n\t* gcc.target/s390/zvector/autovec-long-double-signaling-le.c: New test.\n\t* gcc.target/s390/zvector/autovec-long-double-signaling-lt.c: New test.\n\t* gcc.target/s390/zvector/autovec.h: New test.\n\nFrom-SVN: r276872", "tree": {"sha": "301332c5b8e9982383780a9ed11d69de8d123202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/301332c5b8e9982383780a9ed11d69de8d123202"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76dcb70dab490c5dbabaf1b982a1650da2a341cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76dcb70dab490c5dbabaf1b982a1650da2a341cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76dcb70dab490c5dbabaf1b982a1650da2a341cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76dcb70dab490c5dbabaf1b982a1650da2a341cf/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0a0cacaba651f428208832fdb8a26dbd12acc38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a0cacaba651f428208832fdb8a26dbd12acc38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0a0cacaba651f428208832fdb8a26dbd12acc38"}], "stats": {"total": 542, "additions": 542, "deletions": 0}, "files": [{"sha": "c565dae1a8058870b896e78678c42b9b07a44090", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -1,3 +1,58 @@\n+2019-10-11  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\tPR target/77918\n+\t* gcc.target/s390/s390.exp: Enable Fortran tests.\n+\t* gcc.target/s390/zvector/autovec-double-quiet-eq.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-quiet-ge.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-quiet-gt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-quiet-le.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-quiet-lt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-quiet-ordered.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-quiet-uneq.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-quiet-unordered.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-eq-z13-finite.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-eq-z13.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-eq.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-ge-z13-finite.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-ge-z13.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-ge.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-gt-z13-finite.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-gt-z13.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-gt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-le-z13-finite.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-le-z13.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-le.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-lt-z13-finite.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-lt-z13.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-lt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-ltgt-z13-finite.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-ltgt-z13.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-signaling-ltgt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-double-smax-z13.F90: New test.\n+\t* gcc.target/s390/zvector/autovec-double-smax.F90: New test.\n+\t* gcc.target/s390/zvector/autovec-double-smin-z13.F90: New test.\n+\t* gcc.target/s390/zvector/autovec-double-smin.F90: New test.\n+\t* gcc.target/s390/zvector/autovec-float-quiet-eq.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-quiet-ge.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-quiet-gt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-quiet-le.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-quiet-lt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-quiet-ordered.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-quiet-uneq.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-quiet-unordered.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-signaling-eq.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-signaling-ge.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-signaling-gt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-signaling-le.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-signaling-lt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-float-signaling-ltgt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-fortran.h: New test.\n+\t* gcc.target/s390/zvector/autovec-long-double-signaling-ge.c: New test.\n+\t* gcc.target/s390/zvector/autovec-long-double-signaling-gt.c: New test.\n+\t* gcc.target/s390/zvector/autovec-long-double-signaling-le.c: New test.\n+\t* gcc.target/s390/zvector/autovec-long-double-signaling-lt.c: New test.\n+\t* gcc.target/s390/zvector/autovec.h: New test.\n+\n 2019-10-11  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* gcc.target/s390/vector/vec-scalar-cmp-1.c: Adjust"}, {"sha": "925eb568832e7a6906e02930f4d8e193e7a99536", "filename": "gcc/testsuite/gcc.target/s390/s390.exp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -27,6 +27,7 @@ if ![istarget s390*-*-*] then {\n # Load support procs.\n load_lib gcc-dg.exp\n load_lib target-supports.exp\n+load_lib gfortran-dg.exp\n \n # Return 1 if the the assembler understands .machine and .machinemode.  The\n # target attribute needs that feature to work.\n@@ -193,6 +194,10 @@ global DEFAULT_CFLAGS\n if ![info exists DEFAULT_CFLAGS] then {\n     set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n }\n+global DEFAULT_FFLAGS\n+if ![info exists DEFAULT_FFLAGS] then {\n+    set DEFAULT_FFLAGS \" -pedantic-errors\"\n+}\n \n # Initialize `dg'.\n dg-init\n@@ -209,6 +214,9 @@ dg-runtest [lsort [prune [glob -nocomplain $srcdir/$subdir/*.{c,S}] \\\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*vector*/*.{c,S}]] \\\n \t\"\" $DEFAULT_CFLAGS\n \n+gfortran-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*vector*/*.F90]] \\\n+\t\"\" $DEFAULT_FFLAGS\n+\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/target-attribute/*.{c,S}]] \\\n \t\"\" $DEFAULT_CFLAGS\n "}, {"sha": "46bef83cfa37ec56781b8501ab4916ce8b74dfa9", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-quiet-eq.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-eq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-eq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-eq.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (QUIET_EQ);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfcedb\\t} } } */"}, {"sha": "4dbbd8f6728fbd8885576ca2188a8f124a2c5a18", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-quiet-ge.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-ge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-ge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-ge.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (QUIET_GE);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchedb\\t} } } */"}, {"sha": "57f7cefb578b5b107db97dcbf5a6a4def451b94d", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-quiet-gt.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-gt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-gt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-gt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (QUIET_GT);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchdb\\t} } } */"}, {"sha": "3de425ca760e7c39d520b2e3b64f1389169d9ee2", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-quiet-le.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-le.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-le.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-le.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (QUIET_LE);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchedb\\t} } } */"}, {"sha": "0817846944da3b9d44cead688f7d7b67e68c3fc0", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-quiet-lt.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-lt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-lt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-lt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (QUIET_LT);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchdb\\t} } } */"}, {"sha": "65b0240073cf33a91aec820af05961f3a3f1afa3", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-quiet-ordered.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-ordered.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-ordered.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-ordered.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (QUIET_ORDERED);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchedb\\t} } } */\n+/* { dg-final { scan-assembler {\\n\\tvfchdb\\t} } } */\n+/* { dg-final { scan-assembler {\\n\\tvo\\t} } } */"}, {"sha": "3d6da30beacd0f0372a8d284c0cc11adf05c7124", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-quiet-uneq.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-uneq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-uneq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-uneq.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (QUIET_UNEQ);\n+\n+/* { dg-final { scan-assembler-times {\\n\\tvfchdb\\t} 2 } } */\n+/* { dg-final { scan-assembler {\\n\\tvo\\t} } } */\n+/* { dg-final { scan-assembler {\\n\\tvx\\t} } } */"}, {"sha": "1f6fb781f6472ab366422c8b63bdf4d840a85183", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-quiet-unordered.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-unordered.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-unordered.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-unordered.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (QUIET_UNORDERED);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchedb\\t} } } */\n+/* { dg-final { scan-assembler {\\n\\tvfchdb\\t} } } */\n+/* combine prefers to reorder vsel args instead of using vno.  */\n+/* { dg-final { scan-assembler {\\n\\tvo\\t} } } */"}, {"sha": "461ff8d7024867731ef5daa4e40489c0f5624672", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-eq-z13-finite.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-eq-z13-finite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-eq-z13-finite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-eq-z13-finite.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -ffinite-math-only -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_EQ);\n+\n+/* We can use non-signaling vector comparison instructions with\n+   -ffinite-math-only.  */\n+/* { dg-final { scan-assembler {\\n\\tvfcedb\\t} } } */"}, {"sha": "1806fa8c60e936e737e571ff0e47cb6710aaa711", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-eq-z13.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-eq-z13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-eq-z13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-eq-z13.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_EQ);\n+\n+/* z13 does not have signaling vector comparison instructions.  */\n+/* { dg-final { scan-assembler {\\n\\tkdbr\\t} } } */"}, {"sha": "a8402b9f70520a14b79e8d695c59ccbb9637220b", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-eq.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-eq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-eq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-eq.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_EQ);\n+\n+/* The vectorizer produces <= and ==, which rtl passes cannot turn into vfkedb\n+   yet.  */\n+/* { dg-final { scan-assembler {\\n\\tvfcedb\\t} } } */\n+/* { dg-final { scan-assembler {\\n\\tvfkhedb\\t} } } */"}, {"sha": "518f5d7a645cf337f4d79900b3c3072f16f555a4", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-ge-z13-finite.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ge-z13-finite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ge-z13-finite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ge-z13-finite.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -ffinite-math-only -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_GE);\n+\n+/* We can use non-signaling vector comparison instructions with\n+   -ffinite-math-only.  */\n+/* { dg-final { scan-assembler {\\n\\tvfchedb\\t} } } */"}, {"sha": "1e1737fd269e78d8c91b60d69acd799b08a5011c", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-ge-z13.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ge-z13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ge-z13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ge-z13.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_GE);\n+\n+/* z13 does not have signaling vector comparison instructions.  */\n+/* { dg-final { scan-assembler {\\n\\tkdb\\t} } } */"}, {"sha": "49172f55ac989c4e30b83a2b2eee7541c6acae88", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-ge.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ge.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_GE);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfkhedb\\t} } } */"}, {"sha": "cf54adabed7253b3af7e71e663ca9bc605c05b35", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-gt-z13-finite.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-gt-z13-finite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-gt-z13-finite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-gt-z13-finite.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -ffinite-math-only -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_GT);\n+\n+/* We can use non-signaling vector comparison instructions with\n+   -ffinite-math-only.  */\n+/* { dg-final { scan-assembler {\\n\\tvfchdb\\t} } } */"}, {"sha": "8a9e03af1a485afe0b8c5e4b154e88a693cf5c5e", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-gt-z13.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-gt-z13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-gt-z13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-gt-z13.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_GT);\n+\n+/* z13 does not have signaling vector comparison instructions.  */\n+/* { dg-final { scan-assembler {\\n\\tkdb\\t} } } */"}, {"sha": "af62e1fd0054219565fc0e1e7d437a30f71e9350", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-gt.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-gt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-gt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-gt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_GT);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfkhdb\\t} } } */"}, {"sha": "100366e8f1abf25cccbef6a794cffa2fedb5829e", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-le-z13-finite.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-le-z13-finite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-le-z13-finite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-le-z13-finite.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -ffinite-math-only -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_LE);\n+\n+/* We can use non-signaling vector comparison instructions with\n+   -ffinite-math-only.  */\n+/* { dg-final { scan-assembler {\\n\\tvfchedb\\t} } } */"}, {"sha": "c0714efc1d917cca5ed8119897514b1ae48bc364", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-le-z13.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-le-z13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-le-z13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-le-z13.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_LE);\n+\n+/* z13 does not have signaling vector comparison instructions.  */\n+/* { dg-final { scan-assembler {\\n\\tkdb\\t} } } */"}, {"sha": "33266d416817fec6c0c75d09b18dc8c53dd8448f", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-le.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-le.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-le.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-le.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_LE);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfkhedb\\t} } } */"}, {"sha": "f587364af09983be7030c0857e7176b8b9679c60", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-lt-z13-finite.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-lt-z13-finite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-lt-z13-finite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-lt-z13-finite.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -ffinite-math-only -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_LT);\n+\n+/* We can use non-signaling vector comparison instructions with\n+   -ffinite-math-only.  */\n+/* { dg-final { scan-assembler {\\n\\tvfchdb\\t} } } */"}, {"sha": "18e81be845bdaa793496feda2303813e23339064", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-lt-z13.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-lt-z13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-lt-z13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-lt-z13.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_LT);\n+\n+/* z13 does not have signaling vector comparison instructions.  */\n+/* { dg-final { scan-assembler {\\n\\tkdb\\t} } } */"}, {"sha": "1ceea1bdbc600a27347650176492168f509a742b", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-lt.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-lt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-lt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-lt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_LT);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfkhdb\\t} } } */"}, {"sha": "8ee3cce5e9565428e0324f5cc6b477ec4e9ca219", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-ltgt-z13-finite.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt-z13-finite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt-z13-finite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt-z13-finite.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -ffinite-math-only -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_LTGT);\n+\n+/* ltgt is the same as eq with -ffinite-math-only.  */\n+/* { dg-final { scan-assembler {\\n\\tvfcedb\\t} } } */"}, {"sha": "d270887c3df1c6b0c7d599e82522fb7e60690f5d", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-ltgt-z13.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt-z13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt-z13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt-z13.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_LTGT);\n+\n+/* z13 does not have signaling vector comparison instructions.  */\n+/* { dg-final { scan-assembler {\\n\\tkdb\\t} } } */"}, {"sha": "9dfae8f2f7e7a8c193d249e50fd63f256519197b", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-ltgt.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_DOUBLE (SIGNALING_LTGT);\n+\n+/* { dg-final { scan-assembler-times {\\n\\tvfkhdb\\t} 2 } } */\n+/* { dg-final { scan-assembler {\\n\\tvo\\t} } } */"}, {"sha": "8a23566e8b9d8177afa08ad34487eefa0ec72364", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-smax-z13.F90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smax-z13.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smax-z13.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smax-z13.F90?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! { dg-options \"-ffree-line-length-256 -O3 -march=z13 -mzvector -mzarch\" }\n+\n+#include \"autovec-fortran.h\"\n+\n+AUTOVEC_FORTRAN (max)\n+\n+! Fortran's max does not specify whether or not an exception should be raised in\n+! face of qNaNs, and neither does gcc's smax.  Vectorize max using quiet\n+! comparison, because that's the only one we have on z13.\n+! { dg-final { scan-assembler {\\n\\tvfchdb\\t} } }"}, {"sha": "c877053136fd08b7be893602292c6bdbbdb12671", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-smax.F90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smax.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smax.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smax.F90?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! { dg-options \"-ffree-line-length-256 -O3 -march=z14 -mzvector -mzarch\" }\n+\n+#include \"autovec-fortran.h\"\n+\n+AUTOVEC_FORTRAN (max)\n+\n+! { dg-final { scan-assembler {\\n\\tvfmaxdb\\t} } }"}, {"sha": "37711f96176c243e07cf2165cd5e75545e471682", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-smin-z13.F90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smin-z13.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smin-z13.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smin-z13.F90?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! { dg-options \"-ffree-line-length-256 -O3 -march=z13 -mzvector -mzarch\" }\n+\n+#include \"autovec-fortran.h\"\n+\n+AUTOVEC_FORTRAN (min)\n+\n+! Fortran's min does not specify whether or not an exception should be raised in\n+! face of qNaNs, and neither does gcc's smin.  Vectorize min using quiet\n+! comparison, because that's the only one we have on z13.\n+! { dg-final { scan-assembler {\\n\\tvfchdb\\t} } }"}, {"sha": "25d6213fa79055229ee1949a3288a182c674268d", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-smin.F90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smin.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smin.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-smin.F90?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! { dg-options \"-ffree-line-length-256 -O3 -march=z14 -mzvector -mzarch\" }\n+\n+#include \"autovec-fortran.h\"\n+\n+AUTOVEC_FORTRAN (min)\n+\n+! { dg-final { scan-assembler {\\n\\tvfmindb\\t} } }"}, {"sha": "216063f0086b9608d3c006e8202813f3b50bbbae", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-quiet-eq.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-eq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-eq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-eq.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (QUIET_EQ);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfcesb\\t} } } */"}, {"sha": "eddf8d666582f205aa64a8021b75205ed40d50db", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-quiet-ge.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-ge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-ge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-ge.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (QUIET_GE);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchesb\\t} } } */"}, {"sha": "69fbb25d6b2bb177015f8259d4feed2e7cda8cca", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-quiet-gt.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-gt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-gt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-gt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (QUIET_GT);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchsb\\t} } } */"}, {"sha": "49374e478f4b7d63ebb7c4f601461d095e2bf150", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-quiet-le.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-le.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-le.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-le.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (QUIET_LE);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchesb\\t} } } */"}, {"sha": "403534cb799aac3261dba5b0a9fc86fc7801c177", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-quiet-lt.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-lt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-lt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-lt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (QUIET_LT);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchsb\\t} } } */"}, {"sha": "ae799fbfa98b24918a4293e465668f98a5d54712", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-quiet-ordered.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-ordered.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-ordered.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-ordered.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (QUIET_UNORDERED);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchesb\\t} } } */\n+/* { dg-final { scan-assembler {\\n\\tvfchsb\\t} } } */\n+/* { dg-final { scan-assembler {\\n\\tvo\\t} } } */"}, {"sha": "1df53a99bc8cbc5ea3a71b47a59f9ca89ce437a1", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-quiet-uneq.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-uneq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-uneq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-uneq.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (QUIET_UNEQ);\n+\n+/* { dg-final { scan-assembler-times {\\n\\tvfchsb\\t} 2 } } */\n+/* { dg-final { scan-assembler {\\n\\tvo\\t} } } */\n+/* { dg-final { scan-assembler {\\n\\tvx\\t} } } */"}, {"sha": "3eb44da7484afd6c74114bf6ca777d40c84f70bb", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-quiet-unordered.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-unordered.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-unordered.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-unordered.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (QUIET_UNORDERED);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfchesb\\t} } } */\n+/* { dg-final { scan-assembler {\\n\\tvfchsb\\t} } } */\n+/* combine prefers to reorder vsel args instead of using vno.  */\n+/* { dg-final { scan-assembler {\\n\\tvo\\t} } } */"}, {"sha": "7dd91a5e6f3b047e6797b58ecab8d197e3803749", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-signaling-eq.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-eq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-eq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-eq.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (SIGNALING_EQ);\n+\n+/* The vectorizer produces <= and ==, which rtl passes cannot turn into vfkesb\n+   yet.  */\n+/* { dg-final { scan-assembler {\\n\\tvfcesb\\t} } } */\n+/* { dg-final { scan-assembler {\\n\\tvfkhesb\\t} } } */"}, {"sha": "884203b42c99dd9f3b157ec4b2739f897f17eb89", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-signaling-ge.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-ge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-ge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-ge.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (SIGNALING_GE);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfkhesb\\t} } } */"}, {"sha": "8e4401e3b237d57b08103e07578a4532943ebcfc", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-signaling-gt.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-gt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-gt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-gt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (SIGNALING_GT);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfkhsb\\t} } } */"}, {"sha": "14ff8b49b4d40d3e21a3f2c96a8c11a368dbd163", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-signaling-le.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-le.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-le.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-le.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (SIGNALING_LE);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfkhesb\\t} } } */"}, {"sha": "420c7ca5930c608c6fdd4067fcb454c740ede964", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-signaling-lt.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-lt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-lt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-lt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (SIGNALING_LT);\n+\n+/* { dg-final { scan-assembler {\\n\\tvfkhsb\\t} } } */"}, {"sha": "c34cf09160873a6fce01bb181fc842b7465a7209", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-signaling-ltgt.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-ltgt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-ltgt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-ltgt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_FLOAT (SIGNALING_LTGT);\n+\n+/* { dg-final { scan-assembler-times {\\n\\tvfkhsb\\t} 2 } } */\n+/* { dg-final { scan-assembler {\\n\\tvo\\t} } } */"}, {"sha": "8e44cb2dd31a6ce225a55aa6d9f678f3938c7b13", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-fortran.h", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-fortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-fortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-fortran.h?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,7 @@\n+#define AUTOVEC_FORTRAN(OP) subroutine f (r, x, y); \\\n+  real(kind=kind (1.0d0)) :: r(1000000), x(1000000), y(1000000); \\\n+  integer :: i; \\\n+  do i = 1, 1000000; \\\n+    r(i) = OP (x(i), y(i)); \\\n+  end do; \\\n+end"}, {"sha": "e4d01b5ccf9528e81d40e7211ac44b3b3cb80059", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-long-double-signaling-ge.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-ge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-ge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-ge.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_LONG_DOUBLE (SIGNALING_GE);\n+\n+/* { dg-final { scan-assembler {\\n\\twfkhexb\\t} } } */"}, {"sha": "b9417ac51122c7458ab768678c5b9618f1eeb98f", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-long-double-signaling-gt.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-gt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-gt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-gt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_LONG_DOUBLE (SIGNALING_GT);\n+\n+/* { dg-final { scan-assembler {\\n\\twfkhxb\\t} } } */"}, {"sha": "1a76b1d8ff1380dc2e905084a2c61ca292f44a3e", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-long-double-signaling-le.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-le.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-le.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-le.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_LONG_DOUBLE (SIGNALING_LE);\n+\n+/* { dg-final { scan-assembler {\\n\\twfkhexb\\t} } } */"}, {"sha": "0a1c5cd56d6f673b9c2cf9049e1086a98813fb31", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-long-double-signaling-lt.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-lt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-lt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-long-double-signaling-lt.c?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+\n+#include \"autovec.h\"\n+\n+AUTOVEC_LONG_DOUBLE (SIGNALING_LT);\n+\n+/* { dg-final { scan-assembler {\\n\\twfkhxb\\t} } } */"}, {"sha": "d7977a13335ea38565eab0fda32d9b7b59ce32ba", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec.h", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dcb70dab490c5dbabaf1b982a1650da2a341cf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec.h?ref=76dcb70dab490c5dbabaf1b982a1650da2a341cf", "patch": "@@ -0,0 +1,43 @@\n+#ifndef AUTOVEC_H\n+#define AUTOVEC_H 1\n+\n+#define QUIET_EQ(x, y) ((x) == (y))\n+#define QUIET_GE __builtin_isgreaterequal\n+#define QUIET_GT __builtin_isgreater\n+#define QUIET_LE __builtin_islessequal\n+#define QUIET_LT __builtin_isless\n+#define QUIET_ORDERED(x, y) (!__builtin_isunordered ((x), (y)))\n+#define QUIET_UNEQ(x, y) (__builtin_isless ((x), (y)) \\\n+                          || __builtin_isgreater ((x), (y)))\n+#define QUIET_UNORDERED __builtin_isunordered\n+#define SIGNALING_EQ(x, y) (((x) <= (y)) && ((x) >= (y)))\n+#define SIGNALING_GE(x, y) ((x) >= (y))\n+#define SIGNALING_GT(x, y) ((x) > (y))\n+#define SIGNALING_LE(x, y) ((x) <= (y))\n+#define SIGNALING_LT(x, y) ((x) < (y))\n+#define SIGNALING_LTGT(x, y) (((x) < (y)) || ((x) > (y)))\n+\n+#define AUTOVEC(RESULT_TYPE, OP_TYPE, OP) void \\\n+f (RESULT_TYPE *r, const OP_TYPE *x, const OP_TYPE *y) \\\n+{ \\\n+  int i; \\\n+\\\n+  for (i = 0; i < 1000000; i++) \\\n+    { \\\n+      OP_TYPE xi = x[i], yi = y[i]; \\\n+\\\n+      r[i] = OP (xi, yi); \\\n+    } \\\n+}\n+\n+#define AUTOVEC_DOUBLE(OP) AUTOVEC (long long, double, OP)\n+\n+#define AUTOVEC_FLOAT(OP) AUTOVEC (int, float, OP)\n+\n+#ifdef __SIZEOF_INT128__\n+typedef __int128 v1ti __attribute__ ((vector_size (16)));\n+typedef long double v1tf __attribute__ ((vector_size (16)));\n+#define AUTOVEC_LONG_DOUBLE(OP) AUTOVEC (v1ti, v1tf, OP)\n+#endif\n+\n+#endif"}]}