{"sha": "0921442473dbe2f14488153e94acb3d0b4524b92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkyMTQ0MjQ3M2RiZTJmMTQ0ODgxNTNlOTRhY2IzZDBiNDUyNGI5Mg==", "commit": {"author": {"name": "Stephane Carrez", "email": "stcarrez@nerim.fr", "date": "2003-04-12T20:05:55Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2003-04-12T20:05:55Z"}, "message": "m68hc11.md (SOFT_Z_REGNUM): New constant.\n\n\t* config/m68hc11/m68hc11.md (SOFT_Z_REGNUM): New constant.\n\t(\"tstqi_z_used\" split): Use it.\n\t(\"cmphi_z_used\"): Likewise.\n\t(\"bitcmpqi_z_used\"): Likewise; also use SP_REGNUM constant.\n\t(\"cmpqi_z_used\"): Likewise.\n\nFrom-SVN: r65522", "tree": {"sha": "50767f376fac8a47fe30ee707a58a25816709a35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50767f376fac8a47fe30ee707a58a25816709a35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0921442473dbe2f14488153e94acb3d0b4524b92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0921442473dbe2f14488153e94acb3d0b4524b92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0921442473dbe2f14488153e94acb3d0b4524b92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0921442473dbe2f14488153e94acb3d0b4524b92/comments", "author": null, "committer": null, "parents": [{"sha": "355b81d5b32ba2e74b0da466df75d6a99f25bb16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/355b81d5b32ba2e74b0da466df75d6a99f25bb16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/355b81d5b32ba2e74b0da466df75d6a99f25bb16"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "5108099fd98bbae269c5e6afaad9c484fb41cd97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0921442473dbe2f14488153e94acb3d0b4524b92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0921442473dbe2f14488153e94acb3d0b4524b92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0921442473dbe2f14488153e94acb3d0b4524b92", "patch": "@@ -1,3 +1,11 @@\n+2003-04-12  Stephane Carrez  <stcarrez@nerim.fr>\n+\n+\t* config/m68hc11/m68hc11.md (SOFT_Z_REGNUM): New constant.\n+\t(\"tstqi_z_used\" split): Use it.\n+\t(\"cmphi_z_used\"): Likewise.\n+\t(\"bitcmpqi_z_used\"): Likewise; also use SP_REGNUM constant.\n+\t(\"cmpqi_z_used\"): Likewise.\n+\n 2003-04-12  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/7910"}, {"sha": "f578502004f7a82975e88c12a0cb88e9759d8655", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0921442473dbe2f14488153e94acb3d0b4524b92/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0921442473dbe2f14488153e94acb3d0b4524b92/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=0921442473dbe2f14488153e94acb3d0b4524b92", "patch": "@@ -143,6 +143,7 @@\n    (A_REGNUM        5)\t\t; A (high part of D)\n    (B_REGNUM        6)\t\t; B (low part of D)\n    (CC_REGNUM       7)\t\t; Condition code register\n+   (SOFT_Z_REGNUM  11)          ; Z soft register\n ])\n \n ;;--------------------------------------------------------------------\n@@ -258,7 +259,7 @@\n   [(set (cc0)\n \t(match_operand:QI 0 \"tst_operand\" \"\"))\n    (use (match_operand:HI 1 \"hard_reg_operand\" \"\"))\n-   (use (reg:HI 11))]\n+   (use (reg:HI SOFT_Z_REGNUM))]\n   \"z_replacement_completed == 2\"\n   [(set (mem:HI (pre_dec:HI (reg:HI SP_REGNUM))) (match_dup 1))\n    (set (match_dup 1) (match_dup 2))\n@@ -365,7 +366,7 @@\n \t(compare (match_operand:HI 0 \"tst_operand\" \"dxy,m\")\n \t\t (match_operand:HI 1 \"cmp_operand\" \"m,dxy\")))\n    (use (match_operand:HI 2 \"hard_reg_operand\" \"dxy,dxy\"))\n-   (use (reg:HI 11))]\n+   (use (reg:HI SOFT_Z_REGNUM))]\n   \"\"\n   \"#\")\n   \n@@ -374,7 +375,7 @@\n \t(compare (match_operand:HI 0 \"tst_operand\" \"\")\n \t\t (match_operand:HI 1 \"cmp_operand\" \"\")))\n    (use (match_operand:HI 2 \"hard_reg_operand\" \"\"))\n-   (use (reg:HI 11))]\n+   (use (reg:HI SOFT_Z_REGNUM))]\n   \"z_replacement_completed == 2\"\n   [(set (mem:HI (pre_dec:HI (reg:HI SP_REGNUM))) (match_dup 2))\n    (set (match_dup 2) (match_dup 3))\n@@ -456,7 +457,7 @@\n \t(and:QI (match_operand:QI 0 \"tst_operand\" \"d,m\")\n \t\t(match_operand:QI 1 \"cmp_operand\" \"m,d\")))\n    (use (match_operand:HI 2 \"hard_reg_operand\" \"xy,xy\"))\n-   (use (reg:HI 11))]\n+   (use (reg:HI SOFT_Z_REGNUM))]\n   \"\"\n   \"#\")\n   \n@@ -465,12 +466,12 @@\n \t(and:QI (match_operand:QI 0 \"tst_operand\" \"\")\n \t\t(match_operand:QI 1 \"cmp_operand\" \"\")))\n    (use (match_operand:HI 2 \"hard_reg_operand\" \"\"))\n-   (use (reg:HI 11))]\n+   (use (reg:HI SOFT_Z_REGNUM))]\n   \"z_replacement_completed == 2\"\n-  [(set (mem:HI (pre_dec:HI (reg:HI 3))) (match_dup 2))\n+  [(set (mem:HI (pre_dec:HI (reg:HI SP_REGNUM))) (match_dup 2))\n    (set (match_dup 2) (match_dup 3))\n    (set (cc0) (and:QI (match_dup 0) (match_dup 1)))\n-   (set (match_dup 2) (mem:HI (post_inc:HI (reg:HI 3))))]\n+   (set (match_dup 2) (mem:HI (post_inc:HI (reg:HI SP_REGNUM))))]\n   \"operands[3] = gen_rtx (REG, HImode, SOFT_Z_REGNUM);\")\n \n (define_insn \"bitcmphi\"\n@@ -546,7 +547,7 @@\n \t(compare (match_operand:QI 0 \"tst_operand\" \"dxy,m\")\n \t\t (match_operand:QI 1 \"cmp_operand\" \"m,dxy\")))\n    (use (match_operand:HI 2 \"hard_reg_operand\" \"dxy,dxy\"))\n-   (use (reg:HI 11))]\n+   (use (reg:HI SOFT_Z_REGNUM))]\n   \"\"\n   \"#\")\n   \n@@ -555,7 +556,7 @@\n \t(compare (match_operand:QI 0 \"tst_operand\" \"\")\n \t\t (match_operand:QI 1 \"cmp_operand\" \"\")))\n    (use (match_operand:HI 2 \"hard_reg_operand\" \"\"))\n-   (use (reg:HI 11))]\n+   (use (reg:HI SOFT_Z_REGNUM))]\n   \"z_replacement_completed == 2\"\n   [(set (mem:HI (pre_dec:HI (reg:HI SP_REGNUM))) (match_dup 2))\n    (set (match_dup 2) (match_dup 3))\n@@ -620,7 +621,7 @@\n ;; because there is no memory->memory moves.  It must be defined with\n ;; earlyclobber (&) so that it does not appear in the source or destination \n ;; address.  Providing patterns for movdi/movdf allows GCC to generate\n-;; better code.  [Until now, the scratch register is limited to D becuse\n+;; better code.  [Until now, the scratch register is limited to D because\n ;; otherwise we can run out of registers in the A_REGS class for reload].\n ;;\n ;; For 68HC12, the scratch register is not necessary.  To use the same"}]}