{"sha": "b08dec2fb20721e271504690dad8f32c7471fd01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA4ZGVjMmZiMjA3MjFlMjcxNTA0NjkwZGFkOGYzMmM3NDcxZmQwMQ==", "commit": {"author": {"name": "Dominique d'Humieres", "email": "dominiq@lps.ens.fr", "date": "2014-11-13T22:06:15Z"}, "committer": {"name": "Ilya Verbin", "email": "iverbin@gcc.gnu.org", "date": "2014-11-13T22:06:15Z"}, "message": "re PR bootstrap/63853 (The use of strchrnul breaks bootstrap on x86_64-apple-darwin14.)\n\n2014-11-13  Dominique Dhumieres  <dominiq@lps.ens.fr>\n\n\tPR bootstrap/63853\ngcc/\n\t* gcc.c (handle_foffload_option): Replace strchrnul with strchr.\n\t* lto-wrapper.c (parse_env_var, append_offload_options): Likewise.\n\nFrom-SVN: r217524", "tree": {"sha": "500d5852d5d9e50af0387d7edfae44eaec850108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/500d5852d5d9e50af0387d7edfae44eaec850108"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b08dec2fb20721e271504690dad8f32c7471fd01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b08dec2fb20721e271504690dad8f32c7471fd01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b08dec2fb20721e271504690dad8f32c7471fd01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b08dec2fb20721e271504690dad8f32c7471fd01/comments", "author": {"login": "DominiquedHumieres", "id": 18394944, "node_id": "MDQ6VXNlcjE4Mzk0OTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/18394944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DominiquedHumieres", "html_url": "https://github.com/DominiquedHumieres", "followers_url": "https://api.github.com/users/DominiquedHumieres/followers", "following_url": "https://api.github.com/users/DominiquedHumieres/following{/other_user}", "gists_url": "https://api.github.com/users/DominiquedHumieres/gists{/gist_id}", "starred_url": "https://api.github.com/users/DominiquedHumieres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DominiquedHumieres/subscriptions", "organizations_url": "https://api.github.com/users/DominiquedHumieres/orgs", "repos_url": "https://api.github.com/users/DominiquedHumieres/repos", "events_url": "https://api.github.com/users/DominiquedHumieres/events{/privacy}", "received_events_url": "https://api.github.com/users/DominiquedHumieres/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2933facbe06d589be4c3ab209216aaba611c4522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2933facbe06d589be4c3ab209216aaba611c4522", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2933facbe06d589be4c3ab209216aaba611c4522"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "25da2a0815d273bc5d296c681bf44d5cf09cf74f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08dec2fb20721e271504690dad8f32c7471fd01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08dec2fb20721e271504690dad8f32c7471fd01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b08dec2fb20721e271504690dad8f32c7471fd01", "patch": "@@ -1,3 +1,9 @@\n+2014-11-13  Dominique Dhumieres  <dominiq@lps.ens.fr>\n+\n+\tPR bootstrap/63853\n+\t* gcc.c (handle_foffload_option): Replace strchrnul with strchr.\n+\t* lto-wrapper.c (parse_env_var, append_offload_options): Likewise.\n+\n 2014-11-13  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* fold-const.c (const_binop): Remove code handling VEC_RSHIFT_EXPR."}, {"sha": "653ca8db9f61e1818f5ec6db77fb0e9c5119c218", "filename": "gcc/gcc.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08dec2fb20721e271504690dad8f32c7471fd01/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08dec2fb20721e271504690dad8f32c7471fd01/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=b08dec2fb20721e271504690dad8f32c7471fd01", "patch": "@@ -3375,12 +3375,16 @@ handle_foffload_option (const char *arg)\n   if (arg[0] == '-')\n     return;\n \n-  end = strchrnul (arg, '=');\n+  end = strchr (arg, '=');\n+  if (end == NULL)\n+    end = strchr (arg, '\\0');\n   cur = arg;\n \n   while (cur < end)\n     {\n-      next = strchrnul (cur, ',');\n+      next = strchr (cur, ',');\n+      if (next == NULL)\n+\tnext = strchr (cur, '\\0');\n       next = (next > end) ? end : next;\n \n       target = XNEWVEC (char, next - cur + 1);\n@@ -3400,7 +3404,9 @@ handle_foffload_option (const char *arg)\n       c = OFFLOAD_TARGETS;\n       while (c)\n \t{\n-\t  n = strchrnul (c, ',');\n+\t  n = strchr (c, ',');\n+\t  if (n == NULL)\n+\t    n = strchr (c, '\\0');\n \n \t  if (strlen (target) == (size_t) (n - c)\n \t      && strncmp (target, c, n - c) == 0)\n@@ -3421,7 +3427,9 @@ handle_foffload_option (const char *arg)\n \t  c = offload_targets;\n \t  do\n \t    {\n-\t      n = strchrnul (c, ':');\n+\t      n = strchr (c, ':');\n+\t      if (n == NULL)\n+\t\tn = strchr (c, '\\0');\n \n \t      if (strlen (target) == (size_t) (n - c)\n \t\t  && strncmp (c, target, n - c) == 0)"}, {"sha": "951a2ddc78781180e82ecc64a229ee2b637bf408", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08dec2fb20721e271504690dad8f32c7471fd01/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08dec2fb20721e271504690dad8f32c7471fd01/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=b08dec2fb20721e271504690dad8f32c7471fd01", "patch": "@@ -424,7 +424,9 @@ parse_env_var (const char *str, char ***pvalues, const char *append)\n \n   values = (char**) xmalloc (num * sizeof (char*));\n   curval = str;\n-  nextval = strchrnul (curval, ':');\n+  nextval = strchr (curval, ':');\n+  if (nextval == NULL)\n+    nextval = strchr (curval, '\\0');\n \n   int append_len = append ? strlen (append) : 0;\n   for (i = 0; i < num; i++)\n@@ -436,7 +438,9 @@ parse_env_var (const char *str, char ***pvalues, const char *append)\n       if (append)\n \tstrcat (values[i], append);\n       curval = nextval + 1;\n-      nextval = strchrnul (curval, ':');\n+      nextval = strchr (curval, ':');\n+      if (nextval == NULL)\n+\tnextval = strchr (curval, '\\0');\n     }\n   *pvalues = values;\n   return num;\n@@ -581,7 +585,9 @@ append_offload_options (obstack *argv_obstack, const char *target,\n \n \t  while (cur < opts)\n \t    {\n-\t      next = strchrnul (cur, ',');\n+\t      next = strchr (cur, ',');\n+\t      if (next == NULL)\n+\t\tnext = strchr (cur, '\\0');\n \t      next = (next > opts) ? opts : next;\n \n \t      if (strlen (target) == (size_t) (next - cur)"}]}