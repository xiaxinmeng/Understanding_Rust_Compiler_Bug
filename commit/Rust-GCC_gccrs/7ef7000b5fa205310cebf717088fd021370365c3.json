{"sha": "7ef7000b5fa205310cebf717088fd021370365c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VmNzAwMGI1ZmEyMDUzMTBjZWJmNzE3MDg4ZmQwMjEzNzAzNjVjMw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2004-10-26T23:17:57Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2004-10-26T23:17:57Z"}, "message": "expr.c (emit_group_store): Do not treat floats as BLKmode.\n\n\t* expr.c (emit_group_store): Do not treat floats as BLKmode.\n\t(emit_group_load): Same.\n\nFrom-SVN: r89612", "tree": {"sha": "969be6cdf8e58e2b1c6464d76816b2d8aa1ad641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/969be6cdf8e58e2b1c6464d76816b2d8aa1ad641"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ef7000b5fa205310cebf717088fd021370365c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef7000b5fa205310cebf717088fd021370365c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ef7000b5fa205310cebf717088fd021370365c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef7000b5fa205310cebf717088fd021370365c3/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6cb7068eb8b15fc807aeb5051ede637e92d033b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cb7068eb8b15fc807aeb5051ede637e92d033b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6cb7068eb8b15fc807aeb5051ede637e92d033b"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "ae5616ccc7c2c7f9909734f2d69f6650465e941b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef7000b5fa205310cebf717088fd021370365c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef7000b5fa205310cebf717088fd021370365c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ef7000b5fa205310cebf717088fd021370365c3", "patch": "@@ -1,3 +1,8 @@\n+2004-10-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* expr.c (emit_group_store): Do not treat floats as BLKmode.\n+\t(emit_group_load): Same.\n+\n 2004-10-26  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* c-parse.in (datadef): Use pedwarn rather than error and warning"}, {"sha": "f5abce705a0cd9ef759d534ff748cf5ba37839f3", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef7000b5fa205310cebf717088fd021370365c3/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef7000b5fa205310cebf717088fd021370365c3/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7ef7000b5fa205310cebf717088fd021370365c3", "patch": "@@ -1567,10 +1567,11 @@ emit_group_load (rtx dst, rtx orig_src, tree type ATTRIBUTE_UNUSED, int ssize)\n {\n   rtx *tmps, src;\n   int start, i;\n+  enum machine_mode m = GET_MODE (orig_src);\n \n   gcc_assert (GET_CODE (dst) == PARALLEL);\n \n-  if (!SCALAR_INT_MODE_P (GET_MODE (orig_src)))\n+  if (!SCALAR_INT_MODE_P (m) && m != BLKmode)\n     {\n       enum machine_mode imode = int_mode_for_mode (GET_MODE (orig_src));\n       if (imode == BLKmode)\n@@ -1740,10 +1741,11 @@ emit_group_store (rtx orig_dst, rtx src, tree type ATTRIBUTE_UNUSED, int ssize)\n {\n   rtx *tmps, dst;\n   int start, i;\n+  enum machine_mode m = GET_MODE (orig_dst);\n \n   gcc_assert (GET_CODE (src) == PARALLEL);\n \n-  if (!SCALAR_INT_MODE_P (GET_MODE (orig_dst)))\n+  if (!SCALAR_INT_MODE_P (m) && m != BLKmode)\n     {\n       enum machine_mode imode = int_mode_for_mode (GET_MODE (orig_dst));\n       if (imode == BLKmode)"}]}