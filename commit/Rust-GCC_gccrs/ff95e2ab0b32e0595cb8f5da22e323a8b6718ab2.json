{"sha": "ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY5NWUyYWIwYjMyZTA1OTVjYjhmNWRhMjJlMzIzYThiNjcxOGFiMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-11-02T23:39:36Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-11-02T23:39:36Z"}, "message": "syscall, mksysinfo: Prepare syscall package for 64-bit int.\n\nFrom-SVN: r193112", "tree": {"sha": "e2612aa081aa5c99a65522d715f63779dbfe4c2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2612aa081aa5c99a65522d715f63779dbfe4c2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/comments", "author": null, "committer": null, "parents": [{"sha": "5352ea68e36a461476228c109a31a4fb5bad7ce7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5352ea68e36a461476228c109a31a4fb5bad7ce7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5352ea68e36a461476228c109a31a4fb5bad7ce7"}], "stats": {"total": 290, "additions": 153, "deletions": 137}, "files": [{"sha": "d003441ae9e4869ac3c4b93fcd02f448c73e90eb", "filename": "libgo/go/syscall/errstr.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Ferrstr.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Ferrstr.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Ferrstr.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -7,7 +7,7 @@\n package syscall\n \n //sysnb\tstrerror_r(errnum int, buf []byte) (err error)\n-//strerror_r(errnum int, buf *byte, buflen Size_t) int\n+//strerror_r(errnum _C_int, buf *byte, buflen Size_t) _C_int\n \n func Errstr(errnum int) string {\n \tfor len := 128; ; len *= 2 {"}, {"sha": "3dbd20b07a4dbbb7c99c83c9e35847992f8271d8", "filename": "libgo/go/syscall/errstr_linux.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Ferrstr_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Ferrstr_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Ferrstr_linux.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -9,7 +9,7 @@ package syscall\n import \"unsafe\"\n \n //sysnb\tstrerror_r(errnum int, b []byte) (errstr *byte)\n-//strerror_r(errnum int, b *byte, len Size_t) *byte\n+//strerror_r(errnum _C_int, b *byte, len Size_t) *byte\n \n func Errstr(errnum int) string {\n \ta := make([]byte, 128)"}, {"sha": "963c78460261b59a6077a64896c7ab227bc785eb", "filename": "libgo/go/syscall/errstr_nor.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Ferrstr_nor.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Ferrstr_nor.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Ferrstr_nor.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -12,7 +12,7 @@ import (\n )\n \n //sysnb\tstrerror(errnum int) (buf *byte)\n-//strerror(errnum int) *byte\n+//strerror(errnum _C_int) *byte\n \n var errstr_lock sync.Mutex\n "}, {"sha": "d1e181f4280f80bc8e262efcb676c0958d9f7443", "filename": "libgo/go/syscall/exec_linux.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Fexec_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Fexec_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fexec_linux.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -11,7 +11,7 @@ import (\n )\n \n //sysnb\traw_prctl(option int, arg2 int, arg3 int, arg4 int, arg5 int) (ret int, err Errno)\n-//prctl(option int, arg2 _C_long, arg3 _C_long, arg4 _C_long, arg5 _C_long) int\n+//prctl(option _C_int, arg2 _C_long, arg3 _C_long, arg4 _C_long, arg5 _C_long) _C_int\n \n type SysProcAttr struct {\n \tChroot     string      // Chroot."}, {"sha": "e51878e98084a71cd9cbfb414faff1fa4269eb89", "filename": "libgo/go/syscall/exec_unix.go", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Fexec_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Fexec_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fexec_unix.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -21,34 +21,34 @@ import (\n //setsid() Pid_t\n \n //sysnb raw_setpgid(pid int, pgid int) (err Errno)\n-//setpgid(pid Pid_t, pgid Pid_t) int\n+//setpgid(pid Pid_t, pgid Pid_t) _C_int\n \n //sysnb\traw_chroot(path *byte) (err Errno)\n-//chroot(path *byte) int\n+//chroot(path *byte) _C_int\n \n //sysnb\traw_chdir(path *byte) (err Errno)\n-//chdir(path *byte) int\n+//chdir(path *byte) _C_int\n \n //sysnb\traw_fcntl(fd int, cmd int, arg int) (val int, err Errno)\n-//fcntl(fd int, cmd int, arg int) int\n+//fcntl(fd _C_int, cmd _C_int, arg _C_int) _C_int\n \n //sysnb\traw_close(fd int) (err Errno)\n-//close(fd int) int\n+//close(fd _C_int) _C_int\n \n //sysnb\traw_ioctl(fd int, cmd int, val int) (rval int, err Errno)\n-//ioctl(fd int, cmd int, val int) int\n+//ioctl(fd _C_int, cmd _C_int, val _C_int) _C_int\n \n //sysnb\traw_execve(argv0 *byte, argv **byte, envv **byte) (err Errno)\n-//execve(argv0 *byte, argv **byte, envv **byte) int\n+//execve(argv0 *byte, argv **byte, envv **byte) _C_int\n \n //sysnb\traw_write(fd int, buf *byte, count int) (err Errno)\n-//write(fd int, buf *byte, count Size_t) Ssize_t\n+//write(fd _C_int, buf *byte, count Size_t) Ssize_t\n \n //sysnb\traw_exit(status int)\n-//_exit(status int)\n+//_exit(status _C_int)\n \n //sysnb raw_dup2(oldfd int, newfd int) (err Errno)\n-//dup2(oldfd int, newfd int) int\n+//dup2(oldfd _C_int, newfd _C_int) _C_int\n \n // Lock synchronizing creation of new file descriptors with fork.\n //"}, {"sha": "3ee806e0998863b4322b57cb0bd273f0087a3d0c", "filename": "libgo/go/syscall/libcall_posix.go", "status": "modified", "additions": 65, "deletions": 65, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_posix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_posix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_posix.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -17,21 +17,21 @@ import \"unsafe\"\n  * Wrapped\n  */\n \n-//sysnb\tpipe(p *[2]int) (err error)\n-//pipe(p *[2]int) int\n+//sysnb\tpipe(p *[2]_C_int) (err error)\n+//pipe(p *[2]_C_int) _C_int\n func Pipe(p []int) (err error) {\n \tif len(p) != 2 {\n \t\treturn EINVAL\n \t}\n-\tvar pp [2]int\n+\tvar pp [2]_C_int\n \terr = pipe(&pp)\n-\tp[0] = pp[0]\n-\tp[1] = pp[1]\n+\tp[0] = int(pp[0])\n+\tp[1] = int(pp[1])\n \treturn\n }\n \n //sys\tutimes(path string, times *[2]Timeval) (err error)\n-//utimes(path *byte, times *[2]Timeval) int\n+//utimes(path *byte, times *[2]Timeval) _C_int\n func Utimes(path string, tv []Timeval) (err error) {\n \tif len(tv) != 2 {\n \t\treturn EINVAL\n@@ -74,7 +74,7 @@ func Getcwd(buf []byte) (n int, err error) {\n }\n \n //sysnb\tgetgroups(size int, list *Gid_t) (nn int, err error)\n-//getgroups(size int, list *Gid_t) int\n+//getgroups(size int, list *Gid_t) _C_int\n \n func Getgroups() (gids []int, err error) {\n \tn, err := getgroups(0, nil)\n@@ -103,7 +103,7 @@ func Getgroups() (gids []int, err error) {\n }\n \n //sysnb\tsetgroups(n int, list *Gid_t) (err error)\n-//setgroups(n Size_t, list *Gid_t) int\n+//setgroups(n Size_t, list *Gid_t) _C_int\n \n func Setgroups(gids []int) (err error) {\n \tif len(gids) == 0 {\n@@ -133,10 +133,10 @@ func (w WaitStatus) StopSignal() Signal\n func (w WaitStatus) TrapCause() int\n \n //sys\tMkfifo(path string, mode uint32) (err error)\n-//mkfifo(path *byte, mode Mode_t) int\n+//mkfifo(path *byte, mode Mode_t) _C_int\n \n //sys\tSelect(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error)\n-//select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) int\n+//select(nfd _C_int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) _C_int\n \n const nfdbits = int(unsafe.Sizeof(fds_bits_type) * 8)\n \n@@ -167,52 +167,52 @@ func FDZero(set *FdSet) {\n }\n \n //sys\tAccess(path string, mode uint32) (err error)\n-//access(path *byte, mode int) int\n+//access(path *byte, mode _C_int) _C_int\n \n //sys\tChdir(path string) (err error)\n-//chdir(path *byte) int\n+//chdir(path *byte) _C_int\n \n //sys\tChmod(path string, mode uint32) (err error)\n-//chmod(path *byte, mode Mode_t) int\n+//chmod(path *byte, mode Mode_t) _C_int\n \n //sys\tChown(path string, uid int, gid int) (err error)\n-//chown(path *byte, uid Uid_t, gid Gid_t) int\n+//chown(path *byte, uid Uid_t, gid Gid_t) _C_int\n \n //sys\tChroot(path string) (err error)\n-//chroot(path *byte) int\n+//chroot(path *byte) _C_int\n \n //sys\tClose(fd int) (err error)\n-//close(fd int) int\n+//close(fd _C_int) _C_int\n \n //sys\tCreat(path string, mode uint32) (fd int, err error)\n-//creat(path *byte, mode Mode_t) int\n+//creat(path *byte, mode Mode_t) _C_int\n \n //sysnb\tDup(oldfd int) (fd int, err error)\n-//dup(oldfd int) int\n+//dup(oldfd _C_int) _C_int\n \n //sysnb\tDup2(oldfd int, newfd int) (err error)\n-//dup2(oldfd int, newfd int) int\n+//dup2(oldfd _C_int, newfd _C_int) _C_int\n \n //sys\tExit(code int)\n-//exit(code int)\n+//exit(code _C_int)\n \n //sys\tFchdir(fd int) (err error)\n-//fchdir(fd int) int\n+//fchdir(fd _C_int) _C_int\n \n //sys\tFchmod(fd int, mode uint32) (err error)\n-//fchmod(fd int, mode Mode_t) int\n+//fchmod(fd _C_int, mode Mode_t) _C_int\n \n //sys\tFchown(fd int, uid int, gid int) (err error)\n-//fchown(fd int, uid Uid_t, gid Gid_t) int\n+//fchown(fd _C_int, uid Uid_t, gid Gid_t) _C_int\n \n //sys\tfcntl(fd int, cmd int, arg int) (val int, err error)\n-//fcntl(fd int, cmd int, arg int) int\n+//fcntl(fd _C_int, cmd _C_int, arg _C_int) _C_int\n \n //sys\tFdatasync(fd int) (err error)\n-//fdatasync(fd int) int\n+//fdatasync(fd _C_int) _C_int\n \n //sys\tFsync(fd int) (err error)\n-//fsync(fd int) int\n+//fsync(fd _C_int) _C_int\n \n //sysnb Getegid() (egid int)\n //getegid() Gid_t\n@@ -224,7 +224,7 @@ func FDZero(set *FdSet) {\n //getgid() Gid_t\n \n //sysnb\tGetpagesize() (pagesize int)\n-//getpagesize() int\n+//getpagesize() _C_int\n \n //sysnb\tGetpgid(pid int) (pgid int, err error)\n //getpgid(pid Pid_t) Pid_t\n@@ -239,13 +239,13 @@ func FDZero(set *FdSet) {\n //getppid() Pid_t\n \n //sysnb\tGetrlimit(resource int, rlim *Rlimit) (err error)\n-//getrlimit(resource int, rlim *Rlimit) int\n+//getrlimit(resource _C_int, rlim *Rlimit) _C_int\n \n //sysnb\tGetrusage(who int, rusage *Rusage) (err error)\n-//getrusage(who int, rusage *Rusage) int\n+//getrusage(who _C_int, rusage *Rusage) _C_int\n \n //sysnb\tgettimeofday(tv *Timeval, tz *byte) (err error)\n-//gettimeofday(tv *Timeval, tz *byte) int\n+//gettimeofday(tv *Timeval, tz *byte) _C_int\n func Gettimeofday(tv *Timeval) (err error) {\n \treturn gettimeofday(tv, nil)\n }\n@@ -254,80 +254,80 @@ func Gettimeofday(tv *Timeval) (err error) {\n //getuid() Uid_t\n \n //sysnb\tKill(pid int, sig Signal) (err error)\n-//kill(pid Pid_t, sig int) int\n+//kill(pid Pid_t, sig _C_int) _C_int\n \n //sys\tLchown(path string, uid int, gid int) (err error)\n-//lchown(path *byte, uid Uid_t, gid Gid_t) int\n+//lchown(path *byte, uid Uid_t, gid Gid_t) _C_int\n \n //sys\tLink(oldpath string, newpath string) (err error)\n-//link(oldpath *byte, newpath *byte) int\n+//link(oldpath *byte, newpath *byte) _C_int\n \n //sys\tMkdir(path string, mode uint32) (err error)\n-//mkdir(path *byte, mode Mode_t) int\n+//mkdir(path *byte, mode Mode_t) _C_int\n \n //sys\tMknod(path string, mode uint32, dev int) (err error)\n-//mknod(path *byte, mode Mode_t, dev _dev_t) int\n+//mknod(path *byte, mode Mode_t, dev _dev_t) _C_int\n \n //sys\tMount(source string, target string, fstype string, flags uintptr, data string) (err error)\n-//mount(source *byte, target *byte, fstype *byte, flags _C_long, data *byte) int\n+//mount(source *byte, target *byte, fstype *byte, flags _C_long, data *byte) _C_int\n \n //sys\tNanosleep(time *Timespec, leftover *Timespec) (err error)\n-//nanosleep(time *Timespec, leftover *Timespec) int\n+//nanosleep(time *Timespec, leftover *Timespec) _C_int\n \n //sys\tPause() (err error)\n-//pause() int\n+//pause() _C_int\n \n //sys\tread(fd int, p []byte) (n int, err error)\n-//read(fd int, buf *byte, count Size_t) Ssize_t\n+//read(fd _C_int, buf *byte, count Size_t) Ssize_t\n \n //sys\treadlen(fd int, p *byte, np int) (n int, err error)\n-//read(fd int, buf *byte, count Size_t) Ssize_t\n+//read(fd _C_int, buf *byte, count Size_t) Ssize_t\n \n //sys\tReadlink(path string, buf []byte) (n int, err error)\n //readlink(path *byte, buf *byte, bufsiz Size_t) Ssize_t\n \n //sys\tRename(oldpath string, newpath string) (err error)\n-//rename(oldpath *byte, newpath *byte) int\n+//rename(oldpath *byte, newpath *byte) _C_int\n \n //sys\tRmdir(path string) (err error)\n-//rmdir(path *byte) int\n+//rmdir(path *byte) _C_int\n \n //sys\tSetdomainname(p []byte) (err error)\n-//setdomainname(name *byte, len Size_t) int\n+//setdomainname(name *byte, len Size_t) _C_int\n \n //sys\tSethostname(p []byte) (err error)\n-//sethostname(name *byte, len Size_t) int\n+//sethostname(name *byte, len Size_t) _C_int\n \n //sysnb\tSetgid(gid int) (err error)\n-//setgid(gid Gid_t) int\n+//setgid(gid Gid_t) _C_int\n \n //sysnb Setregid(rgid int, egid int) (err error)\n-//setregid(rgid Gid_t, egid Gid_t) int\n+//setregid(rgid Gid_t, egid Gid_t) _C_int\n \n //sysnb\tSetpgid(pid int, pgid int) (err error)\n-//setpgid(pid Pid_t, pgid Pid_t) int\n+//setpgid(pid Pid_t, pgid Pid_t) _C_int\n \n //sysnb\tSetreuid(ruid int, euid int) (err error)\n-//setreuid(ruid Uid_t, euid Uid_t) int\n+//setreuid(ruid Uid_t, euid Uid_t) _C_int\n \n //sysnb\tSetrlimit(resource int, rlim *Rlimit) (err error)\n-//setrlimit(resource int, rlim *Rlimit) int\n+//setrlimit(resource int, rlim *Rlimit) _C_int\n \n //sysnb\tSetsid() (pid int, err error)\n //setsid() Pid_t\n \n //sysnb\tsettimeofday(tv *Timeval, tz *byte) (err error)\n-//settimeofday(tv *Timeval, tz *byte) int\n+//settimeofday(tv *Timeval, tz *byte) _C_int\n \n func Settimeofday(tv *Timeval) (err error) {\n \treturn settimeofday(tv, nil)\n }\n \n //sysnb\tSetuid(uid int) (err error)\n-//setuid(uid Uid_t) int\n+//setuid(uid Uid_t) _C_int\n \n //sys\tSymlink(oldpath string, newpath string) (err error)\n-//symlink(oldpath *byte, newpath *byte) int\n+//symlink(oldpath *byte, newpath *byte) _C_int\n \n //sys\tSync()\n //sync()\n@@ -342,37 +342,37 @@ func Settimeofday(tv *Timeval) (err error) {\n //umask(mask Mode_t) Mode_t\n \n //sys\tUnlink(path string) (err error)\n-//unlink(path *byte) int\n+//unlink(path *byte) _C_int\n \n //sys\tUtime(path string, buf *Utimbuf) (err error)\n-//utime(path *byte, buf *Utimbuf) int\n+//utime(path *byte, buf *Utimbuf) _C_int\n \n //sys\twrite(fd int, p []byte) (n int, err error)\n-//write(fd int, buf *byte, count Size_t) Ssize_t\n+//write(fd _C_int, buf *byte, count Size_t) Ssize_t\n \n //sys\twritelen(fd int, p *byte, np int) (n int, err error)\n-//write(fd int, buf *byte, count Size_t) Ssize_t\n+//write(fd _C_int, buf *byte, count Size_t) Ssize_t\n \n //sys\tmunmap(addr uintptr, length uintptr) (err error)\n-//munmap(addr *byte, length Size_t) int\n+//munmap(addr *byte, length Size_t) _C_int\n \n //sys Madvise(b []byte, advice int) (err error)\n-//madvise(addr *byte, len Size_t, advice int) int\n+//madvise(addr *byte, len Size_t, advice _C_int) _C_int\n \n //sys\tMprotect(b []byte, prot int) (err error)\n-//mprotect(addr *byte, len Size_t, prot int) int\n+//mprotect(addr *byte, len Size_t, prot _C_int) _C_int\n \n //sys\tMlock(b []byte) (err error)\n-//mlock(addr *byte, len Size_t) int\n+//mlock(addr *byte, len Size_t) _C_int\n \n //sys\tMunlock(b []byte) (err error)\n-//munlock(addr *byte, len Size_t) int\n+//munlock(addr *byte, len Size_t) _C_int\n \n //sys\tMlockall(flags int) (err error)\n-//mlockall(flags int) int\n+//mlockall(flags _C_int) _C_int\n \n //sys\tMunlockall() (err error)\n-//munlockall() int\n+//munlockall() _C_int\n \n func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }\n \n@@ -392,7 +392,7 @@ func NsecToTimeval(nsec int64) (tv Timeval) {\n }\n \n //sysnb\tTcgetattr(fd int, p *Termios) (err error)\n-//tcgetattr(fd int, p *Termios) int\n+//tcgetattr(fd _C_int, p *Termios) _C_int\n \n //sys\tTcsetattr(fd int, actions int, p *Termios) (err error)\n-//tcsetattr(fd int, actions int, p *Termios) int\n+//tcsetattr(fd _C_int, actions _C_int, p *Termios) _C_int"}, {"sha": "1ad769204740c892579261b0d865565532d13039", "filename": "libgo/go/syscall/libcall_posix_largefile.go", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_posix_largefile.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_posix_largefile.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_posix_largefile.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -7,31 +7,31 @@\n package syscall\n \n //sys\tFstat(fd int, stat *Stat_t) (err error)\n-//fstat64(fd int, stat *Stat_t) int\n+//fstat64(fd _C_int, stat *Stat_t) _C_int\n \n //sys\tFtruncate(fd int, length int64) (err error)\n-//ftruncate64(fd int, length Offset_t) int\n+//ftruncate64(fd _C_int, length Offset_t) _C_int\n \n //sys\tLstat(path string, stat *Stat_t) (err error)\n-//lstat64(path *byte, stat *Stat_t) int\n+//lstat64(path *byte, stat *Stat_t) _C_int\n \n //sys\tmmap(addr uintptr, length uintptr, prot int, flags int, fd int, offset int64) (xaddr uintptr, err error)\n-//mmap64(addr *byte, length Size_t, prot int, flags int, fd int, offset Offset_t) *byte\n+//mmap64(addr *byte, length Size_t, prot _C_int, flags _C_int, fd _C_int, offset Offset_t) *byte\n \n //sys\tOpen(path string, mode int, perm uint32) (fd int, err error)\n-//open64(path *byte, mode int, perm Mode_t) int\n+//open64(path *byte, mode _C_int, perm Mode_t) _C_int\n \n //sys\tPread(fd int, p []byte, offset int64) (n int, err error)\n-//pread64(fd int, buf *byte, count Size_t, offset Offset_t) Ssize_t\n+//pread64(fd _C_int, buf *byte, count Size_t, offset Offset_t) Ssize_t\n \n //sys\tPwrite(fd int, p []byte, offset int64) (n int, err error)\n-//pwrite64(fd int, buf *byte, count Size_t, offset Offset_t) Ssize_t\n+//pwrite64(fd _C_int, buf *byte, count Size_t, offset Offset_t) Ssize_t\n \n //sys\tSeek(fd int, offset int64, whence int) (off int64, err error)\n-//lseek64(fd int, offset Offset_t, whence int) Offset_t\n+//lseek64(fd _C_int, offset Offset_t, whence _C_int) Offset_t\n \n //sys\tStat(path string, stat *Stat_t) (err error)\n-//stat64(path *byte, stat *Stat_t) int\n+//stat64(path *byte, stat *Stat_t) _C_int\n \n //sys\tTruncate(path string, length int64) (err error)\n-//truncate64(path *byte, length Offset_t) int\n+//truncate64(path *byte, length Offset_t) _C_int"}, {"sha": "5766e0c15f82c46224f54d9c209b3fe37ed7e0f9", "filename": "libgo/go/syscall/libcall_posix_regfile.go", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_posix_regfile.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_posix_regfile.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_posix_regfile.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -8,31 +8,31 @@\n package syscall\n \n //sys\tFstat(fd int, stat *Stat_t) (err error)\n-//fstat(fd int, stat *Stat_t) int\n+//fstat(fd _C_int, stat *Stat_t) _C_int\n \n //sys\tFtruncate(fd int, length int64) (err error)\n-//ftruncate(fd int, length Offset_t) int\n+//ftruncate(fd _C_int, length Offset_t) _C_int\n \n //sys\tLstat(path string, stat *Stat_t) (err error)\n-//lstat(path *byte, stat *Stat_t) int\n+//lstat(path *byte, stat *Stat_t) _C_int\n \n //sys\tmmap(addr uintptr, length uintptr, prot int, flags int, fd int, offset int64) (xaddr uintptr, err error)\n-//mmap(addr *byte, length Size_t, prot int, flags int, fd int, offset Offset_t) *byte\n+//mmap(addr *byte, length Size_t, prot _C_int, flags _C_int, fd _C_int, offset Offset_t) *byte\n \n //sys\tOpen(path string, mode int, perm uint32) (fd int, err error)\n-//open(path *byte, mode int, perm Mode_t) int\n+//open(path *byte, mode _C_int, perm Mode_t) _C_int\n \n //sys\tPread(fd int, p []byte, offset int64) (n int, err error)\n-//pread(fd int, buf *byte, count Size_t, offset Offset_t) Ssize_t\n+//pread(fd _C_int, buf *byte, count Size_t, offset Offset_t) Ssize_t\n \n //sys\tPwrite(fd int, p []byte, offset int64) (n int, err error)\n-//pwrite(fd int, buf *byte, count Size_t, offset Offset_t) Ssize_t\n+//pwrite(fd _C_int, buf *byte, count Size_t, offset Offset_t) Ssize_t\n \n //sys\tSeek(fd int, offset int64, whence int) (off int64, err error)\n-//lseek(fd int, offset Offset_t, whence int) Offset_t\n+//lseek(fd _C_int, offset Offset_t, whence _C_int) Offset_t\n \n //sys\tStat(path string, stat *Stat_t) (err error)\n-//stat(path *byte, stat *Stat_t) int\n+//stat(path *byte, stat *Stat_t) _C_int\n \n //sys\tTruncate(path string, length int64) (err error)\n-//truncate(path *byte, length Offset_t) int\n+//truncate(path *byte, length Offset_t) _C_int"}, {"sha": "1e164ef1a5a0124673a0c5ed7c72f994ccdcac6c", "filename": "libgo/go/syscall/libcall_uname.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_uname.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_uname.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_uname.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -5,4 +5,4 @@\n package syscall\n \n //sysnb\tUname(buf *Utsname) (err error)\n-//uname(buf *Utsname) int\n+//uname(buf *Utsname) _C_int"}, {"sha": "559d78042e4b1b27c69ce14dbb54a064b6d6c501", "filename": "libgo/go/syscall/libcall_wait4.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_wait4.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_wait4.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_wait4.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -6,11 +6,11 @@\n \n package syscall\n \n-//sys\twait4(pid Pid_t, status *int, options int, rusage *Rusage) (wpid Pid_t, err error)\n-//wait4(pid Pid_t, status *int, options int, rusage *Rusage) Pid_t\n+//sys\twait4(pid Pid_t, status *_C_int, options int, rusage *Rusage) (wpid Pid_t, err error)\n+//wait4(pid Pid_t, status *_C_int, options _C_int, rusage *Rusage) Pid_t\n \n func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {\n-\tvar status int\n+\tvar status _C_int\n \tr, err := wait4(Pid_t(pid), &status, options, rusage)\n \twpid = int(r)\n \tif wstatus != nil {"}, {"sha": "b0e04b5bab3ba27bf4d7c0787d21a7d727cf2ea8", "filename": "libgo/go/syscall/libcall_waitpid.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_waitpid.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Flibcall_waitpid.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_waitpid.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -6,11 +6,11 @@\n \n package syscall\n \n-//sys\twaitpid(pid Pid_t, status *int, options int) (wpid Pid_t, err error)\n-//waitpid(pid Pid_t, status *int, options int) Pid_t\n+//sys\twaitpid(pid Pid_t, status *_C_int, options int) (wpid Pid_t, err error)\n+//waitpid(pid Pid_t, status *_C_int, options _C_int) Pid_t\n \n func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {\n-\tvar status int\n+\tvar status _C_int\n \tr, err := waitpid(Pid_t(pid), &status, options)\n \twpid = int(r)\n \tif wstatus != nil {"}, {"sha": "819e70a46d3eba5be0b7f72bd00dce5f1f41151b", "filename": "libgo/go/syscall/socket.go", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Fsocket.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Fsocket.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsocket.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -132,7 +132,7 @@ func anyToSockaddr(rsa *RawSockaddrAny) (Sockaddr, error) {\n }\n \n //sys\taccept(fd int, sa *RawSockaddrAny, len *Socklen_t) (nfd int, err error)\n-//accept(fd int, sa *RawSockaddrAny, len *Socklen_t) int\n+//accept(fd _C_int, sa *RawSockaddrAny, len *Socklen_t) _C_int\n \n func Accept(fd int) (nfd int, sa Sockaddr, err error) {\n \tvar rsa RawSockaddrAny\n@@ -150,7 +150,7 @@ func Accept(fd int) (nfd int, sa Sockaddr, err error) {\n }\n \n //sysnb\tgetsockname(fd int, sa *RawSockaddrAny, len *Socklen_t) (err error)\n-//getsockname(fd int, sa *RawSockaddrAny, len *Socklen_t) int\n+//getsockname(fd _C_int, sa *RawSockaddrAny, len *Socklen_t) _C_int\n \n func Getsockname(fd int) (sa Sockaddr, err error) {\n \tvar rsa RawSockaddrAny\n@@ -162,7 +162,7 @@ func Getsockname(fd int) (sa Sockaddr, err error) {\n }\n \n //sysnb getpeername(fd int, sa *RawSockaddrAny, len *Socklen_t) (err error)\n-//getpeername(fd int, sa *RawSockaddrAny, len *Socklen_t) int\n+//getpeername(fd _C_int, sa *RawSockaddrAny, len *Socklen_t) _C_int\n \n func Getpeername(fd int) (sa Sockaddr, err error) {\n \tvar rsa RawSockaddrAny\n@@ -174,7 +174,7 @@ func Getpeername(fd int) (sa Sockaddr, err error) {\n }\n \n //sys\tbind(fd int, sa *RawSockaddrAny, len Socklen_t) (err error)\n-//bind(fd int, sa *RawSockaddrAny, len Socklen_t) int\n+//bind(fd _C_int, sa *RawSockaddrAny, len Socklen_t) _C_int\n \n func Bind(fd int, sa Sockaddr) (err error) {\n \tptr, n, err := sa.sockaddr()\n@@ -185,7 +185,7 @@ func Bind(fd int, sa Sockaddr) (err error) {\n }\n \n //sys\tconnect(s int, addr *RawSockaddrAny, addrlen Socklen_t) (err error)\n-//connect(s int, addr *RawSockaddrAny, addrlen Socklen_t) int\n+//connect(s _C_int, addr *RawSockaddrAny, addrlen Socklen_t) _C_int\n \n func Connect(fd int, sa Sockaddr) (err error) {\n \tptr, n, err := sa.sockaddr()\n@@ -196,7 +196,7 @@ func Connect(fd int, sa Sockaddr) (err error) {\n }\n \n //sysnb\tsocket(domain int, typ int, proto int) (fd int, err error)\n-//socket(domain int, typ int, protocol int) int\n+//socket(domain _C_int, typ _C_int, protocol _C_int) _C_int\n \n func Socket(domain, typ, proto int) (fd int, err error) {\n \tif domain == AF_INET6 && SocketDisableIPv6 {\n@@ -206,16 +206,21 @@ func Socket(domain, typ, proto int) (fd int, err error) {\n \treturn\n }\n \n-//sysnb\tsocketpair(domain int, typ int, proto int, fd *[2]int) (err error)\n-//socketpair(domain int, typ int, protocol int, fd *[2]int) int\n+//sysnb\tsocketpair(domain int, typ int, proto int, fd *[2]_C_int) (err error)\n+//socketpair(domain _C_int, typ _C_int, protocol _C_int, fd *[2]_C_int) _C_int\n \n func Socketpair(domain, typ, proto int) (fd [2]int, err error) {\n-\terr = socketpair(domain, typ, proto, &fd)\n+\tvar fdx [2]_C_int\n+\terr = socketpair(domain, typ, proto, &fdx)\n+\tif err == nil {\n+\t\tfd[0] = int(fdx[0])\n+\t\tfd[1] = int(fdx[1])\n+\t}\n \treturn\n }\n \n //sys\tgetsockopt(s int, level int, name int, val uintptr, vallen *Socklen_t) (err error)\n-//getsockopt(s int, level int, name int, val *byte, vallen *Socklen_t) int\n+//getsockopt(s _C_int, level _C_int, name _C_int, val *byte, vallen *Socklen_t) _C_int\n \n func GetsockoptByte(fd, level, opt int) (value byte, err error) {\n \tvar n byte\n@@ -259,7 +264,7 @@ func GetsockoptIPv6Mreq(fd, level, opt int) (*IPv6Mreq, error) {\n }\n \n //sys\tsetsockopt(s int, level int, name int, val *byte, vallen Socklen_t) (err error)\n-//setsockopt(s int, level int, optname int, val *byte, vallen Socklen_t) int\n+//setsockopt(s _C_int, level _C_int, optname _C_int, val *byte, vallen Socklen_t) _C_int\n \n func SetsockoptByte(fd, level, opt int, value byte) (err error) {\n \tvar n = byte(value)\n@@ -305,7 +310,7 @@ func SetsockoptString(fd, level, opt int, s string) (err error) {\n }\n \n //sys\trecvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *Socklen_t) (n int, err error)\n-//recvfrom(fd int, buf *byte, len Size_t, flags int, from *RawSockaddrAny, fromlen *Socklen_t) Ssize_t\n+//recvfrom(fd _C_int, buf *byte, len Size_t, flags _C_int, from *RawSockaddrAny, fromlen *Socklen_t) Ssize_t\n \n func Recvfrom(fd int, p []byte, flags int) (n int, from Sockaddr, err error) {\n \tvar rsa RawSockaddrAny\n@@ -318,7 +323,7 @@ func Recvfrom(fd int, p []byte, flags int) (n int, from Sockaddr, err error) {\n }\n \n //sys\tsendto(s int, buf []byte, flags int, to *RawSockaddrAny, tolen Socklen_t) (err error)\n-//sendto(s int, buf *byte, len Size_t, flags int, to *RawSockaddrAny, tolen Socklen_t) Ssize_t\n+//sendto(s _C_int, buf *byte, len Size_t, flags _C_int, to *RawSockaddrAny, tolen Socklen_t) Ssize_t\n \n func Sendto(fd int, p []byte, flags int, to Sockaddr) (err error) {\n \tptr, n, err := to.sockaddr()\n@@ -329,7 +334,7 @@ func Sendto(fd int, p []byte, flags int, to Sockaddr) (err error) {\n }\n \n //sys\trecvmsg(s int, msg *Msghdr, flags int) (n int, err error)\n-//recvmsg(s int, msg *Msghdr, flags int) Ssize_t\n+//recvmsg(s _C_int, msg *Msghdr, flags _C_int) Ssize_t\n \n func Recvmsg(fd int, p, oob []byte, flags int) (n, oobn int, recvflags int, from Sockaddr, err error) {\n \tvar msg Msghdr\n@@ -366,7 +371,7 @@ func Recvmsg(fd int, p, oob []byte, flags int) (n, oobn int, recvflags int, from\n }\n \n //sys\tsendmsg(s int, msg *Msghdr, flags int) (err error)\n-//sendmsg(s int, msg *Msghdr, flags int) Ssize_t\n+//sendmsg(s _C_int, msg *Msghdr, flags _C_int) Ssize_t\n \n func Sendmsg(fd int, p, oob []byte, to Sockaddr, flags int) (err error) {\n \tvar ptr *RawSockaddrAny\n@@ -405,10 +410,10 @@ func Sendmsg(fd int, p, oob []byte, to Sockaddr, flags int) (err error) {\n }\n \n //sys\tListen(fd int, n int) (err error)\n-//listen(fd int, n int) int\n+//listen(fd _C_int, n _C_int) _C_int\n \n //sys\tShutdown(fd int, how int) (err error)\n-//shutdown(fd int, how int) int\n+//shutdown(fd _C_int, how _C_int) _C_int\n \n func (iov *Iovec) SetLen(length int) {\n \tiov.Len = Iovec_len_t(length)"}, {"sha": "cd7d6eb98b9a5bf23b385ecc78af13c1c6a5f487", "filename": "libgo/go/syscall/socket_linux.go", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Fsocket_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fgo%2Fsyscall%2Fsocket_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsocket_linux.go?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -58,20 +58,20 @@ func (sa *SockaddrNetlink) sockaddr() (*RawSockaddrAny, Socklen_t, error) {\n \n type RawSockaddrInet4 struct {\n \tFamily uint16\n-\tPort uint16\n-\tAddr [4]byte /* in_addr */\n-\tZero [8]uint8\n+\tPort   uint16\n+\tAddr   [4]byte /* in_addr */\n+\tZero   [8]uint8\n }\n \n func (sa *RawSockaddrInet4) setLen() Socklen_t {\n \treturn SizeofSockaddrInet4\n }\n \n type RawSockaddrInet6 struct {\n-\tFamily uint16\n-\tPort uint16\n+\tFamily   uint16\n+\tPort     uint16\n \tFlowinfo uint32\n-\tAddr [16]byte /* in6_addr */\n+\tAddr     [16]byte /* in6_addr */\n \tScope_id uint32\n }\n \n@@ -81,7 +81,7 @@ func (sa *RawSockaddrInet6) setLen() Socklen_t {\n \n type RawSockaddrUnix struct {\n \tFamily uint16\n-\tPath [108]int8\n+\tPath   [108]int8\n }\n \n func (sa *RawSockaddrUnix) setLen(int) {\n@@ -103,7 +103,7 @@ func (sa *RawSockaddrUnix) getLen() (int, error) {\n \t// to be uninterpreted fixed-size binary blobs--but\n \t// everyone uses this convention.\n \tn := 0\n-\tfor n < len(sa.Path) - 3 && sa.Path[n] != 0 {\n+\tfor n < len(sa.Path)-3 && sa.Path[n] != 0 {\n \t\tn++\n \t}\n \n@@ -129,7 +129,7 @@ type RawSockaddrNetlink struct {\n \n type RawSockaddr struct {\n \tFamily uint16\n-\tData [14]int8\n+\tData   [14]int8\n }\n \n // BindToDevice binds the socket associated with fd to device.\n@@ -165,13 +165,13 @@ func anyToSockaddrOS(rsa *RawSockaddrAny) (Sockaddr, error) {\n }\n \n //sysnb\tEpollCreate(size int) (fd int, err error)\n-//epoll_create(size int) int\n+//epoll_create(size _C_int) _C_int\n \n //sysnb EpollCreate1(flags int) (fd int, err error)\n-//epoll_create1(flags int) int\n+//epoll_create1(flags _C_int) _C_int\n \n //sysnb\tEpollCtl(epfd int, op int, fd int, event *EpollEvent) (err error)\n-//epoll_ctl(epfd int, op int, fd int, event *EpollEvent) int\n+//epoll_ctl(epfd _C_int, op _C_int, fd _C_int, event *EpollEvent) _C_int\n \n //sys\tEpollWait(epfd int, events []EpollEvent, msec int) (n int, err error)\n-//epoll_wait(epfd int, events *EpollEvent, maxevents int, timeout int) int\n+//epoll_wait(epfd _C_int, events *EpollEvent, maxevents _C_int, timeout _C_int) _C_int"}, {"sha": "3688c530d065fab0358336732776725334694aea", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=ff95e2ab0b32e0595cb8f5da22e323a8b6718ab2", "patch": "@@ -414,7 +414,18 @@ echo \"type Uid_t _uid_t\" >> ${OUT}\n echo \"type Gid_t _gid_t\" >> ${OUT}\n echo \"type Socklen_t _socklen_t\" >> ${OUT}\n \n-# The long type, needed because that is the type that ptrace returns.\n+# The C int type.\n+sizeof_int=`grep '^const ___SIZEOF_INT__ = ' gen-sysinfo.go | sed -e 's/.*= //'`\n+if test \"$sizeof_int\" = \"4\"; then\n+  echo \"type _C_int int32\" >> ${OUT}\n+elif test \"$sizeof_int\" = \"8\"; then\n+  echo \"type _C_int int64\" >> ${OUT}\n+else\n+  echo 1>&2 \"mksysinfo.sh: could not determine size of int (got $sizeof_int)\"\n+  exit 1\n+fi\n+\n+# The C long type, needed because that is the type that ptrace returns.\n sizeof_long=`grep '^const ___SIZEOF_LONG__ = ' gen-sysinfo.go | sed -e 's/.*= //'`\n if test \"$sizeof_long\" = \"4\"; then\n   echo \"type _C_long int32\" >> ${OUT}"}]}