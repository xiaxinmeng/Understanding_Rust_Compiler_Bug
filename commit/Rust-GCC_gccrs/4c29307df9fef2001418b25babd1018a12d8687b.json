{"sha": "4c29307df9fef2001418b25babd1018a12d8687b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMyOTMwN2RmOWZlZjIwMDE0MThiMjViYWJkMTAxOGExMmQ4Njg3Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-08-12T17:57:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-08-12T17:57:49Z"}, "message": "re PR tree-optimization/37084 (ICE in gimple_assign_rhs1)\n\n\tPR tree-optimization/37084\n\t* tree-inline.c (copy_bb): Call gimple_regimplify_operands\n\tif id->regimplify, don't assume stmt is a cast assignment.\n\n\t* g++.dg/tree-ssa/pr37084.C: New test.\n\nFrom-SVN: r139028", "tree": {"sha": "8ea0e258c24d36033da004d3d69b1955d768eef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ea0e258c24d36033da004d3d69b1955d768eef5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c29307df9fef2001418b25babd1018a12d8687b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c29307df9fef2001418b25babd1018a12d8687b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c29307df9fef2001418b25babd1018a12d8687b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c29307df9fef2001418b25babd1018a12d8687b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0259b010bcc7b81c08a382e2176aba7d7c4fec7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0259b010bcc7b81c08a382e2176aba7d7c4fec7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0259b010bcc7b81c08a382e2176aba7d7c4fec7"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "f60e34b232f84d4ca63eac29499e8b8205fce5e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c29307df9fef2001418b25babd1018a12d8687b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c29307df9fef2001418b25babd1018a12d8687b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c29307df9fef2001418b25babd1018a12d8687b", "patch": "@@ -1,3 +1,9 @@\n+2008-08-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/37084\n+\t* tree-inline.c (copy_bb): Call gimple_regimplify_operands\n+\tif id->regimplify, don't assume stmt is a cast assignment.\n+\n 2008-08-12  Anatoly Sokolov  <aesok@post.ru>\n \n         * final.c (final_scan_insn): Use app_enable/app_disable functions."}, {"sha": "692e83f993c81dba99213544693b80bff65cb30a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c29307df9fef2001418b25babd1018a12d8687b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c29307df9fef2001418b25babd1018a12d8687b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c29307df9fef2001418b25babd1018a12d8687b", "patch": "@@ -1,3 +1,8 @@\n+2008-08-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/37084\n+\t* g++.dg/tree-ssa/pr37084.C: New test.\n+\n 2008-08-12  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* gcc.c-torture/execute/20031003-1.c (main): Update test to"}, {"sha": "8fceb0cbbf34328c85a53982bc968a4829ee4a1f", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr37084.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c29307df9fef2001418b25babd1018a12d8687b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr37084.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c29307df9fef2001418b25babd1018a12d8687b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr37084.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr37084.C?ref=4c29307df9fef2001418b25babd1018a12d8687b", "patch": "@@ -0,0 +1,16 @@\n+// PR tree-optimization/37084\n+// { dg-do compile }\n+// { dg-options \"-O\" }\n+\n+struct A\n+{\n+  A ();\n+};\n+\n+inline A\n+foo ()\n+{\n+  return A ();\n+}\n+\n+const A a (foo ());"}, {"sha": "ef9e75c88c63df4cb7cc7746e8e938c35c769c61", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c29307df9fef2001418b25babd1018a12d8687b/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c29307df9fef2001418b25babd1018a12d8687b/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=4c29307df9fef2001418b25babd1018a12d8687b", "patch": "@@ -1260,10 +1260,9 @@ copy_bb (copy_body_data *id, basic_block bb, int frequency_scale,\n \n       /* With return slot optimization we can end up with\n \t non-gimple (foo *)&this->m, fix that here.  */\n-      if ((is_gimple_assign (stmt)\n-\t    && gimple_assign_rhs_code (stmt) == NOP_EXPR\n-\t    && !is_gimple_val (gimple_assign_rhs1 (stmt)))\n-\t  || id->regimplify)\n+      if (is_gimple_assign (stmt)\n+\t  && gimple_assign_rhs_code (stmt) == NOP_EXPR\n+\t  && !is_gimple_val (gimple_assign_rhs1 (stmt)))\n \t{\n \t  tree new_rhs;\n \t  new_rhs = force_gimple_operand_gsi (&copy_gsi,"}]}