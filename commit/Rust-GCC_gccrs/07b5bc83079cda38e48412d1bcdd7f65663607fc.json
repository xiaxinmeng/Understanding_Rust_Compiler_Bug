{"sha": "07b5bc83079cda38e48412d1bcdd7f65663607fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdiNWJjODMwNzljZGEzOGU0ODQxMmQxYmNkZDdmNjU2NjM2MDdmYw==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2008-05-16T13:54:34Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2008-05-16T13:54:34Z"}, "message": "ifcvt.c (dead_or_predicable): Rename df_simulate_one_insn_backwards to df_simulate_one_insn.\n\n2008-05-16  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\t* ifcvt.c (dead_or_predicable): Rename\n\tdf_simulate_one_insn_backwards to df_simulate_one_insn.\n\t* recog.c (peephole2_optimize): Ditto.\n\t* rtl-factoring.c (collect_pattern_seqs, clear_regs_live_in_seq): \n\tDitto.\n\t* df.h: Rename df_simulate_one_insn_backwards to\n\tdf_simulate_one_insn.  and delete df_simulate_one_insn_forwards.\n\t* df-problems.c (df_simulate_artificial_refs_at_top) Reversed\n\tscanning of defs and uses.\n\t(df_simulate_one_insn_backwards): Renamed to df_simulate_one_insn.\n\t(df_simulate_one_insn_forwards): Removed.\n\nFrom-SVN: r135422", "tree": {"sha": "63f780169efa14dd2849b28fc4cf07a474bd689d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63f780169efa14dd2849b28fc4cf07a474bd689d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07b5bc83079cda38e48412d1bcdd7f65663607fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b5bc83079cda38e48412d1bcdd7f65663607fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b5bc83079cda38e48412d1bcdd7f65663607fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b5bc83079cda38e48412d1bcdd7f65663607fc/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1f07a96da3b9d93b6fd2923aea88944a7ad55b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1f07a96da3b9d93b6fd2923aea88944a7ad55b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1f07a96da3b9d93b6fd2923aea88944a7ad55b5"}], "stats": {"total": 108, "additions": 61, "deletions": 47}, "files": [{"sha": "9f9af8b20c5f21067679a4a122db65357c806f9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07b5bc83079cda38e48412d1bcdd7f65663607fc", "patch": "@@ -1,3 +1,18 @@\n+2008-05-16  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\t* ifcvt.c (dead_or_predicable): Rename\n+\tdf_simulate_one_insn_backwards to df_simulate_one_insn.\n+\t* recog.c (peephole2_optimize): Ditto.\n+\t* rtl-factoring.c (collect_pattern_seqs, clear_regs_live_in_seq): \n+\tDitto.\n+\t* df.h: Rename df_simulate_one_insn_backwards to\n+\tdf_simulate_one_insn.  and delete df_simulate_one_insn_forwards.\n+\t* df-problems.c (df_simulate_artificial_refs_at_top) Reversed\n+\tscanning of defs and uses.\n+\t(df_simulate_one_insn_backwards): Renamed to df_simulate_one_insn.\n+\t(df_simulate_one_insn_forwards): Removed.\n+\n+\t\n 2008-05-16  Doug Kwan  <dougkwan@google.com>\n \n \t* real.c (real_to_decimal, real_to_hexadecimal): Distinguish"}, {"sha": "682cca857a7cb1e00160563765f16789ee72523e", "filename": "gcc/df-problems.c", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=07b5bc83079cda38e48412d1bcdd7f65663607fc", "patch": "@@ -3682,7 +3682,6 @@ df_note_add_problem (void)\n    DF_LR_IN.  If you start at the bottom of the block use one of\n    DF_LIVE_OUT or DF_LR_OUT.  BE SURE TO PASS A COPY OF THESE SETS,\n    THEY WILL BE DESTROYED.\n-\n ----------------------------------------------------------------------------*/\n \n \n@@ -3757,87 +3756,88 @@ df_simulate_fixup_sets (basic_block bb, bitmap live)\n }\n \n \n-/* Apply the artificial uses and defs at the top of BB in a forwards\n+/*----------------------------------------------------------------------------\n+   The following three functions are used only for BACKWARDS scanning:\n+   i.e. they process the defs before the uses.\n+\n+   df_simulate_artificial_refs_at_end should be called first with a\n+   bitvector copyied from the DF_LIVE_OUT or DF_LR_OUT.  Then\n+   df_simulate_one_insn should be called for each insn in the block,\n+   starting with the last on.  Finally,\n+   df_simulate_artificial_refs_at_top can be called to get a new value\n+   of the sets at the top of the block (this is rarely used).\n+\n+   It would be trivial to define a similar set of functions that work\n+   in the forwards direction.  The only changes would be to process\n+   the uses before the defs and properly rename the functions.  This\n+   has so far not been necessary.\n+----------------------------------------------------------------------------*/\n+\n+/* Apply the artificial uses and defs at the end of BB in a backwards\n    direction.  */\n \n void \n-df_simulate_artificial_refs_at_top (basic_block bb, bitmap live)\n+df_simulate_artificial_refs_at_end (basic_block bb, bitmap live)\n {\n   struct df_ref **def_rec;\n-#ifdef EH_USES\n   struct df_ref **use_rec;\n-#endif\n   int bb_index = bb->index;\n   \n-#ifdef EH_USES\n-  for (use_rec = df_get_artificial_uses (bb_index); *use_rec; use_rec++)\n-    {\n-      struct df_ref *use = *use_rec;\n-      if (DF_REF_FLAGS (use) & DF_REF_AT_TOP)\n-\tbitmap_set_bit (live, DF_REF_REGNO (use));\n-    }\n-#endif\n-\n   for (def_rec = df_get_artificial_defs (bb_index); *def_rec; def_rec++)\n     {\n       struct df_ref *def = *def_rec;\n-      if (DF_REF_FLAGS (def) & DF_REF_AT_TOP)\n+      if ((DF_REF_FLAGS (def) & DF_REF_AT_TOP) == 0)\n \tbitmap_clear_bit (live, DF_REF_REGNO (def));\n     }\n+\n+  for (use_rec = df_get_artificial_uses (bb_index); *use_rec; use_rec++)\n+    {\n+      struct df_ref *use = *use_rec;\n+      if ((DF_REF_FLAGS (use) & DF_REF_AT_TOP) == 0)\n+\tbitmap_set_bit (live, DF_REF_REGNO (use));\n+    }\n }\n \n \n-/* Simulate the forwards effects of INSN on the bitmap LIVE.  */\n+/* Simulate the backwards effects of INSN on the bitmap LIVE.  */\n \n void \n-df_simulate_one_insn_forwards (basic_block bb, rtx insn, bitmap live)\n+df_simulate_one_insn (basic_block bb, rtx insn, bitmap live)\n {\n   if (! INSN_P (insn))\n     return;\t\n   \n-  df_simulate_uses (insn, live);\n   df_simulate_defs (insn, live);\n+  df_simulate_uses (insn, live);\n   df_simulate_fixup_sets (bb, live);\n }\n \n \n-/* Apply the artificial uses and defs at the end of BB in a backwards\n+/* Apply the artificial uses and defs at the top of BB in a backwards\n    direction.  */\n \n void \n-df_simulate_artificial_refs_at_end (basic_block bb, bitmap live)\n+df_simulate_artificial_refs_at_top (basic_block bb, bitmap live)\n {\n   struct df_ref **def_rec;\n+#ifdef EH_USES\n   struct df_ref **use_rec;\n+#endif\n   int bb_index = bb->index;\n   \n   for (def_rec = df_get_artificial_defs (bb_index); *def_rec; def_rec++)\n     {\n       struct df_ref *def = *def_rec;\n-      if ((DF_REF_FLAGS (def) & DF_REF_AT_TOP) == 0)\n+      if (DF_REF_FLAGS (def) & DF_REF_AT_TOP)\n \tbitmap_clear_bit (live, DF_REF_REGNO (def));\n     }\n \n+#ifdef EH_USES\n   for (use_rec = df_get_artificial_uses (bb_index); *use_rec; use_rec++)\n     {\n       struct df_ref *use = *use_rec;\n-      if ((DF_REF_FLAGS (use) & DF_REF_AT_TOP) == 0)\n+      if (DF_REF_FLAGS (use) & DF_REF_AT_TOP)\n \tbitmap_set_bit (live, DF_REF_REGNO (use));\n     }\n+#endif\n }\n-\n-\n-/* Simulate the backwards effects of INSN on the bitmap LIVE.  */\n-\n-void \n-df_simulate_one_insn_backwards (basic_block bb, rtx insn, bitmap live)\n-{\n-  if (! INSN_P (insn))\n-    return;\t\n-  \n-  df_simulate_defs (insn, live);\n-  df_simulate_uses (insn, live);\n-  df_simulate_fixup_sets (bb, live);\n-}\n-\n-"}, {"sha": "6375a70fd2917e4aa743853fa68a1c03561a3b62", "filename": "gcc/df.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=07b5bc83079cda38e48412d1bcdd7f65663607fc", "patch": "@@ -913,10 +913,9 @@ extern void df_note_add_problem (void);\n extern void df_simulate_find_defs (rtx, bitmap);\n extern void df_simulate_defs (rtx, bitmap);\n extern void df_simulate_uses (rtx, bitmap);\n-extern void df_simulate_artificial_refs_at_top (basic_block, bitmap);\n-extern void df_simulate_one_insn_forwards (basic_block, rtx, bitmap);\n extern void df_simulate_artificial_refs_at_end (basic_block, bitmap);\n-extern void df_simulate_one_insn_backwards (basic_block, rtx, bitmap);\n+extern void df_simulate_one_insn (basic_block, rtx, bitmap);\n+extern void df_simulate_artificial_refs_at_top (basic_block, bitmap);\n \n /* Functions defined in df-scan.c.  */\n "}, {"sha": "e1601b1eacb0a469529fe06e4facc32c2443c954", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=07b5bc83079cda38e48412d1bcdd7f65663607fc", "patch": "@@ -3913,7 +3913,7 @@ dead_or_predicable (basic_block test_bb, basic_block merge_bb,\n \t  if (INSN_P (insn))\n \t    {\n \t      df_simulate_find_defs (insn, test_set);\n-\t      df_simulate_one_insn_backwards (test_bb, insn, test_live);\n+\t      df_simulate_one_insn (test_bb, insn, test_live);\n \t    }\n \t  prev = PREV_INSN (insn);\n \t  if (insn == earliest)"}, {"sha": "9ede30f90fd40802b21c3917d199b336ca686ddc", "filename": "gcc/recog.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=07b5bc83079cda38e48412d1bcdd7f65663607fc", "patch": "@@ -2953,7 +2953,7 @@ peephole2_optimize (void)\n \t\t  && peep2_insn_data[peep2_current].insn == NULL_RTX)\n \t\tpeep2_current_count++;\n \t      peep2_insn_data[peep2_current].insn = insn;\n-\t      df_simulate_one_insn_backwards (bb, insn, live);\n+\t      df_simulate_one_insn (bb, insn, live);\n \t      COPY_REG_SET (peep2_insn_data[peep2_current].live_before, live);\n \n \t      if (RTX_FRAME_RELATED_P (insn))\n@@ -3115,7 +3115,7 @@ peephole2_optimize (void)\n \t\t\t    peep2_current_count++;\n \t\t\t  peep2_insn_data[i].insn = x;\n \t\t\t  df_insn_rescan (x);\n-\t\t\t  df_simulate_one_insn_backwards (bb, x, live);\n+\t\t\t  df_simulate_one_insn (bb, x, live);\n \t\t\t  bitmap_copy (peep2_insn_data[i].live_before, live);\n \t\t\t}\n \t\t      x = PREV_INSN (x);"}, {"sha": "128c99087a509eef498e3c51f3fab23a0332fac7", "filename": "gcc/rtl-factoring.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2Frtl-factoring.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b5bc83079cda38e48412d1bcdd7f65663607fc/gcc%2Frtl-factoring.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-factoring.c?ref=07b5bc83079cda38e48412d1bcdd7f65663607fc", "patch": "@@ -486,7 +486,7 @@ collect_pattern_seqs (void)\n \t  }\n \tif (insn == BB_HEAD (bb))\n \t  break;\n-\tdf_simulate_one_insn_backwards (bb, insn, &live);\n+\tdf_simulate_one_insn (bb, insn, &live);\n \tinsn = prev;\n       }\n \n@@ -576,7 +576,7 @@ clear_regs_live_in_seq (HARD_REG_SET * regs, rtx insn, int length)\n \n   /* Propagate until INSN if found.  */\n   for (x = BB_END (bb); x != insn; x = PREV_INSN (x))\n-    df_simulate_one_insn_backwards (bb, x, &live);\n+    df_simulate_one_insn (bb, x, &live);\n \n   /* Clear registers live after INSN.  */\n   renumbered_reg_set_to_hard_reg_set (&hlive, &live);\n@@ -586,7 +586,7 @@ clear_regs_live_in_seq (HARD_REG_SET * regs, rtx insn, int length)\n   for (i = 0; i < length;)\n     {\n       rtx prev = PREV_INSN (x);\n-      df_simulate_one_insn_backwards (bb, x, &live);\n+      df_simulate_one_insn (bb, x, &live);\n \n       if (INSN_P (x))\n         {"}]}