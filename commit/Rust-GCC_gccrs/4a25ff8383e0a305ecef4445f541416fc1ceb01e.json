{"sha": "4a25ff8383e0a305ecef4445f541416fc1ceb01e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEyNWZmODM4M2UwYTMwNWVjZWY0NDQ1ZjU0MTQxNmZjMWNlYjAxZQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2006-11-27T23:15:38Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2006-11-27T23:15:38Z"}, "message": "alias.c (init_alias_analysis): Remove simplification loop after propagating pointers.\n\n        * alias.c (init_alias_analysis): Remove simplification loop\n        after propagating pointers.\n\nFrom-SVN: r119262", "tree": {"sha": "35f3a7c7f97857d1740bc5d87bb4309378769115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35f3a7c7f97857d1740bc5d87bb4309378769115"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a25ff8383e0a305ecef4445f541416fc1ceb01e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a25ff8383e0a305ecef4445f541416fc1ceb01e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a25ff8383e0a305ecef4445f541416fc1ceb01e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a25ff8383e0a305ecef4445f541416fc1ceb01e/comments", "author": null, "committer": null, "parents": [{"sha": "fbee3d219a7626309de46cd55ef83247b2d63497", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbee3d219a7626309de46cd55ef83247b2d63497", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbee3d219a7626309de46cd55ef83247b2d63497"}], "stats": {"total": 37, "additions": 5, "deletions": 32}, "files": [{"sha": "896826d2d1fb2a8551febcb96193b910d91355a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a25ff8383e0a305ecef4445f541416fc1ceb01e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a25ff8383e0a305ecef4445f541416fc1ceb01e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a25ff8383e0a305ecef4445f541416fc1ceb01e", "patch": "@@ -1,3 +1,8 @@\n+2006-11-27  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* alias.c (init_alias_analysis): Remove simplification loop\n+\tafter propagating pointers.\n+\n 2006-11-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (x86_ext_80387_constants): Add m_K8, m_CORE2"}, {"sha": "a3634ac1f93fe8c30ff56fe9b7a9f165cb43d419", "filename": "gcc/alias.c", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a25ff8383e0a305ecef4445f541416fc1ceb01e/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a25ff8383e0a305ecef4445f541416fc1ceb01e/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=4a25ff8383e0a305ecef4445f541416fc1ceb01e", "patch": "@@ -2586,38 +2586,6 @@ init_alias_analysis (void)\n     if (reg_known_value[i] == 0)\n       reg_known_value[i] = regno_reg_rtx[i + FIRST_PSEUDO_REGISTER];\n \n-  /* Simplify the reg_base_value array so that no register refers to\n-     another register, except to special registers indirectly through\n-     ADDRESS expressions.\n-\n-     In theory this loop can take as long as O(registers^2), but unless\n-     there are very long dependency chains it will run in close to linear\n-     time.\n-\n-     This loop may not be needed any longer now that the main loop does\n-     a better job at propagating alias information.  */\n-  pass = 0;\n-  do\n-    {\n-      changed = 0;\n-      pass++;\n-      for (ui = 0; ui < maxreg; ui++)\n-\t{\n-\t  rtx base = VEC_index (rtx, reg_base_value, ui);\n-\t  if (base && REG_P (base))\n-\t    {\n-\t      unsigned int base_regno = REGNO (base);\n-\t      if (base_regno == ui)\t\t/* register set from itself */\n-\t\tVEC_replace (rtx, reg_base_value, ui, 0);\n-\t      else\n-\t\tVEC_replace (rtx, reg_base_value, ui,\n-\t\t\t     VEC_index (rtx, reg_base_value, base_regno));\n-\t      changed = 1;\n-\t    }\n-\t}\n-    }\n-  while (changed && pass < MAX_ALIAS_LOOP_PASSES);\n-\n   /* Clean up.  */\n   free (new_reg_base_value);\n   new_reg_base_value = 0;"}]}