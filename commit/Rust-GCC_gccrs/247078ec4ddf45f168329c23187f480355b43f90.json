{"sha": "247078ec4ddf45f168329c23187f480355b43f90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3MDc4ZWM0ZGRmNDVmMTY4MzI5YzIzMTg3ZjQ4MDM1NWI0M2Y5MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-06-05T04:52:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-06-05T04:52:07Z"}, "message": "typeck2.c (merge_exception_specifiers): Adjust merging of throw() and noexcept(true).\n\n\t* typeck2.c (merge_exception_specifiers): Adjust merging of\n\tthrow() and noexcept(true).\n\nFrom-SVN: r160308", "tree": {"sha": "288fa8d0d2d21f3c56feed6c85b284ab687e7616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/288fa8d0d2d21f3c56feed6c85b284ab687e7616"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/247078ec4ddf45f168329c23187f480355b43f90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247078ec4ddf45f168329c23187f480355b43f90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247078ec4ddf45f168329c23187f480355b43f90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247078ec4ddf45f168329c23187f480355b43f90/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4af89b884ccffe321856e11dc1a9f5f3e9fe2f60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4af89b884ccffe321856e11dc1a9f5f3e9fe2f60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4af89b884ccffe321856e11dc1a9f5f3e9fe2f60"}], "stats": {"total": 71, "additions": 64, "deletions": 7}, "files": [{"sha": "b0510792fcf72006a01c0a936c9523eb212d5f70", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247078ec4ddf45f168329c23187f480355b43f90/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247078ec4ddf45f168329c23187f480355b43f90/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=247078ec4ddf45f168329c23187f480355b43f90", "patch": "@@ -1,5 +1,8 @@\n 2010-06-04  Jason Merrill  <jason@redhat.com>\n \n+\t* typeck2.c (merge_exception_specifiers): Adjust merging of\n+\tthrow() and noexcept(true).\n+\n \t* pt.c (value_dependent_expression_p) [NOEXCEPT_EXPR]: Avoid\n \tusing an uninitialized variable.\n "}, {"sha": "e7b97c4d5c780edd54989b2fecb21c43e2d4181b", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247078ec4ddf45f168329c23187f480355b43f90/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247078ec4ddf45f168329c23187f480355b43f90/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=247078ec4ddf45f168329c23187f480355b43f90", "patch": "@@ -1721,17 +1721,14 @@ merge_exception_specifiers (tree list, tree add)\n {\n   if (!list || !add)\n     return NULL_TREE;\n-  /* A noexcept(true) spec takes precedence over a throw() spec.\n+  /* For merging noexcept(true) and throw(), take the more recent one (LIST).\n      A throw(type-list) spec takes precedence over a noexcept(false) spec.\n      Any other noexcept-spec should only be merged with an equivalent one.\n-     So the !TREE_VALUE code is correct for the latter two cases.  */\n-  else if (list == noexcept_true_spec\n-\t   || add == noexcept_true_spec)\n-    return noexcept_true_spec;\n-  else if (!TREE_VALUE (list))\n-    return add;\n+     So the !TREE_VALUE code below is correct for all cases.  */\n   else if (!TREE_VALUE (add))\n     return list;\n+  else if (!TREE_VALUE (list))\n+    return add;\n   else\n     {\n       tree orig_list = list;"}, {"sha": "0998820f7d0b4caee09ce459e7d919fa82c17a45", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247078ec4ddf45f168329c23187f480355b43f90/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247078ec4ddf45f168329c23187f480355b43f90/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=247078ec4ddf45f168329c23187f480355b43f90", "patch": "@@ -1,5 +1,8 @@\n 2010-06-04  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/noexcept06.C: New.\n+\t* g++.dg/cpp0x/noexcept07.C: New.\n+\n \t* g++.dg/cpp0x/noexcept01.C: New.\n \t* g++.dg/cpp0x/noexcept02.C: New.\n \t* g++.dg/cpp0x/noexcept03.C: New."}, {"sha": "b0135ac5319ad68cc3a3af4d2417ac0985a80b2f", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept06.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247078ec4ddf45f168329c23187f480355b43f90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept06.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247078ec4ddf45f168329c23187f480355b43f90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept06.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept06.C?ref=247078ec4ddf45f168329c23187f480355b43f90", "patch": "@@ -0,0 +1,29 @@\n+// Test that checking of a nothrow specification uses the one on the\n+// definition.\n+// { dg-options \"-std=c++0x\" }\n+// { dg-do run }\n+\n+#include <exception>\n+#include <cstdlib>\n+\n+void my_unexpected ()\n+{\n+  std::abort ();\n+}\n+void my_terminate ()\n+{\n+  std::exit (0);\n+}\n+\n+void f() throw();\n+void f() noexcept\n+{\n+  throw 1;\n+}\n+\n+int main()\n+{\n+  std::set_terminate (my_terminate);\n+  f();\n+  return 1;\n+}"}, {"sha": "0a5773fc86b341b91579e9a55d299e951ef2e2b4", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept07.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247078ec4ddf45f168329c23187f480355b43f90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept07.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247078ec4ddf45f168329c23187f480355b43f90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept07.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept07.C?ref=247078ec4ddf45f168329c23187f480355b43f90", "patch": "@@ -0,0 +1,25 @@\n+// Test that checking of a nothrow specification uses the one on the\n+// definition.\n+// { dg-options \"-std=c++0x\" }\n+// { dg-do run }\n+\n+#include <exception>\n+#include <cstdlib>\n+\n+void my_unexpected ()\n+{\n+  std::exit (0);\n+}\n+\n+void f() noexcept;\n+void f() throw()\n+{\n+  throw 1;\n+}\n+\n+int main()\n+{\n+  std::set_unexpected (my_unexpected);\n+  f();\n+  return 1;\n+}"}]}