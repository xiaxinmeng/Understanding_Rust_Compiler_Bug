{"sha": "bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViZDYxOWVjYzNjZTJmYzhlODJlZmMyODMwY2Y5ZGU1YzlkMmNkZA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2011-06-27T15:52:26Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2011-06-27T15:52:26Z"}, "message": "mn10300.md (clzsi2): Use XOR after BSCH to convert bit position of highest bit set into a count of...\n\n\t* config/mn10300/mn10300.md (clzsi2): Use XOR after BSCH to\n\tconvert bit position of highest bit set into a count of the high\n\tzero bits.\n\nFrom-SVN: r175536", "tree": {"sha": "c512f4120ef6e4185de9498c7b475fb063359ffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c512f4120ef6e4185de9498c7b475fb063359ffd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "353b39fa9d51efa6213cf277a036548c32cf655a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/353b39fa9d51efa6213cf277a036548c32cf655a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/353b39fa9d51efa6213cf277a036548c32cf655a"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "1d9c27c08376db57544716ebe661a14e81a53c41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd", "patch": "@@ -1,3 +1,9 @@\n+2011-06-27  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/mn10300/mn10300.md (clzsi2): Use XOR after BSCH to\n+\tconvert bit position of highest bit set into a count of the high\n+\tzero bits.\n+\n 2011-06-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* dwarf2out.c (TYPE_DECL_IS_STUB): Extend mechanism to all types."}, {"sha": "8799648cc26e831e8d3e9973891325e7cb527e6d", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=bebd619ecc3ce2fc8e82efc2830cf9de5c9d2cdd", "patch": "@@ -1811,10 +1811,24 @@\n ;; MISCELANEOUS\n ;; ----------------------------------------------------------------------\n \n+;; Note the use of the (const_int 0) when generating the insn that matches\n+;; the bsch pattern.  This ensures that the destination register is\n+;; initialised with 0 which will make the BSCH instruction set searching\n+;; at bit 31.\n+;;\n+;; The XOR in the instruction sequence below is there because the BSCH\n+;; instruction returns the bit number of the highest set bit and we want\n+;; the number of zero bits above that bit.  The AM33 does not have a\n+;; reverse subtraction instruction, but we can use a simple xor instead\n+;; since we know that the top 27 bits are clear.\n (define_expand \"clzsi2\"\n-  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t   (unspec:SI [(match_operand:SI 1 \"register_operand\" \"\")\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\")\n+\t\t   (unspec:SI [(match_operand:SI 1 \"register_operand\")\n \t\t\t       (const_int 0)] UNSPEC_BSCH))\n+\t      (clobber (reg:CC CC_REG))])\n+   (parallel [(set (match_dup 0)\n+\t\t   (xor:SI (match_dup 0)\n+\t\t\t   (const_int 31)))\n \t      (clobber (reg:CC CC_REG))])]\n   \"TARGET_AM33\"\n )\n@@ -1826,7 +1840,7 @@\n \t\t   UNSPEC_BSCH))\n    (clobber (reg:CC CC_REG))]\n   \"TARGET_AM33\"\n-  \"bsch %1,%0\"\n+  \"bsch %1, %0\"\n )\n \n ;; ----------------------------------------------------------------------\n@@ -2034,7 +2048,7 @@\n {\n   /* The RETF insn is up to 3 cycles faster than RET.  */\n   fputs ((mn10300_can_use_retf_insn () ? \"\\tretf \" : \"\\tret \"), asm_out_file);\n-  mn10300_print_reg_list (asm_out_file, mn10300_get_live_callee_saved_regs ());\n+  mn10300_print_reg_list (asm_out_file, mn10300_get_live_callee_saved_regs (NULL));\n   fprintf (asm_out_file, \",%d\\n\", (int) INTVAL (operands[0]));\n   return \"\";\n })"}]}