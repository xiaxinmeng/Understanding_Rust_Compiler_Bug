{"sha": "e0528ed9e55edf892d0593696e28f483f409fe9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA1MjhlZDllNTVlZGY4OTJkMDU5MzY5NmUyOGY0ODNmNDA5ZmU5Zg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-05-23T16:36:14Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-05-23T16:36:14Z"}, "message": "rs6000: Make all multiply instructions one type\n\nThis uses the attributes \"size\" and \"dot\" to specify the differences:\n\n\timul3 -> mul size=8\n\timul2 -> mul size=16\n\timul -> mul size=32\n\tlmul -> mul size=64\n\timul_compare -> mul size=32 dot=yes\n\tlmul_compare -> mul size=64 dot=yes\n\nFrom-SVN: r210867", "tree": {"sha": "7a938a4ca036507d5033c698af6c5e27d74a8ef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a938a4ca036507d5033c698af6c5e27d74a8ef7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0528ed9e55edf892d0593696e28f483f409fe9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0528ed9e55edf892d0593696e28f483f409fe9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0528ed9e55edf892d0593696e28f483f409fe9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0528ed9e55edf892d0593696e28f483f409fe9f/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1263d6429d280b0a7e92b87b4ac392abf0ff7ff1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1263d6429d280b0a7e92b87b4ac392abf0ff7ff1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1263d6429d280b0a7e92b87b4ac392abf0ff7ff1"}], "stats": {"total": 352, "additions": 237, "deletions": 115}, "files": [{"sha": "89c4f21431acbcd55d98895f6eb803ac5ae03e28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -1,3 +1,52 @@\n+2014-05-23  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (type): Add \"mul\".  Delete \"imul\",\n+\t\"imul2\", \"imul3\", \"lmul\", \"imul_compare\", \"lmul_compare\".\n+\t(size): New attribute.\n+\t(dot): New attribute.\n+\t(cell_micro): Adjust.\n+\t(mulsi3, *mulsi3_internal1, *mulsi3_internal2, mulsidi3,\n+\tumulsidi3, smulsi3_highpart, umulsi3_highpart, muldi3,\n+\t*muldi3_internal1, *muldi3_internal2, smuldi3_highpart,\n+\tumuldi3_highpart): Adjust.\n+\t* config/rs6000/rs6000.c (rs6000_adjust_cost, is_cracked_insn,\n+\trs6000_adjust_priority, is_nonpipeline_insn,\n+\tinsn_must_be_first_in_group, insn_must_be_last_in_group): Adjust.\n+\n+\t* config/rs6000/40x.md (ppc403-imul, ppc405-imul, ppc405-imul2,\n+\tppc405-imul3): Adjust.\n+\t* config/rs6000/440.md (ppc440-imul, ppc440-imul2): Adjust.\n+\t* config/rs6000/476.md (ppc476-imul): Adjust.\n+\t* config/rs6000/601.md (ppc601-imul): Adjust.\n+\t* config/rs6000/603.md (ppc603-imul, ppc603-imul2): Adjust.\n+\t* config/rs6000/6xx.md (ppc604-imul, ppc604e-imul, ppc620-imul,\n+\tppc620-imul2, ppc620-imul3, ppc620-lmul): Adjust.\n+\t* config/rs6000/7450.md (ppc7450-imul, ppc7450-imul2): Adjust.\n+\t* config/rs6000/7xx.md (ppc750-imul, ppc750-imul2, ppc750-imul3):\n+\tAdjust.\n+\t* config/rs6000/8540.md (ppc8540_multiply): Adjust.\n+\t* config/rs6000/a2.md (ppca2-imul, ppca2-lmul): Adjust.\n+\t* config/rs6000/cell.md (cell-lmul, cell-lmul-cmp, cell-imul23,\n+\tcell-imul): Adjust.\n+\t* config/rs6000/e300c2c3.md (ppce300c3_multiply): Adjust.\n+\t* config/rs6000/e500mc.md (e500mc_multiply): Adjust.\n+\t* config/rs6000/e500mc64.md (e500mc64_multiply): Adjust.\n+\t* config/rs6000/e5500.md (e5500_multiply, e5500_multiply_i): Adjust.\n+\t* config/rs6000/e6500.md (e6500_multiply, e6500_multiply_i): Adjust.\n+\t* config/rs6000/mpc.md (mpccore-imul): Adjust.\n+\t* config/rs6000/power4.md (power4-lmul-cmp, power4-imul-cmp,\n+\tpower4-lmul, power4-imul, power4-imul3): Adjust.\n+\t* config/rs6000/power5.md (power5-lmul-cmp, power5-imul-cmp,\n+\tpower5-lmul, power5-imul, power5-imul3): Adjust.\n+\t* config/rs6000/power6.md (power6-lmul-cmp, power6-imul-cmp,\n+\tpower6-lmul, power6-imul, power6-imul3): Adjust.\n+\t* config/rs6000/power7.md (power7-mul, power7-mul-compare): Adjust.\n+\t* config/rs6000/power8.md (power8-mul, power8-mul-compare): Adjust.\n+\n+\t* config/rs6000/rs64.md (rs64a-imul, rs64a-imul2, rs64a-imul3,\n+\trs64a-lmul): Adjust.\n+\t* config/rs6000/titan.md (titan_imul): Adjust.\n+\n 2014-05-23  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (type): Add new value \"halfmul\"."}, {"sha": "7ec2801144635fbe25b02ad5e4f4adc404b7ffb1", "filename": "gcc/config/rs6000/40x.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F40x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F40x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F40x.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -58,22 +58,26 @@\n   \"iu_40x,nothing,bpu_40x\")\n \n (define_insn_reservation \"ppc403-imul\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"cpu\" \"ppc403\"))\n   \"iu_40x*4\")\n \n (define_insn_reservation \"ppc405-imul\" 5\n-  (and (eq_attr \"type\" \"imul,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppc405\"))\n   \"iu_40x*4\")\n \n (define_insn_reservation \"ppc405-imul2\" 3\n-  (and (eq_attr \"type\" \"imul2\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"16\")\n        (eq_attr \"cpu\" \"ppc405\"))\n   \"iu_40x*2\")\n \n (define_insn_reservation \"ppc405-imul3\" 2\n-  (and (eq_attr \"type\" \"imul3,halfmul\")\n+  (and (ior (eq_attr \"type\" \"halfmul\")\n+\t    (and (eq_attr \"type\" \"mul\")\n+\t\t (eq_attr \"size\" \"8\")))\n        (eq_attr \"cpu\" \"ppc405\"))\n   \"iu_40x\")\n "}, {"sha": "55d115580bfc37505c87cbbd4b6f878d4567cc73", "filename": "gcc/config/rs6000/440.md", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F440.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F440.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F440.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -71,12 +71,15 @@\n    ppc440_i_pipe|ppc440_j_pipe,ppc440_i_pipe|ppc440_j_pipe\")\n \n (define_insn_reservation \"ppc440-imul\" 3\n-  (and (eq_attr \"type\" \"imul,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppc440\"))\n   \"ppc440_issue,ppc440_i_pipe\")\n \n (define_insn_reservation \"ppc440-imul2\" 2\n-  (and (eq_attr \"type\" \"imul2,imul3,halfmul\")\n+  (and (ior (eq_attr \"type\" \"halfmul\")\n+\t    (and (eq_attr \"type\" \"mul\")\n+\t\t (eq_attr \"size\" \"8,16\")))\n        (eq_attr \"cpu\" \"ppc440\"))\n   \"ppc440_issue,ppc440_i_pipe\")\n "}, {"sha": "7b00632165074cc82be64cc99d97a0ac641ba96b", "filename": "gcc/config/rs6000/476.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F476.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F476.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F476.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -82,7 +82,7 @@\n    ppc476_i_pipe\")\n \n (define_insn_reservation \"ppc476-imul\" 4\n-  (and (eq_attr \"type\" \"imul,imul_compare,imul2,imul3,halfmul\")\n+  (and (eq_attr \"type\" \"mul,halfmul\")\n        (eq_attr \"cpu\" \"ppc476\"))\n   \"ppc476_issue,\\\n    ppc476_i_pipe\")"}, {"sha": "c1a00438859d61ce18040688b5c5001045331ddb", "filename": "gcc/config/rs6000/601.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F601.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F601.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F601.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -61,7 +61,7 @@\n   \"iu_ppc601,iu_ppc601,iu_ppc601\")\n \n (define_insn_reservation \"ppc601-imul\" 5\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"cpu\" \"ppc601\"))\n   \"iu_ppc601*5\")\n "}, {"sha": "7e411264fd518e7b43e5cdfcbec2ff98af3cfd31", "filename": "gcc/config/rs6000/603.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F603.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F603.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F603.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -75,12 +75,14 @@\n \n ; This takes 2 or 3 cycles\n (define_insn_reservation \"ppc603-imul\" 3\n-  (and (eq_attr \"type\" \"imul,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppc603\"))\n   \"iu_603*2\")\n \n (define_insn_reservation \"ppc603-imul2\" 2\n-  (and (eq_attr \"type\" \"imul2,imul3\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"8,16\")\n        (eq_attr \"cpu\" \"ppc603\"))\n   \"iu_603*2\")\n "}, {"sha": "429e8628fc6e98f72ca72a13f41c4f13fb6f107b", "filename": "gcc/config/rs6000/6xx.md", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F6xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F6xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F6xx.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -89,32 +89,36 @@\n   \"iu1_6xx|iu2_6xx,iu1_6xx|iu2_6xx,iu1_6xx|iu2_6xx\")\n \n (define_insn_reservation \"ppc604-imul\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"cpu\" \"ppc604\"))\n   \"mciu_6xx*2\")\n \n (define_insn_reservation \"ppc604e-imul\" 2\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"cpu\" \"ppc604e\"))\n   \"mciu_6xx\")\n \n (define_insn_reservation \"ppc620-imul\" 5\n-  (and (eq_attr \"type\" \"imul,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppc620,ppc630\"))\n   \"mciu_6xx*3\")\n \n (define_insn_reservation \"ppc620-imul2\" 4\n-  (and (eq_attr \"type\" \"imul2\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"16\")\n        (eq_attr \"cpu\" \"ppc620,ppc630\"))\n   \"mciu_6xx*3\")\n \n (define_insn_reservation \"ppc620-imul3\" 3\n-  (and (eq_attr \"type\" \"imul3\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"8\")\n        (eq_attr \"cpu\" \"ppc620,ppc630\"))\n   \"mciu_6xx*3\")\n \n (define_insn_reservation \"ppc620-lmul\" 7\n-  (and (eq_attr \"type\" \"lmul,lmul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"ppc620,ppc630\"))\n   \"mciu_6xx*5\")\n "}, {"sha": "b7b5efd0898f1190f775e79691d49bd4c0c11d67", "filename": "gcc/config/rs6000/7450.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F7450.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F7450.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7450.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -90,12 +90,14 @@\n    iu1_7450|iu2_7450|iu3_7450,iu1_7450|iu2_7450|iu3_7450\")\n \n (define_insn_reservation \"ppc7450-imul\" 4\n-  (and (eq_attr \"type\" \"imul,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppc7450\"))\n   \"ppc7450_du,mciu_7450*2\")\n \n (define_insn_reservation \"ppc7450-imul2\" 3\n-  (and (eq_attr \"type\" \"imul2,imul3\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"8,16\")\n        (eq_attr \"cpu\" \"ppc7450\"))\n   \"ppc7450_du,mciu_7450\")\n "}, {"sha": "059d006f2545bf783fff0abd89627056ab8b978f", "filename": "gcc/config/rs6000/7xx.md", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F7xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F7xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7xx.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -77,17 +77,20 @@\n   \"ppc750_du,iu1_7xx|iu2_7xx,iu1_7xx|iu2_7xx,iu1_7xx|iu2_7xx\")\n \n (define_insn_reservation \"ppc750-imul\" 4\n-  (and (eq_attr \"type\" \"imul,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppc750,ppc7400\"))\n   \"ppc750_du,iu1_7xx*4\")\n \n (define_insn_reservation \"ppc750-imul2\" 3\n-  (and (eq_attr \"type\" \"imul2\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"16\")\n        (eq_attr \"cpu\" \"ppc750,ppc7400\"))\n   \"ppc750_du,iu1_7xx*2\")\n \n (define_insn_reservation \"ppc750-imul3\" 2\n-  (and (eq_attr \"type\" \"imul3\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"8\")\n        (eq_attr \"cpu\" \"ppc750,ppc7400\"))\n   \"ppc750_du,iu1_7xx\")\n "}, {"sha": "da3f92b0a23eba06ee62b23bb16ee2e35d10fa28", "filename": "gcc/config/rs6000/8540.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F8540.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2F8540.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F8540.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -111,7 +111,7 @@\n \n ;; Multiply\n (define_insn_reservation \"ppc8540_multiply\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"cpu\" \"ppc8540,ppc8548\"))\n   \"ppc8540_decode,ppc8540_issue+ppc8540_mu_stage0,ppc8540_mu_stage1,\\\n    ppc8540_mu_stage2,ppc8540_mu_stage3+ppc8540_retire\")"}, {"sha": "7cab4d38931dd73c053c81c4dcd97351c0cc29dc", "filename": "gcc/config/rs6000/a2.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fa2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fa2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fa2.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -48,13 +48,15 @@\n \n ;; D.4.8\n (define_insn_reservation \"ppca2-imul\" 1\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"8,16,32\")\n        (eq_attr \"cpu\" \"ppca2\"))\n   \"nothing\")\n \n ;; FIXME: latency and multiplier reservation for 64-bit multiply?\n (define_insn_reservation \"ppca2-lmul\" 6\n-  (and (eq_attr \"type\" \"lmul,lmul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"ppca2\"))\n   \"mult*3\")\n "}, {"sha": "8c3c7413da342130658b77a5a7172e5600e0b4d2", "filename": "gcc/config/rs6000/cell.md", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fcell.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fcell.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcell.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -212,25 +212,32 @@\n \n ;; mulld\n (define_insn_reservation \"cell-lmul\" 15\n-  (and (eq_attr \"type\" \"lmul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"cell\"))\n   \"slot1,nonpipeline,nonpipeline*13\")\n \n ;; mulld. is microcoded\n (define_insn_reservation \"cell-lmul-cmp\" 22\n-  (and (eq_attr \"type\" \"lmul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"yes\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"cell\"))\n   \"slot0+slot1,nonpipeline,nonpipeline*20\")\n \n ;; mulli, 6 cycles\n (define_insn_reservation \"cell-imul23\" 6\n-  (and (eq_attr \"type\" \"imul2,imul3\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"8,16\")\n        (eq_attr \"cpu\" \"cell\"))\n   \"slot1,nonpipeline,nonpipeline*4\")\n \n ;; mullw, 9\n (define_insn_reservation \"cell-imul\" 9\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"cell\"))\n   \"slot1,nonpipeline,nonpipeline*7\")\n  "}, {"sha": "aba0d206e7ce226cba65f535eef2dc3a1a15b9fc", "filename": "gcc/config/rs6000/e300c2c3.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -102,7 +102,7 @@\n \n ;; Multiply is non-pipelined but can be executed in any IU\n (define_insn_reservation \"ppce300c3_multiply\" 2\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n        (ior (eq_attr \"cpu\" \"ppce300c2\") (eq_attr \"cpu\" \"ppce300c3\")))\n   \"ppce300c3_decode,ppce300c3_issue+ppce300c3_iu_stage0, \\\n    ppce300c3_iu_stage0+ppce300c3_retire\")"}, {"sha": "051394eaeeb96cf92e394ac3a064243daa0ae36d", "filename": "gcc/config/rs6000/e500mc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fe500mc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fe500mc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500mc.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -91,7 +91,7 @@\n \n ;; Multiply.\n (define_insn_reservation \"e500mc_multiply\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"cpu\" \"ppce500mc\"))\n   \"e500mc_decode,e500mc_issue+e500mc_mu_stage0,e500mc_mu_stage1,\\\n    e500mc_mu_stage2,e500mc_mu_stage3+e500mc_retire\")"}, {"sha": "3fcd94ee6f9b3413fa1e0305009bbaadc1df617e", "filename": "gcc/config/rs6000/e500mc64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fe500mc64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fe500mc64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500mc64.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -99,7 +99,7 @@\n \n ;; Multiply.\n (define_insn_reservation \"e500mc64_multiply\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"cpu\" \"ppce500mc64\"))\n   \"e500mc64_decode,e500mc64_issue+e500mc64_mu_stage0,e500mc64_mu_stage1,\\\n    e500mc64_mu_stage2,e500mc64_mu_stage3+e500mc64_retire\")"}, {"sha": "b04d0a3b75aa56e8baf24bbcfd318aa92697a1e6", "filename": "gcc/config/rs6000/e5500.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fe5500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fe5500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe5500.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -101,12 +101,16 @@\n \n ;; CFX - Multiply.\n (define_insn_reservation \"e5500_multiply\" 4\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppce5500\"))\n   \"e5500_decode,e5500_cfx_stage0,e5500_cfx_stage1\")\n \n (define_insn_reservation \"e5500_multiply_i\" 5\n-  (and (eq_attr \"type\" \"imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (ior (eq_attr \"dot\" \"yes\")\n+\t    (eq_attr \"size\" \"8,16\"))\n        (eq_attr \"cpu\" \"ppce5500\"))\n   \"e5500_decode,e5500_cfx_stage0,\\\n    e5500_cfx_stage0+e5500_cfx_stage1,e5500_cfx_stage1\")"}, {"sha": "18a372b73afbd3c6b6b4c95579560290e616270c", "filename": "gcc/config/rs6000/e6500.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fe6500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fe6500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe6500.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -104,12 +104,16 @@\n \n ;; CFX - Multiply.\n (define_insn_reservation \"e6500_multiply\" 4\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"ppce6500\"))\n   \"e6500_decode,e6500_cfx_stage0,e6500_cfx_stage1\")\n \n (define_insn_reservation \"e6500_multiply_i\" 5\n-  (and (eq_attr \"type\" \"imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (ior (eq_attr \"dot\" \"yes\")\n+\t    (eq_attr \"size\" \"8,16\"))\n        (eq_attr \"cpu\" \"ppce6500\"))\n   \"e6500_decode,e6500_cfx_stage0,\\\n    e6500_cfx_stage0+e6500_cfx_stage1,e6500_cfx_stage1\")"}, {"sha": "317d064b0adcc21cf4ea67466f2e859e30642415", "filename": "gcc/config/rs6000/mpc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fmpc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fmpc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmpc.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -57,7 +57,7 @@\n   \"iu_mpc,iu_mpc,iu_mpc\")\n \n (define_insn_reservation \"mpccore-imul\" 2\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"cpu\" \"mpccore\"))\n   \"mciu_mpc\")\n "}, {"sha": "2f508510b09bc031dbeaeaf63d4b7a83774d3a4d", "filename": "gcc/config/rs6000/power4.md", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fpower4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fpower4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower4.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -261,7 +261,9 @@\n (define_bypass 4 \"power4-compare\" \"power4-branch,power4-crlogical,power4-delayedcr,power4-mfcr,power4-mfcrf\")\n \n (define_insn_reservation \"power4-lmul-cmp\" 7\n-  (and (eq_attr \"type\" \"lmul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"yes\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"(du1_power4+du2_power4|du2_power4+du3_power4|du3_power4+du4_power4),\\\n    ((iu1_power4*6,iu2_power4)\\\n@@ -271,7 +273,9 @@\n (define_bypass 10 \"power4-lmul-cmp\" \"power4-branch,power4-crlogical,power4-delayedcr,power4-mfcr,power4-mfcrf\")\n \n (define_insn_reservation \"power4-imul-cmp\" 5\n-  (and (eq_attr \"type\" \"imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"yes\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"(du1_power4+du2_power4|du2_power4+du3_power4|du3_power4+du4_power4),\\\n    ((iu1_power4*4,iu2_power4)\\\n@@ -281,19 +285,24 @@\n (define_bypass 8 \"power4-imul-cmp\" \"power4-branch,power4-crlogical,power4-delayedcr,power4-mfcr,power4-mfcrf\")\n \n (define_insn_reservation \"power4-lmul\" 7\n-  (and (eq_attr \"type\" \"lmul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"(du1_power4|du2_power4|du3_power4|du4_power4),\\\n    (iu1_power4*6|iu2_power4*6)\")\n \n (define_insn_reservation \"power4-imul\" 5\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"(du1_power4|du2_power4|du3_power4|du4_power4),\\\n    (iu1_power4*4|iu2_power4*4)\")\n \n (define_insn_reservation \"power4-imul3\" 4\n-  (and (eq_attr \"type\" \"imul2,imul3\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"8,16\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"(du1_power4|du2_power4|du3_power4|du4_power4),\\\n    (iu1_power4*3|iu2_power4*3)\")"}, {"sha": "3b855d3ec688c72eb8db70fa99e00ed1869b0437", "filename": "gcc/config/rs6000/power5.md", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fpower5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fpower5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower5.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -211,31 +211,40 @@\n (define_bypass 4 \"power5-compare\" \"power5-branch,power5-crlogical,power5-delayedcr,power5-mfcr,power5-mfcrf\")\n \n (define_insn_reservation \"power5-lmul-cmp\" 7\n-  (and (eq_attr \"type\" \"lmul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"yes\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power5\"))\n   \"du1_power5+du2_power5,iu1_power5*6,iu2_power5\")\n \n (define_bypass 10 \"power5-lmul-cmp\" \"power5-branch,power5-crlogical,power5-delayedcr,power5-mfcr,power5-mfcrf\")\n \n (define_insn_reservation \"power5-imul-cmp\" 5\n-  (and (eq_attr \"type\" \"imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"yes\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power5\"))\n   \"du1_power5+du2_power5,iu1_power5*4,iu2_power5\")\n \n (define_bypass 8 \"power5-imul-cmp\" \"power5-branch,power5-crlogical,power5-delayedcr,power5-mfcr,power5-mfcrf\")\n \n (define_insn_reservation \"power5-lmul\" 7\n-  (and (eq_attr \"type\" \"lmul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power5\"))\n   \"(du1_power5|du2_power5|du3_power5|du4_power5),(iu1_power5*6|iu2_power5*6)\")\n \n (define_insn_reservation \"power5-imul\" 5\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power5\"))\n   \"(du1_power5|du2_power5|du3_power5|du4_power5),(iu1_power5*4|iu2_power5*4)\")\n \n (define_insn_reservation \"power5-imul3\" 4\n-  (and (eq_attr \"type\" \"imul2,imul3\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"8,16\")\n        (eq_attr \"cpu\" \"power5\"))\n   \"(du1_power5|du2_power5|du3_power5|du4_power5),(iu1_power5*3|iu2_power5*3)\")\n "}, {"sha": "bed2f9f6f111df4b8ef8d2ec8d709a7e813ec22a", "filename": "gcc/config/rs6000/power6.md", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fpower6.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fpower6.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower6.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -357,31 +357,40 @@\n   \"FXU_power6\")\n \n (define_insn_reservation \"power6-lmul-cmp\" 16\n-  (and (eq_attr \"type\" \"lmul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"yes\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power6\"))\n   \"(iu1_power6*16+iu2_power6*16+fpu1_power6*16)\\\n   |(iu1_power6*16+iu2_power6*16+fpu2_power6*16)\");\n \n (define_insn_reservation \"power6-imul-cmp\" 16\n-  (and (eq_attr \"type\" \"imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"yes\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power6\"))\n   \"(iu1_power6*16+iu2_power6*16+fpu1_power6*16)\\\n   |(iu1_power6*16+iu2_power6*16+fpu2_power6*16)\");\n \n (define_insn_reservation \"power6-lmul\" 16\n-  (and (eq_attr \"type\" \"lmul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"power6\"))\n   \"(iu1_power6*16+iu2_power6*16+fpu1_power6*16)\\\n   |(iu1_power6*16+iu2_power6*16+fpu2_power6*16)\");\n \n (define_insn_reservation \"power6-imul\" 16\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"power6\"))\n   \"(iu1_power6*16+iu2_power6*16+fpu1_power6*16)\\\n   |(iu1_power6*16+iu2_power6*16+fpu2_power6*16)\");\n \n (define_insn_reservation \"power6-imul3\" 16\n-  (and (eq_attr \"type\" \"imul2,imul3\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"8,16\")\n        (eq_attr \"cpu\" \"power6\"))\n   \"(iu1_power6*16+iu2_power6*16+fpu1_power6*16)\\\n   |(iu1_power6*16+iu2_power6*16+fpu2_power6*16)\");"}, {"sha": "be92bd5691c596770579af7c69500b610495cf6a", "filename": "gcc/config/rs6000/power7.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fpower7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fpower7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower7.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -207,12 +207,14 @@\n (define_bypass 3 \"power7-cmp,power7-compare\" \"power7-crlogical,power7-delayedcr\")\n \n (define_insn_reservation \"power7-mul\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,lmul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n        (eq_attr \"cpu\" \"power7\"))\n   \"DU_power7,FXU_power7\")\n \n (define_insn_reservation \"power7-mul-compare\" 5\n-  (and (eq_attr \"type\" \"imul_compare,lmul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"yes\")\n        (eq_attr \"cpu\" \"power7\"))\n   \"DU2F_power7,FXU_power7,nothing*3,FXU_power7\")\n "}, {"sha": "024b97235d869e9148aaf606d9ce6ff86971cf9a", "filename": "gcc/config/rs6000/power8.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fpower8.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Fpower8.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower8.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -228,12 +228,14 @@\n \t\t \"power8-crlogical,power8-mfcr,power8-mfcrf,power8-branch\")\n \n (define_insn_reservation \"power8-mul\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,lmul\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"no\")\n        (eq_attr \"cpu\" \"power8\"))\n   \"DU_any_power8,FXU_power8\")\n \n (define_insn_reservation \"power8-mul-compare\" 4\n-  (and (eq_attr \"type\" \"imul_compare,lmul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"dot\" \"yes\")\n        (eq_attr \"cpu\" \"power8\"))\n   \"DU_cracked_power8,FXU_power8\")\n "}, {"sha": "ba8479822c5a0fde226ec25043c9c38d05d91049", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 18, "deletions": 34, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -26189,12 +26189,15 @@ rs6000_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n                 case TYPE_CMP:\n                 case TYPE_COMPARE:\n                 case TYPE_DELAYED_COMPARE:\n-                case TYPE_IMUL_COMPARE:\n-                case TYPE_LMUL_COMPARE:\n                 case TYPE_FPCOMPARE:\n                 case TYPE_CR_LOGICAL:\n                 case TYPE_DELAYED_CR:\n \t\t  return cost + 2;\n+                case TYPE_MUL:\n+\t\t  if (get_attr_dot (dep_insn) == DOT_YES)\n+\t\t    return cost + 2;\n+\t\t  else\n+\t\t    break;\n \t\tdefault:\n \t\t  break;\n \t\t}\n@@ -26253,12 +26256,7 @@ rs6000_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n                         return 3;\n                       break;\n                     }\n-                  case TYPE_IMUL:\n-                  case TYPE_IMUL2:\n-                  case TYPE_IMUL3:\n-                  case TYPE_LMUL:\n-                  case TYPE_IMUL_COMPARE:\n-                  case TYPE_LMUL_COMPARE:\n+                  case TYPE_MUL:\n                     {\n                       if (! store_data_bypass_p (dep_insn, insn))\n                         return 17;\n@@ -26329,12 +26327,7 @@ rs6000_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n                         return 3;\n                       break;\n                     }\n-                  case TYPE_IMUL:\n-                  case TYPE_IMUL2:\n-                  case TYPE_IMUL3:\n-                  case TYPE_LMUL:\n-                  case TYPE_IMUL_COMPARE:\n-                  case TYPE_LMUL_COMPARE:\n+                  case TYPE_MUL:\n                     {\n                       if (set_to_load_agen (dep_insn, insn))\n                         return 17;\n@@ -26499,7 +26492,8 @@ is_cracked_insn (rtx insn)\n \t      && get_attr_update (insn) == UPDATE_YES)\n \t  || type == TYPE_DELAYED_CR\n \t  || type == TYPE_COMPARE || type == TYPE_DELAYED_COMPARE\n-\t  || type == TYPE_IMUL_COMPARE || type == TYPE_LMUL_COMPARE\n+\t  || (type == TYPE_MUL\n+\t      && get_attr_dot (insn) == DOT_YES)\n \t  || type == TYPE_IDIV || type == TYPE_LDIV\n \t  || type == TYPE_INSERT_WORD)\n \treturn true;\n@@ -26655,7 +26649,7 @@ rs6000_adjust_priority (rtx insn ATTRIBUTE_UNUSED, int priority)\n       default:\n \tbreak;\n \n-      case TYPE_IMUL:\n+      case TYPE_MUL:\n       case TYPE_IDIV:\n \tfprintf (stderr, \"priority was %#x (%d) before adjustment\\n\",\n \t\t priority, priority);\n@@ -26709,10 +26703,7 @@ is_nonpipeline_insn (rtx insn)\n     return false;\n \n   type = get_attr_type (insn);\n-  if (type == TYPE_IMUL\n-      || type == TYPE_IMUL2\n-      || type == TYPE_IMUL3\n-      || type == TYPE_LMUL\n+  if (type == TYPE_MUL\n       || type == TYPE_IDIV\n       || type == TYPE_LDIV\n       || type == TYPE_SDIV\n@@ -27335,15 +27326,10 @@ insn_must_be_first_in_group (rtx insn)\n         case TYPE_SHIFT:\n         case TYPE_VAR_SHIFT_ROTATE:\n         case TYPE_TRAP:\n-        case TYPE_IMUL:\n-        case TYPE_IMUL2:\n-        case TYPE_IMUL3:\n-        case TYPE_LMUL:\n+        case TYPE_MUL:\n         case TYPE_IDIV:\n         case TYPE_INSERT_WORD:\n         case TYPE_DELAYED_COMPARE:\n-        case TYPE_IMUL_COMPARE:\n-        case TYPE_LMUL_COMPARE:\n         case TYPE_FPCOMPARE:\n         case TYPE_MFCR:\n         case TYPE_MTCR:\n@@ -27386,6 +27372,11 @@ insn_must_be_first_in_group (rtx insn)\n         case TYPE_MFJMPR:\n         case TYPE_MTJMPR:\n           return true;\n+        case TYPE_MUL:\n+          if (get_attr_dot (insn) == DOT_YES)\n+            return true;\n+          else\n+            break;\n         case TYPE_LOAD:\n           if (get_attr_sign_extend (insn) == SIGN_EXTEND_YES\n               || get_attr_update (insn) == UPDATE_YES)\n@@ -27416,8 +27407,6 @@ insn_must_be_first_in_group (rtx insn)\n         case TYPE_COMPARE:\n         case TYPE_DELAYED_COMPARE:\n         case TYPE_VAR_DELAYED_COMPARE:\n-        case TYPE_IMUL_COMPARE:\n-        case TYPE_LMUL_COMPARE:\n         case TYPE_SYNC:\n         case TYPE_ISYNC:\n         case TYPE_LOAD_L:\n@@ -27481,14 +27470,9 @@ insn_must_be_last_in_group (rtx insn)\n       case TYPE_SHIFT:\n       case TYPE_VAR_SHIFT_ROTATE:\n       case TYPE_TRAP:\n-      case TYPE_IMUL:\n-      case TYPE_IMUL2:\n-      case TYPE_IMUL3:\n-      case TYPE_LMUL:\n+      case TYPE_MUL:\n       case TYPE_IDIV:\n       case TYPE_DELAYED_COMPARE:\n-      case TYPE_IMUL_COMPARE:\n-      case TYPE_LMUL_COMPARE:\n       case TYPE_FPCOMPARE:\n       case TYPE_MFCR:\n       case TYPE_MTCR:"}, {"sha": "5993537e280bc8271a7c4b1150ff0def55d99cbf", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 40, "deletions": 21, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -160,13 +160,12 @@\n (define_attr \"type\"\n   \"integer,two,three,\n    shift,var_shift_rotate,insert_word,insert_dword,\n-   imul,imul2,imul3,lmul,halfmul,idiv,ldiv,\n+   mul,halfmul,idiv,ldiv,\n    exts,cntlz,popcnt,isel,\n    load,store,fpload,fpstore,vecload,vecstore,\n    cmp,\n    branch,jmpreg,mfjmpr,mtjmpr,trap,isync,sync,load_l,store_c,\n    compare,fast_compare,delayed_compare,var_delayed_compare,\n-   imul_compare,lmul_compare,\n    cr_logical,delayed_cr,mfcr,mfcrf,mtcr,\n    fpcompare,fp,fpsimple,dmul,sdiv,ddiv,ssqrt,dsqrt,\n    brinc,\n@@ -175,6 +174,14 @@\n    htm\"\n   (const_string \"integer\"))\n \n+;; What data size does this instruction work on?\n+;; This is used for mul.\n+(define_attr \"size\" \"8,16,32,64\" (const_string \"32\"))\n+\n+;; Is this instruction record form (\"dot\", signed compare to 0, writing CR0)?\n+;; This is used for mul.\n+(define_attr \"dot\" \"no,yes\" (const_string \"no\"))\n+\n ;; Does this instruction sign-extend its result?\n ;; This is used for load insns.\n (define_attr \"sign_extend\" \"no,yes\" (const_string \"no\"))\n@@ -229,7 +236,9 @@\n ;; If this instruction is microcoded on the CELL processor\n ; The default for load extended, the recorded instructions and rotate/shifts by a variable is always microcoded\n (define_attr \"cell_micro\" \"not,conditional,always\"\n-  (if_then_else (ior (eq_attr \"type\" \"compare,delayed_compare,imul_compare,lmul_compare,var_shift_rotate,var_delayed_compare\")\n+  (if_then_else (ior (eq_attr \"type\" \"compare,delayed_compare,var_shift_rotate,var_delayed_compare\")\n+\t\t     (and (eq_attr \"type\" \"mul\")\n+\t\t\t  (eq_attr \"dot\" \"yes\"))\n \t\t     (and (eq_attr \"type\" \"load\")\n \t\t\t  (eq_attr \"sign_extend\" \"yes\")))\n \t\t(const_string \"always\")\n@@ -2665,12 +2674,13 @@\n   \"@\n    mullw %0,%1,%2\n    mulli %0,%1,%2\"\n-   [(set (attr \"type\")\n+   [(set_attr \"type\" \"mul\")\n+    (set (attr \"size\")\n       (cond [(match_operand:SI 2 \"s8bit_cint_operand\" \"\")\n-\t\t(const_string \"imul3\")\n+\t\t(const_string \"8\")\n              (match_operand:SI 2 \"short_cint_operand\" \"\")\n-\t\t(const_string \"imul2\")]\n-\t(const_string \"imul\")))])\n+\t\t(const_string \"16\")]\n+\t(const_string \"32\")))])\n \n (define_insn \"*mulsi3_internal1\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -2682,7 +2692,8 @@\n   \"@\n    mullw. %3,%1,%2\n    #\"\n-  [(set_attr \"type\" \"imul_compare\")\n+  [(set_attr \"type\" \"mul\")\n+   (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -2710,7 +2721,8 @@\n   \"@\n    mullw. %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"imul_compare\")\n+  [(set_attr \"type\" \"mul\")\n+   (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -6600,7 +6612,7 @@\n     ? \\\"mulhw %0,%1,%2\\;mullw %L0,%1,%2\\\"\n     : \\\"mulhw %L0,%1,%2\\;mullw %0,%1,%2\\\";\n }\n-  [(set_attr \"type\" \"imul\")\n+  [(set_attr \"type\" \"mul\")\n    (set_attr \"length\" \"8\")])\n \n (define_split\n@@ -6634,7 +6646,7 @@\n     ? \\\"mulhwu %0,%1,%2\\;mullw %L0,%1,%2\\\"\n     : \\\"mulhwu %L0,%1,%2\\;mullw %0,%1,%2\\\";\n }\"\n-  [(set_attr \"type\" \"imul\")\n+  [(set_attr \"type\" \"mul\")\n    (set_attr \"length\" \"8\")])\n \n (define_split\n@@ -6667,7 +6679,7 @@\n \t\t      (const_int 32))))]\n   \"\"\n   \"mulhw %0,%1,%2\"\n-  [(set_attr \"type\" \"imul\")])\n+  [(set_attr \"type\" \"mul\")])\n \n (define_insn \"umulsi3_highpart\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -6679,7 +6691,7 @@\n \t\t      (const_int 32))))]\n   \"\"\n   \"mulhwu %0,%1,%2\"\n-  [(set_attr \"type\" \"imul\")])\n+  [(set_attr \"type\" \"mul\")])\n \n ;; Shift by a variable amount is too complex to be worth open-coding.  We\n ;; just handle shifts by constants.\n@@ -6734,12 +6746,13 @@\n   \"@\n    mulld %0,%1,%2\n    mulli %0,%1,%2\"\n-   [(set (attr \"type\")\n+   [(set_attr \"type\" \"mul\")\n+    (set (attr \"size\")\n       (cond [(match_operand:SI 2 \"s8bit_cint_operand\" \"\")\n-\t\t(const_string \"imul3\")\n+\t\t(const_string \"8\")\n \t     (match_operand:SI 2 \"short_cint_operand\" \"\")\n-\t\t(const_string \"imul2\")]\n-\t(const_string \"lmul\")))])\n+\t\t(const_string \"16\")]\n+\t(const_string \"64\")))])\n \n (define_insn \"*muldi3_internal1\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -6751,7 +6764,9 @@\n   \"@\n    mulld. %3,%1,%2\n    #\"\n-  [(set_attr \"type\" \"lmul_compare\")\n+  [(set_attr \"type\" \"mul\")\n+   (set_attr \"size\" \"64\")\n+   (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -6779,7 +6794,9 @@\n   \"@\n    mulld. %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"lmul_compare\")\n+  [(set_attr \"type\" \"mul\")\n+   (set_attr \"size\" \"64\")\n+   (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -6807,7 +6824,8 @@\n \t\t      (const_int 64))))]\n   \"TARGET_POWERPC64\"\n   \"mulhd %0,%1,%2\"\n-  [(set_attr \"type\" \"lmul\")])\n+  [(set_attr \"type\" \"mul\")\n+   (set_attr \"size\" \"64\")])\n \n (define_insn \"umuldi3_highpart\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n@@ -6819,7 +6837,8 @@\n \t\t      (const_int 64))))]\n   \"TARGET_POWERPC64\"\n   \"mulhdu %0,%1,%2\"\n-  [(set_attr \"type\" \"lmul\")])\n+  [(set_attr \"type\" \"mul\")\n+   (set_attr \"size\" \"64\")])\n \n (define_expand \"mulditi3\"\n   [(set (match_operand:TI 0 \"gpc_reg_operand\")"}, {"sha": "76113e873afc0e63b2cbd5f321f51da27ca3e6b8", "filename": "gcc/config/rs6000/rs64.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Frs64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Frs64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs64.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -62,22 +62,26 @@\n   \"iu_rs64,iu_rs64,iu_rs64\")\n \n (define_insn_reservation \"rs64a-imul\" 20\n-  (and (eq_attr \"type\" \"imul,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"32\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"mciu_rs64*13\")\n \n (define_insn_reservation \"rs64a-imul2\" 12\n-  (and (eq_attr \"type\" \"imul2\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"16\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"mciu_rs64*5\")\n \n (define_insn_reservation \"rs64a-imul3\" 8\n-  (and (eq_attr \"type\" \"imul3\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"8\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"mciu_rs64*2\")\n \n (define_insn_reservation \"rs64a-lmul\" 34\n-  (and (eq_attr \"type\" \"lmul,lmul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n+       (eq_attr \"size\" \"64\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"mciu_rs64*34\")\n "}, {"sha": "21186a3a206cbc5534158f476b0da282e0c5fc18", "filename": "gcc/config/rs6000/titan.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Ftitan.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0528ed9e55edf892d0593696e28f483f409fe9f/gcc%2Fconfig%2Frs6000%2Ftitan.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ftitan.md?ref=e0528ed9e55edf892d0593696e28f483f409fe9f", "patch": "@@ -39,7 +39,7 @@\n   \"titan_issue,titan_fxu_sh\")\n \n (define_insn_reservation \"titan_imul\" 5\n-  (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n+  (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"cpu\" \"titan\"))       \n   \"titan_issue,titan_fxu_sh,nothing*5,titan_fxu_wb\")  \n "}]}