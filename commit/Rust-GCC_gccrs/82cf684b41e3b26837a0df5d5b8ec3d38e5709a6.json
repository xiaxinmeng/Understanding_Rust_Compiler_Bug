{"sha": "82cf684b41e3b26837a0df5d5b8ec3d38e5709a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJjZjY4NGI0MWUzYjI2ODM3YTBkZjVkNWI4ZWMzZDM4ZTU3MDlhNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-26T09:06:11Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-26T09:06:11Z"}, "message": "expr.h (ADD_PARM_SIZE): Cast INC to ssizetype.\n\n        * expr.h (ADD_PARM_SIZE): Cast INC to ssizetype.\n        (SUB_PARM_SIZE): Cast DEC to ssizetype.\n\nFrom-SVN: r51379", "tree": {"sha": "69de35592993a6d89279814c29921385cb6ce4cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69de35592993a6d89279814c29921385cb6ce4cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82cf684b41e3b26837a0df5d5b8ec3d38e5709a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82cf684b41e3b26837a0df5d5b8ec3d38e5709a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82cf684b41e3b26837a0df5d5b8ec3d38e5709a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82cf684b41e3b26837a0df5d5b8ec3d38e5709a6/comments", "author": null, "committer": null, "parents": [{"sha": "f36dea3c926a8e614411b2ba542479f3f8cb0c17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36dea3c926a8e614411b2ba542479f3f8cb0c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f36dea3c926a8e614411b2ba542479f3f8cb0c17"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "792c18c24238e1bf368b6e2b0bd9f44e74131fd1", "filename": "gcc/expr.h", "status": "modified", "additions": 24, "deletions": 17, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82cf684b41e3b26837a0df5d5b8ec3d38e5709a6/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82cf684b41e3b26837a0df5d5b8ec3d38e5709a6/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=82cf684b41e3b26837a0df5d5b8ec3d38e5709a6", "patch": "@@ -75,23 +75,30 @@ struct args_size\n \n /* Add the value of the tree INC to the `struct args_size' TO.  */\n \n-#define ADD_PARM_SIZE(TO, INC)\t\\\n-{ tree inc = (INC);\t\t\t\t\\\n-  if (host_integerp (inc, 0))\t\t\t\\\n-    (TO).constant += tree_low_cst (inc, 0);\t\\\n-  else if ((TO).var == 0)\t\t\t\\\n-    (TO).var = inc;\t\t\t\t\\\n-  else\t\t\t\t\t\t\\\n-    (TO).var = size_binop (PLUS_EXPR, (TO).var, inc); }\n-\n-#define SUB_PARM_SIZE(TO, DEC)\t\\\n-{ tree dec = (DEC);\t\t\t\t\\\n-  if (host_integerp (dec, 0))\t\t\t\\\n-    (TO).constant -= tree_low_cst (dec, 0);\t\\\n-  else if ((TO).var == 0)\t\t\t\\\n-    (TO).var = size_binop (MINUS_EXPR, ssize_int (0), dec); \\\n-  else\t\t\t\t\t\t\\\n-    (TO).var = size_binop (MINUS_EXPR, (TO).var, dec); }\n+#define ADD_PARM_SIZE(TO, INC)\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  tree inc = (INC);\t\t\t\t\t\\\n+  if (host_integerp (inc, 0))\t\t\t\t\\\n+    (TO).constant += tree_low_cst (inc, 0);\t\t\\\n+  else if ((TO).var == 0)\t\t\t\t\\\n+    (TO).var = inc;\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\\\n+    (TO).var = size_binop (PLUS_EXPR, (TO).var,\t\t\\\n+\t\t\t   convert (ssizetype, inc));\t\\\n+} while (0)\n+\n+#define SUB_PARM_SIZE(TO, DEC)\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  tree dec = (DEC);\t\t\t\t\t\\\n+  if (host_integerp (dec, 0))\t\t\t\t\\\n+    (TO).constant -= tree_low_cst (dec, 0);\t\t\\\n+  else if ((TO).var == 0)\t\t\t\t\\\n+    (TO).var = size_binop (MINUS_EXPR, ssize_int (0),\t\\\n+\t\t\t   convert (ssizetype, dec));\t\\\n+  else\t\t\t\t\t\t\t\\\n+    (TO).var = size_binop (MINUS_EXPR, (TO).var,\t\\\n+\t\t\t   convert (ssizetype, dec));\t\\\n+} while (0)\n \n /* Convert the implicit sum in a `struct args_size' into a tree\n    of type ssizetype.  */"}]}