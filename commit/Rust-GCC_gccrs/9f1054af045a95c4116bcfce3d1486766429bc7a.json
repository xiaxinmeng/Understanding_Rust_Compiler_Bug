{"sha": "9f1054af045a95c4116bcfce3d1486766429bc7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYxMDU0YWYwNDVhOTVjNDExNmJjZmNlM2QxNDg2NzY2NDI5YmM3YQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-15T18:42:38Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-15T18:42:38Z"}, "message": "re PR tree-optimization/21031 (Another missed forward propagation opportunity)\n\ngcc/\n\tPR tree-optimization/21031\n\t* tree-ssa-forwprop.c (ssa_name_defined_by_comparison_p): New.\n\t(forward_propagate_into_cond_1): Call it.  Forward propagate\n\tinteger-integer casts into COND_EXPRs.\n\ntestsuite/\n\tPR tree-optimization/21031\n\t* gcc.dg/tree-ssa/pr21031.c: New.\n\nFrom-SVN: r98199", "tree": {"sha": "6e55a9c5fe4cc1e5e873c3df45d21505ed4236ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e55a9c5fe4cc1e5e873c3df45d21505ed4236ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f1054af045a95c4116bcfce3d1486766429bc7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f1054af045a95c4116bcfce3d1486766429bc7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f1054af045a95c4116bcfce3d1486766429bc7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f1054af045a95c4116bcfce3d1486766429bc7a/comments", "author": null, "committer": null, "parents": [{"sha": "6ba40dd7ac0131712102aa4e31aa3e6a733f452f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba40dd7ac0131712102aa4e31aa3e6a733f452f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba40dd7ac0131712102aa4e31aa3e6a733f452f"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "2c6aa4331ecdf9845ab172d6d4d7d505a07366fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f1054af045a95c4116bcfce3d1486766429bc7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f1054af045a95c4116bcfce3d1486766429bc7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f1054af045a95c4116bcfce3d1486766429bc7a", "patch": "@@ -1,3 +1,10 @@\n+2005-04-15  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR tree-optimization/21031\n+\t* tree-ssa-forwprop.c (ssa_name_defined_by_comparison_p): New.\n+\t(forward_propagate_into_cond_1): Call it.  Forward propagate\n+\tinteger-integer casts into COND_EXPRs.\n+\n 2005-04-15  Dave Korn  <dave.korn@artimi.com>\n \n \t* gcc.c (default_compilers): Clarify obscure error message when"}, {"sha": "41a3508a90c5d60f35cfa69a26d3409190972ede", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f1054af045a95c4116bcfce3d1486766429bc7a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f1054af045a95c4116bcfce3d1486766429bc7a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f1054af045a95c4116bcfce3d1486766429bc7a", "patch": "@@ -1,3 +1,8 @@\n+2005-04-15  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR tree-optimization/21031\n+\t* gcc.dg/tree-ssa/pr21031.c: New.\n+\n 2005-04-15  Uros Bizjak  <uros@kss-loka.si>\n \n \tPR tree-optimization/21004"}, {"sha": "df200d564d34dd4e171cd8131bd05a75fc77d172", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr21031.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f1054af045a95c4116bcfce3d1486766429bc7a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21031.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f1054af045a95c4116bcfce3d1486766429bc7a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21031.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21031.c?ref=9f1054af045a95c4116bcfce3d1486766429bc7a", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/21031\n+\n+   Make sure that a != 0 is propagated into the \"if\" statement.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-forwprop1-details\" } */\n+\n+int\n+foo (int a)\n+{\n+  int b = a != 0;\n+  unsigned char c = b;\n+  if (c)\n+    return 1;\n+  else\n+    return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Replaced\" 2 \"forwprop1\"} } */\n+/* { dg-final { cleanup-tree-dump \"forwprop1\" } } */"}, {"sha": "a47d69ae7cc5fad3f9001d4a4901866eee82e7c2", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f1054af045a95c4116bcfce3d1486766429bc7a/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f1054af045a95c4116bcfce3d1486766429bc7a/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=9f1054af045a95c4116bcfce3d1486766429bc7a", "patch": "@@ -109,6 +109,23 @@ Boston, MA 02111-1307, USA.  */\n \n    This will (of course) be extended as other needs arise.  */\n \n+/* Given an SSA_NAME VAR, return true if and only if VAR is defined by\n+   a comparison.  */\n+\n+static bool\n+ssa_name_defined_by_comparison_p (tree var)\n+{\n+  tree def = SSA_NAME_DEF_STMT (var);\n+\n+  if (TREE_CODE (def) == MODIFY_EXPR)\n+    {\n+      tree rhs = TREE_OPERAND (def, 1);\n+      return COMPARISON_CLASS_P (rhs);\n+    }\n+\n+  return 0;\n+}\n+\n /* Forward propagate a single-use variable into COND once.  Return a\n    new condition if successful.  Return NULL_TREE otherwise.  */\n \n@@ -303,6 +320,12 @@ forward_propagate_into_cond_1 (tree cond, tree *test_var_p)\n \t      || (TREE_CODE (inner_type) == BOOLEAN_TYPE\n \t\t  && INTEGRAL_TYPE_P (outer_type)))\n \t    ;\n+\t  else if (INTEGRAL_TYPE_P (outer_type)\n+\t\t   && INTEGRAL_TYPE_P (inner_type)\n+\t\t   && TREE_CODE (TREE_OPERAND (def_rhs, 0)) == SSA_NAME\n+\t\t   && ssa_name_defined_by_comparison_p (TREE_OPERAND (def_rhs,\n+\t\t\t\t\t\t\t\t      0)))\n+\t    ;\n \t  else\n \t    return NULL_TREE;\n "}]}