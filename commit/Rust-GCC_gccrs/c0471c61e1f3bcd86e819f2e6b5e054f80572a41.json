{"sha": "c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "node_id": "C_kwDOANBUbNoAKGMwNDcxYzYxZTFmM2JjZDg2ZTgxOWYyZTZiNWUwNTRmODA1NzJhNDE", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-07-26T19:26:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-22T15:01:50Z"}, "message": "[Ada] Fix conformance errors and erroneous code\n\ngcc/ada/\n\n\t* contracts.adb, einfo-utils.adb, einfo-utils.ads, exp_ch7.adb,\n\texp_ch9.adb, exp_disp.adb, exp_prag.adb, exp_smem.adb,\n\texp_util.adb, freeze.adb, sem_aggr.adb, sem_attr.adb,\n\tsem_ch8.adb, sem_prag.ads, sem_util.adb, sem_util.ads: Fix\n\tconformance errors.\n\t* errout.adb, erroutc.adb: Remove pragmas Suppress.\n\t* err_vars.ads: Initialize variables that were previously being\n\tread uninitialized.", "tree": {"sha": "0713b5f73937f95455f4a901fa09b193f9dbcd77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0713b5f73937f95455f4a901fa09b193f9dbcd77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "490a987e05da85710ca68f4f30948ec904d745e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/490a987e05da85710ca68f4f30948ec904d745e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/490a987e05da85710ca68f4f30948ec904d745e9"}], "stats": {"total": 168, "additions": 65, "deletions": 103}, "files": [{"sha": "705f197148ccd6674317cd8515a75f17386d88d9", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -3440,7 +3440,7 @@ package body Contracts is\n    -- Get_Postcond_Enabled --\n    --------------------------\n \n-   function Get_Postcond_Enabled (Subp : Entity_Id) return Node_Id is\n+   function Get_Postcond_Enabled (Subp : Entity_Id) return Entity_Id is\n       Decl : Node_Id;\n    begin\n       Decl :=\n@@ -3465,7 +3465,7 @@ package body Contracts is\n    ------------------------------------\n \n    function Get_Result_Object_For_Postcond\n-     (Subp : Entity_Id) return Node_Id\n+     (Subp : Entity_Id) return Entity_Id\n    is\n       Decl : Node_Id;\n    begin\n@@ -3490,7 +3490,7 @@ package body Contracts is\n    -- Get_Return_Success_For_Postcond --\n    -------------------------------------\n \n-   function Get_Return_Success_For_Postcond (Subp : Entity_Id) return Node_Id\n+   function Get_Return_Success_For_Postcond (Subp : Entity_Id) return Entity_Id\n    is\n       Decl : Node_Id;\n    begin"}, {"sha": "4e5f43436f4cdcedc24fab645e40c30ca61f54c2", "filename": "gcc/ada/einfo-utils.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Feinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Feinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -701,7 +701,7 @@ package body Einfo.Utils is\n    -- Entry_Index_Type --\n    ----------------------\n \n-   function Entry_Index_Type (Id : E) return N is\n+   function Entry_Index_Type (Id : E) return E is\n    begin\n       pragma Assert (Ekind (Id) = E_Entry_Family);\n       return Etype (Discrete_Subtype_Definition (Parent (Id)));\n@@ -1745,7 +1745,7 @@ package body Einfo.Utils is\n    -- Link_Entities --\n    -------------------\n \n-   procedure Link_Entities (First : Entity_Id; Second : Node_Id) is\n+   procedure Link_Entities (First, Second : Entity_Id) is\n    begin\n       if Present (Second) then\n          Set_Prev_Entity (Second, First);  --  First <-- Second"}, {"sha": "8046722442b0e2b1a1346306b85947bd13bcc796", "filename": "gcc/ada/einfo-utils.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Feinfo-utils.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Feinfo-utils.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.ads?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -625,7 +625,7 @@ package Einfo.Utils is\n \n    --  WARNING: There is a matching C declaration of this subprogram in fe.h\n \n-   procedure Link_Entities (First : Entity_Id; Second : Entity_Id);\n+   procedure Link_Entities (First, Second : Entity_Id);\n    --  Link entities First and Second in one entity chain.\n    --\n    --  NOTE: No updates are done to the First_Entity and Last_Entity fields"}, {"sha": "819d1ad9ad351a6ce8240a17ccd8bb25a4d9d1df", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -105,12 +105,15 @@ package Err_Vars is\n    --  of the following global variables to appropriate values before making a\n    --  call to one of the error message routines with a string containing the\n    --  insertion character to get the value inserted in an appropriate format.\n+   --\n+   --  Some of these are initialized below, because they are read before being\n+   --  set by clients.\n \n    Error_Msg_Col : Column_Number;\n    --  Column for @ insertion character in message\n \n    Error_Msg_Uint_1 : Uint;\n-   Error_Msg_Uint_2 : Uint;\n+   Error_Msg_Uint_2 : Uint := No_Uint;\n    --  Uint values for ^ insertion characters in message\n \n    --  WARNING: There is a matching C declaration of these variables in fe.h\n@@ -119,21 +122,21 @@ package Err_Vars is\n    --  Source location for # insertion character in message\n \n    Error_Msg_Name_1 : Name_Id;\n-   Error_Msg_Name_2 : Name_Id;\n-   Error_Msg_Name_3 : Name_Id;\n+   Error_Msg_Name_2 : Name_Id := No_Name;\n+   Error_Msg_Name_3 : Name_Id := No_Name;\n    --  Name_Id values for % insertion characters in message\n \n    Error_Msg_File_1 : File_Name_Type;\n-   Error_Msg_File_2 : File_Name_Type;\n-   Error_Msg_File_3 : File_Name_Type;\n+   Error_Msg_File_2 : File_Name_Type := No_File;\n+   Error_Msg_File_3 : File_Name_Type := No_File;\n    --  File_Name_Type values for { insertion characters in message\n \n    Error_Msg_Unit_1 : Unit_Name_Type;\n-   Error_Msg_Unit_2 : Unit_Name_Type;\n+   Error_Msg_Unit_2 : Unit_Name_Type := No_Unit_Name;\n    --  Unit_Name_Type values for $ insertion characters in message\n \n    Error_Msg_Node_1 : Node_Id;\n-   Error_Msg_Node_2 : Node_Id;\n+   Error_Msg_Node_2 : Node_Id := Empty;\n    --  Node_Id values for & insertion characters in message\n \n    Error_Msg_Warn : Boolean;"}, {"sha": "05a826682e0481470252591f908e3db3d03700dd", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -3602,15 +3602,9 @@ package body Errout is\n       end if;\n \n       --  The following assignment ensures that a second ampersand insertion\n-      --  character will correspond to the Error_Msg_Node_2 parameter. We\n-      --  suppress possible validity checks in case operating in -gnatVa mode,\n-      --  and Error_Msg_Node_2 is not needed and has not been set.\n+      --  character will correspond to the Error_Msg_Node_2 parameter.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_Node_1 := Error_Msg_Node_2;\n-      end;\n+      Error_Msg_Node_1 := Error_Msg_Node_2;\n    end Set_Msg_Insertion_Node;\n \n    --------------------------------------\n@@ -3790,15 +3784,9 @@ package body Errout is\n       end if;\n \n       --  The following assignment ensures that a second percent insertion\n-      --  character will correspond to the Error_Msg_Unit_2 parameter. We\n-      --  suppress possible validity checks in case operating in -gnatVa mode,\n-      --  and Error_Msg_Unit_2 is not needed and has not been set.\n+      --  character will correspond to the Error_Msg_Unit_2 parameter.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_Unit_1 := Error_Msg_Unit_2;\n-      end;\n+      Error_Msg_Unit_1 := Error_Msg_Unit_2;\n    end Set_Msg_Insertion_Unit_Name;\n \n    ------------------"}, {"sha": "9e67b929cb7703fd158993a7b479a402d8455c87", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 12, "deletions": 36, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -1119,17 +1119,11 @@ package body Erroutc is\n       end if;\n \n       --  The following assignments ensure that the second and third {\n-      --  insertion characters will correspond to the Error_Msg_File_2 and\n-      --  Error_Msg_File_3 values and We suppress possible validity checks in\n-      --  case operating in -gnatVa mode, and Error_Msg_File_2 or\n-      --  Error_Msg_File_3 is not needed and has not been set.\n+      --  insertion characters will correspond to the Error_Msg_File_2\n+      --  and Error_Msg_File_3 values.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_File_1 := Error_Msg_File_2;\n-         Error_Msg_File_2 := Error_Msg_File_3;\n-      end;\n+      Error_Msg_File_1 := Error_Msg_File_2;\n+      Error_Msg_File_2 := Error_Msg_File_3;\n    end Set_Msg_Insertion_File_Name;\n \n    -----------------------------------\n@@ -1299,16 +1293,10 @@ package body Erroutc is\n \n       --  The following assignments ensure that the second and third percent\n       --  insertion characters will correspond to the Error_Msg_Name_2 and\n-      --  Error_Msg_Name_3 as required. We suppress possible validity checks in\n-      --  case operating in -gnatVa mode, and Error_Msg_Name_1/2 is not needed\n-      --  and has not been set.\n+      --  Error_Msg_Name_3 as required.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_Name_1 := Error_Msg_Name_2;\n-         Error_Msg_Name_2 := Error_Msg_Name_3;\n-      end;\n+      Error_Msg_Name_1 := Error_Msg_Name_2;\n+      Error_Msg_Name_2 := Error_Msg_Name_3;\n    end Set_Msg_Insertion_Name;\n \n    ------------------------------------\n@@ -1334,16 +1322,10 @@ package body Erroutc is\n \n       --  The following assignments ensure that the second and third % or %%\n       --  insertion characters will correspond to the Error_Msg_Name_2 and\n-      --  Error_Msg_Name_3 values and We suppress possible validity checks in\n-      --  case operating in -gnatVa mode, and Error_Msg_Name_2 or\n-      --  Error_Msg_Name_3 is not needed and has not been set.\n+      --  Error_Msg_Name_3 values.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_Name_1 := Error_Msg_Name_2;\n-         Error_Msg_Name_2 := Error_Msg_Name_3;\n-      end;\n+      Error_Msg_Name_1 := Error_Msg_Name_2;\n+      Error_Msg_Name_2 := Error_Msg_Name_3;\n    end Set_Msg_Insertion_Name_Literal;\n \n    -------------------------------------\n@@ -1427,15 +1409,9 @@ package body Erroutc is\n       end loop;\n \n       --  The following assignment ensures that a second caret insertion\n-      --  character will correspond to the Error_Msg_Uint_2 parameter. We\n-      --  suppress possible validity checks in case operating in -gnatVa mode,\n-      --  and Error_Msg_Uint_2 is not needed and has not been set.\n+      --  character will correspond to the Error_Msg_Uint_2 parameter.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_Uint_1 := Error_Msg_Uint_2;\n-      end;\n+      Error_Msg_Uint_1 := Error_Msg_Uint_2;\n    end Set_Msg_Insertion_Uint;\n \n    -----------------"}, {"sha": "71cad989dc110251716e4bc798a7b183c5355632", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -486,11 +486,11 @@ package body Exp_Ch7 is\n    function Make_Deep_Proc\n      (Prim  : Final_Primitives;\n       Typ   : Entity_Id;\n-      Stmts : List_Id) return Node_Id;\n+      Stmts : List_Id) return Entity_Id;\n    --  This function generates the tree for Deep_Initialize, Deep_Adjust or\n-   --  Deep_Finalize procedures according to the first parameter, these\n-   --  procedures operate on the type Typ. The Stmts parameter gives the body\n-   --  of the procedure.\n+   --  Deep_Finalize procedures according to the first parameter. These\n+   --  procedures operate on the type Typ. The Stmts parameter gives the\n+   --  body of the procedure.\n \n    function Make_Deep_Array_Body\n      (Prim : Final_Primitives;"}, {"sha": "dec41eed2f80323f1a11b9c7951666435a59dff3", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -145,7 +145,7 @@ package body Exp_Ch9 is\n \n    function Build_Corresponding_Record\n      (N    : Node_Id;\n-      Ctyp : Node_Id;\n+      Ctyp : Entity_Id;\n       Loc  : Source_Ptr) return Node_Id;\n    --  Common to tasks and protected types. Copy discriminant specifications,\n    --  build record declaration. N is the type declaration, Ctyp is the\n@@ -1583,9 +1583,9 @@ package body Exp_Ch9 is\n    --------------------------------\n \n    function Build_Corresponding_Record\n-    (N    : Node_Id;\n-     Ctyp : Entity_Id;\n-     Loc  : Source_Ptr) return Node_Id\n+     (N    : Node_Id;\n+      Ctyp : Entity_Id;\n+      Loc  : Source_Ptr) return Node_Id\n    is\n       Rec_Ent  : constant Entity_Id :=\n                    Make_Defining_Identifier\n@@ -14867,7 +14867,7 @@ package body Exp_Ch9 is\n       Actuals : List_Id;\n       Formals : List_Id;\n       Decls   : List_Id;\n-      Stmts   : List_Id) return Node_Id\n+      Stmts   : List_Id) return Entity_Id\n    is\n       Actual    : Entity_Id;\n       Expr      : Node_Id := Empty;"}, {"sha": "cfe6279aaf21a97acc3174cddaa23380a2930fbb", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -348,7 +348,7 @@ package body Exp_Disp is\n    -- Build_Static_Dispatch_Tables --\n    ----------------------------------\n \n-   procedure Build_Static_Dispatch_Tables (N : Entity_Id) is\n+   procedure Build_Static_Dispatch_Tables (N : Node_Id) is\n       Target_List : List_Id;\n \n       procedure Build_Dispatch_Tables (List : List_Id);"}, {"sha": "55842f70f579862954ba4aa27b3329d5e63080f7", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -752,10 +752,10 @@ package body Exp_Prag is\n       --  value of which is Init_Val if present or null if not.\n \n       function Build_Simple_Declaration_With_Default\n-         (Decl_Id     : Entity_Id;\n-          Init_Val    : Entity_Id;\n-          Typ         : Entity_Id;\n-          Default_Val : Entity_Id) return Node_Id;\n+        (Decl_Id     : Entity_Id;\n+         Init_Val    : Node_Id;\n+         Typ         : Node_Id;\n+         Default_Val : Node_Id) return Node_Id;\n       --  Build a declaration the Defining_Identifier of which is Decl_Id, the\n       --  Object_Definition of which is Typ, the value of which is Init_Val if\n       --  present or Default otherwise.\n@@ -983,7 +983,7 @@ package body Exp_Prag is\n       function Build_Simple_Declaration_With_Default\n         (Decl_Id     : Entity_Id;\n          Init_Val    : Node_Id;\n-         Typ         : Entity_Id;\n+         Typ         : Node_Id;\n          Default_Val : Node_Id) return Node_Id\n       is\n          Value : Node_Id := Init_Val;\n@@ -2862,7 +2862,7 @@ package body Exp_Prag is\n \n    procedure Expand_Pragma_Subprogram_Variant\n      (Prag       : Node_Id;\n-      Subp_Id    : Node_Id;\n+      Subp_Id    : Entity_Id;\n       Body_Decls : List_Id)\n    is\n       Curr_Decls : List_Id;"}, {"sha": "216065f5be9e71aebbe8ae33476661d130b44838", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -86,7 +86,7 @@ package body Exp_Smem is\n \n    function Build_Shared_Var_Proc_Call\n      (Loc : Source_Ptr;\n-      E   : Node_Id;\n+      E   : Entity_Id;\n       N   : Name_Id) return Node_Id;\n    --  Build a call to support procedure N for shared object E (provided by the\n    --  instance of System.Shared_Storage.Shared_Var_Procs associated to E)."}, {"sha": "807afb2c5808b8369c9dd9a521b6017ee2951428", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -4914,7 +4914,7 @@ package body Exp_Util is\n    -- Convert_To_Actual_Subtype --\n    -------------------------------\n \n-   procedure Convert_To_Actual_Subtype (Exp : Entity_Id) is\n+   procedure Convert_To_Actual_Subtype (Exp : Node_Id) is\n       Act_ST : Entity_Id;\n \n    begin\n@@ -7048,7 +7048,7 @@ package body Exp_Util is\n    -- Get_Index_Subtype --\n    -----------------------\n \n-   function Get_Index_Subtype (N : Node_Id) return Node_Id is\n+   function Get_Index_Subtype (N : Node_Id) return Entity_Id is\n       P_Type : Entity_Id := Etype (Prefix (N));\n       Indx   : Node_Id;\n       J      : Int;"}, {"sha": "5b7607d051dced20d0146930caa05aaa67f1968f", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -284,11 +284,11 @@ package body Freeze is\n    --  Full_View or Corresponding_Record_Type.\n \n    procedure Warn_Overlay (Expr : Node_Id; Typ : Entity_Id; Nam : Node_Id);\n-   --  Expr is the expression for an address clause for entity Nam whose type\n-   --  is Typ. If Typ has a default initialization, and there is no explicit\n-   --  initialization in the source declaration, check whether the address\n-   --  clause might cause overlaying of an entity, and emit a warning on the\n-   --  side effect that the initialization will cause.\n+   --  Expr is the expression for an address clause for the entity denoted by\n+   --  Nam whose type is Typ. If Typ has a default initialization, and there is\n+   --  no explicit initialization in the source declaration, check whether the\n+   --  address clause might cause overlaying of an entity, and emit a warning\n+   --  on the side effect that the initialization will cause.\n \n    -------------------------------\n    -- Adjust_Esize_For_Alignment --\n@@ -10081,7 +10081,7 @@ package body Freeze is\n    -- Warn_Overlay --\n    ------------------\n \n-   procedure Warn_Overlay (Expr : Node_Id; Typ : Entity_Id; Nam : Entity_Id) is\n+   procedure Warn_Overlay (Expr : Node_Id; Typ : Entity_Id; Nam : Node_Id) is\n       Ent : constant Entity_Id := Entity (Nam);\n       --  The object to which the address clause applies\n "}, {"sha": "23d5ba22615408ecbb7d5271cf9cb26314541caa", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -365,7 +365,7 @@ package body Sem_Aggr is\n    --  to the expansion phase. As an optimization, if the discrete choice\n    --  specifies a single value we do not delay resolution.\n \n-   function Array_Aggr_Subtype (N : Node_Id; Typ : Node_Id) return Entity_Id;\n+   function Array_Aggr_Subtype (N : Node_Id; Typ : Entity_Id) return Entity_Id;\n    --  This routine returns the type or subtype of an array aggregate.\n    --\n    --    N is the array aggregate node whose type we return."}, {"sha": "d954d46aaad8147991cf78c493cd4bb0f13efe6c", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -12469,7 +12469,7 @@ package body Sem_Attr is\n    function Stream_Attribute_Available\n      (Typ          : Entity_Id;\n       Nam          : TSS_Name_Type;\n-      Partial_View : Node_Id := Empty) return Boolean\n+      Partial_View : Entity_Id := Empty) return Boolean\n    is\n       Etyp : Entity_Id := Typ;\n "}, {"sha": "70ad21ccc242197f5f86f87b408b134959d9a0da", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -426,12 +426,10 @@ package body Sem_Ch8 is\n    --  body at the point of freezing will not work. Subp is the subprogram\n    --  for which N provides the Renaming_As_Body.\n \n-   procedure Check_In_Previous_With_Clause\n-     (N   : Node_Id;\n-      Nam : Node_Id);\n+   procedure Check_In_Previous_With_Clause (N, Nam : Node_Id);\n    --  N is a use_package clause and Nam the package name, or N is a use_type\n    --  clause and Nam is the prefix of the type name. In either case, verify\n-   --  that the package is visible at that point in the context: either  it\n+   --  that the package is visible at that point in the context: either it\n    --  appears in a previous with_clause, or because it is a fully qualified\n    --  name and the root ancestor appears in a previous with_clause.\n \n@@ -4670,10 +4668,7 @@ package body Sem_Ch8 is\n    -- Check_In_Previous_With_Clause --\n    -----------------------------------\n \n-   procedure Check_In_Previous_With_Clause\n-     (N   : Node_Id;\n-      Nam : Entity_Id)\n-   is\n+   procedure Check_In_Previous_With_Clause (N, Nam : Node_Id) is\n       Pack : constant Entity_Id := Entity (Original_Node (Nam));\n       Item : Node_Id;\n       Par  : Node_Id;"}, {"sha": "3d7b00ca55707de3b8cc2fef9d328c7720902e10", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -429,7 +429,7 @@ package Sem_Prag is\n \n    function Get_Argument\n      (Prag       : Node_Id;\n-      Context_Id : Node_Id := Empty) return Node_Id;\n+      Context_Id : Entity_Id := Empty) return Node_Id;\n    --  Obtain the argument of pragma Prag depending on context and the nature\n    --  of the pragma. The argument is extracted in the following manner:\n    --"}, {"sha": "4a98b8bf64ed7ce4e7b8bd4d6b012a556335d9e9", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -24709,7 +24709,7 @@ package body Sem_Util is\n       -- Visit_Node --\n       ----------------\n \n-      procedure Visit_Node (N : Node_Or_Entity_Id) is\n+      procedure Visit_Node (N : Node_Id) is\n       begin\n          pragma Assert (Nkind (N) not in N_Entity);\n "}, {"sha": "79db0b47c144864bf79d4d4ae331a7800b71c278", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0471c61e1f3bcd86e819f2e6b5e054f80572a41/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=c0471c61e1f3bcd86e819f2e6b5e054f80572a41", "patch": "@@ -356,7 +356,7 @@ package Sem_Util is\n    --  carries the name of the reference discriminant.\n \n    function Build_Overriding_Spec\n-     (Op  : Node_Id;\n+     (Op  : Entity_Id;\n       Typ : Entity_Id) return Node_Id;\n    --  Build a subprogram specification for the wrapper of an inherited\n    --  operation with a modified pre- or postcondition (See AI12-0113)."}]}