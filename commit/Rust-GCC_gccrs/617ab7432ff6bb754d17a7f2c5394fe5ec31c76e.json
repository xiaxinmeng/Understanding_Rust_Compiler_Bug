{"sha": "617ab7432ff6bb754d17a7f2c5394fe5ec31c76e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE3YWI3NDMyZmY2YmI3NTRkMTdhN2YyYzUzOTRmZTVlYzMxYzc2ZQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-05-05T20:15:30Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-05-05T20:15:30Z"}, "message": "* dwarf.h: Remove.\n\nFrom-SVN: r147131", "tree": {"sha": "dba6804d7164ab78f241eaa24c4a301df68f6ede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dba6804d7164ab78f241eaa24c4a301df68f6ede"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/617ab7432ff6bb754d17a7f2c5394fe5ec31c76e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617ab7432ff6bb754d17a7f2c5394fe5ec31c76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/617ab7432ff6bb754d17a7f2c5394fe5ec31c76e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617ab7432ff6bb754d17a7f2c5394fe5ec31c76e/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf016de89035d04e7b8ac5db5de08e69eaa3960b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf016de89035d04e7b8ac5db5de08e69eaa3960b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf016de89035d04e7b8ac5db5de08e69eaa3960b"}], "stats": {"total": 322, "additions": 4, "deletions": 318}, "files": [{"sha": "817e6d389f9e5b1f6bc58ce29c05eea7b6eb6d56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617ab7432ff6bb754d17a7f2c5394fe5ec31c76e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617ab7432ff6bb754d17a7f2c5394fe5ec31c76e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=617ab7432ff6bb754d17a7f2c5394fe5ec31c76e", "patch": "@@ -1,3 +1,7 @@\n+2009-05-05  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* dwarf.h: Remove.\n+\n 2009-05-05  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* Makefile.in (enable_plugin, plugin_includedir): New."}, {"sha": "1350e669be530f6f62121cca274574e180c5ce18", "filename": "gcc/dwarf.h", "status": "removed", "additions": 0, "deletions": 318, "changes": 318, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf016de89035d04e7b8ac5db5de08e69eaa3960b/gcc%2Fdwarf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf016de89035d04e7b8ac5db5de08e69eaa3960b/gcc%2Fdwarf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf.h?ref=bf016de89035d04e7b8ac5db5de08e69eaa3960b", "patch": "@@ -1,318 +0,0 @@\n-/* Declarations and definitions of codes relating to the DWARF symbolic\n-   debugging information format.\n-\n-   Written by Ron Guilmette (rfg@netcom.com)\n-\n-Copyright (C) 1992, 2004, 2007 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* This file is derived from the DWARF specification (a public document)\n-   Revision 1.0.1 (April 8, 1992) developed by the UNIX International\n-   Programming Languages Special Interest Group (UI/PLSIG) and distributed\n-   by UNIX International.  Copies of this specification are available from\n-   UNIX International, 20 Waterview Boulevard, Parsippany, NJ, 07054.\n-*/\n-\n-/* Tag names and codes.  */\n-\n-enum dwarf_tag {\n-    TAG_padding\t\t\t= 0x0000,\n-    TAG_array_type\t\t= 0x0001,\n-    TAG_class_type\t\t= 0x0002,\n-    TAG_entry_point\t\t= 0x0003,\n-    TAG_enumeration_type\t= 0x0004,\n-    TAG_formal_parameter\t= 0x0005,\n-    TAG_global_subroutine\t= 0x0006,\n-    TAG_global_variable\t\t= 0x0007,\n-    \t\t\t\t/* 0x0008 -- reserved */\n-\t\t\t\t/* 0x0009 -- reserved */\n-    TAG_label\t\t\t= 0x000a,\n-    TAG_lexical_block\t\t= 0x000b,\n-    TAG_local_variable\t\t= 0x000c,\n-    TAG_member\t\t\t= 0x000d,\n-\t\t\t\t/* 0x000e -- reserved */\n-    TAG_pointer_type\t\t= 0x000f,\n-    TAG_reference_type\t\t= 0x0010,\n-    TAG_compile_unit\t\t= 0x0011,\n-    TAG_string_type\t\t= 0x0012,\n-    TAG_structure_type\t\t= 0x0013,\n-    TAG_subroutine\t\t= 0x0014,\n-    TAG_subroutine_type\t\t= 0x0015,\n-    TAG_typedef\t\t\t= 0x0016,\n-    TAG_union_type\t\t= 0x0017,\n-    TAG_unspecified_parameters\t= 0x0018,\n-    TAG_variant\t\t\t= 0x0019,\n-    TAG_common_block\t\t= 0x001a,\n-    TAG_common_inclusion\t= 0x001b,\n-    TAG_inheritance\t\t= 0x001c,\n-    TAG_inlined_subroutine\t= 0x001d,\n-    TAG_module\t\t\t= 0x001e,\n-    TAG_ptr_to_member_type\t= 0x001f,\n-    TAG_set_type\t\t= 0x0020,\n-    TAG_subrange_type\t\t= 0x0021,\n-    TAG_with_stmt\t\t= 0x0022,\n-\n-    /* GNU extensions */\n-\n-    TAG_format_label\t\t= 0x8000,  /* for FORTRAN 77 and Fortran 90 */\n-    TAG_namelist\t\t= 0x8001,  /* For Fortran 90 */\n-    TAG_function_template\t= 0x8002,  /* for C++ */\n-    TAG_class_template\t\t= 0x8003   /* for C++ */\n-};\n-\n-#define TAG_lo_user\t0x8000  /* implementation-defined range start */\n-#define TAG_hi_user\t0xffff  /* implementation-defined range end */\n-#define TAG_source_file TAG_compile_unit  /* for backward compatibility */\n-\n-/* Form names and codes.  */\n-\n-enum dwarf_form {\n-    FORM_ADDR\t= 0x1,\n-    FORM_REF\t= 0x2,\n-    FORM_BLOCK2\t= 0x3,\n-    FORM_BLOCK4\t= 0x4,\n-    FORM_DATA2\t= 0x5,\n-    FORM_DATA4\t= 0x6,\n-    FORM_DATA8\t= 0x7,\n-    FORM_STRING\t= 0x8\n-};\n-\n-/* Attribute names and codes.  */\n-\n-enum dwarf_attribute {\n-    AT_sibling\t\t\t= (0x0010|FORM_REF),\n-    AT_location\t\t\t= (0x0020|FORM_BLOCK2),\n-    AT_name\t\t\t= (0x0030|FORM_STRING),\n-    AT_fund_type\t\t= (0x0050|FORM_DATA2),\n-    AT_mod_fund_type\t\t= (0x0060|FORM_BLOCK2),\n-    AT_user_def_type\t\t= (0x0070|FORM_REF),\n-    AT_mod_u_d_type\t\t= (0x0080|FORM_BLOCK2),\n-    AT_ordering\t\t\t= (0x0090|FORM_DATA2),\n-    AT_subscr_data\t\t= (0x00a0|FORM_BLOCK2),\n-    AT_byte_size\t\t= (0x00b0|FORM_DATA4),\n-    AT_bit_offset\t\t= (0x00c0|FORM_DATA2),\n-    AT_bit_size\t\t\t= (0x00d0|FORM_DATA4),\n-\t\t\t\t/* (0x00e0|FORM_xxxx) -- reserved */\n-    AT_element_list\t\t= (0x00f0|FORM_BLOCK4),\n-    AT_stmt_list\t\t= (0x0100|FORM_DATA4),\n-    AT_low_pc\t\t\t= (0x0110|FORM_ADDR),\n-    AT_high_pc\t\t\t= (0x0120|FORM_ADDR),\n-    AT_language\t\t\t= (0x0130|FORM_DATA4),\n-    AT_member\t\t\t= (0x0140|FORM_REF),\n-    AT_discr\t\t\t= (0x0150|FORM_REF),\n-    AT_discr_value\t\t= (0x0160|FORM_BLOCK2),\n-\t\t\t\t/* (0x0170|FORM_xxxx) -- reserved */\n-\t\t\t\t/* (0x0180|FORM_xxxx) -- reserved */\n-    AT_string_length\t\t= (0x0190|FORM_BLOCK2),\n-    AT_common_reference\t\t= (0x01a0|FORM_REF),\n-    AT_comp_dir\t\t\t= (0x01b0|FORM_STRING),\n-        AT_const_value_string\t= (0x01c0|FORM_STRING),\n-        AT_const_value_data2\t= (0x01c0|FORM_DATA2),\n-        AT_const_value_data4\t= (0x01c0|FORM_DATA4),\n-        AT_const_value_data8\t= (0x01c0|FORM_DATA8),\n-        AT_const_value_block2\t= (0x01c0|FORM_BLOCK2),\n-        AT_const_value_block4\t= (0x01c0|FORM_BLOCK4),\n-    AT_containing_type\t\t= (0x01d0|FORM_REF),\n-        AT_default_value_addr\t= (0x01e0|FORM_ADDR),\n-        AT_default_value_data2\t= (0x01e0|FORM_DATA2),\n-        AT_default_value_data4\t= (0x01e0|FORM_DATA4),\n-        AT_default_value_data8\t= (0x01e0|FORM_DATA8),\n-        AT_default_value_string\t= (0x01e0|FORM_STRING),\n-    AT_friends\t\t\t= (0x01f0|FORM_BLOCK2),\n-    AT_inline\t\t\t= (0x0200|FORM_STRING),\n-    AT_is_optional\t\t= (0x0210|FORM_STRING),\n-        AT_lower_bound_ref\t= (0x0220|FORM_REF),\n-        AT_lower_bound_data2\t= (0x0220|FORM_DATA2),\n-        AT_lower_bound_data4\t= (0x0220|FORM_DATA4),\n-        AT_lower_bound_data8\t= (0x0220|FORM_DATA8),\n-    AT_private\t\t\t= (0x0240|FORM_STRING),\n-    AT_producer\t\t\t= (0x0250|FORM_STRING),\n-    AT_program\t\t\t= (0x0230|FORM_STRING),\n-    AT_protected\t\t= (0x0260|FORM_STRING),\n-    AT_prototyped\t\t= (0x0270|FORM_STRING),\n-    AT_public\t\t\t= (0x0280|FORM_STRING),\n-    AT_pure_virtual\t\t= (0x0290|FORM_STRING),\n-    AT_return_addr\t\t= (0x02a0|FORM_BLOCK2),\n-    AT_abstract_origin\t\t= (0x02b0|FORM_REF),\n-    AT_start_scope\t\t= (0x02c0|FORM_DATA4),\n-    AT_stride_size\t\t= (0x02e0|FORM_DATA4),\n-        AT_upper_bound_ref\t= (0x02f0|FORM_REF),\n-        AT_upper_bound_data2\t= (0x02f0|FORM_DATA2),\n-        AT_upper_bound_data4\t= (0x02f0|FORM_DATA4),\n-        AT_upper_bound_data8\t= (0x02f0|FORM_DATA8),\n-    AT_virtual\t\t\t= (0x0300|FORM_STRING),\n-\n-    /* GNU extensions.  */\n-\n-    AT_sf_names\t\t\t= (0x8000|FORM_DATA4),\n-    AT_src_info\t\t\t= (0x8010|FORM_DATA4),\n-    AT_mac_info\t\t\t= (0x8020|FORM_DATA4),\n-    AT_src_coords\t\t= (0x8030|FORM_DATA4),\n-    AT_body_begin\t\t= (0x8040|FORM_ADDR),\n-    AT_body_end\t\t\t= (0x8050|FORM_ADDR)\n-};\n-\n-#define AT_lo_user\t0x2000\t/* implementation-defined range start */\n-#define AT_hi_user\t0x3ff0\t/* implementation-defined range end */\n-\n-/* Location atom names and codes.  */\n-\n-enum dwarf_location_atom {\n-    OP_REG\t= 0x01,\n-    OP_BASEREG\t= 0x02,\n-    OP_ADDR\t= 0x03,\n-    OP_CONST\t= 0x04,\n-    OP_DEREF2\t= 0x05,\n-    OP_DEREF4\t= 0x06,\n-    OP_ADD\t= 0x07,\n-\n-    /* GNU extensions.  */\n-\n-    OP_MULT\t= 0x80\n-};\n-\n-#define OP_LO_USER\t0x80  /* implementation-defined range start */\n-#define OP_HI_USER\t0xff  /* implementation-defined range end */\n-\n-/* Fundamental type names and codes.  */\n-\n-enum dwarf_fundamental_type {\n-    FT_char\t\t= 0x0001,\n-    FT_signed_char\t= 0x0002,\n-    FT_unsigned_char\t= 0x0003,\n-    FT_short\t\t= 0x0004,\n-    FT_signed_short\t= 0x0005,\n-    FT_unsigned_short\t= 0x0006,\n-    FT_integer\t\t= 0x0007,\n-    FT_signed_integer\t= 0x0008,\n-    FT_unsigned_integer\t= 0x0009,\n-    FT_long\t\t= 0x000a,\n-    FT_signed_long\t= 0x000b,\n-    FT_unsigned_long\t= 0x000c,\n-    FT_pointer\t\t= 0x000d,  /* an alias for (void *) */\n-    FT_float\t\t= 0x000e,\n-    FT_dbl_prec_float\t= 0x000f,\n-    FT_ext_prec_float\t= 0x0010,  /* breaks \"classic\" svr4 SDB */\n-    FT_complex\t\t= 0x0011,  /* breaks \"classic\" svr4 SDB */\n-    FT_dbl_prec_complex\t= 0x0012,  /* breaks \"classic\" svr4 SDB */\n-\t\t\t/* 0x0013 -- reserved */\n-    FT_void\t\t= 0x0014,\n-    FT_boolean\t\t= 0x0015,  /* breaks \"classic\" svr4 SDB */\n-    FT_ext_prec_complex\t= 0x0016,  /* breaks \"classic\" svr4 SDB */\n-    FT_label\t\t= 0x0017,\n-  \n-    /* GNU extensions\n-       The low order byte must indicate the size (in bytes) for the type.\n-       All of these types will probably break \"classic\" svr4 SDB.  */\n-\n-    FT_long_long\t= 0x8008,\n-    FT_signed_long_long\t= 0x8108,\n-    FT_unsigned_long_long = 0x8208,\n-\n-    FT_int8\t\t= 0x9001,\n-    FT_signed_int8\t= 0x9101,\n-    FT_unsigned_int8\t= 0x9201,\n-    FT_int16\t\t= 0x9302,\n-    FT_signed_int16\t= 0x9402,\n-    FT_unsigned_int16\t= 0x9502,\n-    FT_int32\t\t= 0x9604,\n-    FT_signed_int32\t= 0x9704,\n-    FT_unsigned_int32\t= 0x9804,\n-    FT_int64\t\t= 0x9908,\n-    FT_signed_int64\t= 0x9a08,\n-    FT_unsigned_int64\t= 0x9b08,\n-    FT_int128\t\t= 0x9c10,\n-    FT_signed_int128\t= 0x9d10,\n-    FT_unsigned_int128\t= 0x9e10,\n-\n-    FT_real32\t\t= 0xa004,\n-    FT_real64\t\t= 0xa108,\n-    FT_real96\t\t= 0xa20c,\n-    FT_real128\t\t= 0xa310\n-};\n-\n-#define FT_lo_user\t0x8000  /* implementation-defined range start */\n-#define FT_hi_user\t0xffff  /* implementation defined range end */\n-\n-/* Type modifier names and codes.  */\n-\n-enum dwarf_type_modifier {\n-    MOD_pointer_to\t= 0x01,\n-    MOD_reference_to\t= 0x02,\n-    MOD_const\t\t= 0x03,\n-    MOD_volatile\t= 0x04\n-};\n-\n-#define MOD_lo_user\t0x80  /* implementation-defined range start */\n-#define MOD_hi_user\t0xff  /* implementation-defined range end */\n-\n-/* Array ordering names and codes.  */\n-\n-enum dwarf_array_dim_ordering {\n-    ORD_row_major\t= 0,\n-    ORD_col_major\t= 1\n-};\n-\n-/* Array subscript format names and codes.  */\n-\n-enum dwarf_subscr_data_formats {\n-    FMT_FT_C_C\t= 0x0,\n-    FMT_FT_C_X\t= 0x1,\n-    FMT_FT_X_C\t= 0x2,\n-    FMT_FT_X_X\t= 0x3,\n-    FMT_UT_C_C\t= 0x4,\n-    FMT_UT_C_X\t= 0x5,\n-    FMT_UT_X_C\t= 0x6,\n-    FMT_UT_X_X\t= 0x7,\n-    FMT_ET\t= 0x8\n-};\n-\n-/* Derived from above for ease of use.  */\n-\n-#define FMT_CODE(_FUNDAMENTAL_TYPE_P, _LB_CONST_P, _UB_CONST_P) \\\n- (((_FUNDAMENTAL_TYPE_P) ? 0 : 4)\t\\\n-  | ((_LB_CONST_P) ? 0 : 2)\t\t\\\n-  | ((_UB_CONST_P) ? 0 : 1))\n-\n-/* Source language names and codes.  */\n-\n-enum dwarf_source_language {\n-    LANG_C89\t\t= 0x00000001,\n-    LANG_C\t\t= 0x00000002,\n-    LANG_ADA83\t\t= 0x00000003,\n-    LANG_C_PLUS_PLUS\t= 0x00000004,\n-    LANG_COBOL74\t= 0x00000005,\n-    LANG_COBOL85\t= 0x00000006,\n-    LANG_FORTRAN77\t= 0x00000007,\n-    LANG_FORTRAN90\t= 0x00000008,\n-    LANG_PASCAL83\t= 0x00000009,\n-    LANG_MODULA2\t= 0x0000000a,\n-    LANG_JAVA\t\t= 0x0000000b\n-};\n-\n-#define LANG_lo_user\t0x00008000  /* implementation-defined range start */\n-#define LANG_hi_user\t0x0000ffff  /* implementation-defined range end */\n-\n-/* Names and codes for GNU \"macinfo\" extension.  */\n-\n-enum dwarf_macinfo_record_type {\n-    MACINFO_start\t= 's',\n-    MACINFO_resume\t= 'r',\n-    MACINFO_define\t= 'd',\n-    MACINFO_undef\t= 'u'\n-};"}]}