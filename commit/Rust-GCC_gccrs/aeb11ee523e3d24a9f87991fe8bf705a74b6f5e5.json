{"sha": "aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWViMTFlZTUyM2UzZDI0YTlmODc5OTFmZThiZjcwNWE3NGI2ZjVlNQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2003-03-13T03:54:27Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2003-03-13T03:54:27Z"}, "message": "ecos.exp (gcsec-1.c): Find linker used by gcc.\n\n\t* gcc.dg/special/ecos.exp (gcsec-1.c): Find linker used by gcc.\n\t* gcc.dg/old-style-asm-1.c (dg-final): Add hpux label alternative to\n\tregular expression.\n\t* gcc.dg/funcorder.c (dg-final): Check for \"link_error,%r\" on hppa*-*-*.\n\t* gcc.dg/inline-1.c (dg-final): Check for \"xyzzy?,%r\" on hppa*-*-*.\n\nFrom-SVN: r64299", "tree": {"sha": "7e15e03e3fcd8171dc97598004f07f6e29bf4a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e15e03e3fcd8171dc97598004f07f6e29bf4a8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/comments", "author": null, "committer": null, "parents": [{"sha": "63b025a5c38f0a57caa10e93b78db8311f343778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b025a5c38f0a57caa10e93b78db8311f343778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63b025a5c38f0a57caa10e93b78db8311f343778"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "6492c098c0c1042e8702ca6401c2031121de8fb6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5", "patch": "@@ -1,3 +1,11 @@\n+2003-03-12  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* gcc.dg/special/ecos.exp (gcsec-1.c): Find linker used by gcc.\n+\t* gcc.dg/old-style-asm-1.c (dg-final): Add hpux label alternative to\n+\tregular expression.\n+\t* gcc.dg/funcorder.c (dg-final): Check for \"link_error,%r\" on hppa*-*-*.\n+\t* gcc.dg/inline-1.c (dg-final): Check for \"xyzzy?,%r\" on hppa*-*-*.\n+\n 2003-03-12  Daniel Jacobowitz  <drow@mvista.com>\n \n \t* gcc.c-torture/execute/20030224-2.c: New test."}, {"sha": "b064d1cc46701d6b898caede0cad9898d2ad687b", "filename": "gcc/testsuite/gcc.dg/funcorder.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncorder.c?ref=aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -funit-at-a-time\" } */\n-/* { dg-final { scan-assembler-not \"link_error\" } } */\n+/* { dg-final { if [ istarget hppa*-*-* ] { scan-assembler-not \"link_error,%r\" } else { scan-assembler-not \"link_error\" } } } */\n /*  In unit-at-time the functions should be assembled in order\n     e q t main, so we realize that they are pure.  */\n  "}, {"sha": "4dce611d91283dcd020e4ea8d419b098c1d799ea", "filename": "gcc/testsuite/gcc.dg/inline-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/gcc%2Ftestsuite%2Fgcc.dg%2Finline-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/gcc%2Ftestsuite%2Fgcc.dg%2Finline-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finline-1.c?ref=aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5", "patch": "@@ -1,7 +1,7 @@\n /* Verify that DECL_INLINE gets copied between DECLs properly.  */\n /* { dg-do compile } */\n /* { dg-options \"-O1\" } */\n-/* { dg-final { scan-assembler-not \"xyzzy\" } } */\n+/* { dg-final { if [ istarget hppa*-*-* ] { scan-assembler-not \"xyzzy?,%r\" } else { scan-assembler-not \"xyzzy\" } } } */\n \n /* Test that declaration followed by definition inlines.  */\n static inline int xyzzy0 (int);"}, {"sha": "c33707e609c07a771493aeea82f560b365366235", "filename": "gcc/testsuite/gcc.dg/old-style-asm-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/gcc%2Ftestsuite%2Fgcc.dg%2Fold-style-asm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/gcc%2Ftestsuite%2Fgcc.dg%2Fold-style-asm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fold-style-asm-1.c?ref=aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5", "patch": "@@ -24,4 +24,4 @@ void foo(int v)\n    because for example it depends on the target macro\n    ASM_GENERATE_INTERNAL_LABEL to generate a name matching this regexp (as\n    with the default definition).  */\n-/* { dg-final { scan-assembler \"L(:)?2\" } } */\n+/* { dg-final { scan-assembler \"L(:|\\\\\\$0*)?2\" } } */"}, {"sha": "835233f1d4b631f889b5ba11050140e0bc022de4", "filename": "gcc/testsuite/gcc.dg/special/ecos.exp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp?ref=aeb11ee523e3d24a9f87991fe8bf705a74b6f5e5", "patch": "@@ -155,7 +155,9 @@ if { [ check_weak_available ] == 1 } {\n # gcsec-1.c\n ###########\n \n-set ld_output [ remote_exec host \"[ find_ld ]\" \"--help\" ]\n+# Check if the ld used by gcc supports --gc-sections.\n+set gcc_ld [lindex [gcc_target_compile \"-print-prog-name=ld\" \"\" \"none\" \"\"] 0]\n+set ld_output [remote_exec host \"$gcc_ld\" \"--help\"]\n \n # AIX gld supports garbage collection. But AIX gcc does not support \n # -ffunction-sections or -fdata-sections."}]}