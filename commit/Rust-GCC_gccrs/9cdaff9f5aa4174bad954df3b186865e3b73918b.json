{"sha": "9cdaff9f5aa4174bad954df3b186865e3b73918b", "node_id": "C_kwDOANBUbNoAKDljZGFmZjlmNWFhNDE3NGJhZDk1NGRmM2IxODY4NjVlM2I3MzkxOGI", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-10-20T15:13:16Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-10-22T09:13:06Z"}, "message": "Constify GetUsedSubstArgs\n\nThis mapper class does not need mutability and can easily be made const\nenforcing ownership.", "tree": {"sha": "118fe53c2fd096f0f2d701abf5da6d2c3895a169", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/118fe53c2fd096f0f2d701abf5da6d2c3895a169"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cdaff9f5aa4174bad954df3b186865e3b73918b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cdaff9f5aa4174bad954df3b186865e3b73918b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cdaff9f5aa4174bad954df3b186865e3b73918b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cdaff9f5aa4174bad954df3b186865e3b73918b/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eea0076f235e854da519da50f0af4e99d31634b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eea0076f235e854da519da50f0af4e99d31634b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eea0076f235e854da519da50f0af4e99d31634b"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "b7c23fb19c3d768c1d8c9abc63a934baf3af2d23", "filename": "gcc/rust/typecheck/rust-substitution-mapper.h", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cdaff9f5aa4174bad954df3b186865e3b73918b/gcc%2Frust%2Ftypecheck%2Frust-substitution-mapper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cdaff9f5aa4174bad954df3b186865e3b73918b/gcc%2Frust%2Ftypecheck%2Frust-substitution-mapper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-substitution-mapper.h?ref=9cdaff9f5aa4174bad954df3b186865e3b73918b", "patch": "@@ -317,51 +317,51 @@ class SubstMapperFromExisting : public TyTy::TyVisitor\n   TyTy::BaseType *resolved;\n };\n \n-class GetUsedSubstArgs : public TyTy::TyVisitor\n+class GetUsedSubstArgs : public TyTy::TyConstVisitor\n {\n public:\n-  static TyTy::SubstitutionArgumentMappings From (TyTy::BaseType *from)\n+  static TyTy::SubstitutionArgumentMappings From (const TyTy::BaseType *from)\n   {\n     GetUsedSubstArgs mapper;\n     from->accept_vis (mapper);\n     return mapper.args;\n   }\n \n-  void visit (TyTy::FnType &type) override\n+  void visit (const TyTy::FnType &type) override\n   {\n     args = type.get_substitution_arguments ();\n   }\n \n-  void visit (TyTy::ADTType &type) override\n+  void visit (const TyTy::ADTType &type) override\n   {\n     args = type.get_substitution_arguments ();\n   }\n \n-  void visit (TyTy::ClosureType &type) override\n+  void visit (const TyTy::ClosureType &type) override\n   {\n     args = type.get_substitution_arguments ();\n   }\n \n-  void visit (TyTy::InferType &) override {}\n-  void visit (TyTy::TupleType &) override {}\n-  void visit (TyTy::FnPtr &) override {}\n-  void visit (TyTy::ArrayType &) override {}\n-  void visit (TyTy::BoolType &) override {}\n-  void visit (TyTy::IntType &) override {}\n-  void visit (TyTy::UintType &) override {}\n-  void visit (TyTy::FloatType &) override {}\n-  void visit (TyTy::USizeType &) override {}\n-  void visit (TyTy::ISizeType &) override {}\n-  void visit (TyTy::ErrorType &) override {}\n-  void visit (TyTy::CharType &) override {}\n-  void visit (TyTy::ReferenceType &) override {}\n-  void visit (TyTy::PointerType &) override {}\n-  void visit (TyTy::ParamType &) override {}\n-  void visit (TyTy::StrType &) override {}\n-  void visit (TyTy::NeverType &) override {}\n-  void visit (TyTy::PlaceholderType &) override {}\n-  void visit (TyTy::ProjectionType &) override {}\n-  void visit (TyTy::DynamicObjectType &) override {}\n+  void visit (const TyTy::InferType &) override {}\n+  void visit (const TyTy::TupleType &) override {}\n+  void visit (const TyTy::FnPtr &) override {}\n+  void visit (const TyTy::ArrayType &) override {}\n+  void visit (const TyTy::BoolType &) override {}\n+  void visit (const TyTy::IntType &) override {}\n+  void visit (const TyTy::UintType &) override {}\n+  void visit (const TyTy::FloatType &) override {}\n+  void visit (const TyTy::USizeType &) override {}\n+  void visit (const TyTy::ISizeType &) override {}\n+  void visit (const TyTy::ErrorType &) override {}\n+  void visit (const TyTy::CharType &) override {}\n+  void visit (const TyTy::ReferenceType &) override {}\n+  void visit (const TyTy::PointerType &) override {}\n+  void visit (const TyTy::ParamType &) override {}\n+  void visit (const TyTy::StrType &) override {}\n+  void visit (const TyTy::NeverType &) override {}\n+  void visit (const TyTy::PlaceholderType &) override {}\n+  void visit (const TyTy::ProjectionType &) override {}\n+  void visit (const TyTy::DynamicObjectType &) override {}\n \n private:\n   GetUsedSubstArgs () : args (TyTy::SubstitutionArgumentMappings::error ()) {}"}, {"sha": "7cd99f24d3d940b65a11f28bd5bffa6c89f5d09c", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cdaff9f5aa4174bad954df3b186865e3b73918b/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cdaff9f5aa4174bad954df3b186865e3b73918b/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=9cdaff9f5aa4174bad954df3b186865e3b73918b", "patch": "@@ -884,7 +884,7 @@ class SubstitutionRef\n \n   bool was_substituted () const { return !needs_substitution (); }\n \n-  SubstitutionArgumentMappings get_substitution_arguments ()\n+  SubstitutionArgumentMappings get_substitution_arguments () const\n   {\n     return used_arguments;\n   }"}]}