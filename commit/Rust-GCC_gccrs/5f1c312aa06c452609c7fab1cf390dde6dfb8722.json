{"sha": "5f1c312aa06c452609c7fab1cf390dde6dfb8722", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYxYzMxMmFhMDZjNDUyNjA5YzdmYWIxY2YzOTBkZGU2ZGZiODcyMg==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-08-24T01:44:00Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-08-24T01:44:00Z"}, "message": "java-tree.h (flag_extraneous_semicolon): New extern.\n\n2000-08-08  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* java-tree.h (flag_extraneous_semicolon): New extern.\n\t* lang-options.h: (-Wextraneous-semicolon): New option.\n\t* lang.c (flag_redundant): Fixed typo in leading comment.\n\t(flag_extraneous_semicolon): New global.\n\t(lang_decode_option): Set `flag_extraneous_semicolon' when\n\t-Wall. Decode `-Wextraneous-semicolon'.\n\t* parse.y (type_declaration:): Removed `SC_TK' hack, added\n\t`empty_statement' rule.\n\t(class_body_declaration): Likewise.\n\t(method_body:): Accept `;' as a method body.\n\t(static_initializer:): Removed `SC_TK' hack.\n\t(constructor_block_end:): Likewise.\n\t(empty_statement:): Report deprecated empty declaration. Fixes\n\tgcj/295\n\n(Fix to gcj/295: http://sources.redhat.com/ml/java-prs/2000-q3/msg00095.html)\n\nFrom-SVN: r35929", "tree": {"sha": "cd7ce89a24dfddf5ffd3d4ad167f1f4b902ed92c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd7ce89a24dfddf5ffd3d4ad167f1f4b902ed92c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f1c312aa06c452609c7fab1cf390dde6dfb8722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1c312aa06c452609c7fab1cf390dde6dfb8722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f1c312aa06c452609c7fab1cf390dde6dfb8722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1c312aa06c452609c7fab1cf390dde6dfb8722/comments", "author": null, "committer": null, "parents": [{"sha": "e15a68e7bc302166f1f90c83fe0ef64fe0d45820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15a68e7bc302166f1f90c83fe0ef64fe0d45820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e15a68e7bc302166f1f90c83fe0ef64fe0d45820"}], "stats": {"total": 60, "additions": 45, "deletions": 15}, "files": [{"sha": "1addb289e19ebe0a410c616c5c99158e65d0d1b7", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1c312aa06c452609c7fab1cf390dde6dfb8722/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1c312aa06c452609c7fab1cf390dde6dfb8722/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5f1c312aa06c452609c7fab1cf390dde6dfb8722", "patch": "@@ -66,6 +66,23 @@ Sun Aug 13 09:41:49 2000  Anthony Green  <green@redhat.com>\n \t`case' statement.\n \t(patch_assignment): Set DECL_INITIAL on integral final local.\n \n+2000-08-08  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* java-tree.h (flag_extraneous_semicolon): New extern.\n+\t* lang-options.h: (-Wextraneous-semicolon): New option.\n+\t* lang.c (flag_redundant): Fixed typo in leading comment.\n+\t(flag_extraneous_semicolon): New global.\n+\t(lang_decode_option): Set `flag_extraneous_semicolon' when\n+\t-Wall. Decode `-Wextraneous-semicolon'.\n+\t* parse.y (type_declaration:): Removed `SC_TK' hack, added\n+\t`empty_statement' rule.\n+\t(class_body_declaration): Likewise.\n+\t(method_body:): Accept `;' as a method body.\n+\t(static_initializer:): Removed `SC_TK' hack.\n+\t(constructor_block_end:): Likewise.\n+\t(empty_statement:): Report deprecated empty declaration. Fixes\n+\tgcj/295\n+\n 2000-08-07  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (build_dot_class_method_invocation): Changed parameter"}, {"sha": "0dd57eab59bf55b5c948ca78107137c993d989fa", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1c312aa06c452609c7fab1cf390dde6dfb8722/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1c312aa06c452609c7fab1cf390dde6dfb8722/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=5f1c312aa06c452609c7fab1cf390dde6dfb8722", "patch": "@@ -141,6 +141,10 @@ extern int flag_emit_class_files;\n \n extern int flag_jni;\n \n+/* When non zero, report the now deprecated empty statements.  */\n+\n+extern int flag_extraneous_semicolon;\n+\n /* When non zero, we emit xref strings. Values of the flag for xref\n    backends are defined in xref.h.  */\n "}, {"sha": "630e6d8a1bd1e34e9c72a730e0b40584b0c04e56", "filename": "gcc/java/lang-options.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1c312aa06c452609c7fab1cf390dde6dfb8722/gcc%2Fjava%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1c312aa06c452609c7fab1cf390dde6dfb8722/gcc%2Fjava%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang-options.h?ref=5f1c312aa06c452609c7fab1cf390dde6dfb8722", "patch": "@@ -51,3 +51,4 @@ DEFINE_LANG_NAME (\"Java\")\n   { \"-Wredundant-modifiers\", \n     \"Warn if modifiers are specified when not necessary\"},\n   { \"-Wunsupported-jdk11\", \"Warn if `final' local variables are specified\"},\n+  { \"-Wextraneous-semicolon\", \"Warn if deprecated empty statements are found\"},"}, {"sha": "ae038967c68191a8ec1d0b37003b115832623b71", "filename": "gcc/java/lang.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1c312aa06c452609c7fab1cf390dde6dfb8722/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1c312aa06c452609c7fab1cf390dde6dfb8722/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=5f1c312aa06c452609c7fab1cf390dde6dfb8722", "patch": "@@ -98,7 +98,7 @@ int flag_emit_xref = 0;\n /* When non zero, -Wall was turned on.  */\n int flag_wall = 0;\n \n-/* When non zero,  check for redundant modifier uses.  */\n+/* When non zero, check for redundant modifier uses.  */\n int flag_redundant = 0;\n \n /* When non zero, warns about overridings that don't occur.  */\n@@ -121,6 +121,9 @@ int flag_hash_synchronization;\n    JNI, not CNI.  */\n int flag_jni = 0;\n \n+/* When non zero, report the now deprecated empty statements.  */\n+int flag_extraneous_semicolon;\n+\n /* From gcc/flags.h, and indicates if exceptions are turned on or not.  */\n \n extern int flag_new_exceptions;\n@@ -256,6 +259,7 @@ lang_decode_option (argc, argv)\n     {\n       flag_wall = 1;\n       flag_redundant = 1;\n+      flag_extraneous_semicolon = 1;\n       /* When -Wall given, enable -Wunused.  We do this because the C\n \t compiler does it, and people expect it.  */\n       set_Wunused (1);\n@@ -274,6 +278,12 @@ lang_decode_option (argc, argv)\n       return 1;\n     }\n \n+  if (strcmp (p, \"-Wextraneous-semicolon\") == 0)\n+    {\n+      flag_extraneous_semicolon = 1;\n+      return 1;\n+    }\n+\n   if (strcmp (p, \"-MD\") == 0)\n     {\n       jcf_dependency_init (1);"}, {"sha": "dcebab9d01e358d2a3cc07788483a4311e01d6ec", "filename": "gcc/java/parse.y", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1c312aa06c452609c7fab1cf390dde6dfb8722/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1c312aa06c452609c7fab1cf390dde6dfb8722/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=5f1c312aa06c452609c7fab1cf390dde6dfb8722", "patch": "@@ -755,8 +755,7 @@ type_declaration:\n \t\t{ end_class_declaration (0); }\n |\tinterface_declaration\n \t\t{ end_class_declaration (0); }\n-|\tSC_TK\n-\t\t{ $$ = NULL; }\n+|\tempty_statement\n |\terror\n \t\t{\n \t\t  YYERROR_NOW;\n@@ -880,13 +879,12 @@ class_body_declaration:\n \n class_member_declaration:\n \tfield_declaration\n-|\tfield_declaration SC_TK\n-\t\t{ $$ = $1; }\n |\tmethod_declaration\n |\tclass_declaration\t/* Added, JDK1.1 inner classes */\n \t\t{ end_class_declaration (1); }\n |\tinterface_declaration\t/* Added, JDK1.1 inner interfaces */\n \t\t{ end_class_declaration (1); }\n+|\tempty_statement\n ;\n \n /* 19.8.2 Productions from 8.3: Field Declarations  */\n@@ -1085,9 +1083,7 @@ class_type_list:\n \n method_body:\n \tblock\n-|\tblock SC_TK\n-|\tSC_TK\n-\t\t{ $$ = NULL_TREE; } /* Probably not the right thing to do. */\n+|\tSC_TK { $$ = NULL_TREE; }\n ;\n \n /* 19.8.4 Productions from 8.5: Static Initializers  */\n@@ -1097,11 +1093,6 @@ static_initializer:\n \t\t  TREE_CHAIN ($2) = CPC_STATIC_INITIALIZER_STMT (ctxp);\n \t\t  SET_CPC_STATIC_INITIALIZER_STMT (ctxp, $2);\n \t\t}\n-|\tstatic block SC_TK\t/* Shouldn't be here. FIXME */\n-\t\t{\n-\t\t  TREE_CHAIN ($2) = CPC_STATIC_INITIALIZER_STMT (ctxp);\n-\t\t  SET_CPC_STATIC_INITIALIZER_STMT (ctxp, $2);\n-\t\t}\n ;\n \n static:\t\t\t\t/* Test lval.sub_token here */\n@@ -1166,7 +1157,7 @@ constructor_body:\n \n constructor_block_end:\n \tblock_end\n-|\tblock_end SC_TK\n+;\n \n /* Error recovery for that rule moved down expression_statement: rule.  */\n explicit_constructor_invocation:\n@@ -1397,7 +1388,14 @@ statement_without_trailing_substatement:\n \n empty_statement:\n \tSC_TK\n-\t\t{ $$ = empty_stmt_node; }\n+\t\t{ \n+\t\t  if (flag_extraneous_semicolon)\n+\t\t    {\n+\t\t      EXPR_WFL_SET_LINECOL (wfl_operator, lineno, -1);\n+\t\t      parse_warning_context (wfl_operator, \"An empty declaration is a deprecated feature that should not be used\");\n+\t\t    }\n+\t\t  $$ = empty_stmt_node;\n+\t\t}\n ;\n \n label_decl:"}]}