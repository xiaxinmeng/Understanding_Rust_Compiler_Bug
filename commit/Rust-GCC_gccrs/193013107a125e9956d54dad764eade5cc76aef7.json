{"sha": "193013107a125e9956d54dad764eade5cc76aef7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkzMDEzMTA3YTEyNWU5OTU2ZDU0ZGFkNzY0ZWFkZTVjYzc2YWVmNw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-02-05T23:35:32Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-02-05T23:35:32Z"}, "message": "(CEIL): Delete.\n\n(restore_referenced_regs): New var NUMREGS.  Pass NUMREGS to\ninsert_save_restore instead of using using CEIL.\n\nFrom-SVN: r3427", "tree": {"sha": "b01b3087751db7c482360a71aa3449a65e41ca92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b01b3087751db7c482360a71aa3449a65e41ca92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/193013107a125e9956d54dad764eade5cc76aef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/193013107a125e9956d54dad764eade5cc76aef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/193013107a125e9956d54dad764eade5cc76aef7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/193013107a125e9956d54dad764eade5cc76aef7/comments", "author": null, "committer": null, "parents": [{"sha": "0b298be41774d1999726d9e4f3a5547403ca41c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b298be41774d1999726d9e4f3a5547403ca41c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b298be41774d1999726d9e4f3a5547403ca41c9"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "3ecbd249a6cd9d6a76ad9001c0927c8da4980a24", "filename": "gcc/caller-save.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/193013107a125e9956d54dad764eade5cc76aef7/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/193013107a125e9956d54dad764eade5cc76aef7/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=193013107a125e9956d54dad764eade5cc76aef7", "patch": "@@ -28,8 +28,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"reload.h\"\n #include \"expr.h\"\n \n-#define CEIL(x,y) (((x) + (y) - 1) / (y))\n-\n /* Modes for each hard register that we can save.  The smallest mode is wide\n    enough to save the entire contents of the register.  When saving the\n    register because it is live we first try to save in multi-register modes.\n@@ -604,12 +602,13 @@ restore_referenced_regs (x, insn, insn_mode)\n \n       else if (regno < FIRST_PSEUDO_REGISTER)\n \t{\n-\t  int endregno = regno + HARD_REGNO_NREGS (regno, GET_MODE (x));\n+\t  int numregs = MIN (HARD_REGNO_NREGS (regno, GET_MODE (x)),\n+\t\t\t     MOVE_MAX / UNITS_PER_WORD);\n+\t  int endregno = regno + numregs;\n \n \t  for (i = regno; i < endregno; i++)\n \t    if (TEST_HARD_REG_BIT (hard_regs_need_restore, i))\n-\t      i += insert_save_restore (insn, 0, i, insn_mode, \n-\t\t   CEIL (GET_MODE_SIZE (GET_MODE (x)), UNITS_PER_WORD));\n+\t      i += insert_save_restore (insn, 0, i, insn_mode, numregs);\n \t}\n \n       return;"}]}