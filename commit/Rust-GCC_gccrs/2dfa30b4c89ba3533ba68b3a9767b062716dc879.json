{"sha": "2dfa30b4c89ba3533ba68b3a9767b062716dc879", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRmYTMwYjRjODliYTM1MzNiYTY4YjNhOTc2N2IwNjI3MTZkYzg3OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-10-26T15:02:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-10-26T15:02:47Z"}, "message": "* call.c (build_over_call): Use argarray[0] for 'this' argument.\n\nFrom-SVN: r165968", "tree": {"sha": "39790dd276afc2ee13f2f3be039aa21d4ce70dad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39790dd276afc2ee13f2f3be039aa21d4ce70dad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dfa30b4c89ba3533ba68b3a9767b062716dc879", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dfa30b4c89ba3533ba68b3a9767b062716dc879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dfa30b4c89ba3533ba68b3a9767b062716dc879", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dfa30b4c89ba3533ba68b3a9767b062716dc879/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d70a5179425c0874bac72143dd859f4addc26756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70a5179425c0874bac72143dd859f4addc26756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d70a5179425c0874bac72143dd859f4addc26756"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "749582ba254f1bee2a452d40a80cc5e1e8ae6255", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dfa30b4c89ba3533ba68b3a9767b062716dc879/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dfa30b4c89ba3533ba68b3a9767b062716dc879/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2dfa30b4c89ba3533ba68b3a9767b062716dc879", "patch": "@@ -1,5 +1,7 @@\n 2010-10-26  Jason Merrill  <jason@redhat.com>\n \n+\t* call.c (build_over_call): Use argarray[0] for 'this' argument.\n+\n \t* decl.c (finish_function): Don't look at function_depth.\n \n 2010-10-25  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>"}, {"sha": "4b36ab0fade55af3c17c48231a2f46595b1ef327", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dfa30b4c89ba3533ba68b3a9767b062716dc879/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dfa30b4c89ba3533ba68b3a9767b062716dc879/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=2dfa30b4c89ba3533ba68b3a9767b062716dc879", "patch": "@@ -5964,9 +5964,7 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t INIT_EXPR to collapse the temp into our target.  Otherwise, if the\n \t ctor is trivial, do a bitwise copy with a simple TARGET_EXPR for a\n \t temp or an INIT_EXPR otherwise.  */\n-      fa = (cand->first_arg != NULL_TREE\n-\t    ? cand->first_arg\n-\t    : VEC_index (tree, args, 0));\n+      fa = argarray[0];\n       if (integer_zerop (fa))\n \t{\n \t  if (TREE_CODE (arg) == TARGET_EXPR)\n@@ -6041,6 +6039,7 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \n       return val;\n     }\n+  /* FIXME handle trivial default constructor and destructor, too.  */\n \n   if (!already_used)\n     mark_used (fn);"}]}