{"sha": "65ea7e282a589f270eef21342e66395e1fe2ef35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVlYTdlMjgyYTU4OWYyNzBlZWYyMTM0MmU2NjM5NWUxZmUyZWYzNQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-29T11:29:21Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-29T11:29:21Z"}, "message": "spu-protos.h: Do not include rtl.h.\n\n\t* config/spu/spu-protos.h: Do not include rtl.h.  Protect\n\tRTL specific prototypes with #ifdef RTX_CODE.\n\t* config/spu/spu-c.c: Include c-common.h instead of c-tree.h.\n\t* config/spu/t-spu-elf: Fix dependencies.\n\nFrom-SVN: r160022", "tree": {"sha": "67adecc6d77d36a29572f6ca3c881f325b328cf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67adecc6d77d36a29572f6ca3c881f325b328cf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65ea7e282a589f270eef21342e66395e1fe2ef35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65ea7e282a589f270eef21342e66395e1fe2ef35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65ea7e282a589f270eef21342e66395e1fe2ef35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65ea7e282a589f270eef21342e66395e1fe2ef35/comments", "author": null, "committer": null, "parents": [{"sha": "54da01d2765fd577121202285760010b74def40b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54da01d2765fd577121202285760010b74def40b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54da01d2765fd577121202285760010b74def40b"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "adfd11d37475185fba84b93fa5237c552a6584b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ea7e282a589f270eef21342e66395e1fe2ef35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ea7e282a589f270eef21342e66395e1fe2ef35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65ea7e282a589f270eef21342e66395e1fe2ef35", "patch": "@@ -1,3 +1,10 @@\n+2010-05-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* config/spu/spu-protos.h: Do not include rtl.h.  Protect\n+\tRTL specific prototypes with #ifdef RTX_CODE.\n+\t* config/spu/spu-c.c: Include c-common.h instead of c-tree.h.\n+\t* config/spu/t-spu-elf: Fix dependencies.\n+\n 2010-05-29  Mike Stump  <mikestump@comcast.net>\n \n \t* Makefile.in (build/gencondmd.o): Be sure to use GTM_H instead of"}, {"sha": "a4f2274d92d11addb4562f0cc11ff31b28c2069a", "filename": "gcc/config/spu/spu-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ea7e282a589f270eef21342e66395e1fe2ef35/gcc%2Fconfig%2Fspu%2Fspu-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ea7e282a589f270eef21342e66395e1fe2ef35/gcc%2Fconfig%2Fspu%2Fspu-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu-c.c?ref=65ea7e282a589f270eef21342e66395e1fe2ef35", "patch": "@@ -20,7 +20,7 @@\n #include \"tm.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n-#include \"c-tree.h\"\n+#include \"c-common.h\"\n #include \"c-pragma.h\"\n #include \"tm_p.h\"\n #include \"langhooks.h\""}, {"sha": "eae6badf192537a40ed0b5d25ddff6e498047677", "filename": "gcc/config/spu/spu-protos.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ea7e282a589f270eef21342e66395e1fe2ef35/gcc%2Fconfig%2Fspu%2Fspu-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ea7e282a589f270eef21342e66395e1fe2ef35/gcc%2Fconfig%2Fspu%2Fspu-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu-protos.h?ref=65ea7e282a589f270eef21342e66395e1fe2ef35", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n \n    This file is free software; you can redistribute it and/or modify it under\n    the terms of the GNU General Public License as published by the Free\n@@ -17,8 +18,6 @@\n #ifndef _SPU_PROTOS_\n #define _SPU_PROTOS_\n \n-#include \"rtl.h\"\n-\n extern void spu_cpu_cpp_builtins (struct cpp_reader * pfile);\n extern void builtin_define_std (const char *);\n extern void spu_optimization_options (int level, int size);\n@@ -31,7 +30,6 @@ extern int spu_expand_block_move (rtx * ops);\n extern void spu_emit_branch_or_set (int is_set, rtx cmp, rtx * operands);\n extern int spu_emit_vector_cond_expr (rtx, rtx, rtx, rtx, rtx, rtx);\n extern HOST_WIDE_INT const_double_to_hwint (rtx x);\n-extern rtx hwint_to_const_double (enum machine_mode mode, HOST_WIDE_INT v);\n extern void print_operand_address (FILE * file, register rtx addr);\n extern void print_operand (FILE * file, rtx x, int code);\n extern int spu_split_immediate (rtx * ops);\n@@ -40,6 +38,9 @@ extern int direct_return (void);\n extern void spu_expand_prologue (void);\n extern void spu_expand_epilogue (unsigned char sibcall_p);\n extern rtx spu_return_addr (int count, rtx frame);\n+\n+#ifdef RTX_CODE\n+extern rtx hwint_to_const_double (enum machine_mode mode, HOST_WIDE_INT v);\n extern rtx spu_const (enum machine_mode mode, HOST_WIDE_INT val);\n extern rtx spu_const_from_ints (enum machine_mode mode, \n \t\t\t        int a, int b, int c, int d);\n@@ -83,6 +84,8 @@ extern void spu_builtin_insert (rtx ops[]);\n extern void spu_builtin_promote (rtx ops[]);\n extern void spu_expand_sign_extend (rtx ops[]);\n extern void spu_expand_vector_init (rtx target, rtx vals);\n+#endif /* RTX_CODE  */\n+\n extern void spu_init_expanders (void);\n extern void spu_split_convert (rtx *);\n extern void spu_function_profiler (FILE *, int);\n@@ -94,4 +97,5 @@ extern rtx spu_expand_builtin (tree exp, rtx target, rtx subtarget,\n \t\t\t       enum machine_mode mode, int ignore);\n extern rtx spu_expand_builtin (tree, rtx, rtx, enum machine_mode, int);\n \n-#endif\n+#endif /* _SPU_PROTOS_  */\n+"}, {"sha": "de559c9176ad218f947e012ca9afaaaf2d7dfa5c", "filename": "gcc/config/spu/t-spu-elf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65ea7e282a589f270eef21342e66395e1fe2ef35/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65ea7e282a589f270eef21342e66395e1fe2ef35/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Ft-spu-elf?ref=65ea7e282a589f270eef21342e66395e1fe2ef35", "patch": "@@ -115,6 +115,6 @@ spu.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n spu-c.o: $(srcdir)/config/spu/spu-c.c \\\n     $(srcdir)/config/spu/spu-protos.h \\\n     $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPPLIB_H) \\\n-    $(TM_P_H) c-pragma.h coretypes.h $(TM_H) insn-codes.h\n+    $(TM_P_H) $(C_COMMON_H) $(C_PRAGMA_H) coretypes.h $(TM_H) insn-codes.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/spu/spu-c.c"}]}