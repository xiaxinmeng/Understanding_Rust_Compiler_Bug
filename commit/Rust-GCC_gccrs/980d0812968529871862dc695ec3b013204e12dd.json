{"sha": "980d0812968529871862dc695ec3b013204e12dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgwZDA4MTI5Njg1Mjk4NzE4NjJkYzY5NWVjM2IwMTMyMDRlMTJkZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-01-11T13:59:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-01-11T13:59:28Z"}, "message": "tree-cfg.c (verify_node_sharing_1): Split out from ...\n\n2013-01-11  Richard Biener  <rguenther@suse.de>\n\n\t* tree-cfg.c (verify_node_sharing_1): Split out from ...\n\t(verify_node_sharing): ... here.\n\t(verify_gimple_in_cfg): Use verify_node_sharing_1 for walk_tree.\n\nFrom-SVN: r195107", "tree": {"sha": "c7599fe1307101d7f72762c2026b57e5bf3ef892", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7599fe1307101d7f72762c2026b57e5bf3ef892"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/980d0812968529871862dc695ec3b013204e12dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980d0812968529871862dc695ec3b013204e12dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/980d0812968529871862dc695ec3b013204e12dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980d0812968529871862dc695ec3b013204e12dd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb24ba82a5ee0c253e2973f09aa4085b74b58606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb24ba82a5ee0c253e2973f09aa4085b74b58606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb24ba82a5ee0c253e2973f09aa4085b74b58606"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "ea6987d4a2b3af573bf1480b9db1925e7e06ae5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980d0812968529871862dc695ec3b013204e12dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980d0812968529871862dc695ec3b013204e12dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=980d0812968529871862dc695ec3b013204e12dd", "patch": "@@ -1,3 +1,9 @@\n+2013-01-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (verify_node_sharing_1): Split out from ...\n+\t(verify_node_sharing): ... here.\n+\t(verify_gimple_in_cfg): Use verify_node_sharing_1 for walk_tree.\n+\n 2013-01-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* configure.ac (Tree checking): Set TREECHECKING to yes if enabled."}, {"sha": "4cd5865f2e5bd690b8962c103deb7e695043bc63", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980d0812968529871862dc695ec3b013204e12dd/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980d0812968529871862dc695ec3b013204e12dd/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=980d0812968529871862dc695ec3b013204e12dd", "patch": "@@ -4462,13 +4462,12 @@ tree_node_can_be_shared (tree t)\n   return false;\n }\n \n-/* Called via walk_gimple_stmt.  Verify tree sharing.  */\n+/* Called via walk_tree.  Verify tree sharing.  */\n \n static tree\n-verify_node_sharing (tree *tp, int *walk_subtrees, void *data)\n+verify_node_sharing_1 (tree *tp, int *walk_subtrees, void *data)\n {\n-  struct walk_stmt_info *wi = (struct walk_stmt_info *) data;\n-  struct pointer_set_t *visited = (struct pointer_set_t *) wi->info;\n+  struct pointer_set_t *visited = (struct pointer_set_t *) data;\n \n   if (tree_node_can_be_shared (*tp))\n     {\n@@ -4482,6 +4481,15 @@ verify_node_sharing (tree *tp, int *walk_subtrees, void *data)\n   return NULL;\n }\n \n+/* Called via walk_gimple_stmt.  Verify tree sharing.  */\n+\n+static tree\n+verify_node_sharing (tree *tp, int *walk_subtrees, void *data)\n+{\n+  struct walk_stmt_info *wi = (struct walk_stmt_info *) data;\n+  return verify_node_sharing_1 (tp, walk_subtrees, wi->info);\n+}\n+\n static bool eh_error_found;\n static int\n verify_eh_throw_stmt_node (void **slot, void *data)\n@@ -4534,7 +4542,8 @@ verify_gimple_in_cfg (struct function *fn)\n \t  for (i = 0; i < gimple_phi_num_args (phi); i++)\n \t    {\n \t      tree arg = gimple_phi_arg_def (phi, i);\n-\t      tree addr = walk_tree (&arg, verify_node_sharing, visited, NULL);\n+\t      tree addr = walk_tree (&arg, verify_node_sharing_1,\n+\t\t\t\t     visited, NULL);\n \t      if (addr)\n \t\t{\n \t\t  error (\"incorrect sharing of tree nodes\");"}]}