{"sha": "7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NmZTNjYzE4MjFlODQ0ZDhkNGYwNjJkMGE0ZGNjZGVjOWMzOGEwMg==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@codesourcery.com", "date": "2013-11-20T17:18:12Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2013-11-20T17:18:12Z"}, "message": "mips.h (ISA_HAS_FP4): Remove TARGET_FLOAT64 restriction for ISA_MIPS32R2.\n\n\t* config/mips/mips.h (ISA_HAS_FP4): Remove TARGET_FLOAT64\n\trestriction for ISA_MIPS32R2.\n\t(ISA_HAS_LXC1_SXC1): New macro.\n\t(ISA_HAS_FP_MADD4_MSUB4): Remove ISA_MIPS32R2 special-casing.\n\t(ISA_HAS_NMADD4_NMSUB4): Likewise.\n\t(ISA_HAS_FP_RECIP_RSQRT): Likewise.\n\t(ISA_HAS_PREFETCHX): Redefine in terms of ISA_HAS_FP4.\n\t* config/mips/mips.md (*<ANYF:loadx>_<P:mode>): Use\n\tISA_HAS_LXC1_SXC1 rather than ISA_HAS_FP4.\n\t(*<ANYF:storex>_<P:mode>): Likewise.\n\nFrom-SVN: r205130", "tree": {"sha": "f4476774ab1538d31a2ba767b9212877c1955fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4476774ab1538d31a2ba767b9212877c1955fc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02/comments", "author": null, "committer": null, "parents": [{"sha": "287c5d3812f66f3555cb13f2d3c4324edc3c0304", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/287c5d3812f66f3555cb13f2d3c4324edc3c0304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/287c5d3812f66f3555cb13f2d3c4324edc3c0304"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "485dc55ae1047406511863991adc70840b8915bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02", "patch": "@@ -1,3 +1,16 @@\n+2013-11-20  Maciej W. Rozycki  <macro@codesourcery.com>\n+\n+\t* config/mips/mips.h (ISA_HAS_FP4): Remove TARGET_FLOAT64\n+\trestriction for ISA_MIPS32R2.\n+\t(ISA_HAS_LXC1_SXC1): New macro.\n+\t(ISA_HAS_FP_MADD4_MSUB4): Remove ISA_MIPS32R2 special-casing.\n+\t(ISA_HAS_NMADD4_NMSUB4): Likewise.\n+\t(ISA_HAS_FP_RECIP_RSQRT): Likewise.\n+\t(ISA_HAS_PREFETCHX): Redefine in terms of ISA_HAS_FP4.\n+\t* config/mips/mips.md (*<ANYF:loadx>_<P:mode>): Use\n+\tISA_HAS_LXC1_SXC1 rather than ISA_HAS_FP4.\n+\t(*<ANYF:storex>_<P:mode>): Likewise.\n+\n 2013-11-20  Maciej W. Rozycki  <macro@codesourcery.com>\n \n \t* config/mips/mips.h (ISA_HAS_FP_RECIP_RSQRT): New macro."}, {"sha": "021419c0a6a1f44d0d43e8e8746e225ebb6fce6d", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02", "patch": "@@ -882,13 +882,18 @@ struct mips_cpu_info {\n \n /* This is a catch all for other mips4 instructions: indexed load, the\n    FP madd and msub instructions, and the FP recip and recip sqrt\n-   instructions.  */\n+   instructions.  Note that this macro should only be used by other\n+   ISA_HAS_* macros.  */\n #define ISA_HAS_FP4\t\t((ISA_MIPS4\t\t\t\t\\\n-\t\t\t\t  || (ISA_MIPS32R2 && TARGET_FLOAT64)\t\\\n+\t\t\t\t  || ISA_MIPS32R2\t\t\t\\\n \t\t\t\t  || ISA_MIPS64\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS64R2)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n+/* ISA has floating-point indexed load and store instructions\n+   (LWXC1, LDXC1, SWXC1 and SDXC1).  */\n+#define ISA_HAS_LXC1_SXC1\tISA_HAS_FP4\n+\n /* ISA has paired-single instructions.  */\n #define ISA_HAS_PAIRED_SINGLE\t(ISA_MIPS32R2 || ISA_MIPS64 || ISA_MIPS64R2)\n \n@@ -906,16 +911,14 @@ struct mips_cpu_info {\n #define GENERATE_MADD_MSUB\t(TARGET_IMADD && !TARGET_MIPS16)\n \n /* ISA has floating-point madd and msub instructions 'd = a * b [+-] c'.  */\n-#define ISA_HAS_FP_MADD4_MSUB4  (ISA_HAS_FP4\t\t\t\t\\\n-\t\t\t\t || (ISA_MIPS32R2 && !TARGET_MIPS16))\n+#define ISA_HAS_FP_MADD4_MSUB4  ISA_HAS_FP4\n \n /* ISA has floating-point madd and msub instructions 'c = a * b [+-] c'.  */\n #define ISA_HAS_FP_MADD3_MSUB3  TARGET_LOONGSON_2EF\n \n /* ISA has floating-point nmadd and nmsub instructions\n    'd = -((a * b) [+-] c)'.  */\n-#define ISA_HAS_NMADD4_NMSUB4\t(ISA_HAS_FP4\t\t\t\t\\\n-\t\t\t\t || (ISA_MIPS32R2 && !TARGET_MIPS16))\n+#define ISA_HAS_NMADD4_NMSUB4\tISA_HAS_FP4\n \n /* ISA has floating-point nmadd and nmsub instructions\n    'c = -((a * b) [+-] c)'.  */\n@@ -926,7 +929,7 @@ struct mips_cpu_info {\n    doubles are stored in pairs of FPRs, so for safety's sake, we apply\n    this restriction to the MIPS IV ISA too.  */\n #define ISA_HAS_FP_RECIP_RSQRT(MODE)\t\t\t\t\t\\\n-\t\t\t\t((((ISA_HAS_FP4 || ISA_MIPS32R2)\t\\\n+\t\t\t\t(((ISA_HAS_FP4\t\t\t\t\\\n \t\t\t\t   && ((MODE) == SFmode\t\t\t\\\n \t\t\t\t       || ((TARGET_FLOAT64\t\t\\\n \t\t\t\t\t    || ISA_MIPS32R2\t\t\\\n@@ -1006,11 +1009,7 @@ struct mips_cpu_info {\n    'prefx', along with TARGET_HARD_FLOAT and TARGET_DOUBLE_FLOAT.\n    (prefx is a cop1x instruction, so can only be used if FP is\n    enabled.)  */\n-#define ISA_HAS_PREFETCHX\t((ISA_MIPS4\t\t\t\t\\\n-\t\t\t\t  || ISA_MIPS32R2\t\t\t\\\n-\t\t\t\t  || ISA_MIPS64\t\t\t\t\\\n-\t\t\t\t  || ISA_MIPS64R2)\t\t\t\\\n-\t\t\t\t && !TARGET_MIPS16)\n+#define ISA_HAS_PREFETCHX\tISA_HAS_FP4\n \n /* True if trunc.w.s and trunc.w.d are real (not synthetic)\n    instructions.  Both require TARGET_HARD_FLOAT, and trunc.w.d"}, {"sha": "1bd1ec5e2cc3411890a47ba769d17721ba8bcdc6", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=7cfe3cc1821e844d8d4f062d0a4dccdec9c38a02", "patch": "@@ -4440,7 +4440,7 @@\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(mem:ANYF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n \t\t\t  (match_operand:P 2 \"register_operand\" \"d\"))))]\n-  \"ISA_HAS_FP4\"\n+  \"ISA_HAS_LXC1_SXC1\"\n   \"<ANYF:loadx>\\t%0,%1(%2)\"\n   [(set_attr \"type\" \"fpidxload\")\n    (set_attr \"mode\" \"<ANYF:UNITMODE>\")])\n@@ -4449,7 +4449,7 @@\n   [(set (mem:ANYF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n \t\t\t  (match_operand:P 2 \"register_operand\" \"d\")))\n \t(match_operand:ANYF 0 \"register_operand\" \"f\"))]\n-  \"ISA_HAS_FP4\"\n+  \"ISA_HAS_LXC1_SXC1\"\n   \"<ANYF:storex>\\t%0,%1(%2)\"\n   [(set_attr \"type\" \"fpidxstore\")\n    (set_attr \"mode\" \"<ANYF:UNITMODE>\")])"}]}