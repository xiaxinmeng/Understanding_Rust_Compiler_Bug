{"sha": "4e81b788bb6a2f4ecc51965232727d86ca375c94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU4MWI3ODhiYjZhMmY0ZWNjNTE5NjUyMzI3MjdkODZjYTM3NWM5NA==", "commit": {"author": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-04-28T08:36:50Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-04-28T08:36:50Z"}, "message": "re PR c/65901 (no warning or error for va_arg (ap, void))\n\n\tPR c/65901\n\t* c-typeck.c (c_build_va_arg): Require TYPE be a complete type.\n\n\t* gcc.c-torture/compile/pr48767.c (foo): Add dg-error.\n\t* gcc.dg/pr65901.c: New test.\n\nFrom-SVN: r222515", "tree": {"sha": "e4a78f92a29b33f3fb61d3b79130e6b5b072cc49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4a78f92a29b33f3fb61d3b79130e6b5b072cc49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e81b788bb6a2f4ecc51965232727d86ca375c94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e81b788bb6a2f4ecc51965232727d86ca375c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e81b788bb6a2f4ecc51965232727d86ca375c94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e81b788bb6a2f4ecc51965232727d86ca375c94/comments", "author": null, "committer": null, "parents": [{"sha": "90dd6e3df86c81bdc1380513c57cce64caf32f72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90dd6e3df86c81bdc1380513c57cce64caf32f72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90dd6e3df86c81bdc1380513c57cce64caf32f72"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "5d50d4cb5be31a24f133bc64e142ad0d6fd7df40", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e81b788bb6a2f4ecc51965232727d86ca375c94/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e81b788bb6a2f4ecc51965232727d86ca375c94/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=4e81b788bb6a2f4ecc51965232727d86ca375c94", "patch": "@@ -1,3 +1,8 @@\n+2015-04-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/65901\n+\t* c-typeck.c (c_build_va_arg): Require TYPE be a complete type.\n+\n 2015-04-25  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/52085"}, {"sha": "c58e9181f0e6fa7f5d853b2544bf84f532bfab74", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e81b788bb6a2f4ecc51965232727d86ca375c94/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e81b788bb6a2f4ecc51965232727d86ca375c94/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=4e81b788bb6a2f4ecc51965232727d86ca375c94", "patch": "@@ -12648,6 +12648,11 @@ c_build_va_arg (location_t loc, tree expr, tree type)\n   if (warn_cxx_compat && TREE_CODE (type) == ENUMERAL_TYPE)\n     warning_at (loc, OPT_Wc___compat,\n \t\t\"C++ requires promoted type, not enum type, in %<va_arg%>\");\n+  if (type == error_mark_node || !COMPLETE_TYPE_P (type))\n+    {\n+      c_incomplete_type_error (NULL_TREE, type);\n+      return error_mark_node;\n+    }\n   return build_va_arg (loc, expr, type);\n }\n "}, {"sha": "fcd850ce456057504bd7e7bc73bc8ee7a6be6974", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e81b788bb6a2f4ecc51965232727d86ca375c94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e81b788bb6a2f4ecc51965232727d86ca375c94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e81b788bb6a2f4ecc51965232727d86ca375c94", "patch": "@@ -1,3 +1,9 @@\n+2015-04-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/65901\n+\t* gcc.c-torture/compile/pr48767.c (foo): Add dg-error.\n+\t* gcc.dg/pr65901.c: New test.\n+\n 2015-04-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/62283\n@@ -11,7 +17,7 @@\n \n 2015-04-27  Jeff Law <law@redhat.com>\n \n-        PR tree-optimization/65217\n+\tPR tree-optimization/65217\n \t* gcc.target/i386/pr65217.c: Remove XFAIL.\n \n 2015-04-27  Andre Vehreschild  <vehre@gmx.de>"}, {"sha": "c8fef35ad37dc0668b91f3346b751904c0f49960", "filename": "gcc/testsuite/gcc.c-torture/compile/pr48767.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e81b788bb6a2f4ecc51965232727d86ca375c94/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr48767.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e81b788bb6a2f4ecc51965232727d86ca375c94/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr48767.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr48767.c?ref=4e81b788bb6a2f4ecc51965232727d86ca375c94", "patch": "@@ -3,5 +3,5 @@\n void\n foo (__builtin_va_list ap)\n {\n-  __builtin_va_arg (ap, void);\n+  __builtin_va_arg (ap, void);  /* { dg-error \"invalid use of void expression\" } */\n }"}, {"sha": "8708a1ef1aa293c9f3c7cfb2cac8da3912cc3627", "filename": "gcc/testsuite/gcc.dg/pr65901.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e81b788bb6a2f4ecc51965232727d86ca375c94/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65901.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e81b788bb6a2f4ecc51965232727d86ca375c94/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65901.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65901.c?ref=4e81b788bb6a2f4ecc51965232727d86ca375c94", "patch": "@@ -0,0 +1,16 @@\n+/* PR c/65901 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct S;\n+enum E;\n+union U;\n+\n+void\n+foo (__builtin_va_list ap)\n+{\n+  __builtin_va_arg (ap, void);  /* { dg-error \"invalid use of void expression\" } */\n+  __builtin_va_arg (ap, struct S);  /* { dg-error \"invalid use of undefined type\" } */\n+  __builtin_va_arg (ap, enum E);  /* { dg-error \"invalid use of undefined type\" } */\n+  __builtin_va_arg (ap, union U);  /* { dg-error \"invalid use of undefined type\" } */\n+}"}]}