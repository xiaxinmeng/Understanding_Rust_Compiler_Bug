{"sha": "f1197ae1607b1834578d4470fb7ed85870f7dd77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjExOTdhZTE2MDdiMTgzNDU3OGQ0NDcwZmI3ZWQ4NTg3MGY3ZGQ3Nw==", "commit": {"author": {"name": "Matt Austern", "email": "austern@apple.com", "date": "2004-08-02T04:40:19Z"}, "committer": {"name": "Matt Austern", "email": "austern@gcc.gnu.org", "date": "2004-08-02T04:40:19Z"}, "message": "re PR libstdc++/16844 (Explicit instantiation failing)\n\n\tPR libstdc++/16844\n\t* include/bits/stl_list.h (_M_create_node): Remove unused\n\tzero-argument version.\n\t* include/ext/slist (_M_create_node): Pass two arguments to\n\tallocator's construct() member function.\n\t* testsuite/23_containers/deque/explicit_instantiation.cc: New.\n\t* testsuite/23_containers/list/explicit_instantiation.cc: New.\n\t* testsuite/23_containers/vector/explicit_instantiation.cc: New.\n\t* testsuite/23_containers/map/explicit_instantiation.cc: New.\n\t* testsuite/23_containers/set/explicit_instantiation.cc: New.\n\t* testsuite/23_containers/multimap/explicit_instantiation.cc: New.\n\t* testsuite/23_containers/multiset/explicit_instantiation.cc: New.\n\t* testsuite/ext/hash_set_explicit_instantiation.cc: New.\n\t* testsuite/ext/slist_explicit_instantiation.cc: New.\n\nFrom-SVN: r85428", "tree": {"sha": "2c82d3f1e6bed4b297e3684eeead34495e6143d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c82d3f1e6bed4b297e3684eeead34495e6143d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1197ae1607b1834578d4470fb7ed85870f7dd77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1197ae1607b1834578d4470fb7ed85870f7dd77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1197ae1607b1834578d4470fb7ed85870f7dd77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1197ae1607b1834578d4470fb7ed85870f7dd77/comments", "author": null, "committer": null, "parents": [{"sha": "1f09d3eb5c8b1af1916ce126e9058c29d458e763", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f09d3eb5c8b1af1916ce126e9058c29d458e763", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f09d3eb5c8b1af1916ce126e9058c29d458e763"}], "stats": {"total": 347, "additions": 324, "deletions": 23}, "files": [{"sha": "7c4c82cd83df448fb5381c4a7b48a3488a4740c0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -1,3 +1,20 @@\n+2004-08-01  Matt Austern  <austern@apple.com>\n+\n+\tPR libstdc++/16844\n+\t* include/bits/stl_list.h (_M_create_node): Remove unused \n+\tzero-argument version.\n+\t* include/ext/slist (_M_create_node): Pass two arguments to\n+\tallocator's construct() member function.\n+\t* testsuite/23_containers/deque/explicit_instantiation.cc: New.\n+\t* testsuite/23_containers/list/explicit_instantiation.cc: New.\n+\t* testsuite/23_containers/vector/explicit_instantiation.cc: New.\n+\t* testsuite/23_containers/map/explicit_instantiation.cc: New.\n+\t* testsuite/23_containers/set/explicit_instantiation.cc: New.\n+\t* testsuite/23_containers/multimap/explicit_instantiation.cc: New.\n+\t* testsuite/23_containers/multiset/explicit_instantiation.cc: New.\n+\t* testsuite/ext/hash_set_explicit_instantiation.cc: New.\n+\t* testsuite/ext/slist_explicit_instantiation.cc: New.\n+\t\n 2004-07-30  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (num_get<>::_M_extract_float,"}, {"sha": "c46fd7400a71c45e8e1c24c26f1b6b51d9cc7880", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -445,28 +445,6 @@ namespace _GLIBCXX_STD\n \treturn __p;\n       }\n \n-      /**\n-       *  @if maint\n-       *  Allocates space for a new node and default-constructs a new\n-       *  instance of @c value_type in it.\n-       *  @endif\n-       */\n-      _Node*\n-      _M_create_node()\n-      {\n-\t_Node* __p = this->_M_get_node();\n-\ttry\n-\t  {\n-\t    this->get_allocator().construct(&__p->_M_data);\n-\t  }\n-\tcatch(...)\n-\t  {\n-\t    _M_put_node(__p);\n-\t    __throw_exception_again;\n-\t  }\n-\treturn __p;\n-      }\n-\n     public:\n       // [23.2.2.1] construct/copy/destroy\n       // (assign() and get_allocator() are also listed in this section)"}, {"sha": "2e39624317c8dcbc773f400f904a37d92b644b86", "filename": "libstdc++-v3/include/ext/slist", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -344,7 +344,7 @@ namespace __gnu_cxx\n \t_Node* __node = this->_M_get_node();\n \ttry\n \t  {\n-\t    get_allocator().construct(&__node->_M_data);\n+\t    get_allocator().construct(&__node->_M_data, value_type());\n \t    __node->_M_next = 0;\n \t  }\n \tcatch(...)"}, {"sha": "e6e758d0c74ba33e7b98235079c83a6f0ff993b8", "filename": "libstdc++-v3/testsuite/23_containers/deque/explicit_instantiation.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fexplicit_instantiation.cc?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of library containers\n+\n+#include <deque>\n+\n+// { dg-do compile }\n+\n+template class std::deque<int>;"}, {"sha": "2c9db8d3f866ec1870e6dc8a44665cb6faa84639", "filename": "libstdc++-v3/testsuite/23_containers/list/explicit_instantiation.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fexplicit_instantiation.cc?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of library containers\n+\n+#include <list>\n+\n+// { dg-do compile }\n+\n+template class std::list<int>;"}, {"sha": "4ceb250156936f9d93099259a7b2b49079c2e6f8", "filename": "libstdc++-v3/testsuite/23_containers/map/explicit_instantiation.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fexplicit_instantiation.cc?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of library containers\n+\n+#include <map>\n+\n+// { dg-do compile }\n+\n+template class std::map<int, double>;"}, {"sha": "4a740b250f67c40a295846b55ebd5f7cc37b8d61", "filename": "libstdc++-v3/testsuite/23_containers/multimap/explicit_instantiation.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fexplicit_instantiation.cc?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of library containers\n+\n+#include <map>\n+\n+// { dg-do compile }\n+\n+template class std::multimap<int, double>;"}, {"sha": "fb6b5f1db19139512b039aa36e2c0731fbc0df0b", "filename": "libstdc++-v3/testsuite/23_containers/multiset/explicit_instantiation.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fexplicit_instantiation.cc?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of library containers\n+\n+#include <set>\n+\n+// { dg-do compile }\n+\n+template class std::multiset<int>;"}, {"sha": "02e33be0456dd0c1ed5fe2b699b7c8a7ec812fa0", "filename": "libstdc++-v3/testsuite/23_containers/set/explicit_instantiation.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fexplicit_instantiation.cc?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of library containers\n+\n+#include <set>\n+\n+// { dg-do compile }\n+\n+template class std::set<int>;"}, {"sha": "0668bbd12abdf5efc14187a33f4b508257e4552e", "filename": "libstdc++-v3/testsuite/23_containers/vector/explicit_instantiation.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fexplicit_instantiation.cc?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of library containers\n+\n+#include <vector>\n+\n+// { dg-do compile }\n+\n+template class std::vector<int>;"}, {"sha": "e59a15250086b2a875450e3ed78d930d7055df8c", "filename": "libstdc++-v3/testsuite/ext/hash_set_explicit_instantiation.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_set_explicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_set_explicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fhash_set_explicit_instantiation.cc?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of library containers\n+\n+#include <ext/hash_set>\n+\n+// { dg-do compile }\n+\n+template class __gnu_cxx::hash_set<int>;"}, {"sha": "e31f526380ec118627486ab217248c4eacf47226", "filename": "libstdc++-v3/testsuite/ext/slist_explicit_instantiation.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fslist_explicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1197ae1607b1834578d4470fb7ed85870f7dd77/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fslist_explicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fslist_explicit_instantiation.cc?ref=f1197ae1607b1834578d4470fb7ed85870f7dd77", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of library containers\n+\n+#include <ext/slist>\n+\n+// { dg-do compile }\n+\n+template class __gnu_cxx::slist<int>;"}]}