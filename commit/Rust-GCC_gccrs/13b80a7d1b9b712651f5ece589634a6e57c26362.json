{"sha": "13b80a7d1b9b712651f5ece589634a6e57c26362", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNiODBhN2QxYjliNzEyNjUxZjVlY2U1ODk2MzRhNmU1N2MyNjM2Mg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-04T10:40:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-04T11:59:44Z"}, "message": "tree-optimization/98282 - classify V_C_E<constant> as nary\n\nThis avoids running into memory reference code in compute_avail by\nproperly classifying unfolded reference trees on constants.\n\n2021-01-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/98282\n\t* tree-ssa-sccvn.c (vn_get_stmt_kind): Classify tcc_reference on\n\tinvariants as VN_NARY.\n\n\t* g++.dg/opt/pr98282.C: New testcase.", "tree": {"sha": "0067893ed4d2a3e27465eabdb9ac70055c8aebff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0067893ed4d2a3e27465eabdb9ac70055c8aebff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13b80a7d1b9b712651f5ece589634a6e57c26362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13b80a7d1b9b712651f5ece589634a6e57c26362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13b80a7d1b9b712651f5ece589634a6e57c26362", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13b80a7d1b9b712651f5ece589634a6e57c26362/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b41e6dd50f329b0291457e939d4c0dacd81c82c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b41e6dd50f329b0291457e939d4c0dacd81c82c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b41e6dd50f329b0291457e939d4c0dacd81c82c1"}], "stats": {"total": 83, "additions": 82, "deletions": 1}, "files": [{"sha": "545084104d56c85423f610bef357b5507b0190a4", "filename": "gcc/testsuite/g++.dg/opt/pr98282.C", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b80a7d1b9b712651f5ece589634a6e57c26362/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr98282.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b80a7d1b9b712651f5ece589634a6e57c26362/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr98282.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr98282.C?ref=13b80a7d1b9b712651f5ece589634a6e57c26362", "patch": "@@ -0,0 +1,80 @@\n+// PR tree-optimization/98282\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O2\" }\n+\n+template <typename> struct g;\n+template <typename b> struct g<b &> { typedef b c; };\n+template <typename b> typename g<b>::c &&d(b &&e) {\n+  return static_cast<typename g<b>::c &&>(e);\n+}\n+void *operator new(__SIZE_TYPE__, void *f) { return f; }\n+struct h;\n+struct k {\n+  using i = h *;\n+};\n+struct D {\n+  k::i j;\n+};\n+struct p : D {\n+  p(p &&) : D() {}\n+};\n+struct r {\n+  using l = int;\n+  r(r &&) : ad() {}\n+  l *ad;\n+};\n+struct s {\n+  static s m();\n+};\n+struct t {\n+  template <typename ah> void operator=(ah);\n+};\n+struct I {\n+  template <typename o> void q(o ai) {\n+    *ai = aj();\n+    s::m();\n+  }\n+  h aj();\n+};\n+template <typename...> class as;\n+struct J {\n+  int a;\n+  char av;\n+};\n+template <typename...> struct aw : J {\n+  void ax(...) {}\n+};\n+template <typename... ay, typename an, typename... n>\n+struct aw<as<ay...>, an, n...> : aw<as<ay...>, n...> {\n+  using az = as<ay...>;\n+  using ba = aw<az, n...>;\n+  char bb;\n+  an &bc() { return *reinterpret_cast<an *>(this); }\n+  void ax(az *bd) {\n+    if (bb)\n+      new (bd) an(d(bc()));\n+    ba::ax(bd);\n+  }\n+};\n+template <typename... n> struct as : aw<as<n...>, n...> {\n+  as();\n+  as(as &&be) { be.ax(this); }\n+  void operator=(as be) { be.ax(this); }\n+};\n+struct h {\n+  as<decltype(nullptr), r, p> bg;\n+};\n+using bh = t;\n+struct u {\n+  bh bj;\n+};\n+I bk();\n+template <typename> void bl() {\n+  h a;\n+  bk().q(&a);\n+}\n+template <typename> void bn(int) {\n+  u b;\n+  b.bj = bl<int>;\n+}\n+void bp() { bn<int>(0); }"}, {"sha": "19defc0cccc35eaf9b6e0a0a0fc75739a529accc", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b80a7d1b9b712651f5ece589634a6e57c26362/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b80a7d1b9b712651f5ece589634a6e57c26362/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=13b80a7d1b9b712651f5ece589634a6e57c26362", "patch": "@@ -543,7 +543,8 @@ vn_get_stmt_kind (gimple *stmt)\n \t\t     || code == IMAGPART_EXPR\n \t\t     || code == VIEW_CONVERT_EXPR\n \t\t     || code == BIT_FIELD_REF)\n-\t\t    && TREE_CODE (TREE_OPERAND (rhs1, 0)) == SSA_NAME)\n+\t\t    && (TREE_CODE (TREE_OPERAND (rhs1, 0)) == SSA_NAME\n+\t\t\t|| is_gimple_min_invariant (TREE_OPERAND (rhs1, 0))))\n \t\t  return VN_NARY;\n \n \t\t/* Fallthrough.  */"}]}