{"sha": "3ebd25e11b571812971df97c1c589a64f94634a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ViZDI1ZTExYjU3MTgxMjk3MWRmOTdjMWM1ODlhNjRmOTQ2MzRhNg==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-09-14T11:25:09Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2012-09-14T11:25:09Z"}, "message": "tree-ssa-forwprop.c (simplify_bitfield_ref): Call get_prop_source_stmt.\n\n2012-09-14  Marc Glisse  <marc.glisse@inria.fr>\n\n\t* tree-ssa-forwprop.c (simplify_bitfield_ref): Call\n\tget_prop_source_stmt.\n\t(simplify_permutation): Likewise.\n\t(simplify_vector_constructor): Likewise.\n\nFrom-SVN: r191292", "tree": {"sha": "758efd5f6875b115f67d1d6b491fafa05c626e2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/758efd5f6875b115f67d1d6b491fafa05c626e2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ebd25e11b571812971df97c1c589a64f94634a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ebd25e11b571812971df97c1c589a64f94634a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ebd25e11b571812971df97c1c589a64f94634a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ebd25e11b571812971df97c1c589a64f94634a6/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f79cc861cfdb5fd3303e71d2dc7ef410759d8780", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f79cc861cfdb5fd3303e71d2dc7ef410759d8780", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f79cc861cfdb5fd3303e71d2dc7ef410759d8780"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "2ba65e53422b8f581324d670a2555045e94939fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ebd25e11b571812971df97c1c589a64f94634a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ebd25e11b571812971df97c1c589a64f94634a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ebd25e11b571812971df97c1c589a64f94634a6", "patch": "@@ -1,3 +1,10 @@\n+2012-09-14  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* tree-ssa-forwprop.c (simplify_bitfield_ref): Call\n+\tget_prop_source_stmt.\n+\t(simplify_permutation): Likewise.\n+\t(simplify_vector_constructor): Likewise.\n+\n 2012-09-14  Richard Guenther  <rguenther@suse.de>\n \n \t* builtin-types.def (BT_FN_CONST_STRING): Add."}, {"sha": "2d17bfa4d2f1b756c3f7b53b28daf7eb176b3ea2", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ebd25e11b571812971df97c1c589a64f94634a6/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ebd25e11b571812971df97c1c589a64f94634a6/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=3ebd25e11b571812971df97c1c589a64f94634a6", "patch": "@@ -2606,9 +2606,8 @@ simplify_bitfield_ref (gimple_stmt_iterator *gsi)\n   if (n != 1)\n     return false;\n \n-  def_stmt = SSA_NAME_DEF_STMT (op0);\n-  if (!def_stmt || !is_gimple_assign (def_stmt)\n-      || !can_propagate_from (def_stmt))\n+  def_stmt = get_prop_source_stmt (op0, false, NULL);\n+  if (!def_stmt || !can_propagate_from (def_stmt))\n     return false;\n \n   op2 = TREE_OPERAND (op, 2);\n@@ -2637,7 +2636,7 @@ simplify_bitfield_ref (gimple_stmt_iterator *gsi)\n \t}\n       index = build_int_cst (TREE_TYPE (TREE_TYPE (m)), idx * size);\n       tem = build3 (BIT_FIELD_REF, TREE_TYPE (op),\n-\t\t\t unshare_expr (p), op1, index);\n+\t\t    unshare_expr (p), op1, index);\n       gimple_assign_set_rhs1 (stmt, tem);\n       fold_stmt (gsi);\n       update_stmt (gsi_stmt (*gsi));\n@@ -2689,6 +2688,7 @@ simplify_permutation (gimple_stmt_iterator *gsi)\n   gimple def_stmt;\n   tree op0, op1, op2, op3, arg0, arg1;\n   enum tree_code code;\n+  bool single_use_op0 = false;\n \n   gcc_checking_assert (gimple_assign_rhs_code (stmt) == VEC_PERM_EXPR);\n \n@@ -2706,9 +2706,8 @@ simplify_permutation (gimple_stmt_iterator *gsi)\n     }\n   else if (TREE_CODE (op0) == SSA_NAME)\n     {\n-      def_stmt = SSA_NAME_DEF_STMT (op0);\n-      if (!def_stmt || !is_gimple_assign (def_stmt)\n-\t  || !can_propagate_from (def_stmt))\n+      def_stmt = get_prop_source_stmt (op0, false, &single_use_op0);\n+      if (!def_stmt || !can_propagate_from (def_stmt))\n \treturn 0;\n \n       code = gimple_assign_rhs_code (def_stmt);\n@@ -2747,7 +2746,7 @@ simplify_permutation (gimple_stmt_iterator *gsi)\n       bool ret = false;\n       if (op0 != op1)\n \t{\n-\t  if (TREE_CODE (op0) == SSA_NAME && !has_single_use (op0))\n+\t  if (TREE_CODE (op0) == SSA_NAME && !single_use_op0)\n \t    return 0;\n \n \t  if (TREE_CODE (op1) == VECTOR_CST)\n@@ -2756,12 +2755,8 @@ simplify_permutation (gimple_stmt_iterator *gsi)\n \t    {\n \t      enum tree_code code2;\n \n-\t      if (!has_single_use (op1))\n-\t\treturn 0;\n-\n-\t      gimple def_stmt2 = SSA_NAME_DEF_STMT (op1);\n-\t      if (!def_stmt2 || !is_gimple_assign (def_stmt2)\n-\t\t  || !can_propagate_from (def_stmt2))\n+\t      gimple def_stmt2 = get_prop_source_stmt (op1, true, NULL);\n+\t      if (!def_stmt2 || !can_propagate_from (def_stmt2))\n \t\treturn 0;\n \n \t      code2 = gimple_assign_rhs_code (def_stmt2);\n@@ -2831,8 +2826,8 @@ simplify_vector_constructor (gimple_stmt_iterator *gsi)\n \n       if (TREE_CODE (elt->value) != SSA_NAME)\n \treturn false;\n-      def_stmt = SSA_NAME_DEF_STMT (elt->value);\n-      if (!def_stmt || !is_gimple_assign (def_stmt))\n+      def_stmt = get_prop_source_stmt (elt->value, false, NULL);\n+      if (!def_stmt)\n \treturn false;\n       code = gimple_assign_rhs_code (def_stmt);\n       if (code != BIT_FIELD_REF)"}]}