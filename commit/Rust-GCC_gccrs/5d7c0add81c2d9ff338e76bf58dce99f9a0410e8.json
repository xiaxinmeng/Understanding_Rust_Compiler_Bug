{"sha": "5d7c0add81c2d9ff338e76bf58dce99f9a0410e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ3YzBhZGQ4MWMyZDlmZjMzOGU3NmJmNThkY2U5OWY5YTA0MTBlOA==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2005-11-15T14:32:13Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2005-11-15T14:32:13Z"}, "message": "lib1funcs.asm (div0): Call raise instead of making syscalls.\n\n\t* config/arm/lib1funcs.asm (div0) [L_dvmd_lnx]: Call raise instead\n\tof making syscalls.\n\t* config/arm/linux-eabi.h (CLEAR_INSN_CACHE): Define.  Set r7 also.\n\nFrom-SVN: r107018", "tree": {"sha": "0cc5b87b3f2c8c3b76db1833ac1ac21ab542efaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cc5b87b3f2c8c3b76db1833ac1ac21ab542efaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d7c0add81c2d9ff338e76bf58dce99f9a0410e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7c0add81c2d9ff338e76bf58dce99f9a0410e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7c0add81c2d9ff338e76bf58dce99f9a0410e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7c0add81c2d9ff338e76bf58dce99f9a0410e8/comments", "author": null, "committer": null, "parents": [{"sha": "9de61fcb9b63fabbe305dab069bf49d8d1e6195a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9de61fcb9b63fabbe305dab069bf49d8d1e6195a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9de61fcb9b63fabbe305dab069bf49d8d1e6195a"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "f2b22fa98a252162d04ba27fd5a08b95082245e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7c0add81c2d9ff338e76bf58dce99f9a0410e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7c0add81c2d9ff338e76bf58dce99f9a0410e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d7c0add81c2d9ff338e76bf58dce99f9a0410e8", "patch": "@@ -1,3 +1,9 @@\n+2005-11-15  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* config/arm/lib1funcs.asm (div0) [L_dvmd_lnx]: Call raise instead\n+\tof making syscalls.\n+\t* config/arm/linux-eabi.h (CLEAR_INSN_CACHE): Define.  Set r7 also.\n+\n 2005-11-15  Jan Hubicka  <jh@suse.cz>\n \n \t* invoke.texi (large-unit-insns): Document."}, {"sha": "8494a973bfa6d4947f7acfc8c0f33f36ff977e02", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7c0add81c2d9ff338e76bf58dce99f9a0410e8/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7c0add81c2d9ff338e76bf58dce99f9a0410e8/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=5d7c0add81c2d9ff338e76bf58dce99f9a0410e8", "patch": "@@ -989,29 +989,15 @@ LSYM(Lover12):\n #ifdef L_dvmd_lnx\n @ GNU/Linux division-by zero handler.  Used in place of L_dvmd_tls\n \n-/* Constants taken from <asm/unistd.h> and <asm/signal.h> */\n+/* Constant taken from <asm/signal.h>.  */\n #define SIGFPE\t8\n-#define __NR_SYSCALL_BASE\t0x900000\n-#define __NR_getpid\t\t\t(__NR_SYSCALL_BASE+ 20)\n-#define __NR_kill\t\t\t(__NR_SYSCALL_BASE+ 37)\n-#define __NR_gettid\t\t\t(__NR_SYSCALL_BASE+ 224)\n-#define __NR_tkill\t\t\t(__NR_SYSCALL_BASE+ 238)\n \n \t.code\t32\n \tFUNC_START div0\n \n \tstmfd\tsp!, {r1, lr}\n-\tswi\t__NR_gettid\n-\tcmn\tr0, #1000\n-\tswihs\t__NR_getpid\n-\tcmnhs\tr0, #1000\n-\tRETLDM\tr1 hs\n-\tmov\tip, r0\n-\tmov\tr1, #SIGFPE\n-\tswi\t__NR_tkill\n-\tmovs\tr0, r0\n-\tmovne\tr0, ip\n-\tswine\t__NR_kill\n+\tmov\tr0, #SIGFPE\n+\tbl\tSYM(raise) __PLT__\n \tRETLDM\tr1\n \n \tFUNC_END div0"}, {"sha": "6cd0989c8c5a497a117dd38b51eb439d5373e20e", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7c0add81c2d9ff338e76bf58dce99f9a0410e8/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7c0add81c2d9ff338e76bf58dce99f9a0410e8/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=5d7c0add81c2d9ff338e76bf58dce99f9a0410e8", "patch": "@@ -1,5 +1,5 @@\n /* Configuration file for ARM GNU/Linux EABI targets.\n-   Copyright (C) 2004\n+   Copyright (C) 2004, 2005\n    Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC   \n \n@@ -68,3 +68,18 @@\n    non-AAPCS.  */\n #undef WCHAR_TYPE\n #define WCHAR_TYPE (TARGET_AAPCS_BASED ? \"unsigned int\" : \"long int\")\n+\n+/* Clear the instruction cache from `beg' to `end'.  This makes an\n+   inline system call to SYS_cacheflush.  It is modified to work with\n+   both the original and EABI-only syscall interfaces.  */\n+#undef CLEAR_INSN_CACHE\n+#define CLEAR_INSN_CACHE(BEG, END)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  register unsigned long _beg __asm (\"a1\") = (unsigned long) (BEG);\t\\\n+  register unsigned long _end __asm (\"a2\") = (unsigned long) (END);\t\\\n+  register unsigned long _flg __asm (\"a3\") = 0;\t\t\t\t\\\n+  register unsigned long _scno __asm (\"r7\") = 0xf0002;\t\t\t\\\n+  __asm __volatile (\"swi 0x9f0002\t\t@ sys_cacheflush\"\t\\\n+\t\t    : \"=r\" (_beg)\t\t\t\t\t\\\n+\t\t    : \"0\" (_beg), \"r\" (_end), \"r\" (_flg), \"r\" (_scno));\t\\\n+}"}]}