{"sha": "000007c53553607813c99368b67c2691bf11eab9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAwMDA3YzUzNTUzNjA3ODEzYzk5MzY4YjY3YzI2OTFiZjExZWFiOQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-17T13:09:23Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-17T13:09:23Z"}, "message": "re PR libfortran/33079 (Optional empty strings do not appear to be 'PRESENT')\n\n\tPR fortran/33079\n\n\t* intrinsics/string_intrinsics.c (string_trim, string_minmax): Fix\n\tthe zero-length result case.\n\n\t* gfortran.dg/zero_length_2.f90: New test.\n\nFrom-SVN: r127584", "tree": {"sha": "13fdeb4ff7ed9cef89a72af1fccc8442c308d49d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13fdeb4ff7ed9cef89a72af1fccc8442c308d49d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/000007c53553607813c99368b67c2691bf11eab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000007c53553607813c99368b67c2691bf11eab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/000007c53553607813c99368b67c2691bf11eab9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000007c53553607813c99368b67c2691bf11eab9/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d39d00bb989107b4bf19311d19eaffc9bc6bf03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d39d00bb989107b4bf19311d19eaffc9bc6bf03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d39d00bb989107b4bf19311d19eaffc9bc6bf03"}], "stats": {"total": 47, "additions": 39, "deletions": 8}, "files": [{"sha": "7ababfa2c4c5cc7d796a276a9864c953e4f42810", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000007c53553607813c99368b67c2691bf11eab9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000007c53553607813c99368b67c2691bf11eab9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=000007c53553607813c99368b67c2691bf11eab9", "patch": "@@ -1,3 +1,8 @@\n+2007-08-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33079\n+\t* gfortran.dg/zero_length_2.f90: New test.\n+\n 2007-08-17  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/kind_tests_2.f03: Add cleanup-modules."}, {"sha": "31b99f58fac5e33ccfc4c38706339e9881921a4e", "filename": "gcc/testsuite/gfortran.dg/zero_length_2.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000007c53553607813c99368b67c2691bf11eab9/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_length_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000007c53553607813c99368b67c2691bf11eab9/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_length_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_length_2.f90?ref=000007c53553607813c99368b67c2691bf11eab9", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do run }\n+  character(len=1) :: s\n+  character(len=0) :: s0 ! { dg-warning \"CHARACTER variable has zero length\" }\n+  s = \" \"\n+  s0 = \"\"\n+  call bar (\"\")\n+  call bar (s)\n+  call bar (s0)\n+  call bar (trim(s))\n+  call bar (min(s0,s0))\n+contains\n+  subroutine bar (s)\n+    character(len=*), optional :: s\n+    if (.not. present (S)) call abort\n+  end subroutine bar\n+end"}, {"sha": "de3d574fea4c11917f78c2f0e1fc1802722c0dae", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000007c53553607813c99368b67c2691bf11eab9/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000007c53553607813c99368b67c2691bf11eab9/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=000007c53553607813c99368b67c2691bf11eab9", "patch": "@@ -1,3 +1,9 @@\n+2007-08-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33079\n+\t* intrinsics/string_intrinsics.c (string_trim, string_minmax): Fix\n+\tthe zero-length result case.\n+\n 2007-08-15  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/33077"}, {"sha": "c663daa6d8686aa2682aa9564b1c4f90be5f808f", "filename": "libgfortran/intrinsics/string_intrinsics.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000007c53553607813c99368b67c2691bf11eab9/libgfortran%2Fintrinsics%2Fstring_intrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000007c53553607813c99368b67c2691bf11eab9/libgfortran%2Fintrinsics%2Fstring_intrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fstring_intrinsics.c?ref=000007c53553607813c99368b67c2691bf11eab9", "patch": "@@ -77,6 +77,11 @@ export_proto(string_trim);\n extern void string_minmax (GFC_INTEGER_4 *, void **, int, int, ...);\n export_proto(string_minmax);\n \n+\n+/* Use for functions which can return a zero-length string.  */\n+static char zero_length_string = '\\0';\n+\n+\n /* Strings of unequal length are extended with pad characters.  */\n \n int\n@@ -167,16 +172,16 @@ string_trim (GFC_INTEGER_4 * len, void ** dest, GFC_INTEGER_4 slen,\n     }\n   *len = i + 1;\n \n-  if (*len > 0)\n+  if (*len == 0)\n+    *dest = &zero_length_string;\n+  else\n     {\n       /* Allocate space for result string.  */\n       *dest = internal_malloc_size (*len);\n \n-      /* copy string if necessary.  */\n+      /* Copy string if necessary.  */\n       memmove (*dest, src, *len);\n     }\n-  else\n-    *dest = NULL;\n }\n \n \n@@ -403,14 +408,13 @@ string_minmax (GFC_INTEGER_4 *rlen, void **dest, int op, int nargs, ...)\n     }\n   va_end (ap);\n \n-  if (*rlen > 0)\n+  if (*rlen == 0)\n+    *dest = &zero_length_string;\n+  else\n     {\n       char * tmp = internal_malloc_size (*rlen);\n       memcpy (tmp, res, reslen);\n       memset (&tmp[reslen], ' ', *rlen - reslen);\n       *dest = tmp;\n     }\n-  else\n-    *dest = NULL;\n }\n-"}]}