{"sha": "85ce673378e7091ce603b033fac213a9d0d1f83a", "node_id": "C_kwDOANBUbNoAKDg1Y2U2NzMzNzhlNzA5MWNlNjAzYjAzM2ZhYzIxM2E5ZDBkMWY4M2E", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-18T08:44:11Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-18T09:07:14Z"}, "message": "gcc-changelog: update error message location\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Update location of\n\t'bad parentheses wrapping'.\n\t* gcc-changelog/test_email.py: Test it.", "tree": {"sha": "91505bc08a6083b5d103aec823d0897bf7eefcd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91505bc08a6083b5d103aec823d0897bf7eefcd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85ce673378e7091ce603b033fac213a9d0d1f83a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ce673378e7091ce603b033fac213a9d0d1f83a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85ce673378e7091ce603b033fac213a9d0d1f83a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ce673378e7091ce603b033fac213a9d0d1f83a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47e4ab6559dc857df66403824909b5ab73891fd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e4ab6559dc857df66403824909b5ab73891fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47e4ab6559dc857df66403824909b5ab73891fd2"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "cf29f7619647e03f42de580cb63ffffb99182bf4", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ce673378e7091ce603b033fac213a9d0d1f83a/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ce673378e7091ce603b033fac213a9d0d1f83a/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=85ce673378e7091ce603b033fac213a9d0d1f83a", "patch": "@@ -217,7 +217,7 @@ def __init__(self, folder, authors, prs):\n         self.lines = []\n         self.files = []\n         self.file_patterns = []\n-        self.opened_parentheses = 0\n+        self.parentheses_stack = []\n \n     def parse_file_names(self):\n         # Whether the content currently processed is between a star prefix the\n@@ -551,7 +551,7 @@ def parse_changelog(self):\n                     m = star_prefix_regex.match(line)\n                     if m:\n                         if (len(m.group('spaces')) != 1 and\n-                                last_entry.opened_parentheses == 0):\n+                                not last_entry.parentheses_stack):\n                             msg = 'one space should follow asterisk'\n                             self.errors.append(Error(msg, line))\n                         else:\n@@ -576,13 +576,13 @@ def parse_changelog(self):\n     def process_parentheses(self, last_entry, line):\n         for c in line:\n             if c == '(':\n-                last_entry.opened_parentheses += 1\n+                last_entry.parentheses_stack.append(line)\n             elif c == ')':\n-                if last_entry.opened_parentheses == 0:\n+                if not last_entry.parentheses_stack:\n                     msg = 'bad wrapping of parenthesis'\n                     self.errors.append(Error(msg, line))\n                 else:\n-                    last_entry.opened_parentheses -= 1\n+                    del last_entry.parentheses_stack[-1]\n \n     def parse_file_names(self):\n         for entry in self.changelog_entries:\n@@ -608,9 +608,9 @@ def check_for_empty_description(self):\n \n     def check_for_broken_parentheses(self):\n         for entry in self.changelog_entries:\n-            if entry.opened_parentheses != 0:\n+            if entry.parentheses_stack:\n                 msg = 'bad parentheses wrapping'\n-                self.errors.append(Error(msg, entry.lines[0]))\n+                self.errors.append(Error(msg, entry.parentheses_stack[-1]))\n \n     def get_file_changelog_location(self, changelog_file):\n         for file in self.info.modified_files:"}, {"sha": "a4796dbbe94fbc0d51fd75d5e1fcc7e99ae3340f", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ce673378e7091ce603b033fac213a9d0d1f83a/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ce673378e7091ce603b033fac213a9d0d1f83a/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=85ce673378e7091ce603b033fac213a9d0d1f83a", "patch": "@@ -415,6 +415,7 @@ def test_multiline_parentheses(self):\n     def test_multiline_bad_parentheses(self):\n         email = self.from_patch_glob('0002-Wrong-macro-changelog.patch')\n         assert email.errors[0].message == 'bad parentheses wrapping'\n+        assert email.errors[0].line == '\t* config/i386/i386.md (*fix_trunc<mode>_i387_1,'\n \n     def test_changelog_removal(self):\n         email = self.from_patch_glob('0001-ChangeLog-removal.patch')"}]}