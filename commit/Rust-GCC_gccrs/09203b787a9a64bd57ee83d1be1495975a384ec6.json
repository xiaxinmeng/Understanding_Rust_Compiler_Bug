{"sha": "09203b787a9a64bd57ee83d1be1495975a384ec6", "node_id": "C_kwDOANBUbNoAKDA5MjAzYjc4N2E5YTY0YmQ1N2VlODNkMWJlMTQ5NTk3NWEzODRlYzY", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2022-09-08T03:33:15Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-10-06T09:22:48Z"}, "message": "ada: stack scrubbing: exemplify codegen changes\n\ngcc/ada/\n\n\t* doc/gnat_rm/security_hardening_features.rst: Add examples of\n\tcodegen changes in stack scrubbing.\n\t* gnat_rm.texi: Regenerate.", "tree": {"sha": "051b15917f1c8946284f9de5ac0e7443269ba55d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/051b15917f1c8946284f9de5ac0e7443269ba55d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09203b787a9a64bd57ee83d1be1495975a384ec6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09203b787a9a64bd57ee83d1be1495975a384ec6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09203b787a9a64bd57ee83d1be1495975a384ec6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09203b787a9a64bd57ee83d1be1495975a384ec6/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3da783c5f93d10396d9ad5bf1f3fc68241f50850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da783c5f93d10396d9ad5bf1f3fc68241f50850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3da783c5f93d10396d9ad5bf1f3fc68241f50850"}], "stats": {"total": 105, "additions": 103, "deletions": 2}, "files": [{"sha": "e36d47517dc3f1a3ec0a690eb8e3f4573c281567", "filename": "gcc/ada/doc/gnat_rm/security_hardening_features.rst", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09203b787a9a64bd57ee83d1be1495975a384ec6/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09203b787a9a64bd57ee83d1be1495975a384ec6/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst?ref=09203b787a9a64bd57ee83d1be1495975a384ec6", "patch": "@@ -74,6 +74,58 @@ or a variable.)\n      --  scrubbing of the stack space used by that subprogram.\n \n \n+Given these declarations, Foo has its type and body modified as\n+follows:\n+\n+.. code-block:: ada\n+\n+     function Foo (<WaterMark> : in out System.Address) returns Integer\n+     is\n+       --  ...\n+     begin\n+       <__strub_update> (<WaterMark>);  --  Updates the stack WaterMark.\n+       --  ...\n+     end;\n+\n+\n+whereas its callers are modified from:\n+\n+.. code-block:: ada\n+\n+     X := Foo;\n+\n+to:\n+\n+.. code-block:: ada\n+\n+     declare\n+       <WaterMark> : System.Address;\n+     begin\n+       <__strub_enter> (<WaterMark>);  -- Initialize <WaterMark>.\n+       X := Foo (<WaterMark>);\n+       <__strub_leave> (<WaterMark>);  -- Scrubs stack up to <WaterMark>.\n+     end;\n+\n+\n+As for Bar, because it is strubbed in internal mode, its callers are\n+not modified.  Its definition is modified roughly as follows:\n+\n+.. code-block:: ada\n+\n+     procedure Bar is\n+       <WaterMark> : System.Address;\n+       procedure Strubbed_Bar (<WaterMark> : in out System.Address) is\n+       begin\n+         <__strub_update> (<WaterMark>);  --  Updates the stack WaterMark.\n+         -- original Bar body.\n+       end Strubbed_Bar;\n+     begin\n+       <__strub_enter> (<WaterMark>);  -- Initialize <WaterMark>.\n+       Strubbed_Bar (<WaterMark>);\n+       <__strub_leave> (<WaterMark>);  -- Scrubs stack up to <WaterMark>.\n+     end Bar;\n+\n+\n There are also :switch:`-fstrub={choice}` command-line options to\n control default settings.  For usage and more details on the\n command-line options, on the ``strub`` attribute, and their use with"}, {"sha": "ff1845661a413357f5f0a12dfd3f4f9bb40d12ee", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 51, "deletions": 2, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09203b787a9a64bd57ee83d1be1495975a384ec6/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09203b787a9a64bd57ee83d1be1495975a384ec6/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=09203b787a9a64bd57ee83d1be1495975a384ec6", "patch": "@@ -3,7 +3,7 @@\n @setfilename gnat_rm.info\n @documentencoding UTF-8\n @ifinfo\n-@*Generated by Sphinx 5.1.1.@*\n+@*Generated by Sphinx 5.2.3.@*\n @end ifinfo\n @settitle GNAT Reference Manual\n @defindex ge\n@@ -19,7 +19,7 @@\n \n @copying\n @quotation\n-GNAT Reference Manual , Sep 23, 2022\n+GNAT Reference Manual , Oct 04, 2022\n \n AdaCore\n \n@@ -28734,6 +28734,55 @@ pragma Machine_Attribute (Var, \"strub\");\n --  scrubbing of the stack space used by that subprogram.\n @end example\n \n+Given these declarations, Foo has its type and body modified as\n+follows:\n+\n+@example\n+function Foo (<WaterMark> : in out System.Address) returns Integer\n+is\n+  --  ...\n+begin\n+  <__strub_update> (<WaterMark>);  --  Updates the stack WaterMark.\n+  --  ...\n+end;\n+@end example\n+\n+whereas its callers are modified from:\n+\n+@example\n+X := Foo;\n+@end example\n+\n+to:\n+\n+@example\n+declare\n+  <WaterMark> : System.Address;\n+begin\n+  <__strub_enter> (<WaterMark>);  -- Initialize <WaterMark>.\n+  X := Foo (<WaterMark>);\n+  <__strub_leave> (<WaterMark>);  -- Scrubs stack up to <WaterMark>.\n+end;\n+@end example\n+\n+As for Bar, because it is strubbed in internal mode, its callers are\n+not modified.  Its definition is modified roughly as follows:\n+\n+@example\n+procedure Bar is\n+  <WaterMark> : System.Address;\n+  procedure Strubbed_Bar (<WaterMark> : in out System.Address) is\n+  begin\n+    <__strub_update> (<WaterMark>);  --  Updates the stack WaterMark.\n+    -- original Bar body.\n+  end Strubbed_Bar;\n+begin\n+  <__strub_enter> (<WaterMark>);  -- Initialize <WaterMark>.\n+  Strubbed_Bar (<WaterMark>);\n+  <__strub_leave> (<WaterMark>);  -- Scrubs stack up to <WaterMark>.\n+end Bar;\n+@end example\n+\n There are also @code{-fstrub=`choice'} command-line options to\n control default settings.  For usage and more details on the\n command-line options, on the @code{strub} attribute, and their use with"}]}