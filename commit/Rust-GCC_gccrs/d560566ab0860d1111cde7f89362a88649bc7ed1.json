{"sha": "d560566ab0860d1111cde7f89362a88649bc7ed1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2MDU2NmFiMDg2MGQxMTExY2RlN2Y4OTM2MmE4ODY0OWJjN2VkMQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2009-06-05T06:09:43Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2009-06-05T06:09:43Z"}, "message": "trans-decl.c (gfc_build_qualified_array): Don't skip generation of range types.\n\n* trans-decl.c (gfc_build_qualified_array): Don't skip generation\nof range types.\n* trans.h (struct lang_type): Add base_decls.\n(GFC_TYPE_ARRAY_BASE_DECL): New.\n* trans-types.c (gfc_get_array_type_bounds): Initialize base decls\nproactively and excessively.\n(gfc_get_array_descr_info): Use existing base decls if available.\n\nFrom-SVN: r148197", "tree": {"sha": "c2fae2b03526763b221c2aace7b4c09f7e54f0ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2fae2b03526763b221c2aace7b4c09f7e54f0ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d560566ab0860d1111cde7f89362a88649bc7ed1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d560566ab0860d1111cde7f89362a88649bc7ed1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d560566ab0860d1111cde7f89362a88649bc7ed1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d560566ab0860d1111cde7f89362a88649bc7ed1/comments", "author": null, "committer": null, "parents": [{"sha": "faef1e6d29245f7ab50c45d52a127e29aac6f208", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faef1e6d29245f7ab50c45d52a127e29aac6f208", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faef1e6d29245f7ab50c45d52a127e29aac6f208"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "eda5dfe753689375483e2735779c674d7ac2911e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560566ab0860d1111cde7f89362a88649bc7ed1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560566ab0860d1111cde7f89362a88649bc7ed1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d560566ab0860d1111cde7f89362a88649bc7ed1", "patch": "@@ -1,3 +1,13 @@\n+2009-06-05  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* trans-decl.c (gfc_build_qualified_array): Don't skip generation\n+\tof range types.\n+\t* trans.h (struct lang_type): Add base_decls.\n+\t(GFC_TYPE_ARRAY_BASE_DECL): New.\n+\t* trans-types.c (gfc_get_array_type_bounds): Initialize base decls\n+\tproactively and excessively.\n+\t(gfc_get_array_descr_info): Use existing base decls if available.\n+\n 2009-06-04  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/37203"}, {"sha": "cbfff293c84249d863f44d90d14d5307829ec073", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560566ab0860d1111cde7f89362a88649bc7ed1/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560566ab0860d1111cde7f89362a88649bc7ed1/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=d560566ab0860d1111cde7f89362a88649bc7ed1", "patch": "@@ -713,9 +713,6 @@ gfc_build_qualified_array (tree decl, gfc_symbol * sym)\n       layout_type (type);\n     }\n \n-  if (write_symbols == NO_DEBUG)\n-    return;\n-\n   if (TYPE_NAME (type) != NULL_TREE\n       && GFC_TYPE_ARRAY_UBOUND (type, sym->as->rank - 1) != NULL_TREE\n       && TREE_CODE (GFC_TYPE_ARRAY_UBOUND (type, sym->as->rank - 1)) == VAR_DECL)"}, {"sha": "0b4be5855071648788b3f78a2de54826536655cc", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560566ab0860d1111cde7f89362a88649bc7ed1/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560566ab0860d1111cde7f89362a88649bc7ed1/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=d560566ab0860d1111cde7f89362a88649bc7ed1", "patch": "@@ -1675,6 +1675,16 @@ gfc_get_array_type_bounds (tree etype, int dimen, tree * lbound,\n   arraytype = build_pointer_type (arraytype);\n   GFC_TYPE_ARRAY_DATAPTR_TYPE (fat_type) = arraytype;\n \n+  /* This will generate the base declarations we need to emit debug\n+     information for this type.  FIXME: there must be a better way to\n+     avoid divergence between compilations with and without debug\n+     information.  */\n+  {\n+    struct array_descr_info info;\n+    gfc_get_array_descr_info (fat_type, &info);\n+    gfc_get_array_descr_info (build_pointer_type (fat_type), &info);\n+  }\n+\n   return fat_type;\n }\n \f\n@@ -2398,14 +2408,16 @@ gfc_get_array_descr_info (const_tree type, struct array_descr_info *info)\n   info->ndimensions = rank;\n   info->element_type = etype;\n   ptype = build_pointer_type (gfc_array_index_type);\n-  if (indirect)\n+  base_decl = GFC_TYPE_ARRAY_BASE_DECL (type, indirect);\n+  if (!base_decl)\n     {\n-      info->base_decl = build_decl (VAR_DECL, NULL_TREE,\n-\t\t\t\t    build_pointer_type (ptype));\n-      base_decl = build1 (INDIRECT_REF, ptype, info->base_decl);\n+      base_decl = build_decl (VAR_DECL, NULL_TREE,\n+\t\t\t      indirect ? build_pointer_type (ptype) : ptype);\n+      GFC_TYPE_ARRAY_BASE_DECL (type, indirect) = base_decl;\n     }\n-  else\n-    info->base_decl = base_decl = build_decl (VAR_DECL, NULL_TREE, ptype);\n+  info->base_decl = base_decl;\n+  if (indirect)\n+    base_decl = build1 (INDIRECT_REF, ptype, base_decl);\n \n   if (GFC_TYPE_ARRAY_SPAN (type))\n     elem_size = GFC_TYPE_ARRAY_SPAN (type);"}, {"sha": "5152b95f5e83e7d836652a1b87508b38adad2cb3", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560566ab0860d1111cde7f89362a88649bc7ed1/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560566ab0860d1111cde7f89362a88649bc7ed1/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=d560566ab0860d1111cde7f89362a88649bc7ed1", "patch": "@@ -624,6 +624,7 @@ struct GTY(())\tlang_type\t {\n   tree dtype;\n   tree dataptr_type;\n   tree span;\n+  tree base_decl[2];\n };\n \n struct GTY(()) lang_decl {\n@@ -676,6 +677,8 @@ struct GTY(()) lang_decl {\n #define GFC_TYPE_ARRAY_DATAPTR_TYPE(node) \\\n   (TYPE_LANG_SPECIFIC(node)->dataptr_type)\n #define GFC_TYPE_ARRAY_SPAN(node) (TYPE_LANG_SPECIFIC(node)->span)\n+#define GFC_TYPE_ARRAY_BASE_DECL(node, internal) \\\n+  (TYPE_LANG_SPECIFIC(node)->base_decl[(internal)])\n \n /* Build an expression with void type.  */\n #define build1_v(code, arg) fold_build1(code, void_type_node, arg)"}]}