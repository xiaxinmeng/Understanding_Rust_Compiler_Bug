{"sha": "94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRiOTA1MjczYzU0NzZmNGUwZjNhOWRlMWE4NmQxYzdlZjQ3ZTdiZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-01-04T16:02:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-01-04T16:02:41Z"}, "message": "re PR driver/42442 (-march=native doesn't apply to multiple files)\n\n\tPR driver/42442\n\t* gcc.c (SWITCH_IGNORE_PERMANENTLY): Define.\n\t(do_self_spec): For switches with SWITCH_IGNORE set set also\n\tSWITCH_IGNORE_PERMANENTLY.\n\t(check_live_switch): Check SWITCH_IGNORE_PERMANENTLY instead\n\tof SWITCH_IGNORE.\n\nFrom-SVN: r155622", "tree": {"sha": "421d7cbc8b24073def556faa031311219db7a83b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/421d7cbc8b24073def556faa031311219db7a83b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca30dbc38ee3b9afbbd717dbe2f3487d743863f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca30dbc38ee3b9afbbd717dbe2f3487d743863f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca30dbc38ee3b9afbbd717dbe2f3487d743863f3"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "30e07cf13061c73080aca981be8cbf6e7eea341e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd", "patch": "@@ -1,3 +1,12 @@\n+2010-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR driver/42442\n+\t* gcc.c (SWITCH_IGNORE_PERMANENTLY): Define.\n+\t(do_self_spec): For switches with SWITCH_IGNORE set set also\n+\tSWITCH_IGNORE_PERMANENTLY.\n+\t(check_live_switch): Check SWITCH_IGNORE_PERMANENTLY instead\n+\tof SWITCH_IGNORE.\n+\n 2010-01-04  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* lto-streamer-out.c (output_unreferenced_globals): Output the full"}, {"sha": "d001273da70e96775ad2b1fcb248f77759742d17", "filename": "gcc/gcc.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=94b905273c5476f4e0f3a9de1a86d1c7ef47e7bd", "patch": "@@ -3233,12 +3233,15 @@ See %s for instructions.\",\n    SWITCH_LIVE to indicate this switch is true in a conditional spec.\n    SWITCH_FALSE to indicate this switch is overridden by a later switch.\n    SWITCH_IGNORE to indicate this switch should be ignored (used in %<S).\n+   SWITCH_IGNORE_PERMANENTLY to indicate this switch should be ignored\n+   in all do_spec calls afterwards.  Used for %<S from self specs.\n    The `validated' field is nonzero if any spec has looked at this switch;\n    if it remains zero at the end of the run, it must be meaningless.  */\n \n-#define SWITCH_LIVE    0x1\n-#define SWITCH_FALSE   0x2\n-#define SWITCH_IGNORE  0x4\n+#define SWITCH_LIVE    \t\t\t0x1\n+#define SWITCH_FALSE   \t\t\t0x2\n+#define SWITCH_IGNORE\t\t\t0x4\n+#define SWITCH_IGNORE_PERMANENTLY\t0x8\n \n struct switchstr\n {\n@@ -4928,13 +4931,20 @@ do_option_spec (const char *name, const char *spec)\n static void\n do_self_spec (const char *spec)\n {\n+  int i;\n+\n   do_spec_2 (spec);\n   do_spec_1 (\" \", 0, NULL);\n \n+  /* Mark %<S switches processed by do_self_spec to be ignored permanently.\n+     do_self_specs adds the replacements to switches array, so it shouldn't\n+     be processed afterwards.  */\n+  for (i = 0; i < n_switches; i++)\n+    if ((switches[i].live_cond & SWITCH_IGNORE))\n+      switches[i].live_cond |= SWITCH_IGNORE_PERMANENTLY;\n+\n   if (argbuf_index > 0)\n     {\n-      int i;\n-\n       switches = XRESIZEVEC (struct switchstr, switches,\n \t\t\t     n_switches + argbuf_index + 1);\n \n@@ -6448,7 +6458,8 @@ check_live_switch (int switchnum, int prefix_length)\n   if (switches[switchnum].live_cond != 0)\n     return ((switches[switchnum].live_cond & SWITCH_LIVE) != 0\n \t    && (switches[switchnum].live_cond & SWITCH_FALSE) == 0\n-\t    && (switches[switchnum].live_cond & SWITCH_IGNORE) == 0);\n+\t    && (switches[switchnum].live_cond & SWITCH_IGNORE_PERMANENTLY)\n+\t       == 0);\n \n   /* In the common case of {<at-most-one-letter>*}, a negating\n      switch would always match, so ignore that case.  We will just"}]}