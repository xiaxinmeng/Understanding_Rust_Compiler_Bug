{"sha": "d86c1b91730b2710a4042ee6972c513f939015a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg2YzFiOTE3MzBiMjcxMGE0MDQyZWU2OTcyYzUxM2Y5MzkwMTVhNg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-09-02T12:46:27Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-09-02T12:46:27Z"}, "message": "linux64.h: Don't include signal.h or sys/ucontext.h.\n\n\t* config/rs6000/linux64.h: Don't include signal.h or sys/ucontext.h.\n\t(struct kernel_old_ucontext): Delete.\n\t(struct gcc_pt_regs, gcc_sigcontext, gcc_ucontext): New.\n\t(MD_FALLBACK_FRAME_STATE_FOR): Use gcc_* structs.  Only define\n\twhen IN_LIGGCC2.\n\nFrom-SVN: r86962", "tree": {"sha": "71ae8c323da1ab022aa9baee198aab5e130d072e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71ae8c323da1ab022aa9baee198aab5e130d072e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d86c1b91730b2710a4042ee6972c513f939015a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86c1b91730b2710a4042ee6972c513f939015a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d86c1b91730b2710a4042ee6972c513f939015a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86c1b91730b2710a4042ee6972c513f939015a6/comments", "author": null, "committer": null, "parents": [{"sha": "3806400dd9ee2c9dc5c8e10f6d3c57413f0360e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3806400dd9ee2c9dc5c8e10f6d3c57413f0360e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3806400dd9ee2c9dc5c8e10f6d3c57413f0360e5"}], "stats": {"total": 88, "additions": 53, "deletions": 35}, "files": [{"sha": "5137c8ce0319f901a545762c703c226fce069961", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86c1b91730b2710a4042ee6972c513f939015a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86c1b91730b2710a4042ee6972c513f939015a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d86c1b91730b2710a4042ee6972c513f939015a6", "patch": "@@ -1,3 +1,11 @@\n+2004-09-02  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/linux64.h: Don't include signal.h or sys/ucontext.h.\n+\t(struct kernel_old_ucontext): Delete.\n+\t(struct gcc_pt_regs, gcc_sigcontext, gcc_ucontext): New.\n+\t(MD_FALLBACK_FRAME_STATE_FOR): Use gcc_* structs.  Only define\n+\twhen IN_LIGGCC2.\n+\n 2004-09-02  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* toplev.c (process_options): Fix typo."}, {"sha": "e7b57d4f57098bdd0644c1ea5b5b7fead52a82c6", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 45, "deletions": 35, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86c1b91730b2710a4042ee6972c513f939015a6/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86c1b91730b2710a4042ee6972c513f939015a6/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=d86c1b91730b2710a4042ee6972c513f939015a6", "patch": "@@ -557,36 +557,44 @@ while (0)\n #define USE_LD_AS_NEEDED 1\n #endif\n \n-/* Do code reading to identify a signal frame, and set the frame\n-   state data appropriately.  See unwind-dw2.c for the structs.  */\n-\n #ifdef IN_LIBGCC2\n-#include <signal.h>\n-#ifdef __powerpc64__\n-#include <sys/ucontext.h>\n-\n-enum { SIGNAL_FRAMESIZE = 128 };\n \n-#else\n-\n-/* During the 2.5 kernel series the kernel ucontext was changed, but\n-   the new layout is compatible with the old one, so we just define\n-   and use the old one here for simplicity and compatibility.  */\n+/* This file defines our own versions of various kernel and user\n+   structs, so that system headers are not needed, which otherwise\n+   can make bootstrapping a new toolchain difficult.  Do not use\n+   these structs elsewhere;  Many fields are missing, particularly\n+   from the end of the structures.  */\n+\n+struct gcc_pt_regs\n+{\n+  unsigned long gpr[32];\n+  unsigned long nip;\n+  unsigned long msr;\n+  unsigned long orig_gpr3;\n+  unsigned long ctr;\n+  unsigned long link;\n+};\n \n-struct kernel_old_ucontext {\n-  unsigned long     uc_flags;\n-  struct ucontext  *uc_link;\n-  stack_t           uc_stack;\n-  struct sigcontext_struct uc_mcontext;\n-  sigset_t          uc_sigmask;\n+struct gcc_sigcontext\n+{\n+  unsigned long\tpad[7];\n+  struct gcc_pt_regs *regs;\n };\n-enum { SIGNAL_FRAMESIZE = 64 };\n-#endif\n \n+struct gcc_ucontext\n+{\n+#ifdef __powerpc64__\n+  unsigned long pad[21];\n+#else\n+  unsigned long pad[5];\n #endif\n+  struct gcc_sigcontext uc_mcontext;\n+};\n \n #ifdef __powerpc64__\n \n+enum { SIGNAL_FRAMESIZE = 128 };\n+\n /* If the current unwind info (FS) does not contain explicit info\n    saving R2, then we have to do a minor amount of code reading to\n    figure out if it was saved.  The big problem here is that the\n@@ -605,10 +613,13 @@ enum { SIGNAL_FRAMESIZE = 64 };\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n \n+/* Do code reading to identify a signal frame, and set the frame\n+   state data appropriately.  See unwind-dw2.c for the structs.  */\n+\n #define MD_FALLBACK_FRAME_STATE_FOR(CONTEXT, FS, SUCCESS)\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     unsigned char *pc_ = (CONTEXT)->ra;\t\t\t\t\t\\\n-    struct sigcontext *sc_;\t\t\t\t\t\t\\\n+    struct gcc_sigcontext *sc_;\t\t\t\t\t\t\\\n     long new_cfa_;\t\t\t\t\t\t\t\\\n     int i_;\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n@@ -621,16 +632,16 @@ enum { SIGNAL_FRAMESIZE = 64 };\n       {\t\t\t\t\t\t\t\t\t\\\n \tstruct sigframe {\t\t\t\t\t\t\\\n \t  char gap[SIGNAL_FRAMESIZE];\t\t\t\t\t\\\n-\t  struct sigcontext sigctx;\t\t\t\t\t\\\n+\t  struct gcc_sigcontext sigctx;\t\t\t\t\t\\\n \t} *rt_ = (CONTEXT)->cfa;\t\t\t\t\t\\\n \tsc_ = &rt_->sigctx;\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else if (*(unsigned int *) (pc_+4) == 0x380000AC)\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tstruct rt_sigframe {\t\t\t\t\t\t\\\n \t  int tramp[6];\t\t\t\t\t\t\t\\\n-\t  struct siginfo *pinfo;\t\t\t\t\t\\\n-\t  struct ucontext *puc;\t\t\t\t\t\t\\\n+\t  void *pinfo;\t\t\t\t\t\t\t\\\n+\t  struct gcc_ucontext *puc;\t\t\t\t\t\\\n \t} *rt_ = (struct rt_sigframe *) pc_;\t\t\t\t\\\n \tsc_ = &rt_->puc->uc_mcontext;\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n@@ -661,12 +672,14 @@ enum { SIGNAL_FRAMESIZE = 64 };\n     goto SUCCESS;\t\t\t\t\t\t\t\\\n   } while (0)\n \n-#else\n+#else  /* !__powerpc64__ */\n+\n+enum { SIGNAL_FRAMESIZE = 64 };\n \n #define MD_FALLBACK_FRAME_STATE_FOR(CONTEXT, FS, SUCCESS)\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     unsigned char *pc_ = (CONTEXT)->ra;\t\t\t\t\t\\\n-    struct sigcontext *sc_;\t\t\t\t\t\t\\\n+    struct gcc_sigcontext *sc_;\t\t\t\t\t\t\\\n     long new_cfa_;\t\t\t\t\t\t\t\\\n     int i_;\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n@@ -681,20 +694,17 @@ enum { SIGNAL_FRAMESIZE = 64 };\n       {\t\t\t\t\t\t\t\t\t\\\n \tstruct sigframe {\t\t\t\t\t\t\\\n \t  char gap[SIGNAL_FRAMESIZE];\t\t\t\t\t\\\n-\t  struct sigcontext sigctx;\t\t\t\t\t\\\n+\t  struct gcc_sigcontext sigctx;\t\t\t\t\t\\\n \t} *rt_ = (CONTEXT)->cfa;\t\t\t\t\t\\\n \tsc_ = &rt_->sigctx;\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else if (*(unsigned int *) (pc_+0) == 0x38006666\t\t\t\\\n \t     || *(unsigned int *) (pc_+0) == 0x380000AC)\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tstruct rt_sigframe {\t\t\t\t\t\t\\\n-\t  char gap[SIGNAL_FRAMESIZE];\t\t\t\t\t\\\n-\t  unsigned long _unused[2];\t\t\t\t\t\\\n-\t  struct siginfo *pinfo;\t\t\t\t\t\\\n-\t  void *puc;\t\t\t\t\t\t\t\\\n-\t  struct siginfo info;\t\t\t\t\t\t\\\n-\t  struct kernel_old_ucontext uc;\t\t\t\t\\\n+\t  char gap[SIGNAL_FRAMESIZE + 16];\t\t\t\t\\\n+\t  char siginfo[128];\t\t\t\t\t\t\\\n+\t  struct gcc_ucontext uc;\t\t\t\t\t\\\n \t} *rt_ = (CONTEXT)->cfa;\t\t\t\t\t\\\n \tsc_ = &rt_->uc.uc_mcontext;\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n@@ -726,6 +736,6 @@ enum { SIGNAL_FRAMESIZE = 64 };\n   } while (0)\n \n #endif\n-\n+#endif /* LIBGCC2 */\n \n #define OS_MISSING_POWERPC64 !TARGET_64BIT"}]}