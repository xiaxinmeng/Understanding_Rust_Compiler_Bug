{"sha": "41674b9fe4c0beb00ac29c32a2085fa670e863a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE2NzRiOWZlNGMwYmViMDBhYzI5YzMyYTIwODVmYTY3MGU4NjNhOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-11-19T02:30:03Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-11-19T02:30:03Z"}, "message": "reflect: Handle calls to functions that take or return empty structs\n\nFixes issue 6761\n\nThis simple change seems to work fine, slightly to my surprise.\n\nThis includes the tests I submitted to the main Go repository at\nhttps://codereview.appspot.com/26570046\n\nFrom-SVN: r205001", "tree": {"sha": "16f6d5875810d941d00dcc7096e6e77ae76ce1bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16f6d5875810d941d00dcc7096e6e77ae76ce1bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41674b9fe4c0beb00ac29c32a2085fa670e863a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41674b9fe4c0beb00ac29c32a2085fa670e863a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41674b9fe4c0beb00ac29c32a2085fa670e863a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41674b9fe4c0beb00ac29c32a2085fa670e863a9/comments", "author": null, "committer": null, "parents": [{"sha": "9d5eec2da6a8ce4e457cb25be2c2a1e60a49f8fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5eec2da6a8ce4e457cb25be2c2a1e60a49f8fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d5eec2da6a8ce4e457cb25be2c2a1e60a49f8fb"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "918adce887f4c903119779d0e5f11295a2b181c0", "filename": "libgo/go/reflect/all_test.go", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41674b9fe4c0beb00ac29c32a2085fa670e863a9/libgo%2Fgo%2Freflect%2Fall_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41674b9fe4c0beb00ac29c32a2085fa670e863a9/libgo%2Fgo%2Freflect%2Fall_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fall_test.go?ref=41674b9fe4c0beb00ac29c32a2085fa670e863a9", "patch": "@@ -1434,6 +1434,46 @@ func TestFunc(t *testing.T) {\n \t}\n }\n \n+type emptyStruct struct{}\n+\n+type nonEmptyStruct struct {\n+\tmember int\n+}\n+\n+func returnEmpty() emptyStruct {\n+\treturn emptyStruct{}\n+}\n+\n+func takesEmpty(e emptyStruct) {\n+}\n+\n+func returnNonEmpty(i int) nonEmptyStruct {\n+\treturn nonEmptyStruct{member: i}\n+}\n+\n+func takesNonEmpty(n nonEmptyStruct) int {\n+\treturn n.member\n+}\n+\n+func TestCallWithStruct(t *testing.T) {\n+\tr := ValueOf(returnEmpty).Call([]Value{})\n+\tif len(r) != 1 || r[0].Type() != TypeOf(emptyStruct{}) {\n+\t\tt.Errorf(\"returning empty struct returned %s instead\", r)\n+\t}\n+\tr = ValueOf(takesEmpty).Call([]Value{ValueOf(emptyStruct{})})\n+\tif len(r) != 0 {\n+\t\tt.Errorf(\"takesEmpty returned values: %s\", r)\n+\t}\n+\tr = ValueOf(returnNonEmpty).Call([]Value{ValueOf(42)})\n+\tif len(r) != 1 || r[0].Type() != TypeOf(nonEmptyStruct{}) || r[0].Field(0).Int() != 42 {\n+\t\tt.Errorf(\"returnNonEmpty returned %s\", r)\n+\t}\n+\tr = ValueOf(takesNonEmpty).Call([]Value{ValueOf(nonEmptyStruct{member: 42})})\n+\tif len(r) != 1 || r[0].Type() != TypeOf(1) || r[0].Int() != 42 {\n+\t\tt.Errorf(\"takesNonEmpty returned %s\", r)\n+\t}\n+}\n+\n func TestMakeFunc(t *testing.T) {\n \tswitch runtime.GOARCH {\n \tcase \"amd64\", \"386\":"}, {"sha": "07b99d7433b5cca54c44a676fcb5a551e7aef52c", "filename": "libgo/runtime/go-reflect-call.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41674b9fe4c0beb00ac29c32a2085fa670e863a9/libgo%2Fruntime%2Fgo-reflect-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41674b9fe4c0beb00ac29c32a2085fa670e863a9/libgo%2Fruntime%2Fgo-reflect-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-reflect-call.c?ref=41674b9fe4c0beb00ac29c32a2085fa670e863a9", "patch": "@@ -98,9 +98,12 @@ go_struct_to_ffi (const struct __go_struct_type *descriptor)\n   const struct __go_struct_field *fields;\n   int i;\n \n+  field_count = descriptor->__fields.__count;\n+  if (field_count == 0) {\n+    return &ffi_type_void;\n+  }\n   ret = (ffi_type *) __go_alloc (sizeof (ffi_type));\n   ret->type = FFI_TYPE_STRUCT;\n-  field_count = descriptor->__fields.__count;\n   fields = (const struct __go_struct_field *) descriptor->__fields.__values;\n   ret->elements = (ffi_type **) __go_alloc ((field_count + 1)\n \t\t\t\t\t    * sizeof (ffi_type *));"}]}