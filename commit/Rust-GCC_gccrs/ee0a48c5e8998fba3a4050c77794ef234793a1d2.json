{"sha": "ee0a48c5e8998fba3a4050c77794ef234793a1d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUwYTQ4YzVlODk5OGZiYTNhNDA1MGM3Nzc5NGVmMjM0NzkzYTFkMg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonber@gnat.com", "date": "2001-12-05T01:38:41Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-05T01:38:41Z"}, "message": "sem_attr.adb (Resolve_Attribute): Handle properly an non-classwide access discriminant within a type extension...\n\n\t* sem_attr.adb (Resolve_Attribute): Handle properly an non-classwide\n\taccess discriminant within a type extension that constrains its\n\tparent discriminants.\n\nFrom-SVN: r47643", "tree": {"sha": "3ea0ec5f380be3d84c89de9d4c2fe8019664bd10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ea0ec5f380be3d84c89de9d4c2fe8019664bd10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee0a48c5e8998fba3a4050c77794ef234793a1d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0a48c5e8998fba3a4050c77794ef234793a1d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee0a48c5e8998fba3a4050c77794ef234793a1d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0a48c5e8998fba3a4050c77794ef234793a1d2/comments", "author": null, "committer": null, "parents": [{"sha": "dd5875a602fb7adef53362fab59cac17bf5ff77d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd5875a602fb7adef53362fab59cac17bf5ff77d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd5875a602fb7adef53362fab59cac17bf5ff77d"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "ea362f117316abc7a80bc9d835fa972d67aa61eb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0a48c5e8998fba3a4050c77794ef234793a1d2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0a48c5e8998fba3a4050c77794ef234793a1d2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ee0a48c5e8998fba3a4050c77794ef234793a1d2", "patch": "@@ -1,3 +1,9 @@\n+2001-12-04  Ed Schonberg <schonber@gnat.com>\n+\n+\t* sem_attr.adb (Resolve_Attribute): Handle properly an non-classwide \n+\taccess discriminant within a type extension that constrains its \n+\tparent discriminants.\n+\n 2001-12-04  Ed Schonberg <schonber@gnat.com>\n \n \t* sem_ch3.adb (Find_Type_Of_Subtype_Indic): If subtype indication "}, {"sha": "98b5fdf690b7f7ea40f13cc5f92575c558eda4ed", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0a48c5e8998fba3a4050c77794ef234793a1d2/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0a48c5e8998fba3a4050c77794ef234793a1d2/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ee0a48c5e8998fba3a4050c77794ef234793a1d2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.1 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -6278,18 +6278,29 @@ package body Sem_Attr is\n                      if not Covers (Designated_Type (Typ), Nom_Subt)\n                        and then not Covers (Nom_Subt, Designated_Type (Typ))\n                      then\n-                        if Is_Anonymous_Tagged_Base\n-                             (Nom_Subt, Etype (Designated_Type (Typ)))\n-                        then\n-                           null;\n \n-                        else\n-                           Error_Msg_NE\n-                             (\"type of prefix: & not compatible\", P, Nom_Subt);\n-                           Error_Msg_NE\n-                             (\"\\with &, the expected designated type\",\n-                               P, Designated_Type (Typ));\n-                        end if;\n+                        declare\n+                           Desig : Entity_Id;\n+\n+                        begin\n+                           Desig := Designated_Type (Typ);\n+\n+                           if Is_Class_Wide_Type (Desig) then\n+                              Desig := Etype (Desig);\n+                           end if;\n+\n+                           if Is_Anonymous_Tagged_Base (Nom_Subt, Desig) then\n+                              null;\n+\n+                           else\n+                              Error_Msg_NE\n+                                (\"type of prefix: & not compatible\",\n+                                  P, Nom_Subt);\n+                              Error_Msg_NE\n+                                (\"\\with &, the expected designated type\",\n+                                  P, Designated_Type (Typ));\n+                           end if;\n+                        end;\n                      end if;\n \n                   elsif not Covers (Designated_Type (Typ), Nom_Subt)"}]}