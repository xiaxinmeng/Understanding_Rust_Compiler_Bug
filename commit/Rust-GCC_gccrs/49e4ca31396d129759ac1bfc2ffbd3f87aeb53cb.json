{"sha": "49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDllNGNhMzEzOTZkMTI5NzU5YWMxYmZjMmZmYmQzZjg3YWViNTNjYg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2018-03-21T10:42:34Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2018-03-21T10:42:34Z"}, "message": "re PR tree-optimization/84969 (Wrong code with -ftree-loop-distribute-patterns)\n\n\tPR tree-optimization/84969\n\t* tree-loop-distribution.c (fuse_memset_builtins): Don't reorder\n\tbuiltin memset partitions if they set different rhs values.\n\n\tgcc/testsuite\n\t* gcc.dg/tree-ssa/pr84969.c: New test.\n\nFrom-SVN: r258710", "tree": {"sha": "f27f80a9a5e6fa1d78efcd4d2f2ecd95c36d9667", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f27f80a9a5e6fa1d78efcd4d2f2ecd95c36d9667"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb/comments", "author": null, "committer": null, "parents": [{"sha": "108b83c1fd97b06f1e99ffb5127f2c5b9623bb11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/108b83c1fd97b06f1e99ffb5127f2c5b9623bb11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/108b83c1fd97b06f1e99ffb5127f2c5b9623bb11"}], "stats": {"total": 79, "additions": 77, "deletions": 2}, "files": [{"sha": "1f48794ee74c031a68770a8b884f8293e984f65b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb", "patch": "@@ -1,3 +1,9 @@\n+2018-03-21  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/84969\n+\t* tree-loop-distribution.c (fuse_memset_builtins): Don't reorder\n+\tbuiltin memset partitions if they set different rhs values.\n+\n 2018-03-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/84989"}, {"sha": "3863758aeb59070d2f52c573997eedda24f5d79a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb", "patch": "@@ -1,3 +1,8 @@\n+2018-03-21  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/84969\n+\t* gcc.dg/tree-ssa/pr84969.c: New test.\n+\n 2018-03-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/84989"}, {"sha": "e15c3d9da29becc4a0c44eed41ffdc7b333491dd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr84969.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr84969.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr84969.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr84969.c?ref=49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftree-loop-distribute-patterns\" } */\n+\n+static void\n+__attribute__((noipa, noinline))\n+foo (char **values, int ndim, char *needquotes, int *dims)\n+{\n+  int i;\n+  int j = 0;\n+  int k = 0;\n+  char *retval = (char *)__builtin_malloc(1000); \n+  char *p = retval;\n+  char *tmp;\n+\n+  int indx[111];\n+\n+#define APPENDSTR(str)\t(__builtin_strcpy(p, (str)), p += __builtin_strlen(p))\n+#define APPENDCHAR(ch)\t(*p++ = (ch), *p = '\\0')\n+\n+\tAPPENDCHAR('{');\n+\tfor (i = 0; i < ndim; i++)\n+\t\tindx[i] = 0;\n+\tdo\n+\t{\n+\t\tfor (i = j; i < ndim - 1; i++)\n+\t\t\tAPPENDCHAR('{');\n+\n+\t\t\tAPPENDSTR(values[k]);\n+\t\tk++;\n+\n+\t\tfor (i = ndim - 1; i >= 0; i--)\n+\t\t{\n+\t\t\tindx[i] = (indx[i] + 1) % dims[i];\n+\t\t\tif (indx[i])\n+\t\t\t{\n+\t\t\t\tAPPENDCHAR(',');\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\telse\n+\t\t\t\tAPPENDCHAR('}');\n+\t\t}\n+\t\tj = i;\n+\t} while (j != -1);\n+\n+\tif (__builtin_strcmp (retval, \"{{{0,1},{2,3}}}\") != 0)\n+\t  __builtin_abort ();\n+}\n+\n+int main()\n+{\n+  char* array[4] = {\"0\", \"1\", \"2\", \"3\"};\n+  char f[] = {0, 0, 0, 0, 0, 0, 0, 0};\n+  int dims[] = {1, 2, 2};\n+  foo (array, 3, f, dims);\n+\n+  return 0;\n+}"}, {"sha": "5e327f4bfd8e0f660a6400d4a7da809a48f9fe4f", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=49e4ca31396d129759ac1bfc2ffbd3f87aeb53cb", "patch": "@@ -2569,6 +2569,7 @@ fuse_memset_builtins (vec<struct partition *> *partitions)\n {\n   unsigned i, j;\n   struct partition *part1, *part2;\n+  tree rhs1, rhs2;\n \n   for (i = 0; partitions->iterate (i, &part1);)\n     {\n@@ -2586,6 +2587,12 @@ fuse_memset_builtins (vec<struct partition *> *partitions)\n \t      || !operand_equal_p (part1->builtin->dst_base_base,\n \t\t\t\t   part2->builtin->dst_base_base, 0))\n \t    break;\n+\n+\t  /* Memset calls setting different values can't be merged.  */\n+\t  rhs1 = gimple_assign_rhs1 (DR_STMT (part1->builtin->dst_dr));\n+\t  rhs2 = gimple_assign_rhs1 (DR_STMT (part2->builtin->dst_dr));\n+\t  if (!operand_equal_p (rhs1, rhs2, 0))\n+\t    break;\n \t}\n \n       /* Stable sort is required in order to avoid breaking dependence.  */\n@@ -2617,8 +2624,8 @@ fuse_memset_builtins (vec<struct partition *> *partitions)\n \t  i++;\n \t  continue;\n \t}\n-      tree rhs1 = gimple_assign_rhs1 (DR_STMT (part1->builtin->dst_dr));\n-      tree rhs2 = gimple_assign_rhs1 (DR_STMT (part2->builtin->dst_dr));\n+      rhs1 = gimple_assign_rhs1 (DR_STMT (part1->builtin->dst_dr));\n+      rhs2 = gimple_assign_rhs1 (DR_STMT (part2->builtin->dst_dr));\n       int bytev1 = const_with_all_bytes_same (rhs1);\n       int bytev2 = const_with_all_bytes_same (rhs2);\n       /* Only merge memset partitions of the same value.  */"}]}