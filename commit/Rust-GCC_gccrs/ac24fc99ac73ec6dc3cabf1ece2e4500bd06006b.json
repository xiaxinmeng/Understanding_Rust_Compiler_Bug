{"sha": "ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMyNGZjOTlhYzczZWM2ZGMzY2FiZjFlY2UyZTQ1MDBiZDA2MDA2Yg==", "commit": {"author": {"name": "Kean Johnston", "email": "jkj@gcc.gnu.org", "date": "2003-04-19T21:23:20Z"}, "committer": {"name": "Kean Johnston", "email": "jkj@gcc.gnu.org", "date": "2003-04-19T21:23:20Z"}, "message": "Part 2 of the SCO port update. This is everything I have approval for.\n\nThere are two outstanding patches I await approval to check in.\n\nFrom-SVN: r65832", "tree": {"sha": "078bac516c47b806fb09d8e4906044f86a8a9f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/078bac516c47b806fb09d8e4906044f86a8a9f93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/comments", "author": null, "committer": null, "parents": [{"sha": "a8ada98685bc94b7bbde2865fd685464a18d160d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8ada98685bc94b7bbde2865fd685464a18d160d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8ada98685bc94b7bbde2865fd685464a18d160d"}], "stats": {"total": 864, "additions": 168, "deletions": 696}, "files": [{"sha": "e8a96d4a1d1bb836fde8c016eb3f03a1137211e6", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b", "patch": "@@ -1187,15 +1187,13 @@ i[34567]86-*-rtems*)\n \t;;\n i[34567]86-*-sco3.2v5*)\t# 80386 running SCO Open Server 5\n \tinstall_headers_dir=install-headers-cpio\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h i386/sco5.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/sco5.h\"\n \tif test x$gas = xyes\n \tthen\n \t\ttm_file=\"usegas.h ${tm_file}\"\n-\t\ttmake_file=i386/t-sco5gas\n-\telse\n-\t\ttmake_file=i386/t-sco5\n \tfi\n-\textra_parts=\"crti.o crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n+\ttmake_file=i386/t-sco5\n+\textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n i[34567]86-*-solaris2*)\n \txm_defines=\"SMALL_ARG_MAX\""}, {"sha": "89dae55f997241dfd4d338b1813414019c328036", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 125, "deletions": 595, "changes": 720, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b", "patch": "@@ -1,7 +1,7 @@\n /* Definitions for Intel 386 running SCO Unix System V 3.2 Version 5.\n-   Copyright (C) 1992, 1995, 1996, 1997, 1998, 1999, 2000, 2002\n+   Copyright (C) 1992, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003\n    Free Software Foundation, Inc.\n-   Contributed by Kean Johnston (hug@netcom.com)\n+   Contributed by Kean Johnston (jkj@sco.com)\n \n This file is part of GNU CC.\n \n@@ -20,160 +20,29 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (i386, SCO OpenServer 5 Syntax)\");\n \n-#undef LPREFIX\n-#define LPREFIX\t\t\t\t\".L\"\n-\n-#undef ALIGN_ASM_OP\n-#define ALIGN_ASM_OP\t\t\t\"\\t.align\\t\"\n-\n-#undef ASCII_DATA_ASM_OP\n-#define ASCII_DATA_ASM_OP\t\t\"\\t.ascii\\t\"\n-\n-#undef IDENT_ASM_OP\n-#define IDENT_ASM_OP\t\t\t\"\\t.ident\\t\"\n-\n-#undef COMMON_ASM_OP\n-#define COMMON_ASM_OP\t\t\t\"\\t.comm\\t\"\n-\n-#undef SET_ASM_OP\n-#define SET_ASM_OP\t\t\t\"\\t.set\\t\"\n-\n-#undef LOCAL_ASM_OP\n-#define LOCAL_ASM_OP\t\t\t\"\\t.local\\t\"\n-\n-#undef ASM_SHORT\n-#define ASM_SHORT\t\t\t\"\\t.value\\t\"\n-\n-#undef ASM_LONG\n-#define ASM_LONG\t\t\t\"\\t.long\\t\"\n-\n #undef ASM_QUAD\n \n-#undef TYPE_ASM_OP\n-#define TYPE_ASM_OP\t\t\t\"\\t.type\\t\"\n-\n-#undef SIZE_ASM_OP\n-#define SIZE_ASM_OP\t\t\t\"\\t.size\\t\"\n-\n-#undef STRING_ASM_OP\n-#define STRING_ASM_OP\t\t\t\"\\t.string\\t\"\n-\n-#undef SKIP_ASM_OP\n-#define SKIP_ASM_OP\t\t\t\"\\t.zero\\t\"\n-\n #undef GLOBAL_ASM_OP\n #define GLOBAL_ASM_OP\t\t\t\"\\t.globl\\t\"\n \n-#undef EH_FRAME_SECTION_ASM_OP\n-#define EH_FRAME_SECTION_NAME_COFF\t\".ehfram\"\n-#define EH_FRAME_SECTION_NAME_ELF\t\".eh_frame\"\n-#define EH_FRAME_SECTION_NAME\t\\\n-  ((TARGET_ELF) ? EH_FRAME_SECTION_NAME_ELF : EH_FRAME_SECTION_NAME_COFF)\n-\n-/* Avoid problems (long section names, forward assembler refs) with DWARF\n-   exception unwinding when we're generating COFF */\n-#define DWARF2_UNWIND_INFO\t\\\n-  ((TARGET_ELF) ? 1 : 0 )  \n-\n-#undef READONLY_DATA_SECTION_ASM_OP\n-#define READONLY_DATA_SECTION_ASM_OP_COFF\t\"\\t.section\\t.rodata, \\\"x\\\"\"\n-#define READONLY_DATA_SECTION_ASM_OP_ELF\t\"\\t.section\\t.rodata\"\n-#define READONLY_DATA_SECTION_ASM_OP\t\t\\\n-  ((TARGET_ELF)\t\t\t\t\t\\\n-   ? READONLY_DATA_SECTION_ASM_OP_ELF\t\t\\\n-   : READONLY_DATA_SECTION_ASM_OP_COFF)\n-\n-#undef INIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP_ELF\t\t\"\\t.section\\t.init\"\n-/* Rename these for COFF because crt1.o will try to run them.  */\n-#define INIT_SECTION_ASM_OP_COFF\t\"\\t.section\\t.ctor ,\\\"x\\\"\"\n-#define INIT_SECTION_ASM_OP\t\\\n-  ((TARGET_ELF) ? INIT_SECTION_ASM_OP_ELF : INIT_SECTION_ASM_OP_COFF)\n-\n-#undef CTORS_SECTION_ASM_OP\n-#define CTORS_SECTION_ASM_OP_ELF\t\"\\t.section\\t.ctors,\\\"aw\\\"\"\n-#define CTORS_SECTION_ASM_OP_COFF\tINIT_SECTION_ASM_OP_COFF\n-#define CTORS_SECTION_ASM_OP\t\\\n- ((TARGET_ELF) ? CTORS_SECTION_ASM_OP_ELF : CTORS_SECTION_ASM_OP_COFF)\n-\n-#undef DTORS_SECTION_ASM_OP\n-#define DTORS_SECTION_ASM_OP_ELF\t\"\\t.section\\t.dtors, \\\"aw\\\"\"\n-#define DTORS_SECTION_ASM_OP_COFF\tFINI_SECTION_ASM_OP_COFF\n-#define DTORS_SECTION_ASM_OP\t\\\n- ((TARGET_ELF) ? DTORS_SECTION_ASM_OP_ELF : DTORS_SECTION_ASM_OP_COFF)\n-\n-#undef FINI_SECTION_ASM_OP\n-#define FINI_SECTION_ASM_OP_ELF\t\t\"\\t.section\\t.fini\"\n-#define FINI_SECTION_ASM_OP_COFF\t\"\\t.section\\t.dtor, \\\"x\\\"\"\n-#define FINI_SECTION_ASM_OP\t\\\n- ((TARGET_ELF) ? FINI_SECTION_ASM_OP_ELF : FINI_SECTION_ASM_OP_COFF)\n-\n #undef BSS_SECTION_ASM_OP\n-#define BSS_SECTION_ASM_OP\t\t\"\\t.data\"\n-\n-#undef TEXT_SECTION_ASM_OP\n-#define TEXT_SECTION_ASM_OP\t\t\"\\t.text\"\n-\n-#undef DATA_SECTION_ASM_OP\n-#define DATA_SECTION_ASM_OP\t\t\"\\t.data\"\n-\n-#undef TYPE_OPERAND_FMT\n-#define TYPE_OPERAND_FMT\t\t\"@%s\"\n-\n-#undef APPLY_RESULT_SIZE\n-#define APPLY_RESULT_SIZE\t\t\t\t\t\t\\\n-(TARGET_ELF) ? size : 116\n-\n-#ifndef ASM_DECLARE_RESULT\n-#define ASM_DECLARE_RESULT(FILE, RESULT)\n-#endif\n-\n-#define SCO_DEFAULT_ASM_COFF(FILE,NAME)\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-      ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n-  } while (0)\n-\n-#undef ASM_DECLARE_FUNCTION_NAME\n-#define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (TARGET_ELF) {\t\t\t\t\t\t\t\\\n-      ASM_OUTPUT_TYPE_DIRECTIVE (FILE, NAME, \"function\");\t\t\\\n-      ASM_DECLARE_RESULT (FILE, DECL_RESULT (DECL));\t\t\t\\\n-      ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n-    } else\t\t\t\t\t\t\t\t\\\n-      SCO_DEFAULT_ASM_COFF(FILE, NAME);\t\t\t\t\t\\\n-} while (0)\n-\n-#undef ASM_DECLARE_FUNCTION_SIZE\n-#define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (TARGET_ELF && !flag_inhibit_size_directive)\t\t\t\\\n-      ASM_OUTPUT_MEASURED_SIZE (FILE, FNAME);\t\t\t\t\\\n-  } while (0)\n-\n-#undef ASM_DECLARE_OBJECT_NAME\n-#define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (TARGET_ELF) {\t\t\t\t\t\t\t\\\n-      HOST_WIDE_INT size;\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      ASM_OUTPUT_TYPE_DIRECTIVE (FILE, NAME, \"object\");\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      size_directive_output = 0;\t\t\t\t\t\\\n-      if (!flag_inhibit_size_directive\t\t\t\t\t\\\n-\t  && (DECL) && DECL_SIZE (DECL))\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  size_directive_output = 1;\t\t\t\t\t\\\n-\t  size = int_size_in_bytes (TREE_TYPE (DECL));\t\t\t\\\n-\t  ASM_OUTPUT_SIZE_DIRECTIVE (FILE, NAME, size);\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n-    } else\t\t\t\t\t\t\t\t\\\n-      SCO_DEFAULT_ASM_COFF(FILE, NAME);\t\t\t\t\t\\\n-  } while (0)\n+#define BSS_SECTION_ASM_OP\t\t\"\\t.section\\t.bss, \\\"aw\\\", @nobits\"\n+  \n+/*\n+ * NOTE: We really do want CTORS_SECTION_ASM_OP and DTORS_SECTION_ASM_OP.\n+ * Here's the reason why. If we dont define them, and we dont define them\n+ * to always emit to the same section, the default is to emit to \"named\"\n+ * ctors and dtors sections. This would be great if we could use GNU ld,\n+ * but we can't. The native linker could possibly be trained to coallesce\n+ * named ctors sections, but that hasn't been done either. So if we don't\n+ * define these, many C++ ctors and dtors dont get run, because they never\n+ * wind up in the ctors/dtors arrays.\n+ */\n+#define CTORS_SECTION_ASM_OP\t\t\"\\t.section\\t.ctors, \\\"aw\\\"\"\n+#define DTORS_SECTION_ASM_OP\t\t\"\\t.section\\t.dtors, \\\"aw\\\"\"\n \n #undef ASM_FILE_START_1\n #define ASM_FILE_START_1(FILE)\n@@ -185,310 +54,29 @@ do {\t\t\t\t\t\t\t\t\t\\\n   fprintf ((FILE), \"\\t.version\\t\\\"01.01\\\"\\n\");\t\t\t\t\\\n } while (0)\n \n-#undef ASM_FINISH_DECLARE_OBJECT\n-#define ASM_FINISH_DECLARE_OBJECT(FILE, DECL, TOP_LEVEL, AT_END)\t \\\n-do {\t\t\t\t\t\t\t\t\t \\\n-  if (TARGET_ELF) {\t\t\t\t\t\t\t \\\n-     const char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t \\\n-     HOST_WIDE_INT size;\t\t\t\t\t\t \\\n-     if (!flag_inhibit_size_directive && DECL_SIZE (DECL)\t\t \\\n-         && ! AT_END && TOP_LEVEL\t\t\t\t\t \\\n-\t && DECL_INITIAL (DECL) == error_mark_node\t\t\t \\\n-\t && !size_directive_output)\t\t\t\t\t \\\n-       {\t\t\t\t\t\t\t\t \\\n-\t size_directive_output = 1;\t\t\t\t\t \\\n-\t size = int_size_in_bytes (TREE_TYPE (DECL));\t\t\t \\\n-\t ASM_OUTPUT_SIZE_DIRECTIVE (FILE, name, size);\t\t\t \\\n-       }\t\t\t\t\t\t\t\t \\\n-    }\t\t\t\t\t\t\t\t\t \\\n-} while (0)\n-\n-#undef ASM_GENERATE_INTERNAL_LABEL\n-#define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_ELF)\t\t\t\t\t\t\t\\\n-    sprintf (LABEL, \"*.%s%ld\", (PREFIX), (long)(NUM));\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    sprintf (LABEL, \".%s%ld\", (PREFIX), (long)(NUM));\t\t\t\\\n-} while (0)\n-\n-#undef ASM_OUTPUT_ALIGNED_COMMON\n-#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"%s\", COMMON_ASM_OP);\t\t\t\t\\\n-  assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-  if (TARGET_ELF)\t\t\t\t\t\t\t\\\n-    fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    fprintf ((FILE), \",%u\\n\", (SIZE));\t\t\t\t\t\\\n-} while (0)\n-\n-#undef ASM_OUTPUT_ALIGNED_LOCAL\n-#define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN)\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_ELF) {\t\t\t\t\t\t\t\\\n-    fprintf ((FILE), \"%s\", LOCAL_ASM_OP);\t\t\t\t\\\n-    assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-    fprintf ((FILE), \"\\n\");\t\t\t\t\t\t\\\n-    ASM_OUTPUT_ALIGNED_COMMON (FILE, NAME, SIZE, ALIGN);\t\t\\\n-  } else {\t\t\t\t\t\t\t\t\\\n-    int align = exact_log2 (ALIGN);\t\t\t\t\t\\\n-    if (align > 2) align = 2;\t\t\t\t\t\t\\\n-    if (TARGET_SVR3_SHLIB)\t\t\t\t\t\t\\\n-      data_section ();\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      bss_section ();\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_ALIGN ((FILE), align == -1 ? 2 : align);\t\t\t\\\n-    fprintf ((FILE), \"%s\\t\", \"\\t.lcomm\");\t\t\t\t\\\n-    assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-    fprintf ((FILE), \",%u\\n\", (SIZE));\t\t\t\t\t\\\n-   }\t\t\t\t\t\t\t\t\t\\\n-} while (0)\n-\n /* A C statement (sans semicolon) to output to the stdio stream\n    FILE the assembler definition of uninitialized global DECL named\n    NAME whose size is SIZE bytes and alignment is ALIGN bytes.\n    Try to use asm_output_aligned_bss to implement this macro.  */\n \n #define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n-asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n-\n-#undef ESCAPES\n-#define ESCAPES \\\n-\"\\1\\1\\1\\1\\1\\1\\1\\1btn\\1fr\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\\n-\\0\\0\\\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\\n-\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\\\\\0\\0\\0\\\n-\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\1\\\n-\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\\n-\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\\n-\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\\n-\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\"\n-\n-#undef STRING_LIMIT\n-#define STRING_LIMIT\t((unsigned) 256)\n-\n-#undef ASM_OUTPUT_LIMITED_STRING\n-#define ASM_OUTPUT_LIMITED_STRING(FILE, STR)\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      register const unsigned char *_limited_str =\t\t\t\\\n-        (const unsigned char *) (STR);\t\t\t\t\t\\\n-      register unsigned ch;\t\t\t\t\t\t\\\n-      fprintf ((FILE), \"%s\\\"\", STRING_ASM_OP);\t\t\t\t\\\n-      for (; (ch = *_limited_str); _limited_str++)\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-\t  register int escape;\t\t\t\t\t\t\\\n-\t  switch (escape = ESCAPES[ch])\t\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t    case 0:\t\t\t\t\t\t\t\\\n-\t      putc (ch, (FILE));\t\t\t\t\t\\\n-\t      break;\t\t\t\t\t\t\t\\\n-\t    case 1:\t\t\t\t\t\t\t\\\n-\t      fprintf ((FILE), \"\\\\%03o\", ch);\t\t\t\t\\\n-\t      break;\t\t\t\t\t\t\t\\\n-\t    default:\t\t\t\t\t\t\t\\\n-\t      putc ('\\\\', (FILE));\t\t\t\t\t\\\n-\t      putc (escape, (FILE));\t\t\t\t\t\\\n-\t      break;\t\t\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-      fprintf ((FILE), \"\\\"\\n\");\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-\n-#undef ASM_OUTPUT_ASCII\n-#define ASM_OUTPUT_ASCII(FILE, STR, LENGTH)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-      register const unsigned char *_ascii_bytes =\t\t\t\\\n-        (const unsigned char *) (STR);\t\t\t\t\t\\\n-      register const unsigned char *limit = _ascii_bytes + (LENGTH);\t\\\n-      register unsigned bytes_in_chunk = 0;\t\t\t\t\\\n-      for (; _ascii_bytes < limit; _ascii_bytes++)\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-\t  register unsigned const char *p;\t\t\t\t\\\n-\t  if (bytes_in_chunk >= 64)\t\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      fputc ('\\n', (FILE));\t\t\t\t\t\\\n-\t      bytes_in_chunk = 0;\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-\t  for (p = _ascii_bytes; p < limit && *p != '\\0'; p++)\t\t\\\n-\t    continue;\t\t\t\t\t\t\t\\\n-\t  if (p < limit && (p - _ascii_bytes) <= (long) STRING_LIMIT)\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      if (bytes_in_chunk > 0)\t\t\t\t\t\\\n-\t\t{\t\t\t\t\t\t\t\\\n-\t\t  fputc ('\\n', (FILE));\t\t\t\t\t\\\n-\t\t  bytes_in_chunk = 0;\t\t\t\t\t\\\n-\t\t}\t\t\t\t\t\t\t\\\n-\t      ASM_OUTPUT_LIMITED_STRING ((FILE), _ascii_bytes);\t\t\\\n-\t      _ascii_bytes = p;\t\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      if (bytes_in_chunk == 0)\t\t\t\t\t\\\n-\t\tfputs (\"\\t.byte\\t\", (FILE));\t\t\t\t\\\n-\t      else\t\t\t\t\t\t\t\\\n-\t\tfputc (',', (FILE));\t\t\t\t\t\\\n-\t      fprintf ((FILE), \"0x%02x\", *_ascii_bytes);\t\t\\\n-\t      bytes_in_chunk += 5;\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      if (bytes_in_chunk > 0)\t\t\t\t\t\t\\\n-        fprintf ((FILE), \"\\n\");\t\t\t\t\t\t\\\n-} while (0) \n-\n-#undef ASM_OUTPUT_CASE_LABEL\n-#define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,JUMPTABLE)\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_ELF)\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_ALIGN ((FILE), 2);\t\t\t\t\t\\\n-  (*targetm.asm_out.internal_label)((FILE),(PREFIX),(NUM));\t\t\t\\\n-} while (0)\n-\n-#undef ASM_OUTPUT_IDENT\n-#define ASM_OUTPUT_IDENT(FILE, NAME) \\\n-  fprintf (FILE, \"%s\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);\n-\n-#undef ASM_OUTPUT_EXTERNAL_LIBCALL\n-#define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, FUN)\t\t\t\t\\\n-  if (TARGET_ELF) (*targetm.asm_out.globalize_label) (FILE, XSTR (FUN, 0))\n-\n-/* The prefix to add to user-visible assembler symbols.  */\n-\n-#undef USER_LABEL_PREFIX\n-#define USER_LABEL_PREFIX \"\"\n-\n-/* \n- * We rename 'gcc_except_table' to the shorter name in preparation\n- * for the day when we're ready to do DWARF2 eh unwinding under COFF.\n- */\n-/* #define EXCEPTION_SECTION()\t\tnamed_section (NULL, \".gccexc\", 1) */\n-\n-/* Switch into a generic section.  */\n-#define TARGET_ASM_NAMED_SECTION default_elf_asm_named_section \n-\n-#undef ASM_OUTPUT_SKIP\n-#define ASM_OUTPUT_SKIP(FILE,SIZE) \\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_ELF)\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"%s%u\\n\", SKIP_ASM_OP, (SIZE));\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    fprintf ((FILE), \"%s.,.+%u\\n\", SET_ASM_OP, (SIZE));\t\t\\\n-} while (0)\n-\n-\n-#undef CTOR_LIST_BEGIN\n-#define CTOR_LIST_BEGIN\t\t\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  asm (CTORS_SECTION_ASM_OP);\t\t\t\t\t\t\\\n-  if (TARGET_ELF)\t\t\t\t\t\t\t\\\n-    STATIC func_ptr __CTOR_LIST__[1] = { (func_ptr) (-1) };\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    asm (\"pushl $0\");\t\t\t\t\t\t\t\\\n-} while (0)\n-\n-#undef CTOR_LIST_END\n-#define CTOR_LIST_END\t\t\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_ELF) {\t\t\t\t\t\t\t\\\n-    asm (CTORS_SECTION_ASM_OP);\t\t\t\t\t\t\\\n-    STATIC func_ptr __CTOR_LIST__[1] = { (func_ptr) (0) };\t\t\\\n-  } else {\t\t\t\t\t\t\t\t\\\n-    CTOR_LIST_BEGIN;\t\t\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-} while (0)\n-\n-#undef DBX_BLOCKS_FUNCTION_RELATIVE\n-#define DBX_BLOCKS_FUNCTION_RELATIVE 1\n-\n-#undef DBX_FUNCTION_FIRST\n-#define DBX_FUNCTION_FIRST 1\n+  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n \n #undef DBX_REGISTER_NUMBER\n-#define DBX_REGISTER_NUMBER(n) \\\n-  ((TARGET_ELF) ? svr4_dbx_register_map[n] : dbx_register_map[n])\n+#define DBX_REGISTER_NUMBER(n)\tsvr4_dbx_register_map[n]\n \n-#define DWARF2_DEBUGGING_INFO 1\n-#define DWARF_DEBUGGING_INFO 1\n-#define SDB_DEBUGGING_INFO 1\n-#define DBX_DEBUGGING_INFO 1\n+#define DWARF2_DEBUGGING_INFO\t\t1\n+#define DWARF_DEBUGGING_INFO\t\t1\n+#define DBX_DEBUGGING_INFO\t\t1\n \n #undef PREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE\t\t\t\t\t\\\n-  ((TARGET_ELF) ? DWARF2_DEBUG: SDB_DEBUG)\n-\n-#undef EXTRA_SECTIONS\n-#define EXTRA_SECTIONS in_init, in_fini\n-\n-#undef EXTRA_SECTION_FUNCTIONS\n-#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n-  INIT_SECTION_FUNCTION\t\t\t\t\t\t\t\\\n-  FINI_SECTION_FUNCTION\n-\n-#undef FINI_SECTION_FUNCTION\n-#define FINI_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-fini_section ()\t\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if ((!TARGET_ELF) && in_section != in_fini)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"%s\\n\", FINI_SECTION_ASM_OP);\t\t\\\n-      in_section = in_fini;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-#undef INIT_SECTION_FUNCTION\n-#define INIT_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-init_section ()\t\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if ((!TARGET_ELF) && in_section != in_init)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"%s\\n\", INIT_SECTION_ASM_OP);\t\t\\\n-      in_section = in_init;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-#undef SUBTARGET_FRAME_POINTER_REQUIRED\n-#define SUBTARGET_FRAME_POINTER_REQUIRED\t\t\t\t\\\n-  ((TARGET_ELF) ? 0 : \t\t\t\t\t\t\t\\\n-   (current_function_calls_setjmp || current_function_calls_longjmp))\n-\n-#undef LOCAL_LABEL_PREFIX\n-#define LOCAL_LABEL_PREFIX\t\t\t\t\t\t\\\n- ((TARGET_ELF) ? \"\" : \".\")\n-\n-#undef MD_EXEC_PREFIX\n-#undef MD_STARTFILE_PREFIX\n-#define MD_EXEC_PREFIX \"/usr/ccs/bin/\"\n-#define MD_STARTFILE_PREFIX \"/usr/ccs/lib/\"\n-\n-#undef NON_SAVING_SETJMP\n-#define NON_SAVING_SETJMP\t\t\t\t\t\t\\\n-  ((TARGET_ELF) ? 0 : \t\t\t\t\t\t\t\\\n-   (current_function_calls_setjmp && current_function_calls_longjmp))\n+#define PREFERRED_DEBUGGING_TYPE\tDWARF2_DEBUG\n+\n+#undef DWARF2_UNWIND_INFO\n+#define DWARF2_UNWIND_INFO\t\t1\n \n #undef NO_IMPLICIT_EXTERN_C\n-#define NO_IMPLICIT_EXTERN_C 1\n-\n-/* JKJ FIXME - examine the ramifications of RETURN_IN_MEMORY and\n-   RETURN_POPS_ARGS */\n-\n-#undef RETURN_POPS_ARGS\n-#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) \t\t\t\t\\\n- ((TARGET_ELF) ?\t\t\t\t\t\t\t\\\n-  (ix86_return_pops_args (FUNDECL, FUNTYPE, SIZE)) : \t\t\t\\\n-  (((FUNDECL) && (TREE_CODE (FUNDECL) == IDENTIFIER_NODE)) ? 0\t\t\\\n-   : (TARGET_RTD\t\t\t\t\t\t\t\\\n-      && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\t\\\n-\t  || (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\t\\\n-\t      == void_type_node))) ? (SIZE)\t\t\t\t\\\n-   : 0))\n-\n-/* ??? Ignore coff.  */\n-#undef\tTARGET_ASM_SELECT_SECTION\n-#define TARGET_ASM_SELECT_SECTION  default_elf_select_section\n+#define NO_IMPLICIT_EXTERN_C\t\t1\n \n #undef SWITCH_TAKES_ARG\n #define SWITCH_TAKES_ARG(CHAR) \t\t\t\t\t\t\\\n@@ -507,30 +95,21 @@ init_section ()\t\t\t\t\t\t\t\t\\\n #undef TARGET_SUBTARGET_DEFAULT\n #define TARGET_SUBTARGET_DEFAULT (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS)\n \n-#define HANDLE_SYSV_PRAGMA 1\n-\n-/* Though OpenServer supports .weak in COFF, we don't use it.\n- * G++ will frequently emit a symol as .weak and then (in the same .s \n- * file) declare it global.   The COFF assembler finds this unamusing.\n- */\n-#define SUPPORTS_WEAK (TARGET_ELF)\n-#define ASM_WEAKEN_LABEL(FILE,NAME) \\\n-  do { fputs (\"\\t.weak\\t\", FILE); assemble_name (FILE, NAME);\t\t\\\n-\tfputc ('\\n', FILE); } while (0)\n-\n /*\n  * Define sizes and types\n  */\n #undef SIZE_TYPE\n #undef PTRDIFF_TYPE\n #undef WCHAR_TYPE\n #undef WCHAR_TYPE_SIZE\n+#undef WINT_TYPE\n #undef LONG_DOUBLE_TYPE_SIZE\n-#define LONG_DOUBLE_TYPE_SIZE \t96\n #define SIZE_TYPE\t\t\"unsigned int\"\n #define PTRDIFF_TYPE\t\t\"int\"\n #define WCHAR_TYPE\t\t\"long int\"\n #define WCHAR_TYPE_SIZE\t\tBITS_PER_WORD\n+#define WINT_TYPE\t\t\"long int\"\n+#define LONG_DOUBLE_TYPE_SIZE \t96\n \n /*\n  * New for multilib support. Set the default switches for multilib,\n@@ -544,7 +123,7 @@ init_section ()\t\t\t\t\t\t\t\t\\\n    With SCO Open Server 5.0, you now get the linker and assembler free,\n    so that is what these specs are targeted for. These utilities are\n    very argument sensitive: a space in the wrong place breaks everything.\n-   So RMS, please forgive this mess. It works.\n+   So please forgive this mess. It works.\n \n    Parameters which can be passed to gcc, and their SCO equivalents:\n    GCC Parameter                SCO Equivalent\n@@ -560,77 +139,108 @@ init_section ()\t\t\t\t\t\t\t\t\\\n    does.\n \n    SCO also allows you to compile, link and generate either ELF or COFF\n-   binaries. With gcc, unlike the SCO compiler, the default is ELF.\n-   Specify -mcoff to gcc to produce COFF binaries. -fpic will get the\n-   assembler and linker to produce PIC code.\n+   binaries. With gcc, we now only support ELF mode.\n+\n+   GCC also requires that the user has installed OSS646, the Execution\n+   Environment Update, or is running release 5.0.7 or later. This has\n+   many fixes to the ELF link editor and assembler, and a considerably\n+   improved libc and RTLD.\n+\n+   In terms of tool usage, we want to use the standard link editor always,\n+   and either the GNU assembler or the native assembler. With OSS646 the\n+   native assembler has grown up quite a bit. Some of the specs below\n+   assume that /usr/gnu is the prefix for the GNU tools, because thats\n+   where the SCO provided ones go. This is especially important for\n+   include and library search path ordering. We want to look in /usr/gnu\n+   first, becuase frequently people are linking against -lintl, and they\n+   MEAN to link with gettext. What they get is the SCO intl library. Its\n+   a REAL pity that GNU gettext chose that name; perhaps in a future\n+   version they can be persuaded to change it to -lgnuintl and have a\n+   link so that -lintl will work for other systems. The same goes for\n+   header files. We want /usr/gnu/include searched for before the system\n+   header files. Hence the -isystem /usr/gnu/include in the CPP_SPEC.\n+   We get /usr/gnu/lib first by virtue of the MD_STARTFILE_PREFIX below.\n */\n \n+#define MD_STARTFILE_PREFIX\t\"/usr/gnu/lib/\"\n+#define MD_STARTFILE_PREFIX_1\t\"/usr/ccs/lib/\"\n+\n+#if USE_GAS\n+# define MD_EXEC_PREFIX\t\t\"/usr/gnu/bin/\"\n+#else\n+# define MD_EXEC_PREFIX\t\t\"/usr/ccs/bin/elf/\"\n+#endif\n+\n+/* Always use the system linker, please.  */\n+#ifndef DEFAULT_LINKER\n+# define DEFAULT_LINKER\t\t\"/usr/ccs/bin/elf/ld\"\n+#endif\n+\n /* Set up assembler flags for PIC and ELF compilations */\n #undef ASM_SPEC\n \n #if USE_GAS\n-  /* Leave ASM_SPEC undefined so we pick up the master copy from gcc.c \n-   * Undef MD_EXEC_PREFIX because we don't know where GAS is, but it's not\n-   * likely in /usr/ccs/bin/ \n-   */\n-#undef MD_EXEC_PREFIX \n+  /* Leave ASM_SPEC undefined so we pick up the master copy from gcc.c  */\n #else\n-\n #define ASM_SPEC \\\n-   \"-b %{!mcoff:elf}%{mcoff:coff \\\n-     %{static:%e-static not valid with -mcoff} \\\n-     %{shared:%e-shared not valid with -mcoff} \\\n-     %{symbolic:%e-symbolic not valid with -mcoff}} \\\n-    %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n-    %{!mcoff:-E%{Xa:a}%{!Xa:%{Xc:c}%{!Xc:%{Xk:k}%{!Xk:%{Xt:t}%{!Xt:a}}}},%{ansi:ansi}%{!ansi:%{posix:posix}%{!posix:%{Xpg4:xpg4}%{!Xpg4:%{Xpg4plus:XPG4PLUS}%{!Xpg4plus:%{Xods30:ods30}%{!Xods30:XPG4PLUS}}}}},ELF %{Qn:} %{!Qy:-Qn}}\"\n+   \"%{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n+    -E%{Xa:a}%{!Xa:%{Xc:c}%{!Xc:%{Xk:k}%{!Xk:%{Xt:t}%{!Xt:a}}}},%{ansi:ansi}%{!ansi:%{posix:posix}%{!posix:%{Xpg4:xpg4}%{!Xpg4:%{Xpg4plus:XPG4PLUS}%{!Xpg4plus:%{Xods30:ods30}%{!Xods30:XPG4PLUS}}}}},ELF %{Qn:} %{!Qy:-Qn}\"\n #endif\n \n-/* Use crt1.o as a startup file and crtn.o as a closing file.  */\n+/*\n+ * Use crti.o for shared objects, crt1.o for normal executables. Make sure\n+ * to recognize both -G and -shared as a valid way of introducing shared\n+ * library generation. This is important for backwards compatibility.\n+ */\n \n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \\\n- \"%{shared: %{!mcoff: crti.o%s}} \\\n-  %{!shared:\\\n+ \"%{pg:%e-pg not supported on this platform} \\\n+  %{p:%{pp:%e-p and -pp specified - pick one}} \\\n+ %{!shared:\\\n    %{!symbolic: \\\n-    %{pg:gcrt.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}}}} \\\n+    %{!G: \\\n+     %{pp:pcrt1elf.o%s}%{p:mcrt1.o%s}%{!p:%{!pp:crt1.o%s}}}}} \\\n+  crti.o%s \\\n   %{ansi:values-Xc.o%s} \\\n   %{!ansi: \\\n-   %{Xa:values-Xa.o%s} \\\n-    %{!Xa:%{Xc:values-Xc.o%s} \\\n-     %{!Xc:%{Xk:values-Xk.o%s} \\\n-      %{!Xk:%{Xt:values-Xt.o%s} \\\n-       %{!Xt:values-Xa.o%s}}}}} \\\n-  %{mcoff:crtbeginS.o%s} %{!mcoff:crtbegin.o%s}\"\n+   %{traditional:values-Xt.o%s} \\\n+    %{!traditional: \\\n+     %{Xa:values-Xa.o%s} \\\n+      %{!Xa:%{Xc:values-Xc.o%s} \\\n+       %{!Xc:%{Xk:values-Xk.o%s} \\\n+        %{!Xk:%{Xt:values-Xt.o%s} \\\n+         %{!Xt:values-Xa.o%s}}}}}} \\\n+  crtbegin.o%s\"\n \n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n- \"%{!mcoff:crtend.o%s} \\\n-  %{mcoff:crtendS.o%s} \\\n-  %{pg:gcrtn.o%s}%{!pg:crtn.o%s}\"\n-\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__unix\");\t\t\\\n-\tbuiltin_define (\"_SCO_DS\");\t\t\\\n-\tbuiltin_define (\"_M_I386\");\t\t\\\n-\tbuiltin_define (\"_M_XENIX\");\t\t\\\n-\tbuiltin_define (\"_M_UNIX\");\t\t\\\n-\tbuiltin_assert (\"system=svr3\");\t\t\\\n-\tif (flag_iso)\t\t\t\t\\\n-\t  cpp_define (pfile, \"_STRICT_ANSI\");\t\\\n-\tif (flag_pic)\t\t\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\t\\\n-\t    builtin_define (\"__PIC__\");\t\t\t\t\t\\\n-\t    builtin_define (\"__pic__\");\t\t\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\\\n+ \"crtend.o%s crtn.o%s\"\n+\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__unix\");\t\t\t\t\\\n+\tbuiltin_define (\"_SCO_DS\");\t\t\t\t\\\n+\tbuiltin_define (\"_SCO_DS_LL\");\t\t\t\t\\\n+\tbuiltin_define (\"_SCO_ELF\");\t\t\t\t\\\n+\tbuiltin_define (\"_M_I386\");\t\t\t\t\\\n+\tbuiltin_define (\"_M_XENIX\");\t\t\t\t\\\n+\tbuiltin_define (\"_M_UNIX\");\t\t\t\t\\\n+\tbuiltin_assert (\"system=svr3\");\t\t\t\t\\\n+\tif (flag_iso)\t\t\t\t\t\t\\\n+\t  cpp_define (pfile, \"_STRICT_ANSI\");\t\t\t\\\n+\tif (flag_pic)\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"__PIC__\");\t\t\t\t\\\n+\t    builtin_define (\"__pic__\");\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n   while (0)\n \n #undef CPP_SPEC\n #define CPP_SPEC \"\\\n-  %{fpic:%{mcoff:%e-fpic is not valid with -mcoff}} \\\n-  %{fPIC:%{mcoff:%e-fPIC is not valid with -mcoff}} \\\n+  -isystem /usr/gnu/include \\\n   %{!Xods30:-D_STRICT_NAMES} \\\n   %{!ansi:%{!posix:%{!Xods30:-D_SCO_XPG_VERS=4}}} \\\n   %{ansi:-isystem include/ansi%s -isystem /usr/include/ansi} \\\n@@ -648,8 +258,6 @@ init_section ()\t\t\t\t\t\t\t\t\\\n                       -DM_BITFIELDS -DM_SYS5 -DM_SYSV -DM_INTERNAT -DM_SYSIII \\\n                       -DM_WORDSWAP}}}} \\\n   %{scointl:-DM_INTERNAT -D_M_INTERNAT} \\\n-  %{!mcoff:-D_SCO_ELF} \\\n-  %{mcoff:-D_M_COFF -D_SCO_COFF} \\\n   %{Xa:-D_SCO_C_DIALECT=1} \\\n   %{!Xa:%{Xc:-D_SCO_C_DIALECT=3} \\\n    %{!Xc:%{Xk:-D_SCO_C_DIALECT=4} \\\n@@ -658,109 +266,38 @@ init_section ()\t\t\t\t\t\t\t\t\\\n \n #undef LINK_SPEC\n #define LINK_SPEC \\\n- \"-b %{!mcoff:elf}%{mcoff:coff \\\n-   %{static:%e-static not valid with -mcoff} \\\n-   %{shared:%e-shared not valid with -mcoff} \\\n-   %{symbolic:%e-symbolic not valid with -mcoff} \\\n-   %{fpic:%e-fpic not valid with -mcoff} \\\n-   %{fPIC:%e-fPIC not valid with -mcoff}} \\\n-  -R%{Xa:a}%{!Xa:%{Xc:c}%{!Xc:%{Xk:k}%{!Xk:%{Xt:t}%{!Xt:a}}}},%{ansi:ansi}%{!ansi:%{posix:posix}%{!posix:%{Xpg4:xpg4}%{!Xpg4:%{Xpg4plus:XPG4PLUS}%{!Xpg4plus:%{Xods30:ods30}%{!Xods30:XPG4PLUS}}}}},%{mcoff:COFF}%{!mcoff:ELF} \\\n-  %{Wl,*%*} %{YP,*} %{YL,*} %{YU,*} \\\n+ \"%{!shared:%{!symbolic:%{!G:-E%{Xa:a}%{!Xa:%{Xc:c}%{!Xc:%{Xk:k}%{!Xk:%{Xt:t}%{!Xt:a}}}},%{ansi:ansi}%{!ansi:%{posix:posix}%{!posix:%{Xpg4:xpg4}%{!Xpg4:%{Xpg4plus:XPG4PLUS}%{!Xpg4plus:%{Xods30:ods30}%{!Xods30:XPG4PLUS}}}}},ELF}}} \\\n+  %{Wl,*:%*} %{YP,*} %{YL,*} %{YU,*} \\\n   %{!YP,*:%{p:-YP,/usr/ccs/libp:/lib/libp:/usr/lib/libp:/usr/ccs/lib:/lib:/usr/lib} \\\n    %{!p:-YP,/usr/ccs/lib:/lib:/usr/lib}} \\\n-  %{h*} %{static:-dn -Bstatic} %{shared:-G -dy %{!z*:-z text}} \\\n-  %{symbolic:-Bsymbolic -G -dy %{!z*:-z text}} %{z*} %{R*} %{Y*} \\\n-  %{G:-G} %{!mcoff:%{Qn:} %{!Qy:-Qn}}\"\n-\n-/* The SCO COFF linker gets confused on the difference between \"-ofoo\"\n-   and \"-o foo\".   So we just always force a single space.  */\n-\n-#define SWITCHES_NEED_SPACES \"o\"\n+  %{h*} %{static:-dn -Bstatic %{G:%e-G and -static are mutually exclusive}} \\\n+  %{shared:%{!G:-G}} %{G:%{!shared:-G}} %{shared:%{G:-G}} \\\n+  %{shared:-dy %{symbolic:-Bsymbolic -G} %{z*}} %{R*} %{Y*} \\\n+  %{Qn:} %{!Qy:-Qn} -z alt_resolve\"\n \n /* Library spec. If we are not building a shared library, provide the\n    standard libraries, as per the SCO compiler.  */\n \n #undef LIB_SPEC\n #define LIB_SPEC \\\n- \"%{shared:pic/libgcc.a%s}%{!shared:%{!symbolic:-lcrypt -lgen -lc}}\"\n+ \"%{shared:%{!G:pic/libgcc.a%s}} \\\n+  %{G:%{!shared:pic/libgcc.a%s}} \\\n+  %{shared:%{G:pic/libgcc.a%s}} \\\n+  %{p:%{!pp:-lelfprof -lelf}} %{pp:%{!p:-lelfprof -lelf}} \\\n+  %{!shared:%{!symbolic:%{!G:-lcrypt -lgen -lc}}}\"\n \n #undef LIBGCC_SPEC\n #define LIBGCC_SPEC \\\n- \"%{!shared:-lgcc}\"\n+ \"%{!shared:%{!G:-lgcc}}\"\n \n-#define MASK_COFF     \t\t010000000000\t/* Mask for elf generation */\n-#define TARGET_ELF              (1) /* (!(target_flags & MASK_COFF)) */\n+/* Here for legacy support only so we still accept -melf flag */\n+#define MASK_COFF     \t\t010000000000\t/* Mask for COFF generation */\n+#define TARGET_ELF              (1)\n \n #undef SUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES \t\t\t\t\t\\\n \t{ \"elf\", -MASK_COFF, N_(\"Generate ELF output\")  },\n \n-#define NO_DOLLAR_IN_LABEL\n-\n-/* Implicit library calls should use memcpy, not bcopy, etc.  They are \n-   faster on OpenServer libraries.  */\n-\n-#define TARGET_MEM_FUNCTIONS\n-\n-/* Biggest alignment supported by the object file format of this\n-   machine.  Use this macro to limit the alignment which can be\n-   specified using the `__attribute__ ((aligned (N)))' construct.  If\n-   not defined, the default value is `BIGGEST_ALIGNMENT'.  */\n-\n-#define MAX_OFILE_ALIGNMENT (32768*8)\n-\n-/* Define the `__builtin_va_list' type for the ABI.  On OpenServer, this\n-   type is `char *'.  */\n-#undef BUILD_VA_LIST_TYPE\n-#define BUILD_VA_LIST_TYPE(VALIST) \\\n-  (VALIST) = build_pointer_type (char_type_node)\n-\n-\n-/*\n-Here comes some major hackery to get the crt stuff to compile properly.\n-Since we can (and do) compile for both COFF and ELF environments, we\n-set things up accordingly, based on the pre-processor defines for ELF\n-and COFF. This is insane, but then I guess having one compiler with a\n-single back-end supporting two vastly different file format types is\n-a little insane too. But it is not impossible and we get a useful\n-compiler at the end of the day. Onward we go ...\n-*/\n-\n-#if defined(CRT_BEGIN) || defined(CRT_END) || defined(IN_LIBGCC2)\n-# undef OBJECT_FORMAT_ELF\n-# undef INIT_SECTION_ASM_OP\n-# undef FINI_SECTION_ASM_OP\n-# undef CTORS_SECTION_ASM_OP\n-# undef DTORS_SECTION_ASM_OP\n-# undef EH_FRAME_SECTION_NAME\n-# undef CTOR_LIST_BEGIN\n-# undef CTOR_LIST_END\n-# undef DO_GLOBAL_CTORS_BODY\n-\n-# if defined (_SCO_ELF)\n-#  define OBJECT_FORMAT_ELF\n-#  define INIT_SECTION_ASM_OP INIT_SECTION_ASM_OP_ELF\n-#  define FINI_SECTION_ASM_OP FINI_SECTION_ASM_OP_ELF\n-#  define DTORS_SECTION_ASM_OP DTORS_SECTION_ASM_OP_ELF\n-#  define CTORS_SECTION_ASM_OP CTORS_SECTION_ASM_OP_ELF\n-#  define EH_FRAME_SECTION_NAME EH_FRAME_SECTION_NAME_ELF\n-# else /* ! _SCO_ELF */\n-#  define INIT_SECTION_ASM_OP INIT_SECTION_ASM_OP_COFF\n-#  define FINI_SECTION_ASM_OP FINI_SECTION_ASM_OP_COFF\n-#  define DTORS_SECTION_ASM_OP DTORS_SECTION_ASM_OP_COFF\n-#  define CTORS_SECTION_ASM_OP CTORS_SECTION_ASM_OP_COFF\n-#  define EH_FRAME_SECTION_NAME EH_FRAME_SECTION_NAME_COFF\n-#  define CTOR_LIST_BEGIN asm (INIT_SECTION_ASM_OP); asm (\"pushl $0\")\n-#  define CTOR_LIST_END CTOR_LIST_BEGIN\n-#  define DO_GLOBAL_CTORS_BODY\t\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-     func_ptr *p, *beg = alloca(0);\t\t\t\t\t\\\n-     for (p = beg; *p;)\t\t\t\t\t\t\t\\\n-      (*p++) ();\t\t\t\t\t\t\t\\\n-} while (0)\n-# endif /* ! _SCO_ELF */\n-#endif /* CRT_BEGIN !! CRT_END */\n-\n /* Handle special EH pointer encodings.  Absolute, pc-relative, and\n    indirect are handled automatically.  */\n #define ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX(FILE, ENCODING, SIZE, ADDR, DONE) \\\n@@ -794,10 +331,3 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t   : \"=d\"(BASE))\n #endif\n \n-/* Select a format to encode pointers in exception handling data.  CODE\n-   is 0 for data, 1 for code labels, 2 for function pointers.  GLOBAL is\n-   true if the symbol may be affected by dynamic relocations.  */\n-#undef ASM_PREFERRED_EH_DATA_FORMAT\n-#define ASM_PREFERRED_EH_DATA_FORMAT(CODE,GLOBAL)\t\t\t\\\n-  (flag_pic ? (GLOBAL ? DW_EH_PE_indirect : 0) | DW_EH_PE_datarel\t\\\n-   : DW_EH_PE_absptr)"}, {"sha": "c6155930e54774a3af7da7e51dae055312796b7c", "filename": "gcc/config/i386/t-sco5", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Fconfig%2Fi386%2Ft-sco5", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Fconfig%2Fi386%2Ft-sco5", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-sco5?ref=ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b", "patch": "@@ -1,18 +1,15 @@\n-# We need to use -fPIC when we are using gcc to compile the routines in\n-# crtstuff.c.  This is only really needed when we are going to use gcc/g++\n-# to produce a shared library, but since we don't know ahead of time when\n-# we will be doing that, we just always use -fPIC when compiling the\n-# routines in crtstuff.c.  Likewise for libgcc2.c.   This is less painful\n-# than multilibbing everything with PIC and PIC-not variants.\n-\n-# The pushl in CTOR initialization interferes with frame pointer elimination.\n-\n+# We multilib libgcc for -fPIC, to get real PIC code in it.\n+# NOTE: We must use -fPIC on crt{begi,end}.o else we get an RTLD error\n+# \"cant set protections on segment of length blah at 0x8048000\".\n CRTSTUFF_T_CFLAGS   = -fPIC -fno-omit-frame-pointer\n-TARGET_LIBGCC2_CFLAGS = -fPIC\n \n-crti.o: $(srcdir)/config/i386/sol2-ci.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-ci.asm >crti.s\n-\t$(GCC_FOR_TARGET) -c -o crti.o crti.s\n+MULTILIB_OPTIONS    = fPIC\n+MULTILIB_DIRNAMES   = pic\n+MULTILIB_MATCHES    = fPIC=fpic\n+MULTILIB_EXTRA_OPTS =\n+\n+LIBGCC=stmp-multilib\n+INSTALL_LIBGCC=install-multilib\n \n # See all the declarations.\n FIXPROTO_DEFINES = -D_XOPEN_SOURCE -D_POSIX_C_SOURCE=2"}, {"sha": "edeb554eea09f523397f5e60d56f7efbc48874b8", "filename": "gcc/config/i386/t-sco5gas", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8ada98685bc94b7bbde2865fd685464a18d160d/gcc%2Fconfig%2Fi386%2Ft-sco5gas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8ada98685bc94b7bbde2865fd685464a18d160d/gcc%2Fconfig%2Fi386%2Ft-sco5gas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-sco5gas?ref=a8ada98685bc94b7bbde2865fd685464a18d160d", "patch": "@@ -1,23 +0,0 @@\n-# The pushl in CTOR initialization interferes with frame pointer elimination.\n-CRTSTUFF_T_CFLAGS   = -fPIC -fno-omit-frame-pointer\n-CRTSTUFF_T_CFLAGS_S = -fno-omit-frame-pointer\n-\n-#\n-# I am still a little unsure of the multilib architecture. The following\n-# 4 lines are based on advice from meissner@cygnus.com.\n-#\n-MULTILIB_OPTIONS    = fPIC\n-MULTILIB_DIRNAMES   = pic\n-MULTILIB_EXCEPTIONS = *fPIC*\n-MULTILIB_MATCHES    = fPIC=fpic\n-MULTILIB_EXTRA_OPTS =\n-\n-LIBGCC=stmp-multilib\n-INSTALL_LIBGCC=install-multilib\n-\n-crti.o: $(srcdir)/config/i386/sol2-ci.asm $(GCC_PASSES)\n-\tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-ci.asm >crti.s\n-\t$(GCC_FOR_TARGET) -c -o crti.o crti.s\n-\n-# See all the declarations.\n-FIXPROTO_DEFINES = -D_XOPEN_SOURCE -D_POSIX_C_SOURCE=2"}, {"sha": "9b98d58aa45bc56b1585fef3f30f9309d55cf2f3", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 28, "deletions": 59, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b", "patch": "@@ -2371,65 +2371,34 @@ maintain.  GCC now emits only DWARF 2 for this target.  This means you\n may use either the UDK debugger or GDB to debug programs built by this\n version of GCC@.\n \n-Use of the @option{-march=pentiumpro} flag can result in\n-unrecognized opcodes when using the native assembler on OS versions before\n-5.0.6.  (Support for P6 opcodes was added to the native ELF assembler in\n-that version.)  While it's rather rare to see these emitted by GCC yet,\n-errors of the basic form:\n-\n-@example\n-  /usr/tmp/ccaNlqBc.s:22:unknown instruction: fcomip\n-  /usr/tmp/ccaNlqBc.s:50:unknown instruction: fucomip\n-@end example\n-\n-are symptoms of this problem.  You may work around this by not\n-building affected files with that flag, by using the GNU assembler, or\n-by using the assembler provided with the current version of the OS@.\n-Users of GNU assembler should see the note below for hazards on doing\n-so.\n-\n-The native SCO assembler that is provided with the OS at no\n-charge is normally required.  If, however, you must be able to use\n-the GNU assembler (perhaps you're compiling code with asms that\n-require GAS syntax) you may configure this package using the flags\n-@uref{./configure.html#with-gnu-as,,@option{--with-gnu-as}}.  You must\n-use a recent version of GNU binutils; versions past 2.9.1 seem to work\n-well.\n-\n-In general, the @option{--with-gnu-as} option isn't as well tested\n-as the native assembler.\n-\n-Look in @file{gcc/config/i386/sco5.h} (search for ``messy'') for\n-additional OpenServer-specific flags.\n-\n-Systems based on OpenServer before 5.0.4 (@samp{uname -X}\n-will tell you what you're running) require TLS597 from\n-@uref{ftp://stage.caldera.com/TLS/,,ftp://stage.caldera.com/TLS/}\n-for C++ constructors and destructors to work right.\n-\n-The system linker in (at least) 5.0.4 and 5.0.5 will sometimes\n-do the wrong thing for a construct that GCC will emit for PIC\n-code.  This can be seen as execution testsuite failures when using\n-@option{-fPIC} on @file{921215-1.c}, @file{931002-1.c}, @file{nestfunc-1.c}, and @file{gcov-1.c}.\n-For 5.0.5, an updated linker that will cure this problem is\n-available.  You must install both\n-@uref{ftp://ftp.sco.com/pub/openserver5/rs505a,,ftp://ftp.sco.com/pub/openserver5/rs505a}\n-and @uref{ftp://ftp.sco.com/pub/openserver5,,OSS499A}.\n-\n-The dynamic linker in OpenServer 5.0.5 (earlier versions may show\n-the same problem) aborts on certain G77-compiled programs.  It's particularly\n-likely to be triggered by building Fortran code with the @option{-fPIC} flag.\n-Although it's conceivable that the error could be triggered by other\n-code, only G77-compiled code has been observed to cause this abort.\n-If you are getting core dumps immediately upon execution of your\n-G77 program---and especially if it's compiled with @option{-fPIC}---try applying\n-@uref{sco_osr5_g77.patch,,@file{sco_osr5_g77.patch}} to your @samp{libf2c} and\n-rebuilding GCC@.\n-Affected faults, when analyzed in a debugger, will show a stack\n-backtrace with a fault occurring in @code{rtld()} and the program\n-running as @file{/usr/lib/ld.so.1}.  This problem has been reported to SCO\n-engineering and will hopefully be addressed in later releases.\n-\n+GCC is now only supported on releases 5.0.4 and later, and requires that\n+you install Support Level Supplement OSS646B or later, and Support Level\n+Supplement OSS631C or later.  If you are using release 5.0.7 of\n+OpenServer, you must have at least the first maintenance pack installed\n+(this includes the relevant portions of OSS646).  OSS646, also known as\n+the \"Execution Environment Update\", provides updated link editors and\n+assemblers, as well as updated standard C and math libraries.  The C\n+startup modules are also updated to support the System V gABI draft, and\n+GCC relies on that behaviour.  OSS631 provides a collection of commonly\n+used open source libraries, some of which GCC depends on (such as GNU\n+gettext and zlib).  SCO OpenServer Release 5.0.7 has all of this built\n+in by default, but OSS631C and later also apply to that release.  Please\n+visit\n+@uref{ftp://ftp.sco.com/pub/openserver5,,ftp://ftp.sco.com/pub/openserver5}\n+for the latest versions of these (and other potentially useful)\n+supplements.\n+\n+Although there is support for using the native assembler, it is\n+recommended that you configure GCC to use the GNU assembler.  You do\n+this by using the flags\n+@uref{./configure.html#with-gnu-as,,@option{--with-gnu-as}}.  You should\n+use a modern version of GNU binutils.  Version 2.13.2.1 was used for all\n+testing.  In general, only the @option{--with-gnu-as} option is tested.\n+A modern bintuils (as well as a plethora of other development related\n+GNU utilities) can be found in Support Level Supplement OSS658A, the\n+\"GNU Development Tools\" package.  See the SCO web and ftp sites for details.\n+That package also contains the currently \"officially supported\" version of\n+GCC, version 2.95.3.  It is useful for bootstrapping this version.  \n \n @html\n <hr />"}, {"sha": "588a331162dc0d5f0099f9fba23ce75b2c098f6c", "filename": "gcc/testsuite/gcc.dg/nest.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c?ref=ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b", "patch": "@@ -5,6 +5,7 @@\n /* Support for -pg on irix relies on gcrt1.o which doesn't exist yet.\n    See: http://gcc.gnu.org/ml/gcc/2002-10/msg00169.html */\n /* { dg-error \"gcrt1.o\" \"Profiler support missing\" { target mips*-*-irix* } 0 } */\n+/* { dg-error \"-pg not supported\" \"Profiler support missing\" { target *-*-sco3.2v5* } 0 } */\n \n long foo (long x)\n {"}, {"sha": "6ffda3f7ead082193c571eeb646cedf2626976fb", "filename": "gcc/unwind-dw2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Funwind-dw2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b/gcc%2Funwind-dw2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2.c?ref=ac24fc99ac73ec6dc3cabf1ece2e4500bd06006b", "patch": "@@ -178,7 +178,7 @@ _Unwind_GetGR (struct _Unwind_Context *context, int index)\n _Unwind_Word\n _Unwind_GetCFA (struct _Unwind_Context *context)\n {\n-  return context->cfa;\n+  return (_Unwind_Word)context->cfa;\n }\n \n /* Overwrite the saved value for register REG in CONTEXT with VAL.  */"}]}