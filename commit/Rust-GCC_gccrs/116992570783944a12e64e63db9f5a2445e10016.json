{"sha": "116992570783944a12e64e63db9f5a2445e10016", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE2OTkyNTcwNzgzOTQ0YTEyZTY0ZTYzZGI5ZjVhMjQ0NWUxMDAxNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-22T13:57:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-22T13:57:37Z"}, "message": "[Ada] Fix spurious visibility error for tagged type with inlining\n\nThis fixes a spurious visibility error for the very peculiar case where\nan operator that operates on the class-wide type of a tagged type is\ndeclared in a package, the operator is renamed in another package where\na subtype of the tagged type is declared, and both packages end up in\nthe transititive closure of a unit compiled with optimization and\ninter-inlining (-gnatn).\n\n2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch8.adb (End_Use_Type): Reset the In_Use flag on the\n\tclass-wide type if the type is tagged.\n\t(Use_One_Type): Add commentary on the handling of the class-wide\n\ttype.\n\ngcc/testsuite/\n\n\t* gnat.dg/inline17.adb, gnat.dg/inline17_pkg1.adb,\n\tgnat.dg/inline17_pkg1.ads, gnat.dg/inline17_pkg2.ads,\n\tgnat.dg/inline17_pkg3.adb, gnat.dg/inline17_pkg3.ads: New\n\ttestcase.\n\nFrom-SVN: r273683", "tree": {"sha": "aa4626c07b776c514f379053f983b825910d797f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa4626c07b776c514f379053f983b825910d797f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/116992570783944a12e64e63db9f5a2445e10016", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116992570783944a12e64e63db9f5a2445e10016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/116992570783944a12e64e63db9f5a2445e10016", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116992570783944a12e64e63db9f5a2445e10016/comments", "author": null, "committer": null, "parents": [{"sha": "ff9d220ede29dc7d0d40933733180f12cba54f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff9d220ede29dc7d0d40933733180f12cba54f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff9d220ede29dc7d0d40933733180f12cba54f17"}], "stats": {"total": 98, "additions": 97, "deletions": 1}, "files": [{"sha": "06e6421c20234f079fe61b9d2fe5acd869822b35", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116992570783944a12e64e63db9f5a2445e10016/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116992570783944a12e64e63db9f5a2445e10016/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=116992570783944a12e64e63db9f5a2445e10016", "patch": "@@ -1,3 +1,10 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch8.adb (End_Use_Type): Reset the In_Use flag on the\n+\tclass-wide type if the type is tagged.\n+\t(Use_One_Type): Add commentary on the handling of the class-wide\n+\ttype.\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* einfo.ads (Is_For_Access_Subtype): Delete."}, {"sha": "7185c40f68fc964c01d054791387484bbc8b206b", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116992570783944a12e64e63db9f5a2445e10016/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116992570783944a12e64e63db9f5a2445e10016/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=116992570783944a12e64e63db9f5a2445e10016", "patch": "@@ -4836,6 +4836,13 @@ package body Sem_Ch8 is\n             Set_In_Use (Base_Type (T), False);\n             Set_Current_Use_Clause (T, Empty);\n             Set_Current_Use_Clause (Base_Type (T), Empty);\n+\n+            --  See Use_One_Type for the rationale. This is a bit on the naive\n+            --  side, but should be good enough in practice.\n+\n+            if Is_Tagged_Type (T) then\n+               Set_In_Use (Class_Wide_Type (T), False);\n+            end if;\n          end if;\n       end if;\n \n@@ -9985,7 +9992,10 @@ package body Sem_Ch8 is\n          Set_In_Use (T);\n \n          --  If T is tagged, primitive operators on class-wide operands are\n-         --  also available.\n+         --  also deemed available. Note that this is really necessary only\n+         --  in semantics-only mode, because the primitive operators are not\n+         --  fully constructed in this mode, but we do it in all modes for the\n+         --  sake of uniformity, as this should not matter in practice.\n \n          if Is_Tagged_Type (T) then\n             Set_In_Use (Class_Wide_Type (T));"}, {"sha": "0f8b798f0a58ebda8b469537c888fba0280d41b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=116992570783944a12e64e63db9f5a2445e10016", "patch": "@@ -1,3 +1,10 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/inline17.adb, gnat.dg/inline17_pkg1.adb,\n+\tgnat.dg/inline17_pkg1.ads, gnat.dg/inline17_pkg2.ads,\n+\tgnat.dg/inline17_pkg3.adb, gnat.dg/inline17_pkg3.ads: New\n+\ttestcase.\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/iter5.adb, gnat.dg/iter5_pkg.ads: New testcase."}, {"sha": "bb6e5c2563d4170cfae442fca836e2ea5201e726", "filename": "gcc/testsuite/gnat.dg/inline17.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline17.adb?ref=116992570783944a12e64e63db9f5a2445e10016", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do compile }\n+--  { dg-options \"-O -gnatn\" }\n+with Inline17_Pkg1; use Inline17_Pkg1;\n+with Inline17_Pkg2; use Inline17_Pkg2;\n+\n+procedure Inline17 is\n+   use type SQL_Field;\n+begin\n+   Test;\n+end;"}, {"sha": "80febe8be181b37f4ba6675c6544b90be3ac3a41", "filename": "gcc/testsuite/gnat.dg/inline17_pkg1.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg1.adb?ref=116992570783944a12e64e63db9f5a2445e10016", "patch": "@@ -0,0 +1,15 @@\n+with Inline17_Pkg2; use Inline17_Pkg2;\n+\n+package body Inline17_Pkg1 is\n+\n+   procedure Test is\n+   begin\n+      null;\n+   end;\n+\n+   function Get (Field : SQL_Field) return Integer is\n+   begin\n+      return +Field;\n+   end;\n+\n+end Inline17_Pkg1;"}, {"sha": "78f26b160fb7ce6c151880de414be67bd7a7d29d", "filename": "gcc/testsuite/gnat.dg/inline17_pkg1.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg1.ads?ref=116992570783944a12e64e63db9f5a2445e10016", "patch": "@@ -0,0 +1,7 @@\n+\n+package Inline17_Pkg1 is\n+\n+   procedure Test;\n+   pragma Inline (Test);\n+\n+end Inline17_Pkg1;"}, {"sha": "bf89d5573ec088f7f31df57a5b9c66e9accf8fb3", "filename": "gcc/testsuite/gnat.dg/inline17_pkg2.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg2.ads?ref=116992570783944a12e64e63db9f5a2445e10016", "patch": "@@ -0,0 +1,10 @@\n+with Inline17_Pkg3; use Inline17_Pkg3;\n+\n+package Inline17_Pkg2 is\n+\n+   subtype SQL_Field is Inline17_Pkg3.SQL_Field;\n+\n+   function \"+\" (Field : SQL_Field'Class) return Integer renames\n+       Inline17_Pkg3.\"+\";\n+\n+end Inline17_Pkg2;"}, {"sha": "411a509e83a5cff4a842df130c7417a022160f57", "filename": "gcc/testsuite/gnat.dg/inline17_pkg3.adb", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg3.adb?ref=116992570783944a12e64e63db9f5a2445e10016", "patch": "@@ -0,0 +1,14 @@\n+\n+package body Inline17_Pkg3 is\n+\n+   function \"+\" (Field : SQL_Field'Class) return Integer is\n+   begin\n+      return 0;\n+   end;\n+\n+   function Unchecked_Get (Self : Ref) return Integer is\n+   begin\n+      return Self.Data;\n+   end;\n+\n+end Inline17_Pkg3;"}, {"sha": "6f0c5a8e9df53f916bd5f78f0fc04035ee6b572c", "filename": "gcc/testsuite/gnat.dg/inline17_pkg3.ads", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116992570783944a12e64e63db9f5a2445e10016/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline17_pkg3.ads?ref=116992570783944a12e64e63db9f5a2445e10016", "patch": "@@ -0,0 +1,16 @@\n+\n+package Inline17_Pkg3 is\n+\n+   type SQL_Field is tagged null record;\n+\n+   function \"+\" (Field : SQL_Field'Class) return Integer;\n+\n+   type Ref is record\n+      Data : Integer;\n+   end record;\n+\n+   function Unchecked_Get (Self : Ref) return Integer with Inline_Always;\n+\n+   function Get (Self : Ref) return Integer is (Unchecked_Get (Self));\n+\n+end Inline17_Pkg3;"}]}