{"sha": "f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkNmEyNGMyZTZiYjE4MGNmM2YyNDhmN2MwMzI5NmFhNjhmNDZjNA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-05-22T03:03:26Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-05-22T03:03:26Z"}, "message": "tree.h (type_num_arguments): Declare it.\n\n\t* tree.h (type_num_arguments): Declare it.\n\t* tree.c (type_num_arguments): New function.\n\nFrom-SVN: r42418", "tree": {"sha": "fba82591b7ddf05c50bf31d5234f1cecd1c31af6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fba82591b7ddf05c50bf31d5234f1cecd1c31af6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4/comments", "author": null, "committer": null, "parents": [{"sha": "ca29c7970a6811153860b391e1c0aa057c2d1556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca29c7970a6811153860b391e1c0aa057c2d1556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca29c7970a6811153860b391e1c0aa057c2d1556"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "4b87a8c6e4033f4a2586a70ce5620c2069118c5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4", "patch": "@@ -1,3 +1,8 @@\n+2001-05-21  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* tree.h (type_num_arguments): Declare it.\n+\t* tree.c (type_num_arguments): New function.\n+\n 2001-05-21  Richard Henderson  <rth@redhat.com>\n \n \t* dwarf2out.c (current_funcdef_number): Move outside dwarf2"}, {"sha": "866067be526e383d4e1454be1d6948b63e88edf0", "filename": "gcc/tree.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4", "patch": "@@ -3334,6 +3334,28 @@ type_list_equal (l1, l2)\n   return t1 == t2;\n }\n \n+/* Returns the number of arguments to the FUNCTION_TYPE or METHOD_TYPE\n+   given by TYPE.  If the argument list accepts variable arguments,\n+   then this function counts only the ordinary arguments.  */\n+\n+int\n+type_num_arguments (type)\n+     tree type;\n+{\n+  int i = 0;\n+  tree t;\n+\n+  for (t = TYPE_ARG_TYPES (type); t; t = TREE_CHAIN (t))\n+    /* If the function does not take a variable number of arguments,\n+       the last element in the list will have type `void'.  */\n+    if (VOID_TYPE_P (TREE_VALUE (t)))\n+      break;\n+    else\n+      ++i;\n+\n+  return i;\n+}\n+\n /* Nonzero if integer constants T1 and T2\n    represent the same constant value.  */\n "}, {"sha": "622eed3c971f84e6d3bb83c6dbb84880169e03f9", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=f5d6a24c2e6bb180cf3f248f7c03296aa68f46c4", "patch": "@@ -2520,6 +2520,7 @@ extern tree get_set_constructor_bytes\t\tPARAMS ((tree,\n \t\t\t\t\t\t       unsigned char *, int));\n extern tree get_callee_fndecl                   PARAMS ((tree));\n extern void set_decl_assembler_name             PARAMS ((tree));\n+extern int type_num_arguments                   PARAMS ((tree));\n \f\n /* In stmt.c */\n "}]}