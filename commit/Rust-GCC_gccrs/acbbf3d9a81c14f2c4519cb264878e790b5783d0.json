{"sha": "acbbf3d9a81c14f2c4519cb264878e790b5783d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNiYmYzZDlhODFjMTRmMmM0NTE5Y2IyNjQ4NzhlNzkwYjU3ODNkMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-24T02:36:02Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-24T02:36:02Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1251", "tree": {"sha": "08247970e3c9a2c0dbeb9d46d2a3db212ac8b8d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08247970e3c9a2c0dbeb9d46d2a3db212ac8b8d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acbbf3d9a81c14f2c4519cb264878e790b5783d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acbbf3d9a81c14f2c4519cb264878e790b5783d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acbbf3d9a81c14f2c4519cb264878e790b5783d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acbbf3d9a81c14f2c4519cb264878e790b5783d0/comments", "author": null, "committer": null, "parents": [{"sha": "3e2481e9141d2a6da579816c3edba5e64b746824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2481e9141d2a6da579816c3edba5e64b746824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e2481e9141d2a6da579816c3edba5e64b746824"}], "stats": {"total": 91, "additions": 33, "deletions": 58}, "files": [{"sha": "fc2f851903ec15f6ddac5e6285c13e1cbaaf5d44", "filename": "gcc/Makefile.in", "status": "modified", "additions": 33, "deletions": 58, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acbbf3d9a81c14f2c4519cb264878e790b5783d0/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acbbf3d9a81c14f2c4519cb264878e790b5783d0/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=acbbf3d9a81c14f2c4519cb264878e790b5783d0", "patch": "@@ -89,7 +89,7 @@ OLDAR = ar\n \n # The GCC to use for compiling libgcc2.a.  Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES) or $(GCC_PARTS).\n-GCC_FOR_TARGET = ./gcc\n+GCC_FOR_TARGET = ./xgcc\n \n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n@@ -209,11 +209,11 @@ INSTALL_HEADERS=install-headers\n # Select which version of fixincludes to use (I.E. regular versus SVR4)\n FIXINCLUDES=fixincludes\n \n-# List of things which should already be built whenever we try to use gcc\n+# List of things which should already be built whenever we try to use xgcc\n # to compile anything (without linking).\n-GCC_PASSES=gcc cc1 cpp $(EXTRA_PASSES)\n+GCC_PASSES=xgcc cc1 cpp $(EXTRA_PASSES)\n \n-# List of things which should already be built whenever we try to use gcc\n+# List of things which should already be built whenever we try to use xgcc\n # to link anything.\n GCC_PARTS=$(GCC_PASSES) libgcc.a $(EXTRA_PROGRAMS) $(USE_COLLECT2) $(EXTRA_PARTS)\n \n@@ -388,7 +388,7 @@ LIB2FUNCS = _muldi3 _divdi3 _moddi3 _udivdi3 _umoddi3 _negdi2 \\\n     _bb _shtab _clear_cache _trampoline __main _exit\n \n # Header files that are made available under the same name\n-# to programs compiled with gcc.\n+# to programs compiled with GCC.\n USER_H = assert.h va-hp800.h va-i860.h va-mips.h va-pyr.h va-sparc.h \\\n     va-spur.h va-m88k.h va-i960.h proto.h $(EXTRA_HEADERS)\n \n@@ -418,7 +418,7 @@ all.internal: start.encap rest.encap\n # This is what to compile if making a cross-compiler.\n all.cross: native gcc-cross cross-test $(EXTRA_PARTS)\n # This is what must be made before installing GCC and converting libraries.\n-start.encap: native gcc specs $(LIBGCC1_TARGET)\n+start.encap: native xgcc specs $(LIBGCC1_TARGET)\n # Use this to make a GCC that will be used only to recompile GCC.\n for-bootstrap: start.encap libgcc.a\n # These can't be made, with COFF encapsulation, until after GCC can run.\n@@ -460,20 +460,21 @@ cross-test.o: cross-test.c native gcc-cross\n # This is used only if the user explicitly asks for it.\n compilations: ${OBJS}\n \n-gcc: gcc.o version.o $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o gccnew gcc.o version.o $(LIBS)\n-# Go via `gccnew' to avoid `file busy' if $(CC) is `gcc'.\n-\tmv -f gccnew gcc\n+# We call this executable `xgcc' rather than `gcc'\n+# to avoid confusion if the current directory is in the path\n+# and CC is `gcc'.  It is renamed to `gcc' when it is installed.\n+xgcc: gcc.o version.o $(LIBDEPS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o xgcc gcc.o version.o $(LIBS)\n \n # Dump a specs file to make -B./ read these specs over installed ones.\n-specs: gcc\n-\t./gcc -dumpspecs > specs\n+specs: xgcc\n+\t./xgcc -dumpspecs > specs\n \n-# We do want to create an executable named `gcc', so we can use it to\n+# We do want to create an executable named `xgcc', so we can use it to\n # compile libgcc2.a.\n # Also create gcc-cross, so that install-common will install properly.\n-gcc-cross: gcc\n-\tcp gcc gcc-cross\n+gcc-cross: xgcc\n+\tcp xgcc gcc-cross\n \n cc1:$(P) $(C_OBJS) $(OBJS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o cc1 $(C_OBJS) $(OBJS) $(LIBS)\n@@ -500,9 +501,9 @@ enquire.o: $(srcdir)/enquire.c $(GCC_PASSES)\n \f\n # Build libgcc.a.\n # This is done in two parts because some functions, in libgcc1.c,\n-# must be compiled with something other than gcc,\n-# while the rest, in libgcc2.c, must be compiled with gcc.\n-# That means we can't do libgcc2.c until after gcc, cc1, etc.\n+# must be compiled with something other than GCC,\n+# while the rest, in libgcc2.c, must be compiled with xgcc.\n+# That means we can't do libgcc2.c until after xgcc, cc1, etc.\n \n # Use this as value of LIBGCC1 to cause conversion to GNU library format.\n # LIBCONVERT should put its output in libgcc1.conv.\n@@ -518,7 +519,7 @@ libgcc1.null: $(CROSS_TOOLS) $(GCC_PASSES)\n \trm -f dummy.o dummy.c\n \n # Compile the library of arithmetic subroutines with the native compiler.\n-# Don't compile it with gcc!\n+# Don't compile it with GCC!\n # (That would cause most arithmetic functions to call themselves.)\n libgcc1.a: libgcc1.c $(CONFIG_H) $(LIB1FUNCS_EXTRA) config.status\n \t-rm -f tmplibgcc1.a\n@@ -1105,7 +1106,7 @@ cccp.o: cccp.c $(CONFIG_H) pcp.h version.c\n \t  -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/sys-include\\\" \\\n \t  -c `echo $(srcdir)/cccp.c | sed 's,^\\./,,'`\n \n-proto: config.status protoize unprotoize SYSCALLS.c.X protoize.1 unprotoize.1\n+proto: config.status protoize unprotoize SYSCALLS.c.X\n \n protoize: protoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) \\\n@@ -1118,7 +1119,6 @@ unprotoize: unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n unprotoize.o:\tstamp-proto ;\n \n stamp-proto:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n-\ttouch stamp-proto\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n           -DGPLUSPLUS_INCLUDE_DIR=\\\"$(libdir)/g++-include\\\" \\\n@@ -1134,26 +1134,13 @@ stamp-proto:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n \t  -DLOCAL_INCLUDE_DIR=\\\"$(prefix)/include\\\" \\\n \t  -DSTD_PROTO_DIR=\\\"$(libsubdir)\\\" \\\n \t  $(srcdir)/protoize.c\n+\ttouch stamp-proto\n \n getopt.o: $(srcdir)/getopt.c getopt.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/getopt.c\n getopt1.o: $(srcdir)/getopt1.c getopt.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/getopt1.c\n \n-protoize.1:\t$(srcdir)/proto-man ./cpp\n-\t./cpp -traditional $(srcdir)/proto-man \\\n-\t\t| grep -v '^#' \\\n-\t\t\t| awk 'NF > 0 {print}' > tmp-proto.1\n-\t-rm -f protoize.1\n-\tmv tmp-proto.1 protoize.1\n-\n-unprotoize.1:\t$(srcdir)/proto-man ./cpp\n-\t./cpp -traditional -DUNPRO $(srcdir)/proto-man \\\n-\t\t| grep -v '^#' \\\n-\t\t\t| awk 'NF > 0 {print}' > tmp-unproto.1\n-\t-rm -f unprotoize.1\n-\tmv tmp-unproto.1 unprotoize.1\n-\n # This info describes the target machine, so compile with GCC just built.\n SYSCALLS.c.X: $(srcdir)/sys-types.h $(srcdir)/sys-protos.h $(GCC_PASSES)\n \t-rm -f SYSCALLS.c tmp-SYSCALLS.s\n@@ -1223,7 +1210,7 @@ mostlyclean:\n \t-rm -f tmplibgcc* tmpcopy\n \tfor name in $(LIB1FUNCS); do rm -f $${name}.c; done\n # Delete other temporary files.\n-\t-rm -f tmp-float.h tmp-gcc.xtar.Z tmp-limits.h gccnew\n+\t-rm -f tmp-float.h tmp-gcc.xtar.Z tmp-limits.h\n \t-rm -f tmp-foo1 tmp-foo2 tmp-proto.* tmp-unproto.1 tmp-SYSCALLS.s\n # Delete the stamp files.\n \t-rm -f stamp-* tmp-*\n@@ -1270,7 +1257,6 @@ extraclean: distclean\n realclean: distclean\n \t-rm -f cp-parse.c cp-parse.h cp-parse.output\n \t-rm -f objc-parse.c objc-parse.output\n-\t-rm -f protoize.1 unprotoize.1\n \t-rm -f c-parse.c c-parse.h c-parse.output\n \t-rm -f cexp.c cexp.output TAGS \n \t-rm -f cpp.info* cpp.??s cpp.*aux\n@@ -1391,7 +1377,7 @@ install-common: native install-dir\n \t  else true; fi; \\\n \telse \\\n \t  rm -f $(bindir)/gcc; \\\n-\t  $(INSTALL_PROGRAM) gcc $(bindir)/gcc; \\\n+\t  $(INSTALL_PROGRAM) xgcc $(bindir)/gcc; \\\n \t  rm -f $(bindir)/gcc-$(target)-1; \\\n \t  ln $(bindir)/gcc $(bindir)/gcc-$(target)-1; \\\n \t  mv $(bindir)/gcc-$(target)-1 $(bindir)/gcc-$(target); \\\n@@ -1414,21 +1400,13 @@ install-proto: proto install-dir\n \tchmod a-x $(libsubdir)/SYSCALLS.c.X\n \n # Install the man pages.\n-install-man: install-dir $(srcdir)/gcc.1 $(srcdir)/cccp.1 \\\n-   protoize.1 unprotoize.1 $(srcdir)/g++.1\n+install-man: install-dir $(srcdir)/gcc.1 $(srcdir)/cccp.1 $(srcdir)/g++.1\n \t-rm -f $(mandir)/gcc$(manext)\n \t-$(INSTALL_DATA) $(srcdir)/gcc.1 $(mandir)/gcc$(manext)\n \t-chmod a-x $(mandir)/gcc$(manext)\n \t-rm -f $(mandir)/cccp$(manext)\n \t-$(INSTALL_DATA) $(srcdir)/cccp.1 $(mandir)/cccp$(manext)\n \t-chmod a-x $(mandir)/cccp$(manext)\n-\t-rm -f $(mandir)/protoize$(manext)\n-\t-$(INSTALL_DATA) protoize.1 $(mandir)/protoize$(manext)\n-\t-chmod a-x $(mandir)/protoize$(manext)\n-\t-rm -f $(mandir)/unprotoize$(manext)\n-\t-$(INSTALL_DATA) unprotoize.1 $(mandir)/unprotoize$(manext)\n-\t-chmod a-x $(mandir)/unprotoize$(manext)\n-\t-rm -f $(mandir)/g++$(manext)\n \t-$(INSTALL_DATA) $(srcdir)/g++.1 $(mandir)/g++$(manext)\n \t-chmod a-x $(mandir)/g++$(manext)\n \n@@ -1527,11 +1505,7 @@ install-fixincludes: install-headers\n install-collect2: collect2\n \t$(INSTALL_PROGRAM) collect2 $(libsubdir)/ld\n # Install the driver program as $(libsubdir)/gcc for collect2.\n-\t-if [ -f gcc-cross ] ; then \\\n-\t  $(INSTALL_PROGRAM) gcc-cross $(libsubdir)/gcc; \\\n-\telse \\\n-\t  $(INSTALL_PROGRAM) gcc $(libsubdir)/gcc; \\\n-\tfi\n+\t$(INSTALL_PROGRAM) xgcc $(libsubdir)/gcc\n \n # Cancel installation by deleting the installed files.\n uninstall:\n@@ -1617,6 +1591,7 @@ maketest:\n \t-rm tm.h aux-output.c config.h md\n \tmake clean\n # You must then run config to set up for compilation.\n+\n bootstrap: force\n # Only build the C compiler for stage1, because that is the only one that\n # we can guarantee will build with the native compiler, and also it is the\n@@ -1645,18 +1620,18 @@ bootstrap3: force\n \n compare: force\n \tfor file in *.o; do \\\n-\t  tail +10c $$file > tmp-foo1; \\\n-\t  tail +10c stage2/$$file > tmp-foo2; \\\n-\t  cmp tmp-foo1 tmp-foo2 || echo $$file differs; \\\n+\t  tail +16c $$file > tmp-foo1; \\\n+\t  tail +16c stage2/$$file > tmp-foo2 2>/dev/null \\\n+\t    && (cmp tmp-foo1 tmp-foo2 || echo $$file differs); \\\n \tdone\n \t-rm -f tmp-foo*\n \n # Similar, but compare with stage3 directory\n compare3: force\n \tfor file in *.o; do \\\n-\t  tail +10c $$file > tmp-foo1; \\\n-\t  tail +10c stage3/$$file > tmp-foo2; \\\n-\t  cmp tmp-foo1 tmp-foo2 || echo $$file differs; \\\n+\t  tail +16c $$file > tmp-foo1; \\\n+\t  tail +16c stage3/$$file > tmp-foo2 2>/dev/null \\\n+\t    && (cmp tmp-foo1 tmp-foo2 || echo $$file differs); \\\n \tdone\n \t-rm -f tmp-foo*\n "}]}