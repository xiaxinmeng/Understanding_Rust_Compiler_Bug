{"sha": "e2362f5de06d4ba52f86421b0869b0ab04f89315", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIzNjJmNWRlMDZkNGJhNTJmODY0MjFiMDg2OWIwYWIwNGY4OTMxNQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2011-11-22T13:51:07Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2011-11-22T13:51:07Z"}, "message": "darwin.h (ENDFILE_SPEC): New.\n\n\ngcc:\n\n\t*  config/darwin.h (ENDFILE_SPEC): New.\n\t(DARWIN_CRT1_SPEC): Add crttms.o.\n\t(STARTFILE_SPEC): Likewise for dynamic libs and bundles.\n\t* config/i386.h (ENDFILE_SPEC): Amend to include crttme.o.\n\nlibgcc:\n\n\t* config/darwin-crt-tm.c: New file.\n\t* config.host (darwin): Build crttms.o crttme.o to provide\n\tstartup and shutdown for tm clones.\n\t* config/t-darwin (crttms.o): New build rule.\n\t(crttme.o): Likewise.\n\nFrom-SVN: r181616", "tree": {"sha": "cb37d55577828a0e4d3083598574060fadac99a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb37d55577828a0e4d3083598574060fadac99a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2362f5de06d4ba52f86421b0869b0ab04f89315", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2362f5de06d4ba52f86421b0869b0ab04f89315", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2362f5de06d4ba52f86421b0869b0ab04f89315", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2362f5de06d4ba52f86421b0869b0ab04f89315/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "018076e705f8783a471dc36cef10b60d30d95ebf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018076e705f8783a471dc36cef10b60d30d95ebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018076e705f8783a471dc36cef10b60d30d95ebf"}], "stats": {"total": 122, "additions": 113, "deletions": 9}, "files": [{"sha": "28d5deb2a85c65c228df64409cdf914831706c0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2362f5de06d4ba52f86421b0869b0ab04f89315/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2362f5de06d4ba52f86421b0869b0ab04f89315/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2362f5de06d4ba52f86421b0869b0ab04f89315", "patch": "@@ -1,3 +1,10 @@\n+2011-11-22  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t*  config/darwin.h (ENDFILE_SPEC): New.\n+\t(DARWIN_CRT1_SPEC): Add crttms.o.\n+\t(STARTFILE_SPEC): Likewise for dynamic libs and bundles.\n+\t* config/i386.h (ENDFILE_SPEC): Amend to include crttme.o.\n+\n 2011-11-22  Michael Matz  <matz@suse.de>\n \n \tPR c++/51264"}, {"sha": "29a24ddc6d6214fbbbbf3d81eac09a966c9688b6", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2362f5de06d4ba52f86421b0869b0ab04f89315/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2362f5de06d4ba52f86421b0869b0ab04f89315/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=e2362f5de06d4ba52f86421b0869b0ab04f89315", "patch": "@@ -359,8 +359,8 @@ extern GTY(()) int darwin_ms_struct;\n \n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC\t\t\t\t\t\t\t    \\\n-  \"%{Zdynamiclib: %(darwin_dylib1) }\t\t\t\t\t    \\\n-   %{!Zdynamiclib:%{Zbundle:%{!static:-lbundle1.o}}\t\t\t    \\\n+  \"%{Zdynamiclib: %(darwin_dylib1) %{fgnu-tm: -lcrttms.o}}\t\t    \\\n+   %{!Zdynamiclib:%{Zbundle:%{!static:-lbundle1.o %{fgnu-tm: -lcrttms.o}}}  \\\n      %{!Zbundle:%{pg:%{static:-lgcrt0.o}\t\t\t\t    \\\n                      %{!static:%{object:-lgcrt0.o}\t\t\t    \\\n                                %{!object:%{preload:-lgcrt0.o}\t\t    \\\n@@ -372,10 +372,8 @@ extern GTY(()) int darwin_ms_struct;\n \t\t\t\t\t      %(darwin_crt2)}}}}}}\t    \\\n   %{shared-libgcc:%:version-compare(< 10.5 mmacosx-version-min= crt3.o%s)}\"\n \n-/* The native Darwin linker doesn't necessarily place files in the order\n-   that they're specified on the link line.  Thus, it is pointless\n-   to put anything in ENDFILE_SPEC.  */\n-/* #define ENDFILE_SPEC \"\" */\n+/* We want a destructor last in the list.  */\n+#define ENDFILE_SPEC \"%{fgnu-tm: -lcrttme.o}\"\n \n #define DARWIN_EXTRA_SPECS\t\t\t\t\t\t\\\n   { \"darwin_crt1\", DARWIN_CRT1_SPEC },\t\t\t\t\t\\\n@@ -388,7 +386,8 @@ extern GTY(()) int darwin_ms_struct;\n \n #define DARWIN_CRT1_SPEC\t\t\t\t\t\t\\\n   \"%:version-compare(!> 10.5 mmacosx-version-min= -lcrt1.o)\t\t\\\n-   %:version-compare(>= 10.5 mmacosx-version-min= -lcrt1.10.5.o)\"\n+   %:version-compare(>= 10.5 mmacosx-version-min= -lcrt1.10.5.o)\t\\\n+   %{fgnu-tm: -lcrttms.o}\"\n \n /* Default Darwin ASM_SPEC, very simple.  */\n #define ASM_SPEC \"-arch %(darwin_arch) \\"}, {"sha": "83da2932512bdc4e45df4d05ef87358667d6b604", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2362f5de06d4ba52f86421b0869b0ab04f89315/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2362f5de06d4ba52f86421b0869b0ab04f89315/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=e2362f5de06d4ba52f86421b0869b0ab04f89315", "patch": "@@ -132,7 +132,8 @@ extern int darwin_emit_branch_islands;\n   \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n    %{mpc32:crtprec32.o%s} \\\n    %{mpc64:crtprec64.o%s} \\\n-   %{mpc80:crtprec80.o%s}\"\n+   %{mpc80:crtprec80.o%s} \\\n+   %{fgnu-tm: -lcrttme.o}\"\n \n #undef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS                                   \\"}, {"sha": "305e8ad3c3c3fa25e800b865837c15cd696956a6", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2362f5de06d4ba52f86421b0869b0ab04f89315/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2362f5de06d4ba52f86421b0869b0ab04f89315/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=e2362f5de06d4ba52f86421b0869b0ab04f89315", "patch": "@@ -1,3 +1,11 @@\n+2011-11-22  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* config/darwin-crt-tm.c: New file.\n+\t* config.host (darwin): Build crttms.o crttme.o to provide\n+\tstartup and shutdown for tm clones.\n+\t* config/t-darwin (crttms.o): New build rule.\n+\t(crttme.o): Likewise.\n+\n 2011-11-21  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* Makefile.in ($(srcdir)/emutls.c): Explain why it's in LIB2ADDEH"}, {"sha": "447c41c46a0640f53b4447c69c9604d71cc7b4c6", "filename": "libgcc/config.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2362f5de06d4ba52f86421b0869b0ab04f89315/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2362f5de06d4ba52f86421b0869b0ab04f89315/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=e2362f5de06d4ba52f86421b0869b0ab04f89315", "patch": "@@ -170,7 +170,7 @@ case ${host} in\n *-*-darwin*)\n   asm_hidden_op=.private_extern\n   tmake_file=\"$tmake_file t-darwin ${cpu_type}/t-darwin t-libgcc-pic t-slibgcc-darwin\"\n-  extra_parts=crt3.o\n+  extra_parts=\"crt3.o crttms.o crttme.o\"\n   ;;\n *-*-freebsd*)\n   # This is the generic ELF configuration of FreeBSD.  Later"}, {"sha": "cfb66147662cf05e9d669c9c8e4b8c8ad9001e56", "filename": "libgcc/config/darwin-crt-tm.c", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2362f5de06d4ba52f86421b0869b0ab04f89315/libgcc%2Fconfig%2Fdarwin-crt-tm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2362f5de06d4ba52f86421b0869b0ab04f89315/libgcc%2Fconfig%2Fdarwin-crt-tm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fdarwin-crt-tm.c?ref=e2362f5de06d4ba52f86421b0869b0ab04f89315", "patch": "@@ -0,0 +1,83 @@\n+/* Provide the runtime intrastructure the transactional memory lib.\n+   Copyright (C) 2011 Free Software Foundation, Inc.\n+   Contributed by Iain Sandoe <iains@gcc.gnu.org>\n+\n+   This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include <mach-o/dyld.h>\n+\n+/* not listed in mach-o/dyld.h for some reason.  */\n+extern char * getsectdata (const char*,const char*,unsigned long*); \n+\n+#define WEAK __attribute__((weak))\n+\n+#ifndef ATTRIBUTE_UNUSED\n+#define ATTRIBUTE_UNUSED __attribute__((unused))\n+#endif\n+\n+extern void _ITM_registerTMCloneTable (void *, size_t) WEAK;\n+extern void _ITM_deregisterTMCloneTable (void *) WEAK;\n+\n+#ifdef START\n+\n+void __doTMRegistrations (void) __attribute__ ((constructor));\n+\n+void __doTMRegistrations (void)\n+{\n+  char * tm_clone_table_sect_data;\n+  unsigned long tmct_siz;\n+  \n+  tm_clone_table_sect_data = getsectdata (\"__DATA\",\n+\t\t\t\t\t  \"__tm_clone_table\",\n+\t\t\t\t\t  &tmct_siz);\n+  tmct_siz /= (sizeof (size_t) * 2);\n+  if (_ITM_registerTMCloneTable != NULL\n+      && tm_clone_table_sect_data != NULL\n+      && tmct_siz > 0)\n+    _ITM_registerTMCloneTable (tm_clone_table_sect_data, (size_t)tmct_siz);\n+}\n+\n+#endif\n+\n+#ifdef END\n+\n+void __doTMdeRegistrations (void) __attribute__ ((destructor));\n+\n+void __doTMdeRegistrations (void)\n+{\n+  char * tm_clone_table_sect_data;\n+  unsigned long tmct_siz;\n+  \n+  tm_clone_table_sect_data = getsectdata (\"__DATA\",\n+\t\t\t\t\t  \"__tm_clone_table\",\n+\t\t\t\t\t  &tmct_siz);\n+  \n+  if (_ITM_deregisterTMCloneTable != NULL\n+      && tm_clone_table_sect_data != NULL\n+      && tmct_siz > 0)\n+    _ITM_deregisterTMCloneTable (tm_clone_table_sect_data);\n+\n+}\n+\n+/* Provide dumy funcs for the weak ones - needed on most Darwin versions\n+   for now.  */\n+\n+void _ITM_registerTMCloneTable (void *n ATTRIBUTE_UNUSED, size_t s ATTRIBUTE_UNUSED)\n+{}\n+void _ITM_deregisterTMCloneTable (void *n ATTRIBUTE_UNUSED)\n+{}\n+#endif"}, {"sha": "3365f010225b4af5184e6d9eb0356dbff8f94ccc", "filename": "libgcc/config/t-darwin", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2362f5de06d4ba52f86421b0869b0ab04f89315/libgcc%2Fconfig%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2362f5de06d4ba52f86421b0869b0ab04f89315/libgcc%2Fconfig%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-darwin?ref=e2362f5de06d4ba52f86421b0869b0ab04f89315", "patch": "@@ -3,6 +3,12 @@ crt3.o: $(srcdir)/config/darwin-crt3.c\n \t$(crt_compile) \\\n \t  -fno-tree-dominator-opts $(DARWIN_EXTRA_CRT_BUILD_CFLAGS) -c $<\n \n+crttms.o: $(srcdir)/config/darwin-crt-tm.c\n+\t$(crt_compile) $(DARWIN_EXTRA_CRT_BUILD_CFLAGS) -DSTART -c $<\n+\n+crttme.o: $(srcdir)/config/darwin-crt-tm.c\n+\t$(crt_compile) $(DARWIN_EXTRA_CRT_BUILD_CFLAGS) -DEND -c $<\n+\n # -pipe because there's an assembler bug, 4077127, which causes\n # it to not properly process the first # directive, causing temporary\n # file names to appear in stabs, causing the bootstrap to fail.  Using -pipe"}]}