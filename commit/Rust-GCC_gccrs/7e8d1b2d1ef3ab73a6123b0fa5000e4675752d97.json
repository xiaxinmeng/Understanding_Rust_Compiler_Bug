{"sha": "7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U4ZDFiMmQxZWYzYWI3M2E2MTIzYjBmYTUwMDBlNDY3NTc1MmQ5Nw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-11-17T20:31:06Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-11-17T20:31:06Z"}, "message": "Add -static-libasan option to the GCC driver\n\n\t* common.opt (static-libasan): New option.\n\t* gcc.c (LIBASAN_SPEC): New macro.\n\t(LINK_COMMAND_SPEC): Replace -lasan with LIBASAN_SPEC.\n\t* doc/invoke.texi: Document -static-libasan.\n\nFrom-SVN: r193589", "tree": {"sha": "2d820ab7aa3aa6203fee051f0c0d85dc991da942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d820ab7aa3aa6203fee051f0c0d85dc991da942"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "295d875ce02f75bf3485027a91642a2c31ab01e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295d875ce02f75bf3485027a91642a2c31ab01e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/295d875ce02f75bf3485027a91642a2c31ab01e4"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "eb01532c6569eab0d691ff7134e021c85628eecd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97", "patch": "@@ -1,3 +1,10 @@\n+2012-11-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* common.opt (static-libasan): New option.\n+\t* gcc.c (LIBASAN_SPEC): New macro.\n+\t(LINK_COMMAND_SPEC): Replace -lasan with LIBASAN_SPEC.\n+\t* doc/invoke.texi: Document -static-libasan.\n+\n 2012-11-17  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/55342"}, {"sha": "be6fe4f35d2ed894697b39cdcbe9decc454e8d63", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97", "patch": "@@ -2516,6 +2516,9 @@ static-libgo\n Driver\n ; Documented for Go, but always accepted by driver.\n \n+static-libasan\n+Driver\n+\n symbolic\n Driver\n "}, {"sha": "885bf66c1a698faaae2107c82fcfee0458852ecd", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97", "patch": "@@ -452,8 +452,8 @@ Objective-C and Objective-C++ Dialects}.\n @xref{Link Options,,Options for Linking}.\n @gccoptlist{@var{object-file-name}  -l@var{library} @gol\n -nostartfiles  -nodefaultlibs  -nostdlib -pie -rdynamic @gol\n--s  -static  -static-libgcc  -static-libstdc++ -shared  @gol\n--shared-libgcc  -symbolic @gol\n+-s  -static -static-libgcc -static-libasan -static-libstdc++ @gol\n+-shared -shared-libgcc  -symbolic @gol\n -T @var{script}  -Wl,@var{option}  -Xlinker @var{option} @gol\n -u @var{symbol}}\n \n@@ -9937,6 +9937,15 @@ for the languages used in the program, or using the option\n @option{-shared-libgcc}, such that it is linked with the shared\n @file{libgcc}.\n \n+@item -static-libasan\n+When the @option{-faddress-sanitizer} option is used to link a program,\n+the GCC driver automatically links against @option{libasan}.  If\n+@file{libasan} is available as a shared library, and the @option{-static}\n+option is not used, then this links against the shared version of\n+@file{libasan}.  The @option{-static-libasan} option directs the GCC\n+driver to link @file{libasan} statically, without necessarily linking\n+other libraries statically.\n+\n @item -static-libstdc++\n When the @command{g++} program is used to link a C++ program, it\n normally automatically links against @option{libstdc++}.  If"}, {"sha": "7a275e133ad74c0005a1efb4090a7ff53f0babe3", "filename": "gcc/gcc.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=7e8d1b2d1ef3ab73a6123b0fa5000e4675752d97", "patch": "@@ -544,6 +544,15 @@ proper position among the other output files.  */\n    wrapping.  */\n #define STACK_SPLIT_SPEC \" %{fsplit-stack: --wrap=pthread_create}\"\n \n+#ifndef LIBASAN_SPEC\n+#ifdef HAVE_LD_STATIC_DYNAMIC\n+#define LIBASAN_SPEC \"%{static-libasan:\" LD_STATIC_OPTION \\\n+\t\t     \"} -lasan %{static-libasan:\" LD_DYNAMIC_OPTION \"}\"\n+#else\n+#define LIBASAN_SPEC \"-lasan\"\n+#endif\n+#endif\n+\n /* config.h can define LIBGCC_SPEC to override how and when libgcc.a is\n    included.  */\n #ifndef LIBGCC_SPEC\n@@ -687,7 +696,7 @@ proper position among the other output files.  */\n     %{fgnu-tm:%:include(libitm.spec)%(link_itm)}\\\n     %(mflib) \" STACK_SPLIT_SPEC \"\\\n     %{fprofile-arcs|fprofile-generate*|coverage:-lgcov}\\\n-    %{faddress-sanitizer:-lasan}\\\n+    %{faddress-sanitizer:\" LIBASAN_SPEC \"}\\\n     %{!nostdlib:%{!nodefaultlibs:%(link_ssp) %(link_gcc_c_sequence)}}\\\n     %{!nostdlib:%{!nostartfiles:%E}} %{T*} }}}}}}\"\n #endif"}]}