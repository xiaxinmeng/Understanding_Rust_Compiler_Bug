{"sha": "737f500a0bb2cfdf1e28975a27403e555ede633e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM3ZjUwMGEwYmIyY2ZkZjFlMjg5NzVhMjc0MDNlNTU1ZWRlNjMzZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-03-28T10:10:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-03-28T10:10:01Z"}, "message": "re PR middle-end/80222 (may_alias folded away)\n\n2017-03-28  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/80222\n\t* gimple-fold.c (gimple_fold_indirect_ref): Do not touch\n\tTYPE_REF_CAN_ALIAS_ALL references.\n\t* fold-const.c (fold_indirect_ref_1): Likewise.\n\n\t* g++.dg/pr80222.C: New testcase.\n\nFrom-SVN: r246527", "tree": {"sha": "e79b9e94380748bba99a522e52b8dd348721a2c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e79b9e94380748bba99a522e52b8dd348721a2c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/737f500a0bb2cfdf1e28975a27403e555ede633e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/737f500a0bb2cfdf1e28975a27403e555ede633e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/737f500a0bb2cfdf1e28975a27403e555ede633e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/737f500a0bb2cfdf1e28975a27403e555ede633e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62f96a79f10e0c6772e5302c076b8c062e42b0d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f96a79f10e0c6772e5302c076b8c062e42b0d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62f96a79f10e0c6772e5302c076b8c062e42b0d9"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "7274aa4e7a6ed5bf0fa210fd4f236be1cdb7cfcb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/737f500a0bb2cfdf1e28975a27403e555ede633e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/737f500a0bb2cfdf1e28975a27403e555ede633e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=737f500a0bb2cfdf1e28975a27403e555ede633e", "patch": "@@ -1,3 +1,10 @@\n+2017-03-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/80222\n+\t* gimple-fold.c (gimple_fold_indirect_ref): Do not touch\n+\tTYPE_REF_CAN_ALIAS_ALL references.\n+\t* fold-const.c (fold_indirect_ref_1): Likewise.\n+\n 2017-03-28  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/80104"}, {"sha": "fb54ffa0e5e0a46576995eb5adc5ff8229bdf991", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/737f500a0bb2cfdf1e28975a27403e555ede633e/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/737f500a0bb2cfdf1e28975a27403e555ede633e/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=737f500a0bb2cfdf1e28975a27403e555ede633e", "patch": "@@ -14006,7 +14006,8 @@ fold_indirect_ref_1 (location_t loc, tree type, tree op0)\n \n   STRIP_NOPS (sub);\n   subtype = TREE_TYPE (sub);\n-  if (!POINTER_TYPE_P (subtype))\n+  if (!POINTER_TYPE_P (subtype)\n+      || TYPE_REF_CAN_ALIAS_ALL (TREE_TYPE (op0)))\n     return NULL_TREE;\n \n   if (TREE_CODE (sub) == ADDR_EXPR)"}, {"sha": "a6a958cefa4c560df9b828d55100e2802c2a1fd1", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/737f500a0bb2cfdf1e28975a27403e555ede633e/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/737f500a0bb2cfdf1e28975a27403e555ede633e/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=737f500a0bb2cfdf1e28975a27403e555ede633e", "patch": "@@ -6539,8 +6539,8 @@ gimple_get_virt_method_for_binfo (HOST_WIDE_INT token, tree known_binfo,\n   return gimple_get_virt_method_for_vtable (token, v, offset, can_refer);\n }\n \n-/* Given a pointer value OP0, return a simplified version of an\n-   indirection through OP0, or NULL_TREE if no simplification is\n+/* Given a pointer value T, return a simplified version of an\n+   indirection through T, or NULL_TREE if no simplification is\n    possible.  Note that the resulting type may be different from\n    the type pointed to in the sense that it is still compatible\n    from the langhooks point of view. */\n@@ -6554,7 +6554,8 @@ gimple_fold_indirect_ref (tree t)\n \n   STRIP_NOPS (sub);\n   subtype = TREE_TYPE (sub);\n-  if (!POINTER_TYPE_P (subtype))\n+  if (!POINTER_TYPE_P (subtype)\n+      || TYPE_REF_CAN_ALIAS_ALL (ptype))\n     return NULL_TREE;\n \n   if (TREE_CODE (sub) == ADDR_EXPR)"}, {"sha": "4abe1dc0cfafe904e82fceb7f6664187d0f0cb04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/737f500a0bb2cfdf1e28975a27403e555ede633e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/737f500a0bb2cfdf1e28975a27403e555ede633e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=737f500a0bb2cfdf1e28975a27403e555ede633e", "patch": "@@ -1,3 +1,8 @@\n+2017-03-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/80222\n+\t* g++.dg/pr80222.C: New testcase.\n+\n 2017-03-28  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/80104"}, {"sha": "ed1b37f5e374f01414496c99ce595fb417403462", "filename": "gcc/testsuite/g++.dg/pr80222.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/737f500a0bb2cfdf1e28975a27403e555ede633e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr80222.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/737f500a0bb2cfdf1e28975a27403e555ede633e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr80222.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr80222.C?ref=737f500a0bb2cfdf1e28975a27403e555ede633e", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+struct C { int i; }__attribute__((may_alias)) ;\n+\n+C a, b;\n+\n+int main()\n+{\n+  a = static_cast <C&> (b);\n+}\n+\n+// { dg-final { scan-tree-dump \"{ref-all}\\\\\\)&b\\];\" \"optimized\" } } */"}]}