{"sha": "75f8beae9795785e425c3d8dce5360a2b7ad1812", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVmOGJlYWU5Nzk1Nzg1ZTQyNWMzZDhkY2U1MzYwYTJiN2FkMTgxMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-03-27T17:49:43Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-03-27T17:49:43Z"}, "message": "multi-ix.c: Limit CHUNK size between 1 and 500.\n\n        * gcc.c-torture/execute/multi-ix.c: Limit CHUNK size between 1 and 500.\n        (main): Exit early for CHUNK less than 40 to avoid stack corruption.\n\nFrom-SVN: r133648", "tree": {"sha": "40df8a1368f6b431d1724588074f4873393a02a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40df8a1368f6b431d1724588074f4873393a02a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75f8beae9795785e425c3d8dce5360a2b7ad1812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75f8beae9795785e425c3d8dce5360a2b7ad1812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75f8beae9795785e425c3d8dce5360a2b7ad1812", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75f8beae9795785e425c3d8dce5360a2b7ad1812/comments", "author": null, "committer": null, "parents": [{"sha": "ffd837fe164a08ed4e3315009d61bb24c69fe04d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffd837fe164a08ed4e3315009d61bb24c69fe04d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffd837fe164a08ed4e3315009d61bb24c69fe04d"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "5a52593621f504cef3c3e92dbe21eaccd82301d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75f8beae9795785e425c3d8dce5360a2b7ad1812/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75f8beae9795785e425c3d8dce5360a2b7ad1812/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75f8beae9795785e425c3d8dce5360a2b7ad1812", "patch": "@@ -1,3 +1,8 @@\n+2008-03-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.c-torture/execute/multi-ix.c: Limit CHUNK size between 1 and 500.\n+\t(main): Exit early for CHUNK less than 40 to avoid stack corruption.\n+\n 2008-03-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR c/32511\n@@ -10,7 +15,7 @@\n \n 2008-03-27  Douglas Gregor  <doug.gregor@gmail.com>\n \n-       * g++.dg/cpp0x/variadic91.C: New.\n+\t* g++.dg/cpp0x/variadic91.C: New.\n \n 2008-03-27  Zdenek Dvorak  <ook@ucw.cz>\n \n@@ -37,7 +42,7 @@\n \n 2008-03-26  Richard Guenther  <rguenther@suse.de>\n \n-\tRevert\n+\tRevert:\n \t2008-03-26  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/fold-addr-1.c: New testcase."}, {"sha": "377f08c115cb918db47988ee9687e5196e8261bb", "filename": "gcc/testsuite/gcc.c-torture/execute/multi-ix.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75f8beae9795785e425c3d8dce5360a2b7ad1812/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmulti-ix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75f8beae9795785e425c3d8dce5360a2b7ad1812/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmulti-ix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmulti-ix.c?ref=75f8beae9795785e425c3d8dce5360a2b7ad1812", "patch": "@@ -21,8 +21,15 @@\n \n    Subtract the last two off STACK_SIZE and figure out what the maximum\n    chunk size can be.  We make the last bit conservative to account for\n-   register saves and other processor-dependent saving.  */\n-#define CHUNK ((STACK_SIZE-40*sizeof(int)-256*sizeof(void *))/40/sizeof(int))\n+   register saves and other processor-dependent saving.  Limit the\n+   chunk size to some sane values.  */\n+\n+#define MIN(X,Y) ((X) < (Y) ? (X) : (Y))\n+#define MAX(X,Y) ((X) > (Y) ? (X) : (Y))\n+\n+#define CHUNK\t\t\t\t\t\t\t\t\\\n+  MIN (500, (MAX (1, (signed)(STACK_SIZE-40*sizeof(int)-256*sizeof(void *)) \\\n+\t\t      / (signed)(40*sizeof(int)))))\n #else\n #define CHUNK 500\n #endif\n@@ -146,6 +153,11 @@ f (int n)\n int\n main ()\n {\n+  /* CHUNK needs to be at least 40 to avoid stack corruption,\n+     since index variable i0 in \"a[i0] = i0\" equals 39.  */\n+  if (CHUNK < 40)\n+    exit (0);\n+\n   f (1);\n   exit (0);\n }"}]}