{"sha": "59fc63fcf808ba457739d34cf06fdf07272cc61f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlmYzYzZmNmODA4YmE0NTc3MzlkMzRjZjA2ZmRmMDcyNzJjYzYxZg==", "commit": {"author": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-02-17T18:13:07Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-02-17T18:13:07Z"}, "message": "[multiple changes]\n\n2005-02-17  Ito Kazumitsu  <kaz@maczuka.gcd.org>\n\n\t* java/nio/ByteBufferImpl.java (compact):\n\tSet position and limit even if no bytes were moved.\n\n2005-02-17  Michael Koch  <konqueror@gmx.de>\n\n\t* java/nio/CharViewBufferImpl.java (compact): Likewise.\n\t* java/nio/DirectByteBufferImpl.java (compact): Likewise.\n\t* java/nio/DoubleViewBufferImpl.java (compact): Likewise.\n\t* java/nio/FloatViewBufferImpl.java (compact): Likewise.\n\t* java/nio/IntViewBufferImpl.java (compact): Likewise.\n\t* java/nio/LongViewBufferImpl.java (compact): Likewise.\n\t* java/nio/MappedByteBufferImpl.java (compact): Likewise.\n\t* java/nio/ShortViewBufferImpl.java (compact): Likewise.\n\t* java/nio/FloatBufferImpl.java (compact): Set position.\n\t* java/nio/CharBufferImpl.java (compact): Likewise.\n\t* java/nio/DoubleBufferImpl.java (compact): Likewise.\n\t* java/nio/IntBufferImpl.java (compact): Likewise.\n\t* java/nio/LongBufferImpl.java (compact): Likewise.\n\t* java/nio/ShortBufferImpl.java (compact): Likewise.\n\n2005-02-17  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* java/nio/ByteBufferImpl.java,\n\tjava/nio/CharBufferImpl.java,\n\tjava/nio/DirectByteBufferImpl.java,\n\tjava/nio/DoubleBufferImpl.java,\n\tjava/nio/FloatBufferImpl.java,\n\tjava/nio/IntBufferImpl.java,\n\tjava/nio/LongBufferImpl.java,\n\tjava/nio/MappedByteBufferImpl.java,\n\tjava/nio/ShortBufferImpl.java\n\t(compact): Added explicit read-only check and invalidate mark.\n\nFrom-SVN: r95176", "tree": {"sha": "30340632af1c19b009b5d7d71e927e0c3075b0ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30340632af1c19b009b5d7d71e927e0c3075b0ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59fc63fcf808ba457739d34cf06fdf07272cc61f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59fc63fcf808ba457739d34cf06fdf07272cc61f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59fc63fcf808ba457739d34cf06fdf07272cc61f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59fc63fcf808ba457739d34cf06fdf07272cc61f/comments", "author": null, "committer": null, "parents": [{"sha": "856a4ce60e753491c4bbad2545c34ec63e69eae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/856a4ce60e753491c4bbad2545c34ec63e69eae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/856a4ce60e753491c4bbad2545c34ec63e69eae7"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "ebf7fcecb5dc9636c3915a72476125186b02ac36", "filename": "libjava/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -1,3 +1,38 @@\n+2005-02-17  Ito Kazumitsu  <kaz@maczuka.gcd.org>\n+\n+\t* java/nio/ByteBufferImpl.java (compact):\n+\tSet position and limit even if no bytes were moved.\n+\n+2005-02-17  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/nio/CharViewBufferImpl.java (compact): Likewise.\n+\t* java/nio/DirectByteBufferImpl.java (compact): Likewise.\n+\t* java/nio/DoubleViewBufferImpl.java (compact): Likewise.\n+\t* java/nio/FloatViewBufferImpl.java (compact): Likewise.\n+\t* java/nio/IntViewBufferImpl.java (compact): Likewise.\n+\t* java/nio/LongViewBufferImpl.java (compact): Likewise.\n+\t* java/nio/MappedByteBufferImpl.java (compact): Likewise.\n+\t* java/nio/ShortViewBufferImpl.java (compact): Likewise.\n+\t* java/nio/FloatBufferImpl.java (compact): Set position.\n+\t* java/nio/CharBufferImpl.java (compact): Likewise.\n+\t* java/nio/DoubleBufferImpl.java (compact): Likewise.\n+\t* java/nio/IntBufferImpl.java (compact): Likewise.\n+\t* java/nio/LongBufferImpl.java (compact): Likewise.\n+\t* java/nio/ShortBufferImpl.java (compact): Likewise.\n+\n+2005-02-17  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* java/nio/ByteBufferImpl.java,\n+\tjava/nio/CharBufferImpl.java,\n+\tjava/nio/DirectByteBufferImpl.java,\n+\tjava/nio/DoubleBufferImpl.java,\n+\tjava/nio/FloatBufferImpl.java,\n+\tjava/nio/IntBufferImpl.java,\n+\tjava/nio/LongBufferImpl.java,\n+\tjava/nio/MappedByteBufferImpl.java,\n+\tjava/nio/ShortBufferImpl.java\n+\t(compact): Added explicit read-only check and invalidate mark.\n+\n 2005-02-17  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java,"}, {"sha": "d9f24627de0f419146d16dc4b5d4487aba400880", "filename": "libjava/java/nio/ByteBufferImpl.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FByteBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FByteBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FByteBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -112,6 +112,8 @@ void shiftDown (int dst_offset, int src_offset, int count)\n \n   public ByteBuffer compact ()\n   {\n+    checkIfReadOnly();\n+    mark = -1;\n     int pos = position();\n     if (pos > 0)\n       {\n@@ -120,6 +122,11 @@ public ByteBuffer compact ()\n \tposition(count);\n \tlimit(capacity());\n       }\n+    else\n+      {\n+\tposition(limit());\n+\tlimit(capacity());\n+      }\n     return this;\n   }\n   "}, {"sha": "f9babe8287b5f1ada08c430a47d4c6c2afd22d8d", "filename": "libjava/java/nio/CharBufferImpl.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FCharBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FCharBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FCharBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -87,6 +87,8 @@ public CharBuffer asReadOnlyBuffer ()\n   \n   public CharBuffer compact ()\n   {\n+    checkIfReadOnly();\n+    mark = -1;\n     int copied = 0;\n     \n     while (remaining () > 0)\n@@ -96,6 +98,7 @@ public CharBuffer compact ()\n       }\n \n     position (copied);\n+    limit(capacity());\n     return this;\n   }\n   "}, {"sha": "25a2cf7972aaff629c0764b9018cdcb62dc33e36", "filename": "libjava/java/nio/CharViewBufferImpl.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FCharViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FCharViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FCharViewBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -122,6 +122,11 @@ public CharBuffer compact ()\n         position (count);\n         limit (capacity ());\n       }\n+    else\n+      {\n+\tposition(limit());\n+\tlimit(capacity());\n+      }\n     return this;\n   }\n   "}, {"sha": "d2871641191b528829cffc13f63c74643e1a3310", "filename": "libjava/java/nio/DirectByteBufferImpl.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FDirectByteBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FDirectByteBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FDirectByteBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -197,6 +197,8 @@ void shiftDown(int dst_offset, int src_offset, int count)\n   \n   public ByteBuffer compact()\n   {\n+    checkIfReadOnly();\n+    mark = -1;\n     int pos = position();\n     if (pos > 0)\n       {\n@@ -205,6 +207,11 @@ public ByteBuffer compact()\n \tposition(count);\n \tlimit(capacity());\n       }\n+    else\n+      {\n+\tposition(limit());\n+\tlimit(capacity());\n+      }\n     return this;\n   }\n "}, {"sha": "bad883c7d6cdf624ecc167b2e05128dec8b8ccb1", "filename": "libjava/java/nio/DoubleBufferImpl.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FDoubleBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FDoubleBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FDoubleBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -80,6 +80,8 @@ public DoubleBuffer asReadOnlyBuffer ()\n   \n   public DoubleBuffer compact ()\n   {\n+    checkIfReadOnly();\n+    mark = -1;\n     int copied = 0;\n     \n     while (remaining () > 0)\n@@ -89,6 +91,7 @@ public DoubleBuffer compact ()\n       }\n \n     position (copied);\n+    limit(capacity());\n     return this;\n   }\n   "}, {"sha": "d47c96463f4dbc7e00d0073bf2bd8f9fbf43172f", "filename": "libjava/java/nio/DoubleViewBufferImpl.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FDoubleViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FDoubleViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FDoubleViewBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -120,6 +120,11 @@ public DoubleBuffer compact ()\n         position (count);\n         limit (capacity ());\n       }\n+    else\n+      {\n+\tposition(limit());\n+\tlimit(capacity());\n+      }\n     return this;\n   }\n   "}, {"sha": "6f552cfabe3e211748bd5960a7cc706b49a15729", "filename": "libjava/java/nio/FloatBufferImpl.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FFloatBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FFloatBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FFloatBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -80,6 +80,8 @@ public FloatBuffer asReadOnlyBuffer ()\n   \n   public FloatBuffer compact ()\n   {\n+    checkIfReadOnly();\n+    mark = -1;\n     int copied = 0;\n     \n     while (remaining () > 0)\n@@ -89,6 +91,7 @@ public FloatBuffer compact ()\n       }\n \n     position (copied);\n+    limit(capacity());\n     return this;\n   }\n   "}, {"sha": "5d074b5bed352be3ff45b9cdfceb33320377422f", "filename": "libjava/java/nio/FloatViewBufferImpl.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FFloatViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FFloatViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FFloatViewBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -120,6 +120,11 @@ public FloatBuffer compact ()\n         position (count);\n         limit (capacity ());\n       }\n+    else\n+      {\n+\tposition(limit());\n+\tlimit(capacity());\n+      }\n     return this;\n   }\n   "}, {"sha": "6b22d40fb213917820a279086dc4988232e6afa3", "filename": "libjava/java/nio/IntBufferImpl.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FIntBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FIntBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FIntBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -80,6 +80,8 @@ public IntBuffer asReadOnlyBuffer ()\n   \n   public IntBuffer compact ()\n   {\n+    checkIfReadOnly();\n+    mark = -1;\n     int copied = 0;\n     \n     while (remaining () > 0)\n@@ -89,6 +91,7 @@ public IntBuffer compact ()\n       }\n \n     position (copied);\n+    limit(capacity());\n     return this;\n   }\n   "}, {"sha": "77b04a8c3c05359ec5505a7febb0ad72bee70353", "filename": "libjava/java/nio/IntViewBufferImpl.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FIntViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FIntViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FIntViewBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -120,6 +120,11 @@ public IntBuffer compact ()\n         position (count);\n         limit (capacity ());\n       }\n+    else\n+      {\n+\tposition(limit());\n+\tlimit(capacity());\n+      }\n     return this;\n   }\n   "}, {"sha": "e82f7749cd51e37d97f2b0c57fef2de5eb984688", "filename": "libjava/java/nio/LongBufferImpl.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FLongBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FLongBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FLongBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -80,6 +80,8 @@ public LongBuffer asReadOnlyBuffer ()\n   \n   public LongBuffer compact ()\n   {\n+    checkIfReadOnly();\n+    mark = -1;\n     int copied = 0;\n     \n     while (remaining () > 0)\n@@ -89,6 +91,7 @@ public LongBuffer compact ()\n       }\n \n     position (copied);\n+    limit(capacity());\n     return this;\n   }\n   "}, {"sha": "e2054757871a06c6572a6ff3f6e1be4c9113c9df", "filename": "libjava/java/nio/LongViewBufferImpl.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FLongViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FLongViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FLongViewBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -120,6 +120,11 @@ public LongBuffer compact ()\n         position (count);\n         limit (capacity ());\n       }\n+    else\n+      {\n+\tposition(limit());\n+\tlimit(capacity());\n+      }\n     return this;\n   }\n   "}, {"sha": "fdb64c5bb0f115baed244c05ac4e6a0a6b52e07c", "filename": "libjava/java/nio/MappedByteBufferImpl.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FMappedByteBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FMappedByteBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FMappedByteBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -117,6 +117,8 @@ public ByteBuffer put(int index, byte value)\n \n   public ByteBuffer compact()\n   {\n+    checkIfReadOnly();\n+    mark = -1;\n     int pos = position();\n     if (pos > 0)\n       {\n@@ -126,6 +128,11 @@ public ByteBuffer compact()\n \tposition(count);\n \tlimit(capacity());\n       }\n+    else\n+      {\n+\tposition(limit());\n+\tlimit(capacity());\n+      }\n     return this;\n   }\n "}, {"sha": "05424322b27c26a2206912bcfce4747204c9fff6", "filename": "libjava/java/nio/ShortBufferImpl.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FShortBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FShortBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FShortBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -80,6 +80,8 @@ public ShortBuffer asReadOnlyBuffer ()\n   \n   public ShortBuffer compact ()\n   {\n+    checkIfReadOnly();\n+    mark = -1;\n     int copied = 0;\n     \n     while (remaining () > 0)\n@@ -89,6 +91,7 @@ public ShortBuffer compact ()\n       }\n \n     position (copied);\n+    limit(capacity());\n     return this;\n   }\n   "}, {"sha": "f884ed54244c630ae4a262650bb6a8611e8b03a0", "filename": "libjava/java/nio/ShortViewBufferImpl.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FShortViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59fc63fcf808ba457739d34cf06fdf07272cc61f/libjava%2Fjava%2Fnio%2FShortViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FShortViewBufferImpl.java?ref=59fc63fcf808ba457739d34cf06fdf07272cc61f", "patch": "@@ -120,6 +120,11 @@ public ShortBuffer compact ()\n         position (count);\n         limit (capacity ());\n       }\n+    else\n+      {\n+\tposition(limit());\n+\tlimit(capacity());\n+      }\n     return this;\n   }\n   "}]}