{"sha": "4b6bb562de8850a5e6c632d988f8b4c350bae760", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI2YmI1NjJkZTg4NTBhNWU2YzYzMmQ5ODhmOGI0YzM1MGJhZTc2MA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@wrs.com", "date": "1998-01-27T22:02:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-27T22:02:13Z"}, "message": "m32r.md, [...]: Add some comments regarding use of dead_or_set_p.\n\n        * m32r.md, mips.md, mn10200.md, mn10300.md, pyr.md: Add\n        some comments regarding use of dead_or_set_p.\n\nFrom-SVN: r17514", "tree": {"sha": "92d391daf1eba2834f08dbb9c2d3b1705ffb0db9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92d391daf1eba2834f08dbb9c2d3b1705ffb0db9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b6bb562de8850a5e6c632d988f8b4c350bae760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6bb562de8850a5e6c632d988f8b4c350bae760", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6bb562de8850a5e6c632d988f8b4c350bae760", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6bb562de8850a5e6c632d988f8b4c350bae760/comments", "author": null, "committer": null, "parents": [{"sha": "e95f01957fbd55ec6d44e96142bbd441dd0f6562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e95f01957fbd55ec6d44e96142bbd441dd0f6562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e95f01957fbd55ec6d44e96142bbd441dd0f6562"}], "stats": {"total": 59, "additions": 48, "deletions": 11}, "files": [{"sha": "404bb0dd3e094a65e6eb86f19e9a8a1e0c3cce82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b6bb562de8850a5e6c632d988f8b4c350bae760", "patch": "@@ -1,3 +1,8 @@\n+Tue Jan 27 23:01:55 1998  Mike Stump  (mrs@wrs.com)\n+\n+\t* m32r.md, mips.md, mn10200.md, mn10300.md, pyr.md: Add\n+\tsome comments regarding use of dead_or_set_p.\n+\n Tue Jan 27 22:14:48 1998  Todd Vierling <tv@pobox.com>\n \n \t* fixincludes: Tweak fix for struct exception in math.h"}, {"sha": "fc1b4cc9480ada0e40f7fcaef72900e423c9f84c", "filename": "gcc/config/m32r/m32r.md", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2Fconfig%2Fm32r%2Fm32r.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2Fconfig%2Fm32r%2Fm32r.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.md?ref=4b6bb562de8850a5e6c632d988f8b4c350bae760", "patch": "@@ -1,4 +1,4 @@\n-;; Machine description of the M32R/D cpu for GNU C compiler\n+;; Machine description of the Mitsubishi M32R cpu for GNU C compiler\n ;; Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n \n ;; This file is part of GNU CC.\n@@ -191,7 +191,7 @@\n \n (define_insn \"*movsi_insn\"\n   [(set (match_operand:SI 0 \"move_dest_operand\" \"=r,r,r,r,r,r,r,m\")\n-;; FIXME: Do we need a const_double constraint here for large unsigned values?\n+;; ??? Do we need a const_double constraint here for large unsigned values?\n \t(match_operand:SI 1 \"move_src_operand\" \"r,I,J,MQ,L,N,m,r\"))]\n   \"register_operand (operands[0], SImode) || register_operand (operands[1], SImode)\"\n   \"@\n@@ -221,7 +221,7 @@\n   int shift;\n \n   /* In all cases we will emit two instructions.  However we try to\n-     use 2 byte instructions whereever possible.  We can assume the\n+     use 2 byte instructions wherever possible.  We can assume the\n      constant isn't loadable with any of ldi, ld24, or seth.  */\n \n   /* See if we can load a 24 bit unsigned value and invert it.  */\n@@ -265,7 +265,7 @@\n ;; [then seth + ld/st would work for any object in the area].  Doing this\n ;; would require special handling of _SDA_BASE_ (its value would be\n ;; (.sdata + 32K) & 0xffff0000) and reloc computations would be different\n-;; [I think].  What to do about this is defered until later and for now we\n+;; [I think].  What to do about this is deferred until later and for now we\n ;; require .sdata to be in the first 16M.\n \n (define_expand \"movsi_sda\"\n@@ -584,7 +584,7 @@\n    (set_attr \"length\" \"4,*\")])\n \f\n ;; Sign extension instructions.\n-;; FIXME: See v850.md.\n+;; ??? See v850.md.\n \n ;; These patterns originally accepted general_operands, however, slightly\n ;; better code is generated by only accepting register_operands, and then\n@@ -901,7 +901,7 @@\n ;;\n ;; On the m32r it is more efficient to use the bxxz instructions and\n ;; thus merge the compare and branch into one instruction, so they are\n-;; prefered.\n+;; preferred.\n \n (define_expand \"cmpsi\"\n   [(set (reg:CC 17)\n@@ -1463,6 +1463,8 @@\n   [(set (mem:SI (plus:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t (const_int 4)))\n         (match_operand:SI 1 \"register_operand\" \"r\"))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (insn, operands[0])\"\n   \"st %1,@+%0\"\n   [(set_attr \"type\" \"store\")"}, {"sha": "948c7334ebb234581c4d26ddadd76bb89556fad9", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=4b6bb562de8850a5e6c632d988f8b4c350bae760", "patch": "@@ -9771,6 +9771,8 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_MIPS16\n    && GET_CODE (operands[0]) == REG\n    && REGNO (operands[0]) == 24\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n    && dead_or_set_p (insn, operands[0])\n    && GET_CODE (operands[1]) == REG\n    && M16_REG_P (REGNO (operands[1]))\"\n@@ -9796,6 +9798,8 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_MIPS16 && TARGET_64BIT\n    && GET_CODE (operands[0]) == REG\n    && REGNO (operands[0]) == 24\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n    && dead_or_set_p (insn, operands[0])\n    && GET_CODE (operands[1]) == REG\n    && M16_REG_P (REGNO (operands[1]))\"\n@@ -9827,6 +9831,8 @@ move\\\\t%0,%z4\\\\n\\\\\n    && REGNO (operands[1]) == 24\n    && GET_CODE (operands[0]) == REG\n    && M16_REG_P (REGNO (operands[0]))\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n    && dead_or_set_p (insn, operands[0])\"\n   \"*\n {\n@@ -9852,6 +9858,8 @@ move\\\\t%0,%z4\\\\n\\\\\n    && REGNO (operands[1]) == 24\n    && GET_CODE (operands[0]) == REG\n    && M16_REG_P (REGNO (operands[0]))\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n    && dead_or_set_p (insn, operands[0])\"\n   \"*\n {"}, {"sha": "47528aedb53a85f7e18319f43e2e0e7b0f4ef24a", "filename": "gcc/config/mn10200/mn10200.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2Fconfig%2Fmn10200%2Fmn10200.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2Fconfig%2Fmn10200%2Fmn10200.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.md?ref=4b6bb562de8850a5e6c632d988f8b4c350bae760", "patch": "@@ -1888,6 +1888,8 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcc %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1897,6 +1899,8 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcs %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1906,6 +1910,8 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcs %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1915,6 +1921,8 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcc %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1924,6 +1932,8 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bccx %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1933,6 +1943,8 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcsx %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1942,6 +1954,8 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcsx %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1951,6 +1965,8 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bccx %1\"\n   [(set_attr \"cc\" \"clobber\")])"}, {"sha": "1747ebdb412169ae239b3b8c533fa4519d21e903", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=4b6bb562de8850a5e6c632d988f8b4c350bae760", "patch": "@@ -1397,6 +1397,8 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcc %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1406,6 +1408,8 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (match_operand 1 \"\" \"\")\n \t\t\t   (pc)))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcs %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1415,6 +1419,8 @@\n    (set (pc) (if_then_else (ge (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcs %1\"\n   [(set_attr \"cc\" \"clobber\")])\n@@ -1424,6 +1430,8 @@\n    (set (pc) (if_then_else (lt (cc0) (const_int 0))\n \t\t\t   (pc)\n \t\t\t   (match_operand 1 \"\" \"\")))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (ins1, operands[0]) && REG_OK_FOR_INDEX_P (operands[0])\"\n   \"add %0,%0\\;bcc %1\"\n   [(set_attr \"cc\" \"clobber\")])"}, {"sha": "9aeab91e169d36895313cdf85b640d7f42f8b26d", "filename": "gcc/config/pyr/pyr.md", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2Fconfig%2Fpyr%2Fpyr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6bb562de8850a5e6c632d988f8b4c350bae760/gcc%2Fconfig%2Fpyr%2Fpyr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpyr%2Fpyr.md?ref=4b6bb562de8850a5e6c632d988f8b4c350bae760", "patch": "@@ -1,5 +1,5 @@\n ;; GNU C machine description for Pyramid 90x, 9000, MIServer Series\n-;; Copyright (C) 1989, 1990, 1995 Free Software Foundation, Inc.\n+;; Copyright (C) 1989, 1990, 1995, 1997 Free Software Foundation, Inc.\n \n ;; This file is part of GNU CC.\n \n@@ -903,7 +903,6 @@\n   \"\"\n   \"*\n {\n-  extern int optimize;\n   if (optimize && REG_P (operands[0]) && REG_P (operands[1])\n       && REGNO (operands[0]) == REGNO (operands[1])\n       && already_sign_extended (insn, HImode, operands[0]))\n@@ -920,7 +919,6 @@\n   \"\"\n   \"*\n {\n-  extern int optimize;\n   if (optimize && REG_P (operands[0]) && REG_P (operands[1])\n       && REGNO (operands[0]) == REGNO (operands[1])\n       && already_sign_extended (insn, QImode, operands[0]))\n@@ -1029,7 +1027,6 @@\n   \"\"\n   \"*\n {\n-  extern int optimize;\n   if (optimize)\n     switch (GET_CODE (operands[0]))\n       {\n@@ -1056,7 +1053,6 @@\n   \"\"\n   \"*\n {\n-  extern int optimize;\n   if (optimize)\n     switch (GET_CODE (operands[0]))\n       {\n@@ -1228,6 +1224,8 @@\n \t(sign_extend:SI (match_dup 1)))\n    (set (cc0)\n \t(match_dup 2))]\n+;; ??? This is WRONG, dead_or_set_p cannot be used after reload\n+;; because the REG_DEAD notes are not maintained after reload.\n   \"dead_or_set_p (insn, operands[2])\"\n   \"*\n   cc_status.flags |= CC_NO_OVERFLOW;"}]}