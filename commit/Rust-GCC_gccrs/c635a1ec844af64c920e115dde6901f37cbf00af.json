{"sha": "c635a1ec844af64c920e115dde6901f37cbf00af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYzNWExZWM4NDRhZjY0YzkyMGUxMTVkZGU2OTAxZjM3Y2JmMDBhZg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2002-06-27T15:56:40Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-06-27T15:56:40Z"}, "message": "gcse.c (hoist_code): Rewrite to only get list of dominated blocks once per BB.\n\n        * gcse.c (hoist_code): Rewrite to only get list of dominated\n        blocks once per BB. Also fix reversed test (by removing need for\n        the test at all).\n\nFrom-SVN: r55031", "tree": {"sha": "97296d105e28688bcbd1cdda2c2d61def5731c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97296d105e28688bcbd1cdda2c2d61def5731c1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c635a1ec844af64c920e115dde6901f37cbf00af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c635a1ec844af64c920e115dde6901f37cbf00af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c635a1ec844af64c920e115dde6901f37cbf00af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c635a1ec844af64c920e115dde6901f37cbf00af/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86422829205fb7e87f25f37d226f4c3d4b81d784", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86422829205fb7e87f25f37d226f4c3d4b81d784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86422829205fb7e87f25f37d226f4c3d4b81d784"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "273924b1374d11de776840e5c69c7862c4d2ec9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c635a1ec844af64c920e115dde6901f37cbf00af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c635a1ec844af64c920e115dde6901f37cbf00af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c635a1ec844af64c920e115dde6901f37cbf00af", "patch": "@@ -1,3 +1,9 @@\n+2002-06-27  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* gcse.c (hoist_code): Rewrite to only get list of dominated\n+\tblocks once per BB. Also fix reversed test (by removing need for \n+\tthe test at all).\n+\n 2002-06-27  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* cpphash.h (_cpp_set_trad_context): Remove."}, {"sha": "daeaa909144e41e605324c4a9feaf8922818def1", "filename": "gcc/gcse.c", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c635a1ec844af64c920e115dde6901f37cbf00af/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c635a1ec844af64c920e115dde6901f37cbf00af/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=c635a1ec844af64c920e115dde6901f37cbf00af", "patch": "@@ -5911,7 +5911,9 @@ static void\n hoist_code ()\n {\n   basic_block bb, dominated;\n-  unsigned int i;\n+  basic_block *domby;\n+  unsigned int domby_len;\n+  unsigned int i,j;\n   struct expr **index_map;\n   struct expr *expr;\n \n@@ -5932,24 +5934,25 @@ hoist_code ()\n       int found = 0;\n       int insn_inserted_p;\n \n+      domby_len = get_dominated_by (dominators, bb, &domby);\n       /* Examine each expression that is very busy at the exit of this\n \t block.  These are the potentially hoistable expressions.  */\n       for (i = 0; i < hoist_vbeout[bb->index]->n_bits; i++)\n \t{\n \t  int hoistable = 0;\n \n-\t  if (TEST_BIT (hoist_vbeout[bb->index], i) && TEST_BIT (transpout[bb->index], i))\n+\t  if (TEST_BIT (hoist_vbeout[bb->index], i)\n+\t      && TEST_BIT (transpout[bb->index], i))\n \t    {\n \t      /* We've found a potentially hoistable expression, now\n \t\t we look at every block BB dominates to see if it\n \t\t computes the expression.  */\n-\t      FOR_EACH_BB (dominated)\n+\t      for (j = 0; j < domby_len; j++)\n \t\t{\n+\t\t  dominated = domby[j];\n \t\t  /* Ignore self dominance.  */\n-\t\t  if (bb == dominated\n-\t\t      || dominated_by_p (dominators, dominated, bb))\n+\t\t  if (bb == dominated)\n \t\t    continue;\n-\n \t\t  /* We've found a dominated block, now see if it computes\n \t\t     the busy expression and whether or not moving that\n \t\t     expression to the \"beginning\" of that block is safe.  */\n@@ -5982,10 +5985,12 @@ hoist_code ()\n \t\t}\n \t    }\n \t}\n-\n       /* If we found nothing to hoist, then quit now.  */\n       if (! found)\n+        {\n+  \t  free (domby);\n \tcontinue;\n+\t}\n \n       /* Loop over all the hoistable expressions.  */\n       for (i = 0; i < hoist_exprs[bb->index]->n_bits; i++)\n@@ -6000,11 +6005,11 @@ hoist_code ()\n \t      /* We've found a potentially hoistable expression, now\n \t\t we look at every block BB dominates to see if it\n \t\t computes the expression.  */\n-\t      FOR_EACH_BB (dominated)\n+\t      for (j = 0; j < domby_len; j++)\n \t\t{\n+\t\t  dominated = domby[j];\n \t\t  /* Ignore self dominance.  */\n-\t\t  if (bb == dominated\n-\t\t      || ! dominated_by_p (dominators, dominated, bb))\n+\t\t  if (bb == dominated)\n \t\t    continue;\n \n \t\t  /* We've found a dominated block, now see if it computes\n@@ -6058,6 +6063,7 @@ hoist_code ()\n \t\t}\n \t    }\n \t}\n+      free (domby);\n     }\n \n   free (index_map);"}]}