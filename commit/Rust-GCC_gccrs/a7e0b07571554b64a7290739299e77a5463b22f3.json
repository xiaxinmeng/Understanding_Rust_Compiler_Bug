{"sha": "a7e0b07571554b64a7290739299e77a5463b22f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdlMGIwNzU3MTU1NGI2NGE3MjkwNzM5Mjk5ZTc3YTU0NjNiMjJmMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-10-06T22:58:59Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-10-06T22:58:59Z"}, "message": "* config/rs6000/rs6000.c: Revert last change.\n\nFrom-SVN: r105072", "tree": {"sha": "efdc8f0c147f1d7fb06a78df21018b0cdb20e298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efdc8f0c147f1d7fb06a78df21018b0cdb20e298"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7e0b07571554b64a7290739299e77a5463b22f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e0b07571554b64a7290739299e77a5463b22f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7e0b07571554b64a7290739299e77a5463b22f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e0b07571554b64a7290739299e77a5463b22f3/comments", "author": null, "committer": null, "parents": [{"sha": "27add2e89a6265c0d25162cc6fdd964b9fa6239e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27add2e89a6265c0d25162cc6fdd964b9fa6239e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27add2e89a6265c0d25162cc6fdd964b9fa6239e"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "02b299982bd3378e9339e642e7a3c151dfcd58e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7e0b07571554b64a7290739299e77a5463b22f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7e0b07571554b64a7290739299e77a5463b22f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7e0b07571554b64a7290739299e77a5463b22f3", "patch": "@@ -1,3 +1,7 @@\n+2005-10-06  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/rs6000/rs6000.c: Revert last change.\n+\n 2005-10-06  Richard Henderson  <rth@redhat.com>\n \n \t* config/rs6000/rs6000.c (rs6000_cannot_force_const_mem): New."}, {"sha": "7077b6610038a5bf2a22314b8602e2536fd8b704", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7e0b07571554b64a7290739299e77a5463b22f3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7e0b07571554b64a7290739299e77a5463b22f3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a7e0b07571554b64a7290739299e77a5463b22f3", "patch": "@@ -748,7 +748,6 @@ static rtx rs6000_emit_vector_compare (enum rtx_code, rtx, rtx,\n static int get_vsel_insn (enum machine_mode);\n static void rs6000_emit_vector_select (rtx, rtx, rtx, rtx);\n static tree rs6000_stack_protect_fail (void);\n-static bool rs6000_cannot_force_const_mem (rtx x);\n \n const int INSN_NOT_AVAILABLE = -1;\n static enum machine_mode rs6000_eh_return_filter_mode (void);\n@@ -877,7 +876,7 @@ static const char alt_reg_names[][8] =\n #define TARGET_HAVE_TLS HAVE_AS_TLS\n \n #undef TARGET_CANNOT_FORCE_CONST_MEM\n-#define TARGET_CANNOT_FORCE_CONST_MEM rs6000_cannot_force_const_mem\n+#define TARGET_CANNOT_FORCE_CONST_MEM rs6000_tls_referenced_p\n \n #undef TARGET_ASM_FUNCTION_PROLOGUE\n #define TARGET_ASM_FUNCTION_PROLOGUE rs6000_output_function_prologue\n@@ -3108,17 +3107,6 @@ rs6000_legitimize_tls_address (rtx addr, enum tls_model model)\n   return dest;\n }\n \n-/* Primarily this is required for TLS symbols, but given that our move\n-   patterns *ought* to be able to handle any symbol at any time, we\n-   should never be spilling symbolic operands to the constant pool, ever.  */\n-\n-static bool\n-rs6000_cannot_force_const_mem (rtx x)\n-{\n-  enum rtx_code code = GET_CODE (x);\n-  return code == SYMBOL_REF || code == LABEL_REF || code == CONST;\n-}\n-\n /* Return 1 if X contains a thread-local symbol.  */\n \n bool"}]}