{"sha": "be841e112b04fe434f5ef9248f2a5e4169aebddf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU4NDFlMTEyYjA0ZmU0MzRmNWVmOTI0OGYyYTVlNDE2OWFlYmRkZg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2016-12-10T22:28:32Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2016-12-10T22:28:32Z"}, "message": "re PR fortran/78226 (Fill out location information everywhere)\n\n2016-12-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/78226\n\t* error.c (gfc_warning_internal):  New function.\n\t* frontend-passes.c (gfc_run_passes):  Call check_locus if\n\tCHECKING_P is defined.\n\t(check_locus_code):  New function.\n\t(check_locus_expr):  New function.\n\t(check_locus):  New function.\n\t* gfortran.h:  Add prototype for gfc_warning_internal.\n\nFrom-SVN: r243520", "tree": {"sha": "be4bfe7ad7a362f1b2ec18203a6dd437d989c28e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be4bfe7ad7a362f1b2ec18203a6dd437d989c28e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be841e112b04fe434f5ef9248f2a5e4169aebddf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be841e112b04fe434f5ef9248f2a5e4169aebddf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be841e112b04fe434f5ef9248f2a5e4169aebddf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be841e112b04fe434f5ef9248f2a5e4169aebddf/comments", "author": null, "committer": null, "parents": [{"sha": "8a45a00eee9802d81140870c84675d1e47f1f498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a45a00eee9802d81140870c84675d1e47f1f498", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a45a00eee9802d81140870c84675d1e47f1f498"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "1597a89e1f4b0d517230a4bebfcc7a9bfae37ba6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be841e112b04fe434f5ef9248f2a5e4169aebddf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be841e112b04fe434f5ef9248f2a5e4169aebddf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=be841e112b04fe434f5ef9248f2a5e4169aebddf", "patch": "@@ -1,3 +1,14 @@\n+2016-12-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/78226\n+\t* error.c (gfc_warning_internal):  New function.\n+\t* frontend-passes.c (gfc_run_passes):  Call check_locus if\n+\tCHECKING_P is defined.\n+\t(check_locus_code):  New function.\n+\t(check_locus_expr):  New function.\n+\t(check_locus):  New function.\n+\t* gfortran.h:  Add prototype for gfc_warning_internal.\n+\n 2016-12-10 Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/78350"}, {"sha": "dcd9647dac6832d395c0e4e4e2e8c9368c244742", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be841e112b04fe434f5ef9248f2a5e4169aebddf/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be841e112b04fe434f5ef9248f2a5e4169aebddf/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=be841e112b04fe434f5ef9248f2a5e4169aebddf", "patch": "@@ -1160,6 +1160,24 @@ gfc_warning_now (int opt, const char *gmsgid, ...)\n   return ret;\n }\n \n+/* Internal warning, do not buffer.  */\n+\n+bool\n+gfc_warning_internal (int opt, const char *gmsgid, ...)\n+{\n+  va_list argp;\n+  diagnostic_info diagnostic;\n+  rich_location rich_loc (line_table, UNKNOWN_LOCATION);\n+  bool ret;\n+\n+  va_start (argp, gmsgid);\n+  diagnostic_set_info (&diagnostic, gmsgid, &argp, &rich_loc,\n+\t\t       DK_WARNING);\n+  diagnostic.option_index = opt;\n+  ret = report_diagnostic (&diagnostic);\n+  va_end (argp);\n+  return ret;\n+}\n \n /* Immediate error (i.e. do not buffer).  */\n "}, {"sha": "82812f883ed5fb0f810a639ec956a995756c9549", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be841e112b04fe434f5ef9248f2a5e4169aebddf/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be841e112b04fe434f5ef9248f2a5e4169aebddf/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=be841e112b04fe434f5ef9248f2a5e4169aebddf", "patch": "@@ -48,6 +48,10 @@ static gfc_code * create_do_loop (gfc_expr *, gfc_expr *, gfc_expr *,\n \t\t\t\t  locus *, gfc_namespace *,\n \t\t\t\t  char *vname=NULL);\n \n+#ifdef CHECKING_P\n+static void check_locus (gfc_namespace *);\n+#endif\n+\n /* How deep we are inside an argument list.  */\n \n static int count_arglist;\n@@ -127,6 +131,10 @@ gfc_run_passes (gfc_namespace *ns)\n   doloop_list.release ();\n   int w, e;\n \n+#ifdef CHECKING_P\n+  check_locus (ns);\n+#endif\n+\n   if (flag_frontend_optimize)\n     {\n       optimize_namespace (ns);\n@@ -145,6 +153,53 @@ gfc_run_passes (gfc_namespace *ns)\n     realloc_strings (ns);\n }\n \n+#ifdef CHECKING_P\n+\n+/* Callback function: Warn if there is no location information in a\n+   statement.  */\n+\n+static int\n+check_locus_code (gfc_code **c, int *walk_subtrees ATTRIBUTE_UNUSED,\n+\t\t  void *data ATTRIBUTE_UNUSED)\n+{\n+  current_code = c;\n+  if (c && *c && (((*c)->loc.nextc == NULL) || ((*c)->loc.lb == NULL)))\n+    gfc_warning_internal (0, \"No location in statement\");\n+\n+  return 0;\n+}\n+\n+\n+/* Callback function: Warn if there is no location information in an\n+   expression.  */\n+\n+static int\n+check_locus_expr (gfc_expr **e, int *walk_subtrees ATTRIBUTE_UNUSED,\n+\t\t  void *data ATTRIBUTE_UNUSED)\n+{\n+\n+  if (e && *e && (((*e)->where.nextc == NULL || (*e)->where.lb == NULL)))\n+    gfc_warning_internal (0, \"No location in expression near %L\",\n+\t\t\t  &((*current_code)->loc));\n+  return 0;\n+}\n+\n+/* Run check for missing location information.  */\n+\n+static void\n+check_locus (gfc_namespace *ns)\n+{\n+  gfc_code_walker (&ns->code, check_locus_code, check_locus_expr, NULL);\n+\n+  for (ns = ns->contained; ns; ns = ns->sibling)\n+    {\n+      if (ns->code == NULL || ns->code->op != EXEC_BLOCK)\n+\tcheck_locus (ns);\n+    }\n+}\n+\n+#endif\n+\n /* Callback for each gfc_code node invoked from check_realloc_strings.\n    For an allocatable LHS string which also appears as a variable on\n    the RHS, replace"}, {"sha": "24dadf26a12a0c2d1fc50012099e1d3716f2f596", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be841e112b04fe434f5ef9248f2a5e4169aebddf/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be841e112b04fe434f5ef9248f2a5e4169aebddf/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=be841e112b04fe434f5ef9248f2a5e4169aebddf", "patch": "@@ -2786,6 +2786,7 @@ const char *gfc_print_wide_char (gfc_char_t);\n \n bool gfc_warning (int opt, const char *, ...) ATTRIBUTE_GCC_GFC(2,3);\n bool gfc_warning_now (int opt, const char *, ...) ATTRIBUTE_GCC_GFC(2,3);\n+bool gfc_warning_internal (int opt, const char *, ...) ATTRIBUTE_GCC_GFC(2,3);\n bool gfc_warning_now_at (location_t loc, int opt, const char *gmsgid, ...)\n   ATTRIBUTE_GCC_GFC(3,4);\n "}]}