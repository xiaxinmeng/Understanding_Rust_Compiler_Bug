{"sha": "35399bdca9aeeaf8c7b0709c7767c79504944fa7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUzOTliZGNhOWFlZWFmOGM3YjA3MDljNzc2N2M3OTUwNDk0NGZhNw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-06-08T07:54:10Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-06-08T07:54:10Z"}, "message": "Makefile.in: Rename options.c and options.h to c-options.c and c-options.h.\n\n\t* Makefile.in: Rename options.c and options.h to c-options.c and\n\tc-options.h.\n\t(OBJS): Remove options.o.\n\t* c-opts.c: Don'tInclude c-options.h instead of options.h.\n\t* opts.c: Don't include options.h.\n\t(find_opt): Can't use enum opt_code or N_OPTS.\n\t* opts.h (struct cl_option, cl_options, cl_options_count): Move from...\n\t* opts.sh: ... here.\n\nFrom-SVN: r67615", "tree": {"sha": "f974599ae367c3af58eeec4d6ed163ceb9b16557", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f974599ae367c3af58eeec4d6ed163ceb9b16557"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35399bdca9aeeaf8c7b0709c7767c79504944fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35399bdca9aeeaf8c7b0709c7767c79504944fa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35399bdca9aeeaf8c7b0709c7767c79504944fa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35399bdca9aeeaf8c7b0709c7767c79504944fa7/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8eb6a092cabdf4dbf91224ed32b63935a30766dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb6a092cabdf4dbf91224ed32b63935a30766dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb6a092cabdf4dbf91224ed32b63935a30766dd"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "dfe0b207d200133a6c13ff3974de7c493c7f196e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35399bdca9aeeaf8c7b0709c7767c79504944fa7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35399bdca9aeeaf8c7b0709c7767c79504944fa7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35399bdca9aeeaf8c7b0709c7767c79504944fa7", "patch": "@@ -1,3 +1,14 @@\n+2003-06-08  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* Makefile.in: Rename options.c and options.h to c-options.c and\n+\tc-options.h.\n+\t(OBJS): Remove options.o.\n+\t* c-opts.c: Don'tInclude c-options.h instead of options.h.\n+\t* opts.c: Don't include options.h.\n+\t(find_opt): Can't use enum opt_code or N_OPTS.\n+\t* opts.h (struct cl_option, cl_options, cl_options_count): Move from...\n+\t* opts.sh: ... here.\n+\n 2003-06-07 \ufffdEric Botcazou \ufffd<ebotcazou@libertysurf.fr>\n  \ufffd \ufffd \ufffd \ufffd \ufffd \ufffdUlrich Weigand  <Ulrich.Weigand@de.ibm.com>\n "}, {"sha": "43057ab551cafbcf6ef0ec6b36446d54521d2bd9", "filename": "gcc/c-opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35399bdca9aeeaf8c7b0709c7767c79504944fa7/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35399bdca9aeeaf8c7b0709c7767c79504944fa7/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=35399bdca9aeeaf8c7b0709c7767c79504944fa7", "patch": "@@ -36,7 +36,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"c-incpath.h\"\n #include \"debug.h\"\t\t/* For debug_hooks.  */\n #include \"opts.h\"\n-#include \"options.h\"\n+#include \"c-options.h\"\n \n #ifndef DOLLARS_IN_IDENTIFIERS\n # define DOLLARS_IN_IDENTIFIERS true"}, {"sha": "0911d388ff81243b1af2aa2e781c7945d5122622", "filename": "gcc/opts.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35399bdca9aeeaf8c7b0709c7767c79504944fa7/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35399bdca9aeeaf8c7b0709c7767c79504944fa7/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=35399bdca9aeeaf8c7b0709c7767c79504944fa7", "patch": "@@ -26,9 +26,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tree.h\"\n #include \"langhooks.h\"\n #include \"opts.h\"\n-#include \"options.h\"\n \n-static enum opt_code find_opt (const char *, int);\n+static size_t find_opt (const char *, int);\n \n /* Perform a binary search to find which option the command-line INPUT\n    matches.  Returns its index in the option array, and N_OPTS on\n@@ -41,16 +40,16 @@ static enum opt_code find_opt (const char *, int);\n    doesn't match any alternatives for the true front end, the index of\n    the matched switch is returned anyway.  The caller should check for\n    this case.  */\n-static enum opt_code\n+static size_t\n find_opt (const char *input, int lang_mask)\n {\n   size_t md, mn, mx;\n   size_t opt_len;\n-  enum opt_code result = N_OPTS;\n+  size_t result = cl_options_count;\n   int comp;\n \n   mn = 0;\n-  mx = N_OPTS;\n+  mx = cl_options_count;\n \n   while (mx > mn)\n     {\n@@ -84,7 +83,7 @@ find_opt (const char *input, int lang_mask)\n \t\t  /* If subsequently we don't find a better match,\n \t\t     return this and let the caller report it as a bad\n \t\t     match.  */\n-\t\t  result = (enum opt_code) md;\n+\t\t  result = md;\n \t\t  continue;\n \t\t}\n \n@@ -97,7 +96,7 @@ find_opt (const char *input, int lang_mask)\n \t\t return the longest valid option-accepting match (mx).\n \t\t This loops at most twice with current options.  */\n \t      mx = md;\n-\t      for (md = md + 1; md < N_OPTS; md++)\n+\t      for (md = md + 1; md < cl_options_count; md++)\n \t\t{\n \t\t  opt_len = cl_options[md].opt_len;\n \t\t  if (strncmp (input, cl_options[md].opt_text, opt_len))\n@@ -137,7 +136,7 @@ handle_option (int argc, char **argv, int lang_mask)\n   /* Interpret \"-\" or a non-switch as a file name.  */\n   if (opt[0] != '-' || opt[1] == '\\0')\n     {\n-      opt_index = N_OPTS;\n+      opt_index = cl_options_count;\n       arg = opt;\n       result = 1;\n     }\n@@ -159,7 +158,7 @@ handle_option (int argc, char **argv, int lang_mask)\n \n       /* Skip over '-'.  */\n       opt_index = find_opt (opt + 1, lang_mask);\n-      if (opt_index == N_OPTS)\n+      if (opt_index == cl_options_count)\n \tgoto done;\n \n       option = &cl_options[opt_index];"}, {"sha": "0bba52d34999760611a1a8d9540b7f2a9412d9e8", "filename": "gcc/opts.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35399bdca9aeeaf8c7b0709c7767c79504944fa7/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35399bdca9aeeaf8c7b0709c7767c79504944fa7/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=35399bdca9aeeaf8c7b0709c7767c79504944fa7", "patch": "@@ -23,6 +23,16 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n extern int handle_option (int argc, char **argv, int lang_mask);\n \n+struct cl_option\n+{\n+  const char *opt_text;\n+  unsigned char opt_len;\n+  unsigned char flags;\n+};\n+\n+extern const struct cl_option cl_options[];\n+extern const unsigned int cl_options_count;\n+\n #define CL_C\t\t\t(1 << 0) /* Only C.  */\n #define CL_OBJC\t\t\t(1 << 1) /* Only ObjC.  */\n #define CL_CXX\t\t\t(1 << 2) /* Only C++.  */"}, {"sha": "1ce8c4a089d7c3de6df2251642ec78dbf5a1acf5", "filename": "gcc/opts.sh", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35399bdca9aeeaf8c7b0709c7767c79504944fa7/gcc%2Fopts.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35399bdca9aeeaf8c7b0709c7767c79504944fa7/gcc%2Fopts.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.sh?ref=35399bdca9aeeaf8c7b0709c7767c79504944fa7", "patch": "@@ -61,15 +61,10 @@ cat \"$@\" | ${AWK} '\n \tFS = \"\\034\"\n \tprint \"/* This file is auto-generated by opts.sh.  */\\n\" > h_file\n \tprint \"/* This file is auto-generated by opts.sh.  */\\n\" > c_file\n-\tprint \"struct cl_option\\n{\"\t\t\t>> h_file\n-\tprint \"  const char *opt_text;\"\t\t\t>> h_file\n-\tprint \"  unsigned char opt_len;\"\t\t>> h_file\n-\tprint \"  unsigned char flags;\"\t\t\t>> h_file\n-\tprint \"};\\n\\n\"\t\t\t\t\t>> h_file\n-\tprint \"extern const struct cl_option cl_options[];\\n\" >> h_file\n \tprint \"enum opt_code\\n{\"\t\t\t>> h_file\n-\tprint \"#include \\\"options.h\\\"\"\t\t\t>> c_file\n+\tprint \"#include \\\"\" h_file \"\\\"\"\t\t\t>> c_file\n \tprint \"#include \\\"opts.h\\\"\\n\"\t\t\t>> c_file\n+\tprint \"const unsigned int cl_options_count = N_OPTS;\\n\" >> c_file\n \tprint \"const struct cl_option cl_options[] =\\n{\" >> c_file\n     }\n "}]}