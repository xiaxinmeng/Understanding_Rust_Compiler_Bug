{"sha": "4fc78e18b5be495aa71b9f87b0677e06a35b93a4", "node_id": "C_kwDOANBUbNoAKDRmYzc4ZTE4YjViZTQ5NWFhNzFiOWY4N2IwNjc3ZTA2YTM1YjkzYTQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-19T13:23:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-19T14:25:55Z"}, "message": "Remove get_or_alloc_expression_id\n\nThis function is no longer needed.\n\n2022-05-19  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-pre.cc (get_or_alloc_expression_id): Remove.\n\t(add_to_value): Use get_expression_id.\n\t(bitmap_insert_into_set): Likewise.\n\t(bitmap_value_insert_into_set): Likewise.", "tree": {"sha": "fb3c6595efc099e9d62980bf62dbfb3721a9e9d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb3c6595efc099e9d62980bf62dbfb3721a9e9d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fc78e18b5be495aa71b9f87b0677e06a35b93a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc78e18b5be495aa71b9f87b0677e06a35b93a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc78e18b5be495aa71b9f87b0677e06a35b93a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc78e18b5be495aa71b9f87b0677e06a35b93a4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9aa9ba95ea3d4800974135da85fd4d9cd310b69e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa9ba95ea3d4800974135da85fd4d9cd310b69e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aa9ba95ea3d4800974135da85fd4d9cd310b69e"}], "stats": {"total": 18, "additions": 3, "deletions": 15}, "files": [{"sha": "09a5e2055cab5d945f2dd9e43d88ada0ad906e9f", "filename": "gcc/tree-ssa-pre.cc", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc78e18b5be495aa71b9f87b0677e06a35b93a4/gcc%2Ftree-ssa-pre.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc78e18b5be495aa71b9f87b0677e06a35b93a4/gcc%2Ftree-ssa-pre.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.cc?ref=4fc78e18b5be495aa71b9f87b0677e06a35b93a4", "patch": "@@ -384,18 +384,6 @@ lookup_expression_id (const pre_expr expr)\n     }\n }\n \n-/* Return the existing expression id for EXPR, or create one if one\n-   does not exist yet.  */\n-\n-static inline unsigned int\n-get_or_alloc_expression_id (pre_expr expr)\n-{\n-  unsigned int id = lookup_expression_id (expr);\n-  if (id == 0)\n-    return alloc_expression_id (expr);\n-  return expr->id = id;\n-}\n-\n /* Return the expression that has expression id ID */\n \n static inline pre_expr\n@@ -729,7 +717,7 @@ add_to_value (unsigned int v, pre_expr e)\n \t  set = BITMAP_ALLOC (&grand_bitmap_obstack);\n \t  value_expressions[v] = set;\n \t}\n-      bitmap_set_bit (set, get_or_alloc_expression_id (e));\n+      bitmap_set_bit (set, get_expression_id (e));\n     }\n }\n \n@@ -792,7 +780,7 @@ bitmap_insert_into_set (bitmap_set_t set, pre_expr expr)\n          for the same value to appear in a set.  This is needed for\n \t TMP_GEN, PHI_GEN and NEW_SETs.  */\n       bitmap_set_bit (&set->values, val);\n-      bitmap_set_bit (&set->expressions, get_or_alloc_expression_id (expr));\n+      bitmap_set_bit (&set->expressions, get_expression_id (expr));\n     }\n }\n \n@@ -1030,7 +1018,7 @@ bitmap_value_insert_into_set (bitmap_set_t set, pre_expr expr)\n {\n   unsigned int val = get_expr_value_id (expr);\n \n-  gcc_checking_assert (expr->id == get_or_alloc_expression_id (expr));\n+  gcc_checking_assert (expr->id == get_expression_id (expr));\n \n   /* Constant values are always considered to be part of the set.  */\n   if (value_id_constant_p (val))"}]}