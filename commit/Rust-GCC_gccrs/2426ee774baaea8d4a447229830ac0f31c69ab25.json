{"sha": "2426ee774baaea8d4a447229830ac0f31c69ab25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQyNmVlNzc0YmFhZWE4ZDRhNDQ3MjI5ODMwYWMwZjMxYzY5YWIyNQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-11-26T23:26:40Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-11-26T23:26:40Z"}, "message": "PR c++/88120 - ICE when calling save_expr in a template.\n\n\t* typeck.c (cp_build_binary_op): Call cp_save_expr instead of\n\tsave_expr.\n\n\t* g++.dg/cpp0x/pr88120.C: New test.\n\nFrom-SVN: r266492", "tree": {"sha": "8ff280cb726ebe2a8d9b76fcf21cf63e0a51daa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ff280cb726ebe2a8d9b76fcf21cf63e0a51daa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2426ee774baaea8d4a447229830ac0f31c69ab25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2426ee774baaea8d4a447229830ac0f31c69ab25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2426ee774baaea8d4a447229830ac0f31c69ab25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2426ee774baaea8d4a447229830ac0f31c69ab25/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80de5ef9c1070e6dcbf8fd5cae93b06edc36d08a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80de5ef9c1070e6dcbf8fd5cae93b06edc36d08a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80de5ef9c1070e6dcbf8fd5cae93b06edc36d08a"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "8e157f6c25c1a20c04e4f372b2622e2137e2d96f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2426ee774baaea8d4a447229830ac0f31c69ab25/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2426ee774baaea8d4a447229830ac0f31c69ab25/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2426ee774baaea8d4a447229830ac0f31c69ab25", "patch": "@@ -1,3 +1,9 @@\n+2018-11-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88120 - ICE when calling save_expr in a template.\n+\t* typeck.c (cp_build_binary_op): Call cp_save_expr instead of\n+\tsave_expr.\n+\n 2018-11-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/87386"}, {"sha": "f45c06e3fe42f50df9ba11269a097bf01b620ee2", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2426ee774baaea8d4a447229830ac0f31c69ab25/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2426ee774baaea8d4a447229830ac0f31c69ab25/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=2426ee774baaea8d4a447229830ac0f31c69ab25", "patch": "@@ -4919,7 +4919,7 @@ cp_build_binary_op (location_t location,\n \t      tree pfn0, delta0, e1, e2;\n \n \t      if (TREE_SIDE_EFFECTS (op0))\n-\t\top0 = save_expr (op0);\n+\t\top0 = cp_save_expr (op0);\n \n \t      pfn0 = pfn_from_ptrmemfunc (op0);\n \t      delta0 = delta_from_ptrmemfunc (op0);"}, {"sha": "989b548276e4fca3ebd872da78e382c15674e9b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2426ee774baaea8d4a447229830ac0f31c69ab25/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2426ee774baaea8d4a447229830ac0f31c69ab25/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2426ee774baaea8d4a447229830ac0f31c69ab25", "patch": "@@ -1,3 +1,8 @@\n+2018-11-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88120 - ICE when calling save_expr in a template.\n+\t* g++.dg/cpp0x/pr88120.C: New test.\n+\n 2018-11-26  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* c-c++-common/Warray-bounds-3.c (test_strcpy_bounds): Use long instead"}, {"sha": "7004e03f4da738084093dd72a65bd963a8068c41", "filename": "gcc/testsuite/g++.dg/cpp0x/pr88120.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2426ee774baaea8d4a447229830ac0f31c69ab25/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr88120.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2426ee774baaea8d4a447229830ac0f31c69ab25/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr88120.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr88120.C?ref=2426ee774baaea8d4a447229830ac0f31c69ab25", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/88120\n+// { dg-do compile { target c++11 } }\n+\n+typedef int a;\n+enum b : a;\n+class c {\n+  enum f { d };\n+  c(f);\n+  friend c operator&(c, c);\n+  typedef void (c::*e)();\n+  operator e();\n+};\n+class g {\n+  template <typename, typename> b h();\n+  struct k {\n+    c i;\n+  };\n+};\n+template <typename, typename> b g::h() {\n+  k j;\n+  &j || j.i &c::d;\n+  return b();\n+}"}]}