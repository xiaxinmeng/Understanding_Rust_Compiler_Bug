{"sha": "ca7b051775437a3002bdfd9a7d0aebb092095f05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E3YjA1MTc3NTQzN2EzMDAyYmRmZDlhN2QwYWViYjA5MjA5NWYwNQ==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2007-12-17T11:13:56Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2007-12-17T11:13:56Z"}, "message": "re PR tree-optimization/34445 (internal compiler error: in cost_for_stmt, at tree-vect-transform.c:98)\n\n\tPR tree-optimization/34445\n        * tree-vect-trasnform.c (vect_estimate_min_profitable_iters): Skip\n        stmts (including live stmts) that are not relevant.\n\nFrom-SVN: r131006", "tree": {"sha": "f8dea64c0bc26b2701c69ead0093db178c2940f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8dea64c0bc26b2701c69ead0093db178c2940f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca7b051775437a3002bdfd9a7d0aebb092095f05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca7b051775437a3002bdfd9a7d0aebb092095f05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca7b051775437a3002bdfd9a7d0aebb092095f05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca7b051775437a3002bdfd9a7d0aebb092095f05/comments", "author": null, "committer": null, "parents": [{"sha": "5287c2bcadea2a91cb66ceaa87a442771aa50fce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5287c2bcadea2a91cb66ceaa87a442771aa50fce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5287c2bcadea2a91cb66ceaa87a442771aa50fce"}], "stats": {"total": 77, "additions": 67, "deletions": 10}, "files": [{"sha": "648cd8fa5027a925f3eae85b70f183e4dbf57bf6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca7b051775437a3002bdfd9a7d0aebb092095f05", "patch": "@@ -1,3 +1,9 @@\n+2007-12-17  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/34445\n+\t* tree-vect-trasnform.c (vect_estimate_min_profitable_iters): Skip \n+\tstmts (including live stmts) that are not relevant.\n+\n 2007-12-17  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \tPR target/34025"}, {"sha": "bd18305702cab0801060503831fbc25ffe807392", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca7b051775437a3002bdfd9a7d0aebb092095f05", "patch": "@@ -1,3 +1,9 @@\n+2007-12-17  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/34445\n+\t* gfortran.dg/vect/cost-model-pr34445.f: New test.\n+\t* gfortran.dg/vect/cost-model-pr34445a.f: New test.\n+\n 2007-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/34427"}, {"sha": "6e4a2624865160696a9b05375a775e088b763c2f", "filename": "gcc/testsuite/gfortran.dg/vect/cost-model-pr34445.f", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fcost-model-pr34445.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fcost-model-pr34445.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fcost-model-pr34445.f?ref=ca7b051775437a3002bdfd9a7d0aebb092095f05", "patch": "@@ -0,0 +1,9 @@\n+c { dg-do compile }\n+      Subroutine FndSph(Alpha,Rad)\n+      Dimension Rad(100),RadInp(100)\n+      Do I = 1, NSphInp\n+        Rad(I) = RadInp(I)\n+        Alpha = 1.2\n+      End Do\n+      End\n+c { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "aca68bb20396cfea61b489f31cc3801457faf622", "filename": "gcc/testsuite/gfortran.dg/vect/cost-model-pr34445a.f", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fcost-model-pr34445a.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fcost-model-pr34445a.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fcost-model-pr34445a.f?ref=ca7b051775437a3002bdfd9a7d0aebb092095f05", "patch": "@@ -0,0 +1,29 @@\n+c { dg-do compile }\n+      subroutine derv (xx,b,bv,det,r,s,t,ndopt,cosxy,thick,edis,\n+     1                  vni,vnt)\n+      implicit real*8 (a-h,o-z)\n+      save\n+c\n+      common /shell1/ disd(9),ield,ielp,npt,idw,ndrot\n+      common /shell4/xji(3,3),p(3,32),h(32)\n+c\n+      dimension xx(3,*),ndopt(*),bv(*),vni(*),cosxy(6,*),vnt(*),\n+     1          edis(*),thick(*),b(*)\n+c\n+      kk=0\n+      k2=0\n+      do 130 k=1,ield\n+      k2=k2 + 3\n+      if (ndopt(k)) 127,127,130\n+  127 kk=kk + 1\n+      do 125 i=1,3\n+      b(k2+i)=b(k2+i) + (xji(i,1)*p(1,k) + xji(i,2)*p(2,k))*t\n+     1         + xji(i,3)*h(k)\n+      th=0.5*thick(kk)\n+      b(k2+i+3)=b(k2+i+3) - th*cosxy(i+3,kk)\n+  125 b(k2+i+6)=b(k2+i+6) + th*cosxy(i,kk)\n+      k2=k2 + 9\n+  130 continue\n+      return\n+      end\n+c { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "a1b949899fc0867b690201ba7b8bd71b34253564", "filename": "gcc/testsuite/gfortran.dg/vect/vect.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp?ref=ca7b051775437a3002bdfd9a7d0aebb092095f05", "patch": "@@ -103,6 +103,12 @@ lappend DEFAULT_VECTCFLAGS \"-ffast-math\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/fast-math-*.\\[fF\\]{,90,95,03} ]]  \\\n         \"\" $DEFAULT_VECTCFLAGS\n \n+# -fvect-cost-model tests\n+set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n+lappend DEFAULT_VECTCFLAGS \"-fvect-cost-model\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/cost-model-*.\\[fF\\]{,90,95,03} ]]  \\\n+        \"\" $DEFAULT_VECTCFLAGS\n+\n # --param vect-max-version-for-alias-checks=0 tests\n set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n lappend DEFAULT_VECTCFLAGS \"--param\" \"vect-max-version-for-alias-checks=0\""}, {"sha": "8b22dcaf1f489c00340c068da1caa89bb0add098", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7b051775437a3002bdfd9a7d0aebb092095f05/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=ca7b051775437a3002bdfd9a7d0aebb092095f05", "patch": "@@ -197,18 +197,19 @@ vect_estimate_min_profitable_iters (loop_vec_info loop_vinfo)\n  \tfactor = 1;\n \n       for (si = bsi_start (bb); !bsi_end_p (si); bsi_next (&si))\n-        {\n-          tree stmt = bsi_stmt (si);\n-          stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n-          if (!STMT_VINFO_RELEVANT_P (stmt_info)\n-              && !STMT_VINFO_LIVE_P (stmt_info))\n-            continue;\n-          scalar_single_iter_cost += cost_for_stmt (stmt) * factor;\n-          vec_inside_cost += STMT_VINFO_INSIDE_OF_LOOP_COST (stmt_info) * factor;\n+\t{\n+\t  tree stmt = bsi_stmt (si);\n+\t  stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n+\t  /* Skip stmts that are not vectorized inside the loop.  */\n+\t  if (!STMT_VINFO_RELEVANT_P (stmt_info)\n+\t      && STMT_VINFO_DEF_TYPE (stmt_info) != vect_reduction_def)\n+\t    continue;\n+\t  scalar_single_iter_cost += cost_for_stmt (stmt) * factor;\n+\t  vec_inside_cost += STMT_VINFO_INSIDE_OF_LOOP_COST (stmt_info) * factor;\n \t  /* FIXME: for stmts in the inner-loop in outer-loop vectorization,\n \t     some of the \"outside\" costs are generated inside the outer-loop.  */\n-          vec_outside_cost += STMT_VINFO_OUTSIDE_OF_LOOP_COST (stmt_info);\n-        }\n+\t  vec_outside_cost += STMT_VINFO_OUTSIDE_OF_LOOP_COST (stmt_info);\n+\t}\n     }\n \n   /* Add additional cost for the peeled instructions in prologue and epilogue"}]}