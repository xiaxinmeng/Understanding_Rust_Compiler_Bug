{"sha": "75afccba060cc990398ffa0741aca68232ac6f56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVhZmNjYmEwNjBjYzk5MDM5OGZmYTA3NDFhY2E2ODIzMmFjNmY1Ng==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2009-06-01T05:47:20Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-06-01T05:47:20Z"}, "message": "ansidecl.h: Add extern \"C\" when compiling with C++.\n\n\t* ansidecl.h: Add extern \"C\" when compiling with C++.  Treat C++\n\tthe way we treat an ISO C compiler.  Don't define inline as a\n\tmacdro when compiling with C++.\n\t* dyn-string.h: Add header guard DYN_STRING_H.  Add extern \"C\"\n\twhen compiling with C++.\n\t* fibheap.h: Add extern \"C\" when compiling with C++.\n\nFrom-SVN: r148032", "tree": {"sha": "3b2a132932c7507b3015e25cfed307df6d200eca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b2a132932c7507b3015e25cfed307df6d200eca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75afccba060cc990398ffa0741aca68232ac6f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75afccba060cc990398ffa0741aca68232ac6f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75afccba060cc990398ffa0741aca68232ac6f56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75afccba060cc990398ffa0741aca68232ac6f56/comments", "author": null, "committer": null, "parents": [{"sha": "6863c0f0d1b5341d517571a00f511170296fb305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6863c0f0d1b5341d517571a00f511170296fb305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6863c0f0d1b5341d517571a00f511170296fb305"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "273b59c2a18a8e51733c2809de3387290ea44530", "filename": "include/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75afccba060cc990398ffa0741aca68232ac6f56/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75afccba060cc990398ffa0741aca68232ac6f56/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=75afccba060cc990398ffa0741aca68232ac6f56", "patch": "@@ -1,3 +1,12 @@\n+2009-05-31  Ian Lance Taylor  <iant@google.com>\n+\n+\t* ansidecl.h: Add extern \"C\" when compiling with C++.  Treat C++\n+\tthe way we treat an ISO C compiler.  Don't define inline as a\n+\tmacdro when compiling with C++.\n+\t* dyn-string.h: Add header guard DYN_STRING_H.  Add extern \"C\"\n+\twhen compiling with C++.\n+\t* fibheap.h: Add extern \"C\" when compiling with C++.\n+\n 2009-04-22  Taras Glek <tglek@mozilla.com>\n \n \t* hashtab.h: Update GTY annotations to new syntax."}, {"sha": "c83b8c039d9982c72604c38a7939d586885ea182", "filename": "include/ansidecl.h", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75afccba060cc990398ffa0741aca68232ac6f56/include%2Fansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75afccba060cc990398ffa0741aca68232ac6f56/include%2Fansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fansidecl.h?ref=75afccba060cc990398ffa0741aca68232ac6f56", "patch": "@@ -1,5 +1,6 @@\n /* ANSI and traditional C compatability macros\n-   Copyright 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001\n+   Copyright 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,\n+   2002, 2003, 2004, 2005, 2006, 2007, 2009\n    Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n \n@@ -114,6 +115,10 @@ Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.\n #ifndef\t_ANSIDECL_H\n #define _ANSIDECL_H\t1\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* Every source file includes this file,\n    so they will all get the switch for lint.  */\n /* LINTLIBRARY */\n@@ -136,7 +141,7 @@ So instead we use the macro below and test it against specific values.  */\n #define GCC_VERSION (__GNUC__ * 1000 + __GNUC_MINOR__)\n #endif /* GCC_VERSION */\n \n-#if defined (__STDC__) || defined (_AIX) || (defined (__mips) && defined (_SYSTYPE_SVR4)) || defined(_WIN32) || (defined(__alpha) && defined(__cplusplus))\n+#if defined (__STDC__) || defined(__cplusplus) || defined (_AIX) || (defined (__mips) && defined (_SYSTYPE_SVR4)) || defined(_WIN32)\n /* All known AIX compilers implement these things (but don't always\n    define __STDC__).  The RISC/OS MIPS compiler defines these things\n    in SVR4 mode, but does not define __STDC__.  */\n@@ -173,7 +178,7 @@ So instead we use the macro below and test it against specific values.  */\n /* inline requires special treatment; it's in C99, and GCC >=2.7 supports\n    it too, but it's not in C89.  */\n #undef inline\n-#if __STDC_VERSION__ > 199901L\n+#if __STDC_VERSION__ > 199901L || defined(__cplusplus)\n /* it's a keyword */\n #else\n # if GCC_VERSION >= 2007\n@@ -390,4 +395,8 @@ So instead we use the macro below and test it against specific values.  */\n #define __extension__\n #endif\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif\t/* ansidecl.h\t*/"}, {"sha": "2b147271e5f85b52ac2bc07f6696dbb08fb0e80b", "filename": "include/dyn-string.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75afccba060cc990398ffa0741aca68232ac6f56/include%2Fdyn-string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75afccba060cc990398ffa0741aca68232ac6f56/include%2Fdyn-string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdyn-string.h?ref=75afccba060cc990398ffa0741aca68232ac6f56", "patch": "@@ -1,5 +1,6 @@\n /* An abstract string datatype.\n-   Copyright (C) 1998, 1999, 2000, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2002, 2004, 2005, 2009\n+   Free Software Foundation, Inc.\n    Contributed by Mark Mitchell (mark@markmitchell.com).\n \n This file is part of GCC.\n@@ -19,6 +20,12 @@ along with GCC; see the file COPYING.  If not, write to\n the Free Software Foundation, 51 Franklin Street - Fifth Floor,\n Boston, MA 02110-1301, USA.  */\n \n+#ifndef DYN_STRING_H\n+#define DYN_STRING_H\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n typedef struct dyn_string\n {\n@@ -58,3 +65,9 @@ extern int dyn_string_append_cstr (dyn_string_t, const char *);\n extern int dyn_string_append_char (dyn_string_t, int);\n extern int dyn_string_substring (dyn_string_t,  dyn_string_t, int, int);\n extern int dyn_string_eq (dyn_string_t, dyn_string_t);\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif /* !defined (DYN_STRING_H) */"}, {"sha": "a3d09dd9db8d70f1e4f9468f95243686f315ea7f", "filename": "include/fibheap.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75afccba060cc990398ffa0741aca68232ac6f56/include%2Ffibheap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75afccba060cc990398ffa0741aca68232ac6f56/include%2Ffibheap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Ffibheap.h?ref=75afccba060cc990398ffa0741aca68232ac6f56", "patch": "@@ -1,5 +1,6 @@\n /* A Fibonacci heap datatype.\n-   Copyright 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2009\n+   Free Software Foundation, Inc.\n    Contributed by Daniel Berlin (dan@cgsoftware.com).\n \n This file is part of GCC.\n@@ -42,6 +43,10 @@ Boston, MA 02110-1301, USA.  */\n \n #include \"ansidecl.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n typedef long fibheapkey_t;\n \n typedef struct fibheap\n@@ -83,4 +88,8 @@ extern void *fibheap_delete_node (fibheap_t, fibnode_t);\n extern void fibheap_delete (fibheap_t);\n extern fibheap_t fibheap_union (fibheap_t, fibheap_t);\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif /* _FIBHEAP_H_ */"}]}