{"sha": "a402c1b130af88d5f5294dc977ec91dabbe6c388", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQwMmMxYjEzMGFmODhkNWY1Mjk0ZGM5NzdlYzkxZGFiYmU2YzM4OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-01-20T22:14:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-01-20T22:14:51Z"}, "message": "re PR c++/41788 (-Wpacked option changes the layout of packed non-POD structs)\n\n\tPR c++/41788\n\t* class.c (layout_class_type): Set packed_maybe_necessary for packed\n\tnon-PODs.\n\nFrom-SVN: r156088", "tree": {"sha": "802bce9f55fb35b31fd3f8a8aca0689ec1189ba8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/802bce9f55fb35b31fd3f8a8aca0689ec1189ba8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a402c1b130af88d5f5294dc977ec91dabbe6c388", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a402c1b130af88d5f5294dc977ec91dabbe6c388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a402c1b130af88d5f5294dc977ec91dabbe6c388", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a402c1b130af88d5f5294dc977ec91dabbe6c388/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f4a7a481f5d76f2932c69f17adffd6bc37add04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f4a7a481f5d76f2932c69f17adffd6bc37add04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f4a7a481f5d76f2932c69f17adffd6bc37add04"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "4cc1119a211cd702ee0d81a80250f843d97e8d83", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a402c1b130af88d5f5294dc977ec91dabbe6c388/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a402c1b130af88d5f5294dc977ec91dabbe6c388/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a402c1b130af88d5f5294dc977ec91dabbe6c388", "patch": "@@ -1,5 +1,9 @@\n 2010-01-20  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/41788\n+\t* class.c (layout_class_type): Set packed_maybe_necessary for packed\n+\tnon-PODs.\n+\n \tPR c++/41920\n \t* semantics.c (build_lambda_object): Call mark_used on captured\n \tvariables."}, {"sha": "f88914d3c2228298d3a0b2e7351cc679e53a7b91", "filename": "gcc/cp/class.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a402c1b130af88d5f5294dc977ec91dabbe6c388/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a402c1b130af88d5f5294dc977ec91dabbe6c388/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=a402c1b130af88d5f5294dc977ec91dabbe6c388", "patch": "@@ -5216,6 +5216,11 @@ layout_class_type (tree t, tree *virtuals_p)\n \t\t build_decl (input_location,\n \t\t\t     FIELD_DECL, NULL_TREE, char_type_node));\n \n+  /* If this is a non-POD, declaring it packed makes a difference to how it\n+     can be used as a field; don't let finalize_record_size undo it.  */\n+  if (TYPE_PACKED (t) && !layout_pod_type_p (t))\n+    rli->packed_maybe_necessary = true;\n+\n   /* Let the back end lay out the type.  */\n   finish_record_layout (rli, /*free_p=*/true);\n "}, {"sha": "a3bf6c99d4a32c1af44bf9a226fd8e58cbffe0e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a402c1b130af88d5f5294dc977ec91dabbe6c388/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a402c1b130af88d5f5294dc977ec91dabbe6c388/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a402c1b130af88d5f5294dc977ec91dabbe6c388", "patch": "@@ -1,5 +1,8 @@\n 2010-01-20  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/41788\n+\t* g++.dg/abi/packed1.C: New.\n+\n \tPR c++/41920\n \t* g++.dg/cpp0x/lambda/lambda-warn1.C: New.\n "}, {"sha": "4e759728a17d24fec57a7363e768f75f2ddc7cc3", "filename": "gcc/testsuite/g++.dg/abi/packed1.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a402c1b130af88d5f5294dc977ec91dabbe6c388/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpacked1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a402c1b130af88d5f5294dc977ec91dabbe6c388/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpacked1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpacked1.C?ref=a402c1b130af88d5f5294dc977ec91dabbe6c388", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/41788\n+// { dg-options \"-Wpacked\" }\n+// { dg-do run }\n+\n+extern \"C\" void abort ();\n+\n+struct INNER {\n+  virtual int foo() const { return 1; }\n+} __attribute__ ((packed));\n+\n+struct OUTER {\n+  char c;\n+  INNER inner;\n+} __attribute__ ((packed));\n+\n+int main()\n+{\n+  OUTER outer;\n+  int s = sizeof(outer);\n+  int o = (char *)&outer.inner - (char *)&outer;\n+  if (s != sizeof (char) + sizeof (void*)\n+      || o != sizeof (char))\n+    abort ();\n+}"}]}