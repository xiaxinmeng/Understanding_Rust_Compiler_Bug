{"sha": "3e68fa831129e7717a961aeda8358e62d3d467e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U2OGZhODMxMTI5ZTc3MTdhOTYxYWVkYTgzNThlNjJkM2Q0NjdlOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-08-26T00:27:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-08-26T00:27:06Z"}, "message": "[multiple changes]\n\nMon Aug 25 14:26:45 1997  Jason Merrill  <jason@yorick.cygnus.com>\n\n\t* Makefile.in (CXXFLAGS): Add -Weffc++.\n\nSat Aug 23 21:25:37 1997  Mark Mitchell  <mmitchell@usa.net>\n\n\t* bastring.h: Enable reverse_iterator and its ilk.\n\n\t* bastring.h: Provide specializations of member function templates\n\tfor const_iterator.\n\nFrom-SVN: r14922", "tree": {"sha": "4adf7075210bb48181d8f9024f795a49f80a75cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4adf7075210bb48181d8f9024f795a49f80a75cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e68fa831129e7717a961aeda8358e62d3d467e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e68fa831129e7717a961aeda8358e62d3d467e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e68fa831129e7717a961aeda8358e62d3d467e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e68fa831129e7717a961aeda8358e62d3d467e9/comments", "author": null, "committer": null, "parents": [{"sha": "922ddba49fb5a98be127a55a75c37dfcf5d26fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922ddba49fb5a98be127a55a75c37dfcf5d26fc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/922ddba49fb5a98be127a55a75c37dfcf5d26fc6"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "4eace634775b6ec05f6f24cf2f5e911ba6af004c", "filename": "libstdc++/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e68fa831129e7717a961aeda8358e62d3d467e9/libstdc%2B%2B%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e68fa831129e7717a961aeda8358e62d3d467e9/libstdc%2B%2B%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FChangeLog?ref=3e68fa831129e7717a961aeda8358e62d3d467e9", "patch": "@@ -1,3 +1,14 @@\n+Mon Aug 25 14:26:45 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* Makefile.in (CXXFLAGS): Add -Weffc++.\n+\n+Sat Aug 23 21:25:37 1997  Mark Mitchell  <mmitchell@usa.net>\n+\n+\t* bastring.h: Enable reverse_iterator and its ilk.\n+\n+\t* bastring.h: Provide specializations of member function templates\n+\tfor const_iterator.\n+\n Wed Jul 30 10:59:00 1997  Benjamin Kosnik  <bkoz@rhino.cygnus.com>\n \n \t* stlinst.cc: Add instantiation file for "}, {"sha": "79d8d88e50038a30f44d8622c532bb7d8e0ce158", "filename": "libstdc++/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e68fa831129e7717a961aeda8358e62d3d467e9/libstdc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e68fa831129e7717a961aeda8358e62d3d467e9/libstdc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FMakefile.in?ref=3e68fa831129e7717a961aeda8358e62d3d467e9", "patch": "@@ -53,7 +53,7 @@ MOSTLYCLEAN_JUNK = *stmp-* tlib*.a *.s *.ii stdlist piclist\n CLEAN_JUNK = $(LIBS)\n \n # Remove these for public releases.\n-CXXFLAGS = -g -O -Wpointer-arith -Wnested-externs -Woverloaded-virtual -Wbad-function-cast -Winline -Wwrite-strings\n+CXXFLAGS = -g -O -Wpointer-arith -Wnested-externs -Woverloaded-virtual -Wbad-function-cast -Winline -Wwrite-strings -Weffc++\n CFLAGS = -g -O -Wpointer-arith -Wnested-externs\n \n .PHONY: libs\n@@ -292,7 +292,7 @@ stuff:\n \t$(MAKE) clean\n \t$(MAKE) -C ../libio c++clean\n \t$(MAKE) -C ../libg++ clean\n-\t$(MAKE) check\n+\t$(MAKE) $(MAKEFLAGS) check\n \t$(MAKE) -C ../libio check\n \t$(MAKE) -C ../libg++ check\n "}, {"sha": "98c7d44b68892bc4f84c7f40a156772cd4cae716", "filename": "libstdc++/std/bastring.h", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e68fa831129e7717a961aeda8358e62d3d467e9/libstdc%2B%2B%2Fstd%2Fbastring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e68fa831129e7717a961aeda8358e62d3d467e9/libstdc%2B%2B%2Fstd%2Fbastring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.h?ref=3e68fa831129e7717a961aeda8358e62d3d467e9", "patch": "@@ -54,7 +54,7 @@\n extern \"C++\" {\n class istream; class ostream;\n \n-// #include <iterator.h>\n+#include <iterator>\n \n template <class charT, class traits = string_char_traits<charT> >\n class basic_string\n@@ -110,12 +110,10 @@ class basic_string\n   typedef const charT* const_pointer;\n   typedef pointer iterator;\n   typedef const_pointer const_iterator;\n-#if 0\n   typedef reverse_iterator<iterator, value_type,\n                            reference, difference_type> reverse_iterator;\n   typedef reverse_iterator<const_iterator, value_type, const_reference,\n                            difference_type> const_reverse_iterator;\n-#endif\n   static const size_type npos = static_cast<size_type>(-1);\n \n private:\n@@ -157,6 +155,9 @@ class basic_string\n   template<class InputIterator>\n     basic_string(InputIterator begin, InputIterator end,\n \t\t Allocator& = Allocator());\n+#else\n+  basic_string(const_iterator begin, const_iterator end)\n+    : dat (nilRep.grab ()) { assign (begin, end); }\n #endif\n \n   ~basic_string ()\n@@ -176,6 +177,9 @@ class basic_string\n #if 0\n   template<class InputIterator>\n     basic_string& append(InputIterator first, InputIterator last);\n+#else\n+  basic_string& append(const_iterator first, const_iterator last)\n+    { return replace (length (), 0, first, last - first); }\n #endif\n \n   basic_string& assign (const basic_string& str, size_type pos = 0,\n@@ -190,6 +194,9 @@ class basic_string\n #if 0\n   template<class InputIterator>\n     basic_string& assign(InputIterator first, InputIterator last);\n+#else\n+  basic_string& assign(const_iterator first, const_iterator last)\n+    { return replace (0, npos, first, last - first); }\n #endif\n \n   basic_string& operator= (const charT* s)\n@@ -220,6 +227,9 @@ class basic_string\n #if 0\n   template<class InputIterator>\n     void insert(iterator p, InputIterator first, InputIterator last);\n+#else\n+  void insert(iterator p, const_iterator first, const_iterator last)\n+    { size_type pos = p - begin(); insert (pos, first, last - first); }\n #endif\n \n   basic_string& remove (size_type pos = 0, size_type n = npos)\n@@ -250,6 +260,10 @@ class basic_string\n   template<class InputIterator>\n     basic_string& replace(iterator i1, iterator i2,\n \t\t\t  InputIterator j1, InputIterator j2);\n+#else\n+  basic_string& replace(iterator i1, iterator i2,\n+\t\t\tconst_iterator j1, const_iterator j2)\n+    { return replace (i1, i2, j1, j2 - j1); }\n #endif\n \n private:\n@@ -351,14 +365,12 @@ class basic_string\n   const_iterator begin () const { return &(*rep ())[0]; }\n   const_iterator end () const { return &(*rep ())[length ()]; }\n \n-#if 0\n   reverse_iterator       rbegin() { return reverse_iterator (end ()); }\n   const_reverse_iterator rbegin() const\n     { return const_reverse_iterator (end ()); }\n   reverse_iterator       rend() { return reverse_iterator (begin ()); }\n   const_reverse_iterator rend() const\n-    { return const reverse_iterator (begin ()); }\n-#endif\n+    { return const_reverse_iterator (begin ()); }\n \n private:\n   void alloc (size_type size, bool save);"}]}