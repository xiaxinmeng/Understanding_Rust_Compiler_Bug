{"sha": "9ad17c6ae88b06ecebc040fe6715856fe3992ed4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFkMTdjNmFlODhiMDZlY2ViYzA0MGZlNjcxNTg1NmZlMzk5MmVkNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-10-08T20:49:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-10-08T20:49:44Z"}, "message": "re PR rtl-optimization/45903 (unnecessary load of 32/64bit variable when only 8 bits are needed)\n\n\tPR tree-optimization/45903\n\t* simplify-rtx.c (simplify_subreg): Optimize lowpart SUBREG\n\tof *SHIFTRT of MEM.\n\n\t* gcc.target/i386/pr45903.c: New test.\n\nFrom-SVN: r165202", "tree": {"sha": "5bfae10be447508294774cf904ad98435de2d19f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bfae10be447508294774cf904ad98435de2d19f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ad17c6ae88b06ecebc040fe6715856fe3992ed4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad17c6ae88b06ecebc040fe6715856fe3992ed4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ad17c6ae88b06ecebc040fe6715856fe3992ed4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad17c6ae88b06ecebc040fe6715856fe3992ed4/comments", "author": null, "committer": null, "parents": [{"sha": "509dd3804c49658b31dbdae676979e95e7ecd8cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509dd3804c49658b31dbdae676979e95e7ecd8cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/509dd3804c49658b31dbdae676979e95e7ecd8cb"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "5cb642a4b33d7416cc9096e276f40e8dee3b233d", "filename": "gcc/testsuite/gcc.target/i386/pr45903.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad17c6ae88b06ecebc040fe6715856fe3992ed4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45903.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad17c6ae88b06ecebc040fe6715856fe3992ed4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45903.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45903.c?ref=9ad17c6ae88b06ecebc040fe6715856fe3992ed4", "patch": "@@ -0,0 +1,44 @@\n+/* PR tree-optimization/45903 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+unsigned long long a, b;\n+unsigned char c;\n+\n+void\n+f1 (void)\n+{\n+  c = (a >> 8) + (b >> 8);\n+}\n+\n+void\n+f2 (void)\n+{\n+  c = (a >> 8) | (b >> 8);\n+}\n+\n+void\n+f3 (void)\n+{\n+  c = (a >> 16) ^ (b >> 56);\n+}\n+\n+unsigned char\n+f4 (void)\n+{\n+  return (a >> 48) + (b >> 40);\n+}\n+\n+unsigned char\n+f5 (void)\n+{\n+  return (a >> 32) | (b >> 16);\n+}\n+\n+unsigned char\n+f6 (void)\n+{\n+  return (a >> 24) ^ (b >> 32);\n+}\n+\n+/* { dg-final { scan-assembler-not \"shr\\[qdl\\]\" } } */"}]}