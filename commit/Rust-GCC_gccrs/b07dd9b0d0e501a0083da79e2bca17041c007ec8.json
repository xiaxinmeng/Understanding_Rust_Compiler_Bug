{"sha": "b07dd9b0d0e501a0083da79e2bca17041c007ec8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA3ZGQ5YjBkMGU1MDFhMDA4M2RhNzllMmJjYTE3MDQxYzAwN2VjOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-05T20:22:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-05T21:27:24Z"}, "message": "c++: -Wunused, constant, and generic lambda [PR96311]\n\nWe never called mark_use for a return value in a function with dependent\nreturn type.  In that situation we don't know if the use is as an rvalue or\nlvalue, but we can use mark_exp_read instead.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/96311\n\t* typeck.c (check_return_expr): Call mark_exp_read in dependent\n\tcase.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/96311\n\t* g++.dg/cpp1y/lambda-generic-Wunused.C: New test.", "tree": {"sha": "7743419cf93ae59b0356f81b9cfc70f04b95896f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7743419cf93ae59b0356f81b9cfc70f04b95896f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b07dd9b0d0e501a0083da79e2bca17041c007ec8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07dd9b0d0e501a0083da79e2bca17041c007ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b07dd9b0d0e501a0083da79e2bca17041c007ec8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07dd9b0d0e501a0083da79e2bca17041c007ec8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07f56824fd4da14a48030e698c8eb58de951c741", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07f56824fd4da14a48030e698c8eb58de951c741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07f56824fd4da14a48030e698c8eb58de951c741"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "11dee7d875396e6d45076fe1c2cd1a42b80575b2", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07dd9b0d0e501a0083da79e2bca17041c007ec8/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07dd9b0d0e501a0083da79e2bca17041c007ec8/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=b07dd9b0d0e501a0083da79e2bca17041c007ec8", "patch": "@@ -10215,6 +10215,9 @@ check_return_expr (tree retval, bool *no_warning)\n     dependent:\n       /* We should not have changed the return value.  */\n       gcc_assert (retval == saved_retval);\n+      /* We don't know if this is an lvalue or rvalue use, but\n+\t either way we can mark it as read.  */\n+      mark_exp_read (retval);\n       return retval;\n     }\n "}, {"sha": "b43cbe6b67567a17c77088f6d6f5e8b586e5981b", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-Wunused.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07dd9b0d0e501a0083da79e2bca17041c007ec8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-Wunused.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07dd9b0d0e501a0083da79e2bca17041c007ec8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-Wunused.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-Wunused.C?ref=b07dd9b0d0e501a0083da79e2bca17041c007ec8", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/96311\n+// { dg-do compile { target c++14 } }\n+// { dg-additional-options -Wunused }\n+\n+auto foo()\n+{\n+  constexpr int used = 0;\n+  return\n+    [](auto unused)\n+    {\n+      return used;\n+    };\n+}\n+\n+int main()\n+{\n+  foo()(42);\n+}"}]}