{"sha": "180684ebb290ed587f4727408ebcb72522428a27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgwNjg0ZWJiMjkwZWQ1ODdmNDcyNzQwOGViY2I3MjUyMjQyOGEyNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:53:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:53:25Z"}, "message": "Resync.\n\nFrom-SVN: r91897", "tree": {"sha": "8f71beff767993229bbb325dbff81d4d3c6160b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f71beff767993229bbb325dbff81d4d3c6160b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/180684ebb290ed587f4727408ebcb72522428a27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/180684ebb290ed587f4727408ebcb72522428a27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/180684ebb290ed587f4727408ebcb72522428a27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/180684ebb290ed587f4727408ebcb72522428a27/comments", "author": null, "committer": null, "parents": [{"sha": "a5b62485c35a3c9a8e20ffce49b99f12791238e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b62485c35a3c9a8e20ffce49b99f12791238e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b62485c35a3c9a8e20ffce49b99f12791238e1"}], "stats": {"total": 380, "additions": 380, "deletions": 0}, "files": [{"sha": "80718be87b8f5d6e903449d32baa08932121978e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 380, "deletions": 0, "changes": 380, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/180684ebb290ed587f4727408ebcb72522428a27/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/180684ebb290ed587f4727408ebcb72522428a27/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=180684ebb290ed587f4727408ebcb72522428a27", "patch": "@@ -1,3 +1,383 @@\n+2004-12-07  Ed Falis  <falis@adacore.com>\n+\n+\t* s-intman-vxworks.adb (Notify_Exception): removed useless check for\n+\tcurrent task being suspended.\n+\n+\t* init.c (__gnat_clear_exception): added to reset VxWorks exception\n+\tcount.\n+\t(__gnat_map_signal): removed test for current task being suspended.\n+\n+2004-12-07  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* a-exexpr.adb (Others_Value, All_Others_Value): Change initial values\n+\tfrom 16#BEEF# to 16#7FFF# to avoid exceeding Integer'Last on 16-bit\n+\ttargets (such as AAMP).\n+\n+2004-12-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* atree.adb (Visit_Itype): Create a new name for the generated itype,\n+\tbecause the back-end may otherwise treat it as a redefinition of the\n+\told symbol.\n+\n+2004-12-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* back_end.adb (Scan_Back_End_Switches): Accept --param.\n+\n+\t* lang-specs.h: Accept --param.\n+\n+2004-12-07  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Check_Mains, Switches_Of): Adapt to name changes in\n+\tpackage Prj (Current_Spec_Suffix => Ada_Spec_Suffix,\n+\tCurrent_Body_Suffix => Ada_Body_Suffix).\n+\tTake into account Externally_Built attribute.\n+\n+\t* clean.adb (In_Extension_Chain): Always return False when one of the\n+\tparameter is No_Project.\n+\t(Clean_Project): Adapt to changes in package Prj (Lang_Ada =>\n+\tAda_Language_Index).\n+\t(Gnatclean): Adapt to change in package Prj.Pars (no parameter\n+\tProcess_Languages for procedure Parse).\n+\n+\t* gnatcmd.adb (Carg_Switches): New table.\n+\t(GNATCmd): Put all switches following -cargs in the Carg_Switches table.\n+\tAdapt to name changes in package Prj (Current_Spec_Suffix =>\n+\tAda_Spec_Suffix, Current_Body_Suffix => Ada_Body_Suffix).\n+\n+\t* mlib-prj.adb: Adapt to changes in packages Prj and Prj.Com: type\n+\tHeader_Num and function Hash are now declared in package Prj,\n+\tnot Prj.Com.\n+\n+\t* prj.adb (Suffix_Of): New function.\n+\t(Set (Suffix)): New procedure.\n+\t(Hash): One function moved from Prj.Com\n+\t(Is_Present, Language_Processing_Data_Of): New functions\n+\t(Set): Two new procedures\n+\t(Add_Language_Name, Display_Language_Name): New procedures\n+\n+\t* prj.ads: (Suffix_Of): New function\n+\t(Set (Suffix)): New procedure\n+\tAdd several types and tables for multi-language support.\n+\t(Header_Num): Type moved from Prj.Com\n+\t(Hash): Two functions moved from Prj.Com\n+\t(Is_Present, Language_Processing_Data_Of): New functions\n+\t(Set): Two new procedures\n+\t(Add_Language_Name, Display_Language_Name): New procedures\n+\t(Naming): Component name changes:\n+\tCurrent_Spec_Suffix => Ada_Spec_Suffix,\n+\tCurrent_Body_Suffix => Ada_Body_Suffix. Add new components:\n+\tImpl_Suffixes, Supp_Suffixes.\n+\t(Project_Data): New components: Externally_Built, Supp_Languages,\n+\tFirst_Language_Processing, Supp_Language_Processing, Default_Linker,\n+\tDefault_Linker_Path.\n+\n+\t* prj-attr.adb: Add new attributes Ada_Roots and Externally_Built and\n+\tnew package Language_Processing with its attributes (Compiler_Driver,\n+\tCompiler_Kind, Dependency_Option, Compute_Dependency, Include_Option,\n+\tBinder_Driver, Default_Linker).\n+\n+\t* prj-com.ads, prj-com.adb (Hash): Function moved to package Prj.\n+\t(Header_Num): Type moved to package Prj\n+\n+\t* prj-env.adb: Adapt to name changes in package Prj\n+\t(Current_Spec_Suffix => Ada_Spec_Suffix,\n+\tCurrent_Body_Suffix => Ada_Body_Suffix).\n+\n+\t* prj-ext.adb: Add the default project dir (<prefix>/log/gnat) by\n+\tdefault to the project path, except the \"-\" is one of the directories\n+\tin env var ADA_PROJECT_PATH.\n+\t(Current_Project_Path): Global variable, replacing Project_Path\n+\tthat was in the body of Prj.Part.\n+\t(Project_Path): New function\n+\t(Set_Project_Path): New procedure\n+\tInitialize Current_Project_Path during elaboration of the package\n+\tRemove dependency on Prj.Com, no longer needed\n+\n+\t* prj-ext.ads (Project_Path): New function\n+\t(Set_Project_Path): New procedure\n+\n+\t* prj-nmsc.adb (Body_Suffix_Of): New function. Returns .<lang> when no\n+\tsuffix is defined for language <lang>.\n+\t(Find_Sources, Record_Other_Sources): Use Body_Suffix_Of, instead of\n+\taccessing directly the components of Naming.\n+\t(Look_For_Sources): Use Set (Suffix) to set the suffix of a language.\n+\tReorganise of this package.\n+\tBreak procedure Check in several procedures.\n+\n+\t* prj-nmsc.ads: Replace all procedures (Ada_Check,\n+\tOther_Languages_Check and Language_Independent_Check) with a single\n+\tprocedure Check.\n+\n+\t* prj-pars.ads, prj-pars.adb (Parse): Remove parameter\n+\tProcess_Languages, no longer needed.\n+\n+\t* prj-part.adb (Project_Path): Move to the body of Prj.Ext as\n+\tCurrent_Project_Path.\n+\tRemove elaboration code, moved to the body of Prj.Ext\n+\tUse new function Prj.Ext.Project_Path instead of old variable\n+\tProject_Path.\n+\t(Post_Parse_Context_Clause): Get Resolved_Path as a case-sensitive path.\n+\tWhen comparing with project paths on the stack, first put the resolved\n+\tpath in canonical case.\n+\t(Parse_Single_Project): Set the path name of the project file in the\n+\ttree to the normalized path.\n+\n+\t* prj-proc.ads, prj-proc.adb (Check, Recursive_Check, Process): Remove\n+\tparameter Process_Languages, no longer needed.\n+\t(Recursive_Check): Call Prj.Nmsc.Check, instead of Ada_Check and\n+\tOther_Languages_Check.\n+\n+\t* prj-tree.ads (Project_Name_And_Node): New component Canonical_Path\n+\tto store the resolved canonical path of the project file.\n+\tRemove dependency to Prj.Com, no longer needed\n+\n+\t* prj-util.adb: Adapt to name changes in package Prj\n+\t(Current_Spec_Suffix => Ada_Spec_Suffix, Current_Body_Suffix =>\n+\tAda_Body_Suffix).\n+\n+\t* snames.ads, snames.adb: New standard names: Ada_Roots, Binder_Driver,\n+\tCompiler_Driver, Compiler_Kind, Compute_Dependency, Default_Linker,\n+\tExternally_Built, Include_Option, Language_Processing.\n+\n+\t* makegpr.adb: Numerous changes due to changes in packages\n+\tPrj and Prj.Nmsc.\n+\n+\t* gnatls.adb: Add the default project dir (<prefix>/log/gnat) by\n+\tdefault to the project path, except whe \"-\" is one of the directories\n+\tin env var ADA_PROJECT_PATH.\n+\t(Gnatls): In verbose mode, add the new section \"Project Search Path:\"\n+\n+2004-12-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* debug.adb: Document that -gnatdA automatically sets -gnatR3m\n+\n+\t* gnat1drv.adb (Gnat1drv): If debug flag A set, then automatically\n+\tset -gnatR3m mode.\n+\n+\t* repinfo.adb (List_Rep_Info): Remove special handling of -gnatdA\n+\tflag. No longer needed now that we handle this in gnat1drv.adb.\n+\n+\t* repinfo.ads: Minor reformatting\n+\n+2004-12-07  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\t    Olivier Hainque  <hainque@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl.c (maybe_pad_type): Use TYPE_SIZE_UNIT of the input type for\n+\tTYPE_SIZE_UNIT of result type if SIZE is not specified.\n+\t(make_aligning_type): Pass -1 as ADDRESSABLE to prevent the creation\n+\tof a bitfield, which we know is useless and causes trouble because of\n+\talignment implications.\n+\n+\t* utils.c (create_var_decl): Set DECL_COMMON again on targets without\n+\tBSS sections.\n+\t(process_attributes): Clear DECL_COMMON again when a section attribute\n+\tis present.\n+\t(finish_record_type): Independently track if RECORD_TYPE has SIZE and/or\n+\tSIZE_UNIT already set and use to compute final SIZE and SIZE_UNIT.\n+\t(create_field_decl): Special case ADDRESSABLE negative to mean\n+\t\"no bitfield creation\", to be used by make_aligning_type. Don't\n+\trestrict bitfield creation to !ADDRESSABLE any more, as some BLKmode\n+\tfields claimed addressable still have to be bitfields. Use\n+\tvalue_factor_p instead of a raw binop construction to check for the\n+\tposition's alignment.\n+\n+2004-12-07  Geert Bosch  <bosch@adacore.com>\n+\n+\t* eval_fat.adb: Revert previous change.\n+\n+2004-12-07  Thomas Quinot  <quinot@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Indexed_Component): For an indexed component\n+\twith an implicit dereference as its prefix, use\n+\tInsert_Explicit_Dereference instead of merely rewriting the prefix into\n+\tan explicit dereference. This ensures that a reference to the original\n+\tprefix is generated, if appropriate.\n+\n+\t* sem_util.adb (Insert_Explicit_Dereference): When an implicit\n+\tdereference is rewritten to an explicit one, generate a reference to\n+\tthe entity denoted by its prefix using the original prefix node, so\n+\tthe dereference can be properly recorded as a read of the denoted\n+\taccess value, if appropriate.\n+\n+\t* sem_warn.adb (Output_Unreferenced_Messages): Do not abstain from\n+\temitting 'assigned but never read' warning on a variable on the basis\n+\tthat it has an access type.\n+\t(Check_References): Emit unreferenced warning when the scope is a\n+\tsubprogram body.\n+\n+2004-12-07  Robert Dewar  <dewar@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Call): Add comment on handling of back end\n+\tintrinsic\n+\n+\t* exp_intr.adb (Expand_Intrinsic_Call): Ignore unrecognized intrinsic,\n+\tleaving call unchanged.\n+\tThis deals with the case where the pragma Import specified\n+\tan external name, to be handled by the back end.\n+\n+\t* sem_prag.adb (Process_Import_Or_Interface): Do not check validity of\n+\tsubprogram which is Imported with convention Intrinsic if an\n+\tExternal_Name argument is specified.\n+\t(Process_Import_Or_Interface): Properly diagnose link name argument.\n+\t(Inlining_Not_Possible): New name for Cannot_Inline, to avoid confusion\n+\twith Sem_Ch6.Cannot_Inline.\n+\t(Process_Inline): Provide separate warning for inapplicable inline\n+\tpragma.\n+\t(Cannot_Inline): Reject subprograms that have an at_end handler, so that\n+\ttreatment is uniform on different targets.\n+\n+2004-12-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch7.adb (Expand_Cleanup_Actions): If statement sequence of\n+\tconstruct is rewritten, preserve end label to permit source navigation.\n+\n+2004-12-07  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb (Specific_Build_General_Calling_Stubs,\n+\tSpecific_Build_Stub_Target): New subprograms.\n+\t(Build_Subprogram_Calling_Stubs): Make this procedure independent from\n+\tthe PCS implementation used, using the above PCS-customized subprograms.\n+\tMinor reformatting.\n+\t(PolyORB_Support.Helpers): New subunit containing supporting subprograms\n+\tfor generation of DSA code targeted to the PolyORB PCS.\n+\t(Add_Stub_Type): Rewrite to isolate the parts that are specific to one\n+\timplementation of the partition communication subsystem in ancillary\n+\tsubprograms.\n+\t(Specific_Build_Stub_Type, GARLIC_Support.Build_Stub_Type,\n+\tPolyORB_Support.Build_Stub_Type): New subrograms containing the\n+\tPCS-specific part of Add_Stub_Type.\n+\t(Insert_Partition_Check): Use runtime library function to perform\n+\tE.4(19) check.\n+\n+        * rtsfind.ads: New entity System.PolyORB_Interface.Make_Ref\n+        (RE_Same_Partition): New entity, from s-parint.\n+\n+        * s-parint.ads, s-parint.adb (Same_Partition): New subprogram.\n+\n+2004-12-07  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* gnatmem.adb, gnatname.adb, gnatsym.adb, gprcmd.adb, vms_conv.adb:\n+\tOutput the copyright message on a separate line from the version\n+\tmessage.\n+\n+2004-12-07  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* g-os_lib.adb (Spawn): Explicitly initialize Saved_Error to avoid a\n+\tcompile-time warning.\n+\n+2004-12-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-regpat.adb: (Match): Change a misuse of or to or else\n+\n+2004-12-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* lib-xref.adb: \n+\t(Generate_Reference): Handle properly a reference to an entry formal,\n+\t when an accept statement has a pragma Unreferenced for it.\n+\n+\t* sem_ch9.adb (Analyze_Accept_Statement): Reset the Is_Referenced flag\n+\tand the Has_Pragma_Unreferenced flag for each formal before analyzing\n+\tthe body, to ensure that warnings are properly emitted for each accept\n+\tstatement of a given task entry.\n+\n+2004-12-07  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* Makefile.in: Add support for foreign threads on VMS.\n+\n+2004-12-07  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* misc.c (gnat_types_compatible_p, LANG_HOOKS_TYPES_COMPATIBLE_P):\n+\tRemove.\n+\t(LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS): New.\n+\n+\t* adaint.h: (__gnat_dup, __gnat_dup2): Add missing decls.\n+\n+\t* trans.c (Exception_Handler_to_gnu_sjlj): Also handle renamed\n+\texception.\n+\t(call_to_gnu): Convert to actual DECL_ARG_TYPE, not variant of it.\n+\n+2004-12-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* nlists.adb (Prepend_Debug): Remove parameters and nest within\n+\tPrepend.\n+\t(Remove_Next_Debug): Same fix\n+\n+\t* nlists.ads: Correct bad comments for Prev and Prev_Non_Pragma (we do\n+\tmaintain back pointers now, though we did not used to, and comments\n+\twere out of date).\n+\t(Prepend): Remove pragma Inline.\n+\t(Remove_Next): Same cleanup\n+\n+2004-12-07  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch4.adb (Process_Implicit_Dereference_Prefix): New subprogram\n+\tused to record an implicit dereference as a read operation on its\n+\tprefix when operating under -gnatc. Necessary to avoid spurious\n+\t'variable assigned but never read' warnings in that mode.\n+\t(Process_Indexed_Component, Analyze_Selected_Component): When the prefix\n+\tis a non-overloaded implicit dereference, call the above subprogram to\n+\tensure proper recording of references.\n+\n+2004-12-07  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch5.adb (One_Bound): Remove call to Resolve, as the bound needs\n+\tto be resolved later as part of Analyze_Iteration_Scheme's call to\n+\tMake_Index.\n+\n+2004-12-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Find_Type): If node is a reference to 'Base and the\n+\tprefix is not a scalar type, place error message on prefix, not on\n+\ttype entity.\n+\n+2004-12-07  Bernard Banner  <banner@adacore.com>\n+\n+\t* vxaddr2line.adb: Add support for x86 vxworks\n+\n+2004-12-07  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.ads (Get_Host_By_Address, Get_Host_By_Name): Clarify\n+\tdocumentation of the behaviour of these functions when passed an IP\n+\taddress that has no record in the system hosts database and no reverse\n+\trecord in the DNS.\n+\n+\t* cstand.adb, a-tags.ads: Fix typos in comment.\n+\n+2004-12-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch2.adb, exp_ch3.adb, exp_ch5.adb, exp_ch8.adb,\n+\texp_ch9.adb, exp_pakd.adb, interfac.ads, sem_ch6.adb,\n+\tsem_ch7.adb, sem_ch10.adb, sem_ch13.adb, sem_ch3.adb,\n+\ts-poosiz.ads: Minor reformatting\n+\n+\t* make.adb: Minor reformatting\n+\tAdd some ??? comments asking for more comments\n+\n+\t* s-poosiz.adb: Minor reformatting\n+\tAdd comments on alignment requirement\n+\n+\t* sinfo.ads: Remove obsolete comment and fix typo.\n+\n+2004-12-07  Vincent Celier  <celier@adacore.com>\n+\t    Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi: Update the section \"The GNAT Driver and Project\n+\tFiles\" with the new tool and package names.\n+\tReformatting to suppress most of the warnings for line too long\n+\tDocument the new section \"Project Search Path:\" in the output of\n+\tgnatls -v.\n+\tAdd gnatmetric section\n+\n+2004-12-07  Vincent Celier  <celier@adacore.com>\n+\n+\t* vms_data.ads: Correct GNAT METRIC qualifiers: -I-, -Idir and\n+\t-gnatec= are not direct switches of gnatmetric. Changed -eis to -eps\n+\tand -eit to -ept. Added qualifier\n+\t/ELEMENT_METRICS=CONSTRUCT_NESTING_MAX for new switch -ec.\n+\n 2004-11-27  Andreas Schwab  <schwab@suse.de>\n \n \t* Make-lang.in (ada/trans.o): Depend on $(EXPR_H)."}]}