{"sha": "fba7c56424a5ffc8e098c7b4638c19f2545ef2be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJhN2M1NjQyNGE1ZmZjOGUwOThjN2I0NjM4YzE5ZjI1NDVlZjJiZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-02-28T13:14:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-02-28T13:14:23Z"}, "message": "re PR tree-optimization/60280 (gcc.target/arm/ivopts.c and gcc.target/arm/ivopts-2.c failed caused by preserving loop structure.)\n\n2014-02-28  Richard Biener  <rguenther@suse.de>\n\n\tPR target/60280\n\t* tree-cfgcleanup.c (tree_forwarder_block_p): Restrict\n\tprevious fix and only allow to remove trivial pre-headers\n\tand latches.  Also honor LOOPS_MAY_HAVE_MULTIPLE_LATCHES.\n\t(remove_forwarder_block): Properly update the latch of\n\ta loop.\n\nFrom-SVN: r208222", "tree": {"sha": "0023e9b450aa8229d6be88c990e0dbfb8631eb19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0023e9b450aa8229d6be88c990e0dbfb8631eb19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fba7c56424a5ffc8e098c7b4638c19f2545ef2be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba7c56424a5ffc8e098c7b4638c19f2545ef2be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba7c56424a5ffc8e098c7b4638c19f2545ef2be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba7c56424a5ffc8e098c7b4638c19f2545ef2be/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0618dee54e14e37e88ab4cf47e7372da8f333719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0618dee54e14e37e88ab4cf47e7372da8f333719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0618dee54e14e37e88ab4cf47e7372da8f333719"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "3d33ce004e9b0fe56e183a72df765b03b6553fbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba7c56424a5ffc8e098c7b4638c19f2545ef2be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba7c56424a5ffc8e098c7b4638c19f2545ef2be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fba7c56424a5ffc8e098c7b4638c19f2545ef2be", "patch": "@@ -1,3 +1,12 @@\n+2014-02-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR target/60280\n+\t* tree-cfgcleanup.c (tree_forwarder_block_p): Restrict\n+\tprevious fix and only allow to remove trivial pre-headers\n+\tand latches.  Also honor LOOPS_MAY_HAVE_MULTIPLE_LATCHES.\n+\t(remove_forwarder_block): Properly update the latch of\n+\ta loop.\n+\n 2014-02-28  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR debug/59992"}, {"sha": "926d3000dc51884125c7cad0a885557758550551", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba7c56424a5ffc8e098c7b4638c19f2545ef2be/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba7c56424a5ffc8e098c7b4638c19f2545ef2be/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=fba7c56424a5ffc8e098c7b4638c19f2545ef2be", "patch": "@@ -316,13 +316,22 @@ tree_forwarder_block_p (basic_block bb, bool phi_wanted)\n       /* Protect loop preheaders and latches if requested.  */\n       if (dest->loop_father->header == dest)\n \t{\n-\t  if (loops_state_satisfies_p (LOOPS_HAVE_PREHEADERS)\n-\t      && bb->loop_father->header != dest)\n-\t    return false;\n-\n-\t  if (loops_state_satisfies_p (LOOPS_HAVE_SIMPLE_LATCHES)\n-\t      && bb->loop_father->header == dest)\n-\t    return false;\n+\t  if (bb->loop_father == dest->loop_father)\n+\t    {\n+\t      if (loops_state_satisfies_p (LOOPS_HAVE_SIMPLE_LATCHES))\n+\t\treturn false;\n+\t      /* If bb doesn't have a single predecessor we'd make this\n+\t\t loop have multiple latches.  Don't do that if that\n+\t\t would in turn require disambiguating them.  */\n+\t      return (single_pred_p (bb)\n+\t\t      || loops_state_satisfies_p\n+\t\t      \t   (LOOPS_MAY_HAVE_MULTIPLE_LATCHES));\n+\t    }\n+\t  else if (bb->loop_father == loop_outer (dest->loop_father))\n+\t    return !loops_state_satisfies_p (LOOPS_HAVE_PREHEADERS);\n+\t  /* Always preserve other edges into loop headers that are\n+\t     not simple latches or preheaders.  */\n+\t  return false;\n \t}\n     }\n \n@@ -417,6 +426,10 @@ remove_forwarder_block (basic_block bb)\n \n   can_move_debug_stmts = MAY_HAVE_DEBUG_STMTS && single_pred_p (dest);\n \n+  basic_block pred = NULL;\n+  if (single_pred_p (bb))\n+    pred = single_pred (bb);\n+\n   /* Redirect the edges.  */\n   for (ei = ei_start (bb->preds); (e = ei_safe_edge (ei)); )\n     {\n@@ -510,7 +523,7 @@ remove_forwarder_block (basic_block bb)\n   /* Adjust latch infomation of BB's parent loop as otherwise\n      the cfg hook has a hard time not to kill the loop.  */\n   if (current_loops && bb->loop_father->latch == bb)\n-    bb->loop_father->latch = dest;\n+    bb->loop_father->latch = pred;\n \n   /* And kill the forwarder block.  */\n   delete_basic_block (bb);"}]}