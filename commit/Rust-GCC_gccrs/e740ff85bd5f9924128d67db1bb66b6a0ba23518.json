{"sha": "e740ff85bd5f9924128d67db1bb66b6a0ba23518", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc0MGZmODViZDVmOTkyNDEyOGQ2N2RiMWJiNjZiNmEwYmEyMzUxOA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2018-05-28T08:52:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-28T08:52:53Z"}, "message": "[Ada] Further evaluation of type bounds in GNATprove mode\n\nSome static bounds of types are not recognized and evaluated as such in the\nsemantic analysis phase of the frontend, which leads to incomplete information\nin GNATprove. Fix that in the GNATprove mode only, as this is not needed when\nfull expansion is used.\n\nThere is no impact on compilation.\n\n2018-05-28  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Range): Re-resolve the low bound of a range in\n\tGNATprove mode, as the order of resolution (low then high) means that\n\tall the information is not available when resolving the low bound the\n\tfirst time.\n\nFrom-SVN: r260816", "tree": {"sha": "7f0c72a8f67cb40e274d883fd8933377aee44529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f0c72a8f67cb40e274d883fd8933377aee44529"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e740ff85bd5f9924128d67db1bb66b6a0ba23518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e740ff85bd5f9924128d67db1bb66b6a0ba23518", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e740ff85bd5f9924128d67db1bb66b6a0ba23518", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e740ff85bd5f9924128d67db1bb66b6a0ba23518/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7672ab42ccdedf12b8bab23309e86e7a393e9d99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7672ab42ccdedf12b8bab23309e86e7a393e9d99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7672ab42ccdedf12b8bab23309e86e7a393e9d99"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "b1ccf573b06fdbe05591465615330bbeeed7df87", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e740ff85bd5f9924128d67db1bb66b6a0ba23518/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e740ff85bd5f9924128d67db1bb66b6a0ba23518/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e740ff85bd5f9924128d67db1bb66b6a0ba23518", "patch": "@@ -1,3 +1,10 @@\n+2018-05-28  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Range): Re-resolve the low bound of a range in\n+\tGNATprove mode, as the order of resolution (low then high) means that\n+\tall the information is not available when resolving the low bound the\n+\tfirst time.\n+\n 2018-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* repinfo.adb (List_Array_Info): Start with an explicit blank line and"}, {"sha": "f0b77c1ba92094abf243f42e5f73477806ac8f1d", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e740ff85bd5f9924128d67db1bb66b6a0ba23518/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e740ff85bd5f9924128d67db1bb66b6a0ba23518/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=e740ff85bd5f9924128d67db1bb66b6a0ba23518", "patch": "@@ -9800,6 +9800,17 @@ package body Sem_Res is\n       Resolve (L, Typ);\n       Resolve (H, Base_Type (Typ));\n \n+      --  Reanalyze the lower bound after both bounds have been analyzed, so\n+      --  that the range is known to be static or not by now. This may trigger\n+      --  more compile-time evaluation, which is useful for static analysis\n+      --  with GNATprove. This is not needed for compilation or static analysis\n+      --  with CodePeer, as full expansion does that evaluation then.\n+\n+      if GNATprove_Mode then\n+         Set_Analyzed (L, False);\n+         Resolve (L, Typ);\n+      end if;\n+\n       --  Check for inappropriate range on unordered enumeration type\n \n       if Bad_Unordered_Enumeration_Reference (N, Typ)"}]}