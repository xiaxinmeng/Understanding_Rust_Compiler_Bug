{"sha": "8ad8655c6e8f1d2eaf6ed277a58623f06da27598", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFkODY1NWM2ZThmMWQyZWFmNmVkMjc3YTU4NjIzZjA2ZGEyNzU5OA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-03-08T01:05:01Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-03-08T01:05:01Z"}, "message": "re PR libstdc++/52433 ([C++11] debug mode iterators need to move)\n\n\tPR libstdc++/52433\n\t* include/debug/safe_iterator.h (_Safe_iterator): Add debug checks\n\tto move constructor and move assignment operator.\n\nFrom-SVN: r185089", "tree": {"sha": "9078460c3e36ce7ca7f882de86f456efa2ce9bc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9078460c3e36ce7ca7f882de86f456efa2ce9bc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ad8655c6e8f1d2eaf6ed277a58623f06da27598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad8655c6e8f1d2eaf6ed277a58623f06da27598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad8655c6e8f1d2eaf6ed277a58623f06da27598", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad8655c6e8f1d2eaf6ed277a58623f06da27598/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79bb38d3b5867cb4577b6acbfe7954288a54d28b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79bb38d3b5867cb4577b6acbfe7954288a54d28b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79bb38d3b5867cb4577b6acbfe7954288a54d28b"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "ce28ef149813dc34eda5fc0632a31a6a7b30ea7f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad8655c6e8f1d2eaf6ed277a58623f06da27598/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad8655c6e8f1d2eaf6ed277a58623f06da27598/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8ad8655c6e8f1d2eaf6ed277a58623f06da27598", "patch": "@@ -1,3 +1,9 @@\n+2012-03-08  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/52433\n+\t* include/debug/safe_iterator.h (_Safe_iterator): Add debug checks\n+\tto move constructor and move assignment operator.\n+\n 2012-03-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/stl_algobase.h (iter_swap): In C++11 mode simply"}, {"sha": "6bb3cd24ed2700ea4b0b12cba37f14fb079d164d", "filename": "libstdc++-v3/include/debug/safe_iterator.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad8655c6e8f1d2eaf6ed277a58623f06da27598/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad8655c6e8f1d2eaf6ed277a58623f06da27598/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h?ref=8ad8655c6e8f1d2eaf6ed277a58623f06da27598", "patch": "@@ -1,6 +1,6 @@\n // Safe iterator implementation  -*- C++ -*-\n \n-// Copyright (C) 2003, 2004, 2005, 2006, 2009, 2010, 2011\n+// Copyright (C) 2003, 2004, 2005, 2006, 2009, 2010, 2011, 2012\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -176,6 +176,11 @@ namespace __gnu_debug\n        */\n       _Safe_iterator(_Safe_iterator&& __x) : _M_current()\n       {\n+\t_GLIBCXX_DEBUG_VERIFY(!__x._M_singular()\n+\t\t\t      || __x._M_current == _Iterator(),\n+\t\t\t      _M_message(__msg_init_copy_singular)\n+\t\t\t      ._M_iterator(*this, \"this\")\n+\t\t\t      ._M_iterator(__x, \"other\"));\n \tstd::swap(_M_current, __x._M_current);\n \tthis->_M_attach(__x._M_sequence);\n \t__x._M_detach();\n@@ -229,6 +234,11 @@ namespace __gnu_debug\n       _Safe_iterator&\n       operator=(_Safe_iterator&& __x)\n       {\n+\t_GLIBCXX_DEBUG_VERIFY(!__x._M_singular()\n+\t\t\t      || __x._M_current == _Iterator(),\n+\t\t\t      _M_message(__msg_copy_singular)\n+\t\t\t      ._M_iterator(*this, \"this\")\n+\t\t\t      ._M_iterator(__x, \"other\"));\n \t_M_current = __x._M_current;\n \t_M_attach(__x._M_sequence);\n \t__x._M_detach();"}]}