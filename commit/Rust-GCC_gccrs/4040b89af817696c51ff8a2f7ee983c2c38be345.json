{"sha": "4040b89af817696c51ff8a2f7ee983c2c38be345", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA0MGI4OWFmODE3Njk2YzUxZmY4YTJmN2VlOTgzYzJjMzhiZTM0NQ==", "commit": {"author": {"name": "Matthew Wahab", "email": "matthew.wahab@arm.com", "date": "2016-09-23T08:45:16Z"}, "committer": {"name": "Matthew Wahab", "email": "mwahab@gcc.gnu.org", "date": "2016-09-23T08:45:16Z"}, "message": "[PATCH 1/17][ARM] Add ARMv8.2-A command line option and profile.\n\n2016-09-23  Matthew Wahab  <matthew.wahab@arm.com>\n\n\t* config/arm/arm-arches.def (\"armv8.1-a\"): Add FL_CRC32.\n\t(\"armv8.2-a\"): New.\n\t(\"armv8.2-a+fp16\"): New.\n\t* config/arm/arm-protos.h (FL2_ARCH8_2): New.\n\t(FL2_FP16INST): New.\n\t(FL2_FOR_ARCH8_2A): New.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm.c (arm_arch8_2): New.\n\t(arm_fp16_inst): New.\n\t(arm_option_override): Set arm_arch8_2 and arm_fp16_inst.  Check\n\tfor incompatible fp16-format settings.\n\t* config/arm/arm.h (TARGET_VFP_FP16INST): New.\n\t(TARGET_NEON_FP16INST): New.\n\t(arm_arch8_2): Declare.\n\t(arm_fp16_inst): Declare.\n\t* config/arm/bpabi.h (BE8_LINK_SPEC): Add entries for\n\tmarch=armv8.2-a and march=armv8.2-a+fp16.\n\t* config/arm/t-aprofile (Arch Matches): Add entries for armv8.2-a\n\tand armv8.2-a+fp16.\n\t* doc/invoke.texi (ARM Options): Add \"-march=armv8.1-a\",\n\t\"-march=armv8.2-a\" and \"-march=armv8.2-a+fp16\".\n\nFrom-SVN: r240398", "tree": {"sha": "b871352b73cc4b16a25478ccc01a7e6479b7cc8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b871352b73cc4b16a25478ccc01a7e6479b7cc8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4040b89af817696c51ff8a2f7ee983c2c38be345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4040b89af817696c51ff8a2f7ee983c2c38be345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4040b89af817696c51ff8a2f7ee983c2c38be345", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4040b89af817696c51ff8a2f7ee983c2c38be345/comments", "author": null, "committer": null, "parents": [{"sha": "69ec2113432a5aa295a3a345df48b03407798292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69ec2113432a5aa295a3a345df48b03407798292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69ec2113432a5aa295a3a345df48b03407798292"}], "stats": {"total": 102, "additions": 95, "deletions": 7}, "files": [{"sha": "a18b196090c8cf265f512cbdd001a4ade74f2840", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4040b89af817696c51ff8a2f7ee983c2c38be345", "patch": "@@ -1,3 +1,27 @@\n+2016-09-23  Matthew Wahab  <matthew.wahab@arm.com>\n+\n+\t* config/arm/arm-arches.def (\"armv8.1-a\"): Add FL_CRC32.\n+\t(\"armv8.2-a\"): New.\n+\t(\"armv8.2-a+fp16\"): New.\n+\t* config/arm/arm-protos.h (FL2_ARCH8_2): New.\n+\t(FL2_FP16INST): New.\n+\t(FL2_FOR_ARCH8_2A): New.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm.c (arm_arch8_2): New.\n+\t(arm_fp16_inst): New.\n+\t(arm_option_override): Set arm_arch8_2 and arm_fp16_inst.  Check\n+\tfor incompatible fp16-format settings.\n+\t* config/arm/arm.h (TARGET_VFP_FP16INST): New.\n+\t(TARGET_NEON_FP16INST): New.\n+\t(arm_arch8_2): Declare.\n+\t(arm_fp16_inst): Declare.\n+\t* config/arm/bpabi.h (BE8_LINK_SPEC): Add entries for\n+\tmarch=armv8.2-a and march=armv8.2-a+fp16.\n+\t* config/arm/t-aprofile (Arch Matches): Add entries for armv8.2-a\n+\tand armv8.2-a+fp16.\n+\t* doc/invoke.texi (ARM Options): Add \"-march=armv8.1-a\",\n+\t\"-march=armv8.2-a\" and \"-march=armv8.2-a+fp16\".\n+\n 2016-09-23  Martin Liska  <mliska@suse.cz>\n \n \t* doc/extend.texi: Remove fused-madd from i386 target"}, {"sha": "4b196a7d1188de5eca028e5c2597bbc20835201f", "filename": "gcc/config/arm/arm-arches.def", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Farm-arches.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Farm-arches.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-arches.def?ref=4040b89af817696c51ff8a2f7ee983c2c38be345", "patch": "@@ -58,10 +58,17 @@ ARM_ARCH(\"armv7e-m\", cortexm4,  7EM,\tARM_FSET_MAKE_CPU1 (FL_CO_PROC |\t      FL_F\n ARM_ARCH(\"armv8-a\", cortexa53,  8A,\tARM_FSET_MAKE_CPU1 (FL_CO_PROC |             FL_FOR_ARCH8A))\n ARM_ARCH(\"armv8-a+crc\",cortexa53, 8A,   ARM_FSET_MAKE_CPU1 (FL_CO_PROC | FL_CRC32  | FL_FOR_ARCH8A))\n ARM_ARCH(\"armv8.1-a\", cortexa53,  8A,\n-\t  ARM_FSET_MAKE (FL_CO_PROC | FL_FOR_ARCH8A,  FL2_FOR_ARCH8_1A))\n+\t  ARM_FSET_MAKE (FL_CO_PROC | FL_CRC32 | FL_FOR_ARCH8A,\n+\t\t\t FL2_FOR_ARCH8_1A))\n ARM_ARCH(\"armv8.1-a+crc\",cortexa53, 8A,\n \t  ARM_FSET_MAKE (FL_CO_PROC | FL_CRC32 | FL_FOR_ARCH8A,\n \t\t\t FL2_FOR_ARCH8_1A))\n+ARM_ARCH (\"armv8.2-a\", cortexa53,  8A,\n+\t  ARM_FSET_MAKE (FL_CO_PROC | FL_CRC32 | FL_FOR_ARCH8A,\n+\t\t\t FL2_FOR_ARCH8_2A))\n+ARM_ARCH (\"armv8.2-a+fp16\", cortexa53,  8A,\n+\t  ARM_FSET_MAKE (FL_CO_PROC | FL_CRC32 | FL_FOR_ARCH8A,\n+\t\t\t FL2_FOR_ARCH8_2A | FL2_FP16INST))\n ARM_ARCH(\"armv8-m.base\", cortexm0, 8M_BASE,\n \t ARM_FSET_MAKE_CPU1 (\t\t\t      FL_FOR_ARCH8M_BASE))\n ARM_ARCH(\"armv8-m.main\", cortexm7, 8M_MAIN,\n@@ -70,4 +77,3 @@ ARM_ARCH(\"armv8-m.main+dsp\", cortexm7, 8M_MAIN,\n \t ARM_FSET_MAKE_CPU1(FL_CO_PROC | FL_ARCH7EM | FL_FOR_ARCH8M_MAIN))\n ARM_ARCH(\"iwmmxt\",  iwmmxt,     5TE,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_STRONG | FL_FOR_ARCH5TE | FL_XSCALE | FL_IWMMXT))\n ARM_ARCH(\"iwmmxt2\", iwmmxt2,    5TE,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_STRONG | FL_FOR_ARCH5TE | FL_XSCALE | FL_IWMMXT | FL_IWMMXT2))\n-"}, {"sha": "fd8b6d106d13faebedf7a3539d30159c14f061c6", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=4040b89af817696c51ff8a2f7ee983c2c38be345", "patch": "@@ -393,6 +393,9 @@ extern bool arm_is_constant_pool_ref (rtx);\n #define FL_ARCH6KZ    (1 << 31)       /* ARMv6KZ architecture.  */\n \n #define FL2_ARCH8_1   (1 << 0)\t      /* Architecture 8.1.  */\n+#define FL2_ARCH8_2   (1 << 1)\t      /* Architecture 8.2.  */\n+#define FL2_FP16INST  (1 << 2)\t      /* FP16 Instructions for ARMv8.2 and\n+\t\t\t\t\t later.  */\n \n /* Flags that only effect tuning, not available instructions.  */\n #define FL_TUNE\t\t(FL_WBUF | FL_VFPV2 | FL_STRONG | FL_LDSCHED \\\n@@ -424,6 +427,7 @@ extern bool arm_is_constant_pool_ref (rtx);\n #define FL_FOR_ARCH7EM\t\t(FL_FOR_ARCH7M | FL_ARCH7EM)\n #define FL_FOR_ARCH8A\t\t(FL_FOR_ARCH7VE | FL_ARCH8)\n #define FL2_FOR_ARCH8_1A\tFL2_ARCH8_1\n+#define FL2_FOR_ARCH8_2A\t(FL2_FOR_ARCH8_1A | FL2_ARCH8_2)\n #define FL_FOR_ARCH8M_BASE\t(FL_FOR_ARCH6M | FL_ARCH8 | FL_THUMB_DIV)\n #define FL_FOR_ARCH8M_MAIN\t(FL_FOR_ARCH7M | FL_ARCH8)\n "}, {"sha": "ee9e3bb7ec57e0e8f2f15b83442711b9faf82d20", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=4040b89af817696c51ff8a2f7ee983c2c38be345", "patch": "@@ -437,19 +437,25 @@ EnumValue\n Enum(arm_arch) String(armv8.1-a+crc) Value(28)\n \n EnumValue\n-Enum(arm_arch) String(armv8-m.base) Value(29)\n+Enum(arm_arch) String(armv8.2-a) Value(29)\n \n EnumValue\n-Enum(arm_arch) String(armv8-m.main) Value(30)\n+Enum(arm_arch) String(armv8.2-a+fp16) Value(30)\n \n EnumValue\n-Enum(arm_arch) String(armv8-m.main+dsp) Value(31)\n+Enum(arm_arch) String(armv8-m.base) Value(31)\n \n EnumValue\n-Enum(arm_arch) String(iwmmxt) Value(32)\n+Enum(arm_arch) String(armv8-m.main) Value(32)\n \n EnumValue\n-Enum(arm_arch) String(iwmmxt2) Value(33)\n+Enum(arm_arch) String(armv8-m.main+dsp) Value(33)\n+\n+EnumValue\n+Enum(arm_arch) String(iwmmxt) Value(34)\n+\n+EnumValue\n+Enum(arm_arch) String(iwmmxt2) Value(35)\n \n Enum\n Name(arm_fpu) Type(int)"}, {"sha": "664c5820257e3b77d17347abcee8aa6ecb6ec424", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=4040b89af817696c51ff8a2f7ee983c2c38be345", "patch": "@@ -823,6 +823,13 @@ int arm_arch8 = 0;\n /* Nonzero if this chip supports the ARMv8.1 extensions.  */\n int arm_arch8_1 = 0;\n \n+/* Nonzero if this chip supports the ARM Architecture 8.2 extensions.  */\n+int arm_arch8_2 = 0;\n+\n+/* Nonzero if this chip supports the FP16 instructions extension of ARM\n+   Architecture 8.2.  */\n+int arm_fp16_inst = 0;\n+\n /* Nonzero if this chip can benefit from load scheduling.  */\n int arm_ld_sched = 0;\n \n@@ -3232,6 +3239,7 @@ arm_option_override (void)\n   arm_arch7em = ARM_FSET_HAS_CPU1 (insn_flags, FL_ARCH7EM);\n   arm_arch8 = ARM_FSET_HAS_CPU1 (insn_flags, FL_ARCH8);\n   arm_arch8_1 = ARM_FSET_HAS_CPU2 (insn_flags, FL2_ARCH8_1);\n+  arm_arch8_2 = ARM_FSET_HAS_CPU2 (insn_flags, FL2_ARCH8_2);\n   arm_arch_thumb1 = ARM_FSET_HAS_CPU1 (insn_flags, FL_THUMB);\n   arm_arch_thumb2 = ARM_FSET_HAS_CPU1 (insn_flags, FL_THUMB2);\n   arm_arch_xscale = ARM_FSET_HAS_CPU1 (insn_flags, FL_XSCALE);\n@@ -3248,6 +3256,13 @@ arm_option_override (void)\n   arm_tune_cortex_a9 = (arm_tune == cortexa9) != 0;\n   arm_arch_crc = ARM_FSET_HAS_CPU1 (insn_flags, FL_CRC32);\n   arm_m_profile_small_mul = ARM_FSET_HAS_CPU1 (insn_flags, FL_SMALLMUL);\n+  arm_fp16_inst = ARM_FSET_HAS_CPU2 (insn_flags, FL2_FP16INST);\n+  if (arm_fp16_inst)\n+    {\n+      if (arm_fp16_format == ARM_FP16_FORMAT_ALTERNATIVE)\n+\terror (\"selected fp16 options are incompatible.\");\n+      arm_fp16_format = ARM_FP16_FORMAT_IEEE;\n+    }\n \n   /* V5 code we generate is completely interworking capable, so we turn off\n      TARGET_INTERWORK here to avoid many tests later on.  */"}, {"sha": "35c72d30a2532797c52894f3e78c32349518afcc", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=4040b89af817696c51ff8a2f7ee983c2c38be345", "patch": "@@ -217,6 +217,13 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n /* FPU supports ARMv8.1 Adv.SIMD extensions.  */\n #define TARGET_NEON_RDMA (TARGET_NEON && arm_arch8_1)\n \n+/* FPU supports the floating point FP16 instructions for ARMv8.2 and later.  */\n+#define TARGET_VFP_FP16INST \\\n+  (TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_FPU_ARMV8 && arm_fp16_inst)\n+\n+/* FPU supports the AdvSIMD FP16 instructions for ARMv8.2 and later.  */\n+#define TARGET_NEON_FP16INST (TARGET_VFP_FP16INST && TARGET_NEON_RDMA)\n+\n /* Q-bit is present.  */\n #define TARGET_ARM_QBIT \\\n   (TARGET_32BIT && arm_arch5e && (arm_arch_notm || arm_arch7))\n@@ -456,6 +463,13 @@ extern int arm_arch8;\n /* Nonzero if this chip supports the ARM Architecture 8.1 extensions.  */\n extern int arm_arch8_1;\n \n+/* Nonzero if this chip supports the ARM Architecture 8.2 extensions.  */\n+extern int arm_arch8_2;\n+\n+/* Nonzero if this chip supports the FP16 instructions extension of ARM\n+   Architecture 8.2.  */\n+extern int arm_fp16_inst;\n+\n /* Nonzero if this chip can benefit from load scheduling.  */\n extern int arm_ld_sched;\n "}, {"sha": "0da98fb711bdcaf5add6e392060f4edaddf6cf05", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=4040b89af817696c51ff8a2f7ee983c2c38be345", "patch": "@@ -93,6 +93,8 @@\n    |march=armv8-a+crc\t\t\t\t\t\\\n    |march=armv8.1-a\t\t\t\t\t\\\n    |march=armv8.1-a+crc\t\t\t\t\t\\\n+   |march=armv8.2-a\t\t\t\t\t\\\n+   |march=armv8.2-a+fp16\t\t\t\t\\\n    |march=armv8-m.base\t\t\t\t\t\\\n    |march=armv8-m.main\t\t\t\t\t\\\n    |march=armv8-m.main+dsp\t\t\t\t\\\n@@ -130,6 +132,8 @@\n    |march=armv8-a+crc\t\t\t\t\t\\\n    |march=armv8.1-a\t\t\t\t\t\\\n    |march=armv8.1-a+crc\t\t\t\t\t\\\n+   |march=armv8.2-a\t\t\t\t\t\\\n+   |march=armv8.2-a+fp16\t\t\t\t\\\n    |march=armv8-m.base\t\t\t\t\t\\\n    |march=armv8-m.main\t\t\t\t\t\\\n    |march=armv8-m.main+dsp\t\t\t\t\\"}, {"sha": "f852ecd04010ed54917c74e699a4580096b38e7f", "filename": "gcc/config/arm/t-aprofile", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Ft-aprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fconfig%2Farm%2Ft-aprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-aprofile?ref=4040b89af817696c51ff8a2f7ee983c2c38be345", "patch": "@@ -99,6 +99,8 @@ MULTILIB_MATCHES       += march?armv8-a=mcpu?xgene1\n MULTILIB_MATCHES       += march?armv8-a=march?armv8-a+crc\n MULTILIB_MATCHES       += march?armv8-a=march?armv8.1-a\n MULTILIB_MATCHES       += march?armv8-a=march?armv8.1-a+crc\n+MULTILIB_MATCHES       += march?armv8-a=march?armv8.2-a\n+MULTILIB_MATCHES       += march?armv8-a=march?armv8.2-a+fp16\n \n # FPU matches\n MULTILIB_MATCHES       += mfpu?vfpv3-d16=mfpu?vfpv3"}, {"sha": "e6f503f4f97ae8aacaaf00cf3806fab7bb3af62f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4040b89af817696c51ff8a2f7ee983c2c38be345/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4040b89af817696c51ff8a2f7ee983c2c38be345", "patch": "@@ -14503,6 +14503,19 @@ extensions.\n @option{-march=armv8-a+crc} enables code generation for the ARMv8-A\n architecture together with the optional CRC32 extensions.\n \n+@option{-march=armv8.1-a} enables compiler support for the ARMv8.1-A\n+architecture.  This also enables the features provided by\n+@option{-march=armv8-a+crc}.\n+\n+@option{-march=armv8.2-a} enables compiler support for the ARMv8.2-A\n+architecture.  This also enables the features provided by\n+@option{-march=armv8.1-a}.\n+\n+@option{-march=armv8.2-a+fp16} enables compiler support for the\n+ARMv8.2-A architecture with the optional FP16 instructions extension.\n+This also enables the features provided by @option{-march=armv8.1-a}\n+and implies @option{-mfp16-format=ieee}.\n+\n @option{-march=native} causes the compiler to auto-detect the architecture\n of the build computer.  At present, this feature is only supported on\n GNU/Linux, and not all architectures are recognized.  If the auto-detect"}]}