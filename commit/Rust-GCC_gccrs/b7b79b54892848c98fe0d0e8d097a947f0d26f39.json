{"sha": "b7b79b54892848c98fe0d0e8d097a947f0d26f39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdiNzliNTQ4OTI4NDhjOThmZTBkMGU4ZDA5N2E5NDdmMGQyNmYzOQ==", "commit": {"author": {"name": "Ken Werner", "email": "ken.werner@de.ibm.com", "date": "2010-12-31T13:25:33Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2010-12-31T13:25:33Z"}, "message": "sync.md (sync_clobber, [...]): New code attribute.\n\ngcc/\n2010-12-15  Ken Werner  <ken.werner@de.ibm.com>\n\n\t* config/arm/sync.md (sync_clobber, sync_t2_reqd): New code attribute.\n\t(arm_sync_old_<sync_optab>si, arm_sync_old_<sync_optab><mode>): Use\n\tthe sync_clobber and sync_t2_reqd code attributes.\n\t* config/arm/arm.c (arm_output_sync_loop): Reverse the operation if\n\tthe t2 argument is NULL.\n\nFrom-SVN: r168375", "tree": {"sha": "094341de3abe504189a7db587384ee3137c66926", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/094341de3abe504189a7db587384ee3137c66926"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7b79b54892848c98fe0d0e8d097a947f0d26f39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7b79b54892848c98fe0d0e8d097a947f0d26f39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7b79b54892848c98fe0d0e8d097a947f0d26f39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7b79b54892848c98fe0d0e8d097a947f0d26f39/comments", "author": null, "committer": null, "parents": [{"sha": "f38bdf47e49a35e0ab4f16c5b2620914d82cbade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f38bdf47e49a35e0ab4f16c5b2620914d82cbade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f38bdf47e49a35e0ab4f16c5b2620914d82cbade"}], "stats": {"total": 76, "additions": 64, "deletions": 12}, "files": [{"sha": "39fd47a378e50b082b516b4d62dc2b18fdf4f6c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b79b54892848c98fe0d0e8d097a947f0d26f39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b79b54892848c98fe0d0e8d097a947f0d26f39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7b79b54892848c98fe0d0e8d097a947f0d26f39", "patch": "@@ -1,3 +1,11 @@\n+2010-12-31  Ken Werner  <ken.werner@de.ibm.com>\n+\n+\t* config/arm/sync.md (sync_clobber, sync_t2_reqd): New code attribute.\n+\t(arm_sync_old_<sync_optab>si, arm_sync_old_<sync_optab><mode>): Use\n+\tthe sync_clobber and sync_t2_reqd code attributes.\n+\t* config/arm/arm.c (arm_output_sync_loop): Reverse the operation if\n+\tthe t2 argument is NULL.\n+\n 2010-12-31  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/sourcebuild.texi (Top Level): Adjust link to libgo."}, {"sha": "3e75d7c9c4d89b6bb0c1b7ad1a69fb4d18f3b8b5", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b79b54892848c98fe0d0e8d097a947f0d26f39/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b79b54892848c98fe0d0e8d097a947f0d26f39/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=b7b79b54892848c98fe0d0e8d097a947f0d26f39", "patch": "@@ -23266,10 +23266,46 @@ arm_output_sync_loop (emit_f emit,\n       break;\n     }\n \n-  arm_output_strex (emit, mode, \"\", t2, t1, memory);\n-  operands[0] = t2;\n-  arm_output_asm_insn (emit, 0, operands, \"teq\\t%%0, #0\");\n-  arm_output_asm_insn (emit, 0, operands, \"bne\\t%sLSYT%%=\", LOCAL_LABEL_PREFIX);\n+  if (t2)\n+    {\n+       arm_output_strex (emit, mode, \"\", t2, t1, memory);\n+       operands[0] = t2;\n+       arm_output_asm_insn (emit, 0, operands, \"teq\\t%%0, #0\");\n+       arm_output_asm_insn (emit, 0, operands, \"bne\\t%sLSYT%%=\",\n+\t\t\t    LOCAL_LABEL_PREFIX);\n+    }\n+  else\n+    {\n+      /* Use old_value for the return value because for some operations\n+\t the old_value can easily be restored.  This saves one register.  */\n+      arm_output_strex (emit, mode, \"\", old_value, t1, memory);\n+      operands[0] = old_value;\n+      arm_output_asm_insn (emit, 0, operands, \"teq\\t%%0, #0\");\n+      arm_output_asm_insn (emit, 0, operands, \"bne\\t%sLSYT%%=\",\n+\t\t\t   LOCAL_LABEL_PREFIX);\n+\n+      switch (sync_op)\n+\t{\n+\tcase SYNC_OP_ADD:\n+\t  arm_output_op3 (emit, \"sub\", old_value, t1, new_value);\n+\t  break;\n+\n+\tcase SYNC_OP_SUB:\n+\t  arm_output_op3 (emit, \"add\", old_value, t1, new_value);\n+\t  break;\n+\n+\tcase SYNC_OP_XOR:\n+\t  arm_output_op3 (emit, \"eor\", old_value, t1, new_value);\n+\t  break;\n+\n+\tcase SYNC_OP_NONE:\n+\t  arm_output_op2 (emit, \"mov\", old_value, required_value);\n+\t  break;\n+\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n+    }\n \n   arm_process_output_memory_barrier (emit, NULL);\n   arm_output_asm_insn (emit, 1, operands, \"%sLSYB%%=:\", LOCAL_LABEL_PREFIX);"}, {"sha": "689a235c16f5e141eedf4acd08956b2e2b6ca697", "filename": "gcc/config/arm/sync.md", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b79b54892848c98fe0d0e8d097a947f0d26f39/gcc%2Fconfig%2Farm%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b79b54892848c98fe0d0e8d097a947f0d26f39/gcc%2Fconfig%2Farm%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsync.md?ref=b7b79b54892848c98fe0d0e8d097a947f0d26f39", "patch": "@@ -103,6 +103,18 @@\n \t\t\t      (plus \"add\")\n \t\t\t      (minus \"sub\")])\n \n+(define_code_attr sync_clobber [(ior \"=&r\")\n+\t\t\t\t(and \"=&r\")\n+\t\t\t\t(xor \"X\")\n+\t\t\t\t(plus \"X\")\n+\t\t\t\t(minus \"X\")])\n+\n+(define_code_attr sync_t2_reqd [(ior \"4\")\n+\t\t\t\t(and \"4\")\n+\t\t\t\t(xor \"*\")\n+\t\t\t\t(plus \"*\")\n+\t\t\t\t(minus \"*\")])\n+\n (define_expand \"sync_<sync_optab>si\"\n   [(match_operand:SI 0 \"memory_operand\")\n    (match_operand:SI 1 \"s_register_operand\")\n@@ -286,7 +298,6 @@\n \t  VUNSPEC_SYNC_COMPARE_AND_SWAP))\n    (set (match_dup 1) (unspec_volatile:SI [(match_dup 2)]\n                                           VUNSPEC_SYNC_COMPARE_AND_SWAP))\n-   (clobber:SI (match_scratch:SI 4 \"=&r\"))\n    (set (reg:CC CC_REGNUM) (unspec_volatile:CC [(match_dup 1)]\n                                                 VUNSPEC_SYNC_COMPARE_AND_SWAP))\n    ]\n@@ -299,7 +310,6 @@\n    (set_attr \"sync_required_value\"  \"2\")\n    (set_attr \"sync_new_value\"       \"3\")\n    (set_attr \"sync_t1\"              \"0\")\n-   (set_attr \"sync_t2\"              \"4\")\n    (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n@@ -313,7 +323,6 @@\n \t    VUNSPEC_SYNC_COMPARE_AND_SWAP)))\n    (set (match_dup 1) (unspec_volatile:NARROW [(match_dup 2)]\n                                           VUNSPEC_SYNC_COMPARE_AND_SWAP))\n-   (clobber:SI (match_scratch:SI 4 \"=&r\"))\n    (set (reg:CC CC_REGNUM) (unspec_volatile:CC [(match_dup 1)]\n                                                 VUNSPEC_SYNC_COMPARE_AND_SWAP))\n    ]\n@@ -326,7 +335,6 @@\n    (set_attr \"sync_required_value\"  \"2\")\n    (set_attr \"sync_new_value\"       \"3\")\n    (set_attr \"sync_t1\"              \"0\")\n-   (set_attr \"sync_t2\"              \"4\")\n    (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n@@ -487,7 +495,7 @@\n \t                    VUNSPEC_SYNC_OLD_OP))\n    (clobber (reg:CC CC_REGNUM))\n    (clobber (match_scratch:SI 3 \"=&r\"))\n-   (clobber (match_scratch:SI 4 \"=&r\"))]\n+   (clobber (match_scratch:SI 4 \"<sync_clobber>\"))]\n   \"TARGET_HAVE_LDREX && TARGET_HAVE_MEMORY_BARRIER\"\n   {\n     return arm_output_sync_insn (insn, operands);\n@@ -496,7 +504,7 @@\n    (set_attr \"sync_memory\"          \"1\")\n    (set_attr \"sync_new_value\"       \"2\")\n    (set_attr \"sync_t1\"              \"3\")\n-   (set_attr \"sync_t2\"              \"4\")\n+   (set_attr \"sync_t2\"              \"<sync_t2_reqd>\")\n    (set_attr \"sync_op\"              \"<sync_optab>\")\n    (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n@@ -540,7 +548,7 @@\n \t                    VUNSPEC_SYNC_OLD_OP))\n    (clobber (reg:CC CC_REGNUM))\n    (clobber (match_scratch:SI 3 \"=&r\"))\n-   (clobber (match_scratch:SI 4 \"=&r\"))]\n+   (clobber (match_scratch:SI 4 \"<sync_clobber>\"))]\n   \"TARGET_HAVE_LDREXBHD && TARGET_HAVE_MEMORY_BARRIER\"\n   {\n     return arm_output_sync_insn (insn, operands);\n@@ -549,7 +557,7 @@\n    (set_attr \"sync_memory\"          \"1\")\n    (set_attr \"sync_new_value\"       \"2\")\n    (set_attr \"sync_t1\"              \"3\")\n-   (set_attr \"sync_t2\"              \"4\")\n+   (set_attr \"sync_t2\"              \"<sync_t2_reqd>\")\n    (set_attr \"sync_op\"              \"<sync_optab>\")\n    (set_attr \"conds\" \t\t    \"clob\")\n    (set_attr \"predicable\" \"no\")])"}]}