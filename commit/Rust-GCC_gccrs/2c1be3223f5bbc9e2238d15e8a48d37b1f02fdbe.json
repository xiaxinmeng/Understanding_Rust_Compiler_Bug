{"sha": "2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMxYmUzMjIzZjViYmM5ZTIyMzhkMTVlOGE0OGQzN2IxZjAyZmRiZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-02-16T22:30:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-02-16T22:30:06Z"}, "message": "call.c (convert_like_real): Create a temporary for non-lvalue.\n\n\t* call.c (convert_like_real): Create a temporary for non-lvalue.\n\n\t* g++.old-deja/g++.other/init16.C: Update the test so that it does\n\tnot need <string> and also tests the initialization at runtime.\n\nFrom-SVN: r39776", "tree": {"sha": "ec99a75428f993f32c99bfc7522559768ef6c379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec99a75428f993f32c99bfc7522559768ef6c379"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5bbdc0c54c34e18958bfb74fb7bb831ba05fa12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5bbdc0c54c34e18958bfb74fb7bb831ba05fa12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5bbdc0c54c34e18958bfb74fb7bb831ba05fa12"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "d79146c010acd9cba7550542b7a0626d710fcd2d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe", "patch": "@@ -1,3 +1,7 @@\n+2001-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* call.c (convert_like_real): Create a temporary for non-lvalue.\n+\n 2001-02-16  Jeffrey Oldham  <oldham@codesourcery.com>\n \n \t* cp-tree.h: Fix typos in comments."}, {"sha": "7e2124fe8d094026ef095c3ad81b7739d61a108f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe", "patch": "@@ -3850,7 +3850,7 @@ convert_like_real (convs, expr, fn, argnum, inner)\n \ttree ref_type = totype;\n \n \t/* If necessary, create a temporary.  */\n-\tif (NEED_TEMPORARY_P (convs))\n+\tif (NEED_TEMPORARY_P (convs) || !lvalue_p (expr))\n \t  {\n \t    tree type = TREE_TYPE (TREE_OPERAND (convs, 0));\n \t    expr = build_target_expr_with_type (expr, type);"}, {"sha": "3d93933e54a602cc9504da9a40e8aedb7ad471cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe", "patch": "@@ -1,3 +1,8 @@\n+2001-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.old-deja/g++.other/init16.C: Update the test so that it does\n+\tnot need <string> and also tests the initialization at runtime.\n+\n 2001-02-16  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* gcc.c-torture/execute/longlong.c: New test."}, {"sha": "83d5a4eb5c5399d44b4fe804aa043e41e67919b6", "filename": "gcc/testsuite/g++.old-deja/g++.other/init16.C", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit16.C?ref=2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe", "patch": "@@ -1,11 +1,28 @@\n-// Build don't link:\n // Origin: Jakub Jelinek <jakub@redhat.com>\n \n-// excess errors test - XFAIL *-*-*\n-\n-#include <string>\n+struct bar {\n+  char c;\n+  bar (const char *);\n+  bar (const bar &);\n+};\n \n struct foo {\n-  string x;\n+  bar x;\n };\n+\n extern const struct foo y = { \"foo\" };\n+\n+bar::bar (const bar &ref)\n+{\n+  c = ref.c;\n+}\n+\n+bar::bar (const char *p)\n+{\n+  c = p[2];\n+}\n+\n+int main ()\n+{\n+  return y.x.c != 'o';\n+}"}]}