{"sha": "bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY5MGM0Y2Q4ZTkxYzJlM2Q2ZGJiMjVhZjVjYTMxZmJhNTM1ZmRlMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-10-12T08:30:00Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-10-12T08:30:00Z"}, "message": "re PR c++/52744 (bad handling of member (function) pointers in template parameters)\n\n2012-10-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/52744\n\t* g++.dg/cpp0x/pr52744.C: New.\n\nFrom-SVN: r192392", "tree": {"sha": "9f5f721b6c65ea838c85022ebf46948361d792e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f5f721b6c65ea838c85022ebf46948361d792e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1/comments", "author": null, "committer": null, "parents": [{"sha": "f2f8171fb15c0cdbefdead5387d5d253c4008ff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f8171fb15c0cdbefdead5387d5d253c4008ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f8171fb15c0cdbefdead5387d5d253c4008ff2"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "9f3d29906f9abaa6b7fc5661a86fb2e0375ab526", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1", "patch": "@@ -1,3 +1,8 @@\n+2012-10-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/52744\n+\t* g++.dg/cpp0x/pr52744.C: New.\n+\n 2012-10-12  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/40453"}, {"sha": "1a01fb2957f307d26d6680e0f46d1e5784ac7852", "filename": "gcc/testsuite/g++.dg/cpp0x/pr52744.C", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr52744.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr52744.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr52744.C?ref=bf90c4cd8e91c2e3d6dbb25af5ca31fba535fde1", "patch": "@@ -0,0 +1,83 @@\n+// PR c++/52744\n+// { dg-do compile { target c++11 } }\n+\n+struct T\n+{\n+  int a;\n+  void b(){}\n+  int c(int)\n+  {\n+    return 1;\n+    }\n+};\n+\n+template<typename CT, CT> struct member_helper;\n+\n+template<typename FT, FT(T::*mem)>\n+struct member_helper<FT(T::*), mem>\n+{\n+  static const char* worker()\n+  {\n+    return \"for members\";\n+  }\n+};\n+\n+template<typename Return, typename... Args, Return(T::*fun)(Args...)>\n+struct member_helper<Return(T::*)(Args...), fun>\n+{\n+  static const char* worker()\n+  {\n+    return \"for member functions returning non void\";\n+  }\n+};\n+\n+template<typename... Args, void(T::*fun)(Args...)>\n+struct member_helper<void(T::*)(Args...), fun>\n+{\n+  static const char* worker()\n+  {\n+    return \"for member functions returning void\";\n+  }\n+};\n+\n+void member_test()\n+{\n+  member_helper<decltype(&T::a), &T::a>::worker();\n+  member_helper<decltype(&T::b), &T::b>::worker();\n+  member_helper<decltype(&T::c), &T::c>::worker();\n+}\n+\n+typedef void lua_State;\n+\n+template<typename T, T> class function_helper\n+{\n+  static_assert(sizeof(T) != sizeof(T),\n+\t\t\"Error: function_helper works with functions (duh)\");\n+};\n+\n+template<typename Return, typename... Args, Return(*func)(Args...)>\n+struct function_helper<Return(*)(Args...), func>\n+{\n+  static int wrapper(lua_State* l)\n+  {\n+    return 1;\n+  }\n+};\n+\n+template<typename... Args, void(*func)(Args...)>\n+struct function_helper<void(*)(Args...), func>\n+{\n+  static int wrapper(lua_State* l)\n+  {\n+    return 0;\n+  }\n+};\n+\n+int ciao(int){ return 0; }\n+void ciao2(int){}\n+\n+void function_test()\n+{\n+  function_helper<decltype(&ciao), &ciao>::wrapper(0);\n+  function_helper<decltype(&ciao2), &ciao2>::wrapper(0);\n+}"}]}