{"sha": "9024ea92acf0ca7097babeb42c187590456ce915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAyNGVhOTJhY2YwY2E3MDk3YmFiZWI0MmMxODc1OTA0NTZjZTkxNQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-25T20:17:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-25T20:17:44Z"}, "message": "mn10300-protos.h: Remove the prototype for mn10300_builtin_saveregs.\n\n\t* config/mn10300/mn10300-protos.h: Remove the prototype for\n\tmn10300_builtin_saveregs.\n\t* config/mn10300/mn10300.c (TARGET_PROMOTE_PROTOTYPES): New.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(TARGET_RETURN_IN_MEMORY): Likewise.\n\t(TARGET_EXPAND_BUILTIN_SAVEREGS): Likewise.\n\t(mn10300_return_in_memory): Likewise.\n\t(mn10300_builtin_saveregs): Make it static.\n\t* config/mn10300/mn10300.h (PROMOTE_PROTOTYPES): Remove.\n\t(RETURN_IN_MEMORY): Likewise.\n\t(STRUCT_VALUE): Likewise.\n\t(EXPAND_BUILTIN_SAVEREGS): Likewise.\n\nFrom-SVN: r76581", "tree": {"sha": "62597dcae4591089cf9ef1a77245e8ced3b06a70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62597dcae4591089cf9ef1a77245e8ced3b06a70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9024ea92acf0ca7097babeb42c187590456ce915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9024ea92acf0ca7097babeb42c187590456ce915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9024ea92acf0ca7097babeb42c187590456ce915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9024ea92acf0ca7097babeb42c187590456ce915/comments", "author": null, "committer": null, "parents": [{"sha": "20b4e8aea1639dedfe5f4a17ba833afa20923fad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b4e8aea1639dedfe5f4a17ba833afa20923fad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20b4e8aea1639dedfe5f4a17ba833afa20923fad"}], "stats": {"total": 63, "additions": 39, "deletions": 24}, "files": [{"sha": "edb980391d22a53822a8d351524309dd5a957f2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9024ea92acf0ca7097babeb42c187590456ce915/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9024ea92acf0ca7097babeb42c187590456ce915/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9024ea92acf0ca7097babeb42c187590456ce915", "patch": "@@ -1,3 +1,18 @@\n+2004-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/mn10300/mn10300-protos.h: Remove the prototype for\n+\tmn10300_builtin_saveregs.\n+\t* config/mn10300/mn10300.c (TARGET_PROMOTE_PROTOTYPES): New.\n+\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n+\t(TARGET_RETURN_IN_MEMORY): Likewise.\n+\t(TARGET_EXPAND_BUILTIN_SAVEREGS): Likewise.\n+\t(mn10300_return_in_memory): Likewise.\n+\t(mn10300_builtin_saveregs): Make it static.\n+\t* config/mn10300/mn10300.h (PROMOTE_PROTOTYPES): Remove.\n+\t(RETURN_IN_MEMORY): Likewise.\n+\t(STRUCT_VALUE): Likewise.\n+\t(EXPAND_BUILTIN_SAVEREGS): Likewise.\n+\n 2004-01-25  Eric Botcazou  <ebotcazou@act-europe.fr>\n \n \tPR bootstrap/13853"}, {"sha": "debb9bcee07cdb1327c0308cb3db12d05ae13d77", "filename": "gcc/config/mn10300/mn10300-protos.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9024ea92acf0ca7097babeb42c187590456ce915/gcc%2Fconfig%2Fmn10300%2Fmn10300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9024ea92acf0ca7097babeb42c187590456ce915/gcc%2Fconfig%2Fmn10300%2Fmn10300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300-protos.h?ref=9024ea92acf0ca7097babeb42c187590456ce915", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler. Matsushita MN10300 series\n-   Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2003, 2004 Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n This file is part of GCC.\n@@ -54,7 +54,6 @@ extern int function_arg_partial_nregs (CUMULATIVE_ARGS *,\n extern struct rtx_def *mn10300_va_arg (tree, tree);\n #endif /* TREE_CODE */\n \n-extern struct rtx_def *mn10300_builtin_saveregs (void);\n extern void expand_prologue (void);\n extern void expand_epilogue (void);\n extern int initial_offset (int, int);"}, {"sha": "669acce64f6294fe3885112e2753e4da882360eb", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9024ea92acf0ca7097babeb42c187590456ce915/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9024ea92acf0ca7097babeb42c187590456ce915/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=9024ea92acf0ca7097babeb42c187590456ce915", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Matsushita MN10300 series\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n    Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n@@ -69,6 +69,8 @@ static int mn10300_address_cost_1 (rtx, int *);\n static int mn10300_address_cost (rtx);\n static bool mn10300_rtx_costs (rtx, int, int, int *);\n static void mn10300_file_start (void);\n+static bool mn10300_return_in_memory (tree, tree);\n+static rtx mn10300_builtin_saveregs (void);\n \n \f\n /* Initialize the GCC target structure.  */\n@@ -88,6 +90,17 @@ static void mn10300_file_start (void);\n #undef  TARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO mn10300_encode_section_info\n \n+#undef TARGET_PROMOTE_PROTOTYPES\n+#define TARGET_PROMOTE_PROTOTYPES hook_bool_tree_true\n+\n+#undef TARGET_STRUCT_VALUE_RTX\n+#define TARGET_STRUCT_VALUE_RTX hook_rtx_tree_int_null\n+#undef TARGET_RETURN_IN_MEMORY\n+#define TARGET_RETURN_IN_MEMORY mn10300_return_in_memory\n+\n+#undef TARGET_EXPAND_BUILTIN_SAVEREGS\n+#define TARGET_EXPAND_BUILTIN_SAVEREGS mn10300_builtin_saveregs\n+\n static void mn10300_encode_section_info (tree, rtx, int);\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n@@ -1405,9 +1418,16 @@ initial_offset (int from, int to)\n   abort ();\n }\n \n+static bool\n+mn10300_return_in_memory (tree type, tree fntype ATTRIBUTE_UNUSED)\n+{\n+  /* Return values > 8 bytes in length in memory.  */\n+  return int_size_in_bytes (type) > 8 || TYPE_MODE (type) == BLKmode;\n+}\n+\n /* Flush the argument registers to the stack for a stdarg function;\n    return the new argument pointer.  */\n-rtx\n+static rtx\n mn10300_builtin_saveregs (void)\n {\n   rtx offset, mem;"}, {"sha": "f3eb753f33ba39f42a1751561ea972471fd736b6", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9024ea92acf0ca7097babeb42c187590456ce915/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9024ea92acf0ca7097babeb42c187590456ce915/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=9024ea92acf0ca7097babeb42c187590456ce915", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Matsushita MN10300 series\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n    Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n@@ -517,9 +517,6 @@ enum reg_class {\n #define FRAME_POINTER_REQUIRED 0\n #define CAN_DEBUG_WITHOUT_FP\n \n-/* A guess for the MN10300.  */\n-#define PROMOTE_PROTOTYPES 1\n-\n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n    FUNDECL is the declaration node of the function (as a tree),\n@@ -621,16 +618,7 @@ struct cum_arg {int nbytes; };\n #define FUNCTION_VALUE_REGNO_P(N) \\\n   ((N) == FIRST_DATA_REGNUM || (N) == FIRST_ADDRESS_REGNUM)\n \n-/* Return values > 8 bytes in length in memory.  */\n #define DEFAULT_PCC_STRUCT_RETURN 0\n-#define RETURN_IN_MEMORY(TYPE)  \\\n-  (int_size_in_bytes (TYPE) > 8 || TYPE_MODE (TYPE) == BLKmode)\n-\n-/* Register in which address to store a structure value\n-   is passed to a function.  On the MN10300 it's passed as\n-   the first parameter.  */\n-\n-#define STRUCT_VALUE 0\n \n /* EXIT_IGNORE_STACK should be nonzero if, when returning from a function,\n    the stack pointer does not matter.  The value is tested only in\n@@ -688,13 +676,6 @@ struct cum_arg {int nbytes; };\n    ? gen_rtx_MEM (Pmode, arg_pointer_rtx) \\\n    : (rtx) 0)\n \n-/* Emit code for a call to builtin_saveregs.  We must emit USE insns which\n-   reference the 2 integer arg registers.\n-   Ordinarily they are not call used registers, but they are for\n-   _builtin_saveregs, so we must make this explicit.  */\n-\n-#define EXPAND_BUILTIN_SAVEREGS() mn10300_builtin_saveregs ()\n-\n /* Implement `va_start' for varargs and stdarg.  */\n #define EXPAND_BUILTIN_VA_START(valist, nextarg) \\\n   mn10300_va_start (valist, nextarg)"}]}