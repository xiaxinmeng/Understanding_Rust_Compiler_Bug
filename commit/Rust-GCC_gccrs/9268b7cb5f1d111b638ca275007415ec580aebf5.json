{"sha": "9268b7cb5f1d111b638ca275007415ec580aebf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2OGI3Y2I1ZjFkMTExYjYzOGNhMjc1MDA3NDE1ZWM1ODBhZWJmNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-05-29T20:00:29Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-05-29T20:00:29Z"}, "message": "re PR libstdc++/24692 (Atomic builtins for v3)\n\n2006-05-29  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/24692\n\t* include/bits/atomicity.h (__exchange_and_add_multi,\n\t__atomic_add_multi): New, depending on _GLIBCXX_ATOMIC_BUILTINS,\n\tinline the atomic builtins.\n\t(__exchange_and_add_dispatch, __atomic_add_dispatch): Adjust.\n\t* configure.ac: Define _GLIBCXX_ATOMIC_BUILTINS when the atomic\n\tbuiltins are available.\n\t* configure: Regenerate.\n\t* config.h.in: Likewise.\n\nFrom-SVN: r114215", "tree": {"sha": "f42102a03cc9d8999b5f5f2e7b0f5aacc5ceff7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f42102a03cc9d8999b5f5f2e7b0f5aacc5ceff7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9268b7cb5f1d111b638ca275007415ec580aebf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9268b7cb5f1d111b638ca275007415ec580aebf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9268b7cb5f1d111b638ca275007415ec580aebf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9268b7cb5f1d111b638ca275007415ec580aebf5/comments", "author": null, "committer": null, "parents": [{"sha": "acb69f1c028c9967eab7675135171531727072c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb69f1c028c9967eab7675135171531727072c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acb69f1c028c9967eab7675135171531727072c2"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "791b42f9dc8d4682d76b055c8e2389af609ab0c3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9268b7cb5f1d111b638ca275007415ec580aebf5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9268b7cb5f1d111b638ca275007415ec580aebf5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9268b7cb5f1d111b638ca275007415ec580aebf5", "patch": "@@ -1,3 +1,15 @@\n+2006-05-29  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/24692\n+\t* include/bits/atomicity.h (__exchange_and_add_multi,\n+\t__atomic_add_multi): New, depending on _GLIBCXX_ATOMIC_BUILTINS,\n+\tinline the atomic builtins.\n+\t(__exchange_and_add_dispatch, __atomic_add_dispatch): Adjust.\n+\t* configure.ac: Define _GLIBCXX_ATOMIC_BUILTINS when the atomic\n+\tbuiltins are available.\n+\t* configure: Regenerate.\n+\t* config.h.in: Likewise.\n+\n 2006-05-27  Paolo Carlini  <pcarlini@suse.de>\n \n \t* configure.host: If the CPU provides atomic builtins select"}, {"sha": "a75af3835d075e013a8a698611477a50e7cf6a48", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9268b7cb5f1d111b638ca275007415ec580aebf5/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9268b7cb5f1d111b638ca275007415ec580aebf5/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=9268b7cb5f1d111b638ca275007415ec580aebf5", "patch": "@@ -655,6 +655,9 @@\n /* Version number of package */\n #undef VERSION\n \n+/* Define if atomic builtins are provided for this platform. */\n+#undef _GLIBCXX_ATOMIC_BUILTINS\n+\n /* Define to use concept checking code from the boost libraries. */\n #undef _GLIBCXX_CONCEPT_CHECKS\n "}, {"sha": "68e2f6c0d371c274af6b96e7f5a63c29b348fd65", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9268b7cb5f1d111b638ca275007415ec580aebf5/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9268b7cb5f1d111b638ca275007415ec580aebf5/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=9268b7cb5f1d111b638ca275007415ec580aebf5", "patch": "@@ -109856,6 +109856,15 @@ ABI_TWEAKS_SRCDIR=config/${abi_tweaks_dir}\n \n \n \n+# Atomic builtins can be inlined in bits/atomicity.h.\n+if test $atomicity_dir = cpu/generic/atomic_builtins ; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define _GLIBCXX_ATOMIC_BUILTINS 1\n+_ACEOF\n+\n+fi\n+\n # Determine cross-compile flags and AM_CONDITIONALs.\n #AC_SUBST(GLIBCXX_IS_NATIVE)\n #AM_CONDITIONAL(CANADIAN, test $CANADIAN = yes)"}, {"sha": "45dd410ae0cf72c50da1bbf973f9357d8d4e1c76", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9268b7cb5f1d111b638ca275007415ec580aebf5/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9268b7cb5f1d111b638ca275007415ec580aebf5/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=9268b7cb5f1d111b638ca275007415ec580aebf5", "patch": "@@ -318,6 +318,12 @@ AC_SUBST(CPU_DEFINES_SRCDIR)\n AC_SUBST(ABI_TWEAKS_SRCDIR)\n AC_SUBST(OS_INC_SRCDIR)\n \n+# Atomic builtins can be inlined in bits/atomicity.h.\n+if test $atomicity_dir = cpu/generic/atomic_builtins ; then\n+  AC_DEFINE([_GLIBCXX_ATOMIC_BUILTINS], 1,\n+            [Define if atomic builtins are provided for this platform.])\n+fi\n+\n # Determine cross-compile flags and AM_CONDITIONALs.\n #AC_SUBST(GLIBCXX_IS_NATIVE)\n #AM_CONDITIONAL(CANADIAN, test $CANADIAN = yes)"}, {"sha": "c6a98833a2fa982eff4315909f279ee0d33b66d8", "filename": "libstdc++-v3/include/bits/atomicity.h", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9268b7cb5f1d111b638ca275007415ec580aebf5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9268b7cb5f1d111b638ca275007415ec580aebf5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomicity.h?ref=9268b7cb5f1d111b638ca275007415ec580aebf5", "patch": "@@ -49,6 +49,34 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n   __attribute__ ((__unused__))\n   __atomic_add(volatile _Atomic_word* __mem, int __val);\n \n+  static inline _Atomic_word\n+  __exchange_and_add_multi(volatile _Atomic_word* __mem, int __val)\n+  {\n+#ifdef _GLIBCXX_ATOMIC_BUILTINS\n+\n+    return __sync_fetch_and_add(__mem, __val);\n+\n+#else\n+\n+    return __exchange_and_add(__mem, __val);\n+\n+#endif\n+  }\n+\n+  static inline void\n+  __atomic_add_multi(volatile _Atomic_word* __mem, int __val)\n+  { \n+#ifdef _GLIBCXX_ATOMIC_BUILTINS\n+\n+    __sync_fetch_and_add(__mem, __val);\n+\n+#else\n+\n+    __atomic_add(__mem, __val);\n+\n+#endif\n+  }\n+\n   static inline _Atomic_word\n   __exchange_and_add_single(volatile _Atomic_word* __mem, int __val)\n   {\n@@ -68,7 +96,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n #ifdef __GTHREADS\n \n     if (__gthread_active_p())\n-      return __exchange_and_add(__mem, __val);\n+      return __exchange_and_add_multi(__mem, __val);\n     else\n       return __exchange_and_add_single(__mem, __val);\n \n@@ -86,7 +114,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n #ifdef __GTHREADS\n \n     if (__gthread_active_p())\n-      __atomic_add(__mem, __val);\n+      __atomic_add_multi(__mem, __val);\n     else\n       __atomic_add_single(__mem, __val);\n "}]}