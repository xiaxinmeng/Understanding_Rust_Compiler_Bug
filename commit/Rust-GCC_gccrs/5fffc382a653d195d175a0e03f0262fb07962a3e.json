{"sha": "5fffc382a653d195d175a0e03f0262fb07962a3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZmZmMzODJhNjUzZDE5NWQxNzVhMGUwM2YwMjYyZmIwNzk2MmEzZQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@st.com", "date": "2005-06-01T11:38:53Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2005-06-01T11:38:53Z"}, "message": "re PR rtl-optimization/21767 (if-convert leaves invalid REG_EQUAL notes)\n\n\tPR rtl-optimization/21767\n\t* rtl.h (function_invariant_p): Re-add declaration.\n\t* reload1.c (function_invariant_p): No longer static.\n\t* ifcvt.c (dead_or_predicable): Remove REG_EQUAL notes that\n\tmight have become invalid.\n\nFrom-SVN: r100448", "tree": {"sha": "9aa79da08f8f0253c34a6a51b34ed733dc7fbacf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9aa79da08f8f0253c34a6a51b34ed733dc7fbacf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fffc382a653d195d175a0e03f0262fb07962a3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fffc382a653d195d175a0e03f0262fb07962a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fffc382a653d195d175a0e03f0262fb07962a3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fffc382a653d195d175a0e03f0262fb07962a3e/comments", "author": null, "committer": null, "parents": [{"sha": "8e0a600bdd9dee1b4eb8f3e5ce840e76fdabf133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e0a600bdd9dee1b4eb8f3e5ce840e76fdabf133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e0a600bdd9dee1b4eb8f3e5ce840e76fdabf133"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "0c877904a092f99a396aeb0eb78742b9156fa7f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fffc382a653d195d175a0e03f0262fb07962a3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fffc382a653d195d175a0e03f0262fb07962a3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fffc382a653d195d175a0e03f0262fb07962a3e", "patch": "@@ -1,3 +1,11 @@\n+2005-06-01  J\"orn Rennecke <joern.rennecke@st.com>\n+\n+\tPR rtl-optimization/21767\n+\t* rtl.h (function_invariant_p): Re-add declaration.\n+\t* reload1.c (function_invariant_p): No longer static.\n+\t* ifcvt.c (dead_or_predicable): Remove REG_EQUAL notes that\n+\tmight have become invalid.\n+\n 2005-06-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/21536"}, {"sha": "d4b66a58f7aa45ab2b464cfd8d88ead47d9405e1", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fffc382a653d195d175a0e03f0262fb07962a3e/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fffc382a653d195d175a0e03f0262fb07962a3e/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=5fffc382a653d195d175a0e03f0262fb07962a3e", "patch": "@@ -3430,12 +3430,31 @@ dead_or_predicable (basic_block test_bb, basic_block merge_bb,\n   /* Move the insns out of MERGE_BB to before the branch.  */\n   if (head != NULL)\n     {\n+      rtx insn;\n+\n       if (end == BB_END (merge_bb))\n \tBB_END (merge_bb) = PREV_INSN (head);\n \n       if (squeeze_notes (&head, &end))\n \treturn TRUE;\n \n+      /* PR 21767: When moving insns above a conditional branch, REG_EQUAL\n+\t notes might become invalid.  */\n+      insn = head;\n+      do\n+\t{\n+\t  rtx note, set;\n+\n+\t  if (! INSN_P (insn))\n+\t    continue;\n+\t  note = find_reg_note (insn, REG_EQUAL, NULL_RTX);\n+\t  if (! note)\n+\t    continue;\n+\t  set = single_set (insn);\n+\t  if (!set || !function_invariant_p (SET_SRC (set)))\n+\t    remove_note (insn, note);\n+\t} while (insn != end && (insn = NEXT_INSN (insn)));\n+\n       reorder_insns (head, end, PREV_INSN (earliest));\n     }\n "}, {"sha": "0caa411fb4b67c61f11709ab253148bdd754352b", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fffc382a653d195d175a0e03f0262fb07962a3e/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fffc382a653d195d175a0e03f0262fb07962a3e/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=5fffc382a653d195d175a0e03f0262fb07962a3e", "patch": "@@ -405,7 +405,6 @@ static int reload_reg_free_for_value_p (int, int, int, enum reload_type,\n \t\t\t\t\trtx, rtx, int, int);\n static int free_for_value_p (int, enum machine_mode, int, enum reload_type,\n \t\t\t     rtx, rtx, int, int);\n-static int function_invariant_p (rtx);\n static int reload_reg_reaches_end_p (unsigned int, int, enum reload_type);\n static int allocate_reload_reg (struct insn_chain *, int, int);\n static int conflicts_with_override (rtx);\n@@ -4984,7 +4983,7 @@ free_for_value_p (int regno, enum machine_mode mode, int opnum,\n    pic_offset_table_rtx is not, and we must not spill these things to\n    memory.  */\n \n-static int\n+int\n function_invariant_p (rtx x)\n {\n   if (CONSTANT_P (x))"}, {"sha": "69091ab36d06cddf8d264d7a645a06e340b30cbd", "filename": "gcc/rtl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fffc382a653d195d175a0e03f0262fb07962a3e/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fffc382a653d195d175a0e03f0262fb07962a3e/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=5fffc382a653d195d175a0e03f0262fb07962a3e", "patch": "@@ -2062,6 +2062,9 @@ extern void dbr_schedule (rtx, FILE *);\n extern void dump_local_alloc (FILE *);\n extern int local_alloc (void);\n \n+/* In reload1.c */\n+extern int function_invariant_p (rtx);\n+\n /* In reg-stack.c */\n extern bool reg_to_stack (FILE *);\n "}]}