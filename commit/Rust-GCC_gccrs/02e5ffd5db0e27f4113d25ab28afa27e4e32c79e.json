{"sha": "02e5ffd5db0e27f4113d25ab28afa27e4e32c79e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJlNWZmZDVkYjBlMjdmNDExM2QyNWFiMjhhZmEyN2U0ZTMyYzc5ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-05T15:32:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-05T15:32:06Z"}, "message": "libgcc: Honor LDFLAGS_FOR_TARGET when linking libgcc_s\n\nWhen building gcc with some specific LDFLAGS_FOR_TARGET, e.g.\nLDFLAGS_FOR_TARGET=-Wl,-z,relro,-z,now\nthose flags propagate info linking of target shared libraries,\ne.g. lib{ubsan,tsan,stdc++,quadmath,objc,lsan,itm,gphobos,gdruntime,gomp,go,gfortran,atomic,asan}.so.*\nbut there is one important exception, libgcc_s.so.* linking ignores it.\n\nThe following patch fixes that.\n\nBootstrapped/regtested on x86_64-linux with LDFLAGS_FOR_TARGET=-Wl,-z,relro,-z,now\nand verified that libgcc_s.so.* is BIND_NOW when it previously wasn't, and\nwithout any LDFLAGS_FOR_TARGET on x86_64-linux and i686-linux.\nThere on x86_64-linux I've verified that the libgcc_s.so.1 linking command\nline for -m64 is identical except for whitespace to one without the patch,\nand for -m32 multilib $(LDFLAGS) actually do supply there an extra -m32\nthat also repeats later in the @multilib_flags@, which should be harmless.\n\n2021-08-04  Jakub Jelinek  <jakub@redhat.com>\n\n\t* config/t-slibgcc (SHLIB_LINK): Add $(LDFLAGS).\n\t* config/t-slibgcc-darwin (SHLIB_LINK): Likewise.\n\t* config/t-slibgcc-vms (SHLIB_LINK): Likewise.\n\t* config/t-slibgcc-fuchsia (SHLIB_LDFLAGS): Remove $(LDFLAGS).", "tree": {"sha": "6fb9a052bea3db9a2a73d7c33c5103d936852556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fb9a052bea3db9a2a73d7c33c5103d936852556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bac793ed6bad2c0c13cd1e93a1aa5808467afc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bac793ed6bad2c0c13cd1e93a1aa5808467afc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bac793ed6bad2c0c13cd1e93a1aa5808467afc8"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "50f13c2f1fae88af21264b11cb361d59ee7153bb", "filename": "libgcc/config/t-slibgcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e/libgcc%2Fconfig%2Ft-slibgcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e/libgcc%2Fconfig%2Ft-slibgcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc?ref=02e5ffd5db0e27f4113d25ab28afa27e4e32c79e", "patch": "@@ -32,7 +32,7 @@ SHLIB_INSTALL_SOLINK = $(LN_S) $(SHLIB_SONAME) \\\n \t$(DESTDIR)$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)\n \n SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n-\t$(SHLIB_LDFLAGS) \\\n+\t$(SHLIB_LDFLAGS) $(LDFLAGS) \\\n \t-o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp @multilib_flags@ \\\n \t$(SHLIB_OBJS) $(SHLIB_LC) && \\\n \trm -f $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\"}, {"sha": "a6ada456e40d8dec2962cddb1fdca328ef359ea7", "filename": "libgcc/config/t-slibgcc-darwin", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e/libgcc%2Fconfig%2Ft-slibgcc-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e/libgcc%2Fconfig%2Ft-slibgcc-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-darwin?ref=02e5ffd5db0e27f4113d25ab28afa27e4e32c79e", "patch": "@@ -15,7 +15,7 @@ SHLIB_LC = -lc\n # Note that this version is used for the loader, not the linker; the linker\n # uses the stub versions named by the versioned members of $(INSTALL_FILES).\n \n-SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) -dynamiclib -nodefaultlibs \\\n+SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) $(LDFLAGS) -dynamiclib -nodefaultlibs \\\n \t-install_name @shlib_slibdir@/$(SHLIB_INSTALL_NAME) \\\n \t-single_module -o $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n \t-Wl,-exported_symbols_list,$(SHLIB_MAP) \\"}, {"sha": "97f18034558ae2450363b48c3e42323a0b76dc4d", "filename": "libgcc/config/t-slibgcc-fuchsia", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e/libgcc%2Fconfig%2Ft-slibgcc-fuchsia", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e/libgcc%2Fconfig%2Ft-slibgcc-fuchsia", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-fuchsia?ref=02e5ffd5db0e27f4113d25ab28afa27e4e32c79e", "patch": "@@ -18,5 +18,4 @@\n \n # Fuchsia-specific shared library overrides.\n \n-SHLIB_LDFLAGS = -Wl,--soname=$(SHLIB_SONAME) \\\n-                $(LDFLAGS)\n+SHLIB_LDFLAGS = -Wl,--soname=$(SHLIB_SONAME)"}, {"sha": "c3059758752e6c7b72096601fa4ad7f6f6a5f633", "filename": "libgcc/config/t-slibgcc-vms", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e/libgcc%2Fconfig%2Ft-slibgcc-vms", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e5ffd5db0e27f4113d25ab28afa27e4e32c79e/libgcc%2Fconfig%2Ft-slibgcc-vms", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-vms?ref=02e5ffd5db0e27f4113d25ab28afa27e4e32c79e", "patch": "@@ -22,7 +22,7 @@ SHLIB_LINK = \\\n   objdump --syms $(SHLIB_OBJS) | \\\n   $(SHLIB_SYMVEC) >> SYMVEC_$$$$.opt ; \\\n   echo \"case_sensitive=NO\" >> SYMVEC_$$$$.opt; \\\n-  $(CC) $(LIBGCC2_CFLAGS) -nodefaultlibs \\\n+  $(CC) $(LIBGCC2_CFLAGS) $(LDFLAGS) -nodefaultlibs \\\n   -shared --for-linker=/noinform -o $(SHLIB_NAME) $(SHLIB_OBJS) \\\n   --for-linker=SYMVEC_$$$$.opt \\\n   --for-linker=gsmatch=equal,$(shlib_version)"}]}