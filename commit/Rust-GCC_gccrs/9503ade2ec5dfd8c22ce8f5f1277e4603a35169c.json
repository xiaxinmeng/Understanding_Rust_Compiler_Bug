{"sha": "9503ade2ec5dfd8c22ce8f5f1277e4603a35169c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUwM2FkZTJlYzVkZmQ4YzIyY2U4ZjVmMTI3N2U0NjAzYTM1MTY5Yw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2014-11-28T15:39:52Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2014-11-28T15:39:52Z"}, "message": "re PR rtl-optimization/64087 (ICE on valid code at -O3 on x86_64-linux-gnu in in lra_create_live_ranges, at lra-lives.c:1330)\n\n2014-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/64087\n\t* lra-lives.c (process_bb_lives): Add debug output.\n\t(lra_create_live_ranges): Don't remove dead insn on the second\n\tcall of lra_create_live_ranges_1.\n\n2014-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/64087\n\t*  gcc.dg/pr64087.c: New.\n\nFrom-SVN: r218162", "tree": {"sha": "9bb745aa18a89da9fb11997ec77c59c62cb054fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bb745aa18a89da9fb11997ec77c59c62cb054fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51e5fd69c64bdd22b0931e8724f18b53bf95c6b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e5fd69c64bdd22b0931e8724f18b53bf95c6b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e5fd69c64bdd22b0931e8724f18b53bf95c6b7"}], "stats": {"total": 79, "additions": 70, "deletions": 9}, "files": [{"sha": "24112ee201c346db730b64df0daae66741a5ec49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9503ade2ec5dfd8c22ce8f5f1277e4603a35169c", "patch": "@@ -1,3 +1,10 @@\n+2014-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/64087\n+\t* lra-lives.c (process_bb_lives): Add debug output.\n+\t(lra_create_live_ranges): Don't remove dead insn on the second\n+\tcall of lra_create_live_ranges_1.\n+\n 2014-11-28  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/64037"}, {"sha": "a593b02932097a2934cb0d247a500dfc617ac47c", "filename": "gcc/lra-lives.c", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c/gcc%2Flra-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c/gcc%2Flra-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-lives.c?ref=9503ade2ec5dfd8c22ce8f5f1277e4603a35169c", "patch": "@@ -971,14 +971,23 @@ process_bb_lives (basic_block bb, int &curr_point, bool dead_insn_p)\n       live_pseudos_num++;\n       if (! sparseset_bit_p (pseudos_live, j))\n \t{\n-\t  live_change_p = TRUE;\n+\t  live_change_p = true;\n+\t  if (lra_dump_file != NULL)\n+\t    fprintf (lra_dump_file,\n+\t\t     \"  r%d is removed as live at bb%d start\\n\", j, bb->index);\n \t  break;\n \t}\n     }\n-  live_change_p\n-    = (live_change_p\n-       || sparseset_cardinality (pseudos_live) != live_pseudos_num);\n-  \n+  if (! live_change_p\n+      && sparseset_cardinality (pseudos_live) != live_pseudos_num)\n+    {\n+      live_change_p = true;\n+      if (lra_dump_file != NULL)\n+\tEXECUTE_IF_SET_IN_SPARSESET (pseudos_live, j)\n+\t  if (! bitmap_bit_p (df_get_live_in (bb), j))\n+\t    fprintf (lra_dump_file,\n+\t\t     \"  r%d is added to live at bb%d start\\n\", j, bb->index);\n+    }\n   /* See if we'll need an increment at the end of this basic block.\n      An increment is needed if the PSEUDOS_LIVE set is not empty,\n      to make sure the finish points are set up correctly.  */\n@@ -1322,11 +1331,16 @@ lra_create_live_ranges (bool all_p, bool dead_insn_p)\n   if (lra_dump_file != NULL)\n     fprintf (lra_dump_file, \"Live info was changed -- recalculate it\\n\");\n   /* Live info was changed on a bb border.  It means that some info,\n-     e.g. about conflict regs, calls crossed may be wrong, live\n-     ranges.  We need this info for allocation.  So recalcualate it\n-     again.  */\n+     e.g. about conflict regs, calls crossed, and live ranges may be\n+     wrong.  We need this info for allocation.  So recalculate it\n+     again but without removing dead insns which can change live info\n+     again.  Repetitive live range calculations are expensive therefore\n+     we stop here as we already have correct info although some\n+     improvement in rare cases could be possible on this sub-pass if\n+     we do dead insn elimination again (still the improvement may\n+     happen later).  */\n   lra_clear_live_ranges ();\n-  bool res = lra_create_live_ranges_1 (all_p, dead_insn_p);\n+  bool res = lra_create_live_ranges_1 (all_p, false);\n   lra_assert (! res);\n }\n "}, {"sha": "3528b18837b4dbb1706dc56afa34982ab7d352bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9503ade2ec5dfd8c22ce8f5f1277e4603a35169c", "patch": "@@ -1,3 +1,8 @@\n+2014-11-28  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/64087\n+\t*  gcc.dg/pr64087.c: New.\n+\n 2014-11-28  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/64037"}, {"sha": "fe3c634762dc6a15222606a2471f95bd1a99b16c", "filename": "gcc/testsuite/gcc.dg/pr64087.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64087.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9503ade2ec5dfd8c22ce8f5f1277e4603a35169c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64087.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64087.c?ref=9503ade2ec5dfd8c22ce8f5f1277e4603a35169c", "patch": "@@ -0,0 +1,35 @@\n+/* PR rtl-optimization/64087 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+int printf (const char *, ...);\n+\n+int a[72], b, c, d, e;\n+\n+int\n+main ()\n+{\n+  int h;\n+  for (b = 0; b < 72; b++)\n+    {\n+      h = 1;\n+      if (b)\n+\th >>= 1;\n+      a[b] = h;\n+    }\n+  for (; e; e++)\n+    for (c = 0; c < 1;)\n+      for (; d;)\n+\t{\n+\t  printf (\"0\");\n+\t  int g;\n+\t  for (b = 0; b < 72; b++)\n+\t    {\n+\t      g = 1;\n+\t      if (b)\n+\t\tg >>= 1;\n+\t      a[b] = g;\n+\t    }\n+\t}\n+  return 0;\n+}"}]}