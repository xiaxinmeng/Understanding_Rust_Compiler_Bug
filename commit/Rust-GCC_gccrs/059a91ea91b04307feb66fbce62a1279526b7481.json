{"sha": "059a91ea91b04307feb66fbce62a1279526b7481", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU5YTkxZWE5MWIwNDMwN2ZlYjY2ZmJjZTYyYTEyNzk1MjZiNzQ4MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-02-17T08:00:19Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-16T08:42:57Z"}, "message": "[Ada] Small cleanup in C header files\n\ngcc/ada/\n\n\t* initialize.c: Do not include vxWorks.h and fcntl.h from here.\n\t(__gnat_initialize) [__MINGW32__]: Remove #ifdef and attribute\n\t(__gnat_initialize) [init_float]: Delete.\n\t(__gnat_initialize) [VxWorks]: Likewise.\n\t(__gnat_initialize) [PA-RISC HP-UX 10]: Likewise.\n\t* runtime.h: Add comment about vxWorks.h include.", "tree": {"sha": "a3a29686fd7d30726e82f94729b84bd8979bea28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3a29686fd7d30726e82f94729b84bd8979bea28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/059a91ea91b04307feb66fbce62a1279526b7481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/059a91ea91b04307feb66fbce62a1279526b7481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/059a91ea91b04307feb66fbce62a1279526b7481", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/059a91ea91b04307feb66fbce62a1279526b7481/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e96a5a503d7d927e4147bea873ac43d2f184b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e96a5a503d7d927e4147bea873ac43d2f184b6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e96a5a503d7d927e4147bea873ac43d2f184b6f"}], "stats": {"total": 74, "additions": 9, "deletions": 65}, "files": [{"sha": "6bed6684cb98d3fa7ea101dc6f6b7ee4ca175bd1", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 6, "deletions": 64, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/059a91ea91b04307feb66fbce62a1279526b7481/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/059a91ea91b04307feb66fbce62a1279526b7481/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=059a91ea91b04307feb66fbce62a1279526b7481", "patch": "@@ -29,29 +29,19 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/*  This unit provides default implementation for __gnat_initialize ()\n-    which is called before the elaboration of the partition. It is provided\n-    in a separate file/object so that users can replace it easily.\n-    The default implementation should be null on most targets.  */\n-\n-/* The following include is here to meet the published VxWorks requirement\n-   that the __vxworks header appear before any other include.  */\n-#ifdef __vxworks\n-#include \"vxWorks.h\"\n-#endif\n+/*  This unit provides the default implementation of __gnat_initialize, which\n+    is called before the elaboration of the partition.  It is provided in a\n+    separate file so that users can replace it easily.  But the implementation\n+    should be empty on most targets.  */\n \n #ifdef IN_RTS\n #include \"runtime.h\"\n-/* We don't have libiberty, so use malloc.  */\n-#define xmalloc(S) malloc (S)\n-#define xrealloc(V,S) realloc (V,S)\n #else\n #include \"config.h\"\n #include \"system.h\"\n #endif\n \n #include \"raise.h\"\n-#include <fcntl.h>\n \n #ifdef __cplusplus\n extern \"C\" {\n@@ -63,65 +53,16 @@ extern \"C\" {\n \n #if defined (__MINGW32__)\n \n-extern void __gnat_install_SEH_handler (void *);\n-\n void\n-__gnat_initialize (void *eh ATTRIBUTE_UNUSED)\n+__gnat_initialize (void *eh)\n {\n-   /* Note that we do not activate this for the compiler itself to avoid a\n-      bootstrap path problem.  Older version of gnatbind will generate a call\n-      to __gnat_initialize() without argument. Therefore we cannot use eh in\n-      this case.  It will be possible to remove the following #ifdef at some\n-      point.  */\n-#ifdef IN_RTS\n    /* Install the Structured Exception handler.  */\n    if (eh)\n      __gnat_install_SEH_handler (eh);\n-#endif\n-}\n-\n-/******************************************/\n-/* __gnat_initialize (init_float version) */\n-/******************************************/\n-\n-#elif defined (__Lynx__) || defined (__FreeBSD__) || defined(__NetBSD__) \\\n-  || defined (__OpenBSD__) || defined (__DragonFly__)\n-\n-void\n-__gnat_initialize (void *eh ATTRIBUTE_UNUSED)\n-{\n-}\n-\n-/***************************************/\n-/* __gnat_initialize (VxWorks Version) */\n-/***************************************/\n-\n-#elif defined(__vxworks)\n-\n-void\n-__gnat_initialize (void *eh)\n-{\n-}\n-\n-#elif defined(_T_HPUX10) || (!defined(IN_RTS) && defined(_X_HPUX10))\n-\n-/************************************************/\n-/* __gnat_initialize (PA-RISC HP-UX 10 Version) */\n-/************************************************/\n-\n-extern void __main (void);\n-\n-void\n-__gnat_initialize (void *eh ATTRIBUTE_UNUSED)\n-{\n-  __main ();\n }\n \n #else\n \n-/* For all other versions of GNAT, the initialize routine and handler\n-   installation do nothing */\n-\n /***************************************/\n /* __gnat_initialize (Default Version) */\n /***************************************/\n@@ -130,6 +71,7 @@ void\n __gnat_initialize (void *eh ATTRIBUTE_UNUSED)\n {\n }\n+\n #endif\n \n #ifdef __cplusplus"}, {"sha": "772194702423489225f03bb509e739afa56cba18", "filename": "gcc/ada/runtime.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/059a91ea91b04307feb66fbce62a1279526b7481/gcc%2Fada%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/059a91ea91b04307feb66fbce62a1279526b7481/gcc%2Fada%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fruntime.h?ref=059a91ea91b04307feb66fbce62a1279526b7481", "patch": "@@ -31,9 +31,11 @@\n \n /* This file provides common definitions used by GNAT C runtime files.  */\n \n+/* The following include is here to meet the published VxWorks requirement\n+   that the vxWorks.h header appear before any other header.  */\n #ifdef __vxworks\n #include \"vxWorks.h\"\n-#endif /* __vxworks */\n+#endif\n \n #ifndef ATTRIBUTE_UNUSED\n #define ATTRIBUTE_UNUSED __attribute__((unused))"}]}