{"sha": "9e9b9afe4c70bfb0126b669f26423785eea8beca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU5YjlhZmU0YzcwYmZiMDEyNmI2NjlmMjY0MjM3ODVlZWE4YmVjYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-12-18T23:58:21Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-12-18T23:58:21Z"}, "message": "config.gcc (*-*-linux*): Don't define HAVE_ATEXIT or BSTRING.\n\n\t* config.gcc (*-*-linux*): Don't define HAVE_ATEXIT or BSTRING.\n\t* tm.texi (EXIT_BODY): Update documentation.\n\t* config/freebsd.h, config/netware.h, config/arm/coff.h,\n\tconfig/arm/conix-elf.h, config/arm/unknown-elf.h,\n\tconfig/d30v/d30v.h, config/mcore/mcore.h, config/pj/pj.h,\n\tsparc/sp86x-aout.h: Remove definitions of HAVE_ATEXIT (some\n\tcommented out) and associated comments.\n\nf:\n\t* com.c [VMS]: Remove definition of BSTRING.\n\nFrom-SVN: r38370", "tree": {"sha": "7e1a8332652f11d7ac0e018602c70ca12e95948b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e1a8332652f11d7ac0e018602c70ca12e95948b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e9b9afe4c70bfb0126b669f26423785eea8beca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9b9afe4c70bfb0126b669f26423785eea8beca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e9b9afe4c70bfb0126b669f26423785eea8beca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9b9afe4c70bfb0126b669f26423785eea8beca/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20d380b15db740b9a998f5c64b52333f3f8d55c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d380b15db740b9a998f5c64b52333f3f8d55c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d380b15db740b9a998f5c64b52333f3f8d55c2"}], "stats": {"total": 70, "additions": 18, "deletions": 52}, "files": [{"sha": "eb0c0ce36817e41b578c5249fa2e6ad8f51e9ded", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -1,3 +1,13 @@\n+2000-12-18  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* config.gcc (*-*-linux*): Don't define HAVE_ATEXIT or BSTRING.\n+\t* tm.texi (EXIT_BODY): Update documentation.\n+\t* config/freebsd.h, config/netware.h, config/arm/coff.h,\n+\tconfig/arm/conix-elf.h, config/arm/unknown-elf.h,\n+\tconfig/d30v/d30v.h, config/mcore/mcore.h, config/pj/pj.h,\n+\tsparc/sp86x-aout.h: Remove definitions of HAVE_ATEXIT (some\n+\tcommented out) and associated comments.\n+\n 2000-12-18  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-common.c (STD_C9L, ADJ_STD): Define."}, {"sha": "13647bf5e05e4fae8763f4db89604e7abd94bd8b", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -258,7 +258,7 @@ esac\n # Common parts for GNU/Linux, GNU/Hurd and OpenBSD systems.\n case $machine in\n *-*-linux*)\n-\txm_defines=\"HAVE_ATEXIT POSIX BSTRING\"\n+\txm_defines=\"POSIX\"\n \t;;\n *-*-gnu*)\n \t# On the Hurd, the setup is just about the same on"}, {"sha": "94999d4b4aa972f1ff4cf414fd83450c0275421c", "filename": "gcc/config/arm/coff.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Farm%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Farm%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcoff.h?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -199,14 +199,6 @@ dtors_section ()\t\t\t\t\t\t\\\n #undef DO_GLOBAL_CTORS_BODY\n #undef DO_GLOBAL_DTORS_BODY\n \n-/* If you don't define HAVE_ATEXIT, and the object file format/OS/whatever \n-   does not support constructors/destructors, then gcc implements destructors\n-   by defining its own exit function, which calls the destructors.  This gcc\n-   exit function overrides the C library's exit function, and this can cause\n-   all kinds of havoc if the C library has a non-trivial exit function.  You\n-   really don't want to use the exit function in libgcc2.c.  */\n-#define HAVE_ATEXIT\n-\n /* The ARM development system defines __main.  */\n #define NAME__MAIN  \"__gccmain\"\n #define SYMBOL__MAIN __gccmain"}, {"sha": "2d447a5f602b5ededb792c25638bcbd9c8f67ff4", "filename": "gcc/config/arm/conix-elf.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Farm%2Fconix-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Farm%2Fconix-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fconix-elf.h?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -25,14 +25,6 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_VERSION\tfputs (\" (ARM/ELF ConiX)\", stderr);\n #endif\n \n-/* If you don't define HAVE_ATEXIT, and the object file format/OS/whatever \n-   does not support constructors/destructors, then gcc implements destructors\n-   by defining its own exit function, which calls the destructors.  This gcc\n-   exit function overrides the C library's exit function, and this can cause\n-   all kinds of havoc if the C library has a non-trivial exit function.  You\n-   really don't want to use the exit function in libgcc2.c.  */\n-#define HAVE_ATEXIT\n-\n /* Default to using APCS-32 and software floating point.  */\n #ifndef TARGET_DEFAULT\n #define TARGET_DEFAULT\t(ARM_FLAG_SOFT_FLOAT | ARM_FLAG_APCS_32)"}, {"sha": "315baff69204cebf9ca07e4c59116e0030506958", "filename": "gcc/config/arm/unknown-elf.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Farm%2Funknown-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Farm%2Funknown-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funknown-elf.h?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -24,14 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_VERSION\tfputs (\" (ARM/ELF non-Linux)\", stderr);\n #endif\n \n-/* If you don't define HAVE_ATEXIT, and the object file format/OS/whatever \n-   does not support constructors/destructors, then gcc implements destructors\n-   by defining its own exit function, which calls the destructors.  This gcc\n-   exit function overrides the C library's exit function, and this can cause\n-   all kinds of havoc if the C library has a non-trivial exit function.  You\n-   really don't want to use the exit function in libgcc2.c.  */\n-#define HAVE_ATEXIT\n-\n /* Default to using APCS-32 and software floating point.  */\n #ifndef TARGET_DEFAULT\n #define TARGET_DEFAULT\t(ARM_FLAG_SOFT_FLOAT | ARM_FLAG_APCS_32 | ARM_FLAG_APCS_FRAME)"}, {"sha": "e82b3fe53f2037b72681c98e656884f4d379ab6b", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -6041,13 +6041,6 @@ fprintf (STREAM, \"\\t.word .L%d\\n\", VALUE)\n    `main'.  */\n /* #define DEFAULT_MAIN_RETURN */\n \n-/* Define this if the target system supports the function `atexit' from the\n-   ANSI C standard.  If this is not defined, and `INIT_SECTION_ASM_OP' is not\n-   defined, a default `exit' function will be provided to support C++.\n-\n-   Defined by svr4.h */\n-/* #define HAVE_ATEXIT */\n-\n /* Define this if your `exit' function needs to do something besides calling an\n    external function `_cleanup' before terminating with `_exit'.  The\n    `EXIT_BODY' macro is only needed if netiher `HAVE_ATEXIT' nor"}, {"sha": "f7cea4b68ae4d35a6d4b34255d1cf0e059753cdd", "filename": "gcc/config/freebsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd.h?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -136,6 +136,3 @@ do {\t\t\t\t \t\t\t\t\t\\\n \n /* Handle #pragma weak and #pragma pack.  */\n #define HANDLE_SYSV_PRAGMA\n-\n-/* Tell libgcc2.c that FreeBSD targets support atexit(3).  */\n-#define HAVE_ATEXIT"}, {"sha": "87667031cf22d9067784a8a0e65c86ec427f6e79", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -1070,10 +1070,6 @@ extern enum reg_class reg_class_from_letter[];\n \n #define WORD_REGISTER_OPERATIONS\n \n-/* Provided in ANSI C MCore libraries.  */\n-#undef  HAVE_ATEXIT\n-#define HAVE_ATEXIT 1\n-\n /* Implicit library calls should use memcpy, not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n "}, {"sha": "a28a9d09542f73efa79a13b3765a41a830594f68", "filename": "gcc/config/netware.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetware.h?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -1,6 +1,6 @@\n /* netware.h -- operating system specific defines to be used when \n    targeting GCC for some generic NetWare 4 system.\n-   Copyright (C) 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 2000 Free Software Foundation, Inc.\n \n    Written by David V. Henkel-Wallace (gumby@cygnus.com)\n \n@@ -63,8 +63,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION, and\n    SELECT_RTX_SECTION.  We do both here just to be on the safe side.  */\n \n-#define\tHAVE_ATEXIT\n-\n #undef\tHAS_INIT_SECTION\n #undef\tINIT_SECTION_ASM_OP\n "}, {"sha": "8624fa2955faf4bb67b9e1f4558488a10e7cf6e3", "filename": "gcc/config/pj/pj.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Fpj%2Fpj.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Fpj%2Fpj.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpj%2Fpj.h?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -1293,9 +1293,6 @@ do { char dstr[30];                                     \\\n    PROMOTE_FUNCTION_RETURN does the same for function returns.  */\n #define PROMOTE_FUNCTION_ARGS\n \n-/* For the sake of libgcc2.c, indicate target supports atexit.  */\n-#define HAVE_ATEXIT\n-\n \f\n /* We can debug without a frame pointer.  */\n #define CAN_DEBUG_WITHOUT_FP "}, {"sha": "78a26cb609cf4dff481c0c8afd2c10d70ad74a63", "filename": "gcc/config/sparc/sp86x-aout.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Fsparc%2Fsp86x-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Fconfig%2Fsparc%2Fsp86x-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp86x-aout.h?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -20,8 +20,6 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"sparc/sparc.h\"\n \n-#define HAVE_ATEXIT\n-\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-D__sparc__ -D__sparclite86x__ -Acpu=sparc -Amachine=sparc\"\n "}, {"sha": "06033f9774de95f5d39e66112cc46787a0867995", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -1,3 +1,7 @@\n+2000-12-18  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* com.c [VMS]: Remove definition of BSTRING.\n+\n 2000-12-18  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* g77.texi: Update GPL copy not to refer to years 19@var{yy}."}, {"sha": "40d511664e4af9bd8fb32d1d0488d32cbb60f4cd", "filename": "gcc/f/com.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -180,9 +180,6 @@ static void hack_vms_include_specification ();\n typedef struct { unsigned :16, :16, :16; } vms_ino_t;\n #define ino_t vms_ino_t\n #define INCLUDE_LEN_FUDGE 10\t/* leave room for VMS syntax conversion */\n-#ifdef __GNUC__\n-#define BSTRING\t\t\t/* VMS/GCC supplies the bstring routines */\n-#endif /* __GNUC__ */\n #endif /* VMS */\n \n #ifndef O_RDONLY"}, {"sha": "a7fb12458f1dc880d68b6e7dbee6d58c6b050baf", "filename": "gcc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9b9afe4c70bfb0126b669f26423785eea8beca/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=9e9b9afe4c70bfb0126b669f26423785eea8beca", "patch": "@@ -8080,8 +8080,8 @@ the @code{atexit} function.\n Define this if your @code{exit} function needs to do something\n besides calling an external function @code{_cleanup} before\n terminating with @code{_exit}.  The @code{EXIT_BODY} macro is\n-only needed if neither @code{HAVE_ATEXIT} nor\n-@code{INIT_SECTION_ASM_OP} are defined.\n+only needed if @code{NEED_ATEXIT} is defined and @code{ON_EXIT} is not\n+defined.\n \n @findex INSN_SETS_ARE_DELAYED\n @item INSN_SETS_ARE_DELAYED (@var{insn})"}]}