{"sha": "67eb28c8b8081b781c04e368766dab06fa13ed15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdlYjI4YzhiODA4MWI3ODFjMDRlMzY4NzY2ZGFiMDZmYTEzZWQxNQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2012-06-21T18:47:01Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2012-06-21T18:47:01Z"}, "message": "PR 39654 FTELL intrinsic function return type.\n\nfrontend ChangeLog:\n\n2012-06-21  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/39654\n\t* iresolve.c (gfc_resolve_ftell): Fix result kind and use new\n\tlibrary function.\n\n\nlibrary ChangeLog:\n\n2012-06-21  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/39654\n\t* io/intrinsics.c (ftell2): New function.\n\t* gfortran.map (_gfortran_ftell2): Export function.\n\nFrom-SVN: r188858", "tree": {"sha": "59aa2323ea68faca7af3c3ce061a65ad40e8ebb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59aa2323ea68faca7af3c3ce061a65ad40e8ebb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67eb28c8b8081b781c04e368766dab06fa13ed15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67eb28c8b8081b781c04e368766dab06fa13ed15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67eb28c8b8081b781c04e368766dab06fa13ed15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67eb28c8b8081b781c04e368766dab06fa13ed15/comments", "author": null, "committer": null, "parents": [{"sha": "5175cbafd2640d15304558c02e66642aa94e34b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5175cbafd2640d15304558c02e66642aa94e34b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5175cbafd2640d15304558c02e66642aa94e34b5"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "f3265721de8c7b84993845b86526176231174bea", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67eb28c8b8081b781c04e368766dab06fa13ed15/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67eb28c8b8081b781c04e368766dab06fa13ed15/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=67eb28c8b8081b781c04e368766dab06fa13ed15", "patch": "@@ -1,3 +1,9 @@\n+2012-06-21  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/39654\n+\t* iresolve.c (gfc_resolve_ftell): Fix result kind and use new\n+\tlibrary function.\n+\n 2012-06-18  Tobias Burnus  <burnus@net-b.de>\n \n \t* intrinsic.h (gfc_resolve_rank): New prototype."}, {"sha": "6d1e8b2a1766e9263b3556b08d31964e2130d194", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67eb28c8b8081b781c04e368766dab06fa13ed15/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67eb28c8b8081b781c04e368766dab06fa13ed15/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=67eb28c8b8081b781c04e368766dab06fa13ed15", "patch": "@@ -2480,7 +2480,7 @@ gfc_resolve_ftell (gfc_expr *f, gfc_expr *u)\n   gfc_clear_ts (&ts);\n \n   f->ts.type = BT_INTEGER;\n-  f->ts.kind = gfc_index_integer_kind;\n+  f->ts.kind = gfc_intio_kind;\n   if (u->ts.kind != gfc_c_int_kind)\n     {\n       ts.type = BT_INTEGER;\n@@ -2490,7 +2490,7 @@ gfc_resolve_ftell (gfc_expr *f, gfc_expr *u)\n       gfc_convert_type (u, &ts, 2);\n     }\n \n-  f->value.function.name = gfc_get_string (PREFIX (\"ftell\"));\n+  f->value.function.name = gfc_get_string (PREFIX (\"ftell2\"));\n }\n \n "}, {"sha": "96a8e8ba42af46fe4b47be1e2dbafd87c49b05b9", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67eb28c8b8081b781c04e368766dab06fa13ed15/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67eb28c8b8081b781c04e368766dab06fa13ed15/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=67eb28c8b8081b781c04e368766dab06fa13ed15", "patch": "@@ -1,3 +1,9 @@\n+2012-06-21  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/39654\n+\t* io/intrinsics.c (ftell2): New function.\n+\t* gfortran.map (_gfortran_ftell2): Export function.\n+\n 2012-06-04  Robert Mason  <rbmj@verizon.net>\n \t    Janne Blomqvist  <jb@gcc.gnu.org>\n "}, {"sha": "217d2a3cf51a76966617ade0aabd945227f98a14", "filename": "libgfortran/gfortran.map", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67eb28c8b8081b781c04e368766dab06fa13ed15/libgfortran%2Fgfortran.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67eb28c8b8081b781c04e368766dab06fa13ed15/libgfortran%2Fgfortran.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgfortran.map?ref=67eb28c8b8081b781c04e368766dab06fa13ed15", "patch": "@@ -1189,6 +1189,11 @@ GFORTRAN_1.4 {\n     _gfortran_eoshift2_16_char4;\n } GFORTRAN_1.3; \n \n+GFORTRAN_1.5 {\n+  global:\n+    _gfortran_ftell2;\n+} GFORTRAN_1.4; \n+\n F2C_1.0 {\n   global:\n     _gfortran_f2c_specific__abs_c4;"}, {"sha": "9abadae43739583eb1a69b0a54b49e33fbf3c429", "filename": "libgfortran/io/intrinsics.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67eb28c8b8081b781c04e368766dab06fa13ed15/libgfortran%2Fio%2Fintrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67eb28c8b8081b781c04e368766dab06fa13ed15/libgfortran%2Fio%2Fintrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fintrinsics.c?ref=67eb28c8b8081b781c04e368766dab06fa13ed15", "patch": "@@ -272,6 +272,10 @@ gf_ftell (int unit)\n   return ret;\n }\n \n+\n+/* Here is the ftell function with an incorrect return type; retained\n+   due to ABI compatibility.  */\n+\n extern size_t PREFIX(ftell) (int *);\n export_proto_np(PREFIX(ftell));\n \n@@ -281,6 +285,22 @@ PREFIX(ftell) (int * unit)\n   return gf_ftell (*unit);\n }\n \n+\n+/* Here is the ftell function with the correct return type, ensuring\n+   that large files can be supported as long as the target supports\n+   large integers; as of 4.8 the FTELL intrinsic function will call\n+   this one instead of the old ftell above.  */\n+\n+extern GFC_IO_INT PREFIX(ftell2) (int *);\n+export_proto_np(PREFIX(ftell2));\n+\n+GFC_IO_INT\n+PREFIX(ftell2) (int * unit)\n+{\n+  return gf_ftell (*unit);\n+}\n+\n+\n #define FTELL_SUB(kind) \\\n   extern void ftell_i ## kind ## _sub (int *, GFC_INTEGER_ ## kind *); \\\n   export_proto(ftell_i ## kind ## _sub); \\"}]}