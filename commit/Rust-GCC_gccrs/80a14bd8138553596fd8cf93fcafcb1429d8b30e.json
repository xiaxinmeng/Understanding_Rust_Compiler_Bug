{"sha": "80a14bd8138553596fd8cf93fcafcb1429d8b30e", "node_id": "C_kwDOANBUbNoAKDgwYTE0YmQ4MTM4NTUzNTk2ZmQ4Y2Y5M2ZjYWZjYjE0MjlkOGIzMGU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-06-27T08:07:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-27T08:07:14Z"}, "message": "Merge #1339\n\n1339: Add `line!` macro r=CohenArthur a=graphman65\n\n\n\nCo-authored-by: Sebastien Lacoste <dev@graphman.fr>", "tree": {"sha": "a914a378e9882ff9d8109f97a1819a2c7c1403bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a914a378e9882ff9d8109f97a1819a2c7c1403bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80a14bd8138553596fd8cf93fcafcb1429d8b30e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiuWUyCRBK7hj4Ov3rIwAAalgIAD/+GfyqU+Zhg379KHJbCtSJ\nifvejixhBEuUOx1S4p04FQe+jQhrrdaoelKCmB0BwUAjhGOBwcSePVIS1bIF/goS\nq4AdYm3rE3zXYSrr+ebEBoUo3rtNHv//U7965rKy9DJKAUEsL0/87PDTdSlh/5Xw\nZVpP2XCF94eQuKWeAh4zQ1gANukJLOMZ1M92u9jaaRfaPLvOTUvIWH+fx/lIgaEg\n5B5+qhGjquX3mrwHkc5VWWGtdBgZcbV9RnPShHlORyW2/gDb4DTOUFJorY5ZBo5h\nc+HN80WXrtFJUb77jK0eayqEQ3qRbzgRoQbBFe4LmkVqBWL2dcjv4hju072OTO4=\n=OH6b\n-----END PGP SIGNATURE-----\n", "payload": "tree a914a378e9882ff9d8109f97a1819a2c7c1403bd\nparent 5bab921fc018bfaae00d2739e5c4e5912673823a\nparent 40ad6b290af7d4e2e4d4a35a759d1b21d60423f5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1656317234 +0000\ncommitter GitHub <noreply@github.com> 1656317234 +0000\n\nMerge #1339\n\n1339: Add `line!` macro r=CohenArthur a=graphman65\n\n\n\nCo-authored-by: Sebastien Lacoste <dev@graphman.fr>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a14bd8138553596fd8cf93fcafcb1429d8b30e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80a14bd8138553596fd8cf93fcafcb1429d8b30e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a14bd8138553596fd8cf93fcafcb1429d8b30e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bab921fc018bfaae00d2739e5c4e5912673823a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bab921fc018bfaae00d2739e5c4e5912673823a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bab921fc018bfaae00d2739e5c4e5912673823a"}, {"sha": "40ad6b290af7d4e2e4d4a35a759d1b21d60423f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ad6b290af7d4e2e4d4a35a759d1b21d60423f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40ad6b290af7d4e2e4d4a35a759d1b21d60423f5"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "2b175fcd11154d9ee6bc9ec18a3cfd4e87988426", "filename": "gcc/rust/expand/rust-macro-builtins.cc", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a14bd8138553596fd8cf93fcafcb1429d8b30e/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a14bd8138553596fd8cf93fcafcb1429d8b30e/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc?ref=80a14bd8138553596fd8cf93fcafcb1429d8b30e", "patch": "@@ -164,13 +164,12 @@ MacroBuiltin::file (Location invoc_locus, AST::MacroInvocData &invoc)\n \n   return AST::ASTFragment ({file_str});\n }\n+\n AST::ASTFragment\n MacroBuiltin::column (Location invoc_locus, AST::MacroInvocData &invoc)\n {\n   auto current_column\n     = Session::get_instance ().linemap->location_to_column (invoc_locus);\n-  // auto column_no\n-  //   = AST::SingleASTNode (make_string (invoc_locus, current_column));\n \n   auto column_no = AST::SingleASTNode (std::unique_ptr<AST::Expr> (\n     new AST::LiteralExpr (std::to_string (current_column), AST::Literal::INT,\n@@ -468,4 +467,17 @@ MacroBuiltin::include (Location invoc_locus, AST::MacroInvocData &invoc)\n   return AST::ASTFragment (nodes);\n }\n \n+AST::ASTFragment\n+MacroBuiltin::line (Location invoc_locus, AST::MacroInvocData &invoc)\n+{\n+  auto current_line\n+    = Session::get_instance ().linemap->location_to_line (invoc_locus);\n+\n+  auto line_no = AST::SingleASTNode (std::unique_ptr<AST::Expr> (\n+    new AST::LiteralExpr (std::to_string (current_line), AST::Literal::INT,\n+\t\t\t  PrimitiveCoreType::CORETYPE_U32, {}, invoc_locus)));\n+\n+  return AST::ASTFragment ({line_no});\n+}\n+\n } // namespace Rust"}, {"sha": "91f3727d450ce0de336860f8347bb49ee1f95ad4", "filename": "gcc/rust/expand/rust-macro-builtins.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a14bd8138553596fd8cf93fcafcb1429d8b30e/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a14bd8138553596fd8cf93fcafcb1429d8b30e/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h?ref=80a14bd8138553596fd8cf93fcafcb1429d8b30e", "patch": "@@ -98,6 +98,9 @@ class MacroBuiltin\n \n   static AST::ASTFragment include (Location invoc_locus,\n \t\t\t\t   AST::MacroInvocData &invoc);\n+\n+  static AST::ASTFragment line (Location invoc_locus,\n+\t\t\t\tAST::MacroInvocData &invoc);\n };\n } // namespace Rust\n "}, {"sha": "8b3be5c9e8dedac1dcb4f5487b91390879faa4ba", "filename": "gcc/rust/util/rust-hir-map.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a14bd8138553596fd8cf93fcafcb1429d8b30e/gcc%2Frust%2Futil%2Frust-hir-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a14bd8138553596fd8cf93fcafcb1429d8b30e/gcc%2Frust%2Futil%2Frust-hir-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.cc?ref=80a14bd8138553596fd8cf93fcafcb1429d8b30e", "patch": "@@ -831,6 +831,7 @@ Mappings::insert_macro_def (AST::MacroRulesDefinition *macro)\n     builtin_macros = {\n       {\"assert\", MacroBuiltin::assert},\n       {\"file\", MacroBuiltin::file},\n+      {\"line\", MacroBuiltin::line},\n       {\"column\", MacroBuiltin::column},\n       {\"include_bytes\", MacroBuiltin::include_bytes},\n       {\"include_str\", MacroBuiltin::include_str},"}, {"sha": "873054dd6cbdefb6704634310c4e6da0e62935f4", "filename": "gcc/testsuite/rust/execute/torture/builtin_macro_line.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a14bd8138553596fd8cf93fcafcb1429d8b30e/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fbuiltin_macro_line.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a14bd8138553596fd8cf93fcafcb1429d8b30e/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fbuiltin_macro_line.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fbuiltin_macro_line.rs?ref=80a14bd8138553596fd8cf93fcafcb1429d8b30e", "patch": "@@ -0,0 +1,22 @@\n+// { dg-output \"15\\n18\\n\" }\n+extern \"C\" {\n+    fn printf(fmt: *const i8, ...);\n+}\n+\n+fn print(s: u32) {\n+    printf(\"%u\\n\\0\" as *const str as *const i8, s);\n+}\n+\n+macro_rules! line {\n+    () => {{}};\n+}\n+\n+fn main() -> i32 {\n+    let a = line!();\n+    print(a);\n+\n+    let b = line!();\n+    print(b);\n+\n+    0\n+}"}]}