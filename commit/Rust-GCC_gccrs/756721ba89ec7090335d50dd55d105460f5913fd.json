{"sha": "756721ba89ec7090335d50dd55d105460f5913fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU2NzIxYmE4OWVjNzA5MDMzNWQ1MGRkNTVkMTA1NDYwZjU5MTNmZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-01-18T11:32:53Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-01-18T11:32:53Z"}, "message": "Bump version of __gcov_indirect_call_profiler function as there was ABI change.\n\n2019-01-18  Martin Liska  <mliska@suse.cz>\n\n\t* params.def: Fix comment.\n\t* tree-profile.c (gimple_init_gcov_profiler): Bump function\n\tname.\n\t(gimple_gen_ic_func_profiler): Likewise.\n2019-01-18  Martin Liska  <mliska@suse.cz>\n\n\t* gcc.dg/no_profile_instrument_function-attr-1.c: Update\n\texpected function name.\n2019-01-18  Martin Liska  <mliska@suse.cz>\n\n\t* libgcov-profiler.c (__gcov_indirect_call_profiler_v2): Rename\n\tto ...\n\t(__gcov_indirect_call_profiler_v3): ... this.\n\t* libgcov.h (__gcov_indirect_call_profiler_v2): Likewise.\n\t(__gcov_indirect_call_profiler_v3): Likewise.\n\t* Makefile.in: Bump function name.\n\nFrom-SVN: r268071", "tree": {"sha": "1c7d09b637ba36c4545d4194b0d0e8103b2410d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c7d09b637ba36c4545d4194b0d0e8103b2410d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/756721ba89ec7090335d50dd55d105460f5913fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756721ba89ec7090335d50dd55d105460f5913fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/756721ba89ec7090335d50dd55d105460f5913fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756721ba89ec7090335d50dd55d105460f5913fd/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d273c40a5568a1e2d048209826bdb778b4b75bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d273c40a5568a1e2d048209826bdb778b4b75bde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d273c40a5568a1e2d048209826bdb778b4b75bde"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "80437a01c0b05f752cf244a3d1174614c6ae0e9e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756721ba89ec7090335d50dd55d105460f5913fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756721ba89ec7090335d50dd55d105460f5913fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=756721ba89ec7090335d50dd55d105460f5913fd", "patch": "@@ -1,3 +1,10 @@\n+2019-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* params.def: Fix comment.\n+\t* tree-profile.c (gimple_init_gcov_profiler): Bump function\n+\tname.\n+\t(gimple_gen_ic_func_profiler): Likewise.\n+\n 2019-01-18  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n         * config/aarch64/aarch64-opts.h (enum stack_protector_guard): New"}, {"sha": "e5553af63c43faf508583e72e5257cfd65e5563b", "filename": "gcc/params.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756721ba89ec7090335d50dd55d105460f5913fd/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756721ba89ec7090335d50dd55d105460f5913fd/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=756721ba89ec7090335d50dd55d105460f5913fd", "patch": "@@ -995,7 +995,7 @@ DEFPARAM (PARAM_PROFILE_FUNC_INTERNAL_ID,\n \n /* When the parameter is 1, track the most frequent N target\n    addresses in indirect-call profile. This disables\n-   indirect_call_profiler_v2 which tracks single target.  */\n+   indirect_call_profiler_v3 which tracks single target.  */\n DEFPARAM (PARAM_INDIR_CALL_TOPN_PROFILE,\n \t  \"indir-call-topn-profile\",\n \t  \"Track top N target addresses in indirect-call profile.\","}, {"sha": "0b9bb75fe5ce6e4b6c3780d6568ee9b48036d61a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756721ba89ec7090335d50dd55d105460f5913fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756721ba89ec7090335d50dd55d105460f5913fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=756721ba89ec7090335d50dd55d105460f5913fd", "patch": "@@ -1,3 +1,8 @@\n+2019-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/no_profile_instrument_function-attr-1.c: Update\n+\texpected function name.\n+\n 2019-01-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/86214"}, {"sha": "41d745532fa90154107a4f7e683b18487beca732", "filename": "gcc/testsuite/gcc.dg/no_profile_instrument_function-attr-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756721ba89ec7090335d50dd55d105460f5913fd/gcc%2Ftestsuite%2Fgcc.dg%2Fno_profile_instrument_function-attr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756721ba89ec7090335d50dd55d105460f5913fd/gcc%2Ftestsuite%2Fgcc.dg%2Fno_profile_instrument_function-attr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fno_profile_instrument_function-attr-1.c?ref=756721ba89ec7090335d50dd55d105460f5913fd", "patch": "@@ -19,6 +19,6 @@ int main ()\n }\n \n /* { dg-final { scan-tree-dump-times \"__gcov0\\\\.main.* = PROF_edge_counter\" 1 \"optimized\"} } */\n-/* { dg-final { scan-tree-dump-times \"__gcov_indirect_call_profiler_v2\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"__gcov_indirect_call_profiler_v3\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"__gcov_time_profiler_counter = \" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"__gcov_init\" 1 \"optimized\" } } */"}, {"sha": "1c3034aac10c56bd69838da33670f83ca674580b", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756721ba89ec7090335d50dd55d105460f5913fd/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756721ba89ec7090335d50dd55d105460f5913fd/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=756721ba89ec7090335d50dd55d105460f5913fd", "patch": "@@ -186,7 +186,7 @@ gimple_init_gcov_profiler (void)\n \t\t\t\t\t  gcov_type_node,\n \t\t\t\t\t  ptr_type_node,\n \t\t\t\t\t  NULL_TREE);\n-      profiler_fn_name = \"__gcov_indirect_call_profiler_v2\";\n+      profiler_fn_name = \"__gcov_indirect_call_profiler_v3\";\n       if (PARAM_VALUE (PARAM_INDIR_CALL_TOPN_PROFILE))\n \tprofiler_fn_name = \"__gcov_indirect_call_topn_profiler\";\n \n@@ -459,9 +459,9 @@ gimple_gen_ic_func_profiler (void)\n   /* Insert code:\n \n      if (__gcov_indirect_call_callee != NULL)\n-       __gcov_indirect_call_profiler_v2 (profile_id, &current_function_decl);\n+       __gcov_indirect_call_profiler_v3 (profile_id, &current_function_decl);\n \n-     The function __gcov_indirect_call_profiler_v2 is responsible for\n+     The function __gcov_indirect_call_profiler_v3 is responsible for\n      resetting __gcov_indirect_call_callee to NULL.  */\n \n   gimple_stmt_iterator gsi = gsi_start_bb (cond_bb);"}, {"sha": "9d157c2afc30d5fb474fef758d9cfb678d995e4e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756721ba89ec7090335d50dd55d105460f5913fd/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756721ba89ec7090335d50dd55d105460f5913fd/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=756721ba89ec7090335d50dd55d105460f5913fd", "patch": "@@ -1,3 +1,12 @@\n+2019-01-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* libgcov-profiler.c (__gcov_indirect_call_profiler_v2): Rename\n+\tto ...\n+\t(__gcov_indirect_call_profiler_v3): ... this.\n+\t* libgcov.h (__gcov_indirect_call_profiler_v2): Likewise.\n+\t(__gcov_indirect_call_profiler_v3): Likewise.\n+\t* Makefile.in: Bump function name.\n+\n 2019-01-18  Martin Liska  <mliska@suse.cz>\n \n \t* libgcov-driver.c (GCOV_PROF_PREFIX): Define."}, {"sha": "ea390a5bbeae77aa60ecb0ff5540021c32f2f968", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756721ba89ec7090335d50dd55d105460f5913fd/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756721ba89ec7090335d50dd55d105460f5913fd/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=756721ba89ec7090335d50dd55d105460f5913fd", "patch": "@@ -899,7 +899,7 @@ LIBGCOV_PROFILER = _gcov_interval_profiler\t\t\t\t\\\n \t_gcov_average_profiler_atomic\t\t\t\t\t\\\n \t_gcov_ior_profiler\t\t\t\t\t\t\\\n \t_gcov_ior_profiler_atomic\t\t\t\t\t\\\n-\t_gcov_indirect_call_profiler_v2\t\t\t\t\t\\\n+\t_gcov_indirect_call_profiler_v3\t\t\t\t\t\\\n \t_gcov_time_profiler\t\t\t\t\t\t\\\n \t_gcov_indirect_call_topn_profiler\n LIBGCOV_INTERFACE = _gcov_dump _gcov_flush _gcov_fork\t\t\t\\"}, {"sha": "7116330252bc226a9b97d455ffb26c8cf9cdca61", "filename": "libgcc/libgcov-profiler.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756721ba89ec7090335d50dd55d105460f5913fd/libgcc%2Flibgcov-profiler.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756721ba89ec7090335d50dd55d105460f5913fd/libgcc%2Flibgcov-profiler.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-profiler.c?ref=756721ba89ec7090335d50dd55d105460f5913fd", "patch": "@@ -296,7 +296,7 @@ __gcov_indirect_call_topn_profiler (gcov_type value, void* cur_func)\n }\n #endif\n \n-#ifdef L_gcov_indirect_call_profiler_v2\n+#ifdef L_gcov_indirect_call_profiler_v3\n \n /* These two variables are used to actually track caller and callee.  Keep\n    them in TLS memory so races are not common (they are written to often).\n@@ -318,7 +318,7 @@ struct indirect_call_tuple __gcov_indirect_call;\n \n /* Tries to determine the most common value among its inputs. */\n void\n-__gcov_indirect_call_profiler_v2 (gcov_type value, void* cur_func)\n+__gcov_indirect_call_profiler_v3 (gcov_type value, void* cur_func)\n {\n   /* If the C++ virtual tables contain function descriptors then one\n      function may have multiple descriptors and we need to dereference"}, {"sha": "993db8fb057cfcb3d1a66890d98f44d7baefa55a", "filename": "libgcc/libgcov.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756721ba89ec7090335d50dd55d105460f5913fd/libgcc%2Flibgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756721ba89ec7090335d50dd55d105460f5913fd/libgcc%2Flibgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov.h?ref=756721ba89ec7090335d50dd55d105460f5913fd", "patch": "@@ -278,7 +278,7 @@ extern void __gcov_pow2_profiler (gcov_type *, gcov_type);\n extern void __gcov_pow2_profiler_atomic (gcov_type *, gcov_type);\n extern void __gcov_one_value_profiler (gcov_type *, gcov_type);\n extern void __gcov_one_value_profiler_atomic (gcov_type *, gcov_type);\n-extern void __gcov_indirect_call_profiler_v2 (gcov_type, void *);\n+extern void __gcov_indirect_call_profiler_v3 (gcov_type, void *);\n extern void __gcov_time_profiler (gcov_type *);\n extern void __gcov_time_profiler_atomic (gcov_type *);\n extern void __gcov_average_profiler (gcov_type *, gcov_type);"}]}