{"sha": "beeab17c6ed0733203002932c08d1d3f3fe5d053", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVlYWIxN2M2ZWQwNzMzMjAzMDAyOTMyYzA4ZDFkM2YzZmU1ZDA1Mw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-08-22T12:43:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-08-22T12:43:49Z"}, "message": "re PR middle-end/36548 (remainder gives the wrong result for wrapping case with unsigned types)\n\n2008-08-22  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/36548\n\tPR middle-end/37125\n\t* fold-const.c (extract_muldiv_1): Optimize (X * C1) % C2 only\n\tif the multiplication does not overflow.\n\n\t* gcc.c-torture/execute/pr37125.c: New testcase.\n\nFrom-SVN: r139450", "tree": {"sha": "3d71422e6cc09e286c8804aef278b4add145989a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d71422e6cc09e286c8804aef278b4add145989a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beeab17c6ed0733203002932c08d1d3f3fe5d053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beeab17c6ed0733203002932c08d1d3f3fe5d053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beeab17c6ed0733203002932c08d1d3f3fe5d053", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beeab17c6ed0733203002932c08d1d3f3fe5d053/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da2f5d14dfc05f9a9527ea3e0700a345857a83bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da2f5d14dfc05f9a9527ea3e0700a345857a83bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da2f5d14dfc05f9a9527ea3e0700a345857a83bc"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "592b28cd5c8fc480575337a3382622446d4b73f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beeab17c6ed0733203002932c08d1d3f3fe5d053/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beeab17c6ed0733203002932c08d1d3f3fe5d053/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=beeab17c6ed0733203002932c08d1d3f3fe5d053", "patch": "@@ -1,3 +1,10 @@\n+2008-08-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/36548\n+\tPR middle-end/37125\n+\t* fold-const.c (extract_muldiv_1): Optimize (X * C1) % C2 only\n+\tif the multiplication does not overflow.\n+\n 2008-08-21  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* c-ppoutput.c (init_pp_output): Initialize src_line to 1."}, {"sha": "e6769a650a8836b3af76c343cca3b5a0a2241de4", "filename": "gcc/fold-const.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beeab17c6ed0733203002932c08d1d3f3fe5d053/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beeab17c6ed0733203002932c08d1d3f3fe5d053/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=beeab17c6ed0733203002932c08d1d3f3fe5d053", "patch": "@@ -5930,9 +5930,20 @@ extract_muldiv_1 (tree t, tree c, enum tree_code code, tree wide_type,\n \t (C * 8) % 4 since we know that's zero.  */\n       if ((code == TRUNC_MOD_EXPR || code == CEIL_MOD_EXPR\n \t   || code == FLOOR_MOD_EXPR || code == ROUND_MOD_EXPR)\n+\t  /* If the multiplication can overflow we cannot optimize this.\n+\t     ???  Until we can properly mark individual operations as\n+\t     not overflowing we need to treat sizetype special here as\n+\t     stor-layout relies on this opimization to make\n+\t     DECL_FIELD_BIT_OFFSET always a constant.  */\n+\t  && (TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (t))\n+\t      || (TREE_CODE (TREE_TYPE (t)) == INTEGER_TYPE\n+\t\t  && TYPE_IS_SIZETYPE (TREE_TYPE (t))))\n \t  && TREE_CODE (TREE_OPERAND (t, 1)) == INTEGER_CST\n \t  && integer_zerop (const_binop (TRUNC_MOD_EXPR, op1, c, 0)))\n-\treturn omit_one_operand (type, integer_zero_node, op0);\n+\t{\n+\t  *strict_overflow_p = true;\n+\t  return omit_one_operand (type, integer_zero_node, op0);\n+\t}\n \n       /* ... fall through ...  */\n "}, {"sha": "061c21962fc135866496e0bef8b337cadaf3b723", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beeab17c6ed0733203002932c08d1d3f3fe5d053/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beeab17c6ed0733203002932c08d1d3f3fe5d053/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=beeab17c6ed0733203002932c08d1d3f3fe5d053", "patch": "@@ -1,3 +1,9 @@\n+2008-08-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/36548\n+\tPR middle-end/37125\n+\t* gcc.c-torture/execute/pr37125.c: New testcase.\n+\n 2008-08-22  Daniel Kraft  <d@domob.eu>\n \n \t* gfortran.dg/used_before_typed_4.f90: New test."}, {"sha": "f29209eb7aadf2cc913efd0aff477e81bb6143ed", "filename": "gcc/testsuite/gcc.c-torture/execute/pr37125.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beeab17c6ed0733203002932c08d1d3f3fe5d053/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr37125.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beeab17c6ed0733203002932c08d1d3f3fe5d053/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr37125.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr37125.c?ref=beeab17c6ed0733203002932c08d1d3f3fe5d053", "patch": "@@ -0,0 +1,23 @@\n+extern void abort (void);\n+\n+static inline unsigned int\n+mod_rhs(int rhs)\n+{\n+  if (rhs == 0) return 1;\n+  return rhs;\n+}\n+\n+void func_44 (unsigned int p_45);\n+void func_44 (unsigned int p_45)\n+{\n+  if (!((p_45 * -9) % mod_rhs (-9))) {\n+      abort();\n+  }\n+}\n+\n+int main (void)\n+{\n+  func_44 (2);\n+  return 0;\n+}\n+"}]}