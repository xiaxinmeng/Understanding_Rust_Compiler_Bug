{"sha": "b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRlZjhhYWMzMGU3YzE3NzU2ZDZhMWFkOGNiZDZjOTE0ZTk2MGJiNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-18T15:06:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-18T15:06:51Z"}, "message": "re PR c++/23372 (Temporary aggregate copy not elided when passing parameters by value)\n\n\tPR c++/23372\n\t* gimplify.c (gimplify_arg): Strip redundant TARGET_EXPR.\n\nFrom-SVN: r171146", "tree": {"sha": "02f20ae0754332e0eef01c0e3956f0a4e49f08a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02f20ae0754332e0eef01c0e3956f0a4e49f08a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82d3711899283500f82e917649cd3dc0457ba1a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d3711899283500f82e917649cd3dc0457ba1a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82d3711899283500f82e917649cd3dc0457ba1a1"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "712eefe8f0576a65a83e722345752aedd18222d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4", "patch": "@@ -1,3 +1,8 @@\n+2011-03-18  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/23372\n+\t* gimplify.c (gimplify_arg): Strip redundant TARGET_EXPR.\n+\n 2011-03-18  Richard Guenther  <rguenther@suse.de>\n \n \t* doc/install.texi (--enable-gold): Remove."}, {"sha": "0b314a068c393a20d1ebf5e7f6658b2f49453e43", "filename": "gcc/gimplify.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4", "patch": "@@ -2255,7 +2255,17 @@ gimplify_arg (tree *arg_p, gimple_seq *pre_p, location_t call_location)\n   if (is_gimple_reg_type (TREE_TYPE (*arg_p)))\n     test = is_gimple_val, fb = fb_rvalue;\n   else\n-    test = is_gimple_lvalue, fb = fb_either;\n+    {\n+      test = is_gimple_lvalue, fb = fb_either;\n+      /* Also strip a TARGET_EXPR that would force an extra copy.  */\n+      if (TREE_CODE (*arg_p) == TARGET_EXPR)\n+\t{\n+\t  tree init = TARGET_EXPR_INITIAL (*arg_p);\n+\t  if (init\n+\t      && !VOID_TYPE_P (TREE_TYPE (init)))\n+\t    *arg_p = init;\n+\t}\n+    }\n \n   /* If this is a variable sized type, we must remember the size.  */\n   maybe_with_size_expr (arg_p);"}, {"sha": "b9c7dd844000bebfc65712194daebee4dd5540e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4", "patch": "@@ -1,5 +1,7 @@\n 2011-03-18  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/opt/pr23372.C: New.\n+\n \t* g++.dg/ext/attrib32.C: Expect errors on the two-names case.\n \n 2011-03-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>"}, {"sha": "9be4c9c568db153b5f0cc58bcd7f461c48b7aa9b", "filename": "gcc/testsuite/g++.dg/opt/pr23372.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr23372.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr23372.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr23372.C?ref=b4ef8aac30e7c17756d6a1ad8cbd6c914e960bb4", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/23372\n+// { dg-options -fdump-tree-gimple }\n+\n+// There shouldn't be an assignment to a temporary in the GIMPLE,\n+// as that represents a redundant copy.\n+// { dg-final { scan-tree-dump-not \"=\" gimple } }\n+\n+struct A {\n+  int a[1000];\n+  //A(A const &);\n+};\n+void f(A);\n+void g(A *a) { f(*a); }\n+\n+// { dg-final { cleanup-tree-dump gimple } }"}]}