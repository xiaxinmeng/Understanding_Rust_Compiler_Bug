{"sha": "a8e68029244bf2bcafbb82c7419438d185dc4c5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThlNjgwMjkyNDRiZjJiY2FmYmI4MmM3NDE5NDM4ZDE4NWRjNGM1ZA==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2004-11-18T01:07:18Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-18T01:07:18Z"}, "message": "configure.ac (i[34567]86-*-solaris2.1[0-9]*): Set need_64bit_hwint=yes.\n\nlibcpp:\n2004-11-18  Daniel Jacobowitz  <dan@codesourcery.com>\n            Mark Mitchell  <mark@codesourcery.com>\n\n\t* configure.ac (i[34567]86-*-solaris2.1[0-9]*): Set\n\tneed_64bit_hwint=yes.\n\t* configure: Regenerate.\n\ngcc:\n2004-11-18  Daniel Jacobowitz  <dan@codesourcery.com>\n            Mark Mitchell  <mark@codesourcery.com>\n\n\t* config/i386/sol2-10.h, config/i386/t-sol2-10: New files.\n\t* config/i386/i386.c (i386_solaris_elf_named_section): New\n\tfunction.\n\t* config.gcc (i[34567]86-*-solaris2*): Handle Solaris 2.10.\n\t* config/i386/sol2.h (ASM_PREFERRED_EH_DATA_FORMAT): Handle\n\t64-bit.\n\t(ASM_QUAD): Don't undefine for biarch targets.\n\t* config/i386/t-sol2: Introduce multilib support.\n\ngcc/testsuite:\n2004-11-18  Daniel Jacobowitz  <dan@codesourcery.com>\n            Mark Mitchell  <mark@codesourcery.com>\n\n\t* testsuite/gcc.dg/pragma-init-fini-2.c: New test.\n\nCo-Authored-By: Mark Mitchell <mark@codesourcery.com>\n\nFrom-SVN: r90839", "tree": {"sha": "f359cc24690133850cf3bf16ec1173672b262e12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f359cc24690133850cf3bf16ec1173672b262e12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8e68029244bf2bcafbb82c7419438d185dc4c5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8e68029244bf2bcafbb82c7419438d185dc4c5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8e68029244bf2bcafbb82c7419438d185dc4c5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8e68029244bf2bcafbb82c7419438d185dc4c5d/comments", "author": null, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1990f69ebdc902f9a888b094f32b9a408790bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1990f69ebdc902f9a888b094f32b9a408790bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1990f69ebdc902f9a888b094f32b9a408790bcf"}], "stats": {"total": 223, "additions": 206, "deletions": 17}, "files": [{"sha": "310f99b414e51c58238c97a21c9a74a2fac13665", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -1,3 +1,15 @@\n+2004-11-18  Daniel Jacobowitz  <dan@codesourcery.com>\n+            Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* config/i386/sol2-10.h, config/i386/t-sol2-10: New files.\n+\t* config/i386/i386.c (i386_solaris_elf_named_section): New\n+\tfunction.\n+\t* config.gcc (i[34567]86-*-solaris2*): Handle Solaris 2.10.\n+\t* config/i386/sol2.h (ASM_PREFERRED_EH_DATA_FORMAT): Handle\n+\t64-bit.\n+\t(ASM_QUAD): Don't undefine for biarch targets.\n+\t* config/i386/t-sol2: Introduce multilib support.\n+\n 2004-11-18  Ben Elliston  <bje@au.ibm.com>\n \n \t* cgraphunit.c: Replace \"it's\" with \"its\" and fix a typo."}, {"sha": "0a1e5f471addf290089e50af3e95767412395f86", "filename": "gcc/config.gcc", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -1020,6 +1020,7 @@ i[34567]86-*-solaris2*)\n \ttm_p_file=\"${tm_p_file} sol2-protos.h\"\n \tif test x$gnu_ld = xyes; then\n \t\ttmake_file=\"$tmake_file t-slibgcc-elf-ver\"\n+\t\ttm_defines=\"${tm_defines} TARGET_GNU_LD=1\"\n \telse\n \t\ttmake_file=\"$tmake_file t-slibgcc-sld\"\n \tfi\n@@ -1028,7 +1029,20 @@ i[34567]86-*-solaris2*)\n \t\ttm_file=\"$tm_file tm-dwarf2.h\"\n \t\t;;\n \tesac\n-\textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n+\tcase ${target} in\n+\t*-*-solaris2.1[0-9])\n+\t\ttm_file=\"${tm_file} i386/x86-64.h i386/sol2-10.h\"\n+\t\ttm_defines=\"${tm_defines} TARGET_BI_ARCH=1\"\n+\t\ttmake_file=\"$tmake_file i386/t-sol2-10\"\n+\t\tneed_64bit_hwint=yes\n+\t\t# Solaris 2.10 provides crt1.o, crti.o, crtn.o, and gcrt1.o as \n+\t\t# part of the base system.\n+\t\textra_parts=\"gmon.o crtbegin.o crtend.o\"\n+\t\t;;\n+\t*)\n+\t\textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n+\t\t;;\n+\tesac\n \tcase ${enable_threads}:${have_pthread_h}:${have_thread_h} in\n \t  \"\":yes:* | yes:yes:* ) thread_file=posix ;;\n \t  \"\":*:yes | yes:*:yes ) thread_file=solaris ;;"}, {"sha": "cb807b05ee50f2cde3b419f4680ae334bdf62cbe", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -927,6 +927,7 @@ static bool ix86_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode,\n #if defined (DO_GLOBAL_CTORS_BODY) && defined (HAS_INIT_SECTION)\n static void ix86_svr3_asm_out_constructor (rtx, int);\n #endif\n+static void i386_solaris_elf_named_section (const char *, unsigned int, tree);\n \n /* Register class used for passing given 64bit part of the argument.\n    These represent classes as documented by the PS ABI, with the exception\n@@ -15270,4 +15271,24 @@ void ix86_emit_i387_log1p (rtx op0, rtx op1)\n   emit_label (label2);\n }\n \n+/* Solaris named-section hook.  Parameters are as for\n+   named_section_real.  */\n+\n+static void\n+i386_solaris_elf_named_section (const char *name, unsigned int flags,\n+\t\t\t\ttree decl)\n+{\n+  /* With Binutils 2.15, the \"@unwind\" marker must be specified on\n+     every occurrence of the \".eh_frame\" section, not just the first\n+     one.  */\n+  if (TARGET_64BIT\n+      && strcmp (name, \".eh_frame\") == 0)\n+    {\n+      fprintf (asm_out_file, \"\\t.section\\t%s,\\\"%s\\\",@unwind\\n\", name,\n+\t       flags & SECTION_WRITE ? \"aw\" : \"a\");\n+      return;\n+    }\n+  default_elf_asm_named_section (name, flags, decl);\n+}\n+\n #include \"gt-i386.h\""}, {"sha": "3576678589b9bee7e7cc036ea23fe6794b9ef9c8", "filename": "gcc/config/i386/sol2-10.h", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig%2Fi386%2Fsol2-10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig%2Fi386%2Fsol2-10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-10.h?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -0,0 +1,99 @@\n+/* Solaris 10 configuration.\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Contributed by CodeSourcery, LLC.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#undef ASM_COMMENT_START\n+#define ASM_COMMENT_START \"/\"\n+\n+#undef ASM_SPEC\n+#define ASM_SPEC \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} \" \\\n+\t\t \"%{Wa,*:%*} %{m32:--32} %{m64:--64} -s %(asm_cpu)\"\n+\n+#undef NO_PROFILE_COUNTERS\n+\n+#undef MCOUNT_NAME\n+#define MCOUNT_NAME \"_mcount\"\n+\n+#undef WCHAR_TYPE\n+#define WCHAR_TYPE (TARGET_64BIT ? \"int\" : \"long int\")\n+#undef WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE 32\n+\n+#undef WINT_TYPE\n+#define WINT_TYPE (TARGET_64BIT ? \"int\" : \"long int\")\n+#undef WINT_TYPE_SIZE\n+#define WINT_TYPE_SIZE 32\n+\n+#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      if (flag_omit_frame_pointer == 2)\t\t\t\t\\\n+\tflag_omit_frame_pointer = 0;\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+#undef TARGET_SUBTARGET_DEFAULT\n+#define TARGET_SUBTARGET_DEFAULT (MASK_80387 | MASK_IEEE_FP\t\\\n+\t\t\t\t  | MASK_FLOAT_RETURNS\t\t\\\n+\t\t\t\t  | MASK_OMIT_LEAF_FRAME_POINTER)\n+\n+#define MULTILIB_DEFAULTS { \"m32\" }\n+\n+#undef LINK_ARCH64_SPEC_BASE\n+#define LINK_ARCH64_SPEC_BASE \\\n+  \"%{G:-G} \\\n+   %{YP,*} \\\n+   %{R*} \\\n+   %{compat-bsd: \\\n+     %{!YP,*:%{p|pg:-Y P,/usr/ucblib/64:/usr/lib/libp/64:/lib/64:/usr/lib/64} \\\n+             %{!p:%{!pg:-Y P,/usr/ucblib/64:/lib:/usr/lib/64}}} \\\n+             -R /usr/ucblib/64} \\\n+   %{!compat-bsd: \\\n+     %{!YP,*:%{p|pg:-Y P,/usr/lib/libp/64:/lib/64:/usr/lib/64} \\\n+             %{!p:%{!pg:-Y P,/lib/64:/usr/lib/64}}}}\"\n+\n+#undef LINK_ARCH64_SPEC\n+#define LINK_ARCH64_SPEC LINK_ARCH64_SPEC_BASE\n+\n+#ifdef TARGET_GNU_LD\n+#define TARGET_LD_EMULATION \"%{m64:-m elf_x86_64}%{!m64:-m elf_i386} \"\n+#else\n+#define TARGET_LD_EMULATION \"\"\n+#endif\n+\n+#undef LINK_ARCH_SPEC\n+#define LINK_ARCH_SPEC TARGET_LD_EMULATION \\\n+\t\t       \"%{m64:\" LINK_ARCH64_SPEC \"}%{!m64:\" LINK_ARCH32_SPEC \"}\"\n+\n+/* We do not need to search a special directory for startup files.  */\n+#undef MD_STARTFILE_PREFIX\n+\n+#undef TARGET_ASM_NAMED_SECTION\n+#define TARGET_ASM_NAMED_SECTION i386_solaris_elf_named_section\n+\n+/* In 32-bit mode, follow the SVR4 ABI definition; in 64-bit mode, use\n+   the AMD64 ABI definition.  */\n+#undef RETURN_IN_MEMORY\n+#define RETURN_IN_MEMORY(TYPE)\t\t\t\\\n+  (TARGET_64BIT \t\t\t\t\\\n+   ? ix86_return_in_memory (TYPE)\t\t\\\n+   : (TYPE_MODE (TYPE) == BLKmode\t\t\\\n+      || (VECTOR_MODE_P (TYPE_MODE (TYPE)) \t\\\n+\t  && int_size_in_bytes (TYPE) == 8)))"}, {"sha": "dd82d762a8624805fbbd60b92dd680b4a09d0d47", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -31,12 +31,13 @@ Boston, MA 02111-1307, USA.  */\n    it knows what it is doing.  */\n #define FORCE_CODE_SECTION_ALIGN  asm(ALIGN_ASM_OP \"16\");\n \n-/* Select a format to encode pointers in exception handling data.  CODE\n-   is 0 for data, 1 for code labels, 2 for function pointers.  GLOBAL is\n-   true if the symbol may be affected by dynamic relocations.  */\n+/* Old versions of the Solaris assembler can not handle the difference of\n+   labels in different sections, so force DW_EH_PE_datarel.  */\n #undef ASM_PREFERRED_EH_DATA_FORMAT\n #define ASM_PREFERRED_EH_DATA_FORMAT(CODE,GLOBAL)\t\t\t\\\n-  (flag_pic ? (GLOBAL ? DW_EH_PE_indirect : 0) | DW_EH_PE_datarel\t\\\n+  (flag_pic ? ((GLOBAL ? DW_EH_PE_indirect : 0)\t\t\t\t\\\n+\t       | (TARGET_64BIT ? DW_EH_PE_pcrel | DW_EH_PE_sdata4\t\\\n+\t\t  : DW_EH_PE_datarel))\t\t\t\t\t\\\n    : DW_EH_PE_absptr)\n \n /* Solaris 2/Intel as chokes on #line directives.  */\n@@ -63,8 +64,10 @@ Boston, MA 02111-1307, USA.  */\n #undef LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX \".\"\n \n-/* The Solaris assembler does not support .quad.  Do not use it.  */\n+/* The 32-bit Solaris assembler does not support .quad.  Do not use it.  */\n+#ifndef TARGET_BI_ARCH\n #undef ASM_QUAD\n+#endif\n \n /* The Solaris assembler wants a .local for non-exported aliases.  */\n #define ASM_OUTPUT_DEF_FROM_DECLS(FILE, DECL, TARGET)\t\\"}, {"sha": "0eec96f1f05d9cb4a843932eee0ea7c53226a5f4", "filename": "gcc/config/i386/t-sol2", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig%2Fi386%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig%2Fi386%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-sol2?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -1,24 +1,24 @@\n # gmon build rule:\n-gmon.o:\t$(srcdir)/config/i386/gmon-sol2.c $(GCC_PASSES) $(CONFIG_H)\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) \\\n-\t\t-c $(srcdir)/config/i386/gmon-sol2.c -o gmon.o\n+$(T)gmon.o:\t$(srcdir)/config/i386/gmon-sol2.c $(GCC_PASSES) $(CONFIG_H)\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) \\\n+\t\t-c $(srcdir)/config/i386/gmon-sol2.c -o $(T)gmon.o\n \n # Assemble startup files.\n # Apparently Sun believes that assembler files don't need comments, because no\n # single ASCII character is valid (tried them all).  So we manually strip out\n # the comments with sed.  This bug may only be in the Early Access releases.\n-gcrt1.o: $(srcdir)/config/i386/sol2-gc1.asm\n+$(T)gcrt1.o: $(srcdir)/config/i386/sol2-gc1.asm $(GCC_PASSES)\n \tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-gc1.asm >gcrt1.s\n-\t$(AS) -o gcrt1.o gcrt1.s\n-crt1.o: $(srcdir)/config/i386/sol2-c1.asm $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)gcrt1.o gcrt1.s\n+$(T)crt1.o: $(srcdir)/config/i386/sol2-c1.asm $(GCC_PASSES)\n \tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-c1.asm >crt1.s\n-\t$(GCC_FOR_TARGET) -c -o crt1.o crt1.s\n-crti.o: $(srcdir)/config/i386/sol2-ci.asm $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)crt1.o crt1.s\n+$(T)crti.o: $(srcdir)/config/i386/sol2-ci.asm $(GCC_PASSES)\n \tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-ci.asm >crti.s\n-\t$(GCC_FOR_TARGET) -c -o crti.o crti.s\n-crtn.o: $(srcdir)/config/i386/sol2-cn.asm $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)crti.o crti.s\n+$(T)crtn.o: $(srcdir)/config/i386/sol2-cn.asm $(GCC_PASSES)\n \tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-cn.asm >crtn.s\n-\t$(GCC_FOR_TARGET) -c -o crtn.o crtn.s\n+\t$(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) -c -o $(T)crtn.o crtn.s\n \n # We need to use -fPIC when we are using gcc to compile the routines in\n # crtstuff.c.  This is only really needed when we are going to use gcc/g++"}, {"sha": "b7f6df72289f418cbd568a8bb6849cc7bd6d2e93", "filename": "gcc/config/i386/t-sol2-10", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig%2Fi386%2Ft-sol2-10", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Fconfig%2Fi386%2Ft-sol2-10", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-sol2-10?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -0,0 +1,11 @@\n+MULTILIB_OPTIONS = m32/m64\n+MULTILIB_DIRNAMES = 32 64\n+MULTILIB_OSDIRNAMES = . 64\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib\n+\n+# GCC contains i386 assembler sources for some of the startfiles\n+# which aren't appropriate for amd64.  Just use the installed\n+# versions of: crt1.o crti.o crtn.o gcrt1.o\n+EXTRA_MULTILIB_PARTS=gmon.o crtbegin.o crtend.o"}, {"sha": "318343316bf4520fbc3681dc3be19b64ce17add9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -1,3 +1,8 @@\n+2004-11-18  Daniel Jacobowitz  <dan@codesourcery.com>\n+            Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* testsuite/gcc.dg/pragma-init-fini-2.c: New test.\n+\n 2004-11-17  Janis Johnson  <janis187@us.ibm.com>\n             Aldy Hernandez  <aldyh@redhat.com>\n "}, {"sha": "91bc622a20c550e2b1bb8b24e8925ca9566559ed", "filename": "gcc/testsuite/gcc.dg/pragma-init-fini-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-init-fini-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-init-fini-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-init-fini-2.c?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -0,0 +1,15 @@\n+/* Tests for #pragma init and #pragma fini.  */\n+\n+/* { dg-do link { target *-*-solaris2.* } } */\n+/* { dg-options \"-fpic\" } */\n+\n+#include <stdio.h>\n+\n+#pragma fini (f)\n+\n+void f() {\n+  fprintf (stderr, \"f\\n\");\n+}\n+\n+int main () {\n+}"}, {"sha": "eb5d76f7b33352cd6d1c4291dfe1a3f18e3aee34", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -1,3 +1,10 @@\n+2004-11-18  Daniel Jacobowitz  <dan@codesourcery.com>\n+            Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* configure.ac (i[34567]86-*-solaris2.1[0-9]*): Set\n+\tneed_64bit_hwint=yes.\n+\t* configure: Regenerate.\n+\n 2004-11-09  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* Makefile.in ($(PACKAGE).pot): New rule.  Depend on"}, {"sha": "978296b461f67c70171860b037c74dee62d552ee", "filename": "libcpp/configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -7044,6 +7044,7 @@ case $target in\n \tx86_64-*-* | \\\n \tia64-*-* | \\\n \thppa*64*-*-* | parisc*64*-*-* | \\\n+\ti[34567]86-*-solaris2.1[0-9]* | \\\n \tmips*-*-* | \\\n \tmmix-*-* | \\\n \tpowerpc*-*-* | \\"}, {"sha": "f088ac80b2983871bf2b7b65d6bdba2bcd6e7689", "filename": "libcpp/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e68029244bf2bcafbb82c7419438d185dc4c5d/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e68029244bf2bcafbb82c7419438d185dc4c5d/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=a8e68029244bf2bcafbb82c7419438d185dc4c5d", "patch": "@@ -110,6 +110,7 @@ case $target in\n \tx86_64-*-* | \\\n \tia64-*-* | \\\n \thppa*64*-*-* | parisc*64*-*-* | \\\n+\ti[34567]86-*-solaris2.1[0-9]* | \\\n \tmips*-*-* | \\\n \tmmix-*-* | \\\n \tpowerpc*-*-* | \\"}]}