{"sha": "13ae6f9118afcaac53ff1ae97a37845a91b0203b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNhZTZmOTExOGFmY2FhYzUzZmYxYWU5N2EzNzg0NWE5MWIwMjAzYg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T05:04:26Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T05:04:26Z"}, "message": "graphite-blocking.c (pbb_do_strip_mine): Removed.\n\n2009-10-14  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-blocking.c (pbb_do_strip_mine): Removed.\n\t(lst_do_strip_mine_loop): New.\n\t(lst_do_strip_mine): New.\n\t(scop_do_strip_mine): Call lst_do_strip_mine.\n\t* graphite-poly.h (lst_add_loop_under_loop): New.\n\t(lst_find_first_pbb): New.\n\nFrom-SVN: r154582", "tree": {"sha": "bcbb6916974039835a8e0203f66185d39b684c0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcbb6916974039835a8e0203f66185d39b684c0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13ae6f9118afcaac53ff1ae97a37845a91b0203b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ae6f9118afcaac53ff1ae97a37845a91b0203b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13ae6f9118afcaac53ff1ae97a37845a91b0203b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ae6f9118afcaac53ff1ae97a37845a91b0203b/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0fe753b7d0ea84ffb3bc0f45612cfa965037faa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0fe753b7d0ea84ffb3bc0f45612cfa965037faa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0fe753b7d0ea84ffb3bc0f45612cfa965037faa"}], "stats": {"total": 118, "additions": 98, "deletions": 20}, "files": [{"sha": "2d59c3b99ffb214ee4c8ef49dec27ae811487fa4", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ae6f9118afcaac53ff1ae97a37845a91b0203b/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ae6f9118afcaac53ff1ae97a37845a91b0203b/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=13ae6f9118afcaac53ff1ae97a37845a91b0203b", "patch": "@@ -1,3 +1,12 @@\n+2009-10-14  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-blocking.c (pbb_do_strip_mine): Removed.\n+\t(lst_do_strip_mine_loop): New.\n+\t(lst_do_strip_mine): New.\n+\t(scop_do_strip_mine): Call lst_do_strip_mine.\n+\t* graphite-poly.h (lst_add_loop_under_loop): New.\n+\t(lst_find_first_pbb): New.\n+\n 2009-10-14  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-poly.c (loop_to_lst): Fix LST creation."}, {"sha": "b5f5acd74ba27bffb72292649e9052db455a53d2", "filename": "gcc/graphite-blocking.c", "status": "modified", "additions": 52, "deletions": 19, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ae6f9118afcaac53ff1ae97a37845a91b0203b/gcc%2Fgraphite-blocking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ae6f9118afcaac53ff1ae97a37845a91b0203b/gcc%2Fgraphite-blocking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-blocking.c?ref=13ae6f9118afcaac53ff1ae97a37845a91b0203b", "patch": "@@ -195,42 +195,75 @@ pbb_strip_mine_profitable_p (poly_bb_p pbb,\n   return res;\n }\n \n-/* Strip mines all the loops around PBB.  Nothing profitable in all this:\n-   this is just a driver function.  */\n+/* Strip-mines all the loops of LST that are considered profitable to\n+   strip-mine.  Return true if it did strip-mined some loops.  */\n \n static bool\n-pbb_do_strip_mine (poly_bb_p pbb)\n+lst_do_strip_mine_loop (lst_p lst, int depth)\n {\n-  graphite_dim_t s_dim;\n+  int i;\n+  lst_p l;\n   int stride = PARAM_VALUE (PARAM_LOOP_BLOCK_TILE_SIZE);\n-  bool transform_done = false;\n+  poly_bb_p pbb;\n \n-  for (s_dim = 0; s_dim < pbb_nb_dynamic_scattering_transform (pbb); s_dim++)\n-    if (pbb_strip_mine_profitable_p (pbb, psct_dynamic_dim (pbb, s_dim),\n-                                     stride))\n-      {\n-\tppl_dimension_type d = psct_dynamic_dim (pbb, s_dim);\n-\ttransform_done |= pbb_strip_mine_time_depth (pbb, d, stride);\n-\ts_dim++;\n-      }\n+  if (!lst)\n+    return false;\n \n-  return transform_done;\n+  if (LST_LOOP_P (lst))\n+    {\n+      bool res = false;\n+\n+      for (i = 0; VEC_iterate (lst_p, LST_SEQ (lst), i, l); i++)\n+\tres |= lst_do_strip_mine_loop (l, depth);\n+\n+      return res;\n+    }\n+\n+  pbb = LST_PBB (lst);\n+  return pbb_strip_mine_time_depth (pbb, psct_dynamic_dim (pbb, depth),\n+\t\t\t\t    stride);\n }\n \n+/* Strip-mines all the loops of LST that are considered profitable to\n+   strip-mine.  Return true if it did strip-mined some loops.  */\n+\n+static bool\n+lst_do_strip_mine (lst_p lst)\n+{\n+  int i;\n+  lst_p l;\n+  bool res = false;\n+  int stride = PARAM_VALUE (PARAM_LOOP_BLOCK_TILE_SIZE);\n+\n+  if (!lst\n+      || !LST_LOOP_P (lst))\n+    return false;\n+\n+  for (i = 0; VEC_iterate (lst_p, LST_SEQ (lst), i, l); i++)\n+    res |= lst_do_strip_mine (l);\n+\n+  if (pbb_strip_mine_profitable_p (LST_PBB (lst_find_first_pbb (lst)),\n+\t\t\t\t   lst_depth (lst), stride))\n+    {\n+      res |= lst_do_strip_mine_loop (lst, lst_depth (lst));\n+      lst_add_loop_under_loop (lst);\n+    }\n+\n+  return res;\n+}\n+\n+\n /* Strip mines all the loops in SCOP.  Nothing profitable in all this:\n    this is just a driver function.  */\n \n bool\n scop_do_strip_mine (scop_p scop)\n {\n-  poly_bb_p pbb;\n-  int i;\n   bool transform_done = false;\n \n   store_scattering (scop);\n \n-  for (i = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), i, pbb); i++)\n-    transform_done |= pbb_do_strip_mine (pbb);\n+  transform_done = lst_do_strip_mine (SCOP_TRANSFORMED_SCHEDULE (scop));\n \n   if (!transform_done)\n     return false;\n@@ -241,7 +274,7 @@ scop_do_strip_mine (scop_p scop)\n       return false;\n     }\n \n-  return true;\n+  return transform_done;\n }\n \n #endif"}, {"sha": "af18afbf770b13b175e9946ea193658e525e6389", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ae6f9118afcaac53ff1ae97a37845a91b0203b/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ae6f9118afcaac53ff1ae97a37845a91b0203b/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=13ae6f9118afcaac53ff1ae97a37845a91b0203b", "patch": "@@ -796,7 +796,7 @@ pbb_number_of_iterations_at_time (poly_bb_p pbb,\n      them into the bigger polyhedron that has the following format:\n      t0..t_{n-1} | l0..l_{nlcl-1} | i0..i_{niter-1} | g0..g_{nparm-1}.\n      t0..t_{n-1} are time dimensions (scattering dimensions)\n-     l0..l_{nclc-1} are local variables in scatterin function\n+     l0..l_{nclc-1} are local variables in scattering function\n      i0..i_{niter-1} are original iteration variables\n      g0..g_{nparam-1} are global parameters.  */\n "}, {"sha": "64a082e412561f703f0a5ddf846310d4ac7c285e", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ae6f9118afcaac53ff1ae97a37845a91b0203b/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ae6f9118afcaac53ff1ae97a37845a91b0203b/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=13ae6f9118afcaac53ff1ae97a37845a91b0203b", "patch": "@@ -693,6 +693,21 @@ copy_lst (lst_p lst)\n   return new_lst_stmt (LST_PBB (lst));\n }\n \n+/* Adds a new loop under the loop LST.  */\n+\n+static inline void\n+lst_add_loop_under_loop (lst_p lst)\n+{\n+  VEC (lst_p, heap) *seq = VEC_alloc (lst_p, heap, 1);\n+  lst_p l = new_lst_loop (LST_SEQ (lst));\n+\n+  gcc_assert (LST_LOOP_P (lst));\n+\n+  LST_LOOP_FATHER (l) = lst;\n+  VEC_quick_push (lst_p, seq, l);\n+  LST_SEQ (lst) = seq;\n+}\n+\n /* Returns the loop depth of LST.  */\n \n static inline int\n@@ -765,6 +780,27 @@ find_lst_loop (lst_p stmt, int loop_depth)\n   return loop;\n }\n \n+/* Return the LST node corresponding to PBB.  */\n+\n+static inline lst_p\n+lst_find_first_pbb (lst_p lst)\n+{\n+  int i;\n+  lst_p l;\n+\n+  if (!lst)\n+    return NULL;\n+\n+  if (LST_LOOP_P (lst))\n+    for (i = 0; VEC_iterate (lst_p, LST_SEQ (lst), i, l); i++)\n+      {\n+\tlst_p res = lst_find_first_pbb (l);\n+\tif (res)\n+\t  return res;\n+      }\n+\n+  return lst;\n+}\n \n /* A SCOP is a Static Control Part of the program, simple enough to be\n    represented in polyhedral form.  */"}]}