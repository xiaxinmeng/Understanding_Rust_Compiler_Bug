{"sha": "5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRjZjY4ZjUxMGQ5ZjAyY2JjY2I5MzU1YmM2MjlhODNjM2M0Y2RiNA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-09-06T23:22:26Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-09-06T23:22:26Z"}, "message": "re PR libfortran/77393 (Revision r237735 changed the behavior of F0.0)\n\n2016-09-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/77393\n\t* io/write_float.def (build_float_string): Recognize when the\n\tresult will not fit in the user provided, star fill, and exit\n\tearly.\n\n\t* gfortran.dg/fmt_f0_2.f90: Update test.\n\t* gfortran.dg/fmt_f0_3.f90: New test.\n\nFrom-SVN: r240018", "tree": {"sha": "974e99bcdef6567e75b66f7e17b71216ef5bd746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/974e99bcdef6567e75b66f7e17b71216ef5bd746"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/comments", "author": null, "committer": null, "parents": [{"sha": "6ac7322b3ece979c1adf381f7c6c7e421cf9922f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac7322b3ece979c1adf381f7c6c7e421cf9922f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac7322b3ece979c1adf381f7c6c7e421cf9922f"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "b5157f6b0cabe920b342b921cd1201eb300764f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4", "patch": "@@ -1,3 +1,9 @@\n+2016-09-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/77393\n+\t* gfortran.dg/fmt_f0_2.f90: Update test.\n+\t* gfortran.dg/fmt_f0_3.f90: New test.\n+\n 2016-09-07  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR debug/77389"}, {"sha": "4afba91389e3c5dd36d6f08cecfebb4c203efdd9", "filename": "gcc/testsuite/gfortran.dg/fmt_f0_2.f90", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_f0_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_f0_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_f0_2.f90?ref=5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4", "patch": "@@ -11,16 +11,12 @@ program testbigf0 ! Can enormous numbers be printed with F0.0 format?\n     select case (i)\n     case (1)\n       write(str, \"(f0.0)\") -huge(real(1.0,kind=j(1)))\n-      if (len(trim(str)).lt.41) error stop \"FAILED AT LINE 15\"\n     case (2)\n       write(str, \"(f0.0)\") -huge(real(1.0,kind=j(2)))\n-      if (len(trim(str)).lt.311) error stop \"FAILED AT LINE 19\"\n     case (3)\n       write(str, \"(f0.0)\") -huge(real(1.0,kind=j(3)))\n-      if (len(trim(str)).lt.4935) error stop \"FAILED AT LINE 23\"\n     case (4)\n       write(str, \"(f0.10)\") -huge(real(1.0,kind=j(4)))\n-      if (len(trim(str)).lt.4945) error stop \"FAILED AT LINE 27\"\n     end select\n   enddo\n end program testbigf0"}, {"sha": "905fe73b6f61c806e0d90b28c3b73ca99c96575b", "filename": "gcc/testsuite/gfortran.dg/fmt_f0_3.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_f0_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_f0_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_f0_3.f90?ref=5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run }\n+! PR77393, this segfaulted before\n+program testbigf0\n+  use ISO_FORTRAN_ENV\n+  implicit none\n+  integer i\n+  integer, parameter :: j(size(real_kinds)+4)=[REAL_KINDS, [4, 4, 4, 4]]\n+  character(10000) :: str\n+\n+  do i=1,size(real_kinds)\n+    select case (i)\n+    case (1)\n+      write(str, \"(f8.0)\") huge(real(1.0,kind=j(1)))\n+    case (2)\n+      write(str, \"(f18.0)\") huge(real(1.0,kind=j(2)))\n+    case (3)\n+      write(str, \"(f20.0)\") huge(real(1.0,kind=j(3)))\n+    case (4)\n+      write(str, \"(f40.0)\") huge(real(1.0,kind=j(4)))\n+    end select\n+  enddo\n+end program testbigf0\n+  "}, {"sha": "f9ed4b013a4eb89132d4a1987b594dc54dda0b0c", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4", "patch": "@@ -1,3 +1,10 @@\n+2016-09-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/77393\n+\t* io/write_float.def (build_float_string): Recognize when the\n+\tresult will not fit in the user provided, star fill, and exit\n+\tearly.\n+\n 2016-08-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/77393"}, {"sha": "504482fa170d3a35709c89fd3a203f1b5d206130", "filename": "libgfortran/io/write_float.def", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/libgfortran%2Fio%2Fwrite_float.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4/libgfortran%2Fio%2Fwrite_float.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite_float.def?ref=5dcf68f510d9f02cbccb9355bc629a83c3c4cdb4", "patch": "@@ -174,6 +174,13 @@ build_float_string (st_parameter_dt *dtp, const fnode *f, char *buffer,\n     {\n     case FMT_F:\n       nbefore = ndigits - precision;\n+      if ((w > 0) && (nbefore > (int) size))\n+        {\n+\t  *len = w;\n+\t  star_fill (result, w);\n+\t  result[w] = '\\0';\n+\t  return;\n+\t}\n       /* Make sure the decimal point is a '.'; depending on the\n \t locale, this might not be the case otherwise.  */\n       digits[nbefore] = '.';"}]}