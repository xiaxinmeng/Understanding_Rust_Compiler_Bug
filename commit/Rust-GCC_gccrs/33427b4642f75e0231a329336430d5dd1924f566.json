{"sha": "33427b4642f75e0231a329336430d5dd1924f566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM0MjdiNDY0MmY3NWUwMjMxYTMyOTMzNjQzMGQ1ZGQxOTI0ZjU2Ng==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2016-07-07T08:54:59Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2016-07-07T08:54:59Z"}, "message": "arm.h (TARGET_USE_MOVT): Check MOVT/MOVW availability with TARGET_HAVE_MOVT.\n\n2016-07-07  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * config/arm/arm.h (TARGET_USE_MOVT): Check MOVT/MOVW availability\n    with TARGET_HAVE_MOVT.\n    (TARGET_HAVE_MOVT): Define.\n    * config/arm/arm.c (const_ok_for_op): Check MOVT/MOVW\n    availability with TARGET_HAVE_MOVT.\n    * config/arm/arm.md (arm_movt): Use TARGET_HAVE_MOVT to check MOVT\n    availability.\n    (addsi splitter): Use TARGET_THUMB && TARGET_HAVE_MOVT rather than\n    TARGET_THUMB2.\n    (symbol_refs movsi splitter): Remove TARGET_32BIT check.\n    (arm_movtas_ze): Use TARGET_HAVE_MOVT to check MOVT availability.\n    * config/arm/constraints.md (define_constraint \"j\"): Use\n    TARGET_HAVE_MOVT to check MOVT availability.\n\nFrom-SVN: r238083", "tree": {"sha": "5d8a47cb2463dc28e238d0416a9c67632899385e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d8a47cb2463dc28e238d0416a9c67632899385e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33427b4642f75e0231a329336430d5dd1924f566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33427b4642f75e0231a329336430d5dd1924f566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33427b4642f75e0231a329336430d5dd1924f566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33427b4642f75e0231a329336430d5dd1924f566/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3129a32097d973fa9f17da5694e83c97894d6ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3129a32097d973fa9f17da5694e83c97894d6ae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3129a32097d973fa9f17da5694e83c97894d6ae5"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "7cfc92cf97525257970e43c171e1e0a9eae9d34d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33427b4642f75e0231a329336430d5dd1924f566/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33427b4642f75e0231a329336430d5dd1924f566/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33427b4642f75e0231a329336430d5dd1924f566", "patch": "@@ -1,3 +1,19 @@\n+2016-07-07  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* config/arm/arm.h (TARGET_USE_MOVT): Check MOVT/MOVW availability\n+\twith TARGET_HAVE_MOVT.\n+\t(TARGET_HAVE_MOVT): Define.\n+\t* config/arm/arm.c (const_ok_for_op): Check MOVT/MOVW\n+\tavailability with TARGET_HAVE_MOVT.\n+\t* config/arm/arm.md (arm_movt): Use TARGET_HAVE_MOVT to check MOVT\n+\tavailability.\n+\t(addsi splitter): Use TARGET_THUMB && TARGET_HAVE_MOVT rather than\n+\tTARGET_THUMB2.\n+\t(symbol_refs movsi splitter): Remove TARGET_32BIT check.\n+\t(arm_movtas_ze): Use TARGET_HAVE_MOVT to check MOVT availability.\n+\t* config/arm/constraints.md (define_constraint \"j\"): Use\n+\tTARGET_HAVE_MOVT to check MOVT availability.\n+\n 2016-07-07  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* config/arm/arm-protos.h: Reindent FL_FOR_* macro definitions."}, {"sha": "2394a173f053a4751196029339f6656b6976a017", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33427b4642f75e0231a329336430d5dd1924f566/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33427b4642f75e0231a329336430d5dd1924f566/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=33427b4642f75e0231a329336430d5dd1924f566", "patch": "@@ -3947,7 +3947,7 @@ const_ok_for_op (HOST_WIDE_INT i, enum rtx_code code)\n     {\n     case SET:\n       /* See if we can use movw.  */\n-      if (arm_arch_thumb2 && (i & 0xffff0000) == 0)\n+      if (TARGET_HAVE_MOVT && (i & 0xffff0000) == 0)\n \treturn 1;\n       else\n \t/* Otherwise, try mvn.  */"}, {"sha": "c9aaa6090872c24d9e6ffcadd5f1bf81d0a5890f", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33427b4642f75e0231a329336430d5dd1924f566/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33427b4642f75e0231a329336430d5dd1924f566/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=33427b4642f75e0231a329336430d5dd1924f566", "patch": "@@ -232,7 +232,7 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n \n /* Should MOVW/MOVT be used in preference to a constant pool.  */\n #define TARGET_USE_MOVT \\\n-  (arm_arch_thumb2 \\\n+  (TARGET_HAVE_MOVT \\\n    && (arm_disable_literal_pool \\\n        || (!optimize_size && !current_tune->prefer_constant_pool)))\n \n@@ -263,6 +263,9 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n /* Nonzero if this chip supports load-acquire and store-release.  */\n #define TARGET_HAVE_LDACQ\t(TARGET_ARM_ARCH >= 8 && arm_arch_notm)\n \n+/* Nonzero if this chip provides the MOVW and MOVW instructions.  */\n+#define TARGET_HAVE_MOVT\t(arm_arch_thumb2)\n+\n /* Nonzero if integer division instructions supported.  */\n #define TARGET_IDIV\t((TARGET_ARM && arm_arch_arm_hwdiv)\t\\\n \t\t\t || (TARGET_THUMB2 && arm_arch_thumb_hwdiv))"}, {"sha": "3cd76f935a45305b4e7fe7b55b517a1404edfa0b", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33427b4642f75e0231a329336430d5dd1924f566/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33427b4642f75e0231a329336430d5dd1924f566/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=33427b4642f75e0231a329336430d5dd1924f566", "patch": "@@ -5702,7 +5702,7 @@\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r\")\n \t(lo_sum:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0\")\n \t\t   (match_operand:SI 2 \"general_operand\"      \"i\")))]\n-  \"arm_arch_thumb2 && arm_valid_symbolic_address_p (operands[2])\"\n+  \"TARGET_HAVE_MOVT && arm_valid_symbolic_address_p (operands[2])\"\n   \"movt%?\\t%0, #:upper16:%c2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n@@ -5762,7 +5762,8 @@\n   [(set (match_operand:SI 0 \"arm_general_register_operand\" \"\")\n \t(const:SI (plus:SI (match_operand:SI 1 \"general_operand\" \"\")\n \t\t\t   (match_operand:SI 2 \"const_int_operand\" \"\"))))]\n-  \"TARGET_THUMB2\n+  \"TARGET_THUMB\n+   && TARGET_HAVE_MOVT\n    && arm_disable_literal_pool\n    && reload_completed\n    && GET_CODE (operands[1]) == SYMBOL_REF\"\n@@ -5793,8 +5794,7 @@\n (define_split\n   [(set (match_operand:SI 0 \"arm_general_register_operand\" \"\")\n        (match_operand:SI 1 \"general_operand\" \"\"))]\n-  \"TARGET_32BIT\n-   && TARGET_USE_MOVT && GET_CODE (operands[1]) == SYMBOL_REF\n+  \"TARGET_USE_MOVT && GET_CODE (operands[1]) == SYMBOL_REF\n    && !flag_pic && !target_word_relocations\n    && !arm_tls_referenced_p (operands[1])\"\n   [(clobber (const_int 0))]\n@@ -10975,7 +10975,7 @@\n                    (const_int 16)\n                    (const_int 16))\n         (match_operand:SI 1 \"const_int_operand\" \"\"))]\n-  \"arm_arch_thumb2\"\n+  \"TARGET_HAVE_MOVT\"\n   \"movt%?\\t%0, %L1\"\n  [(set_attr \"predicable\" \"yes\")\n   (set_attr \"predicable_short_it\" \"no\")"}, {"sha": "4ece5f013c92adee04157b5c909e1d47c894c994", "filename": "gcc/config/arm/constraints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33427b4642f75e0231a329336430d5dd1924f566/gcc%2Fconfig%2Farm%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33427b4642f75e0231a329336430d5dd1924f566/gcc%2Fconfig%2Farm%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fconstraints.md?ref=33427b4642f75e0231a329336430d5dd1924f566", "patch": "@@ -66,7 +66,7 @@\n \n (define_constraint \"j\"\n  \"A constant suitable for a MOVW instruction. (ARM/Thumb-2)\"\n- (and (match_test \"TARGET_32BIT && arm_arch_thumb2\")\n+ (and (match_test \"TARGET_HAVE_MOVT\")\n       (ior (and (match_code \"high\")\n \t\t(match_test \"arm_valid_symbolic_address_p (XEXP (op, 0))\"))\n \t   (and (match_code \"const_int\")"}]}