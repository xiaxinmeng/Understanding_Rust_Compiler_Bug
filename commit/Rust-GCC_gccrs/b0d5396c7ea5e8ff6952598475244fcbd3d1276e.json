{"sha": "b0d5396c7ea5e8ff6952598475244fcbd3d1276e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBkNTM5NmM3ZWE1ZThmZjY5NTI1OTg0NzUyNDRmY2JkM2QxMjc2ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-08-10T20:46:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-08-10T20:46:15Z"}, "message": "* config/i386/sse.md (*fma_fmadd_<mode>, *fma_fmsub_<mode>,\n\n\t*fma_fnmadd_<mode>, *fma_fnmsub_<mode>, *fma_fmaddsub_<mode>,\n\t*fma_fmsubadd_<mode>): Move FMA3 insn patterns before FMA4 patterns.\n\nFrom-SVN: r190304", "tree": {"sha": "582176ee20551cd15e50bf1ca96e53168a2f7b29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/582176ee20551cd15e50bf1ca96e53168a2f7b29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0d5396c7ea5e8ff6952598475244fcbd3d1276e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d5396c7ea5e8ff6952598475244fcbd3d1276e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d5396c7ea5e8ff6952598475244fcbd3d1276e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d5396c7ea5e8ff6952598475244fcbd3d1276e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2a40ee85be27a37cb84341fb21b6abc497be175", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a40ee85be27a37cb84341fb21b6abc497be175", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a40ee85be27a37cb84341fb21b6abc497be175"}], "stats": {"total": 346, "additions": 174, "deletions": 172}, "files": [{"sha": "1620bc8cf68a6ab76093434979e8326c5b8d60c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d5396c7ea5e8ff6952598475244fcbd3d1276e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d5396c7ea5e8ff6952598475244fcbd3d1276e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0d5396c7ea5e8ff6952598475244fcbd3d1276e", "patch": "@@ -1,3 +1,9 @@\n+2012-08-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (*fma_fmadd_<mode>, *fma_fmsub_<mode>,\n+\t*fma_fnmadd_<mode>, *fma_fnmsub_<mode>, *fma_fmaddsub_<mode>,\n+\t*fma_fmsubadd_<mode>): Move FMA3 insn patterns before FMA4 patterns.\n+\n 2012-08-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (simple LEA peephole2s): Add zero-extend"}, {"sha": "641a3bab2235280d64e26bafed3aa0d8c5ce9d1c", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 168, "deletions": 172, "changes": 340, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d5396c7ea5e8ff6952598475244fcbd3d1276e/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d5396c7ea5e8ff6952598475244fcbd3d1276e/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b0d5396c7ea5e8ff6952598475244fcbd3d1276e", "patch": "@@ -403,8 +403,6 @@\n ;; Mix-n-match\n (define_mode_iterator AVX256MODE2P [V8SI V8SF V4DF])\n \n-(define_mode_iterator FMAMODE [SF DF V4SF V2DF V8SF V4DF])\n-\n ;; Mapping of immediate bits for blend instructions\n (define_mode_attr blendbits\n   [(V8SF \"255\") (V4SF \"15\") (V4DF \"15\") (V2DF \"3\")])\n@@ -1886,12 +1884,13 @@\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n-;; FMA4 floating point multiply/accumulate instructions.  This\n-;; includes the scalar version of the instructions as well as the\n-;; vector.\n+;; FMA floating point multiply/accumulate instructions.  These include\n+;; scalar versions of the instructions as well as vector versions.\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n+(define_mode_iterator FMAMODE [SF DF V4SF V2DF V8SF V4DF])\n+\n ;; In order to match (*a * *b) + *c, particularly when vectorizing, allow\n ;; combine to generate a multiply/add with two memory references.  We then\n ;; split this insn, into loading up the destination register with one of the\n@@ -1907,8 +1906,6 @@\n ;; We could now properly represent that only one memory operand is\n ;; allowed and not be penalized during optimization.\n \n-;; Intrinsic FMA operations.\n-\n ;; The standard names for fma is only available with SSE math enabled.\n (define_expand \"fma<mode>4\"\n   [(set (match_operand:FMAMODE 0 \"register_operand\")\n@@ -1942,7 +1939,7 @@\n \t  (neg:FMAMODE (match_operand:FMAMODE 3 \"nonimmediate_operand\"))))]\n   \"(TARGET_FMA || TARGET_FMA4) && TARGET_SSE_MATH\")\n \n-;; The builtin for fma4intrin.h is not constrained by SSE math enabled.\n+;; The builtin for intrinsics is not constrained by SSE math enabled.\n (define_expand \"fma4i_fmadd_<mode>\"\n   [(set (match_operand:FMAMODE 0 \"register_operand\")\n \t(fma:FMAMODE\n@@ -1951,7 +1948,71 @@\n \t  (match_operand:FMAMODE 3 \"nonimmediate_operand\")))]\n   \"TARGET_FMA || TARGET_FMA4\")\n \n-(define_insn \"*fma4i_fmadd_<mode>\"\n+;; FMA3 version\n+\n+(define_insn \"*fma_fmadd_<mode>\"\n+  [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x,x\")\n+\t(fma:FMAMODE\n+\t  (match_operand:FMAMODE 1 \"nonimmediate_operand\" \"%0, 0,x\")\n+\t  (match_operand:FMAMODE 2 \"nonimmediate_operand\" \"xm, x,xm\")\n+\t  (match_operand:FMAMODE 3 \"nonimmediate_operand\" \" x,xm,0\")))]\n+  \"TARGET_FMA\"\n+  \"@\n+   vfmadd132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n+   vfmadd213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vfmadd231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"*fma_fmsub_<mode>\"\n+  [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x,x\")\n+\t(fma:FMAMODE\n+\t  (match_operand:FMAMODE   1 \"nonimmediate_operand\" \"%0, 0,x\")\n+\t  (match_operand:FMAMODE   2 \"nonimmediate_operand\" \"xm, x,xm\")\n+\t  (neg:FMAMODE\n+\t    (match_operand:FMAMODE 3 \"nonimmediate_operand\" \" x,xm,0\"))))]\n+  \"TARGET_FMA\"\n+  \"@\n+   vfmsub132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n+   vfmsub213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vfmsub231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"*fma_fnmadd_<mode>\"\n+  [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x,x\")\n+\t(fma:FMAMODE\n+\t  (neg:FMAMODE\n+\t    (match_operand:FMAMODE 1 \"nonimmediate_operand\" \"%0, 0,x\"))\n+\t  (match_operand:FMAMODE   2 \"nonimmediate_operand\" \"xm, x,xm\")\n+\t  (match_operand:FMAMODE   3 \"nonimmediate_operand\" \" x,xm,0\")))]\n+  \"TARGET_FMA\"\n+  \"@\n+   vfnmadd132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n+   vfnmadd213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vfnmadd231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"*fma_fnmsub_<mode>\"\n+  [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x,x\")\n+\t(fma:FMAMODE\n+\t  (neg:FMAMODE\n+\t    (match_operand:FMAMODE 1 \"nonimmediate_operand\" \"%0, 0,x\"))\n+\t  (match_operand:FMAMODE   2 \"nonimmediate_operand\" \"xm, x,xm\")\n+\t  (neg:FMAMODE\n+\t    (match_operand:FMAMODE 3 \"nonimmediate_operand\" \" x,xm,0\"))))]\n+  \"TARGET_FMA\"\n+  \"@\n+   vfnmsub132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n+   vfnmsub213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vfnmsub231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+;; FMA4 version\n+\n+(define_insn \"*fma4_fmadd_<mode>\"\n   [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x\")\n \t(fma:FMAMODE\n \t  (match_operand:FMAMODE 1 \"nonimmediate_operand\" \"%x,x\")\n@@ -1962,7 +2023,7 @@\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*fma4i_fmsub_<mode>\"\n+(define_insn \"*fma4_fmsub_<mode>\"\n   [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x\")\n \t(fma:FMAMODE\n \t  (match_operand:FMAMODE 1 \"nonimmediate_operand\" \"%x,x\")\n@@ -1974,7 +2035,7 @@\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*fma4i_fnmadd_<mode>\"\n+(define_insn \"*fma4_fnmadd_<mode>\"\n   [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x\")\n \t(fma:FMAMODE\n \t  (neg:FMAMODE\n@@ -1986,7 +2047,7 @@\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*fma4i_fnmsub_<mode>\"\n+(define_insn \"*fma4_fnmsub_<mode>\"\n   [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x\")\n \t(fma:FMAMODE\n \t  (neg:FMAMODE\n@@ -1999,22 +2060,88 @@\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Scalar versions of the above.  Unlike ADDSS et al, these write the\n-;; entire destination register, with the high-order elements zeroed.\n+;; FMA parallel floating point multiply addsub and subadd operations.\n \n-(define_expand \"fma4i_vmfmadd_<mode>\"\n-  [(set (match_operand:VF_128 0 \"register_operand\")\n-\t(vec_merge:VF_128\n-\t  (fma:VF_128\n-\t    (match_operand:VF_128 1 \"nonimmediate_operand\")\n-\t    (match_operand:VF_128 2 \"nonimmediate_operand\")\n-\t    (match_operand:VF_128 3 \"nonimmediate_operand\"))\n-\t  (match_dup 4)\n-\t  (const_int 1)))]\n+;; It would be possible to represent these without the UNSPEC as\n+;;\n+;; (vec_merge\n+;;   (fma op1 op2 op3)\n+;;   (fma op1 op2 (neg op3))\n+;;   (merge-const))\n+;;\n+;; But this doesn't seem useful in practice.\n+\n+(define_expand \"fmaddsub_<mode>\"\n+  [(set (match_operand:VF 0 \"register_operand\")\n+\t(unspec:VF\n+\t  [(match_operand:VF 1 \"nonimmediate_operand\")\n+\t   (match_operand:VF 2 \"nonimmediate_operand\")\n+\t   (match_operand:VF 3 \"nonimmediate_operand\")]\n+\t  UNSPEC_FMADDSUB))]\n+  \"TARGET_FMA || TARGET_FMA4\")\n+\n+;; FMA3 version\n+\n+(define_insn \"*fma_fmaddsub_<mode>\"\n+  [(set (match_operand:VF 0 \"register_operand\" \"=x,x,x\")\n+\t(unspec:VF\n+\t  [(match_operand:VF 1 \"nonimmediate_operand\" \"%0, 0,x\")\n+\t   (match_operand:VF 2 \"nonimmediate_operand\" \"xm, x,xm\")\n+\t   (match_operand:VF 3 \"nonimmediate_operand\" \" x,xm,0\")]\n+\t  UNSPEC_FMADDSUB))]\n+  \"TARGET_FMA\"\n+  \"@\n+   vfmaddsub132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n+   vfmaddsub213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vfmaddsub231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"*fma_fmsubadd_<mode>\"\n+  [(set (match_operand:VF 0 \"register_operand\" \"=x,x,x\")\n+\t(unspec:VF\n+\t  [(match_operand:VF   1 \"nonimmediate_operand\" \"%0, 0,x\")\n+\t   (match_operand:VF   2 \"nonimmediate_operand\" \"xm, x,xm\")\n+\t   (neg:VF\n+\t     (match_operand:VF 3 \"nonimmediate_operand\" \" x,xm,0\"))]\n+\t  UNSPEC_FMADDSUB))]\n+  \"TARGET_FMA\"\n+  \"@\n+   vfmsubadd132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n+   vfmsubadd213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vfmsubadd231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+;; FMA4 version\n+\n+(define_insn \"*fma4_fmaddsub_<mode>\"\n+  [(set (match_operand:VF 0 \"register_operand\" \"=x,x\")\n+\t(unspec:VF\n+\t  [(match_operand:VF 1 \"nonimmediate_operand\" \"%x,x\")\n+\t   (match_operand:VF 2 \"nonimmediate_operand\" \" x,m\")\n+\t   (match_operand:VF 3 \"nonimmediate_operand\" \"xm,x\")]\n+\t  UNSPEC_FMADDSUB))]\n   \"TARGET_FMA4\"\n-{\n-  operands[4] = CONST0_RTX (<MODE>mode);\n-})\n+  \"vfmaddsub<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"*fma4_fmsubadd_<mode>\"\n+  [(set (match_operand:VF 0 \"register_operand\" \"=x,x\")\n+\t(unspec:VF\n+\t  [(match_operand:VF 1 \"nonimmediate_operand\" \"%x,x\")\n+\t   (match_operand:VF 2 \"nonimmediate_operand\" \" x,m\")\n+\t   (neg:VF\n+\t     (match_operand:VF 3 \"nonimmediate_operand\" \"xm,x\"))]\n+\t  UNSPEC_FMADDSUB))]\n+  \"TARGET_FMA4\"\n+  \"vfmsubadd<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+;; FMA3 floating point scalar intrinsics. These merge result with\n+;; high-order elements from the destination register.\n \n (define_expand \"fmai_vmfmadd_<mode>\"\n   [(set (match_operand:VF_128 0 \"register_operand\")\n@@ -2099,6 +2226,21 @@\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+;; FMA4 floating point scalar intrinsics.  These write the\n+;; entire destination register, with the high-order elements zeroed.\n+\n+(define_expand \"fma4i_vmfmadd_<mode>\"\n+  [(set (match_operand:VF_128 0 \"register_operand\")\n+\t(vec_merge:VF_128\n+\t  (fma:VF_128\n+\t    (match_operand:VF_128 1 \"nonimmediate_operand\")\n+\t    (match_operand:VF_128 2 \"nonimmediate_operand\")\n+\t    (match_operand:VF_128 3 \"nonimmediate_operand\"))\n+\t  (match_dup 4)\n+\t  (const_int 1)))]\n+  \"TARGET_FMA4\"\n+  \"operands[4] = CONST0_RTX (<MODE>mode);\")\n+\n (define_insn \"*fma4i_vmfmadd_<mode>\"\n   [(set (match_operand:VF_128 0 \"register_operand\" \"=x,x\")\n \t(vec_merge:VF_128\n@@ -2159,152 +2301,6 @@\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n-;;\n-;; FMA4 Parallel floating point multiply addsub and subadd operations.\n-;;\n-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n-\n-;; It would be possible to represent these without the UNSPEC as\n-;;\n-;; (vec_merge\n-;;   (fma op1 op2 op3)\n-;;   (fma op1 op2 (neg op3))\n-;;   (merge-const))\n-;;\n-;; But this doesn't seem useful in practice.\n-\n-(define_expand \"fmaddsub_<mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\")\n-\t(unspec:VF\n-\t  [(match_operand:VF 1 \"nonimmediate_operand\")\n-\t   (match_operand:VF 2 \"nonimmediate_operand\")\n-\t   (match_operand:VF 3 \"nonimmediate_operand\")]\n-\t  UNSPEC_FMADDSUB))]\n-  \"TARGET_FMA || TARGET_FMA4\")\n-\n-(define_insn \"*fma4_fmaddsub_<mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\" \"=x,x\")\n-\t(unspec:VF\n-\t  [(match_operand:VF 1 \"nonimmediate_operand\" \"%x,x\")\n-\t   (match_operand:VF 2 \"nonimmediate_operand\" \" x,m\")\n-\t   (match_operand:VF 3 \"nonimmediate_operand\" \"xm,x\")]\n-\t  UNSPEC_FMADDSUB))]\n-  \"TARGET_FMA4\"\n-  \"vfmaddsub<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*fma4_fmsubadd_<mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\" \"=x,x\")\n-\t(unspec:VF\n-\t  [(match_operand:VF 1 \"nonimmediate_operand\" \"%x,x\")\n-\t   (match_operand:VF 2 \"nonimmediate_operand\" \" x,m\")\n-\t   (neg:VF\n-\t     (match_operand:VF 3 \"nonimmediate_operand\" \"xm,x\"))]\n-\t  UNSPEC_FMADDSUB))]\n-  \"TARGET_FMA4\"\n-  \"vfmsubadd<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n-;;\n-;; FMA3 floating point multiply/accumulate instructions.\n-;;\n-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n-\n-(define_insn \"*fma_fmadd_<mode>\"\n-  [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x,x\")\n-\t(fma:FMAMODE\n-\t  (match_operand:FMAMODE 1 \"nonimmediate_operand\" \"%0, 0,x\")\n-\t  (match_operand:FMAMODE 2 \"nonimmediate_operand\" \"xm, x,xm\")\n-\t  (match_operand:FMAMODE 3 \"nonimmediate_operand\" \" x,xm,0\")))]\n-  \"TARGET_FMA\"\n-  \"@\n-   vfmadd132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfmadd213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n-   vfmadd231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*fma_fmsub_<mode>\"\n-  [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x,x\")\n-\t(fma:FMAMODE\n-\t  (match_operand:FMAMODE   1 \"nonimmediate_operand\" \"%0, 0,x\")\n-\t  (match_operand:FMAMODE   2 \"nonimmediate_operand\" \"xm, x,xm\")\n-\t  (neg:FMAMODE\n-\t    (match_operand:FMAMODE 3 \"nonimmediate_operand\" \" x,xm,0\"))))]\n-  \"TARGET_FMA\"\n-  \"@\n-   vfmsub132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfmsub213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n-   vfmsub231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*fma_fnmadd_<mode>\"\n-  [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x,x\")\n-\t(fma:FMAMODE\n-\t  (neg:FMAMODE\n-\t    (match_operand:FMAMODE 1 \"nonimmediate_operand\" \"%0, 0,x\"))\n-\t  (match_operand:FMAMODE   2 \"nonimmediate_operand\" \"xm, x,xm\")\n-\t  (match_operand:FMAMODE   3 \"nonimmediate_operand\" \" x,xm,0\")))]\n-  \"TARGET_FMA\"\n-  \"@\n-   vfnmadd132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfnmadd213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n-   vfnmadd231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*fma_fnmsub_<mode>\"\n-  [(set (match_operand:FMAMODE 0 \"register_operand\" \"=x,x,x\")\n-\t(fma:FMAMODE\n-\t  (neg:FMAMODE\n-\t    (match_operand:FMAMODE 1 \"nonimmediate_operand\" \"%0, 0,x\"))\n-\t  (match_operand:FMAMODE   2 \"nonimmediate_operand\" \"xm, x,xm\")\n-\t  (neg:FMAMODE\n-\t    (match_operand:FMAMODE 3 \"nonimmediate_operand\" \" x,xm,0\"))))]\n-  \"TARGET_FMA\"\n-  \"@\n-   vfnmsub132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfnmsub213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n-   vfnmsub231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*fma_fmaddsub_<mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\" \"=x,x,x\")\n-\t(unspec:VF\n-\t  [(match_operand:VF 1 \"nonimmediate_operand\" \"%0, 0,x\")\n-\t   (match_operand:VF 2 \"nonimmediate_operand\" \"xm, x,xm\")\n-\t   (match_operand:VF 3 \"nonimmediate_operand\" \" x,xm,0\")]\n-\t  UNSPEC_FMADDSUB))]\n-  \"TARGET_FMA\"\n-  \"@\n-   vfmaddsub132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfmaddsub213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n-   vfmaddsub231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*fma_fmsubadd_<mode>\"\n-  [(set (match_operand:VF 0 \"register_operand\" \"=x,x,x\")\n-\t(unspec:VF\n-\t  [(match_operand:VF   1 \"nonimmediate_operand\" \"%0, 0,x\")\n-\t   (match_operand:VF   2 \"nonimmediate_operand\" \"xm, x,xm\")\n-\t   (neg:VF\n-\t     (match_operand:VF 3 \"nonimmediate_operand\" \" x,xm,0\"))]\n-\t  UNSPEC_FMADDSUB))]\n-  \"TARGET_FMA\"\n-  \"@\n-   vfmsubadd132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfmsubadd213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n-   vfmsubadd231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Parallel single-precision floating point conversion operations"}]}