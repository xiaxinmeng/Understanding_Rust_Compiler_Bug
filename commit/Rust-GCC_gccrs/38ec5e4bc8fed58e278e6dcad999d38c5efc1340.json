{"sha": "38ec5e4bc8fed58e278e6dcad999d38c5efc1340", "node_id": "C_kwDOANBUbNoAKDM4ZWM1ZTRiYzhmZWQ1OGUyNzhlNmRjYWQ5OTlkMzhjNWVmYzEzNDA", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-08T22:49:48Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-09T06:58:05Z"}, "message": "[range-op-float] Implement MINUS_EXPR.\n\nNow that the generic parts of the binary operators have been\nabstracted, implementing MINUS_EXPR is a cinch.\n\nThe op[12]_range entries will be submitted as a follow-up.\n\ngcc/ChangeLog:\n\n\t* range-op-float.cc (class foperator_minus): New.\n\t(floating_op_table::floating_op_table): Add MINUS_EXPR entry.", "tree": {"sha": "05739f02db62162b25a0cace6a38a513d0420b39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05739f02db62162b25a0cace6a38a513d0420b39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38ec5e4bc8fed58e278e6dcad999d38c5efc1340", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ec5e4bc8fed58e278e6dcad999d38c5efc1340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38ec5e4bc8fed58e278e6dcad999d38c5efc1340", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ec5e4bc8fed58e278e6dcad999d38c5efc1340/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ef5649e9b9f409cf1e133e8670043f066ba3acb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef5649e9b9f409cf1e133e8670043f066ba3acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ef5649e9b9f409cf1e133e8670043f066ba3acb"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "d52e971f84ebf5a5428d40985ef17035e4693078", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ec5e4bc8fed58e278e6dcad999d38c5efc1340/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ec5e4bc8fed58e278e6dcad999d38c5efc1340/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=38ec5e4bc8fed58e278e6dcad999d38c5efc1340", "patch": "@@ -1884,6 +1884,29 @@ class foperator_plus : public range_operator_float\n } fop_plus;\n \n \n+class foperator_minus : public range_operator_float\n+{\n+  void rv_fold (REAL_VALUE_TYPE &lb, REAL_VALUE_TYPE &ub, bool &maybe_nan,\n+\t\ttree type,\n+\t\tconst REAL_VALUE_TYPE &lh_lb,\n+\t\tconst REAL_VALUE_TYPE &lh_ub,\n+\t\tconst REAL_VALUE_TYPE &rh_lb,\n+\t\tconst REAL_VALUE_TYPE &rh_ub) const final override\n+  {\n+    frange_arithmetic (MINUS_EXPR, type, lb, lh_lb, rh_ub, dconstninf);\n+    frange_arithmetic (MINUS_EXPR, type, ub, lh_ub, rh_lb, dconstinf);\n+\n+    // [+INF] - [+INF] = NAN\n+    if (real_isinf (&lh_ub, false) && real_isinf (&rh_ub, false))\n+      maybe_nan = true;\n+    // [-INF] - [-INF] = NAN\n+    else if (real_isinf (&lh_lb, true) && real_isinf (&rh_lb, true))\n+      maybe_nan = true;\n+    else\n+      maybe_nan = false;\n+  }\n+} fop_minus;\n+\n // Instantiate a range_op_table for floating point operations.\n static floating_op_table global_floating_table;\n \n@@ -1917,6 +1940,7 @@ floating_op_table::floating_op_table ()\n   set (ABS_EXPR, fop_abs);\n   set (NEGATE_EXPR, fop_negate);\n   set (PLUS_EXPR, fop_plus);\n+  set (MINUS_EXPR, fop_minus);\n }\n \n // Return a pointer to the range_operator_float instance, if there is"}]}