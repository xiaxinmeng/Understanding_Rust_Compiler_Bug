{"sha": "163869506cbea3e130a9c303c3aeccc11cd97b54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYzODY5NTA2Y2JlYTNlMTMwYTljMzAzYzNhZWNjYzExY2Q5N2I1NA==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1999-03-29T08:22:24Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1999-03-29T08:22:24Z"}, "message": "Made more current\n\nFrom-SVN: r26051", "tree": {"sha": "a11b0ecb590fd8efead2139f6d29e310cba0feaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a11b0ecb590fd8efead2139f6d29e310cba0feaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/163869506cbea3e130a9c303c3aeccc11cd97b54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/163869506cbea3e130a9c303c3aeccc11cd97b54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/163869506cbea3e130a9c303c3aeccc11cd97b54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/163869506cbea3e130a9c303c3aeccc11cd97b54/comments", "author": null, "committer": null, "parents": [{"sha": "edef8288ec6bbbe0cbbccd935a0ec1f5c0864255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edef8288ec6bbbe0cbbccd935a0ec1f5c0864255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edef8288ec6bbbe0cbbccd935a0ec1f5c0864255"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "5481fbfe10633e1d16735bbf9de170f3ba223c93", "filename": "gcc/fixinc/README", "status": "modified", "additions": 32, "deletions": 20, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/163869506cbea3e130a9c303c3aeccc11cd97b54/gcc%2Ffixinc%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/163869506cbea3e130a9c303c3aeccc11cd97b54/gcc%2Ffixinc%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FREADME?ref=163869506cbea3e130a9c303c3aeccc11cd97b54", "patch": "@@ -1,13 +1,13 @@\n \n The fast-fixincludes system now, to the best of our collective belief,\n correctly implements exactly the same functionality as the previous\n-fixincludes/fixinc.* shell scripts.  On most systems where many fixes\n-are required, this is accomplished by putting most of the functionality\n-into a binary executable.  On systems that had dedicated fixinc.* shell\n-scripts, those scripts are still used by default until they can be\n-converted.\n+fixincludes and fixinc.* shell scripts.  On systems where many fixes\n+are required, this is accomplished by putting most of the\n+functionality into a binary executable.  On systems that had dedicated\n+fixinc.* shell scripts, those scripts are still used by default until\n+they can be converted.\n \n-KNOWN PROBLEMS\n+POSSIBLE PROBLEMS\n \n There may be some systems on which the fixinc binary program appears\n to be functional, but fails to work.  Current thinking is that this\n@@ -16,32 +16,44 @@ systems.  If you are experiencing this problem, then copy the script\n ${src}/gcc/fixinc/inclhack.sh into ${builddir}/gcc/fixinc.sh and run\n make again.\n \n-Oh, yes, please also report the problem with a description of\n+And, *please* also report the problem with a description of\n the failure mode (symptoms) and the output from:\n \n         egcs/config.guess\n \n+to me:  Bruce Korb <fixincludes@autogen.freeservers.com>\n+\n TO DO\n \n * fixincl needs to be converted to use gcc's system.h, libiberty, and\n   other portability frameworks.\n \n-* FIXME: XXX needs to have tests for file descriptors > 10 or 12 added\n-  to detect/solve XXX.\n-\n-* \n-\n \n+THEORY OF OPERATION\n \n-THEORY OF OPS\n+See also:  http://autogen.freeservers.com\n \n-inclhack.def contains a list of potential fixes to be applied to the\n-system headers.   This file is processed by autogen to make both a\n-shell script and a binary to apply those fixes to your headers.\n-If the binary cannot be built, the shell version will be used instead.\n+The set of fixes required was distilled down to just the data required\n+to specify what needed to happen for each fix.  Those data were edited\n+into a new file named gcc/fixinc/inclhack.def.  A program called\n+AutoGen (http://autogen.freeservers.com) uses these definitions to\n+instantiate several different templates (gcc/fixinc/*.tpl) that then\n+produces a fixincludes replacement shell script (inclhack.sh), a\n+replacement binary program (fixincl.x) and a script to drive the\n+binary fixincl.sh).\n \n-If mkfixinc.sh determines that your system needs machine-specific\n-fixes that have not yet been applied to inclhack.def, it will install\n-and use the current fixinc.* for that system instead.\n+If there is no special purpose script, then mkfixinc.sh will try to\n+compile, link and test execute the binary version.  If it cannot be\n+successfully built, the shell version will be used instead.  If\n+mkfixinc.sh determines that your system needs machine-specific fixes\n+that have not yet been applied to inclhack.def, it will install and\n+use the current fixinc.* for that system instead.\n \n+Usually, the mkfixinc.sh script will be able to detect when\n+the binary is not runable.  If you do have problems, however,\n+please see \"POSSIBLE PROBLEMS\" above.  Thank you.\n \n+Regards,\n+\tBruce <fixincludes@autogen.freeservers.com>\n+\tRobert <RobertLipe@usa.net>\n+\tManfred <manfred@s-direktnet.de>\n\\ No newline at end of file"}]}