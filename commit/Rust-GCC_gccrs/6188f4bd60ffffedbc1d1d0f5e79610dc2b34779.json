{"sha": "6188f4bd60ffffedbc1d1d0f5e79610dc2b34779", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE4OGY0YmQ2MGZmZmZlZGJjMWQxZDBmNWU3OTYxMGRjMmIzNDc3OQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2013-04-11T13:38:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T13:38:22Z"}, "message": "sem_prag.adb (Analyze_Pragma, [...]): pre-analyze expression with type Any_Priority.\n\n2013-04-11  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Priority): pre-analyze\n\texpression with type Any_Priority.\n\t* exp_ch9.adb (Initialize_Protection): Check that the value\n\tof the priority expression is within the bounds of the proper\n\tpriority type.\n\nFrom-SVN: r197799", "tree": {"sha": "2d307df7c7e99e5f348221ed74ad868fb1794cbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d307df7c7e99e5f348221ed74ad868fb1794cbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6188f4bd60ffffedbc1d1d0f5e79610dc2b34779", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6188f4bd60ffffedbc1d1d0f5e79610dc2b34779", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6188f4bd60ffffedbc1d1d0f5e79610dc2b34779", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6188f4bd60ffffedbc1d1d0f5e79610dc2b34779/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fce68ebe21414ddb666ea729f21b515c1dedd5e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fce68ebe21414ddb666ea729f21b515c1dedd5e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fce68ebe21414ddb666ea729f21b515c1dedd5e7"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "a691ec2168d256e8b3d91cd0bd69ccbe511aeddc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6188f4bd60ffffedbc1d1d0f5e79610dc2b34779/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6188f4bd60ffffedbc1d1d0f5e79610dc2b34779/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6188f4bd60ffffedbc1d1d0f5e79610dc2b34779", "patch": "@@ -1,3 +1,11 @@\n+2013-04-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Priority): pre-analyze\n+\texpression with type Any_Priority.\n+\t* exp_ch9.adb (Initialize_Protection): Check that the value\n+\tof the priority expression is within the bounds of the proper\n+\tpriority type.\n+\n 2013-04-11  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_prag.adb, prj-env.adb: Minor reformatting."}, {"sha": "f292b96f69ef6625355061f57bf16ffed9472b5e", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6188f4bd60ffffedbc1d1d0f5e79610dc2b34779/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6188f4bd60ffffedbc1d1d0f5e79610dc2b34779/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=6188f4bd60ffffedbc1d1d0f5e79610dc2b34779", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -13388,6 +13388,7 @@ package body Exp_Ch9 is\n       Args        : List_Id;\n       L           : constant List_Id := New_List;\n       Has_Entry   : constant Boolean := Has_Entries (Ptyp);\n+      Prio_Type   : Entity_Id;\n       Restricted  : constant Boolean := Restricted_Profile;\n \n    begin\n@@ -13456,18 +13457,37 @@ package body Exp_Ch9 is\n                     Expression\n                      (First (Pragma_Argument_Associations (Prio_Clause)));\n \n+                  --  Get_Rep_Item returns either priority pragma.\n+\n+                  if Pragma_Name (Prio_Clause) = Name_Priority then\n+                     Prio_Type := RTE (RE_Any_Priority);\n+                  else\n+                     Prio_Type := RTE (RE_Interrupt_Priority);\n+                  end if;\n+\n                --  Attribute definition clause Priority\n \n                else\n+                  if Chars (Prio_Clause) = Name_Priority then\n+                     Prio_Type := RTE (RE_Any_Priority);\n+                  else\n+                     Prio_Type := RTE (RE_Interrupt_Priority);\n+                  end if;\n+\n                   Prio := Expression (Prio_Clause);\n                end if;\n \n                --  If priority is a static expression, then we can duplicate it\n                --  with no problem and simply append it to the argument list.\n+               --  However, it has only be pre-analyzed, so we need to check\n+               --  now that it is in the bounds of the priority type.\n \n                if Is_Static_Expression (Prio) then\n+                  Set_Analyzed (Prio, False);\n                   Append_To (Args,\n-                    Duplicate_Subexpr_No_Checks (Prio));\n+                    Make_Type_Conversion (Loc,\n+                      Subtype_Mark => New_Occurrence_Of (Prio_Type, Loc),\n+                      Expression   => Duplicate_Subexpr (Prio)));\n \n                --  Otherwise, the priority may be a per-object expression, if\n                --  it depends on a discriminant of the type. In this case,\n@@ -13477,18 +13497,13 @@ package body Exp_Ch9 is\n                --  appropriate approach, but that could generate declarations\n                --  improperly placed in the enclosing scope.\n \n-               --  Note: Use System.Any_Priority as the expected type for the\n-               --  non-static priority expression, in case the expression has\n-               --  not been analyzed yet (as occurs for example with pragma\n-               --  Interrupt_Priority).\n-\n                else\n                   Temp := Make_Temporary (Loc, 'R', Prio);\n                   Append_To (L,\n                      Make_Object_Declaration (Loc,\n                         Defining_Identifier => Temp,\n                         Object_Definition   =>\n-                          New_Occurrence_Of (RTE (RE_Any_Priority), Loc),\n+                          New_Occurrence_Of (Prio_Type,  Loc),\n                         Expression          => Relocate_Node (Prio)));\n \n                   Append_To (Args, New_Occurrence_Of (Temp, Loc));"}, {"sha": "1d233e026b7edc4d4853c201e86cf747f593c260", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6188f4bd60ffffedbc1d1d0f5e79610dc2b34779/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6188f4bd60ffffedbc1d1d0f5e79610dc2b34779/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=6188f4bd60ffffedbc1d1d0f5e79610dc2b34779", "patch": "@@ -14521,7 +14521,7 @@ package body Sem_Prag is\n                --  described in \"Handling of Default and Per-Object\n                --  Expressions\" in sem.ads.\n \n-               Preanalyze_Spec_Expression (Arg, Standard_Integer);\n+               Preanalyze_Spec_Expression (Arg, RTE (RE_Any_Priority));\n \n                if not Is_Static_Expression (Arg) then\n                   Check_Restriction (Static_Priorities, Arg);"}]}