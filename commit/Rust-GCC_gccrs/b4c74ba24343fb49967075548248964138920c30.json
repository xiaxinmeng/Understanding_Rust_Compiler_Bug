{"sha": "b4c74ba24343fb49967075548248964138920c30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRjNzRiYTI0MzQzZmI0OTk2NzA3NTU0ODI0ODk2NDEzODkyMGMzMA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-10-16T23:06:35Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-10-16T23:06:35Z"}, "message": "re PR c++/29435 (seg fault with sizeof and templates)\n\n\tPR c++/29435\n\t* typeck.c (cxx_sizeof_or_alignof_type): Complete non-dependent\n\ttypes when their sizes are required.  Refine test for VLAs.\n\tPR c++/29435\n\t* g++.dg/template/sizeof11.C: New test.\n\nFrom-SVN: r117799", "tree": {"sha": "fe96515cf4fc58a4cb9a7524973cd76d7d51ac5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe96515cf4fc58a4cb9a7524973cd76d7d51ac5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4c74ba24343fb49967075548248964138920c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4c74ba24343fb49967075548248964138920c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4c74ba24343fb49967075548248964138920c30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4c74ba24343fb49967075548248964138920c30/comments", "author": null, "committer": null, "parents": [{"sha": "571640241cae16fea53dbca4f31ae493d5706aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/571640241cae16fea53dbca4f31ae493d5706aaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/571640241cae16fea53dbca4f31ae493d5706aaf"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "f07426ab8c89a71e740d5caf90b68024d5e0b902", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c74ba24343fb49967075548248964138920c30/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c74ba24343fb49967075548248964138920c30/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b4c74ba24343fb49967075548248964138920c30", "patch": "@@ -1,5 +1,9 @@\n 2006-10-16  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/29435\n+\t* typeck.c (cxx_sizeof_or_alignof_type): Complete non-dependent\n+\ttypes when their sizes are required.  Refine test for VLAs.\n+\n \tPR c++/28211\n \t* parser.c (cp_parser_template_argument): Don't consider \"&var\" a\n \tpossible constant-expression."}, {"sha": "b9ee1f27876ee76909b17e5e283ed232722e5209", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c74ba24343fb49967075548248964138920c30/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c74ba24343fb49967075548248964138920c30/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=b4c74ba24343fb49967075548248964138920c30", "patch": "@@ -1242,6 +1242,7 @@ tree\n cxx_sizeof_or_alignof_type (tree type, enum tree_code op, bool complain)\n {\n   tree value;\n+  bool dependent_p;\n \n   gcc_assert (op == SIZEOF_EXPR || op == ALIGNOF_EXPR);\n   if (type == error_mark_node)\n@@ -1256,15 +1257,19 @@ cxx_sizeof_or_alignof_type (tree type, enum tree_code op, bool complain)\n       value = size_one_node;\n     }\n \n-  if (dependent_type_p (type)\n+  dependent_p = dependent_type_p (type);\n+  if (!dependent_p)\n+    complete_type (type);\n+  if (dependent_p\n       /* VLA types will have a non-constant size.  In the body of an\n \t uninstantiated template, we don't need to try to compute the\n \t value, because the sizeof expression is not an integral\n \t constant expression in that case.  And, if we do try to\n \t compute the value, we'll likely end up with SAVE_EXPRs, which\n \t the template substitution machinery does not expect to see.  */\n-      || (processing_template_decl && \n-\t  TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST))\n+      || (processing_template_decl \n+\t  && COMPLETE_TYPE_P (type)\n+\t  && TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST))\n     {\n       value = build_min (op, size_type_node, type);\n       TREE_READONLY (value) = 1;"}, {"sha": "9d450e76b6488c8521f89863b674e6edd6ffd6e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c74ba24343fb49967075548248964138920c30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c74ba24343fb49967075548248964138920c30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4c74ba24343fb49967075548248964138920c30", "patch": "@@ -1,3 +1,8 @@\n+2006-10-16  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/29435\n+\t* g++.dg/template/sizeof11.C: New test.\n+\n 2006-10-17  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/29392"}, {"sha": "7428e0b238071970ec9fce88de18e719376209ae", "filename": "gcc/testsuite/g++.dg/template/sizeof11.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c74ba24343fb49967075548248964138920c30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c74ba24343fb49967075548248964138920c30/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof11.C?ref=b4c74ba24343fb49967075548248964138920c30", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/29435\n+\n+template < class T > struct A {};\n+template < int> void g()\n+{\n+  sizeof (A < int>);\n+}\n+\n+template < class T > struct B;\n+template < int> void f()\n+{\n+  sizeof (B<int>); // { dg-error \"incomplete\" }\n+}\n+"}]}