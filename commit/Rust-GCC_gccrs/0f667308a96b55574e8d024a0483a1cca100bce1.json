{"sha": "0f667308a96b55574e8d024a0483a1cca100bce1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY2NjczMDhhOTZiNTU1NzRlOGQwMjRhMDQ4M2ExY2NhMTAwYmNlMQ==", "commit": {"author": {"name": "Marco Poletti", "email": "poletti.marco@gmail.com", "date": "2010-02-14T19:44:07Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-02-14T19:44:07Z"}, "message": "intl.c (fake_ngettext): New function.\n\n2010-02-14  Marco Poletti  <poletti.marco@gmail.com>\n\n\t* intl.c (fake_ngettext): New function.\n\t* intl.h (fake_ngettext): Declare.\n\t(ngettext): Define macro.\n\t* collect2.c (notice_translated): New function.\n\t(main): Use notice_translated and ngettext.\n\t* collect2.h (notice_translated): Declare.\n\nFrom-SVN: r156762", "tree": {"sha": "dcd9083bb8ddcca54218f5be9eb599e62829664f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcd9083bb8ddcca54218f5be9eb599e62829664f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f667308a96b55574e8d024a0483a1cca100bce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f667308a96b55574e8d024a0483a1cca100bce1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f667308a96b55574e8d024a0483a1cca100bce1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f667308a96b55574e8d024a0483a1cca100bce1/comments", "author": {"login": "poletti-marco", "id": 1547799, "node_id": "MDQ6VXNlcjE1NDc3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1547799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poletti-marco", "html_url": "https://github.com/poletti-marco", "followers_url": "https://api.github.com/users/poletti-marco/followers", "following_url": "https://api.github.com/users/poletti-marco/following{/other_user}", "gists_url": "https://api.github.com/users/poletti-marco/gists{/gist_id}", "starred_url": "https://api.github.com/users/poletti-marco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poletti-marco/subscriptions", "organizations_url": "https://api.github.com/users/poletti-marco/orgs", "repos_url": "https://api.github.com/users/poletti-marco/repos", "events_url": "https://api.github.com/users/poletti-marco/events{/privacy}", "received_events_url": "https://api.github.com/users/poletti-marco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4a20ced34656f9dee37bce74a07e22e281aa6a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a20ced34656f9dee37bce74a07e22e281aa6a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4a20ced34656f9dee37bce74a07e22e281aa6a9"}], "stats": {"total": 54, "additions": 51, "deletions": 3}, "files": [{"sha": "beff68bb2eb27e3666bb4d5e5d992631bd5885ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f667308a96b55574e8d024a0483a1cca100bce1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f667308a96b55574e8d024a0483a1cca100bce1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f667308a96b55574e8d024a0483a1cca100bce1", "patch": "@@ -1,3 +1,12 @@\n+2010-02-14  Marco Poletti  <poletti.marco@gmail.com>\n+\n+\t* intl.c (fake_ngettext): New function.\n+\t* intl.h (fake_ngettext): Declare.\n+\t(ngettext): Define macro.\n+\t* collect2.c (notice_translated): New function.\n+\t(main): Use notice_translated and ngettext.\n+\t* collect2.h (notice_translated): Declare.\n+\n 2010-02-14  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* reorg.c (delete_computation): Comment fixes."}, {"sha": "120369a26629dd428d1101c636d4c00484d8a285", "filename": "gcc/collect2.c", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f667308a96b55574e8d024a0483a1cca100bce1/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f667308a96b55574e8d024a0483a1cca100bce1/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=0f667308a96b55574e8d024a0483a1cca100bce1", "patch": "@@ -430,6 +430,17 @@ notice (const char *cmsgid, ...)\n   va_end (ap);\n }\n \n+/* Notify user of a non-error, without translating the format string.  */\n+void\n+notice_translated (const char *cmsgid, ...)\n+{\n+  va_list ap;\n+\n+  va_start (ap, cmsgid);\n+  vfprintf (stderr, cmsgid, ap);\n+  va_end (ap);\n+}\n+\n /* Die when sys call fails.  */\n \n void\n@@ -1809,9 +1820,18 @@ main (int argc, char **argv)\n \n   if (debug)\n     {\n-      notice (\"%d constructor(s) found\\n\", constructors.number);\n-      notice (\"%d destructor(s)  found\\n\", destructors.number);\n-      notice (\"%d frame table(s) found\\n\", frame_tables.number);\n+      notice_translated (ngettext (\"%d constructor found\\n\",\n+                                   \"%d constructors found\\n\",\n+                                   constructors.number),\n+                         constructors.number);\n+      notice_translated (ngettext (\"%d destructor found\\n\",\n+                                   \"%d destructors found\\n\",\n+                                   destructors.number),\n+                         destructors.number);\n+      notice_translated (ngettext(\"%d frame table found\\n\",\n+                                  \"%d frame tables found\\n\",\n+                                  frame_tables.number),\n+                         frame_tables.number);\n     }\n \n   /* If the scan exposed nothing of special interest, there's no need to"}, {"sha": "4095734accc554124b2547a5f569717a9358c739", "filename": "gcc/collect2.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f667308a96b55574e8d024a0483a1cca100bce1/gcc%2Fcollect2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f667308a96b55574e8d024a0483a1cca100bce1/gcc%2Fcollect2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.h?ref=0f667308a96b55574e8d024a0483a1cca100bce1", "patch": "@@ -41,6 +41,7 @@ extern char *temporary_firstobj;\n extern int vflag, debug;\n \n extern void error (const char *, ...) ATTRIBUTE_PRINTF_1;\n+extern void notice_translated (const char *, ...) ATTRIBUTE_PRINTF_1;\n extern void notice (const char *, ...) ATTRIBUTE_PRINTF_1;\n extern void fatal (const char *, ...) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n extern void fatal_perror (const char *, ...)"}, {"sha": "47e0b3da051e9b6f79a9c2c236e2cd8750b04325", "filename": "gcc/intl.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f667308a96b55574e8d024a0483a1cca100bce1/gcc%2Fintl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f667308a96b55574e8d024a0483a1cca100bce1/gcc%2Fintl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl.c?ref=0f667308a96b55574e8d024a0483a1cca100bce1", "patch": "@@ -121,6 +121,19 @@ gcc_gettext_width (const char *msgstr)\n \n #endif /* ENABLE_NLS */\n \n+#ifndef ENABLE_NLS\n+\n+const char *\n+fake_ngettext (const char *singular, const char *plural, unsigned long n)\n+{\n+  if (n == 1UL)\n+    return singular;\n+\n+  return plural;\n+}\n+\n+#endif\n+\n /* Return the indent for successive lines, using the width of\n    the STR.  STR must have been translated already.  The string\n    must be freed by the caller.  */"}, {"sha": "61a9434a5cd1c7db5e33357224af13fa82db1785", "filename": "gcc/intl.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f667308a96b55574e8d024a0483a1cca100bce1/gcc%2Fintl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f667308a96b55574e8d024a0483a1cca100bce1/gcc%2Fintl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl.h?ref=0f667308a96b55574e8d024a0483a1cca100bce1", "patch": "@@ -38,8 +38,13 @@ extern size_t gcc_gettext_width (const char *);\n # define bindtextdomain(domain, directory) (domain)\n # undef gettext\n # define gettext(msgid) (msgid)\n+# define ngettext(singular,plural,n) fake_ngettext(singular,plural,n)\n # define gcc_init_libintl()\t/* nothing */\n # define gcc_gettext_width(s) strlen(s)\n+\n+extern const char *fake_ngettext(const char *singular,const char *plural,\n+                                 unsigned long int n);\n+\n #endif\n \n #ifndef _"}]}