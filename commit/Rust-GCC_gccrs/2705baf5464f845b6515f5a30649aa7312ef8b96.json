{"sha": "2705baf5464f845b6515f5a30649aa7312ef8b96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcwNWJhZjU0NjRmODQ1YjY1MTVmNWEzMDY0OWFhNzMxMmVmOGI5Ng==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-01-17T20:01:49Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-01-17T20:01:49Z"}, "message": "install.texi (*-ibm-aix*): Update assembler and exception handling information.\n\n        * doc/install.texi (*-ibm-aix*): Update assembler and exception\n        handling information.\n        * doc/trouble.texi (Interoperation): Add libstdc++ information\n        for AIX.\n        (Misunderstandings): Add template instantiation and static template\n        member information for AIX.\n\nFrom-SVN: r48962", "tree": {"sha": "71288b8b8e075108399d4225ebb684762f55abfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71288b8b8e075108399d4225ebb684762f55abfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2705baf5464f845b6515f5a30649aa7312ef8b96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2705baf5464f845b6515f5a30649aa7312ef8b96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2705baf5464f845b6515f5a30649aa7312ef8b96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2705baf5464f845b6515f5a30649aa7312ef8b96/comments", "author": null, "committer": null, "parents": [{"sha": "c56664e09e68fda5815501bbfe0cbbb206c2b691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c56664e09e68fda5815501bbfe0cbbb206c2b691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c56664e09e68fda5815501bbfe0cbbb206c2b691"}], "stats": {"total": 70, "additions": 48, "deletions": 22}, "files": [{"sha": "5d6e957eda1895a15444a6abe4df6d39f37551a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2705baf5464f845b6515f5a30649aa7312ef8b96/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2705baf5464f845b6515f5a30649aa7312ef8b96/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2705baf5464f845b6515f5a30649aa7312ef8b96", "patch": "@@ -1,3 +1,12 @@\n+2002-01-17  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* doc/install.texi (*-ibm-aix*): Update assembler and exception\n+\thandling information.\n+\t* doc/trouble.texi (Interoperation): Add libstdc++ information\n+\tfor AIX.\n+\t(Misunderstandings): Add template instantiation and static template\n+\tmember information for AIX.\n+\n 2002-01-17  Jason Merrill  <jason@redhat.com>\n \n \t* dbxout.c (dbxout_type): Support const and volatile."}, {"sha": "1c110c5617780b26025eaf906ef097634ca14b29", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2705baf5464f845b6515f5a30649aa7312ef8b96/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2705baf5464f845b6515f5a30649aa7312ef8b96/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=2705baf5464f845b6515f5a30649aa7312ef8b96", "patch": "@@ -2512,32 +2512,22 @@ does not provide a definition that will confuse @command{configure}.\n If this error occurs during stage2 or later, then the problem most likely\n is the version of Make (see above).\n \n-Binutils 2.10 does not support AIX 4.3.  Binutils available from the\n-@uref{http://www-1.ibm.com/servers/aix/products/aixos/linux/,,AIX\n-Toolbox for Linux: GNU and Open Source tools for AIX};\n-website does work.  Binutils 2.11 is expected to include AIX 4.3\n-support.  The GNU Assembler is necessary for @samp{libstdc++} to build.  The\n-AIX native @command{ld} still is recommended.  The native AIX tools do\n+The GNU Assembler incorrectly reports that it supports WEAK symbols on\n+AIX which causes GCC to try to utilize weak symbol functionality which\n+is not really supported on the platform.  The native @command{as} and\n+@command{ld} still are recommended.  The native AIX tools do\n interoperate with GCC@.\n \n+Building @file{libstdc++.a} requires a fix for a AIX Assembler bug\n+APAR IY26685 (AIX 4.3) or APAR IY25528 (AIX 5.1).\n+\n Linking executables and shared libraries may produce warnings of\n duplicate symbols.  The assembly files generated by GCC for AIX always\n have included multiple symbol definitions for certain global variable\n and function declarations in the original program.  The warnings should\n not prevent the linker from producing a correct library or runnable\n executable.\n \n-GCC's exception handling implementation stores process-specific data in\n-the shared library which prevents exception handling from working\n-correctly on AIX in a default installation.  To work around this, the\n-shared objects need to be loaded in the process private segment to\n-prevent them from being shared and marked read-only.  This is\n-accomplished on AIX by installing the shared libraries\n-(@file{libgcc_s.a} and @file{libstdc++.a}) with file permissions\n-disallowing read-other (@samp{chmod a+x,o-r}).  If the shared libraries\n-have been used, the shared library segment can be cleaned using the\n-@samp{/usr/sbin/slibclean} command.\n-\n AIX 4.3 utilizes a ``large format'' archive to support both 32-bit and\n 64-bit object modules.  The routines provided in AIX 4.3.0 and AIX 4.3.1\n to parse archive libraries did not handle the new format correctly."}, {"sha": "fb6e9832653a4819151b3f2d91609fefe968a77b", "filename": "gcc/doc/trouble.texi", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2705baf5464f845b6515f5a30649aa7312ef8b96/gcc%2Fdoc%2Ftrouble.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2705baf5464f845b6515f5a30649aa7312ef8b96/gcc%2Fdoc%2Ftrouble.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftrouble.texi?ref=2705baf5464f845b6515f5a30649aa7312ef8b96", "patch": "@@ -290,15 +290,37 @@ Although this behavior differs from most other systems, it is not a\n bug because redefining an @code{extern} variable as @code{static}\n is undefined in ISO C@.\n \n+@item\n+In extremely rare cases involving some very large functions you may\n+receive errors from the AIX Assembler complaining about a displacement\n+that is too large.  If you should run into it, you can work around by\n+making your function smaller.\n+\n+@item\n+The @file{libstdc++.a} library in GCC relies on the SVR4 dynamic\n+linker semantics which merges global symbols between libraries and\n+applications, especially necessary for C++ streams functionality.\n+This is not the default behavior of AIX shared libraries and dynamic\n+linking.  @file{libstdc++.a} is built on AIX with ``runtime-linking''\n+enabled so that symbol merging can occur.  To utilize this feature,\n+the application linked with @file{libstdc++.a} must include the\n+@option{-Wl,-brtl} flag on the link line.  G++ cannot impose this\n+because this option may interfere with the semantics of the user\n+program and users may not always use @samp{g++} to link his or her\n+application. Applications are not required to use the\n+@option{-Wl,-brtl} flag on the link line---the rest of the\n+@file{libstdc++.a} library which is not dependent on the symbol\n+merging semantics will continue to function correctly.\n+\n @item\n AIX on the RS/6000 provides support (NLS) for environments outside of\n the United States.  Compilers and assemblers use NLS to support\n locale-specific representations of various objects including\n-floating-point numbers (@samp{.} vs @samp{,} for separating decimal fractions).\n-There have been problems reported where the library linked with GCC does\n-not produce the same floating-point formats that the assembler accepts.\n-If you have this problem, set the @env{LANG} environment variable to\n-@samp{C} or @samp{En_US}.\n+floating-point numbers (@samp{.} vs @samp{,} for separating decimal\n+fractions). There have been problems reported where the library linked\n+with GCC does not produce the same floating-point formats that the\n+assembler accepts. If you have this problem, set the @env{LANG}\n+environment variable to @samp{C} or @samp{En_US}.\n \n @item\n @opindex fdollars-in-identifiers\n@@ -901,6 +923,11 @@ implemented using the ISO standard @file{stdarg.h} method of\n variable arguments.  Furthermore, calls to functions using @file{stdarg.h}\n variable arguments must have a prototype for the called function\n in scope at the time of the call.\n+\n+@item\n+On AIX and other platforms without weak symbol support, templates\n+need to be instantiated explicitly and symbols for static members\n+of templates will not be generated.\n @end itemize\n \n @node C++ Misunderstandings"}]}