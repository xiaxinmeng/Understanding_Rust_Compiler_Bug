{"sha": "bfd5f9f59dc139568b3c205b7452a68cd8392d05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZkNWY5ZjU5ZGMxMzk1NjhiM2MyMDViNzQ1MmE2OGNkODM5MmQwNQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2011-10-26T13:47:48Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2011-10-26T13:47:48Z"}, "message": "re PR debug/50826 (bootstrap on 64 bit pa broken by r180194, ICE in mem_loc_descriptor)\n\nPR debug/50826\n* var-tracking.c (rtx_debug_expr_p): New.\n(use_type): Don't use debug exprs to track non-VTA variables.\n\nFrom-SVN: r180525", "tree": {"sha": "e82c87dcd74f1774911e079c54c2deb258e25ca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e82c87dcd74f1774911e079c54c2deb258e25ca0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfd5f9f59dc139568b3c205b7452a68cd8392d05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd5f9f59dc139568b3c205b7452a68cd8392d05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd5f9f59dc139568b3c205b7452a68cd8392d05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd5f9f59dc139568b3c205b7452a68cd8392d05/comments", "author": null, "committer": null, "parents": [{"sha": "1cc17820c32e8b9886100466bc7ac9ff235b254a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc17820c32e8b9886100466bc7ac9ff235b254a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cc17820c32e8b9886100466bc7ac9ff235b254a"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "6d48ccd9fe5d1fe24096aa0192775589283557a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd5f9f59dc139568b3c205b7452a68cd8392d05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd5f9f59dc139568b3c205b7452a68cd8392d05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bfd5f9f59dc139568b3c205b7452a68cd8392d05", "patch": "@@ -1,3 +1,9 @@\n+2011-10-26  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/50826\n+\t* var-tracking.c (rtx_debug_expr_p): New.\n+\t(use_type): Don't use debug exprs to track non-VTA variables.\n+\n 2011-10-26  Jeff Law  <law@redhat.com>\n \n \t* doc/invoke.texi (sink-frequency-threshold): Document."}, {"sha": "44bab38de0017e3b5bd7102286e4ec31e54321d1", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd5f9f59dc139568b3c205b7452a68cd8392d05/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd5f9f59dc139568b3c205b7452a68cd8392d05/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=bfd5f9f59dc139568b3c205b7452a68cd8392d05", "patch": "@@ -4907,6 +4907,18 @@ replace_expr_with_values (rtx loc)\n     return cselib_subst_to_values (loc, VOIDmode);\n }\n \n+/* Return true if *X is a DEBUG_EXPR.  Usable as an argument to\n+   for_each_rtx to tell whether there are any DEBUG_EXPRs within\n+   RTX.  */\n+\n+static int\n+rtx_debug_expr_p (rtx *x, void *data ATTRIBUTE_UNUSED)\n+{\n+  rtx loc = *x;\n+\n+  return GET_CODE (loc) == DEBUG_EXPR;\n+}\n+\n /* Determine what kind of micro operation to choose for a USE.  Return\n    MO_CLOBBER if no micro operation is to be generated.  */\n \n@@ -4988,7 +5000,13 @@ use_type (rtx loc, struct count_use_info *cui, enum machine_mode *modep)\n       else if (target_for_debug_bind (var_debug_decl (expr)))\n \treturn MO_CLOBBER;\n       else if (track_loc_p (loc, expr, INT_MEM_OFFSET (loc),\n-\t\t\t    false, modep, NULL))\n+\t\t\t    false, modep, NULL)\n+\t       /* Multi-part variables shouldn't refer to one-part\n+\t\t  variable names such as VALUEs (never happens) or\n+\t\t  DEBUG_EXPRs (only happens in the presence of debug\n+\t\t  insns).  */\n+\t       && (!MAY_HAVE_DEBUG_INSNS\n+\t\t   || !for_each_rtx (&XEXP (loc, 0), rtx_debug_expr_p, NULL)))\n \treturn MO_USE;\n       else\n \treturn MO_CLOBBER;"}]}