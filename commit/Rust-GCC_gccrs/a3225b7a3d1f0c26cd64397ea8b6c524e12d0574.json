{"sha": "a3225b7a3d1f0c26cd64397ea8b6c524e12d0574", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMyMjViN2EzZDFmMGMyNmNkNjQzOTdlYThiNmM1MjRlMTJkMDU3NA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-10-05T11:27:05Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-10-05T11:27:05Z"}, "message": "warn_summary (subdirectoryFilter): New shell function to optionally filter in/out gcc subdirectories when...\n\n       * warn_summary (subdirectoryFilter): New shell function to\n       optionally filter in/out gcc subdirectories when summarizing\n       warnings.  Add new flags to support subdirectory filtering.\n       Also, ensure the bootstrap stage is a number.  Add some more C\n       keywords that are preserved in the \"warning type\" summary and\n       tighten up the \"arg ???\" regexp.\n\nFrom-SVN: r22839", "tree": {"sha": "8ed506a5e505844c9d1fe6af345bcc98cd550815", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ed506a5e505844c9d1fe6af345bcc98cd550815"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3225b7a3d1f0c26cd64397ea8b6c524e12d0574", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3225b7a3d1f0c26cd64397ea8b6c524e12d0574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3225b7a3d1f0c26cd64397ea8b6c524e12d0574", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3225b7a3d1f0c26cd64397ea8b6c524e12d0574/comments", "author": null, "committer": null, "parents": [{"sha": "b75ab88ba3b591f07692be10df267f0bddecc055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75ab88ba3b591f07692be10df267f0bddecc055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b75ab88ba3b591f07692be10df267f0bddecc055"}], "stats": {"total": 62, "additions": 54, "deletions": 8}, "files": [{"sha": "1e7c1e474f153c180c820d4f274dddb92c76f6fb", "filename": "contrib/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3225b7a3d1f0c26cd64397ea8b6c524e12d0574/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3225b7a3d1f0c26cd64397ea8b6c524e12d0574/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=a3225b7a3d1f0c26cd64397ea8b6c524e12d0574", "patch": "@@ -1,3 +1,13 @@\n+Mon Oct  5 14:19:48 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* warn_summary (subdirectoryFilter): New shell function to\n+ \toptionally filter in/out gcc subdirectories when summarizing\n+ \twarnings.  Add new flags to support subdirectory filtering.\n+\t\n+\tAlso, ensure the bootstrap stage is a number.  Add some more C\n+ \tkeywords that are preserved in the \"warning type\" summary and\n+ \ttighten up the \"arg ???\" regexp.\n+\n Tue Sep 22 07:30 Bruce Korb <korb@datadesign.com>\n \n \t* fixinc/inclhack.def:  Not all C++ comments in C headers"}, {"sha": "2ce64034bdf7e134b2d35ae8c0b9f54f11fae307", "filename": "contrib/warn_summary", "status": "modified", "additions": 44, "deletions": 8, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3225b7a3d1f0c26cd64397ea8b6c524e12d0574/contrib%2Fwarn_summary", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3225b7a3d1f0c26cd64397ea8b6c524e12d0574/contrib%2Fwarn_summary", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fwarn_summary?ref=a3225b7a3d1f0c26cd64397ea8b6c524e12d0574", "patch": "@@ -4,6 +4,25 @@\n #\n # By Kaveh Ghazi  (ghazi@caip.rutgers.edu)  12/13/97.\n \n+# This function does one of three things.  It either passes through\n+# all warning data, or passes through gcc toplevel warnings, or passes\n+# through a particular subdirectory set of warnings.\n+subdirectoryFilter()\n+{\n+  if test \"$filter\" = '' ; then\n+    # Pass through all lines.\n+    cat $1\n+  else\n+    if test \"$filter\" = nosub ; then\n+      # Omit all subdirectories.\n+      $AWK 'BEGIN{t=1} ; /^cd [a-z]*; make/{if(t==1)t=0} ; /Leaving directory/{if(t==0)t=1} ; {if(t==1)print}' $1\n+    else\n+      # Pass through only subdir $filter.\n+      $AWK \"/^cd $filter\"'; make/{if(t==0)t=1} ; /Leaving directory/{if(t==1)t=0} ; {if(t==1)print}' $1\n+    fi\n+  fi      \n+}\n+\n # This function displays all warnings from stageN of the bootstrap.\n stageNwarns()\n {\n@@ -13,7 +32,7 @@ stageNwarns()\n \t$AWK \"/ warning: /{if(t==1)print} ; /stage$stageNminus1/{if(t==0)t=1} ; /stage$stageN/{if(t==1)t=0}\"\n }\n \n-usage=\"usage: `basename $0` [-s stage] [file(s)]\"\n+usage=\"usage: `basename $0` [-s stage] [-nosub|-ch|-cp|-f|-java] [file(s)]\"\n stageN=3\n \n # Find a good awk.\n@@ -31,36 +50,53 @@ while test -n \"$1\" ; do\n  case \"$1\" in\n    -s)  if test -z \"$2\"; then echo $usage; exit 1; fi; stageN=\"$2\"; shift 2 ;;\n    -s*) stageN=\"`expr $1 : '-s\\(.*\\)'`\" ; shift ;;\n+   -nosub|-ch|-cp|-f|-java) filter=\"`expr $1 : '-\\(.*\\)'`\" ; shift ;;\n    -*)  echo $usage ; exit 1 ;;\n    *)   break ;;\n  esac\n done\n \n-\n+# Check for a valid value of $stageN.\n+case \"$stageN\" in\n+  [1-9]) ;;\n+  *) echo \"Stage <$stageN> must be in the range [1..9].\" ; exit 1 ;;\n+esac\n \n for file in \"$@\" ; do\n \n-  count=`stageNwarns $file | wc -l`\n-  echo There are $count warnings in stage$stageN of this bootstrap.\n+  if test \"$filter\" = '' ; then\n+    echo \"Counting all warnings,\"\n+  else\n+    if test \"$filter\" = nosub ; then\n+      echo \"Counting non-subdirectory warnings,\"\n+    else\n+      echo \"Counting warnings in the gcc/$filter subdirectory,\"\n+    fi\n+  fi\n+  count=`subdirectoryFilter $file | stageNwarns | wc -l`\n+  echo there are $count warnings in stage$stageN of this bootstrap.\n \n   echo\n   echo Number of warnings per file:\n-  stageNwarns $file | $AWK -F: '{print$1}' | sort | uniq -c | sort -nr\n+  subdirectoryFilter $file | stageNwarns | $AWK -F: '{print$1}' | \\\n+\tsort | uniq -c | sort -nr\n \n   echo\n   echo Number of warning types:\n-  stageNwarns $file | sed 's/.*warning: //; \n+  subdirectoryFilter $file | stageNwarns | sed 's/.*warning: //; \n \t\ts/`\\(int\\)'\"'\"'/\"\\1\"/g;\n+\t\ts/`\\(long\\)'\"'\"'/\"\\1\"/g;\n \t\ts/`\\(char\\)'\"'\"'/\"\\1\"/g;\n \t\ts/`\\(inline\\)'\"'\"'/\"\\1\"/g;\n \t\ts/`\\(else\\)'\"'\"'/\"\\1\"/g;\n \t\ts/`\\(return\\)'\"'\"'/\"\\1\"/g;\n \t\ts/`\\(static\\)'\"'\"'/\"\\1\"/g;\n \t\ts/`\\(extern\\)'\"'\"'/\"\\1\"/g;\n+\t\ts/`\\(const\\)'\"'\"'/\"\\1\"/g;\n \t\ts/`\\(longjmp\\)'\"'\"' or `\\(vfork\\)'\"'\"'/\"\\1\" or \"\\2\"/g;\n \t\ts/`'\"[^']*'/\"'`???'\"'/g;\"'\n-\t\ts/.*format, .* arg (arg [0-9]*)/??? format, ??? arg (arg ???)/;\n-\t\ts/(arg [0-9]*)/(arg ???)/;\n+\t\ts/.*format, .* arg (arg [0-9][0-9]*)/??? format, ??? arg (arg ???)/;\n+\t\ts/\\([( ]\\)arg [0-9][0-9]*\\([) ]\\)/\\1arg ???\\2/;\n \t\ts/\"\\([^\"]*\\)\"/`\\1'\"'\"'/g' | \\\n \tsort | uniq -c | sort -nr\n "}]}