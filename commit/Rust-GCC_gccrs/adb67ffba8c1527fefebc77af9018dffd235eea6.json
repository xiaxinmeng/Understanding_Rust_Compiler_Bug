{"sha": "adb67ffba8c1527fefebc77af9018dffd235eea6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRiNjdmZmJhOGMxNTI3ZmVmZWJjNzdhZjkwMThkZmZkMjM1ZWVhNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-09-28T15:15:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-09-28T15:15:57Z"}, "message": "i386.h (CC_REGNO): Remove FPSR_REGS.\n\n\t* config/i386/i386.h (CC_REGNO): Remove FPSR_REGS.\n\t* config/i386/i386.c (ix86_fixed_condition_code_regs): Use\n\tINVALID_REGNUM instead of FPSR_REG.\n\t(ix86_md_asm_adjust): Do not clobber FPSR_REG.\n\t* config/i386/i386.md: Update comment of FP compares.\n\t(fldenv): Do not clobber FPSR_REG.\n\nFrom-SVN: r264694", "tree": {"sha": "efff342df931c2209f613d6c67f98e90b0ed98ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efff342df931c2209f613d6c67f98e90b0ed98ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adb67ffba8c1527fefebc77af9018dffd235eea6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb67ffba8c1527fefebc77af9018dffd235eea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adb67ffba8c1527fefebc77af9018dffd235eea6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb67ffba8c1527fefebc77af9018dffd235eea6/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "713e9ce2c7a9a2561f559ef4b3d169ff37afe9cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713e9ce2c7a9a2561f559ef4b3d169ff37afe9cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713e9ce2c7a9a2561f559ef4b3d169ff37afe9cc"}], "stats": {"total": 48, "additions": 25, "deletions": 23}, "files": [{"sha": "58a30d0275b004b0a4b804af0961c1257f12f53b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adb67ffba8c1527fefebc77af9018dffd235eea6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adb67ffba8c1527fefebc77af9018dffd235eea6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=adb67ffba8c1527fefebc77af9018dffd235eea6", "patch": "@@ -1,3 +1,12 @@\n+2018-09-28  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (CC_REGNO): Remove FPSR_REGS.\n+\t* config/i386/i386.c (ix86_fixed_condition_code_regs): Use\n+\tINVALID_REGNUM instead of FPSR_REG.\n+\t(ix86_md_asm_adjust): Do not clobber FPSR_REG.\n+\t* config/i386/i386.md: Update comment of FP compares.\n+\t(fldenv): Do not clobber FPSR_REG.\n+\n 2018-09-28  Richard Biener  <rguenther@suse.de>\n \n \t* tree.h (BLOCK_ORIGIN): New."}, {"sha": "8018f3174078286b98cc0ae852e8266b4dc83d6a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adb67ffba8c1527fefebc77af9018dffd235eea6/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adb67ffba8c1527fefebc77af9018dffd235eea6/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=adb67ffba8c1527fefebc77af9018dffd235eea6", "patch": "@@ -21969,7 +21969,7 @@ static bool\n ix86_fixed_condition_code_regs (unsigned int *p1, unsigned int *p2)\n {\n   *p1 = FLAGS_REG;\n-  *p2 = FPSR_REG;\n+  *p2 = INVALID_REGNUM;\n   return true;\n }\n \n@@ -43656,9 +43656,6 @@ ix86_md_asm_adjust (vec<rtx> &outputs, vec<rtx> &/*inputs*/,\n \t\t    vec<const char *> &constraints,\n \t\t    vec<rtx> &clobbers, HARD_REG_SET &clobbered_regs)\n {\n-  clobbers.safe_push (gen_rtx_REG (CCFPmode, FPSR_REG));\n-  SET_HARD_REG_BIT (clobbered_regs, FPSR_REG);\n-\n   bool saw_asm_flag = false;\n \n   start_sequence ();"}, {"sha": "6feb6711235b9ef6d865e785a8c290c60440d851", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adb67ffba8c1527fefebc77af9018dffd235eea6/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adb67ffba8c1527fefebc77af9018dffd235eea6/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=adb67ffba8c1527fefebc77af9018dffd235eea6", "patch": "@@ -1501,7 +1501,7 @@ enum reg_class\n #define MMX_REGNO_P(N) IN_RANGE ((N), FIRST_MMX_REG, LAST_MMX_REG)\n \n #define CC_REG_P(X) (REG_P (X) && CC_REGNO_P (REGNO (X)))\n-#define CC_REGNO_P(X) ((X) == FLAGS_REG || (X) == FPSR_REG)\n+#define CC_REGNO_P(X) ((X) == FLAGS_REG)\n \n #define MOD4_SSE_REG_P(X) (REG_P (X) && MOD4_SSE_REGNO_P (REGNO (X)))\n #define MOD4_SSE_REGNO_P(N) ((N) == XMM0_REG  \\"}, {"sha": "91947518119e7d9a9e007b35080515a9a9a9f5b0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adb67ffba8c1527fefebc77af9018dffd235eea6/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adb67ffba8c1527fefebc77af9018dffd235eea6/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=adb67ffba8c1527fefebc77af9018dffd235eea6", "patch": "@@ -1463,10 +1463,10 @@\n \n \n ;; FP compares, step 1:\n-;; Set the FP condition codes.\n+;; Set the FP condition codes and move fpsr to ax.\n \n-;; We may not use \"#\" to split and emit these, since the REG_DEAD notes\n-;; used to manage the reg stack popping would not be preserved.\n+;; We may not use \"#\" to split and emit these\n+;; due to reg-stack pops killing fpsr.\n \n (define_insn \"*cmp<mode>_0_i387\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n@@ -1649,19 +1649,7 @@\n    (set_attr \"fp_int_src\" \"true\")\n    (set_attr \"mode\" \"<SWI24:MODE>\")])\n \n-;; FP compares, step 2\n-;; Move the fpsw to ax.\n-\n-(define_insn \"x86_fnstsw_1\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n-\t(unspec:HI [(reg:CCFP FPSR_REG)] UNSPEC_FNSTSW))]\n-  \"TARGET_80387\"\n-  \"fnstsw\\t%0\"\n-  [(set_attr \"length\" \"2\")\n-   (set_attr \"mode\" \"SI\")\n-   (set_attr \"unit\" \"i387\")])\n-\n-;; FP compares, step 3\n+;; FP compares, step 2:\n ;; Get ax into flags, general case.\n \n (define_insn \"x86_sahf_1\"\n@@ -1683,7 +1671,7 @@\n    (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"mode\" \"SI\")])\n \n-;; Pentium Pro can do steps 1 through 3 in one go.\n+;; Pentium Pro can do both steps in one go.\n ;; (these instructions set flags directly)\n \n (define_subst_attr \"unord\" \"unord_subst\" \"\" \"u\")\n@@ -15158,6 +15146,15 @@\n    }\n })\n \n+(define_insn \"x86_fnstsw_1\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n+\t(unspec:HI [(reg:CCFP FPSR_REG)] UNSPEC_FNSTSW))]\n+  \"TARGET_80387\"\n+  \"fnstsw\\t%0\"\n+  [(set_attr \"length\" \"2\")\n+   (set_attr \"mode\" \"SI\")\n+   (set_attr \"unit\" \"i387\")])\n+\n (define_insn \"fpremxf4_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n@@ -19606,7 +19603,6 @@\n (define_insn \"fldenv\"\n   [(unspec_volatile [(match_operand:BLK 0 \"memory_operand\" \"m\")]\n \t\t    UNSPECV_FLDENV)\n-   (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:XF ST0_REG))\n    (clobber (reg:XF ST1_REG))\n    (clobber (reg:XF ST2_REG))"}]}