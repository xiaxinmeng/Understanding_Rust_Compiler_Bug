{"sha": "f6615c213354fd3ec7fc6238e61cc26bb1830464", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY2MTVjMjEzMzU0ZmQzZWM3ZmM2MjM4ZTYxY2MyNmJiMTgzMDQ2NA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-05-26T07:57:32Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-05-26T11:27:48Z"}, "message": "coroutines, testsuite: Fix co-ret-17-void-ret-coro.C.\n\nThis was a bad testcase, found with fsanitize=address; the final suspend\nis 'suspend never' which flows off the end of the coroutine destroying\nthe promise and the frame.   At that point access via the handle is an\nerror.  Fixed by checking that the promise is destroyed via a global var.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/coroutines/torture/co-ret-17-void-ret-coro.C: Check for\n\tpromise destruction via a global variable.", "tree": {"sha": "da7fa87ac3cace0696ca8bad889960f7ccd42abd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da7fa87ac3cace0696ca8bad889960f7ccd42abd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6615c213354fd3ec7fc6238e61cc26bb1830464", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6615c213354fd3ec7fc6238e61cc26bb1830464", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6615c213354fd3ec7fc6238e61cc26bb1830464", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6615c213354fd3ec7fc6238e61cc26bb1830464/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8462662da25f2cb8de0e4fe82ec5880041f38f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8462662da25f2cb8de0e4fe82ec5880041f38f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8462662da25f2cb8de0e4fe82ec5880041f38f2"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "01a75c1905dbf60d056ec9bde2f10e0cf31dcdb3", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-ret-17-void-ret-coro.C", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6615c213354fd3ec7fc6238e61cc26bb1830464/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-17-void-ret-coro.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6615c213354fd3ec7fc6238e61cc26bb1830464/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-17-void-ret-coro.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-17-void-ret-coro.C?ref=f6615c213354fd3ec7fc6238e61cc26bb1830464", "patch": "@@ -5,14 +5,17 @@\n \n #include \"../coro.h\"\n \n+int g_promise = -1;\n+\n template<typename R, typename HandleRef, typename ...T>\n struct std::coroutine_traits<R, HandleRef, T...> {\n     struct promise_type {\n         promise_type (HandleRef h, T ...args)\n         { h = std::coroutine_handle<promise_type>::from_promise (*this);\n           PRINT (\"Created Promise\");\n+          g_promise = 1;\n         }\n-\n+\t~promise_type () { PRINT (\"Destroyed Promise\"); g_promise = 0;}\n         void get_return_object() {}\n \n         auto initial_suspend() {\n@@ -45,10 +48,11 @@ int main ()\n \n   // initial suspend.\n   h.resume ();\n-  \n-  if (!h.done())\n+\n+  // The coro should have self-destructed.\n+  if (g_promise)\n     {\n-      PRINT (\"main: apparently wasn't done...\");\n+      PRINT (\"main: apparently we did not complete...\");\n       abort ();\n     }\n "}]}