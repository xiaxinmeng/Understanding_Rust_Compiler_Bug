{"sha": "c55b54403ea3a3e781eaf14d3057d103bd77ade3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU1YjU0NDAzZWEzYTNlNzgxZWFmMTRkMzA1N2QxMDNiZDc3YWRlMw==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2016-09-20T15:53:00Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2016-09-20T15:53:00Z"}, "message": "[PATCH] [AArch64] Add missing attributes to arm_neon.h\n\nCommitted on behalf of Tamar Christina  <tamar.christina@arm.com>\n\ngcc/\n\n\t* config/aarch64/arm_neon.h\n\t(vst2_s64, vst2_u64, vst2_f64, vst2_s8): Add missing attributes.\n\t(vst3_s64, vst3_u64, vst3_f64, vst3_s8): Likewise.\n\t(vst4_s64, vst4_u64, vst4_f64, vst4_s8): Likewise.\n\nFrom-SVN: r240271", "tree": {"sha": "1718eeea4da41d3130515a4ab04a76b4eef36583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1718eeea4da41d3130515a4ab04a76b4eef36583"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c55b54403ea3a3e781eaf14d3057d103bd77ade3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55b54403ea3a3e781eaf14d3057d103bd77ade3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c55b54403ea3a3e781eaf14d3057d103bd77ade3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55b54403ea3a3e781eaf14d3057d103bd77ade3/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "978fc7d446e520481934ea675f006b88043c8d24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978fc7d446e520481934ea675f006b88043c8d24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/978fc7d446e520481934ea675f006b88043c8d24"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "9bab58d7a33e454dcaba05690adc3ee1e38f7899", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55b54403ea3a3e781eaf14d3057d103bd77ade3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55b54403ea3a3e781eaf14d3057d103bd77ade3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c55b54403ea3a3e781eaf14d3057d103bd77ade3", "patch": "@@ -1,3 +1,10 @@\n+2016-09-20  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/aarch64/arm_neon.h\n+\t(vst2_s64, vst2_u64, vst2_f64, vst2_s8): Add missing attributes.\n+\t(vst3_s64, vst3_u64, vst3_f64, vst3_s8): Likewise.\n+\t(vst4_s64, vst4_u64, vst4_f64, vst4_s8): Likewise.\n+\n 2016-09-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* config/var/vax.h (ELIMINABLE_REGS): Define."}, {"sha": "c463e3b698a47b9b5c5a04e0fb7fff1f71817af1", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55b54403ea3a3e781eaf14d3057d103bd77ade3/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55b54403ea3a3e781eaf14d3057d103bd77ade3/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=c55b54403ea3a3e781eaf14d3057d103bd77ade3", "patch": "@@ -26102,6 +26102,7 @@ vst1q_lane_u64 (uint64_t *__a, uint64x2_t __b, const int __lane)\n /* vstn */\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst2_s64 (int64_t * __a, int64x1x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n@@ -26114,6 +26115,7 @@ vst2_s64 (int64_t * __a, int64x1x2_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst2_u64 (uint64_t * __a, uint64x1x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n@@ -26126,6 +26128,7 @@ vst2_u64 (uint64_t * __a, uint64x1x2_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst2_f64 (float64_t * __a, float64x1x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n@@ -26138,6 +26141,7 @@ vst2_f64 (float64_t * __a, float64x1x2_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst2_s8 (int8_t * __a, int8x8x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n@@ -26397,6 +26401,7 @@ vst2q_f64 (float64_t * __a, float64x2x2_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst3_s64 (int64_t * __a, int64x1x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n@@ -26411,6 +26416,7 @@ vst3_s64 (int64_t * __a, int64x1x3_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst3_u64 (uint64_t * __a, uint64x1x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n@@ -26425,6 +26431,7 @@ vst3_u64 (uint64_t * __a, uint64x1x3_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst3_f64 (float64_t * __a, float64x1x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n@@ -26439,6 +26446,7 @@ vst3_f64 (float64_t * __a, float64x1x3_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst3_s8 (int8_t * __a, int8x8x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n@@ -26731,6 +26739,7 @@ vst3q_f64 (float64_t * __a, float64x2x3_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst4_s64 (int64_t * __a, int64x1x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n@@ -26747,6 +26756,7 @@ vst4_s64 (int64_t * __a, int64x1x4_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst4_u64 (uint64_t * __a, uint64x1x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n@@ -26763,6 +26773,7 @@ vst4_u64 (uint64_t * __a, uint64x1x4_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst4_f64 (float64_t * __a, float64x1x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n@@ -26779,6 +26790,7 @@ vst4_f64 (float64_t * __a, float64x1x4_t val)\n }\n \n __extension__ extern __inline void\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vst4_s8 (int8_t * __a, int8x8x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;"}]}