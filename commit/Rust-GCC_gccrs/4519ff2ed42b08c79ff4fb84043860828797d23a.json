{"sha": "4519ff2ed42b08c79ff4fb84043860828797d23a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUxOWZmMmVkNDJiMDhjNzlmZjRmYjg0MDQzODYwODI4Nzk3ZDIzYQ==", "commit": {"author": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2014-10-28T12:56:30Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2014-10-28T12:56:30Z"}, "message": "Actually removed redundant tests from r216783.\n\nFrom-SVN: r216787", "tree": {"sha": "86425680faacbb0dadbc8db63246548e8c722553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86425680faacbb0dadbc8db63246548e8c722553"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4519ff2ed42b08c79ff4fb84043860828797d23a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4519ff2ed42b08c79ff4fb84043860828797d23a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4519ff2ed42b08c79ff4fb84043860828797d23a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4519ff2ed42b08c79ff4fb84043860828797d23a/comments", "author": null, "committer": null, "parents": [{"sha": "acc770ae3be0824167b80217d67e34d00ae868fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc770ae3be0824167b80217d67e34d00ae868fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acc770ae3be0824167b80217d67e34d00ae868fe"}], "stats": {"total": 39, "additions": 0, "deletions": 39}, "files": [{"sha": "a58411c3af3ed52cf36ab53f3ff55e1e81148729", "filename": "gcc/testsuite/c-c++-common/asan/no-redundant-instrumentation-2.c", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc770ae3be0824167b80217d67e34d00ae868fe/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fno-redundant-instrumentation-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc770ae3be0824167b80217d67e34d00ae868fe/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fno-redundant-instrumentation-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fno-redundant-instrumentation-2.c?ref=acc770ae3be0824167b80217d67e34d00ae868fe", "patch": "@@ -1,26 +0,0 @@\n-/* This tests that when faced with two references to the same memory\n-   location in the same basic block, the second reference should not\n-   be instrumented by the Address Sanitizer.  But in case of access to\n-   overlapping regions we must be precise.  */\n-\n-/* { dg-options \"-fdump-tree-sanopt\" } */\n-/* { dg-do compile } */\n-/* { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O0\" } } */\n-\n-int\n-main ()\n-{\n-  char tab[5];\n-\n-  /* Here, we instrument the access at offset 0 and access at offset\n-     4.  */\n-  __builtin_memset (tab, 1, sizeof (tab));\n-  /* We instrumented access at offset 0 above already, so only access\n-     at offset 3 is instrumented.  */\n-  __builtin_memset (tab, 1, 3);\n-}\n-\n-/* { dg-final { scan-tree-dump-times \"& 7\" 3 \"sanopt\" } } */\n-/* { dg-final { scan-tree-dump-times \"__builtin___asan_report_store_n\" 2 \"sanopt\" } } */\n-/* { dg-final { scan-tree-dump-times \"__builtin___asan_report\" 2 \"sanopt\" }  } */\n-/* { dg-final { cleanup-tree-dump \"sanopt\" } } */"}, {"sha": "9449de578847f5aad19f804825dfb08180e98c0b", "filename": "gcc/testsuite/c-c++-common/asan/no-redundant-instrumentation-9.c", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc770ae3be0824167b80217d67e34d00ae868fe/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fno-redundant-instrumentation-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc770ae3be0824167b80217d67e34d00ae868fe/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fno-redundant-instrumentation-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fno-redundant-instrumentation-9.c?ref=acc770ae3be0824167b80217d67e34d00ae868fe", "patch": "@@ -1,13 +0,0 @@\n-/* { dg-options \"-fdump-tree-sanopt\" } */\n-/* { dg-do compile } */\n-/* { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O0\" } } */\n-\n-__SIZE_TYPE__\n-f (char *a)\n-{\n-  a[0] = '1';\n-  return  __builtin_strlen (a);\n-}\n-\n-/* { dg-final { scan-tree-dump-times \"__asan_report_load1\" 1 \"sanopt\" } } */\n-/* { dg-final { cleanup-tree-dump \"sanopt\" } } */"}]}