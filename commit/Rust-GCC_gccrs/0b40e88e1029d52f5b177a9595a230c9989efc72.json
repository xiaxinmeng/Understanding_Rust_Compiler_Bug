{"sha": "0b40e88e1029d52f5b177a9595a230c9989efc72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI0MGU4OGUxMDI5ZDUyZjViMTc3YTk1OTVhMjMwYzk5ODllZmM3Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2002-11-03T23:42:51Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-11-03T23:42:51Z"}, "message": "re PR middle-end/8408 (simple legal c program ice in fixup_var_refs_1, at function.c:1938)\n\n        PR middle-end/8408\n        * genrecog.c (preds): Handle ADDRESSOF.\n        (validate_pattern): Mark it as an lvalue.\n\t* gcc.c-torture/compile/20021103-1.c: New.\n\nFrom-SVN: r58774", "tree": {"sha": "9e3955f385b4f465c28d52da9a6f5639a2b73532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e3955f385b4f465c28d52da9a6f5639a2b73532"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b40e88e1029d52f5b177a9595a230c9989efc72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b40e88e1029d52f5b177a9595a230c9989efc72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b40e88e1029d52f5b177a9595a230c9989efc72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b40e88e1029d52f5b177a9595a230c9989efc72/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7189ea290290d888e90cc561c5871ba95081f267", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7189ea290290d888e90cc561c5871ba95081f267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7189ea290290d888e90cc561c5871ba95081f267"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "148d5066aef13aab9c89570d6e5a902ce936561a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b40e88e1029d52f5b177a9595a230c9989efc72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b40e88e1029d52f5b177a9595a230c9989efc72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b40e88e1029d52f5b177a9595a230c9989efc72", "patch": "@@ -1,3 +1,9 @@\n+2002-11-03  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR middle-end/8408\n+\t* genrecog.c (preds): Handle ADDRESSOF.\n+\t(validate_pattern): Mark it as an lvalue.\n+\n 2002-11-02  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (rs6000_override_options): Use string"}, {"sha": "56b2680eb1fc5c5d8f69b78a3b756302d47b5cdb", "filename": "gcc/genrecog.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b40e88e1029d52f5b177a9595a230c9989efc72/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b40e88e1029d52f5b177a9595a230c9989efc72/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=0b40e88e1029d52f5b177a9595a230c9989efc72", "patch": "@@ -187,22 +187,23 @@ static const struct pred_table\n   const RTX_CODE codes[NUM_RTX_CODE];\n } preds[] = {\n   {\"general_operand\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\n-\t\t       LABEL_REF, SUBREG, REG, MEM}},\n+\t\t       LABEL_REF, SUBREG, REG, MEM, ADDRESSOF}},\n #ifdef PREDICATE_CODES\n   PREDICATE_CODES\n #endif\n   {\"address_operand\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\n-\t\t       LABEL_REF, SUBREG, REG, MEM, PLUS, MINUS, MULT}},\n-  {\"register_operand\", {SUBREG, REG}},\n-  {\"pmode_register_operand\", {SUBREG, REG}},\n+\t\t       LABEL_REF, SUBREG, REG, MEM, ADDRESSOF,\n+\t\t       PLUS, MINUS, MULT}},\n+  {\"register_operand\", {SUBREG, REG, ADDRESSOF}},\n+  {\"pmode_register_operand\", {SUBREG, REG, ADDRESSOF}},\n   {\"scratch_operand\", {SCRATCH, REG}},\n   {\"immediate_operand\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\n \t\t\t LABEL_REF}},\n   {\"const_int_operand\", {CONST_INT}},\n   {\"const_double_operand\", {CONST_INT, CONST_DOUBLE}},\n-  {\"nonimmediate_operand\", {SUBREG, REG, MEM}},\n+  {\"nonimmediate_operand\", {SUBREG, REG, MEM, ADDRESSOF}},\n   {\"nonmemory_operand\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\n-\t\t\t LABEL_REF, SUBREG, REG}},\n+\t\t\t LABEL_REF, SUBREG, REG, ADDRESSOF}},\n   {\"push_operand\", {MEM}},\n   {\"pop_operand\", {MEM}},\n   {\"memory_operand\", {SUBREG, MEM}},\n@@ -211,7 +212,7 @@ static const struct pred_table\n \t\t\t   UNORDERED, ORDERED, UNEQ, UNGE, UNGT, UNLE,\n \t\t\t   UNLT, LTGT}},\n   {\"mode_independent_operand\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\n-\t\t\t\tLABEL_REF, SUBREG, REG, MEM}}\n+\t\t\t\tLABEL_REF, SUBREG, REG, MEM, ADDRESSOF}}\n };\n \n #define NUM_KNOWN_PREDS ARRAY_SIZE (preds)\n@@ -520,6 +521,7 @@ validate_pattern (pattern, insn, set, set_code)\n \t\t    if (c != REG\n \t\t\t&& c != SUBREG\n \t\t\t&& c != MEM\n+\t\t\t&& c != ADDRESSOF\n \t\t\t&& c != CONCAT\n \t\t\t&& c != PARALLEL\n \t\t\t&& c != STRICT_LOW_PART)"}, {"sha": "82802001a5def3e135901433d27b74224c95569b", "filename": "gcc/testsuite/gcc.c-torture/compile/20021103-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b40e88e1029d52f5b177a9595a230c9989efc72/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021103-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b40e88e1029d52f5b177a9595a230c9989efc72/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021103-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021103-1.c?ref=0b40e88e1029d52f5b177a9595a230c9989efc72", "patch": "@@ -0,0 +1,10 @@\n+/* PR middle-end/8408 */\n+/* Verify that the recognizer explicitly\n+   handles ADDRESSOF operands. */\n+\n+void foo(void)\n+{\n+  double d1 = 3.14159, d2;\n+  if (&d2 == &d1)\n+     ;\n+}"}]}