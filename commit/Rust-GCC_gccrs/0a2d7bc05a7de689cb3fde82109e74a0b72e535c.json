{"sha": "0a2d7bc05a7de689cb3fde82109e74a0b72e535c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEyZDdiYzA1YTdkZTY4OWNiM2ZkZTgyMTA5ZTc0YTBiNzJlNTM1Yw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-09-29T20:49:58Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-09-29T20:49:58Z"}, "message": "driver-i386.c (host_detect_local_cpu): Check maximum ext_level before calling CPUID with 0x80000008.\n\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Check maximum\n\text_level before calling CPUID with 0x80000008.\n\tSimplify xgetbv checks.\n\nFrom-SVN: r240637", "tree": {"sha": "64ef9bbd62abd3d0d71dc9edd66a008d9e621480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64ef9bbd62abd3d0d71dc9edd66a008d9e621480"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a2d7bc05a7de689cb3fde82109e74a0b72e535c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2d7bc05a7de689cb3fde82109e74a0b72e535c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2d7bc05a7de689cb3fde82109e74a0b72e535c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2d7bc05a7de689cb3fde82109e74a0b72e535c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd4b238a77c34f2ef1109623da2200793fa45d45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4b238a77c34f2ef1109623da2200793fa45d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd4b238a77c34f2ef1109623da2200793fa45d45"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "1658dcb342411c426324d23510f9c4aee351d3b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2d7bc05a7de689cb3fde82109e74a0b72e535c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2d7bc05a7de689cb3fde82109e74a0b72e535c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a2d7bc05a7de689cb3fde82109e74a0b72e535c", "patch": "@@ -1,3 +1,9 @@\n+2016-09-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Check maximum\n+\text_level before calling CPUID with 0x80000008.\n+\tSimplify xgetbv checks.\n+\n 2016-09-29  David Malcolm  <dmalcolm@redhat.com>\n \n \t* Makefile.in (OBJS): Add print-rtl-function.o."}, {"sha": "7460b59a7d200c98389efa753f39c6a4ffa21fef", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2d7bc05a7de689cb3fde82109e74a0b72e535c/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2d7bc05a7de689cb3fde82109e74a0b72e535c/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=0a2d7bc05a7de689cb3fde82109e74a0b72e535c", "patch": "@@ -517,7 +517,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   /* Check cpuid level of extended features.  */\n   __cpuid (0x80000000, ext_level, ebx, ecx, edx);\n \n-  if (ext_level > 0x80000000)\n+  if (ext_level >= 0x80000001)\n     {\n       __cpuid (0x80000001, eax, ebx, ecx, edx);\n \n@@ -535,7 +535,10 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_3dnowp = edx & bit_3DNOWP;\n       has_3dnow = edx & bit_3DNOW;\n       has_mwaitx = ecx & bit_MWAITX;\n+    }\n \n+  if (ext_level >= 0x80000008)\n+    {\n       __cpuid (0x80000008, eax, ebx, ecx, edx);\n       has_clzero = ebx & bit_CLZERO;\n     }\n@@ -548,14 +551,21 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n #define XSTATE_OPMASK\t\t\t0x20\n #define XSTATE_ZMM\t\t\t0x40\n #define XSTATE_HI_ZMM\t\t\t0x80\n+\n+#define XCR_AVX_ENABLED_MASK \\\n+  (XSTATE_SSE | XSTATE_YMM)\n+#define XCR_AVX512F_ENABLED_MASK \\\n+  (XSTATE_SSE | XSTATE_YMM | XSTATE_OPMASK | XSTATE_ZMM | XSTATE_HI_ZMM)\n+\n   if (has_osxsave)\n     asm (\".byte 0x0f; .byte 0x01; .byte 0xd0\"\n \t : \"=a\" (eax), \"=d\" (edx)\n \t : \"c\" (XCR_XFEATURE_ENABLED_MASK));\n+  else\n+    eax = 0;\n \n-  /* Check if SSE and YMM states are supported.  */\n-  if (!has_osxsave\n-      || (eax & (XSTATE_SSE | XSTATE_YMM)) != (XSTATE_SSE | XSTATE_YMM))\n+  /* Check if AVX registers are supported.  */\n+  if ((eax & XCR_AVX_ENABLED_MASK) != XCR_AVX_ENABLED_MASK)\n     {\n       has_avx = 0;\n       has_avx2 = 0;\n@@ -569,10 +579,8 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_xsavec = 0;\n     }\n \n-  if (!has_osxsave\n-      || (eax &\n-\t  (XSTATE_SSE | XSTATE_YMM | XSTATE_OPMASK | XSTATE_ZMM | XSTATE_HI_ZMM))\n-\t  != (XSTATE_SSE | XSTATE_YMM | XSTATE_OPMASK | XSTATE_ZMM | XSTATE_HI_ZMM))\n+  /* Check if AVX512F registers are supported.  */\n+  if ((eax & XCR_AVX512F_ENABLED_MASK) != XCR_AVX512F_ENABLED_MASK)\n     {\n       has_avx512f = 0;\n       has_avx512er = 0;\n@@ -603,7 +611,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       unsigned int name;\n \n       /* Detect geode processor by its processor signature.  */\n-      if (ext_level > 0x80000001)\n+      if (ext_level >= 0x80000002)\n \t__cpuid (0x80000002, name, ebx, ecx, edx);\n       else\n \tname = 0;"}]}