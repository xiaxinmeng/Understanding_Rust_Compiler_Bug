{"sha": "e2b4f10338578f4fb49e7b47ced0c4178017b17c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJiNGYxMDMzODU3OGY0ZmI0OWU3YjQ3Y2VkMGM0MTc4MDE3YjE3Yw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-07-12T15:30:50Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-07-12T15:30:50Z"}, "message": "i386.c (ix86_sol10_return_in_memory): Rename to ix86_solaris_return_in_memory.\n\n\t* config/i386/i386.c (ix86_sol10_return_in_memory): Rename to\n\tix86_solaris_return_in_memory.\n\t* config/i386-protos.h: Reflect this.\n\t* config/i386/vx-common.h (SUBTARGET_RETURN_IN_MEMORY): Likewise.\n\t* config/i386/sol2-10.h (SUBTARGET_RETURN_IN_MEMORY): Likewise.\n\tMove ...\n\t* config/i386/sol2.h (SUBTARGET_RETURN_IN_MEMORY): ... here.\n\nFrom-SVN: r162082", "tree": {"sha": "b0209de8a14add6ad133c69637c912efbd3e9256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0209de8a14add6ad133c69637c912efbd3e9256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2b4f10338578f4fb49e7b47ced0c4178017b17c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b4f10338578f4fb49e7b47ced0c4178017b17c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2b4f10338578f4fb49e7b47ced0c4178017b17c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b4f10338578f4fb49e7b47ced0c4178017b17c/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04a17bb6ed69f59efbffbe5ace2ea82b2e4590c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a17bb6ed69f59efbffbe5ace2ea82b2e4590c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04a17bb6ed69f59efbffbe5ace2ea82b2e4590c7"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "5c481866c15eeb7b77911e4b2cb72cc930bdae61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2b4f10338578f4fb49e7b47ced0c4178017b17c", "patch": "@@ -1,3 +1,13 @@\n+2010-07-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/i386/i386.c (ix86_sol10_return_in_memory): Rename to\n+\tix86_solaris_return_in_memory.\n+\t* config/i386-protos.h: Reflect this.\n+\t* config/i386/vx-common.h (SUBTARGET_RETURN_IN_MEMORY): Likewise.\n+\t* config/i386/sol2-10.h (SUBTARGET_RETURN_IN_MEMORY): Likewise.\n+\tMove ...\n+\t* config/i386/sol2.h (SUBTARGET_RETURN_IN_MEMORY): ... here.\n+\n 2010-07-12  Jie Zhang  <jie@codesourcery.com>\n \n \t* config/arm/arm.c (arm_get_frame_offsets): Don't use r3 to"}, {"sha": "e7ee94830306601b74ae1501dcc699c2f606fb0e", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=e2b4f10338578f4fb49e7b47ced0c4178017b17c", "patch": "@@ -141,7 +141,7 @@ extern rtx ix86_libcall_value (enum machine_mode);\n extern bool ix86_function_arg_regno_p (int);\n extern void ix86_asm_output_function_label (FILE *, const char *, tree);\n extern int ix86_function_arg_boundary (enum machine_mode, tree);\n-extern bool ix86_sol10_return_in_memory (const_tree,const_tree);\n+extern bool ix86_solaris_return_in_memory (const_tree,const_tree);\n extern rtx ix86_force_to_memory (enum machine_mode, rtx);\n extern void ix86_free_from_memory (enum machine_mode);\n extern enum calling_abi ix86_cfun_abi (void);"}, {"sha": "4fd2aab96f48b4aae63a0066ee9a7b14759a9f81", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e2b4f10338578f4fb49e7b47ced0c4178017b17c", "patch": "@@ -6873,12 +6873,12 @@ ix86_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n }\n \n /* Return false iff TYPE is returned in memory.  This version is used\n-   on Solaris 10.  It is similar to the generic ix86_return_in_memory,\n+   on Solaris 2.  It is similar to the generic ix86_return_in_memory,\n    but differs notably in that when MMX is available, 8-byte vectors\n    are returned in memory, rather than in MMX registers.  */\n \n bool\n-ix86_sol10_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n+ix86_solaris_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n {\n   int size;\n   enum machine_mode mode = type_natural_mode (type, NULL);"}, {"sha": "c7fdec9a1a31bce6492819eb56e947fc4fd8e171", "filename": "gcc/config/i386/sol2-10.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2Fconfig%2Fi386%2Fsol2-10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2Fconfig%2Fi386%2Fsol2-10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-10.h?ref=e2b4f10338578f4fb49e7b47ced0c4178017b17c", "patch": "@@ -145,7 +145,3 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef TARGET_ASM_NAMED_SECTION\n #define TARGET_ASM_NAMED_SECTION i386_solaris_elf_named_section\n-\n-#undef SUBTARGET_RETURN_IN_MEMORY\n-#define SUBTARGET_RETURN_IN_MEMORY(TYPE, FNTYPE) \\\n-\tix86_sol10_return_in_memory (TYPE, FNTYPE)"}, {"sha": "57f75ea5092f3ba9f1ed7f216333d9bcaed97182", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=e2b4f10338578f4fb49e7b47ced0c4178017b17c", "patch": "@@ -140,6 +140,10 @@ along with GCC; see the file COPYING3.  If not see\n /* Register the Solaris-specific #pragma directives.  */\n #define REGISTER_SUBTARGET_PRAGMAS() solaris_register_pragmas ()\n \n+#undef SUBTARGET_RETURN_IN_MEMORY\n+#define SUBTARGET_RETURN_IN_MEMORY(TYPE, FNTYPE) \\\n+\tix86_solaris_return_in_memory (TYPE, FNTYPE)\n+\n /* Output a simple call for .init/.fini.  */\n #define ASM_OUTPUT_CALL(FILE, FN)\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\"}, {"sha": "cc7ea75ce405ab31c37535113b016b7c34905634", "filename": "gcc/config/i386/vx-common.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2Fconfig%2Fi386%2Fvx-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b4f10338578f4fb49e7b47ced0c4178017b17c/gcc%2Fconfig%2Fi386%2Fvx-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvx-common.h?ref=e2b4f10338578f4fb49e7b47ced0c4178017b17c", "patch": "@@ -1,5 +1,5 @@\n /* IA32 VxWorks and VxWorks AE target definitions.\n-   Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2007, 2008, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -20,7 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n   asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n \n-/* VxWorks uses the same ABI as Solaris 10.  */\n+/* VxWorks uses the same ABI as Solaris 2.  */\n \n #define SUBTARGET_RETURN_IN_MEMORY(TYPE, FNTYPE) \\\n-\tix86_sol10_return_in_memory (TYPE, FNTYPE)\n+\tix86_solaris_return_in_memory (TYPE, FNTYPE)"}]}