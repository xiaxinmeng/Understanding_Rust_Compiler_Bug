{"sha": "af3869c1cca932fb4696a49aae03fa8fa032d618", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYzODY5YzFjY2E5MzJmYjQ2OTZhNDlhYWUwM2ZhOGZhMDMyZDYxOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-25T23:21:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-25T23:21:18Z"}, "message": "(record_jump_cond): Don't do anything if OP0 and OP1 are already\nequivalent.\n\nFrom-SVN: r7984", "tree": {"sha": "c111a3a3b5af357fa0a2c4f891e147e50a597d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c111a3a3b5af357fa0a2c4f891e147e50a597d3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af3869c1cca932fb4696a49aae03fa8fa032d618", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af3869c1cca932fb4696a49aae03fa8fa032d618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af3869c1cca932fb4696a49aae03fa8fa032d618", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af3869c1cca932fb4696a49aae03fa8fa032d618/comments", "author": null, "committer": null, "parents": [{"sha": "b278301b1b1724a1edb673afafc8c90e211f1906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b278301b1b1724a1edb673afafc8c90e211f1906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b278301b1b1724a1edb673afafc8c90e211f1906"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "a4de3477ebbf9f61f673f7306df8af9764511b89", "filename": "gcc/cse.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af3869c1cca932fb4696a49aae03fa8fa032d618/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af3869c1cca932fb4696a49aae03fa8fa032d618/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=af3869c1cca932fb4696a49aae03fa8fa032d618", "patch": "@@ -5805,6 +5805,13 @@ record_jump_cond (code, mode, op0, op1, reversed_nonequality)\n   op0_elt = lookup (op0, op0_hash, mode);\n   op1_elt = lookup (op1, op1_hash, mode);\n \n+  /* If both operands are already equivalent or if they are not in the\n+     table but are identical, do nothing.  */\n+  if ((op0_elt != 0 && op1_elt != 0\n+       && op0_elt->first_same_value == op1_elt->first_same_value)\n+      || op0 == op1 || rtx_equal_p (op0, op1))\n+    return;\n+\n   /* If we aren't setting two things equal all we can do is save this\n      comparison.   Similarly if this is floating-point.  In the latter\n      case, OP1 might be zero and both -0.0 and 0.0 are equal to it."}]}