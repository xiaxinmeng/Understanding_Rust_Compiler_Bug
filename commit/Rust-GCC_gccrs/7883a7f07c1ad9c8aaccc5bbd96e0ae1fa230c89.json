{"sha": "7883a7f07c1ad9c8aaccc5bbd96e0ae1fa230c89", "node_id": "C_kwDOANBUbNoAKDc4ODNhN2YwN2MxYWQ5YzhhYWNjYzViYmQ5NmUwYWUxZmEyMzBjODk", "commit": {"author": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2017-12-06T21:55:10Z"}, "committer": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2021-10-29T16:26:27Z"}, "message": "Fortran: Free type-bound procedure structs\n\ncompiling gfortran.dg/typebound_proc_31.f90 leaked the type-bound\nstructs:\n\n56 bytes in 1 blocks are definitely lost.\n  at 0x4C2CC05: calloc (vg_replace_malloc.c:711)\n  by 0x151EA90: xcalloc (xmalloc.c:162)\n  by 0x8E3E4F: gfc_get_typebound_proc(gfc_typebound_proc*) (symbol.c:4945)\n  by 0x84C095: match_procedure_in_type (decl.c:10486)\n  by 0x84C095: gfc_match_procedure() (decl.c:6696)\n...\n\ngcc/fortran/ChangeLog:\n\n2017-12-06  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n\n\t* symbol.c (free_tb_tree): Free type-bound procedure struct.\n\t(gfc_get_typebound_proc): Use explicit memcpy for clarity.", "tree": {"sha": "386260693883ed0ed8018f7b36b665e783eb5b3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/386260693883ed0ed8018f7b36b665e783eb5b3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7883a7f07c1ad9c8aaccc5bbd96e0ae1fa230c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7883a7f07c1ad9c8aaccc5bbd96e0ae1fa230c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7883a7f07c1ad9c8aaccc5bbd96e0ae1fa230c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7883a7f07c1ad9c8aaccc5bbd96e0ae1fa230c89/comments", "author": null, "committer": null, "parents": [{"sha": "5380cf0272800847858e117740efaa6d0d6a3996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5380cf0272800847858e117740efaa6d0d6a3996", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5380cf0272800847858e117740efaa6d0d6a3996"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "34c0ba2fac4083eece8a2e230c482ebd3364d861", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7883a7f07c1ad9c8aaccc5bbd96e0ae1fa230c89/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7883a7f07c1ad9c8aaccc5bbd96e0ae1fa230c89/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=7883a7f07c1ad9c8aaccc5bbd96e0ae1fa230c89", "patch": "@@ -3832,7 +3832,7 @@ free_tb_tree (gfc_symtree *t)\n \n   /* TODO: Free type-bound procedure structs themselves; probably needs some\n      sort of ref-counting mechanism.  */\n-\n+  free (t->n.tb);\n   free (t);\n }\n \n@@ -5073,7 +5073,7 @@ gfc_get_typebound_proc (gfc_typebound_proc *tb0)\n \n   result = XCNEW (gfc_typebound_proc);\n   if (tb0)\n-    *result = *tb0;\n+    memcpy (result, tb0, sizeof (gfc_typebound_proc));\n   result->error = 1;\n \n   latest_undo_chgset->tbps.safe_push (result);"}]}