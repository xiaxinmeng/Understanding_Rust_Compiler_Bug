{"sha": "2663727d853438ee4d67b200a08f94a318745486", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY2MzcyN2Q4NTM0MzhlZTRkNjdiMjAwYTA4Zjk0YTMxODc0NTQ4Ng==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-05-05T16:07:32Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-05-05T16:07:32Z"}, "message": "libstdc++: Implement LWG 3517/3520 for join_view/transform_view\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (transform_view::_Iterator::iter_swap):\n\tRemove as per LWG 3520.\n\t(join_view::_Iterator::iter_swap): Add indirectly_swappable\n\tconstraint as per LWG 3517.", "tree": {"sha": "f35d79f67b89a54c2cc79aaedcc3e724685d342c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f35d79f67b89a54c2cc79aaedcc3e724685d342c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2663727d853438ee4d67b200a08f94a318745486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2663727d853438ee4d67b200a08f94a318745486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2663727d853438ee4d67b200a08f94a318745486", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2663727d853438ee4d67b200a08f94a318745486/comments", "author": null, "committer": null, "parents": [{"sha": "d9937da063e5847f45f7f1f7a02bed7dbc8fb2f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9937da063e5847f45f7f1f7a02bed7dbc8fb2f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9937da063e5847f45f7f1f7a02bed7dbc8fb2f6"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "f21e08a36e3bc2a6582d2a253ae1e0b9d89e78eb", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2663727d853438ee4d67b200a08f94a318745486/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2663727d853438ee4d67b200a08f94a318745486/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=2663727d853438ee4d67b200a08f94a318745486", "patch": "@@ -1581,12 +1581,6 @@ namespace views::__adaptor\n \t      return *__i;\n \t  }\n \n-\t  friend constexpr void\n-\t  iter_swap(const _Iterator& __x, const _Iterator& __y)\n-\t    noexcept(noexcept(ranges::iter_swap(__x._M_current, __y._M_current)))\n-\t    requires indirectly_swappable<_Base_iter>\n-\t  { return ranges::iter_swap(__x._M_current, __y._M_current); }\n-\n \t  friend _Iterator<!_Const>;\n \t  template<bool> friend struct _Sentinel;\n \t};\n@@ -2520,6 +2514,7 @@ namespace views::__adaptor\n \t  friend constexpr void\n \t  iter_swap(const _Iterator& __x, const _Iterator& __y)\n \t    noexcept(noexcept(ranges::iter_swap(__x._M_inner, __y._M_inner)))\n+\t    requires indirectly_swappable<_Inner_iter>\n \t  { return ranges::iter_swap(__x._M_inner, __y._M_inner); }\n \n \t  friend _Iterator<!_Const>;"}]}