{"sha": "acc10c793127d5683b19158fd89fd0d4f4fc9db0", "node_id": "C_kwDOANBUbNoAKGFjYzEwYzc5MzEyN2Q1NjgzYjE5MTU4ZmQ4OWZkMGQ0ZjRmYzlkYjA", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-01-09T23:17:20Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-01-26T19:10:16Z"}, "message": "RISC-V: Add probability model of each block to prevent endless loop of Phase 3\n\nNotice that the PASS is just simpily pick the probability >= 50%\nto do the backward fusion which will create endless loop on Phase 3.\n\nAdding this probability to fix this bug.\ngcc/ChangeLog:\n\n\t* config/riscv/riscv-vsetvl.cc\n\t(vector_infos_manager::vector_infos_manager): Add probability.\n\t(vector_infos_manager::dump): Ditto.\n\t(pass_vsetvl::compute_probabilities): Ditto.\n\t* config/riscv/riscv-vsetvl.h (struct vector_block_info): Ditto.", "tree": {"sha": "4cb9a210b0cbac10f5fef854f9a06827c6439344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cb9a210b0cbac10f5fef854f9a06827c6439344"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acc10c793127d5683b19158fd89fd0d4f4fc9db0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc10c793127d5683b19158fd89fd0d4f4fc9db0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acc10c793127d5683b19158fd89fd0d4f4fc9db0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc10c793127d5683b19158fd89fd0d4f4fc9db0/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ae4d1dfb8f43b99aea4e86e3ec8e48e9480045f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae4d1dfb8f43b99aea4e86e3ec8e48e9480045f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ae4d1dfb8f43b99aea4e86e3ec8e48e9480045f"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "02bdfebbb5849de9ad0216f32f771d41c8950fb1", "filename": "gcc/config/riscv/riscv-vsetvl.cc", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc10c793127d5683b19158fd89fd0d4f4fc9db0/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc10c793127d5683b19158fd89fd0d4f4fc9db0/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc?ref=acc10c793127d5683b19158fd89fd0d4f4fc9db0", "patch": "@@ -1466,6 +1466,7 @@ vector_infos_manager::vector_infos_manager ()\n \t  vector_block_infos[bb->index ()].reaching_out = vector_insn_info ();\n \t  for (insn_info *insn : bb->real_insns ())\n \t    vector_insn_infos[insn->uid ()].parse_insn (insn);\n+\t  vector_block_infos[bb->index ()].probability = profile_probability ();\n \t}\n     }\n }\n@@ -1643,6 +1644,8 @@ vector_infos_manager::dump (FILE *file) const\n \t}\n       fprintf (file, \"<FOOTER>=\");\n       vector_block_infos[cfg_bb->index].reaching_out.dump (file);\n+      fprintf (file, \"<Probability>=\");\n+      vector_block_infos[cfg_bb->index].probability.dump (file);\n       fprintf (file, \"\\n\\n\");\n     }\n \n@@ -1765,6 +1768,7 @@ class pass_vsetvl : public rtl_opt_pass\n \n   void init (void);\n   void done (void);\n+  void compute_probabilities (void);\n \n public:\n   pass_vsetvl (gcc::context *ctxt) : rtl_opt_pass (pass_data_vsetvl, ctxt) {}\n@@ -2625,6 +2629,41 @@ pass_vsetvl::done (void)\n   m_vector_manager = nullptr;\n }\n \n+/* Compute probability for each block.  */\n+void\n+pass_vsetvl::compute_probabilities (void)\n+{\n+  /* Don't compute it in -O0 since we don't need it.  */\n+  if (!optimize)\n+    return;\n+  edge e;\n+  edge_iterator ei;\n+\n+  for (const bb_info *bb : crtl->ssa->bbs ())\n+    {\n+      basic_block cfg_bb = bb->cfg_bb ();\n+      auto &curr_prob\n+\t= m_vector_manager->vector_block_infos[cfg_bb->index].probability;\n+      if (ENTRY_BLOCK_PTR_FOR_FN (cfun) == cfg_bb)\n+\tcurr_prob = profile_probability::always ();\n+      gcc_assert (curr_prob.initialized_p ());\n+      FOR_EACH_EDGE (e, ei, cfg_bb->succs)\n+\t{\n+\t  auto &new_prob\n+\t    = m_vector_manager->vector_block_infos[e->dest->index].probability;\n+\t  if (!new_prob.initialized_p ())\n+\t    new_prob = curr_prob * e->probability;\n+\t  else if (new_prob == profile_probability::always ())\n+\t    continue;\n+\t  else\n+\t    new_prob += curr_prob * e->probability;\n+\t}\n+    }\n+  auto &exit_block\n+    = m_vector_manager->vector_block_infos[EXIT_BLOCK_PTR_FOR_FN (cfun)->index];\n+  exit_block.probability = profile_probability::always ();\n+}\n+\n /* Lazy vsetvl insertion for optimize > 0. */\n void\n pass_vsetvl::lazy_vsetvl (void)"}, {"sha": "ef1064e11bda13b5572543184d853ad1fd73103b", "filename": "gcc/config/riscv/riscv-vsetvl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acc10c793127d5683b19158fd89fd0d4f4fc9db0/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acc10c793127d5683b19158fd89fd0d4f4fc9db0/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.h?ref=acc10c793127d5683b19158fd89fd0d4f4fc9db0", "patch": "@@ -291,6 +291,9 @@ struct vector_block_info\n   /* The reaching_out vector insn_info of the block.  */\n   vector_insn_info reaching_out;\n \n+  /* The static execute probability of the demand info.  */\n+  profile_probability probability;\n+\n   vector_block_info () = default;\n };\n "}]}