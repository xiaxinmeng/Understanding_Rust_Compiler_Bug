{"sha": "576b067cc8b761ae9e489e9f85691483ef7744e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc2YjA2N2NjOGI3NjFhZTllNDg5ZTlmODU2OTE0ODNlZjc3NDRlOA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-11-29T21:56:57Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-11-29T21:56:57Z"}, "message": "avoid false positives on ILP32 targets.\n\n\ngcc/testsuite/ChangeLog:\n\n\tavoid false positives on ILP32 targets.\n\t* gcc.dg/tree-ssa/builtin-sprintf-warn-3.c: Same.\n\nFrom-SVN: r242977", "tree": {"sha": "ad0cf5cd8317166ed8ee7b3e56c8b089bd6687f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad0cf5cd8317166ed8ee7b3e56c8b089bd6687f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/576b067cc8b761ae9e489e9f85691483ef7744e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576b067cc8b761ae9e489e9f85691483ef7744e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/576b067cc8b761ae9e489e9f85691483ef7744e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576b067cc8b761ae9e489e9f85691483ef7744e8/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80a3051292b8c36ab22377a36c9fda47c7fd1d5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a3051292b8c36ab22377a36c9fda47c7fd1d5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80a3051292b8c36ab22377a36c9fda47c7fd1d5a"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "f548855d2e15cd4aa0ca58a7e8fee72783858bd9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576b067cc8b761ae9e489e9f85691483ef7744e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576b067cc8b761ae9e489e9f85691483ef7744e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=576b067cc8b761ae9e489e9f85691483ef7744e8", "patch": "@@ -1,3 +1,8 @@\n+2016-11-29  Martin Sebor  <msebor@redhat.com>\n+\n+\tavoid false positives on ILP32 targets.\n+\t* gcc.dg/tree-ssa/builtin-sprintf-warn-3.c: Same.\n+\n 2016-11-29  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/78512"}, {"sha": "fae584eae1ef5f9a1c2eb9d935194751eeef645f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-warn-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576b067cc8b761ae9e489e9f85691483ef7744e8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576b067cc8b761ae9e489e9f85691483ef7744e8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-1.c?ref=576b067cc8b761ae9e489e9f85691483ef7744e8", "patch": "@@ -1458,7 +1458,7 @@ void test_snprintf_c_const (char *d)\n {\n   T (-1, \"%c\",    0);            /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" } */\n \n-  __builtin_snprintf (d, INT_MAX, \"%c\", 0);\n+  __builtin_snprintf (d, INT_MAX, \"%c\", 0);   /* { dg-warning \"specified destination size 2147483647 is too large\" \"ilp32\" { target { ilp32 } } } */\n \n   /* Verify the full text of the diagnostic for just the distinct messages\n      and use abbreviations in subsequent test cases.  */"}, {"sha": "00176ed056e4183acee2374734ae757547e00fb4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-warn-3.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576b067cc8b761ae9e489e9f85691483ef7744e8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576b067cc8b761ae9e489e9f85691483ef7744e8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-3.c?ref=576b067cc8b761ae9e489e9f85691483ef7744e8", "patch": "@@ -248,34 +248,34 @@ void test_too_large (char *d, int x, __builtin_va_list va)\n   const size_t imax = __INT_MAX__;\n   const size_t imax_p1 = imax + 1;\n \n-  __builtin_snprintf (d, imax,    \"%c\", x);\n-  __builtin_snprintf (d, imax_p1, \"%c\", x);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"\" { target lp64 } } */\n+  __builtin_snprintf (d, imax,    \"%c\", x);   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" \"INT_MAX\" { target ilp32 } } */\n+  __builtin_snprintf (d, imax_p1, \"%c\", x);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"INT_MAX + 1\" { target lp64 } } */\n   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" \"\" { target { ilp32 } } .-1 } */\n \n-  __builtin_vsnprintf (d, imax,    \"%c\", va);\n-  __builtin_vsnprintf (d, imax_p1, \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" { target lp64 } } */\n+  __builtin_vsnprintf (d, imax,    \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" \"INT_MAX\" { target ilp32 } } */\n+  __builtin_vsnprintf (d, imax_p1, \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"INT_MAX + 1\" { target lp64 } } */\n   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" \"\" { target { ilp32 } } .-1 } */\n \n-  __builtin___snprintf_chk (d, imax,    0, imax,    \"%c\", x);\n-  __builtin___snprintf_chk (d, imax_p1, 0, imax_p1, \"%c\", x);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" { target lp64 } } */\n-  /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" \"\" { target { ilp32 } } .-1 } */\n+  __builtin___snprintf_chk (d, imax,    0, imax,    \"%c\", x);   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" \"INT_MAX\" { target ilp32 } } */\n+  __builtin___snprintf_chk (d, imax_p1, 0, imax_p1, \"%c\", x);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"INT_MAX + 1\" { target lp64 } } */\n+  /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" \"INT_MAX + 1\" { target { ilp32 } } .-1 } */\n \n-  __builtin___vsnprintf_chk (d, imax,    0, imax,    \"%c\", va);\n-  __builtin___vsnprintf_chk (d, imax_p1, 0, imax_p1, \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" { target lp64 } } */\n+  __builtin___vsnprintf_chk (d, imax,    0, imax,    \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" \"INT_MAX\" { target ilp32 } } */\n+  __builtin___vsnprintf_chk (d, imax_p1, 0, imax_p1, \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"INT_MAX + 1\" { target lp64 } } */\n   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" \"\" { target { ilp32 } } .-1 } */\n \n   const size_t ptrmax = __PTRDIFF_MAX__;\n   const size_t ptrmax_m1 = ptrmax - 1;\n \n-  __builtin_snprintf (d, ptrmax_m1, \"%c\", x);  /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"\" { target lp64 } } */\n+  __builtin_snprintf (d, ptrmax_m1, \"%c\", x);  /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"PTRDIFF_MAX - 1\" { target lp64 } } */\n   __builtin_snprintf (d, ptrmax, \"  %c\", x);   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" } */\n \n-  __builtin_vsnprintf (d, ptrmax_m1, \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"\" { target lp64 } } */\n+  __builtin_vsnprintf (d, ptrmax_m1, \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"PTRDIFF_MAX - 1\" { target lp64 } } */\n   __builtin_vsnprintf (d, ptrmax,    \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" } */\n \n-  __builtin___snprintf_chk (d, ptrmax_m1, 0, ptrmax_m1, \"%c\", x);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"\" { target lp64 } } */\n+  __builtin___snprintf_chk (d, ptrmax_m1, 0, ptrmax_m1, \"%c\", x);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"PTRDIFF_MAX - 1\" { target lp64 } } */\n   __builtin___snprintf_chk (d, ptrmax,    0, ptrmax,    \"%c\", x);   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" } */\n \n-  __builtin___vsnprintf_chk (d, ptrmax_m1, 0, ptrmax_m1, \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"\" { target lp64 } } */\n+  __builtin___vsnprintf_chk (d, ptrmax_m1, 0, ptrmax_m1, \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ exceeds .INT_MAX.\" \"PTRDIFF_MAX - 1\" { target lp64 } } */\n   __builtin___vsnprintf_chk (d, ptrmax,    0, ptrmax,    \"%c\", va);   /* { dg-warning \"specified destination size \\[0-9\\]+ is too large\" } */\n }"}]}