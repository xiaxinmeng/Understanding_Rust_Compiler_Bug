{"sha": "297c37173212c85e2e0c61cb9a1fd89fa9d44f25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk3YzM3MTczMjEyYzg1ZTJlMGM2MWNiOWExZmQ4OWZhOWQ0NGYyNQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-04-28T05:29:44Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-04-28T05:29:44Z"}, "message": "re PR fortran/39879 (double free or corruption abort with gfortran)\n\n2009-04-28  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/39879\n\t* trans_expr.c (gfc_conv_procedure_call): Deep copy a derived\n\ttype parentheses argument if it is a variable with allocatable\n\tcomponents.\n\n2009-04-28  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/39879\n\t* gfortran.dg/alloc_comp_assign_10.f90: New test.\n\nFrom-SVN: r146872", "tree": {"sha": "4d51ca87e6dcb5e942426982d9b3294b23b6ba85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d51ca87e6dcb5e942426982d9b3294b23b6ba85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/297c37173212c85e2e0c61cb9a1fd89fa9d44f25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/297c37173212c85e2e0c61cb9a1fd89fa9d44f25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/297c37173212c85e2e0c61cb9a1fd89fa9d44f25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/297c37173212c85e2e0c61cb9a1fd89fa9d44f25/comments", "author": null, "committer": null, "parents": [{"sha": "7d44f531817fdd9165fbbbdf579225164aa8ae51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d44f531817fdd9165fbbbdf579225164aa8ae51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d44f531817fdd9165fbbbdf579225164aa8ae51"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "a541a79eb33f294edbbf1e19a68c3ef33ade8ff5", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297c37173212c85e2e0c61cb9a1fd89fa9d44f25/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297c37173212c85e2e0c61cb9a1fd89fa9d44f25/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=297c37173212c85e2e0c61cb9a1fd89fa9d44f25", "patch": "@@ -1119,8 +1119,7 @@ gfc_conv_string_tmp (gfc_se * se, tree type, tree len)\n       gfc_add_modify (&se->pre, var, tmp);\n \n       /* Free the temporary afterwards.  */\n-      tmp = gfc_call_free (var, true, &gfc_current_locus,\n-\t\t\t   ALLOCTYPE_TEMPORARY);\n+      tmp = gfc_call_free (convert (pvoid_type_node, var));\n       gfc_add_expr_to_block (&se->post, tmp);\n     }\n "}]}