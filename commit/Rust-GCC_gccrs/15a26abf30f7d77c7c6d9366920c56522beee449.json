{"sha": "15a26abf30f7d77c7c6d9366920c56522beee449", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVhMjZhYmYzMGY3ZDc3YzdjNmQ5MzY2OTIwYzU2NTIyYmVlZTQ0OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-01-24T22:00:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-01-24T22:00:03Z"}, "message": "i386.h (x86_cmpxchg16b): Remove const.\n\n\t* config/i386/i386.h (x86_cmpxchg16b): Remove const.\n\t(TARGET_CMPXCHG16B): Define to x86_cmpxchg16b.\n\t* config/i386/i386.c (x86_cmpxchg16b): Remove const.\n\t(override_options): Add PTA_CX16 flag.  Set x86_cmpxchg16b\n\tfor CPUs that have PTA_CX16 set.\n\nFrom-SVN: r121140", "tree": {"sha": "fc7771a2142e1ed32ad95f8544eb830ec38cc359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc7771a2142e1ed32ad95f8544eb830ec38cc359"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15a26abf30f7d77c7c6d9366920c56522beee449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a26abf30f7d77c7c6d9366920c56522beee449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15a26abf30f7d77c7c6d9366920c56522beee449", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a26abf30f7d77c7c6d9366920c56522beee449/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07b7aade9dd819cff10a92a718fd2226cafaef1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b7aade9dd819cff10a92a718fd2226cafaef1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b7aade9dd819cff10a92a718fd2226cafaef1e"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "a3ff07b4f0255c6472e05fa053ec7fe94bdcd9fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a26abf30f7d77c7c6d9366920c56522beee449/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a26abf30f7d77c7c6d9366920c56522beee449/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15a26abf30f7d77c7c6d9366920c56522beee449", "patch": "@@ -1,5 +1,11 @@\n 2007-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/i386.h (x86_cmpxchg16b): Remove const.\n+\t(TARGET_CMPXCHG16B): Define to x86_cmpxchg16b.\n+\t* config/i386/i386.c (x86_cmpxchg16b): Remove const.\n+\t(override_options): Add PTA_CX16 flag.  Set x86_cmpxchg16b\n+\tfor CPUs that have PTA_CX16 set.\n+\n \tPR middle-end/27416\n \t* gimplify.c (omp_check_private): New function.\n \t(gimplify_scan_omp_clauses): Use it for"}, {"sha": "3d1b64d02e2996f5623f9f8d0ffe24cb32ca8be2", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a26abf30f7d77c7c6d9366920c56522beee449/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a26abf30f7d77c7c6d9366920c56522beee449/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=15a26abf30f7d77c7c6d9366920c56522beee449", "patch": "@@ -1018,8 +1018,6 @@ const int x86_use_bt = m_ATHLON_K8;\n const int x86_cmpxchg = ~m_386;\n /* Compare and exchange 8 bytes was added for pentium.  */\n const int x86_cmpxchg8b = ~(m_386 | m_486);\n-/* Compare and exchange 16 bytes was added for nocona.  */\n-const int x86_cmpxchg16b = m_NOCONA;\n /* Exchange and add was added for 80486.  */\n const int x86_xadd = ~m_386;\n /* Byteswap was added for 80486.  */\n@@ -1243,6 +1241,9 @@ enum processor_type ix86_arch;\n /* true if sse prefetch instruction is not NOOP.  */\n int x86_prefetch_sse;\n \n+/* true if cmpxchg16b is supported.  */\n+int x86_cmpxchg16b;\n+\n /* ix86_regparm_string as a number */\n static int ix86_regparm;\n \n@@ -1678,7 +1679,8 @@ override_options (void)\n \t  PTA_3DNOW = 32,\n \t  PTA_3DNOW_A = 64,\n \t  PTA_64BIT = 128,\n-\t  PTA_SSSE3 = 256\n+\t  PTA_SSSE3 = 256,\n+\t  PTA_CX16 = 512\n \t} flags;\n     }\n   const processor_alias_table[] =\n@@ -1705,10 +1707,10 @@ override_options (void)\n       {\"prescott\", PROCESSOR_NOCONA, PTA_SSE | PTA_SSE2 | PTA_SSE3\n \t\t\t\t        | PTA_MMX | PTA_PREFETCH_SSE},\n       {\"nocona\", PROCESSOR_NOCONA, PTA_SSE | PTA_SSE2 | PTA_SSE3 | PTA_64BIT\n-\t\t\t\t        | PTA_MMX | PTA_PREFETCH_SSE},\n+\t\t\t\t\t| PTA_MMX | PTA_PREFETCH_SSE | PTA_CX16},\n       {\"core2\", PROCESSOR_CORE2, PTA_SSE | PTA_SSE2 | PTA_SSE3\n                                         | PTA_64BIT | PTA_MMX\n-                                        | PTA_PREFETCH_SSE},\n+\t\t\t\t\t| PTA_PREFETCH_SSE | PTA_CX16},\n       {\"geode\", PROCESSOR_GEODE, PTA_MMX | PTA_PREFETCH_SSE | PTA_3DNOW\n \t\t\t\t   | PTA_3DNOW_A},\n       {\"k6\", PROCESSOR_K6, PTA_MMX},\n@@ -1915,6 +1917,8 @@ override_options (void)\n \t  target_flags |= MASK_SSSE3;\n \tif (processor_alias_table[i].flags & PTA_PREFETCH_SSE)\n \t  x86_prefetch_sse = true;\n+\tif (processor_alias_table[i].flags & PTA_CX16)\n+\t  x86_cmpxchg16b = true;\n \tif (TARGET_64BIT && !(processor_alias_table[i].flags & PTA_64BIT))\n \t  error (\"CPU you selected does not support x86-64 \"\n \t\t \"instruction set\");"}, {"sha": "910f2bee2114c76dba3daf9cb0802dc65f060ce4", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a26abf30f7d77c7c6d9366920c56522beee449/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a26abf30f7d77c7c6d9366920c56522beee449/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=15a26abf30f7d77c7c6d9366920c56522beee449", "patch": "@@ -199,12 +199,12 @@ extern const int x86_sse_typeless_stores, x86_sse_load0_by_pxor;\n extern const int x86_use_ffreep;\n extern const int x86_inter_unit_moves, x86_schedule;\n extern const int x86_use_bt;\n-extern const int x86_cmpxchg, x86_cmpxchg8b, x86_cmpxchg16b, x86_xadd;\n+extern const int x86_cmpxchg, x86_cmpxchg8b, x86_xadd;\n extern const int x86_use_incdec;\n extern const int x86_pad_returns;\n extern const int x86_bswap;\n extern const int x86_partial_flag_reg_stall;\n-extern int x86_prefetch_sse;\n+extern int x86_prefetch_sse, x86_cmpxchg16b;\n \n #define TARGET_USE_LEAVE (x86_use_leave & TUNEMASK)\n #define TARGET_PUSH_MEMORY (x86_push_memory & TUNEMASK)\n@@ -273,7 +273,7 @@ extern int x86_prefetch_sse;\n \n #define TARGET_CMPXCHG (x86_cmpxchg & (1 << ix86_arch))\n #define TARGET_CMPXCHG8B (x86_cmpxchg8b & (1 << ix86_arch))\n-#define TARGET_CMPXCHG16B (x86_cmpxchg16b & (1 << ix86_arch))\n+#define TARGET_CMPXCHG16B (x86_cmpxchg16b)\n #define TARGET_XADD (x86_xadd & (1 << ix86_arch))\n #define TARGET_BSWAP (x86_bswap & (1 << ix86_arch))\n "}]}