{"sha": "6c30bccd6897e84465fff147f12133c282c02eae", "node_id": "C_kwDOANBUbNoAKDZjMzBiY2NkNjg5N2U4NDQ2NWZmZjE0N2YxMjEzM2MyODJjMDJlYWU", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2021-07-19T18:03:35Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-04T08:45:06Z"}, "message": "[Ada] Spurious non-variable error on implicitly dereferenced in-mode formal\n\ngcc/ada/\n\n\t* sem_util.adb (Is_Variable): Add check for implicitly\n\tdereferenced access types\n\t(Is_Dependent_Component_Of_Mutable_Object): Set Prefix_Type when\n\tnot specified.", "tree": {"sha": "1e8c4cde6425e11b28e6471b59a3510a7664c223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e8c4cde6425e11b28e6471b59a3510a7664c223"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c30bccd6897e84465fff147f12133c282c02eae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c30bccd6897e84465fff147f12133c282c02eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c30bccd6897e84465fff147f12133c282c02eae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c30bccd6897e84465fff147f12133c282c02eae/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6109bcaf72f86d206f1f76a1968a6cfeafa80576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6109bcaf72f86d206f1f76a1968a6cfeafa80576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6109bcaf72f86d206f1f76a1968a6cfeafa80576"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "dfd25044f2a2438bdcdb0f4772767f1ec3d4659b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c30bccd6897e84465fff147f12133c282c02eae/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c30bccd6897e84465fff147f12133c282c02eae/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6c30bccd6897e84465fff147f12133c282c02eae", "patch": "@@ -16868,6 +16868,15 @@ package body Sem_Util is\n             end if;\n \n             if Is_Entity_Name (P) then\n+               --  The Etype may not be set on P (which is wrong) in certain\n+               --  corner cases involving the deprecated front-end inlining of\n+               --  subprograms (via -gnatN), so use the Etype set on the\n+               --  the entity for these instances since we know it is present.\n+\n+               if No (Prefix_Type) then\n+                  Prefix_Type := Etype (Entity (P));\n+               end if;\n+\n                if Ekind (Entity (P)) = E_Generic_In_Out_Parameter then\n                   Prefix_Type := Base_Type (Prefix_Type);\n                end if;\n@@ -21145,6 +21154,9 @@ package body Sem_Util is\n    -- Is_Variable --\n    -----------------\n \n+   --  Should Is_Variable be refactored to better handle dereferences and\n+   --  technical debt ???\n+\n    function Is_Variable\n      (N                 : Node_Id;\n       Use_Original_Node : Boolean := True) return Boolean\n@@ -21313,6 +21325,10 @@ package body Sem_Util is\n                         and then Nkind (Parent (E)) /= N_Exception_Handler)\n               or else (K = E_Component\n                         and then not In_Protected_Function (E))\n+              or else (Present (Etype (E))\n+                        and then Is_Access_Object_Type (Etype (E))\n+                        and then Is_Access_Variable (Etype (E))\n+                        and then Is_Dereferenced (N))\n               or else K = E_Out_Parameter\n               or else K = E_In_Out_Parameter\n               or else K = E_Generic_In_Out_Parameter"}]}