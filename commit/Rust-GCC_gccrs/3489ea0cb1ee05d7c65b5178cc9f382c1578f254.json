{"sha": "3489ea0cb1ee05d7c65b5178cc9f382c1578f254", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ4OWVhMGNiMWVlMDVkN2M2NWI1MTc4Y2M5ZjM4MmMxNTc4ZjI1NA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-09-16T01:50:26Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-09-16T01:50:26Z"}, "message": "re PR c++/23896 (boost::tie() = std::pair doesn't compile)\n\n\tPR c++/23896\n\t* pt.c (tsubst_aggr_type): Make sure skip_evaluation is false when\n\tprocessing template arguments.\n\n\tPR c++/23896\n\t* g++.dg/template/static17.C: New test.\n\nFrom-SVN: r104336", "tree": {"sha": "42cb31327a251297cee280781730079e7371a689", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42cb31327a251297cee280781730079e7371a689"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3489ea0cb1ee05d7c65b5178cc9f382c1578f254", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3489ea0cb1ee05d7c65b5178cc9f382c1578f254", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3489ea0cb1ee05d7c65b5178cc9f382c1578f254", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3489ea0cb1ee05d7c65b5178cc9f382c1578f254/comments", "author": null, "committer": null, "parents": [{"sha": "bba35acfce4ef15716ffc6dee95eb0d6e82aec9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bba35acfce4ef15716ffc6dee95eb0d6e82aec9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bba35acfce4ef15716ffc6dee95eb0d6e82aec9c"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "188189f549012fe1c62cb7df19d2e8653f65d6de", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3489ea0cb1ee05d7c65b5178cc9f382c1578f254/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3489ea0cb1ee05d7c65b5178cc9f382c1578f254/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3489ea0cb1ee05d7c65b5178cc9f382c1578f254", "patch": "@@ -1,5 +1,9 @@\n 2005-09-15  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/23896\n+\t* pt.c (tsubst_aggr_type): Make sure skip_evaluation is false when\n+\tprocessing template arguments.\n+\n \t* pt.c (check_explicit_instantiation_namespace): Fix typo.\n \n \tPR c++/13140"}, {"sha": "ece96146c2e7cae99e3c83e83c73033d403040ea", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3489ea0cb1ee05d7c65b5178cc9f382c1578f254/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3489ea0cb1ee05d7c65b5178cc9f382c1578f254/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3489ea0cb1ee05d7c65b5178cc9f382c1578f254", "patch": "@@ -6069,6 +6069,11 @@ tsubst_aggr_type (tree t,\n \t  tree argvec;\n \t  tree context;\n \t  tree r;\n+\t  bool saved_skip_evaluation;\n+\n+\t  /* In \"sizeof(X<I>)\" we need to evaluate \"I\".  */\n+\t  saved_skip_evaluation = skip_evaluation;\n+\t  skip_evaluation = false;\n \n \t  /* First, determine the context for the type we are looking\n \t     up.  */\n@@ -6089,12 +6094,17 @@ tsubst_aggr_type (tree t,\n \t  argvec = tsubst_template_args (TYPE_TI_ARGS (t), args,\n \t\t\t\t\t complain, in_decl);\n \t  if (argvec == error_mark_node)\n-\t    return error_mark_node;\n-\n-\t  r = lookup_template_class (t, argvec, in_decl, context,\n-\t\t\t\t     entering_scope, complain);\n+\t    r = error_mark_node;\n+\t  else\n+\t    {\n+\t      r = lookup_template_class (t, argvec, in_decl, context,\n+\t\t\t\t\t entering_scope, complain);\n+\t      r = cp_build_qualified_type_real (r, TYPE_QUALS (t), complain);\n+\t    }\n+\t  \n+\t  skip_evaluation = saved_skip_evaluation;\n \n-\t  return cp_build_qualified_type_real (r, TYPE_QUALS (t), complain);\n+\t  return r;\n \t}\n       else\n \t/* This is not a template type, so there's nothing to do.  */"}, {"sha": "e9b96a9869889fee7baacc2313d2f62fd8f01442", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3489ea0cb1ee05d7c65b5178cc9f382c1578f254/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3489ea0cb1ee05d7c65b5178cc9f382c1578f254/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3489ea0cb1ee05d7c65b5178cc9f382c1578f254", "patch": "@@ -1,3 +1,8 @@\n+2005-09-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/23896\n+\t* g++.dg/template/static17.C: New test.\n+\n 2005-09-15  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c++/23139"}, {"sha": "bf79bccc3284e34797f83dd5b42b725fbcb4c730", "filename": "gcc/testsuite/g++.dg/template/static17.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3489ea0cb1ee05d7c65b5178cc9f382c1578f254/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3489ea0cb1ee05d7c65b5178cc9f382c1578f254/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic17.C?ref=3489ea0cb1ee05d7c65b5178cc9f382c1578f254", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/23896\n+\n+template <int> struct X {}; \n+ \n+template <typename T> struct length { \n+  static const int value = 2; \n+}; \n+ \n+template <typename T> void foo () { \n+  sizeof(X<length<T>::value>); \n+} \n+ \n+template void foo<int>(); "}]}