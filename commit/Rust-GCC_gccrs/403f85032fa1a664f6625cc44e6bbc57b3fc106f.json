{"sha": "403f85032fa1a664f6625cc44e6bbc57b3fc106f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAzZjg1MDMyZmExYTY2NGY2NjI1Y2M0NGU2YmJjNTdiM2ZjMTA2Zg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-08-04T07:23:14Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-08-04T07:23:14Z"}, "message": "dbxout.c (dbxout_function_decl): Always call dbxout_function_end.\n\n\t* dbxout.c (dbxout_function_decl): Always call dbxout_function_end.\n\t(dbxout_function_end): Return after emitting the \"Lscope\" symbol\n\tunder the same conditions that this function formerly wasn't called.\n\tAdd explanatory comments.\n\nFrom-SVN: r85546", "tree": {"sha": "400024d6da2e3f7f20ce705a8d73a72617e73524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/400024d6da2e3f7f20ce705a8d73a72617e73524"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/403f85032fa1a664f6625cc44e6bbc57b3fc106f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403f85032fa1a664f6625cc44e6bbc57b3fc106f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/403f85032fa1a664f6625cc44e6bbc57b3fc106f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403f85032fa1a664f6625cc44e6bbc57b3fc106f/comments", "author": null, "committer": null, "parents": [{"sha": "ca0433930a57f9e3d054317febc39febfded4174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0433930a57f9e3d054317febc39febfded4174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca0433930a57f9e3d054317febc39febfded4174"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "50a6f80f034b9671a0de6885bea8d1621ccc27a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403f85032fa1a664f6625cc44e6bbc57b3fc106f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403f85032fa1a664f6625cc44e6bbc57b3fc106f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=403f85032fa1a664f6625cc44e6bbc57b3fc106f", "patch": "@@ -1,5 +1,10 @@\n 2004-08-03  Zack Weinberg  <zack@codesourcery.com>\n \n+\t* dbxout.c (dbxout_function_decl): Always call dbxout_function_end.\n+\t(dbxout_function_end): Return after emitting the \"Lscope\" symbol\n+\tunder the same conditions that this function formerly wasn't called.\n+\tAdd explanatory comments.\n+\n \tPR 14680\n \t* c-decl.c (record_builtin_type): Call debug_hooks->type_decl\n \ton the new decl."}, {"sha": "9a9e44732d0490dbc7658d710f4e0301454611ea", "filename": "gcc/dbxout.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403f85032fa1a664f6625cc44e6bbc57b3fc106f/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403f85032fa1a664f6625cc44e6bbc57b3fc106f/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=403f85032fa1a664f6625cc44e6bbc57b3fc106f", "patch": "@@ -449,6 +449,8 @@ dbxout_function_end (void)\n {\n   char lscope_label_name[100];\n \n+  /* The Lscope label must be emitted even if we aren't doing anything\n+     else; dbxout_block needs it.  */\n   function_section (current_function_decl);\n   \n   /* Convert Ltext into the appropriate format for local labels in case\n@@ -458,6 +460,16 @@ dbxout_function_end (void)\n   targetm.asm_out.internal_label (asmfile, \"Lscope\", scope_labelno);\n   scope_labelno++;\n \n+  /* The N_FUN tag at the end of the function is a GNU extension,\n+     which may be undesirable, and is unnecessary if we do not have\n+     named sections.  */\n+  if (!use_gnu_debug_info_extensions\n+#if defined(NO_DBX_FUNCTION_END)\n+      || NO_DBX_FUNCTION_END\n+#endif\n+      || !targetm.have_named_sections)\n+    return;\n+\n   /* By convention, GCC will mark the end of a function with an N_FUN\n      symbol and an empty string.  */\n #ifdef DBX_OUTPUT_NFUN\n@@ -792,12 +804,7 @@ dbxout_function_decl (tree decl)\n #ifdef DBX_OUTPUT_FUNCTION_END\n   DBX_OUTPUT_FUNCTION_END (asmfile, decl);\n #endif\n-  if (use_gnu_debug_info_extensions\n-#if defined(NO_DBX_FUNCTION_END)\n-      && ! NO_DBX_FUNCTION_END\n-#endif\n-      && targetm.have_named_sections)\n-    dbxout_function_end ();\n+  dbxout_function_end ();\n }\n \n #endif /* DBX_DEBUGGING_INFO  */"}]}