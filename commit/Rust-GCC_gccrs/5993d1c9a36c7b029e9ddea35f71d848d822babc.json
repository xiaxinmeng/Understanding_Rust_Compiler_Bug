{"sha": "5993d1c9a36c7b029e9ddea35f71d848d822babc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk5M2QxYzlhMzZjN2IwMjllOWRkZWEzNWY3MWQ4NDhkODIyYmFiYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-11-03T17:19:30Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-11-03T17:19:30Z"}, "message": "gimple-expr.c (useless_type_conversion_p): Reinstate type canonical check for aggregate types and beef up comment for mode...\n\n\t* gimple-expr.c (useless_type_conversion_p): Reinstate type canonical\n\tcheck for aggregate types and beef up comment for mode check.\n\nFrom-SVN: r229714", "tree": {"sha": "f3de57903796486894da59afa2a8a1d3ee7bffd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3de57903796486894da59afa2a8a1d3ee7bffd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5993d1c9a36c7b029e9ddea35f71d848d822babc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5993d1c9a36c7b029e9ddea35f71d848d822babc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5993d1c9a36c7b029e9ddea35f71d848d822babc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5993d1c9a36c7b029e9ddea35f71d848d822babc/comments", "author": null, "committer": null, "parents": [{"sha": "34148d68c7ac0bd2bb1b499b3bd8a267efbe83ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34148d68c7ac0bd2bb1b499b3bd8a267efbe83ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34148d68c7ac0bd2bb1b499b3bd8a267efbe83ad"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "395b11c66a7912270ea9ddfc2f97a2fe49cb3892", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5993d1c9a36c7b029e9ddea35f71d848d822babc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5993d1c9a36c7b029e9ddea35f71d848d822babc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5993d1c9a36c7b029e9ddea35f71d848d822babc", "patch": "@@ -1,3 +1,8 @@\n+2015-11-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimple-expr.c (useless_type_conversion_p): Reinstate type canonical\n+\tcheck for aggregate types and beef up comment for mode check.\n+\n 2015-11-03  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-data-refs.c (vect_analyze_data_refs): Do not collect"}, {"sha": "dd2550a71c33eadb7b5604dbc05640cc9e029cc9", "filename": "gcc/gimple-expr.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5993d1c9a36c7b029e9ddea35f71d848d822babc/gcc%2Fgimple-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5993d1c9a36c7b029e9ddea35f71d848d822babc/gcc%2Fgimple-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.c?ref=5993d1c9a36c7b029e9ddea35f71d848d822babc", "patch": "@@ -86,7 +86,8 @@ useless_type_conversion_p (tree outer_type, tree inner_type)\n   if (inner_type == outer_type)\n     return true;\n \n-  /* Changes in machine mode are never useless conversions unless.  */\n+  /* Changes in machine mode are never useless conversions because the RTL\n+     middle-end expects explicit conversions between modes.  */\n   if (TYPE_MODE (inner_type) != TYPE_MODE (outer_type))\n     return false;\n \n@@ -262,14 +263,13 @@ useless_type_conversion_p (tree outer_type, tree inner_type)\n       return true;\n     }\n \n-  /* For aggregates compare only the size.  Accesses to fields do have\n-     a type information by themselves and thus we only care if we can i.e.\n-     use the types in move operations.  */\n+  /* For aggregates we rely on TYPE_CANONICAL exclusively and require\n+     explicit conversions for types involving to be structurally\n+     compared types.  */\n   else if (AGGREGATE_TYPE_P (inner_type)\n \t   && TREE_CODE (inner_type) == TREE_CODE (outer_type))\n-    return (TYPE_MODE (outer_type) != BLKmode\n-\t    || operand_equal_p (TYPE_SIZE (inner_type),\n-\t\t\t        TYPE_SIZE (outer_type), 0));\n+    return TYPE_CANONICAL (inner_type)\n+\t   && TYPE_CANONICAL (inner_type) == TYPE_CANONICAL (outer_type);\n \n   else if (TREE_CODE (inner_type) == OFFSET_TYPE\n \t   && TREE_CODE (outer_type) == OFFSET_TYPE)"}, {"sha": "14253d1d1b345b5248c5166c408f83736dbaa95e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5993d1c9a36c7b029e9ddea35f71d848d822babc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5993d1c9a36c7b029e9ddea35f71d848d822babc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5993d1c9a36c7b029e9ddea35f71d848d822babc", "patch": "@@ -1,3 +1,7 @@\n+2015-11-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/discr45.adb: Only compile the test.\n+\n 2015-11-03  Evgeny Stupachenko  <evstupac@gmail.com>\n \n \t* g++.dg/ext/mvc4.C: Add dg-require-ifunc condition."}, {"sha": "5e276c9df6d9325cfec7c7549805144248667fab", "filename": "gcc/testsuite/gnat.dg/discr45.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5993d1c9a36c7b029e9ddea35f71d848d822babc/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr45.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5993d1c9a36c7b029e9ddea35f71d848d822babc/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr45.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr45.adb?ref=5993d1c9a36c7b029e9ddea35f71d848d822babc", "patch": "@@ -1,4 +1,4 @@\n--- { dg-do run }\n+-- { dg-do compile }\n -- { dg-options \"-O2 -gnatws\" }\n \n procedure Discr45 is"}]}