{"sha": "3cdea2b453e83eea7296e4e4502470ab8f6ed316", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NkZWEyYjQ1M2U4M2VlYTcyOTZlNGU0NTAyNDcwYWI4ZjZlZDMxNg==", "commit": {"author": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2010-01-11T23:15:32Z"}, "committer": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2010-01-11T23:15:32Z"}, "message": "lto.c (O_BINARY): Define.\n\n\n2010-01-11  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n\n   * lto.c (O_BINARY): Define.\n   (lto_read_section_data): Open file in binary mode.\n   * lto-elf.c (O_BINARY): Define.\n   (lto_elf_file_open): Open file in binary mode.\n\nFrom-SVN: r155820", "tree": {"sha": "0136a97ec61b4618bac54a353994ab8d43c9b4f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0136a97ec61b4618bac54a353994ab8d43c9b4f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cdea2b453e83eea7296e4e4502470ab8f6ed316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cdea2b453e83eea7296e4e4502470ab8f6ed316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cdea2b453e83eea7296e4e4502470ab8f6ed316", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cdea2b453e83eea7296e4e4502470ab8f6ed316/comments", "author": null, "committer": null, "parents": [{"sha": "2685baa15f8ede99893fa40734c2c0f1d86872f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2685baa15f8ede99893fa40734c2c0f1d86872f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2685baa15f8ede99893fa40734c2c0f1d86872f2"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "a726d32f5bb181341cb6a82e65f365b2640bd804", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cdea2b453e83eea7296e4e4502470ab8f6ed316/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cdea2b453e83eea7296e4e4502470ab8f6ed316/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=3cdea2b453e83eea7296e4e4502470ab8f6ed316", "patch": "@@ -1,3 +1,10 @@\n+2010-01-11  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n+\n+\t* lto.c (O_BINARY): Define.\n+\t(lto_read_section_data): Open file in binary mode.\n+\t* lto-elf.c (O_BINARY): Define.\n+\t(lto_elf_file_open): Open file in binary mode. \n+\n 2010-01-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/42528"}, {"sha": "b70648d46800e49089ff4d0dedd639c2379d8de2", "filename": "gcc/lto/lto-elf.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cdea2b453e83eea7296e4e4502470ab8f6ed316/gcc%2Flto%2Flto-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cdea2b453e83eea7296e4e4502470ab8f6ed316/gcc%2Flto%2Flto-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-elf.c?ref=3cdea2b453e83eea7296e4e4502470ab8f6ed316", "patch": "@@ -29,6 +29,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"lto-streamer.h\"\n \n+/* Handle opening elf files on hosts, such as Windows, that may use \n+   text file handling that will break binary access.  */\n+\n+#ifndef O_BINARY\n+# define O_BINARY 0\n+#endif\n+\n \n /* Initialize FILE, an LTO file object for FILENAME.  */\n static void\n@@ -580,7 +587,8 @@ lto_elf_file_open (const char *filename, bool writable)\n   elf_file->fd = -1;\n \n   /* Open the file.  */\n-  elf_file->fd = open (fname, writable ? O_WRONLY|O_CREAT : O_RDONLY, 0666);\n+  elf_file->fd = open (fname, writable ? O_WRONLY|O_CREAT|O_BINARY \n+\t\t\t\t       : O_RDONLY|O_BINARY, 0666);\n   if (elf_file->fd == -1)\n     {\n       error (\"could not open file %s\", fname);"}, {"sha": "de53a09f87dac70b2a9b2090afea2db09f76783a", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cdea2b453e83eea7296e4e4502470ab8f6ed316/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cdea2b453e83eea7296e4e4502470ab8f6ed316/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=3cdea2b453e83eea7296e4e4502470ab8f6ed316", "patch": "@@ -50,6 +50,14 @@ along with GCC; see the file COPYING3.  If not see\n #include <sys/mman.h>\n #endif\n \n+/* Handle opening elf files on hosts, such as Windows, that may use \n+   text file handling that will break binary access.  */\n+\n+#ifndef O_BINARY\n+# define O_BINARY 0\n+#endif\n+\n+\n DEF_VEC_P(bitmap);\n DEF_VEC_ALLOC_P(bitmap,heap);\n \n@@ -421,7 +429,7 @@ lto_read_section_data (struct lto_file_decl_data *file_data,\n   if (fd == -1)\n     {\n       fd_name = xstrdup (file_data->file_name);\n-      fd = open (file_data->file_name, O_RDONLY);\n+      fd = open (file_data->file_name, O_RDONLY|O_BINARY);\n       if (fd == -1)\n \treturn NULL;\n     }"}]}