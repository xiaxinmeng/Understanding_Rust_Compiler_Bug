{"sha": "99e77371ca0fd38460f76a6c5880be67d2503292", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTllNzczNzFjYTBmZDM4NDYwZjc2YTZjNTg4MGJlNjdkMjUwMzI5Mg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mjw@redhat.com", "date": "2016-09-10T10:37:35Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2016-09-10T10:37:35Z"}, "message": "Fix -Wshadow warning in libiberty/cp-demangle.c\n\nvalgrind contains a copy of the libiberty demangler which gets compiled\nwith -Wshadow. That shows the following warning:\n\ncp-demangle.c: In function \u2018d_substitution\u2019:\ncp-demangle.c:3772:35: warning: declaration of \u2018c\u2019 shadows a previous local\n        struct demangle_component *c;\n                                   ^\ncp-demangle.c:3708:8: note: shadowed declaration is here\n   char c;\n        ^\n\nFix that by renaming the struct demangle_component variable to dc.\n\nlibiberty/ChangeLog:\n\n\t* cp-demangle.c (d_substitution): Change struct demangle_component\n\tvariable name from c to dc.\n\nFrom-SVN: r240068", "tree": {"sha": "0309089e144cd3b5bf76f5b14e134f0eb129ec0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0309089e144cd3b5bf76f5b14e134f0eb129ec0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99e77371ca0fd38460f76a6c5880be67d2503292", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e77371ca0fd38460f76a6c5880be67d2503292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99e77371ca0fd38460f76a6c5880be67d2503292", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e77371ca0fd38460f76a6c5880be67d2503292/comments", "author": null, "committer": null, "parents": [{"sha": "7861fc4f1c40e8fabd31cd8627b0a173257eeb3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7861fc4f1c40e8fabd31cd8627b0a173257eeb3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7861fc4f1c40e8fabd31cd8627b0a173257eeb3c"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "68609599786c6527c5fe00cbaeff442bf8cdc777", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e77371ca0fd38460f76a6c5880be67d2503292/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e77371ca0fd38460f76a6c5880be67d2503292/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=99e77371ca0fd38460f76a6c5880be67d2503292", "patch": "@@ -1,3 +1,8 @@\n+2016-09-10  Mark Wielaard  <mjw@redhat.com>\n+\n+\t* cp-demangle.c (d_substitution): Change struct demangle_component\n+\tvariable name from c to dc.\n+\n 2016-08-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/7652"}, {"sha": "a843dc38f98c42ea0e6fd7a27d307d37dad27035", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e77371ca0fd38460f76a6c5880be67d2503292/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e77371ca0fd38460f76a6c5880be67d2503292/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=99e77371ca0fd38460f76a6c5880be67d2503292", "patch": "@@ -3769,7 +3769,7 @@ d_substitution (struct d_info *di, int prefix)\n \t    {\n \t      const char *s;\n \t      int len;\n-\t      struct demangle_component *c;\n+\t      struct demangle_component *dc;\n \n \t      if (p->set_last_name != NULL)\n \t\tdi->last_name = d_make_sub (di, p->set_last_name,\n@@ -3785,15 +3785,15 @@ d_substitution (struct d_info *di, int prefix)\n \t\t  len = p->simple_len;\n \t\t}\n \t      di->expansion += len;\n-\t      c = d_make_sub (di, s, len);\n+\t      dc = d_make_sub (di, s, len);\n \t      if (d_peek_char (di) == 'B')\n \t\t{\n \t\t  /* If there are ABI tags on the abbreviation, it becomes\n \t\t     a substitution candidate.  */\n-\t\t  c = d_abi_tags (di, c);\n-\t\t  d_add_substitution (di, c);\n+\t\t  dc = d_abi_tags (di, dc);\n+\t\t  d_add_substitution (di, dc);\n \t\t}\n-\t      return c;\n+\t      return dc;\n \t    }\n \t}\n "}]}