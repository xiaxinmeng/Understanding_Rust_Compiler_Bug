{"sha": "2ff04cc63aa8b683dd17f029e7579280ecd8f9c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZmMDRjYzYzYWE4YjY4M2RkMTdmMDI5ZTc1NzkyODBlY2Q4ZjljOA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-03-17T15:20:10Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-03-17T15:20:10Z"}, "message": "2003-03-17  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/Dialog.java\n\t(Dialog): New constructor, changed implementations, added\n\tdocumentation.\n\t* java/awt/ScrollPaneAdjustable.java\n\t(ScrollPaneAdjustable): Extends Object, implements Adjustable and\n\tSerializable.\n\t(serialVersionUID): New member variable.\n\t(sp): New member variable.\n\t(orientation): New member variable.\n\t(value): New member variable.\n\t(minimum): New member variable.\n\t(maximum): New member variable.\n\t(visibleAmount): New member variable.\n\t(unitIncrement): New member variable.\n\t(blockIncrement): New member variable.\n\t(AdjustmentListener): New member variable.\n\t(ScrollPaneAdjustable): New implementation.\n\t(addAdjustmentListener): New method.\n\t(removeAdjustmentListener): New method.\n\t(getAdjustmentListeners): New method.\n\t(getBlockIncrement): New method.\n\t(getMaximum): New method.\n\t(getMinimum): New method.\n\t(getOrientation): New method.\n\t(getUnitIncrement): New method.\n\t(getValue): New method.\n\t(getVisibleAmount): New method.\n\t(setBlockIncrement): New method.\n\t(setMaximum): Implemented.\n\t(setMinimum): Implemented.\n\t(setUnitIncrement): New method.\n\t(setValue): New method.\n\t(setVisibleAmount): Implemented.\n\t(paramString): New stubbed method.\n\t* java/awt/Window.java\n\t(show): Call setVisible().\n\t(hide): Call setVisible().\n\t(processEvent): Add cases for WINDOW_GAINED_FOCUS, WINDOW_LOST_FOCUS\n\tand WINDOW_STATE_CHANGED.\n\t(processWindowFocusEvent): New method.\n\t(processWindowStateEvent): New method.\n\t(postEvent): Deprecated.\n\t(applyResourceBundle): Deprecated.\n\t* java/awt/datatransfer/DataFlavor.java\n\t(DataFlavor): Doesn't thow ClassNotFoundException.\n\nFrom-SVN: r64485", "tree": {"sha": "c6337dc64052b39b5098596e7d1904d54ccdddd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6337dc64052b39b5098596e7d1904d54ccdddd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/comments", "author": null, "committer": null, "parents": [{"sha": "94833648ca3360caeee3cce775ff410468d43559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94833648ca3360caeee3cce775ff410468d43559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94833648ca3360caeee3cce775ff410468d43559"}], "stats": {"total": 282, "additions": 269, "deletions": 13}, "files": [{"sha": "f08f4f8eadf22f6b48c580547b3d6037316af66f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2ff04cc63aa8b683dd17f029e7579280ecd8f9c8", "patch": "@@ -1,3 +1,51 @@\n+2003-03-17  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/Dialog.java\n+\t(Dialog): New constructor, changed implementations, added\n+\tdocumentation.\n+\t* java/awt/ScrollPaneAdjustable.java\n+\t(ScrollPaneAdjustable): Extends Object, implements Adjustable and\n+\tSerializable.\n+\t(serialVersionUID): New member variable.\n+\t(sp): New member variable.\n+\t(orientation): New member variable.\n+\t(value): New member variable.\n+\t(minimum): New member variable.\n+\t(maximum): New member variable.\n+\t(visibleAmount): New member variable.\n+\t(unitIncrement): New member variable.\n+\t(blockIncrement): New member variable.\n+\t(AdjustmentListener): New member variable.\n+\t(ScrollPaneAdjustable): New implementation.\n+\t(addAdjustmentListener): New method.\n+\t(removeAdjustmentListener): New method.\n+\t(getAdjustmentListeners): New method.\n+\t(getBlockIncrement): New method.\n+\t(getMaximum): New method.\n+\t(getMinimum): New method.\n+\t(getOrientation): New method.\n+\t(getUnitIncrement): New method.\n+\t(getValue): New method.\n+\t(getVisibleAmount): New method.\n+\t(setBlockIncrement): New method.\n+\t(setMaximum): Implemented.\n+\t(setMinimum): Implemented.\n+\t(setUnitIncrement): New method.\n+\t(setValue): New method.\n+\t(setVisibleAmount): Implemented. \n+\t(paramString): New stubbed method.\n+\t* java/awt/Window.java\n+\t(show): Call setVisible().\n+\t(hide): Call setVisible().\n+\t(processEvent): Add cases for WINDOW_GAINED_FOCUS, WINDOW_LOST_FOCUS\n+\tand WINDOW_STATE_CHANGED.\n+\t(processWindowFocusEvent): New method.\n+\t(processWindowStateEvent): New method.\n+\t(postEvent): Deprecated.\n+\t(applyResourceBundle): Deprecated.\n+\t* java/awt/datatransfer/DataFlavor.java\n+\t(DataFlavor): Doesn't thow ClassNotFoundException.\n+\n 2003-03-17  Michael Koch\n \n \t* javax/print/attribute/Attribute.java,"}, {"sha": "e7c40b14ae42fa66e4344c383184b9647b91055f", "filename": "libjava/java/awt/Dialog.java", "status": "modified", "additions": 59, "deletions": 4, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/libjava%2Fjava%2Fawt%2FDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/libjava%2Fjava%2Fawt%2FDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDialog.java?ref=2ff04cc63aa8b683dd17f029e7579280ecd8f9c8", "patch": "@@ -153,11 +153,37 @@ public class Dialog extends Window\n   * @param title The title string for this dialog box.\n   * @param modal <true> if this dialog box is modal, <code>false</code>\n   * otherwise.\n+  *\n+  * @exception IllegalArgumentException If owner is null or\n+  * GraphicsEnvironment.isHeadless() returns true.\n   */\n public\n Dialog(Frame parent, String title, boolean modal)\n {\n-  super(parent);\n+  this (parent, title, modal, parent.getGraphicsConfiguration ());\n+}\n+\n+/**\n+ * Initializes a new instance of <code>Dialog</code> with the specified,\n+ * parent, title, modality and <code>GraphicsConfiguration</code>,\n+ * that is not resizable.\n+ *\n+ * @param parent The parent frame of this dialog box.\n+ * @param title The title string for this dialog box.\n+ * @param modal <true> if this dialog box is modal, <code>false</code>\n+ * otherwise.\n+ * @param gc The <code>GraphicsConfiguration</code> object to use.\n+ *\n+ * @exception IllegalArgumentException If owner is null, the\n+ * GraphicsConfiguration is not a screen device or\n+ * GraphicsEnvironment.isHeadless() returns true.\n+ *\n+ * @since 1.4\n+ */\n+public\n+Dialog (Frame parent, String title, boolean modal, GraphicsConfiguration gc)\n+{\n+  super (parent, gc);\n \n   this.title = title;\n   this.modal = modal;\n@@ -166,10 +192,19 @@ public class Dialog extends Window\n   setLayout(new BorderLayout());\n }\n \n+/**\n+ * Initializes a new instance of <code>Dialog</code> with the specified,\n+ * parent, that is not resizable.\n+ *\n+ * @exception IllegalArgumentException If parent is null. This exception is\n+ * always thrown when GraphicsEnvironment.isHeadless() returns true.\n+ *\n+ * @since 1.2\n+ */\n public\n Dialog (Dialog owner)\n {\n-  this (owner, \"\", false);\n+  this (owner, \"\", false, owner.getGraphicsConfiguration ());\n }\n \n /**\n@@ -184,7 +219,7 @@ public class Dialog extends Window\n public\n Dialog (Dialog owner, String title)\n {\n-  this (owner, title, false);\n+  this (owner, title, false, owner.getGraphicsConfiguration ());\n }\n \n /**\n@@ -199,9 +234,29 @@ public class Dialog extends Window\n public\n Dialog (Dialog owner, String title, boolean modal)\n {\n-  super (owner);\n+  this (owner, title, modal, owner.getGraphicsConfiguration ());\n+}\n+\n+/**\n+ * Initializes a new instance of <code>Dialog</code> with the specified,\n+ * parent, title, modality and <code>GraphicsConfiguration</code>,\n+ * that is not resizable.\n+ *\n+ * @exception IllegalArgumentException If parent is null, the\n+ * GraphicsConfiguration is not a screen device or\n+ * GraphicsEnvironment.isHeadless() returns true.\n+ *\n+ * @since 1.4\n+ */\n+public\n+Dialog (Dialog parent, String title, boolean modal, GraphicsConfiguration gc)\n+{\n+  super (parent, parent.getGraphicsConfiguration ());\n+  \n   this.modal = modal;\n   this.title = title;\n+  resizable = false;\n+  \n   setLayout (new BorderLayout ());\n }\n "}, {"sha": "18b7748537d046c086969ac6dd11c6e89adf7ad5", "filename": "libjava/java/awt/ScrollPaneAdjustable.java", "status": "modified", "additions": 109, "deletions": 3, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/libjava%2Fjava%2Fawt%2FScrollPaneAdjustable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/libjava%2Fjava%2Fawt%2FScrollPaneAdjustable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FScrollPaneAdjustable.java?ref=2ff04cc63aa8b683dd17f029e7579280ecd8f9c8", "patch": "@@ -38,29 +38,135 @@\n \n package java.awt;\n \n+import java.awt.event.AdjustmentListener;\n+import java.io.Serializable;\n+\n /**\n  * Need this class since the serialization spec for ScrollPane\n  * uses it.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @since 1.4\n  */\n-class ScrollPaneAdjustable extends Scrollbar\n+public class ScrollPaneAdjustable\n+  implements Adjustable, Serializable\n {\n-  public ScrollPaneAdjustable (int orientation)\n+  private static final long serialVersionUID = -3359745691033257079L;\n+ \n+  ScrollPane sp;\n+  int orientation;\n+  int value;\n+  int minimum;\n+  int maximum;\n+  int visibleAmount;\n+  int unitIncrement;\n+  int blockIncrement;\n+  AdjustmentListener adjustmentListener;\n+  \n+  ScrollPaneAdjustable (ScrollPane sp, int orientation, int value, int minimum,\n+                        int maximum, in visibleAmount, int unitIncrement,\n+                        int blockIncrement)\n+  {\n+    this.sp = sp;\n+    this.orientation = orientation;\n+    this.value = value;\n+    this.minimum = minimum;\n+    this.maximum = maximum;\n+    this.visibleAmount = visibleAmount;\n+    this.unitIncrement = Increment;\n+    this.blockIncrement = Increment;\n+  }\n+  \n+  public void addAdjustmentListener (AdjustmentListener listener)\n+  {\n+    AWTEventMulticaster.add (adjustmentListener, listener);\n+  }\n+  \n+  public void removeAdjustmentListener (AdjustmentListener listener)\n+  {\n+    AWTEventMulticaster.remove (adjustmentListener, listener);\n+  }\n+  \n+  public AdjustmentListener[] getAdjustmentListeners ()\n+  {\n+    return (AdjustmentListener) AWTEventMulticaster.getListeners (AdjustmentListener.class);\n+  }\n+\n+  public int getBlockIncrement ()\n+  {\n+    return blockIncrement;\n+  }\n+\n+  public int getMaximum ()\n+  {\n+    return maximum;\n+  }\n+\n+  public int getMinimum ()\n+  {\n+    return minimum;\n+  }\n+\n+  public int getOrientation ()\n+  {\n+    return orientation;\n+  }\n+\n+  public int getUnitIncrement ()\n+  {\n+    return unitIncrement;\n+  }\n+  \n+  public int getValue ()\n+  {\n+    return value;\n+  }\n+\n+  public int getVisibleAmount ()\n   {\n-    super (orientation);\n+    return visibleAmount;\n   }\n \n+  public void setBlockIncrement (int blockIncrement)\n+  {\n+    this.blockIncrement = blockIncrement;\n+  }\n+    \n   public void setMaximum (int maximum)\n   {\n+    this.maximum = maximum;\n   }\n \n   public void setMinimum (int minimum)\n   {\n+    this.minimum = minimum;\n+  }\n+\n+  public void setUnitIncrement (int unitIncrement)\n+  {\n+    this.unitIncrement = unitIncrement;\n   }\n \n+  public void setValue (int value)\n+  {\n+    this.value = value;\n+\n+    if (value < minimum)\n+      minimum = value;\n+\n+    if (value > maximum)\n+      maximum = value;\n+  }\n+  \n   public void setVisibleAmount (int visibleAmount)\n   {\n+    this.visibleAmount = visibleAmount;\n   }\n+\n+  public String paramString ()\n+  {\n+    throw new Error (\"not implemented\");\n+  }\n+\n } // class ScrollPaneAdjustable\n "}, {"sha": "80c47594397ac7f8f090d7242a86caca9a1ee67e", "filename": "libjava/java/awt/Window.java", "status": "modified", "additions": 51, "deletions": 4, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/libjava%2Fjava%2Fawt%2FWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/libjava%2Fjava%2Fawt%2FWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FWindow.java?ref=2ff04cc63aa8b683dd17f029e7579280ecd8f9c8", "patch": "@@ -213,14 +213,14 @@ public void show()\n       addNotify();\n \n     validate();\n-    super.show();\n+    setVisible (true);\n     toFront();\n   }\n \n   public void hide()\n   {\n     // FIXME: call hide() on any \"owned\" children here.\n-    super.hide();\n+    setVisible (false);\n   }\n \n   public boolean isDisplayable()\n@@ -526,6 +526,13 @@ protected void processWindowEvent(WindowEvent evt)\n           case WindowEvent.WINDOW_OPENED:\n             windowListener.windowOpened(evt);\n             break;\n+          case WindowEvent.WINDOW_GAINED_FOCUS:\n+          case WindowEvent.WINDOW_LOST_FOCUS:\n+            processWindowFocusEvent (evt);\n+            break;\n+          case WindowEvent.WINDOW_STATE_CHANGED:\n+            processWindowStateEvent (evt);\n+            break;\n           }\n       }\n   }\n@@ -548,6 +555,8 @@ public Component getFocusOwner()\n    * Post a Java 1.0 event to the event queue.\n    *\n    * @param event The event to post.\n+   *\n+   * @deprecated\n    */\n   public boolean postEvent(Event e)\n   {\n@@ -566,13 +575,21 @@ public boolean isShowing()\n     return super.isShowing();\n   }\n \n-  /** @since 1.2 */\n+  /**\n+   * @since 1.2\n+   *\n+   * @deprecated\n+   */\n   public void applyResourceBundle(ResourceBundle rb)\n   {\n     // FIXME\n   }\n \n-  /** @since 1.2 */\n+  /**\n+   * @since 1.2\n+   *\n+   * @deprecated\n+   */\n   public void applyResourceBundle(String rbName)\n   {\n     ResourceBundle rb = ResourceBundle.getBundle(rbName);\n@@ -598,4 +615,34 @@ public GraphicsConfiguration getGraphicsConfiguration()\n     if (peer != null) return peer.getGraphicsConfiguration();\n     return null;\n   }\n+\n+  protected void processWindowFocusEvent(WindowEvent event)\n+  {\n+    if (windowFocusListener != null)\n+      {\n+        switch (event.getID ())\n+          {\n+          case WindowEvent.WINDOW_GAINED_FOCUS:\n+            windowFocusListener.windowGainedFocus (event);\n+            break;\n+            \n+          case WindowEvent.WINDOW_LOST_FOCUS:\n+            windowFocusListener.windowLostFocus (event);\n+            break;\n+            \n+          default:\n+            break;\n+          }\n+      }\n+  }\n+  \n+  /**\n+   * @since 1.4\n+   */\n+  protected void processWindowStateEvent(WindowEvent event)\n+  {\n+    if (windowStateListener != null\n+        && event.getID () == WindowEvent.WINDOW_STATE_CHANGED)\n+      windowStateListener.windowStateChanged (event);\n+  }\n }"}, {"sha": "2603b6e3954c1b84ad86c20388f757dc0f846656", "filename": "libjava/java/awt/datatransfer/DataFlavor.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff04cc63aa8b683dd17f029e7579280ecd8f9c8/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java?ref=2ff04cc63aa8b683dd17f029e7579280ecd8f9c8", "patch": "@@ -49,6 +49,7 @@\n import java.io.UnsupportedEncodingException;\n import java.nio.ByteBuffer;\n import java.nio.CharBuffer;\n+import java.nio.charset.Charset;\n \n /**\n  * This class represents a particular data format used for transferring\n@@ -335,9 +336,8 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n  */\n public\n DataFlavor(String mimeType, String humanPresentableName)\n-           throws ClassNotFoundException\n {\n-  this(mimeType, humanPresentableName, null);\n+  this (getRepresentationClassFromMime (mimeType, null), humanPresentableName);\n }\n \n /*************************************************************************/"}]}