{"sha": "13de9095bd4db4617903d05103fb2e88b8eae27b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNkZTkwOTViZDRkYjQ2MTc5MDNkMDUxMDNmYjJlODhiOGVhZTI3Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-06T17:08:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-06T17:08:25Z"}, "message": "tree-ssa-pre.c (name_to_id): New global.\n\n2010-01-06  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-pre.c (name_to_id): New global.\n\t(alloc_expression_id): Simplify SSA name handling.\n\t(lookup_expression_id): Likewise.\n\t(init_pre): Zero name_to_id.\n\t(fini_pre): Free it.\n\nFrom-SVN: r155676", "tree": {"sha": "a431337cc1f7fbf05cd987b1af185e8c0bcc14c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a431337cc1f7fbf05cd987b1af185e8c0bcc14c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13de9095bd4db4617903d05103fb2e88b8eae27b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13de9095bd4db4617903d05103fb2e88b8eae27b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13de9095bd4db4617903d05103fb2e88b8eae27b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13de9095bd4db4617903d05103fb2e88b8eae27b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86d1b9d1e0a6bcbcf06705caa057facbf387b9b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d1b9d1e0a6bcbcf06705caa057facbf387b9b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86d1b9d1e0a6bcbcf06705caa057facbf387b9b8"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "bb99a9fea27a67d77657fc3fb81398e2bf994708", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13de9095bd4db4617903d05103fb2e88b8eae27b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13de9095bd4db4617903d05103fb2e88b8eae27b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13de9095bd4db4617903d05103fb2e88b8eae27b", "patch": "@@ -1,3 +1,11 @@\n+2010-01-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-pre.c (name_to_id): New global.\n+\t(alloc_expression_id): Simplify SSA name handling.\n+\t(lookup_expression_id): Likewise.\n+\t(init_pre): Zero name_to_id.\n+\t(fini_pre): Free it.\n+\n 2010-01-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* ifcvt.c (if_convert): Output slim multiple dumps with TDF_SLIM."}, {"sha": "cafebe677702f795b6cb27add30d6fbabb04ecad", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 34, "deletions": 7, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13de9095bd4db4617903d05103fb2e88b8eae27b/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13de9095bd4db4617903d05103fb2e88b8eae27b/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=13de9095bd4db4617903d05103fb2e88b8eae27b", "patch": "@@ -236,6 +236,7 @@ DEF_VEC_P (pre_expr);\n DEF_VEC_ALLOC_P (pre_expr, heap);\n static VEC(pre_expr, heap) *expressions;\n static htab_t expression_to_id;\n+static VEC(unsigned, heap) *name_to_id;\n \n /* Allocate an expression id for EXPR.  */\n \n@@ -247,9 +248,23 @@ alloc_expression_id (pre_expr expr)\n   gcc_assert (next_expression_id + 1 > next_expression_id);\n   expr->id = next_expression_id++;\n   VEC_safe_push (pre_expr, heap, expressions, expr);\n-  slot = htab_find_slot (expression_to_id, expr, INSERT);\n-  gcc_assert (!*slot);\n-  *slot = expr;\n+  if (expr->kind == NAME)\n+    {\n+      unsigned version = SSA_NAME_VERSION (PRE_EXPR_NAME (expr));\n+      /* VEC_safe_grow_cleared allocates no headroom.  Avoid frequent\n+\t re-allocations by using VEC_reserve upfront.  There is no\n+\t VEC_quick_grow_cleared unfortunately.  */\n+      VEC_reserve (unsigned, heap, name_to_id, num_ssa_names);\n+      VEC_safe_grow_cleared (unsigned, heap, name_to_id, num_ssa_names);\n+      gcc_assert (VEC_index (unsigned, name_to_id, version) == 0);\n+      VEC_replace (unsigned, name_to_id, version, expr->id);\n+    }\n+  else\n+    {\n+      slot = htab_find_slot (expression_to_id, expr, INSERT);\n+      gcc_assert (!*slot);\n+      *slot = expr;\n+    }\n   return next_expression_id - 1;\n }\n \n@@ -266,10 +281,20 @@ lookup_expression_id (const pre_expr expr)\n {\n   void **slot;\n \n-  slot = htab_find_slot (expression_to_id, expr, NO_INSERT);\n-  if (!slot)\n-    return 0;\n-  return ((pre_expr)*slot)->id;\n+  if (expr->kind == NAME)\n+    {\n+      unsigned version = SSA_NAME_VERSION (PRE_EXPR_NAME (expr));\n+      if (VEC_length (unsigned, name_to_id) <= version)\n+\treturn 0;\n+      return VEC_index (unsigned, name_to_id, version);\n+    }\n+  else\n+    {\n+      slot = htab_find_slot (expression_to_id, expr, NO_INSERT);\n+      if (!slot)\n+\treturn 0;\n+      return ((pre_expr)*slot)->id;\n+    }\n }\n \n /* Return the existing expression id for EXPR, or create one if one\n@@ -4483,6 +4508,7 @@ init_pre (bool do_fre)\n   value_expressions = VEC_alloc (bitmap_set_t, heap, get_max_value_id () + 1);\n   VEC_safe_grow_cleared (bitmap_set_t, heap, value_expressions,\n \t\t\t get_max_value_id() + 1);\n+  name_to_id = NULL;\n \n   in_fre = do_fre;\n \n@@ -4544,6 +4570,7 @@ fini_pre (bool do_fre)\n   free_alloc_pool (pre_expr_pool);\n   htab_delete (phi_translate_table);\n   htab_delete (expression_to_id);\n+  VEC_free (unsigned, heap, name_to_id);\n \n   FOR_ALL_BB (bb)\n     {"}]}