{"sha": "dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM0ZTZjY2ZlNTk0MzFlNTMzMDQyYmE1ZGU3ZTFjYTNlNWMyYjdkMw==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-05-25T16:36:07Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-05-25T16:36:07Z"}, "message": "[multiple changes]\n\nTue May 25 15:06:13 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n        * parse.y (patch_assignment): Save the rhs before using it as an\n        argument to _Jv_CheckArrayStore.\nTue May 25 11:23:59 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* lex.c (java_parse_doc_section): Fixed `tag' buffer size.\nMon May 24 13:26:00 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n        * lex.c (java_lex): Accepts `+' or `-' after the beginning of a\n        floating point litteral only when the exponent indicator has been\n        parsed.\n\nFrom-SVN: r27147", "tree": {"sha": "1eaea5b879e97570da44a93cc9082fdfe30f2559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eaea5b879e97570da44a93cc9082fdfe30f2559"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3/comments", "author": null, "committer": null, "parents": [{"sha": "47d98fa268b4dd24dd89ae58cd0489910e1fd721", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47d98fa268b4dd24dd89ae58cd0489910e1fd721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47d98fa268b4dd24dd89ae58cd0489910e1fd721"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "ed91c91f210acf48c3e523f7f515a448b8ab243d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3", "patch": "@@ -1,3 +1,18 @@\n+Tue May 25 15:06:13 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+ \n+        * parse.y (patch_assignment): Save the rhs before using it as an\n+        argument to _Jv_CheckArrayStore.\n+ \n+Tue May 25 11:23:59 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* lex.c (java_parse_doc_section): Fixed `tag' buffer size.\n+\n+Mon May 24 13:26:00 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+        * lex.c (java_lex): Accepts `+' or `-' after the beginning of a\n+        floating point litteral only when the exponent indicator has been\n+        parsed.\n+\n Sat May 22 13:54:41 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (formal_parameter:): Construct argument tree list"}, {"sha": "fbaa23d80f0571504d95d86e9205eb1aa7d3210b", "filename": "gcc/java/lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3", "patch": "@@ -427,7 +427,7 @@ java_parse_doc_section (c)\n   /* We're parsing @deprecated */\n   if (valid_tag && (c == '@'))\n     {\n-      char tag [10];\n+      char tag [11];\n       int  tag_index = 0;\n \n       while (tag_index < 10 && c != UEOF && c != ' ' && c != '\\n')\n@@ -741,7 +741,7 @@ java_lex (java_lval)\n \t\t  stage = 4;\t/* So we fall through */\n \t\t}\n \n-\t      if ((c=='-' || c =='+') && stage < 3)\n+\t      if ((c=='-' || c =='+') && stage == 2)\n \t\t{\n \t\t  stage = 3;\n \t\t  literal_token [literal_index++] = c;"}, {"sha": "478428552d8151956eb730bef6dcc8b3438935eb", "filename": "gcc/java/parse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3", "patch": "@@ -11432,6 +11432,7 @@ patch_assignment (node, wfl_op1, wfl_op2)\n \t}\n \n       /* Build the invocation of _Jv_CheckArrayStore */\n+      new_rhs = save_expr (new_rhs);\n       check = build (CALL_EXPR, void_type_node,\n \t\t     build_address_of (soft_checkarraystore_node),\n \t\t     tree_cons (NULL_TREE, base,"}, {"sha": "69918a9c1c368044250f90c3634192db991062d7", "filename": "gcc/java/parse.y", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=dc4e6ccfe59431e533042ba5de7e1ca3e5c2b7d3", "patch": "@@ -8847,6 +8847,7 @@ patch_assignment (node, wfl_op1, wfl_op2)\n \t}\n \n       /* Build the invocation of _Jv_CheckArrayStore */\n+      new_rhs = save_expr (new_rhs);\n       check = build (CALL_EXPR, void_type_node,\n \t\t     build_address_of (soft_checkarraystore_node),\n \t\t     tree_cons (NULL_TREE, base,"}]}