{"sha": "9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRkZGI2ZjU3OTljMTcxYTc5ZDgyZjY4MWY4ZDJiN2I4ZWI4NWQxNw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-10-02T09:37:53Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-10-02T09:37:53Z"}, "message": "20000120-2.c: Use -fgnu89-inline.\n\n\t* gcc.c-torture/compile/20000120-2.c: Use -fgnu89-inline.\n\t* gcc.c-torture/compile/20011119-1.c: Likewise.\n\t* gcc.c-torture/compile/20011119-2.c: Likewise.\n\t* gcc.c-torture/compile/20021120-1.c: Likewise.\n\t* gcc.c-torture/compile/20021120-2.c: Likewise.\n\t* gcc.c-torture/compile/20050215-1.c: Likewise.\n\t* gcc.c-torture/compile/20050215-2.c: Likewise.\n\t* gcc.c-torture/compile/20050215-3.c: Likewise.\n\t* gcc.c-torture/compile/pr37669.c: Likewise.\n\t* gcc.c-torture/execute/20020107-1.c: Likewise.\n\t* gcc.c-torture/execute/restrict-1.c: Likewise.\n\t* gcc.c-torture/compile/20090721-1.c: Fix defaulting to int.\n\t* gcc.c-torture/execute/930529-1.c: Likewise.\n\t* gcc.c-torture/execute/920612-1.c: Likewise.\n\t* gcc.c-torture/execute/920711-1.c: Likewise.\n\t* gcc.c-torture/execute/990127-2.c: Likewise.\n\t* gcc.c-torture/execute/pr40386.c: Likewise.\n\t* gcc.c-torture/execute/pr57124.c: Likewise.\n\t* gcc.c-torture/compile/pr34808.c: Add function declarations.\n\t* gcc.c-torture/compile/pr42299.c: Likewise.\n\t* gcc.c-torture/compile/pr48517.c: Use -std=gnu89.\n\t* gcc.c-torture/compile/simd-6.c: Likewise.\n\t* gcc.c-torture/execute/pr53645-2.c: Likewise.\n\t* gcc.c-torture/execute/pr53645.c: Likewise.\n\t* gcc.c-torture/execute/20001121-1.c: Use -fgnu89-inline.  Add function\n\tdeclarations.\n\t* gcc.c-torture/execute/980608-1.c: Likewise.\n\t* gcc.c-torture/execute/bcp-1.c: Likewise.\n\t* gcc.c-torture/execute/p18298.c: Likewise.\n\t* gcc.c-torture/execute/unroll-1.c: Likewise.\n\t* gcc.c-torture/execute/va-arg-7.c: Likewise.\n\t* gcc.c-torture/execute/va-arg-8.c: Likewise.\n\t* gcc.c-torture/execute/930526-1.c: Use -fgnu89-inline.  Add function\n\tdeclarations.  Fix defaulting to int.\n\t* gcc.c-torture/execute/961223-1.c: Likewise.\n\t* gcc.c-torture/execute/loop-2c.c: Use -fgnu89-inline and\n\t-Wno-pointer-to-int-cast.  Fix defaulting to int.\n\nFrom-SVN: r215798", "tree": {"sha": "82658eef30b79781ee6dc1968bf89c6314d69a26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82658eef30b79781ee6dc1968bf89c6314d69a26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a605c51cbb8f14cbd4d3bfd0d697924cb49b214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a605c51cbb8f14cbd4d3bfd0d697924cb49b214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a605c51cbb8f14cbd4d3bfd0d697924cb49b214"}], "stats": {"total": 139, "additions": 127, "deletions": 12}, "files": [{"sha": "32c6fe7841012c7f4fe5618ec22d69a8bdd2bd15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,3 +1,43 @@\n+2014-10-02  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.c-torture/compile/20000120-2.c: Use -fgnu89-inline.\n+\t* gcc.c-torture/compile/20011119-1.c: Likewise.\n+\t* gcc.c-torture/compile/20011119-2.c: Likewise.\n+\t* gcc.c-torture/compile/20021120-1.c: Likewise.\n+\t* gcc.c-torture/compile/20021120-2.c: Likewise.\n+\t* gcc.c-torture/compile/20050215-1.c: Likewise.\n+\t* gcc.c-torture/compile/20050215-2.c: Likewise.\n+\t* gcc.c-torture/compile/20050215-3.c: Likewise.\n+\t* gcc.c-torture/compile/pr37669.c: Likewise.\n+\t* gcc.c-torture/execute/20020107-1.c: Likewise.\n+\t* gcc.c-torture/execute/restrict-1.c: Likewise.\n+\t* gcc.c-torture/compile/20090721-1.c: Fix defaulting to int.\n+\t* gcc.c-torture/execute/930529-1.c: Likewise.\n+\t* gcc.c-torture/execute/920612-1.c: Likewise.\n+\t* gcc.c-torture/execute/920711-1.c: Likewise.\n+\t* gcc.c-torture/execute/990127-2.c: Likewise.\n+\t* gcc.c-torture/execute/pr40386.c: Likewise.\n+\t* gcc.c-torture/execute/pr57124.c: Likewise.\n+\t* gcc.c-torture/compile/pr34808.c: Add function declarations.\n+\t* gcc.c-torture/compile/pr42299.c: Likewise.\n+\t* gcc.c-torture/compile/pr48517.c: Use -std=gnu89.\n+\t* gcc.c-torture/compile/simd-6.c: Likewise.\n+\t* gcc.c-torture/execute/pr53645-2.c: Likewise.\n+\t* gcc.c-torture/execute/pr53645.c: Likewise.\n+\t* gcc.c-torture/execute/20001121-1.c: Use -fgnu89-inline.  Add function\n+\tdeclarations.\n+\t* gcc.c-torture/execute/980608-1.c: Likewise.\n+\t* gcc.c-torture/execute/bcp-1.c: Likewise.\n+\t* gcc.c-torture/execute/p18298.c: Likewise.\n+\t* gcc.c-torture/execute/unroll-1.c: Likewise.\n+\t* gcc.c-torture/execute/va-arg-7.c: Likewise.\n+\t* gcc.c-torture/execute/va-arg-8.c: Likewise.\n+\t* gcc.c-torture/execute/930526-1.c: Use -fgnu89-inline.  Add function\n+\tdeclarations.  Fix defaulting to int.\n+\t* gcc.c-torture/execute/961223-1.c: Likewise.\n+\t* gcc.c-torture/execute/loop-2c.c: Use -fgnu89-inline and\n+\t-Wno-pointer-to-int-cast.  Fix defaulting to int.\n+\n 2014-10-02  Andrew Pinski  <apinski@cavium.com>\n \t    Max Ostapenko  <m.ostapenko@partner.samsung.com>\n "}, {"sha": "939c52de318913247c9977bb2d4eb56d4f965023", "filename": "gcc/testsuite/gcc.c-torture/compile/20000120-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000120-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000120-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000120-2.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n extern __inline__ int\n odd(int i)\n {"}, {"sha": "5d036c93406a145abfbf612a3f7acc30b38d8b3b", "filename": "gcc/testsuite/gcc.c-torture/compile/20011119-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011119-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011119-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011119-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-fgnu89-inline\" } */\n /* { dg-require-weak \"\" } */\n /* { dg-require-alias \"\" } */\n #define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)"}, {"sha": "ea1176a8bbcba4bb315c324b23548347975563ab", "filename": "gcc/testsuite/gcc.c-torture/compile/20011119-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011119-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011119-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011119-2.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-fgnu89-inline\" } */\n /* { dg-require-weak \"\" } */\n /* { dg-require-alias \"\" } */\n #define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)"}, {"sha": "3dc49287f1a23ce9635d2dbad47519b787b7fa64", "filename": "gcc/testsuite/gcc.c-torture/compile/20021120-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021120-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021120-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021120-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -4,6 +4,8 @@\n /* Verify that GCC doesn't get confused by the\n    redefinition of an extern inline function. */\n \n+/* { dg-options \"-fgnu89-inline\" } */\n+\n extern int inline foo () { return 0; }\n extern int inline bar () { return 0; }\n static int inline bar () { return foo(); }"}, {"sha": "cd9eda0e55dfa950054ae06eb97bd046fe9582a6", "filename": "gcc/testsuite/gcc.c-torture/compile/20021120-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021120-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021120-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021120-2.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -4,6 +4,8 @@\n /* Verify that GCC doesn't get confused by the\n    redefinition of an extern inline function. */\n \n+/* { dg-options \"-fgnu89-inline\" } */\n+\n extern int inline foo () { return 0; }\n extern int inline bar () { return 0; }\n static int bar () { return foo(); }"}, {"sha": "83d0cb20842f6c80f7c6157a0ecf6b652cbd28a4", "filename": "gcc/testsuite/gcc.c-torture/compile/20050215-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050215-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050215-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050215-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/18947 */\n+/* { dg-options \"-fgnu89-inline\" } */\n extern __inline void f1 (void) { }\n extern __inline void f2 (void) { f1 (); }\n void f2 (void) {}"}, {"sha": "9feea6acfd910434e7598ba1051a0e4986a408d7", "filename": "gcc/testsuite/gcc.c-torture/compile/20050215-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050215-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050215-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050215-2.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/18947 */\n+/* { dg-options \"-fgnu89-inline\" } */\n int v;\n extern __inline void f1 (void) { v++; }\n void f4 (void) { f1 (); }"}, {"sha": "67a4f267afe2f7894636c92661fa21f6b66aaa46", "filename": "gcc/testsuite/gcc.c-torture/compile/20050215-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050215-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050215-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050215-3.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/18947 */\n+/* { dg-options \"-fgnu89-inline\" } */\n int v;\n extern __inline void f0 (void) { v++; }\n extern __inline void f1 (void) { f0 (); }"}, {"sha": "928cafa6c7c655c47dc1cf00121631f8bd2641f8", "filename": "gcc/testsuite/gcc.c-torture/compile/20090721-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090721-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090721-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090721-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,3 +1,3 @@\n /* { dg-options \"-fno-tree-sra\" } */\n union u {double d;long long ll;};\n-f(double x, int n){union u v;v.d=x;if(n>=0){v.ll<<=63;}else{v.ll-=1<<-n;v.ll>>=-n;}return v.ll;}\n+int f(double x, int n){union u v;v.d=x;if(n>=0){v.ll<<=63;}else{v.ll-=1<<-n;v.ll>>=-n;}return v.ll;}"}, {"sha": "63be3f6287a2db08389a2db1409c4d984a69b40a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr34808.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34808.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34808.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34808.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -6,6 +6,9 @@ extern int flags;\n \n struct r { int code; int val;};\n \n+void bar (void);\n+void baz (void);\n+\n int\n foo (struct r *home)\n {"}, {"sha": "c78243b15fce2e182cbf424b307775acef0b1e16", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37669.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37669.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37669.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37669.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,4 +1,5 @@\n /* This testcase used to fail because a miscompiled execute_fold_all_builtins. */\n+/* { dg-options \"-fgnu89-inline\" } */\n \n typedef __SIZE_TYPE__ size_t;\n extern __inline __attribute__ ((__always_inline__)) int __attribute__"}, {"sha": "65a9bf74ffb4d745ab905950dc96c45d66a86191", "filename": "gcc/testsuite/gcc.c-torture/compile/pr42299.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42299.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42299.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42299.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,5 +1,7 @@\n /* { dg-options \"-g\" } */\n \n+void bar (void);\n+\n static int\n foo (int x, int y)\n {"}, {"sha": "4cfe038220b6a2a6c277920d682f2629fade98c5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr48517.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr48517.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr48517.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr48517.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,6 +1,6 @@\n /* PR c/48517 */\n /* { dg-do compile } */\n-/* { dg-options \"\" } */\n+/* { dg-options \"-std=gnu89\" } */\n \n void bar (const unsigned short *);\n "}, {"sha": "3e34128e64a94ed110c4487dd31e6630c6fd0f39", "filename": "gcc/testsuite/gcc.c-torture/compile/simd-6.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-6.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-std=gnu89\" } */\n+\n typedef int __attribute__((vector_size (8))) vec;\n \n vec a[] = {(vec) {1, 2}, {3, 4}};"}, {"sha": "a3c68584905b01fc0b67f0a130c1085710bb5944", "filename": "gcc/testsuite/gcc.c-torture/execute/20001121-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001121-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001121-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001121-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,3 +1,8 @@\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n double d;\n \n __inline__ double foo (void)"}, {"sha": "23d8aebf45eeaa6669aef448921fd97446fbc579", "filename": "gcc/testsuite/gcc.c-torture/execute/20020107-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020107-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020107-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020107-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,5 +1,6 @@\n /* This testcase failed because - 1 - buf was simplified into ~buf and when\n    later expanding it back into - buf + -1, -1 got lost.  */\n+/* { dg-options \"-fgnu89-inline\" } */\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "8553de2c5aface72573bf28d0cd85e8eb5a46182", "filename": "gcc/testsuite/gcc.c-torture/execute/920612-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920612-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920612-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920612-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -3,5 +3,5 @@\n extern void abort (void);\n extern void exit (int);\n \n-f(j)int j;{return++j>0;}\n-main(){if(f((~0U)>>1))abort();exit(0);}\n+int f(j)int j;{return++j>0;}\n+int main(){if(f((~0U)>>1))abort();exit(0);}"}, {"sha": "de63b8f834d2d08554df8f047c82104be1d0516b", "filename": "gcc/testsuite/gcc.c-torture/execute/920711-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920711-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920711-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920711-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -3,5 +3,5 @@\n extern void abort (void);\n extern void exit (int);\n \n-f(long a){return (--a > 0);}\n-main(){if(f(0x80000000L)==0)abort();exit(0);}\n+int f(long a){return (--a > 0);}\n+int main(){if(f(0x80000000L)==0)abort();exit(0);}"}, {"sha": "6b562044d645a1040224cf922723a37a13b5a8f3", "filename": "gcc/testsuite/gcc.c-torture/execute/930526-1.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930526-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930526-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930526-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,5 +1,9 @@\n-inline\n-f (x)\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n+extern void exit (int);\n+\n+inline void\n+f (int x)\n {\n   int *(p[25]);\n   int m[25*7];\n@@ -11,6 +15,7 @@ f (x)\n   p[1][0] = 0;\n }\n \n+int\n main ()\n {\n   f (7);"}, {"sha": "0f3668e7f8e08e5e489f3e07718b06e799bfe980", "filename": "gcc/testsuite/gcc.c-torture/execute/930529-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930529-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930529-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930529-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -3,8 +3,9 @@\n extern void abort (void);\n extern void exit (int);\n \n-dd (x,d) { return x / d; }\n+int dd (int x, int d) { return x / d; }\n \n+int\n main ()\n {\n   int i;"}, {"sha": "d31962aa4542a626e7886c10561a256857bd855f", "filename": "gcc/testsuite/gcc.c-torture/execute/961223-1.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F961223-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F961223-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F961223-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,3 +1,8 @@\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n+extern void exit (int);\n+extern void abort (void);\n+\n struct s {\n   double d;\n };\n@@ -9,6 +14,7 @@ sub (struct s s)\n   return s;\n }\n \n+int\n main ()\n {\n   struct s t = { 2.0 };"}, {"sha": "f6c15e80bc9d3846ba2f73f8dedd29eebbf1db81", "filename": "gcc/testsuite/gcc.c-torture/execute/980608-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980608-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980608-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980608-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,5 +1,10 @@\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n #include <stdarg.h>\n \n+extern void abort(void);\n+extern void exit (int);\n+\n void f1(int a,int b,int c,int d,int e, int f,int g,int h,int i,int j, int k,int\n l,int m,int n,int o)\n {"}, {"sha": "939000ea94e23c84605c5a45442bfd6b39d5c331", "filename": "gcc/testsuite/gcc.c-torture/execute/990127-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990127-2.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -18,6 +18,7 @@ fpTest (double x, double y)\n   fpEq (result1, result2);\n }\n \n+int\n main ()\n {\n   fpTest (35.7, 45.0);"}, {"sha": "19c038bcc5ada8f1f04bd65969786cbde3d9d9a8", "filename": "gcc/testsuite/gcc.c-torture/execute/bcp-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbcp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbcp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbcp-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,3 +1,8 @@\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n __attribute__ ((externally_visible)) int global;\n int func(void);\n "}, {"sha": "17cdaaa095f36757feb547e6e47ceda124d2f98b", "filename": "gcc/testsuite/gcc.c-torture/execute/loop-2c.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2c.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,18 +1,25 @@\n+/* { dg-options \"-fgnu89-inline -Wno-pointer-to-int-cast\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n int a[2];\n \n-__inline__ f (b, o)\n+__inline__ void f (int b, int o)\n {\n   unsigned int i;\n   int *p;\n   for (p = &a[b], i = b; --i < ~0; )\n     *--p = i * 3 + o;\n }\n \n+void\n g(int b)\n {\n   f (b, (int)a);\n }\n \n+int\n main ()\n {\n   a[0] = a[1] = 0;"}, {"sha": "50589962e229059a03d5540b919eb96ab8d6a0d8", "filename": "gcc/testsuite/gcc.c-torture/execute/p18298.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fp18298.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fp18298.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fp18298.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,5 +1,8 @@\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n #include <stdbool.h>\n #include <stdlib.h>\n+extern void abort (void);\n int strcmp (const char*, const char*);\n char s[2048] = \"a\";\n inline bool foo(const char *str) {"}, {"sha": "f39f1defa0e6b72e2e5de7a6f19ce4bda0f81819", "filename": "gcc/testsuite/gcc.c-torture/execute/pr40386.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr40386.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -25,6 +25,7 @@ long long ll = LL_VALUE;\n int shift1 = SHIFT1;\n int shift2 = SHIFT2;\n \n+int\n main ()\n {\n   if (ROR (c, shift1) != ROR (CHAR_VALUE, SHIFT1))"}, {"sha": "4638e30388ff1b486aba1418e54623dfca2b49a1", "filename": "gcc/testsuite/gcc.c-torture/execute/pr53645-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53645-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53645-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53645-2.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/53645 */\n+/* { dg-options \"-std=gnu89\" } */\n \n typedef unsigned short int UV __attribute__((vector_size (16)));\n typedef short int SV __attribute__((vector_size (16)));"}, {"sha": "d86a895356cd1c87b185d6f0fa2a2a0d3b083aa2", "filename": "gcc/testsuite/gcc.c-torture/execute/pr53645.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53645.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53645.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr53645.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/53645 */\n+/* { dg-options \"-std=gnu89\" } */\n \n typedef unsigned int UV __attribute__((vector_size (16)));\n typedef int SV __attribute__((vector_size (16)));"}, {"sha": "41c90c516092a656db60f15dd42071fc7990db4b", "filename": "gcc/testsuite/gcc.c-torture/execute/pr57124.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57124.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57124.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr57124.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -4,7 +4,7 @@\n extern void abort (void);\n extern void exit (int);\n \n-__attribute__ ((noinline))\n+__attribute__ ((noinline)) void\n foo(short unsigned int *p1, short unsigned int *p2)\n {\n   short unsigned int x1, x4;\n@@ -23,11 +23,11 @@ foo(short unsigned int *p1, short unsigned int *p2)\n   exit (0);\n }\n \n+int\n main()\n {\n   short unsigned int x, y;\n   x = -5;\n   y = -10;\n   foo (&x, &y);\n }\n-"}, {"sha": "c55286152376d1f00a7f23af60ff9fecd28605a5", "filename": "gcc/testsuite/gcc.c-torture/execute/restrict-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Frestrict-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Frestrict-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Frestrict-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -2,6 +2,7 @@\n     Origin:  Jeremy Denise      <jeremy.denise@libertysurf.fr>\n     Reduced: Wolfgang Bangerth  <bangerth@dealii.org>\n              Volker Reichelt    <reichelt@igpm.rwth-aachen.de>  */\n+/* { dg-options \"-fgnu89-inline\" } */\n \n extern void abort ();\n "}, {"sha": "5606978539fed272ed9d2d67918e06b56f0052c8", "filename": "gcc/testsuite/gcc.c-torture/execute/unroll-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Funroll-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Funroll-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Funroll-1.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,3 +1,8 @@\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n inline int\n f (int x)\n {"}, {"sha": "c66cb608458e1d159b1f5879c7b40807eb8e69be", "filename": "gcc/testsuite/gcc.c-torture/execute/va-arg-7.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-7.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,4 +1,8 @@\n /* Origin: Franz Sirl <Franz.Sirl-kernel@lauterbach.com> */\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n \n #include <stdarg.h>\n "}, {"sha": "c3106932463dbda78102db73f3703ae554454e69", "filename": "gcc/testsuite/gcc.c-torture/execute/va-arg-8.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dddb6f5799c171a79d82f681f8d2b7b8eb85d17/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fva-arg-8.c?ref=9dddb6f5799c171a79d82f681f8d2b7b8eb85d17", "patch": "@@ -1,4 +1,8 @@\n /* Origin: Franz Sirl <Franz.Sirl-kernel@lauterbach.com> */\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n \n #include <stdarg.h>\n #include <limits.h>"}]}