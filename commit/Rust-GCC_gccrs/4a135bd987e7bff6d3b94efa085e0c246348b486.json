{"sha": "4a135bd987e7bff6d3b94efa085e0c246348b486", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGExMzViZDk4N2U3YmZmNmQzYjk0ZWZhMDg1ZTBjMjQ2MzQ4YjQ4Ng==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-16T19:02:42Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-16T19:05:11Z"}, "message": "Don't assert on a negative shift.\n\nDon't assert, simply Return false for negative shifts as we can't tell\nanything about the operand.\n\n\tPR tree-optimization/97462\n\tgcc/\n\t* range-op.cc (operator_lshift::op1_range): Don't trap on negative\n\tshifts.\n\tgcc/testsuite/\n\t* gcc.dg/pr97462.c: New file.", "tree": {"sha": "2b9ce23bed5a4a1e81d411e70ffa119a934f2e7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b9ce23bed5a4a1e81d411e70ffa119a934f2e7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a135bd987e7bff6d3b94efa085e0c246348b486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a135bd987e7bff6d3b94efa085e0c246348b486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a135bd987e7bff6d3b94efa085e0c246348b486", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a135bd987e7bff6d3b94efa085e0c246348b486/comments", "author": null, "committer": null, "parents": [{"sha": "ccb4f20cbee1756c464033bbdda2f27b6aa2a63f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb4f20cbee1756c464033bbdda2f27b6aa2a63f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccb4f20cbee1756c464033bbdda2f27b6aa2a63f"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "de4cfe45a48d8d8ba85b99f2d8123f36c685e608", "filename": "gcc/range-op.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a135bd987e7bff6d3b94efa085e0c246348b486/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a135bd987e7bff6d3b94efa085e0c246348b486/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=4a135bd987e7bff6d3b94efa085e0c246348b486", "patch": "@@ -1577,7 +1577,8 @@ operator_lshift::op1_range (irange &r,\n   if (op2.singleton_p (&shift_amount))\n     {\n       wide_int shift = wi::to_wide (shift_amount);\n-      gcc_checking_assert (wi::gt_p (shift, 0, SIGNED));\n+      if (wi::lt_p (shift, 0, SIGNED))\n+\treturn false;\n \n       // Work completely in unsigned mode to start.\n       tree utype = type;"}, {"sha": "52c0533c98e20a9c879c2355004a5f6dbeb11e73", "filename": "gcc/testsuite/gcc.dg/pr97462.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a135bd987e7bff6d3b94efa085e0c246348b486/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97462.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a135bd987e7bff6d3b94efa085e0c246348b486/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97462.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97462.c?ref=4a135bd987e7bff6d3b94efa085e0c246348b486", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -w\" } */\n+\n+int a, b;\n+\n+void d ()\n+{\n+  a << ~0 && b;\n+  b = a;\n+}"}]}