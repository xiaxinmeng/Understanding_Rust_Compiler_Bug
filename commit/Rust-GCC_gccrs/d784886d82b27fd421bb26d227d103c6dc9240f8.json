{"sha": "d784886d82b27fd421bb26d227d103c6dc9240f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc4NDg4NmQ4MmIyN2ZkNDIxYmIyNmQyMjdkMTAzYzZkYzkyNDBmOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-21T17:29:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-21T17:29:16Z"}, "message": "(arithmetic_comparison_operator): New function.\n\n(print_operand): Take into account that overflow flag is not set the\nsame as after a compare instruction.\n\nFrom-SVN: r10268", "tree": {"sha": "ce66daf359b35c57e87ad1166ee45a2b90095028", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce66daf359b35c57e87ad1166ee45a2b90095028"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d784886d82b27fd421bb26d227d103c6dc9240f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d784886d82b27fd421bb26d227d103c6dc9240f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d784886d82b27fd421bb26d227d103c6dc9240f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d784886d82b27fd421bb26d227d103c6dc9240f8/comments", "author": null, "committer": null, "parents": [{"sha": "ba2fcc7febbbbe423d727f713c1b4806e3121180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2fcc7febbbbe423d727f713c1b4806e3121180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba2fcc7febbbbe423d727f713c1b4806e3121180"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "68aabfb8798f65d44eafc9774219d033201d5ecc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d784886d82b27fd421bb26d227d103c6dc9240f8/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d784886d82b27fd421bb26d227d103c6dc9240f8/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d784886d82b27fd421bb26d227d103c6dc9240f8", "patch": "@@ -1400,6 +1400,25 @@ expander_call_insn_operand (op, mode)\n     return 1;\n   return 0;\n }\n+\n+/* Return 1 if OP is a comparison operator that can use the condition code\n+   generated by an arithmetic operation. */\n+\n+int\n+arithmetic_comparison_operator (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  enum rtx_code code;\n+\n+  if (mode != VOIDmode && mode != GET_MODE (op))\n+    return 0;\n+  code = GET_CODE (op);\n+  if (GET_RTX_CLASS (code) != '<')\n+    return 0;\n+\n+  return (code != GT && code != LE);\n+}\n \f\n /* Returns 1 if OP contains a symbol reference */\n \n@@ -2380,13 +2399,13 @@ print_operand (file, x, code)\n \t    case NE:  fputs (\"jne\", file); return;\n \t    case EQ:  fputs (\"je\",  file); return;\n \t    case GE:  fputs (\"jns\", file); return;\n-\t    case GT:  fputs (\"jg\",  file); return;\n-\t    case LE:  fputs (\"jle\", file); return;\n \t    case LT:  fputs (\"js\",  file); return;\n-\t    case GEU: fputs (\"jae\", file); return;\n-\t    case GTU: fputs (\"ja\",  file); return;\n-\t    case LEU: fputs (\"jbe\", file); return;\n-\t    case LTU: fputs (\"jb\",  file); return;\n+\t    case GEU: fputs (\"jmp\", file); return;\n+\t    case GTU: fputs (\"jne\",  file); return;\n+\t    case LEU: fputs (\"je\", file); return;\n+\t    case LTU: fputs (\"#branch never\",  file); return;\n+\n+\t    /* no matching branches for GT nor LE */\n \t    }\n \t  abort ();\n "}]}