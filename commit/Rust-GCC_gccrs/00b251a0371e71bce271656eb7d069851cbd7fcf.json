{"sha": "00b251a0371e71bce271656eb7d069851cbd7fcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBiMjUxYTAzNzFlNzFiY2UyNzE2NTZlYjdkMDY5ODUxY2JkN2ZjZg==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2009-01-29T14:34:55Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2009-01-29T14:34:55Z"}, "message": "re PR middle-end/35854 (life passes dump option still documented)\n\n2009-01-29  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\tPR middle-end/35854\n\t* doc/invoke.texi (rtl debug options): Complete rewrite.\n\t* auto-inc-dec.c (pass_inc_dec): Rename pass from \"auto-inc-dec\"\n\tto auto_inc_dec\".\n\t* mode-switching.c (pass_mode_switching): Rename pass from\n\t\"mode-sw\" to \"mode_sw\".\n\t* except.c (pass_convert_to_eh_ranges): Rename pass from\n\t\"eh-ranges\" to \"eh_ranges\".\n\t* lower-subreg.c (pass_lower_subreg): Renamed pass from \"subreg\"\n\tto \"subreg1\".\n\t\t\n\t\n2009-01-29  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\tPR middle-end/35854\n\t* gcc.dg/lower-subreg-1.c: Renamed dump pass from \"subreg\" to \"subreg1\"\n\nFrom-SVN: r143756", "tree": {"sha": "11213a44bd284e9933e0ac58ddcd3b85b3a774f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11213a44bd284e9933e0ac58ddcd3b85b3a774f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00b251a0371e71bce271656eb7d069851cbd7fcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b251a0371e71bce271656eb7d069851cbd7fcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00b251a0371e71bce271656eb7d069851cbd7fcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b251a0371e71bce271656eb7d069851cbd7fcf/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72a54528dbba23fab21e2997bb6a3d80bf6f1a13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a54528dbba23fab21e2997bb6a3d80bf6f1a13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72a54528dbba23fab21e2997bb6a3d80bf6f1a13"}], "stats": {"total": 358, "additions": 240, "deletions": 118}, "files": [{"sha": "17264560a8f6120c0073c1c3e75007536d622dd8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00b251a0371e71bce271656eb7d069851cbd7fcf", "patch": "@@ -1,3 +1,17 @@\n+2009-01-29  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\tPR middle-end/35854\n+\t* doc/invoke.texi (rtl debug options): Complete rewrite.\n+\t* auto-inc-dec.c (pass_inc_dec): Rename pass from \"auto-inc-dec\"\n+\tto auto_inc_dec\".\n+\t* mode-switching.c (pass_mode_switching): Rename pass from\n+\t\"mode-sw\" to \"mode_sw\".\n+\t* except.c (pass_convert_to_eh_ranges): Rename pass from\n+\t\"eh-ranges\" to \"eh_ranges\".\n+\t* lower-subreg.c (pass_lower_subreg): Renamed pass from \"subreg\"\n+\tto \"subreg1\".\n+\t\t\n+\t\n 2009-01-29  Andrey Belevantsev  <abel@ispras.ru>\n \t    Alexander Monakov  <amonakov@ispras.ru>\n "}, {"sha": "0fda67aa302f9c84bce227d20c2a650207d7df3b", "filename": "gcc/auto-inc-dec.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Fauto-inc-dec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Fauto-inc-dec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.c?ref=00b251a0371e71bce271656eb7d069851cbd7fcf", "patch": "@@ -1544,7 +1544,7 @@ struct rtl_opt_pass pass_inc_dec =\n {\n  {\n   RTL_PASS,\n-  \"auto-inc-dec\",                       /* name */\n+  \"auto_inc_dec\",                       /* name */\n   gate_auto_inc_dec,                    /* gate */\n   rest_of_handle_auto_inc_dec,          /* execute */\n   NULL,                                 /* sub */"}, {"sha": "fb6739080ccb15725a8d3542a5003782484e8b96", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 214, "deletions": 111, "changes": 325, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=00b251a0371e71bce271656eb7d069851cbd7fcf", "patch": "@@ -4545,172 +4545,275 @@ preprocessing.\n \n Debug dumps can be enabled with a @option{-fdump-rtl} switch or some\n @option{-d} option @var{letters}.  Here are the possible\n-letters for use in @var{letters} and @var{pass}, and their meanings:\n+letters for use in @var{pass} and @var{letters}, and their meanings:\n \n @table @gcctabopt\n-@item -dA\n-@opindex dA\n-Annotate the assembler output with miscellaneous debugging information.\n+\n+@item -fdump-rtl-alignments\n+@opindex fdump-rtl-alignments\n+Dump after branch alignments have been computed.\n+\n+@item -fdump-rtl-asmcons\n+@opindex fdump-rtl-asmcons\n+Dump after fixing rtl statements that have unsatisfied in/out constraints.\n+\n+@item -fdump-rtl-auto_inc_dec\n+@opindex fdump-rtl-auto_inc_dec\n+Dump after auto-inc-dec discovery.  This pass is only run on\n+architectures that have auto inc or auto dec instructions.\n+\n+@item -fdump-rtl-barriers\n+@opindex fdump-rtl-barriers\n+Dump after cleaning up the barrier instructions.\n+\n+@item -fdump-rtl-bbpart\n+@opindex fdump-rtl-bbpart\n+Dump after partitioning hot and cold basic blocks.\n \n @item -fdump-rtl-bbro\n @opindex fdump-rtl-bbro\n-Dump after block reordering, to @file{@var{file}.148r.bbro}.\n+Dump after block reordering.\n+\n+@item -fdump-rtl-btl1\n+@itemx -fdump-rtl-btl2\n+@opindex fdump-rtl-btl2\n+@opindex fdump-rtl-btl2\n+@option{-fdump-rtl-btl1} and @option{-fdump-rtl-btl2} enable dumping\n+after the two branch\n+target load optimization passes.\n+\n+@item -fdump-rtl-bypass\n+@opindex fdump-rtl-bypass\n+Dump after jump bypassing and control flow optimizations.\n \n @item -fdump-rtl-combine\n @opindex fdump-rtl-combine\n-Dump after the RTL instruction combination pass, to the file\n-@file{@var{file}.129r.combine}.\n+Dump after the RTL instruction combination pass.\n+\n+@item -fdump-rtl-compgotos\n+@opindex fdump-rtl-compgotos\n+Dump after dumplicating the computed gotos.\n \n @item -fdump-rtl-ce1\n @itemx -fdump-rtl-ce2\n+@itemx -fdump-rtl-ce3\n @opindex fdump-rtl-ce1\n @opindex fdump-rtl-ce2\n-@option{-fdump-rtl-ce1} enable dumping after the\n-first if conversion, to the file @file{@var{file}.117r.ce1}. \n-@option{-fdump-rtl-ce2} enable dumping after the second if\n-conversion, to the file @file{@var{file}.130r.ce2}.\n+@opindex fdump-rtl-ce3\n+@option{-fdump-rtl-ce1}, @option{-fdump-rtl-ce2}, and\n+@option{-fdump-rtl-ce3} enable dumping after the three\n+if conversion passes. \n+\n+@itemx -fdump-rtl-cprop_hardreg\n+@opindex fdump-rtl-cprop_hardreg\n+Dump after hard register copy propagation.\n+\n+@itemx -fdump-rtl-csa\n+@opindex fdump-rtl-csa\n+Dump after combining stack adjustments.\n+\n+@item -fdump-rtl-cse1\n+@itemx -fdump-rtl-cse2\n+@opindex fdump-rtl-cse1\n+@opindex fdump-rtl-cse2\n+@option{-fdump-rtl-cse1} and @option{-fdump-rtl-cse2} enable dumping after\n+the two common sub-expression elimination passes.\n+\n+@itemx -fdump-rtl-dce\n+@opindex fdump-rtl-dce\n+Dump after the standalone dead code elimination passes.\n \n-@item -fdump-rtl-btl\n @itemx -fdump-rtl-dbr\n-@opindex fdump-rtl-btl\n @opindex fdump-rtl-dbr\n-@option{-fdump-rtl-btl} enable dumping after branch\n-target load optimization, to @file{@var{file}.31.btl}.  \n-@option{-fdump-rtl-dbr} enable dumping after delayed branch\n-scheduling, to @file{@var{file}.36.dbr}.\n+Dump after delayed branch scheduling.\n \n-@item -dD\n-@opindex dD\n-Dump all macro definitions, at the end of preprocessing, in addition to\n-normal output.\n-\n-@item -fdump-rtl-ce3\n-@opindex fdump-rtl-ce3\n-Dump after the third if conversion, to @file{@var{file}.146r.ce3}.\n-\n-@item -fdump-rtl-cfg\n-@itemx -fdump-rtl-life\n-@opindex fdump-rtl-cfg\n-@opindex fdump-rtl-life\n-@option{-fdump-rtl-cfg} enable dumping after control\n-and data flow analysis, to @file{@var{file}.116r.cfg}.  \n-@option{-fdump-rtl-cfg} enable dumping dump after life analysis,\n-to @file{@var{file}.128r.life1} and @file{@var{file}.135r.life2}.\n-\n-@item -fdump-rtl-greg\n-@opindex fdump-rtl-greg\n-Dump after global register allocation, to @file{@var{file}.139r.greg}.\n-\n-@item -fdump-rtl-gcse\n-@itemx -fdump-rtl-bypass\n-@opindex fdump-rtl-gcse\n-@opindex fdump-rtl-bypass\n-@option{-fdump-rtl-gcse} enable dumping after GCSE, to\n-@file{@var{file}.114r.gcse}.  @option{-fdump-rtl-bypass}\n-enable dumping after jump bypassing and control flow optimizations, to\n-@file{@var{file}.115r.bypass}.\n+@item -fdump-rtl-dce1\n+@itemx -fdump-rtl-dce2\n+@opindex fdump-rtl-dce1\n+@opindex fdump-rtl-dce2\n+@option{-fdump-rtl-dce1} and @option{-fdump-rtl-dce2} enable dumping after\n+the two dead store elimination passes.\n \n @item -fdump-rtl-eh\n @opindex fdump-rtl-eh\n-Dump after finalization of EH handling code, to @file{@var{file}.02.eh}.\n+Dump after finalization of EH handling code.\n \n-@item -fdump-rtl-sibling\n-@opindex fdump-rtl-sibling\n-Dump after sibling call optimizations, to @file{@var{file}.106r.sibling}.\n+@item -fdump-rtl-eh_ranges\n+@opindex fdump-rtl-eh_ranges\n+Dump after conversion of EH handling range regions.\n+\n+@item -fdump-rtl-expand\n+@opindex fdump-rtl-expand\n+Dump after RTL generation.\n+\n+@item -fdump-rtl-fwprop1\n+@itemx -fdump-rtl-fwprop2\n+@opindex fdump-rtl-fwprop1\n+@opindex fdump-rtl-fwprop2\n+@option{-fdump-rtl-fwprop1} and @option{-fdump-rtl-fwprop2} enable\n+dumping after the two forward propagation passes.\n+\n+@item -fdump-rtl-gcse1\n+@itemx -fdump-rtl-gcse2\n+@opindex fdump-rtl-gcse1\n+@opindex fdump-rtl-gcse2\n+@option{-fdump-rtl-gcse1} and @option{-fdump-rtl-gcse2} enable dumping\n+after global common subexpression elimination.\n+\n+@item -fdump-rtl-init-regs\n+@opindex fdump-rtl-init-regs\n+Dump after the initialization of the registers.\n+\n+@item -fdump-rtl-initvals\n+@opindex fdump-rtl-initvals\n+Dump after the computation of the initial value sets.\n+\n+@itemx -fdump-rtl-into_cfglayout\n+@opindex fdump-rtl-into_cfglayout\n+Dump after converting to cfglayout mode.\n+\n+@item -fdump-rtl-ira\n+@opindex fdump-rtl-ira\n+Dump after iterated register allocation.\n \n @item -fdump-rtl-jump\n @opindex fdump-rtl-jump\n-Dump after the first jump optimization, to @file{@var{file}.112r.jump}.\n-\n-@item -fdump-rtl-stack\n-@opindex fdump-rtl-stack\n-Dump after conversion from GCC's \"flat register file\" registers to the\n-x87's stack-like registers, to @file{@var{file}.152r.stack}.\n-\n-@item -fdump-rtl-lreg\n-@opindex fdump-rtl-lreg\n-Dump after local register allocation, to @file{@var{file}.138r.lreg}.\n+Dump after the second jump optimization.\n \n @item -fdump-rtl-loop2\n @opindex fdump-rtl-loop2\n-@option{-fdump-rtl-loop2} enables dumping after the\n-loop optimization pass, to @file{@var{file}.119r.loop2},\n-@file{@var{file}.120r.loop2_init},\n-@file{@var{file}.121r.loop2_invariant}, and\n-@file{@var{file}.125r.loop2_done}.\n-\n-@item -fdump-rtl-sms\n-@opindex fdump-rtl-sms\n-Dump after modulo scheduling, to @file{@var{file}.136r.sms}.\n+@option{-fdump-rtl-loop2} enables dumping after the rtl\n+loop optimization passes.\n \n @item -fdump-rtl-mach\n @opindex fdump-rtl-mach\n-Dump after performing the machine dependent reorganization pass, to\n-@file{@var{file}.155r.mach} if that pass exists.\n+Dump after performing the machine dependent reorganization pass, if that\n+pass exists.\n+\n+@item -fdump-rtl-mode_sw\n+@opindex fdump-rtl-mode_sw\n+Dump after removing redundant mode switches.\n \n @item -fdump-rtl-rnreg\n @opindex fdump-rtl-rnreg\n-Dump after register renumbering, to @file{@var{file}.147r.rnreg}.\n+Dump after register renumbering.\n \n-@item -fdump-rtl-regmove\n-@opindex fdump-rtl-regmove\n-Dump after the register move pass, to @file{@var{file}.132r.regmove}.\n+@itemx -fdump-rtl-outof_cfglayout\n+@opindex fdump-rtl-outof_cfglayout\n+Dump after converting from cfglayout mode.\n+\n+@item -fdump-rtl-peephole2\n+@opindex fdump-rtl-peephole2\n+Dump after the peephole pass.\n \n @item -fdump-rtl-postreload\n @opindex fdump-rtl-postreload\n-Dump after post-reload optimizations, to @file{@var{file}.24.postreload}.\n+Dump after post-reload optimizations.\n \n-@item -fdump-rtl-expand\n-@opindex fdump-rtl-expand\n-Dump after RTL generation, to @file{@var{file}.104r.expand}.\n+@itemx -fdump-rtl-pro_and_epilogue\n+@opindex fdump-rtl-pro_and_epilogue\n+Dump after generating the function pro and epilogues.\n \n-@item -fdump-rtl-sched2\n-@opindex fdump-rtl-sched2\n-Dump after the second scheduling pass, to @file{@var{file}.149r.sched2}.\n-\n-@item -fdump-rtl-cse\n-@opindex fdump-rtl-cse\n-Dump after CSE (including the jump optimization that sometimes follows\n-CSE), to @file{@var{file}.113r.cse}.\n+@item -fdump-rtl-regmove\n+@opindex fdump-rtl-regmove\n+Dump after the register move pass.\n \n @item -fdump-rtl-sched1\n+@itemx -fdump-rtl-sched2\n @opindex fdump-rtl-sched1\n-Dump after the first scheduling pass, to @file{@var{file}.136r.sched1}.\n+@opindex fdump-rtl-sched2\n+@option{-fdump-rtl-sched1} and @option{-fdump-rtl-sched2} enable dumping\n+after the basic block scheduling passes.\n \n-@item -fdump-rtl-cse2\n-@opindex fdump-rtl-cse2\n-Dump after the second CSE pass (including the jump optimization that\n-sometimes follows CSE), to @file{@var{file}.127r.cse2}.\n+@item -fdump-rtl-see\n+@opindex fdump-rtl-see\n+Dump after sign extension elimination.\n \n-@item -fdump-rtl-tracer\n-@opindex fdump-rtl-tracer\n-Dump after running tracer, to @file{@var{file}.118r.tracer}.\n+@item -fdump-rtl-seqabstr\n+@opindex fdump-rtl-seqabstr\n+Dump after common sequence discovery. \n \n-@item -fdump-rtl-vpt\n-@itemx -fdump-rtl-vartrack\n-@opindex fdump-rtl-vpt\n-@opindex fdump-rtl-vartrack\n-@option{-fdump-rtl-vpt} enable dumping after the value\n-profile transformations, to @file{@var{file}.10.vpt}.\n-@option{-fdump-rtl-vartrack} enable dumping after variable tracking,\n-to @file{@var{file}.154r.vartrack}.\n+@item -fdump-rtl-shorten\n+@opindex fdump-rtl-shorten\n+Dump after shortening branches.\n \n-@item -fdump-rtl-flow2\n-@opindex fdump-rtl-flow2\n-Dump after the second flow pass, to @file{@var{file}.142r.flow2}.\n+@item -fdump-rtl-sibling\n+@opindex fdump-rtl-sibling\n+Dump after sibling call optimizations.\n+\n+@item -fdump-rtl-split1\n+@itemx -fdump-rtl-split2\n+@itemx -fdump-rtl-split3\n+@itemx -fdump-rtl-split4\n+@itemx -fdump-rtl-split5\n+@opindex fdump-rtl-split1\n+@opindex fdump-rtl-split2\n+@opindex fdump-rtl-split3\n+@opindex fdump-rtl-split4\n+@opindex fdump-rtl-split5\n+@option{-fdump-rtl-split1}, @option{-fdump-rtl-split2},\n+@option{-fdump-rtl-split3}, @option{-fdump-rtl-split4} and\n+@option{-fdump-rtl-split5} enable dumping after five rounds of\n+instruction splitting.\n \n-@item -fdump-rtl-peephole2\n-@opindex fdump-rtl-peephole2\n-Dump after the peephole pass, to @file{@var{file}.145r.peephole2}.\n+@item -fdump-rtl-sms\n+@opindex fdump-rtl-sms\n+Dump after modulo scheduling.  This pass is only run on some\n+architectures.\n+\n+@item -fdump-rtl-stack\n+@opindex fdump-rtl-stack\n+Dump after conversion from GCC's \"flat register file\" registers to the\n+x87's stack-like registers.  This pass is only run on x86 variants.\n+\n+@item -fdump-rtl-subreg1\n+@itemx -fdump-rtl-subreg2\n+@opindex fdump-rtl-subreg1\n+@opindex fdump-rtl-subreg2\n+@option{-fdump-rtl-subreg1} and @option{-fdump-rtl-subreg2} enable dumping after\n+the two subreg expansion passes.\n+\n+@item -fdump-rtl-unshare\n+@opindex fdump-rtl-unshare\n+Dump after all rtl has been unshared.\n+\n+@item -fdump-rtl-vartrack\n+@opindex fdump-rtl-vartrack\n+Dump after variable tracking.\n+\n+@item -fdump-rtl-vregs\n+@opindex fdump-rtl-vregs\n+Dump after converting virtual registers to hard registers.\n \n @item -fdump-rtl-web\n @opindex fdump-rtl-web\n-Dump after live range splitting, to @file{@var{file}.126r.web}.\n+Dump after live range splitting.\n+\n+@item -fdump-rtl-regclass\n+@itemx -fdump-rtl-subregs_of_mode_init\n+@itemx -fdump-rtl-subregs_of_mode_finish\n+@itemx -fdump-rtl-dfinit\n+@itemx -fdump-rtl-dfinish\n+@opindex fdump-rtl-regclass\n+@opindex fdump-rtl-subregs_of_mode_init\n+@opindex fdump-rtl-subregs_of_mode_finish\n+@opindex fdump-rtl-dfinit\n+@opindex fdump-rtl-dfinish\n+These dumps are defined but always produce empty files.\n \n @item -fdump-rtl-all\n @opindex fdump-rtl-all\n Produce all the dumps listed above.\n \n+@item -dA\n+@opindex dA\n+Annotate the assembler output with miscellaneous debugging information.\n+\n+@item -dD\n+@opindex dD\n+Dump all macro definitions, at the end of preprocessing, in addition to\n+normal output.\n+\n @item -dH\n @opindex dH\n Produce a core dump whenever an error occurs."}, {"sha": "8a44f259715c6eb59f2d7a50bbbebaf936642e4c", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=00b251a0371e71bce271656eb7d069851cbd7fcf", "patch": "@@ -3332,7 +3332,7 @@ struct rtl_opt_pass pass_convert_to_eh_region_ranges =\n {\n  {\n   RTL_PASS,\n-  \"eh-ranges\",                          /* name */\n+  \"eh_ranges\",                          /* name */\n   NULL,                                 /* gate */\n   convert_to_eh_region_ranges,          /* execute */\n   NULL,                                 /* sub */"}, {"sha": "69b038b2146cf8fff3cbe8178e1f97898095c3a9", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=00b251a0371e71bce271656eb7d069851cbd7fcf", "patch": "@@ -1325,7 +1325,7 @@ struct rtl_opt_pass pass_lower_subreg =\n {\n  {\n   RTL_PASS,\n-  \"subreg\",\t                        /* name */\n+  \"subreg1\",\t                        /* name */\n   gate_handle_lower_subreg,             /* gate */\n   rest_of_handle_lower_subreg,          /* execute */\n   NULL,                                 /* sub */"}, {"sha": "87a2d160141140b31414145d037b59f0266ae9b9", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=00b251a0371e71bce271656eb7d069851cbd7fcf", "patch": "@@ -760,7 +760,7 @@ struct rtl_opt_pass pass_mode_switching =\n {\n  {\n   RTL_PASS,\n-  \"mode-sw\",                            /* name */\n+  \"mode_sw\",                            /* name */\n   gate_mode_switching,                  /* gate */\n   rest_of_handle_mode_switching,        /* execute */\n   NULL,                                 /* sub */"}, {"sha": "942a033f40f910a7924261bad14c73a1bc8f6165", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00b251a0371e71bce271656eb7d069851cbd7fcf", "patch": "@@ -1,3 +1,8 @@\n+2009-01-29  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\tPR middle-end/35854\n+\t* gcc.dg/lower-subreg-1.c: Renamed dump pass from \"subreg\" to \"subreg1\"\t\t\n+\t\n 2009-01-29  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR middle-end/38857"}, {"sha": "4de90bd99d69b889044ee13373bae748e4c9f1a7", "filename": "gcc/testsuite/gcc.dg/lower-subreg-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b251a0371e71bce271656eb7d069851cbd7fcf/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c?ref=00b251a0371e71bce271656eb7d069851cbd7fcf", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile { target { { { ! mips64 } && { ! ia64-*-* } } && { ! spu-*-* } } } } */\n-/* { dg-options \"-O -fdump-rtl-subreg\" } */\n+/* { dg-options \"-O -fdump-rtl-subreg1\" } */\n /* { dg-require-effective-target ilp32 } */\n \n long long test (long long a, long long b) { return a | b; }\n \n-/* { dg-final { scan-rtl-dump \"Splitting reg\" \"subreg\" } } */\n-/* { dg-final { cleanup-rtl-dump \"subreg\" } } */\n+/* { dg-final { scan-rtl-dump \"Splitting reg\" \"subreg1\" } } */\n+/* { dg-final { cleanup-rtl-dump \"subreg1\" } } */"}]}