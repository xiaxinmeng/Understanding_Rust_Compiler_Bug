{"sha": "77b4604223e6e40ad6f6918a7cd63380fcc931ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdiNDYwNDIyM2U2ZTQwYWQ2ZjY5MThhN2NkNjMzODBmY2M5MzFjZQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-07-31T15:37:11Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-07-31T15:37:11Z"}, "message": "[c++] Fix DECL_BY_REFERENCE of clone parms\n\nConsider test.C compiled at -O0 -g:\n...\nclass string {\npublic:\n  string (const char *p) { this->p = p ; }\n  string (const string &s) { this->p = s.p; }\n\nprivate:\n  const char *p;\n};\n\nclass foo {\npublic:\n  foo (string dir_hint) {}\n};\n\nint\nmain (void)\n{\n  std::string s = \"This is just a string\";\n  foo bar(s);\n  return 0;\n}\n...\n\nWhen parsing foo::foo, the dir_hint parameter gets a DECL_ARG_TYPE of\n'struct string & restrict'.  Then during finish_struct, we call\nclone_constructors_and_destructors and create clones for foo::foo, and\nset the DECL_ARG_TYPE in the same way.\n\nLater on, during finish_function, cp_genericize is called for the original\nfoo::foo, which sets the type of parm dir_hint to DECL_ARG_TYPE, and sets\nDECL_BY_REFERENCE of dir_hint to 1.\n\nAfter that, during maybe_clone_body update_cloned_parm is called with:\n...\n(gdb) call debug_generic_expr (parm.typed.type)\nstruct string & restrict\n(gdb) call debug_generic_expr (cloned_parm.typed.type)\nstruct string\n...\nThe type of the cloned_parm is then set to the type of parm, but\nDECL_BY_REFERENCE is not set.\n\nWhen doing cp_genericize for the clone later on,\nTREE_ADDRESSABLE (TREE_TYPE ()) is no longer true for the updated type for\nthe parm, so DECL_BY_REFERENCE is not set there either.\n\nThe missing DECL_BY_REFERENCE on cloned_parm causes incorrect debug info to be\ngenerated.\n\nThis patch fixes the problem by copying DECL_BY_REFERENCE in update_cloned_parm.\n\nBootstrapped and reg-tested on x86_64.\n\n2018-07-31  Tom de Vries  <tdevries@suse.de>\n\n\tPR debug/86687\n\t* optimize.c (update_cloned_parm): Copy DECL_BY_REFERENCE.\n\n\t* g++.dg/guality/pr86687.C: New test.\n\nFrom-SVN: r263164", "tree": {"sha": "0695e676fc9fb7bff4f7d6fad72f324f9fa06db3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0695e676fc9fb7bff4f7d6fad72f324f9fa06db3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77b4604223e6e40ad6f6918a7cd63380fcc931ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b4604223e6e40ad6f6918a7cd63380fcc931ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77b4604223e6e40ad6f6918a7cd63380fcc931ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b4604223e6e40ad6f6918a7cd63380fcc931ce/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e64a626d722129828d95dd690da3966bb7ec968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e64a626d722129828d95dd690da3966bb7ec968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e64a626d722129828d95dd690da3966bb7ec968"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "503d8b4a433fdc948e57e7b0eb75723360ac07c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b4604223e6e40ad6f6918a7cd63380fcc931ce/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b4604223e6e40ad6f6918a7cd63380fcc931ce/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=77b4604223e6e40ad6f6918a7cd63380fcc931ce", "patch": "@@ -1,3 +1,8 @@\n+2018-07-31  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR debug/86687\n+\t* optimize.c (update_cloned_parm): Copy DECL_BY_REFERENCE.\n+\n 2018-07-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tP1008R1 - prohibit aggregates with user-declared constructors"}, {"sha": "3923a5fc6c4e6950a4f4adef1a1b89d01aebba0d", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b4604223e6e40ad6f6918a7cd63380fcc931ce/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b4604223e6e40ad6f6918a7cd63380fcc931ce/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=77b4604223e6e40ad6f6918a7cd63380fcc931ce", "patch": "@@ -46,6 +46,8 @@ update_cloned_parm (tree parm, tree cloned_parm, bool first)\n   /* We may have taken its address.  */\n   TREE_ADDRESSABLE (cloned_parm) = TREE_ADDRESSABLE (parm);\n \n+  DECL_BY_REFERENCE (cloned_parm) = DECL_BY_REFERENCE (parm);\n+\n   /* The definition might have different constness.  */\n   TREE_READONLY (cloned_parm) = TREE_READONLY (parm);\n "}, {"sha": "2cc69735ff5660b5a5bc4f8b5541e40d9cdefa0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b4604223e6e40ad6f6918a7cd63380fcc931ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b4604223e6e40ad6f6918a7cd63380fcc931ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=77b4604223e6e40ad6f6918a7cd63380fcc931ce", "patch": "@@ -1,3 +1,8 @@\n+2018-07-31  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR debug/86687\n+\t* g++.dg/guality/pr86687.C: New test.\n+\n 2018-07-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tP1008R1 - prohibit aggregates with user-declared constructors"}, {"sha": "140a6fce5960030133e15d60c04c14d204112537", "filename": "gcc/testsuite/g++.dg/guality/pr86687.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b4604223e6e40ad6f6918a7cd63380fcc931ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fpr86687.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b4604223e6e40ad6f6918a7cd63380fcc931ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fpr86687.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fpr86687.C?ref=77b4604223e6e40ad6f6918a7cd63380fcc931ce", "patch": "@@ -0,0 +1,28 @@\n+// PR debug/86687\n+// { dg-do run }\n+// { dg-options \"-g\" }\n+\n+class string {\n+public:\n+  string (int p) { this->p = p ; }\n+  string (const string &s) { this->p = s.p; }\n+\n+  int p;\n+};\n+\n+class foo {\n+public:\n+  foo (string dir_hint) {\n+    p = dir_hint.p; // { dg-final { gdb-test . \"dir_hint.p\" 3 } }\n+  }\n+\n+  int p;\n+};\n+\n+int\n+main (void)\n+{\n+  string s = 3;\n+  foo bar(s);\n+  return !(bar.p == 3);\n+}"}]}