{"sha": "bb6b5461d12495403054e2a8fc7a73d753ebd90c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI2YjU0NjFkMTI0OTU0MDMwNTRlMmE4ZmM3YTczZDc1M2ViZDkwYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-09-30T19:24:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-09-30T19:24:10Z"}, "message": "* dwarf2out.c (mem_loc_descriptor): Handle IF_THEN_ELSE.\n\nFrom-SVN: r164762", "tree": {"sha": "c2b9860f187de8eb731604c9b74b451d3893dcfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2b9860f187de8eb731604c9b74b451d3893dcfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb6b5461d12495403054e2a8fc7a73d753ebd90c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb6b5461d12495403054e2a8fc7a73d753ebd90c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb6b5461d12495403054e2a8fc7a73d753ebd90c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb6b5461d12495403054e2a8fc7a73d753ebd90c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "140d4effd556b7da4a322f8d34c2dde6758d09e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/140d4effd556b7da4a322f8d34c2dde6758d09e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/140d4effd556b7da4a322f8d34c2dde6758d09e7"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "9f3bcccceb99350d833d37577dd104883a430d65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb6b5461d12495403054e2a8fc7a73d753ebd90c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb6b5461d12495403054e2a8fc7a73d753ebd90c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb6b5461d12495403054e2a8fc7a73d753ebd90c", "patch": "@@ -1,5 +1,7 @@\n 2010-09-30  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* dwarf2out.c (mem_loc_descriptor): Handle IF_THEN_ELSE.\n+\n \tPR tree-optimization/31261\n \t* fold-const.c (fold_binary): Optimize ((A & N) + B) & M\n \tfor constants M and N, M == (1LL << cst) - 1 && (N & M) == M."}, {"sha": "9136eaa6b916b74e4f68941d9aeec3f0aa125af7", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb6b5461d12495403054e2a8fc7a73d753ebd90c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb6b5461d12495403054e2a8fc7a73d753ebd90c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=bb6b5461d12495403054e2a8fc7a73d753ebd90c", "patch": "@@ -14162,8 +14162,32 @@ mem_loc_descriptor (rtx rtl, enum machine_mode mode,\n \t}\n       break;\n \n-    case COMPARE:\n     case IF_THEN_ELSE:\n+      {\n+\tdw_loc_descr_ref op2, bra_node, drop_node;\n+\top0 = mem_loc_descriptor (XEXP (rtl, 0), mode,\n+\t\t\t\t  VAR_INIT_STATUS_INITIALIZED);\n+\top1 = mem_loc_descriptor (XEXP (rtl, 1), mode,\n+\t\t\t\t  VAR_INIT_STATUS_INITIALIZED);\n+\top2 = mem_loc_descriptor (XEXP (rtl, 2), mode,\n+\t\t\t\t  VAR_INIT_STATUS_INITIALIZED);\n+\tif (op0 == NULL || op1 == NULL || op2 == NULL)\n+\t  break;\n+\n+\tmem_loc_result = op1;\n+\tadd_loc_descr (&mem_loc_result, op2);\n+\tadd_loc_descr (&mem_loc_result, op0);\n+\tbra_node = new_loc_descr (DW_OP_bra, 0, 0);\n+\tadd_loc_descr (&mem_loc_result, bra_node);\n+\tadd_loc_descr (&mem_loc_result, new_loc_descr (DW_OP_swap, 0, 0));\n+\tdrop_node = new_loc_descr (DW_OP_drop, 0, 0);\n+\tadd_loc_descr (&mem_loc_result, drop_node);\n+\tbra_node->dw_loc_oprnd1.val_class = dw_val_class_loc;\n+\tbra_node->dw_loc_oprnd1.v.val_loc = drop_node;\n+      }\n+      break;\n+\n+    case COMPARE:\n     case ROTATE:\n     case ROTATERT:\n     case TRUNCATE:"}]}