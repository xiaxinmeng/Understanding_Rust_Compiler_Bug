{"sha": "65f8b0fbafee3584579c96a9a0efc27ff6ea4519", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmOGIwZmJhZmVlMzU4NDU3OWM5NmE5YTBlZmMyN2ZmNmVhNDUxOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-11-30T21:57:32Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-11-30T21:57:32Z"}, "message": "re PR c++/8511 ((hopefully) reproducible cc1plus SIGSEGV.)\n\n\tPR c++/8511\n\t* pt.c (instantiate_decl): Handle template friends defined outside\n\tof the class correctly.\n\n\tPR c++/8511\n\t* g++.dg/template/friend8.C: New test.\n\nFrom-SVN: r59665", "tree": {"sha": "97af7edbd722cf6428fce54bed621cb699c06275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97af7edbd722cf6428fce54bed621cb699c06275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65f8b0fbafee3584579c96a9a0efc27ff6ea4519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f8b0fbafee3584579c96a9a0efc27ff6ea4519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65f8b0fbafee3584579c96a9a0efc27ff6ea4519", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f8b0fbafee3584579c96a9a0efc27ff6ea4519/comments", "author": null, "committer": null, "parents": [{"sha": "acb45e09fe1fb5189fa0f24235ee98fe3626b821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb45e09fe1fb5189fa0f24235ee98fe3626b821", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acb45e09fe1fb5189fa0f24235ee98fe3626b821"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "3a586ae868669caacc4f99e975fc9c385450a272", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f8b0fbafee3584579c96a9a0efc27ff6ea4519/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f8b0fbafee3584579c96a9a0efc27ff6ea4519/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=65f8b0fbafee3584579c96a9a0efc27ff6ea4519", "patch": "@@ -1,3 +1,9 @@\n+2002-11-30  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/8511\n+\t* pt.c (instantiate_decl): Handle template friends defined outside\n+\tof the class correctly.\n+\n 2002-11-29  Joe Buck <jbuck@synopsys.com>\n \n \t* parse.y (class_head_defn): Set CLASSTYPE_DECLARED_CLASS for"}, {"sha": "99f10d57dfcf549be549391d8293f996735bc887", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f8b0fbafee3584579c96a9a0efc27ff6ea4519/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f8b0fbafee3584579c96a9a0efc27ff6ea4519/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=65f8b0fbafee3584579c96a9a0efc27ff6ea4519", "patch": "@@ -9966,7 +9966,8 @@ instantiate_decl (d, defer_ok)\n      int defer_ok;\n {\n   tree tmpl = DECL_TI_TEMPLATE (d);\n-  tree args = DECL_TI_ARGS (d);\n+  tree gen_args;\n+  tree args;\n   tree td;\n   tree code_pattern;\n   tree spec;\n@@ -10000,7 +10001,8 @@ instantiate_decl (d, defer_ok)\n      specializations, so we must explicitly check\n      DECL_TEMPLATE_SPECIALIZATION.  */\n   gen_tmpl = most_general_template (tmpl);\n-  spec = retrieve_specialization (gen_tmpl, args);\n+  gen_args = DECL_TI_ARGS (d);\n+  spec = retrieve_specialization (gen_tmpl, gen_args);\n   if (spec != NULL_TREE && DECL_TEMPLATE_SPECIALIZATION (spec))\n     return spec;\n \n@@ -10061,6 +10063,13 @@ instantiate_decl (d, defer_ok)\n \n   code_pattern = DECL_TEMPLATE_RESULT (td);\n \n+  /* In the case of a friend temlpate whose definition is provided\n+     outside the class, we may have too many arguments.  Drop the ones\n+     we don't need.  */\n+  args = get_innermost_template_args (gen_args,\n+\t\t\t\t      TMPL_PARMS_DEPTH \n+\t\t\t\t      (DECL_TEMPLATE_PARMS (td)));\n+\n   if (TREE_CODE (d) == FUNCTION_DECL)\n     pattern_defined = (DECL_SAVED_TREE (code_pattern) != NULL_TREE);\n   else\n@@ -10125,16 +10134,16 @@ instantiate_decl (d, defer_ok)\n \n       if (TREE_CODE (gen) == FUNCTION_DECL)\n \t{\n-\t  tsubst (DECL_ARGUMENTS (gen), args, tf_error | tf_warning, d);\n-\t  tsubst (TYPE_RAISES_EXCEPTIONS (type), args,\n+\t  tsubst (DECL_ARGUMENTS (gen), gen_args, tf_error | tf_warning, d);\n+\t  tsubst (TYPE_RAISES_EXCEPTIONS (type), gen_args,\n \t\t  tf_error | tf_warning, d);\n \t  /* Don't simply tsubst the function type, as that will give\n \t     duplicate warnings about poor parameter qualifications.\n \t     The function arguments are the same as the decl_arguments\n \t     without the top level cv qualifiers.  */\n \t  type = TREE_TYPE (type);\n \t}\n-      tsubst (type, args, tf_error | tf_warning, d);\n+      tsubst (type, gen_args, tf_error | tf_warning, d);\n \n       if (DECL_CLASS_SCOPE_P (d))\n \tpopclass ();"}, {"sha": "48658bf0e9480711477190c84c78e6efe8a15ff0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f8b0fbafee3584579c96a9a0efc27ff6ea4519/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f8b0fbafee3584579c96a9a0efc27ff6ea4519/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=65f8b0fbafee3584579c96a9a0efc27ff6ea4519", "patch": "@@ -1,3 +1,8 @@\n+2002-11-30  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/8511\n+\t* g++.dg/template/friend8.C: New test.\n+\n 2002-11-29  Joe Buck <jbuck@synopsys.com>\n \n \t* g++.dg/lookup/anon2.C: New test."}, {"sha": "21fd242f1836dd1679a5e849c808e0679b15ebb1", "filename": "gcc/testsuite/g++.dg/template/friend8.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f8b0fbafee3584579c96a9a0efc27ff6ea4519/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f8b0fbafee3584579c96a9a0efc27ff6ea4519/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend8.C?ref=65f8b0fbafee3584579c96a9a0efc27ff6ea4519", "patch": "@@ -0,0 +1,18 @@\n+template <int N> struct ivector\n+{\n+  template <int r, int c> friend void\n+    mult_mv ();\n+};\n+\n+template struct ivector<3>;\n+\n+template <int r, int c> void\n+mult_mv ()\n+{\n+  c;\n+}\n+\n+void get_local_point_pos ()\n+{\n+  mult_mv<7, 3> ();\n+}"}]}