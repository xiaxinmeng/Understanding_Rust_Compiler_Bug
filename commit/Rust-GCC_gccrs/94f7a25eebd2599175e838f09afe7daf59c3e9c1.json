{"sha": "94f7a25eebd2599175e838f09afe7daf59c3e9c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRmN2EyNWVlYmQyNTk5MTc1ZTgzOGYwOWFmZTdkYWY1OWMzZTljMQ==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2016-11-14T12:04:11Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2016-11-14T12:04:11Z"}, "message": "Currently the SBFM, UBFM and BFM instructions all use the attribute \"bfm\".\n\nSBFM and UBFM include all shifts on AArch64, which are simpler than bitfield\ninsert.  Add a new bfx attribute for these instructions so that they can be\nmodelled more accurately in the future.  There is no difference in code \ngeneration.\n\n\t* config/aarch64/aarch64.md (aarch64_ashl_sisd_or_int_<mode>3)\n\tUse bfx attribute.\n\t(aarch64_lshr_sisd_or_int_<mode>3): Likewise.\n\t(aarch64_ashr_sisd_or_int_<mode>3): Likewise.\n\t(<optab>si3_insn_uxtw): Likewise.\n\t(<optab><mode>3_insn): Likewise.\n\t(<ANY_EXTEND:optab><GPI:mode>_ashl<SHORT:mode>): Likewise.\n\t(zero_extend<GPI:mode>_lshr<SHORT:mode>): Likewise.\n\t(extend<GPI:mode>_ashr<SHORT:mode>): Likewise.\n\t(<optab><mode>): Likewise.\n\t(insv<mode>): Likewise.\n\t(andim_ashift<mode>_bfiz): Likewise.\n\t* config/aarch64/thunderx.md (thunderx_shift): Add bfx.\n\t* config/arm/cortex-a53.md (cortex_a53_alu_shift): Likewise.\n\t* config/arm/cortex-a57.md (cortex_a57_alu): Add bfx.\n\t* config/arm/exynos-m1.md (exynos_m1_alu): Add bfx.\n\t(exynos_m1_alu_p): Likewise.\n\t* config/arm/types.md: Add bfx.\n\t* config/arm/xgene1.md (xgene1_bfm): Add bfx.\n\nFrom-SVN: r242384", "tree": {"sha": "eca04d4b1cbbe6ffebe929492cd138db82149f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eca04d4b1cbbe6ffebe929492cd138db82149f13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94f7a25eebd2599175e838f09afe7daf59c3e9c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f7a25eebd2599175e838f09afe7daf59c3e9c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94f7a25eebd2599175e838f09afe7daf59c3e9c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f7a25eebd2599175e838f09afe7daf59c3e9c1/comments", "author": null, "committer": null, "parents": [{"sha": "db4a1c18ceb5aede224c92ec4c86723f6fb93514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db4a1c18ceb5aede224c92ec4c86723f6fb93514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db4a1c18ceb5aede224c92ec4c86723f6fb93514"}], "stats": {"total": 58, "additions": 41, "deletions": 17}, "files": [{"sha": "07173ab54e88fb0f2b8ee7ea33f8cb4190e09018", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94f7a25eebd2599175e838f09afe7daf59c3e9c1", "patch": "@@ -1,3 +1,25 @@\n+2016-11-14  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64.md (aarch64_ashl_sisd_or_int_<mode>3)\n+\tUse bfx attribute.\n+\t(aarch64_lshr_sisd_or_int_<mode>3): Likewise.\n+\t(aarch64_ashr_sisd_or_int_<mode>3): Likewise.\n+\t(<optab>si3_insn_uxtw): Likewise.\n+\t(<optab><mode>3_insn): Likewise.\n+\t(<ANY_EXTEND:optab><GPI:mode>_ashl<SHORT:mode>): Likewise.\n+\t(zero_extend<GPI:mode>_lshr<SHORT:mode>): Likewise.\n+\t(extend<GPI:mode>_ashr<SHORT:mode>): Likewise.\n+\t(<optab><mode>): Likewise.\n+\t(insv<mode>): Likewise.\n+\t(andim_ashift<mode>_bfiz): Likewise.\n+\t* config/aarch64/thunderx.md (thunderx_shift): Add bfx.\n+\t* config/arm/cortex-a53.md (cortex_a53_alu_shift): Likewise.\n+\t* config/arm/cortex-a57.md (cortex_a57_alu): Add bfx.\n+\t* config/arm/exynos-m1.md (exynos_m1_alu): Add bfx.\n+\t(exynos_m1_alu_p): Likewise.\n+\t* config/arm/types.md: Add bfx.\n+\t* config/arm/xgene1.md (xgene1_bfm): Add bfx.\n+\n 2016-11-14  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.c (cortexa57_vector_cost):"}, {"sha": "a652a7c12bd051f638fcd280ba6be220b047bf4b", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=94f7a25eebd2599175e838f09afe7daf59c3e9c1", "patch": "@@ -3955,7 +3955,7 @@\n    shl\\t%<rtn>0<vas>, %<rtn>1<vas>, %2\n    ushl\\t%<rtn>0<vas>, %<rtn>1<vas>, %<rtn>2<vas>\"\n   [(set_attr \"simd\" \"no,no,yes,yes\")\n-   (set_attr \"type\" \"bfm,shift_reg,neon_shift_imm<q>, neon_shift_reg<q>\")]\n+   (set_attr \"type\" \"bfx,shift_reg,neon_shift_imm<q>, neon_shift_reg<q>\")]\n )\n \n ;; Logical right shift using SISD or Integer instruction\n@@ -3972,7 +3972,7 @@\n    #\n    #\"\n   [(set_attr \"simd\" \"no,no,yes,yes,yes\")\n-   (set_attr \"type\" \"bfm,shift_reg,neon_shift_imm<q>,neon_shift_reg<q>,neon_shift_reg<q>\")]\n+   (set_attr \"type\" \"bfx,shift_reg,neon_shift_imm<q>,neon_shift_reg<q>,neon_shift_reg<q>\")]\n )\n \n (define_split\n@@ -4019,7 +4019,7 @@\n    #\n    #\"\n   [(set_attr \"simd\" \"no,no,yes,yes,yes\")\n-   (set_attr \"type\" \"bfm,shift_reg,neon_shift_imm<q>,neon_shift_reg<q>,neon_shift_reg<q>\")]\n+   (set_attr \"type\" \"bfx,shift_reg,neon_shift_imm<q>,neon_shift_reg<q>,neon_shift_reg<q>\")]\n )\n \n (define_split\n@@ -4129,7 +4129,7 @@\n   \"@\n    <shift>\\\\t%w0, %w1, %2\n    <shift>\\\\t%w0, %w1, %w2\"\n-  [(set_attr \"type\" \"bfm,shift_reg\")]\n+  [(set_attr \"type\" \"bfx,shift_reg\")]\n )\n \n (define_insn \"*<optab><mode>3_insn\"\n@@ -4141,7 +4141,7 @@\n   operands[3] = GEN_INT (<sizen> - UINTVAL (operands[2]));\n   return \"<bfshift>\\t%w0, %w1, %2, %3\";\n }\n-  [(set_attr \"type\" \"bfm\")]\n+  [(set_attr \"type\" \"bfx\")]\n )\n \n (define_insn \"*extr<mode>5_insn\"\n@@ -4234,7 +4234,7 @@\n   operands[3] = GEN_INT (<SHORT:sizen> - UINTVAL (operands[2]));\n   return \"<su>bfiz\\t%<GPI:w>0, %<GPI:w>1, %2, %3\";\n }\n-  [(set_attr \"type\" \"bfm\")]\n+  [(set_attr \"type\" \"bfx\")]\n )\n \n (define_insn \"*zero_extend<GPI:mode>_lshr<SHORT:mode>\"\n@@ -4247,7 +4247,7 @@\n   operands[3] = GEN_INT (<SHORT:sizen> - UINTVAL (operands[2]));\n   return \"ubfx\\t%<GPI:w>0, %<GPI:w>1, %2, %3\";\n }\n-  [(set_attr \"type\" \"bfm\")]\n+  [(set_attr \"type\" \"bfx\")]\n )\n \n (define_insn \"*extend<GPI:mode>_ashr<SHORT:mode>\"\n@@ -4260,7 +4260,7 @@\n   operands[3] = GEN_INT (<SHORT:sizen> - UINTVAL (operands[2]));\n   return \"sbfx\\\\t%<GPI:w>0, %<GPI:w>1, %2, %3\";\n }\n-  [(set_attr \"type\" \"bfm\")]\n+  [(set_attr \"type\" \"bfx\")]\n )\n \n ;; -------------------------------------------------------------------\n@@ -4292,7 +4292,7 @@\n   \"IN_RANGE (INTVAL (operands[2]) + INTVAL (operands[3]),\n \t     1, GET_MODE_BITSIZE (<MODE>mode) - 1)\"\n   \"<su>bfx\\\\t%<w>0, %<w>1, %3, %2\"\n-  [(set_attr \"type\" \"bfm\")]\n+  [(set_attr \"type\" \"bfx\")]\n )\n \n ;; Bitfield Insert (insv)\n@@ -4374,7 +4374,7 @@\n \t      : GEN_INT (<GPI:sizen> - UINTVAL (operands[2]));\n   return \"<su>bfiz\\t%<GPI:w>0, %<GPI:w>1, %2, %3\";\n }\n-  [(set_attr \"type\" \"bfm\")]\n+  [(set_attr \"type\" \"bfx\")]\n )\n \n ;; XXX We should match (any_extend (ashift)) here, like (and (ashift)) below\n@@ -4386,7 +4386,7 @@\n \t\t (match_operand 3 \"const_int_operand\" \"n\")))]\n   \"aarch64_mask_and_shift_for_ubfiz_p (<MODE>mode, operands[3], operands[2])\"\n   \"ubfiz\\\\t%<w>0, %<w>1, %2, %P3\"\n-  [(set_attr \"type\" \"bfm\")]\n+  [(set_attr \"type\" \"bfx\")]\n )\n \n (define_insn \"bswap<mode>2\""}, {"sha": "7c1c28b0498cfe0129e3f0de7e29e31536fe421a", "filename": "gcc/config/aarch64/thunderx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Faarch64%2Fthunderx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Faarch64%2Fthunderx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fthunderx.md?ref=94f7a25eebd2599175e838f09afe7daf59c3e9c1", "patch": "@@ -39,7 +39,7 @@\n \n (define_insn_reservation \"thunderx_shift\" 1\n   (and (eq_attr \"tune\" \"thunderx\")\n-       (eq_attr \"type\" \"bfm,extend,rotate_imm,shift_imm,shift_reg,rbit,rev\"))\n+       (eq_attr \"type\" \"bfm,bfx,extend,rotate_imm,shift_imm,shift_reg,rbit,rev\"))\n   \"thunderx_pipe0 | thunderx_pipe1\")\n \n "}, {"sha": "eb6d0b04976aaf441dd95cc43d02918226e75387", "filename": "gcc/config/arm/cortex-a53.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a53.md?ref=94f7a25eebd2599175e838f09afe7daf59c3e9c1", "patch": "@@ -93,7 +93,7 @@\n   (and (eq_attr \"tune\" \"cortexa53\")\n        (eq_attr \"type\" \"alu_shift_imm,alus_shift_imm,\n \t\t\tcrc,logic_shift_imm,logics_shift_imm,\n-\t\t\talu_ext,alus_ext,bfm,extend,mvn_shift\"))\n+\t\t\talu_ext,alus_ext,bfm,bfx,extend,mvn_shift\"))\n   \"cortex_a53_slot_any\")\n \n (define_insn_reservation \"cortex_a53_alu_shift_reg\" 3"}, {"sha": "da461846baa5b28ce3d9c9f731dbfd7becb31a85", "filename": "gcc/config/arm/cortex-a57.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Farm%2Fcortex-a57.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Farm%2Fcortex-a57.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a57.md?ref=94f7a25eebd2599175e838f09afe7daf59c3e9c1", "patch": "@@ -297,7 +297,7 @@\n        (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n \t\t\talu_sreg,alus_sreg,logic_reg,logics_reg,\\\n \t\t\tadc_imm,adcs_imm,adc_reg,adcs_reg,\\\n-\t\t\tadr,bfm,clz,csel,rbit,rev,alu_dsp_reg,\\\n+\t\t\tadr,bfm,bfx,clz,rbit,rev,alu_dsp_reg,\\\n \t\t\trotate_imm,shift_imm,shift_reg,\\\n \t\t\tmov_imm,mov_reg,\\\n \t\t\tmvn_imm,mvn_reg,\\"}, {"sha": "00574d7930f23c36005648cddca285405ced8a8c", "filename": "gcc/config/arm/exynos-m1.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Farm%2Fexynos-m1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Farm%2Fexynos-m1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fexynos-m1.md?ref=94f7a25eebd2599175e838f09afe7daf59c3e9c1", "patch": "@@ -358,7 +358,7 @@\n \t    (eq_attr \"type\" \"alu_imm, alus_imm, logic_imm, logics_imm,\\\n \t\t\t     alu_sreg, alus_sreg, logic_reg, logics_reg,\\\n \t\t\t     adc_imm, adcs_imm, adc_reg, adcs_reg,\\\n-\t\t\t     adr, bfm, clz, rbit, rev, csel, alu_dsp_reg,\\\n+\t\t\t     adr, bfm, bfx, clz, rbit, rev, csel, alu_dsp_reg,\\\n \t\t\t     shift_imm, shift_reg, rotate_imm, extend,\\\n \t\t\t     mov_imm, mov_reg,\\\n \t\t\t     mvn_imm, mvn_reg,\\\n@@ -372,7 +372,7 @@\n \t    (eq_attr \"type\" \"alu_imm, alus_imm, logic_imm, logics_imm,\\\n \t\t\t     alu_sreg, alus_sreg, logic_reg, logics_reg,\\\n \t\t\t     adc_imm, adcs_imm, adc_reg, adcs_reg,\\\n-\t\t\t     adr, bfm, clz, rbit, rev, alu_dsp_reg,\\\n+\t\t\t     adr, bfm, bfx, clz, rbit, rev, alu_dsp_reg,\\\n \t\t\t     shift_imm, shift_reg, rotate_imm, extend,\\\n \t\t\t     mov_imm, mov_reg,\\\n \t\t\t     mvn_imm, mvn_reg,\\"}, {"sha": "7a95a3704d0907fcaf42463c5803cbff82b29fa1", "filename": "gcc/config/arm/types.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Farm%2Ftypes.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Farm%2Ftypes.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftypes.md?ref=94f7a25eebd2599175e838f09afe7daf59c3e9c1", "patch": "@@ -51,6 +51,7 @@\n ; alus_shift_imm     as alu_shift_imm, setting condition flags.\n ; alus_shift_reg     as alu_shift_reg, setting condition flags.\n ; bfm                bitfield move operation.\n+; bfx                bitfield extract operation.\n ; block              blockage insn, this blocks all functional units.\n ; branch             branch.\n ; call               subroutine call.\n@@ -557,6 +558,7 @@\n   alus_shift_imm,\\\n   alus_shift_reg,\\\n   bfm,\\\n+  bfx,\\\n   block,\\\n   branch,\\\n   call,\\"}, {"sha": "4f27b28461f23aff6720cd1ba54c46fa9ae574ce", "filename": "gcc/config/arm/xgene1.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Farm%2Fxgene1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f7a25eebd2599175e838f09afe7daf59c3e9c1/gcc%2Fconfig%2Farm%2Fxgene1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxgene1.md?ref=94f7a25eebd2599175e838f09afe7daf59c3e9c1", "patch": "@@ -164,7 +164,7 @@\n \n (define_insn_reservation \"xgene1_bfm\" 2\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"bfm\"))\n+       (eq_attr \"type\" \"bfm,bfx\"))\n   \"xgene1_decode1op,xgene1_fsu\")\n \n (define_insn_reservation \"xgene1_f_rint\" 5"}]}