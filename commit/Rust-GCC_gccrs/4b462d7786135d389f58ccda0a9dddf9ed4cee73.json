{"sha": "4b462d7786135d389f58ccda0a9dddf9ed4cee73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI0NjJkNzc4NjEzNWQzODlmNThjY2RhMGE5ZGRkZjllZDRjZWU3Mw==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2009-08-12T16:10:12Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-08-12T16:10:12Z"}, "message": "builtins.c (compareAndSwapInt_builtin): Use flag_use_atomic_builtins.\n\n2009-08-12  Andrew Haley  <aph@redhat.com>\n\n\t* builtins.c (compareAndSwapInt_builtin): Use\n\tflag_use_atomic_builtins.\n\t(compareAndSwapLong_builtin): Likewise.\n\t(compareAndSwapObject_builtin): Likewise.\n\t* jvspec.c: Add flag_use_atomic_builtins.\n\t* gcj.texi: Likewise.\n\t* java-tree.h: Likewise.\n\t* lang.opt: Likewise.\n\nFrom-SVN: r150699", "tree": {"sha": "2b29a3b4b734755142382ee704c64493d0a28268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b29a3b4b734755142382ee704c64493d0a28268"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b462d7786135d389f58ccda0a9dddf9ed4cee73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b462d7786135d389f58ccda0a9dddf9ed4cee73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b462d7786135d389f58ccda0a9dddf9ed4cee73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b462d7786135d389f58ccda0a9dddf9ed4cee73/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97804369a99a4e9ab5609b158ce5b0becff36880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97804369a99a4e9ab5609b158ce5b0becff36880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97804369a99a4e9ab5609b158ce5b0becff36880"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "d9fb9f5986647ce2a58f07795fe36e05da012925", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=4b462d7786135d389f58ccda0a9dddf9ed4cee73", "patch": "@@ -1,3 +1,14 @@\n+2009-08-12  Andrew Haley  <aph@redhat.com>\n+\n+\t* builtins.c (compareAndSwapInt_builtin): Use\n+\tflag_use_atomic_builtins.\n+\t(compareAndSwapLong_builtin): Likewise.\n+\t(compareAndSwapObject_builtin): Likewise.\n+\t* jvspec.c: Add flag_use_atomic_builtins.\n+\t* gcj.texi: Likewise.\n+\t* java-tree.h: Likewise.\n+\t* lang.opt: Likewise.\n+\n 2009-08-11  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR debug/40990"}, {"sha": "6e4815beeab2755e9e7a4b2b5bb95741c0e9bebe", "filename": "gcc/java/builtins.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuiltins.c?ref=4b462d7786135d389f58ccda0a9dddf9ed4cee73", "patch": "@@ -318,7 +318,8 @@ compareAndSwapInt_builtin (tree method_return_type ATTRIBUTE_UNUSED,\n \t\t\t   tree orig_call)\n {\n   enum machine_mode mode = TYPE_MODE (int_type_node);\n-  if (sync_compare_and_swap[mode] != CODE_FOR_nothing)\n+  if (sync_compare_and_swap[mode] != CODE_FOR_nothing\n+      || flag_use_atomic_builtins)\n     {\n       tree addr, stmt;\n       UNMARSHAL5 (orig_call);\n@@ -337,7 +338,12 @@ compareAndSwapLong_builtin (tree method_return_type ATTRIBUTE_UNUSED,\n \t\t\t    tree orig_call)\n {\n   enum machine_mode mode = TYPE_MODE (long_type_node);\n-  if (sync_compare_and_swap[mode] != CODE_FOR_nothing)\n+  if (sync_compare_and_swap[mode] != CODE_FOR_nothing\n+      || (GET_MODE_SIZE (mode) <= GET_MODE_SIZE (word_mode)\n+\t  && flag_use_atomic_builtins))\n+    /* We don't trust flag_use_atomic_builtins for multi-word\n+       compareAndSwap.  Some machines such as ARM have atomic libfuncs\n+       but not the multi-word versions.  */\n     {\n       tree addr, stmt;\n       UNMARSHAL5 (orig_call);\n@@ -355,7 +361,8 @@ compareAndSwapObject_builtin (tree method_return_type ATTRIBUTE_UNUSED,\n \t\t\t      tree orig_call)\n {\n   enum machine_mode mode = TYPE_MODE (ptr_type_node);\n-  if (sync_compare_and_swap[mode] != CODE_FOR_nothing)\n+  if (sync_compare_and_swap[mode] != CODE_FOR_nothing\n+      || flag_use_atomic_builtins)\n   {\n     tree addr, stmt;\n     int builtin;"}, {"sha": "46b0899e80083975eab21f7e3b276ef484a86f9f", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=4b462d7786135d389f58ccda0a9dddf9ed4cee73", "patch": "@@ -607,6 +607,13 @@ On some systems it's necessary to insert inline checks whenever\n accessing an object via a reference.  On other systems you won't need\n this because null pointer accesses are caught automatically by the\n processor.\n+\n+@item -fuse-atomic-builtins\n+On some systems, gcc can generate code for built-in atomic operations.\n+Use this option to force gcj to use these builtins when compiling Java\n+code.  Where this capability is present it should be automatically\n+detected, so you won't usually need to use this option.\n+\n @end table\n \n @c man end"}, {"sha": "3bdd75a2ed813b69a3cfd31bb0fa792679a1b582", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=4b462d7786135d389f58ccda0a9dddf9ed4cee73", "patch": "@@ -145,6 +145,9 @@ extern int flag_newer;\n /* When nonzero, call a library routine to do integer divisions. */\n extern int flag_use_divide_subroutine;\n \n+/* When nonzero, use atomic builtins. */\n+extern int flag_use_atomic_builtins;\n+\n /* When nonzero, generate code for the Boehm GC.  */\n extern int flag_use_boehm_gc;\n "}, {"sha": "9e57dab651cc3dfb0eeb19d87e0032e06e592956", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=4b462d7786135d389f58ccda0a9dddf9ed4cee73", "patch": "@@ -73,6 +73,7 @@ static const char jvgenmain_spec[] =\n \t\t   %<fclasspath* %<fCLASSPATH* %<fbootclasspath*\\\n \t\t   %<fextdirs*\\\n \t\t   %<fuse-divide-subroutine %<fno-use-divide-subroutine\\\n+\t\t   %<fuse-atomic-builtins %<fno-use-atomic-builtins\\\n \t\t   %<fcheck-references %<fno-check-references\\\n \t\t   %<ffilelist-file %<fsaw-java-file %<fsource* %<ftarget*\\\n \t\t   %{f*} -fdollars-in-identifiers\\"}, {"sha": "9e9a8cb5210862805727d541b0cdcd4bc333b27a", "filename": "gcc/java/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b462d7786135d389f58ccda0a9dddf9ed4cee73/gcc%2Fjava%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.opt?ref=4b462d7786135d389f58ccda0a9dddf9ed4cee73", "patch": "@@ -192,6 +192,10 @@ fuse-divide-subroutine\n Java Var(flag_use_divide_subroutine) Init(1)\n Call a library routine to do integer divisions\n \n+fuse-atomic-builtins\n+Java Var(flag_use_atomic_builtins) Init(0)\n+Generate code for built-in atomic operations\n+\n fbootstrap-classes\n Java Var(flag_bootstrap_classes)\n Generated should be loaded by bootstrap loader"}]}