{"sha": "a980dd9b54d1bdee4a331b307980b75857c3f9f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk4MGRkOWI1NGQxYmRlZTRhMzMxYjMwNzk4MGI3NTg1N2MzZjlmMQ==", "commit": {"author": {"name": "Hartmut Penner", "email": "hpenner@de.ibm.com", "date": "2004-02-12T10:24:16Z"}, "committer": {"name": "Hartmut Penner", "email": "hpenner@gcc.gnu.org", "date": "2004-02-12T10:24:16Z"}, "message": "* g++.dg/simd-2.C: xfail on ppc64-linux.\n\nFrom-SVN: r77700", "tree": {"sha": "40dff88f7eed6b34223ce006a1814ab0c8bab135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40dff88f7eed6b34223ce006a1814ab0c8bab135"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a980dd9b54d1bdee4a331b307980b75857c3f9f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a980dd9b54d1bdee4a331b307980b75857c3f9f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a980dd9b54d1bdee4a331b307980b75857c3f9f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a980dd9b54d1bdee4a331b307980b75857c3f9f1/comments", "author": null, "committer": null, "parents": [{"sha": "6e7c2fe3fb387616583c1fdaa9c2627f88b17ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7c2fe3fb387616583c1fdaa9c2627f88b17ec6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e7c2fe3fb387616583c1fdaa9c2627f88b17ec6"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "a0e5f7023d661321ed844ae39301e3af4412e1b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a980dd9b54d1bdee4a331b307980b75857c3f9f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a980dd9b54d1bdee4a331b307980b75857c3f9f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a980dd9b54d1bdee4a331b307980b75857c3f9f1", "patch": "@@ -1,3 +1,7 @@\n+2004-02-12  Hartmut Penner  <hpenner@de.ibm.com>\n+\n+        * g++.dg/simd-2.C: xfail on ppc64-linux.\n+\n 2004-02-11  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/456"}, {"sha": "e02b05d0617a67ae41bb3e6eae73a1ccb1627b52", "filename": "gcc/testsuite/g++.dg/eh/simd-2.C", "status": "modified", "additions": 7, "deletions": 19, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a980dd9b54d1bdee4a331b307980b75857c3f9f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a980dd9b54d1bdee4a331b307980b75857c3f9f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-2.C?ref=a980dd9b54d1bdee4a331b307980b75857c3f9f1", "patch": "@@ -2,21 +2,11 @@\n // Contributed by Aldy Hernandez (aldy@quesejoda.com).\n // { dg-options \"-O\" }\n // { dg-options \"-O -w\" { target i?86-*-* } }\n-// { dg-options \"-O -maltivec\" { target powerpc64-*-linux* } }\n-// { dg-do run }\n-// { dg-error \"\" \"PR target/12916\" { target sparc64-*-* sparcv9-*-* } 23 }\n-// { dg-error \"\" \"PR target/12916\" { target sparc-*-* } 25 }\n-#ifdef __powerpc64__\n-#include <signal.h>\n-extern void\n-exit (int);\n+// { dg-options \"-O -w -maltivec\" { target powerpc64-*-linux* } }\n+// { dg-do run { xfail \"powerpc64-*-linux*\"}  }\n+// { dg-error \"\" \"PR target/12916\" { target sparc64-*-* sparcv9-*-* } 13 }\n+// { dg-error \"\" \"PR target/12916\" { target sparc-*-* } 15 }\n \n-void \n-sig_ill_handler (int sig)\n-{\n-    exit(0);\n-}\n-#endif\n typedef int __attribute__((mode(V4SI))) vecint;\n \n vecint vecfunc (vecint beachbum)\n@@ -55,11 +45,9 @@ void f1 (void)\n \n int main ()\n {\n-#ifdef __powerpc64__\n-  /* Exit on systems without altivec.  */\n-  signal (SIGILL, sig_ill_handler);\n-  asm volatile (\".long 0x10000484\");  \n-  signal (SIGILL, SIG_DFL);\n+#if defined(__powerpc64__) && defined(__linux__)\n+  // Don't run on ppc64-linux, since not always AltiVec regs available   \n+  return -1;  \n #endif\n   f1 ();\n   return 0;"}]}