{"sha": "7d048870c1e97470af577e782c3285a827d6a49f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QwNDg4NzBjMWU5NzQ3MGFmNTc3ZTc4MmMzMjg1YTgyN2Q2YTQ5Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-04-04T07:52:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-04-04T07:52:20Z"}, "message": "re PR tree-optimization/85168 (ICE in tree-ssa-coalesce.c: SSA corruption: Unable to coalesce ssa_names which are marked as MUST COALESCE when -O2 is used)\n\n2018-04-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/85168\n\t* tree-ssa-sccvn.c (vn_reference_maybe_forwprop_address): Avoid\n\tpropagating abnormals.\n\n\t* gcc.dg/torture/pr85168.c: New testcase.\n\nFrom-SVN: r259068", "tree": {"sha": "f4172289db7d2406f2efcf2182f63138e1f804f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4172289db7d2406f2efcf2182f63138e1f804f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d048870c1e97470af577e782c3285a827d6a49f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d048870c1e97470af577e782c3285a827d6a49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d048870c1e97470af577e782c3285a827d6a49f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d048870c1e97470af577e782c3285a827d6a49f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "24d21a0bc07ee2c9b041504956834be3bba7e746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24d21a0bc07ee2c9b041504956834be3bba7e746", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24d21a0bc07ee2c9b041504956834be3bba7e746"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "1370b34f466aaa23fd98240d145a9419840bc368", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d048870c1e97470af577e782c3285a827d6a49f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d048870c1e97470af577e782c3285a827d6a49f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d048870c1e97470af577e782c3285a827d6a49f", "patch": "@@ -1,3 +1,9 @@\n+2018-04-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/85168\n+\t* tree-ssa-sccvn.c (vn_reference_maybe_forwprop_address): Avoid\n+\tpropagating abnormals.\n+\n 2018-04-04  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.md (enabled): Use yes/no for this attribute."}, {"sha": "5c72bd78387f7562a598c3f20c1c6fa77123ea70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d048870c1e97470af577e782c3285a827d6a49f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d048870c1e97470af577e782c3285a827d6a49f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d048870c1e97470af577e782c3285a827d6a49f", "patch": "@@ -1,3 +1,8 @@\n+2018-04-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/85168\n+\t* gcc.dg/torture/pr85168.c: New testcase.\n+\n 2018-04-04  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR c++/84943"}, {"sha": "cc5e6648c7e7cc3c56c088cc0cf68fd9bd10e264", "filename": "gcc/testsuite/gcc.dg/torture/pr85168.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d048870c1e97470af577e782c3285a827d6a49f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr85168.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d048870c1e97470af577e782c3285a827d6a49f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr85168.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr85168.c?ref=7d048870c1e97470af577e782c3285a827d6a49f", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target indirect_jumps } */\n+\n+typedef struct {\n+    struct {\n+\tchar a;\n+    } b;\n+} c;\n+\n+int d, f;\n+c *e;\n+\n+extern void i(void);\n+extern void sejtmp () __attribute__((returns_twice));\n+\n+void g(void)\n+{\n+  c *h = e;\n+  if (f)\n+    {\n+      i();\n+      h--;\n+      if (d)\n+\tif (h->b.a)\n+\t  i();\n+    }\n+  if (h->b.a)\n+    sejtmp();\n+  e = h;\n+}"}, {"sha": "4e5f3385f9d80da11491cc27ec4a0773d4ffab41", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d048870c1e97470af577e782c3285a827d6a49f/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d048870c1e97470af577e782c3285a827d6a49f/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=7d048870c1e97470af577e782c3285a827d6a49f", "patch": "@@ -1249,7 +1249,9 @@ vn_reference_maybe_forwprop_address (vec<vn_reference_op_s> *ops,\n \t  return true;\n \t}\n       if (!addr_base\n-\t  || TREE_CODE (addr_base) != MEM_REF)\n+\t  || TREE_CODE (addr_base) != MEM_REF\n+\t  || (TREE_CODE (TREE_OPERAND (addr_base, 0)) == SSA_NAME\n+\t      && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (TREE_OPERAND (addr_base, 0))))\n \treturn false;\n \n       off += addr_offset;\n@@ -1262,6 +1264,7 @@ vn_reference_maybe_forwprop_address (vec<vn_reference_op_s> *ops,\n       ptr = gimple_assign_rhs1 (def_stmt);\n       ptroff = gimple_assign_rhs2 (def_stmt);\n       if (TREE_CODE (ptr) != SSA_NAME\n+\t  || SSA_NAME_OCCURS_IN_ABNORMAL_PHI (ptr)\n \t  || TREE_CODE (ptroff) != INTEGER_CST)\n \treturn false;\n "}]}