{"sha": "dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ5YThmZmYxNGVkYTkwZmNhYTNhYzRiNmI2OGNlZGVkNzJhNmFmNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-05-21T08:57:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-05-21T08:57:02Z"}, "message": "Fix internal error on locally derived bit-packed array type\n\nThis is a regression present on the mainline, 11 and 10 branches,\nin the form of an ICE on a locally derived bit-packed array type.\n\ngcc/ada/\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Type>: Process\n\tthe implementation type of a packed type implemented specially.\ngcc/testsuite/\n\t* gnat.dg/derived_type7.adb, gnat.dg/derived_type7.ads: New test.", "tree": {"sha": "ba38229e447b4a18f53b1cbdf224673a4e8c1b68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba38229e447b4a18f53b1cbdf224673a4e8c1b68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5/comments", "author": null, "committer": null, "parents": [{"sha": "932198a8e1b6ab26201a265ced3a8c4802304146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/932198a8e1b6ab26201a265ced3a8c4802304146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/932198a8e1b6ab26201a265ced3a8c4802304146"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "8d3c16c624b029ce3723180448f34091fcb5edc1", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5", "patch": "@@ -2345,11 +2345,15 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t      set_nonaliased_component_on_array_type (tem);\n \t  }\n \n-\t/* If an alignment is specified, use it if valid.  But ignore it\n-\t   for the original type of packed array types.  If the alignment\n-\t   was requested with an explicit alignment clause, state so.  */\n-\tif (No (Packed_Array_Impl_Type (gnat_entity))\n-\t    && Known_Alignment (gnat_entity))\n+\t/* If this is a packed type implemented specially, then process the\n+\t   implementation type so it is elaborated in the proper scope.  */\n+\tif (Present (Packed_Array_Impl_Type (gnat_entity)))\n+\t  gnat_to_gnu_entity (Packed_Array_Impl_Type (gnat_entity), NULL_TREE,\n+\t\t\t      false);\n+\n+\t/* Otherwise, if an alignment is specified, use it if valid and, if\n+\t   the alignment was requested with an explicit clause, state so.  */\n+\telse if (Known_Alignment (gnat_entity))\n \t  {\n \t    SET_TYPE_ALIGN (tem,\n \t\t\t    validate_alignment (Alignment (gnat_entity),"}, {"sha": "61e7abaa1d77a5db3d23ee346cf0d631013a1106", "filename": "gcc/testsuite/gnat.dg/derived_type7.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type7.adb?ref=dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5", "patch": "@@ -0,0 +1,9 @@\n+package body Derived_Type7 is\n+\n+  procedure Proc (Size : Natural) is\n+    type Sar_Six_Bit_Arr is new Six_Bit_Data_Array_Type (1 .. Size);\n+  begin\n+    null;\n+  end;\n+\n+end Derived_Type7;"}, {"sha": "2b1427af3c69f9750a35571fafe4b9caeb135a16", "filename": "gcc/testsuite/gnat.dg/derived_type7.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type7.ads?ref=dd9a8fff14eda90fcaa3ac4b6b68ceded72a6af5", "patch": "@@ -0,0 +1,13 @@\n+-- { dg-do compile }\n+\n+package Derived_Type7 is\n+\n+  type Six_Bit_Data_Type is range 0 .. 63;\n+  for Six_Bit_Data_Type'Size use 6;\n+\n+  type Six_Bit_Data_Array_Type is array (Integer range <>) of Six_Bit_Data_Type;\n+  for Six_Bit_Data_Array_Type'Component_Size use 6;\n+\n+  procedure Proc (Size : Natural);\n+\n+end Derived_Type7;"}]}