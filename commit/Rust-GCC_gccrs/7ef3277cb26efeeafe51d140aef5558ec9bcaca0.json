{"sha": "7ef3277cb26efeeafe51d140aef5558ec9bcaca0", "node_id": "C_kwDOANBUbNoAKDdlZjMyNzdjYjI2ZWZlZWFmZTUxZDE0MGFlZjU1NThlYzliY2FjYTA", "commit": {"author": {"name": "Owen Avery", "email": "powerboat9.gamer@gmail.com", "date": "2023-03-14T22:52:50Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-03-15T10:23:29Z"}, "message": "Convert structs to classes\n\ngcc/rust/ChangeLog:\n\n\t* hir/tree/rust-hir-full-decls.h\n\t(struct GenericArgsBinding): Convert to class.\n\t(class GenericArgsBinding): Convert from struct.\n\t(struct TypePathFunction): See above.\n\t(class TypePathFunction): See above.\n\t(struct QualifiedPathType): See above.\n\t(class QualifiedPathType): See above.\n\t* ast/rust-ast-full-decls.h\n\t(struct WhereClause): See above.\n\t(class WhereClause): See above.\n\t(struct SelfParam): See above.\n\t(class SelfParam): See above.\n\t(struct FunctionQualifiers): See above.\n\t(class FunctionQualifiers): See above.\n\t(struct FunctionParam): See above.\n\t(class FunctionParam): See above.\n\t(struct StructField): See above.\n\t(class StructField): See above.\n\t(struct TupleField): See above.\n\t(class TupleField): See above.\n\t(struct TraitFunctionDecl): See above.\n\t(class TraitFunctionDecl): See above.\n\t(struct TraitMethodDecl): See above.\n\t(class TraitMethodDecl): See above.\n\t(struct NamedFunctionParam): See above.\n\t(class NamedFunctionParam): See above.\n\t* hir/tree/rust-hir-path.h\n\t(struct GenericArgsBinding): See above.\n\t(class GenericArgsBinding): See above.\n\t(struct TypePathFunction): See above.\n\t(class TypePathFunction): See above.\n\t(struct QualifiedPathType): See above.\n\t(class QualifiedPathType): See above.\n\t* ast/rust-item.h\n\t(struct WhereClause): See above.\n\t(class WhereClause): See above.\n\t(struct SelfParam): See above.\n\t(class SelfParam): See above.\n\t(struct FunctionQualifiers): See above.\n\t(class FunctionQualifiers): See above.\n\t(struct FunctionParam): See above.\n\t(class FunctionParam): See above.\n\t(struct StructField): See above.\n\t(class StructField): See above.\n\t(struct TupleField): See above.\n\t(class TupleField): See above.\n\t(struct TraitFunctionDecl): See above.\n\t(class TraitFunctionDecl): See above.\n\t(struct TraitMethodDecl): See above.\n\t(class TraitMethodDecl): See above.\n\t(struct NamedFunctionParam): See above.\n\t(class NamedFunctionParam): See above.\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "db89b5cf2877ce5e0190fd11f38d6384c0ca0edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db89b5cf2877ce5e0190fd11f38d6384c0ca0edc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ef3277cb26efeeafe51d140aef5558ec9bcaca0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef3277cb26efeeafe51d140aef5558ec9bcaca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ef3277cb26efeeafe51d140aef5558ec9bcaca0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef3277cb26efeeafe51d140aef5558ec9bcaca0/comments", "author": {"login": "powerboat9", "id": 7397652, "node_id": "MDQ6VXNlcjczOTc2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7397652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerboat9", "html_url": "https://github.com/powerboat9", "followers_url": "https://api.github.com/users/powerboat9/followers", "following_url": "https://api.github.com/users/powerboat9/following{/other_user}", "gists_url": "https://api.github.com/users/powerboat9/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerboat9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerboat9/subscriptions", "organizations_url": "https://api.github.com/users/powerboat9/orgs", "repos_url": "https://api.github.com/users/powerboat9/repos", "events_url": "https://api.github.com/users/powerboat9/events{/privacy}", "received_events_url": "https://api.github.com/users/powerboat9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26e4aa3cd57f9e36b7c6404fab6f0ace1e5e3576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26e4aa3cd57f9e36b7c6404fab6f0ace1e5e3576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26e4aa3cd57f9e36b7c6404fab6f0ace1e5e3576"}], "stats": {"total": 60, "additions": 24, "deletions": 36}, "files": [{"sha": "ed0d98148fb0caec352f470b457a4c978e22823f", "filename": "gcc/rust/ast/rust-ast-full-decls.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef3277cb26efeeafe51d140aef5558ec9bcaca0/gcc%2Frust%2Fast%2Frust-ast-full-decls.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef3277cb26efeeafe51d140aef5558ec9bcaca0/gcc%2Frust%2Fast%2Frust-ast-full-decls.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-full-decls.h?ref=7ef3277cb26efeeafe51d140aef5558ec9bcaca0", "patch": "@@ -163,10 +163,10 @@ class TypeParam;\n class WhereClauseItem;\n class LifetimeWhereClauseItem;\n class TypeBoundWhereClauseItem;\n-struct WhereClause;\n-struct SelfParam;\n-struct FunctionQualifiers;\n-struct FunctionParam;\n+class WhereClause;\n+class SelfParam;\n+class FunctionQualifiers;\n+class FunctionParam;\n struct Visibility;\n class Method;\n class VisItem;\n@@ -180,9 +180,9 @@ class UseDeclaration;\n class Function;\n class TypeAlias;\n class Struct;\n-struct StructField;\n+class StructField;\n class StructStruct;\n-struct TupleField;\n+class TupleField;\n class TupleStruct;\n class EnumItem;\n class EnumItemTuple;\n@@ -192,9 +192,9 @@ class Enum;\n class Union;\n class ConstantItem;\n class StaticItem;\n-struct TraitFunctionDecl;\n+class TraitFunctionDecl;\n class TraitItemFunc;\n-struct TraitMethodDecl;\n+class TraitMethodDecl;\n class TraitItemMethod;\n class TraitItemConst;\n class TraitItemType;\n@@ -205,7 +205,7 @@ class TraitImpl;\n class ExternalItem;\n class ExternalTypeItem;\n class ExternalStaticItem;\n-struct NamedFunctionParam;\n+class NamedFunctionParam;\n class ExternalFunctionItem;\n class ExternBlock;\n "}, {"sha": "80421c5bed8da002907ea66d4aaa6c0f0ecd681d", "filename": "gcc/rust/ast/rust-item.h", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef3277cb26efeeafe51d140aef5558ec9bcaca0/gcc%2Frust%2Fast%2Frust-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef3277cb26efeeafe51d140aef5558ec9bcaca0/gcc%2Frust%2Fast%2Frust-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-item.h?ref=7ef3277cb26efeeafe51d140aef5558ec9bcaca0", "patch": "@@ -315,9 +315,8 @@ class TypeBoundWhereClauseItem : public WhereClauseItem\n };\n \n // A where clause\n-struct WhereClause\n+class WhereClause\n {\n-private:\n   std::vector<std::unique_ptr<WhereClauseItem>> where_clause_items;\n   NodeId node_id;\n \n@@ -376,9 +375,8 @@ struct WhereClause\n };\n \n // A self parameter in a method\n-struct SelfParam\n+class SelfParam\n {\n-private:\n   bool has_ref;\n   bool is_mut;\n   // bool has_lifetime; // only possible if also ref\n@@ -486,9 +484,8 @@ struct SelfParam\n };\n \n // Qualifiers for function, i.e. const, unsafe, extern etc.\n-struct FunctionQualifiers\n+class FunctionQualifiers\n {\n-private:\n   AsyncConstStatus const_status;\n   bool has_unsafe;\n   bool has_extern;\n@@ -522,9 +519,8 @@ struct FunctionQualifiers\n };\n \n // A function parameter\n-struct FunctionParam\n+class FunctionParam\n {\n-private:\n   std::vector<Attribute> outer_attrs;\n   Location locus;\n   std::unique_ptr<Pattern> param_name;\n@@ -1904,9 +1900,8 @@ class Struct : public VisItem\n };\n \n // A single field in a struct\n-struct StructField\n+class StructField\n {\n-private:\n   // bool has_outer_attributes;\n   std::vector<Attribute> outer_attrs;\n \n@@ -2058,9 +2053,8 @@ class StructStruct : public Struct\n };\n \n // A single field in a tuple\n-struct TupleField\n+class TupleField\n {\n-private:\n   // bool has_outer_attributes;\n   std::vector<Attribute> outer_attrs;\n \n@@ -2788,9 +2782,8 @@ class StaticItem : public VisItem\n };\n \n // Function declaration in traits\n-struct TraitFunctionDecl\n+class TraitFunctionDecl\n {\n-private:\n   // TODO: delete and replace with Function decl item? no as no body in this.\n   FunctionQualifiers qualifiers;\n   Identifier function_name;\n@@ -2997,9 +2990,8 @@ class TraitItemFunc : public TraitItem\n };\n \n // Method declaration within traits\n-struct TraitMethodDecl\n+class TraitMethodDecl\n {\n-private:\n   // TODO: delete and replace with Function decl item? no as no body.\n   FunctionQualifiers qualifiers;\n   Identifier function_name;\n@@ -4094,9 +4086,8 @@ class ExternalStaticItem : public ExternalItem\n };\n \n // A named function parameter used in external functions\n-struct NamedFunctionParam\n+class NamedFunctionParam\n {\n-private:\n   // bool has_name;   // otherwise is _\n   std::string name;\n "}, {"sha": "5e35666250a9d84a6c269411916c9754d40a57c7", "filename": "gcc/rust/hir/tree/rust-hir-full-decls.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef3277cb26efeeafe51d140aef5558ec9bcaca0/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-decls.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef3277cb26efeeafe51d140aef5558ec9bcaca0/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-decls.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-decls.h?ref=7ef3277cb26efeeafe51d140aef5558ec9bcaca0", "patch": "@@ -45,17 +45,17 @@ class PathExpr;\n \n // rust-path.h\n class PathIdentSegment;\n-struct GenericArgsBinding;\n+class GenericArgsBinding;\n class GenericArgs;\n class PathExprSegment;\n class PathPattern;\n class PathInExpression;\n class TypePathSegment;\n class TypePathSegmentGeneric;\n-struct TypePathFunction;\n+class TypePathFunction;\n class TypePathSegmentFunction;\n class TypePath;\n-struct QualifiedPathType;\n+class QualifiedPathType;\n class QualifiedPathInExpression;\n class QualifiedPathInType;\n "}, {"sha": "88d0ff93ea335fd08bd65b98ad29ef04fe03850b", "filename": "gcc/rust/hir/tree/rust-hir-path.h", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef3277cb26efeeafe51d140aef5558ec9bcaca0/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef3277cb26efeeafe51d140aef5558ec9bcaca0/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-path.h?ref=7ef3277cb26efeeafe51d140aef5558ec9bcaca0", "patch": "@@ -53,9 +53,8 @@ class PathIdentSegment\n };\n \n // A binding of an identifier to a type used in generic arguments in paths\n-struct GenericArgsBinding\n+class GenericArgsBinding\n {\n-private:\n   Identifier identifier;\n   std::unique_ptr<Type> type;\n \n@@ -547,9 +546,8 @@ class TypePathSegmentGeneric : public TypePathSegment\n };\n \n // A function as represented in a type path\n-struct TypePathFunction\n+class TypePathFunction\n {\n-private:\n   std::vector<std::unique_ptr<Type> > inputs;\n   std::unique_ptr<Type> return_type;\n \n@@ -761,9 +759,8 @@ class TypePath : public TypeNoBounds\n   }\n };\n \n-struct QualifiedPathType\n+class QualifiedPathType\n {\n-private:\n   std::unique_ptr<Type> type;\n   std::unique_ptr<TypePath> trait;\n   Location locus;"}]}