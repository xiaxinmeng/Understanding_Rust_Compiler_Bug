{"sha": "10a0275d927e16d006d9e93e03a63ec949a7afc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBhMDI3NWQ5MjdlMTZkMDA2ZDllOTNlMDNhNjNlYzk0OWE3YWZjOA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-14T23:45:50Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-14T23:45:50Z"}, "message": "Fix comparison of string and interface types.\n\nFrom-SVN: r167826", "tree": {"sha": "6797210640946af34709454dbe25ca7c13072b67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6797210640946af34709454dbe25ca7c13072b67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10a0275d927e16d006d9e93e03a63ec949a7afc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10a0275d927e16d006d9e93e03a63ec949a7afc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10a0275d927e16d006d9e93e03a63ec949a7afc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10a0275d927e16d006d9e93e03a63ec949a7afc8/comments", "author": null, "committer": null, "parents": [{"sha": "002d4675481348987b4f7191e61e12e4e7ac9b4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002d4675481348987b4f7191e61e12e4e7ac9b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/002d4675481348987b4f7191e61e12e4e7ac9b4e"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "2a8d80236eff814a48f97593900d5f61a4c137b0", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10a0275d927e16d006d9e93e03a63ec949a7afc8/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10a0275d927e16d006d9e93e03a63ec949a7afc8/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=10a0275d927e16d006d9e93e03a63ec949a7afc8", "patch": "@@ -5938,9 +5938,8 @@ Expression::comparison_tree(Translate_context* context, Operator op,\n       gcc_unreachable();\n     }\n \n-  if (left_type->is_string_type())\n+  if (left_type->is_string_type() && right_type->is_string_type())\n     {\n-      gcc_assert(right_type->is_string_type());\n       tree string_type = Type::make_string_type()->get_tree(context->gogo());\n       static tree string_compare_decl;\n       left_tree = Gogo::call_builtin(&string_compare_decl,\n@@ -5954,13 +5953,12 @@ Expression::comparison_tree(Translate_context* context, Operator op,\n \t\t\t\t     right_tree);\n       right_tree = build_int_cst_type(integer_type_node, 0);\n     }\n-\n-  if ((left_type->interface_type() != NULL\n-       && right_type->interface_type() == NULL\n-       && !right_type->is_nil_type())\n-      || (left_type->interface_type() == NULL\n-\t  && !left_type->is_nil_type()\n-\t  && right_type->interface_type() != NULL))\n+  else if ((left_type->interface_type() != NULL\n+\t    && right_type->interface_type() == NULL\n+\t    && !right_type->is_nil_type())\n+\t   || (left_type->interface_type() == NULL\n+\t       && !left_type->is_nil_type()\n+\t       && right_type->interface_type() != NULL))\n     {\n       // Comparing an interface value to a non-interface value.\n       if (left_type->interface_type() == NULL)"}]}