{"sha": "d99dacc9484b29b9223526264bc055905c31b08c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5ZGFjYzk0ODRiMjliOTIyMzUyNjI2NGJjMDU1OTA1YzMxYjA4Yw==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2015-07-27T15:02:55Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2015-07-27T15:02:55Z"}, "message": "[PATCH][AArch64] Improve spill code - swap order in shl pattern\n\ngcc/\n\n\t* config/aarch64/aarch64.md (aarch64_ashl_sisd_or_int_<mode>3):\n\tPlace integer variant first.\n\nFrom-SVN: r226247", "tree": {"sha": "e094bd2f12ea6a2fedaaa8362c0885538ca47a59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e094bd2f12ea6a2fedaaa8362c0885538ca47a59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d99dacc9484b29b9223526264bc055905c31b08c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99dacc9484b29b9223526264bc055905c31b08c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d99dacc9484b29b9223526264bc055905c31b08c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99dacc9484b29b9223526264bc055905c31b08c/comments", "author": null, "committer": null, "parents": [{"sha": "02bcdc56ee26b35137c2c5be74915c6461c9b4cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02bcdc56ee26b35137c2c5be74915c6461c9b4cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02bcdc56ee26b35137c2c5be74915c6461c9b4cc"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "00b9b99fa9de629cda4cdcc37f6ae5e0d9f3e8fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99dacc9484b29b9223526264bc055905c31b08c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99dacc9484b29b9223526264bc055905c31b08c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d99dacc9484b29b9223526264bc055905c31b08c", "patch": "@@ -1,3 +1,8 @@\n+2015-07-27  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64.md (aarch64_ashl_sisd_or_int_<mode>3):\n+\tPlace integer variant first.\n+\n 2015-07-27  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* config/arm/arm-arches.def: Add \"armv6kz\". Replace 6ZK with 6KZ"}, {"sha": "65e4c66264c474f29cab7b34a929b6363516d4e8", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99dacc9484b29b9223526264bc055905c31b08c/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99dacc9484b29b9223526264bc055905c31b08c/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=d99dacc9484b29b9223526264bc055905c31b08c", "patch": "@@ -3523,17 +3523,17 @@\n \n ;; Logical left shift using SISD or Integer instruction\n (define_insn \"*aarch64_ashl_sisd_or_int_<mode>3\"\n-  [(set (match_operand:GPI 0 \"register_operand\" \"=w,w,r\")\n+  [(set (match_operand:GPI 0 \"register_operand\" \"=r,w,w\")\n         (ashift:GPI\n-          (match_operand:GPI 1 \"register_operand\" \"w,w,r\")\n-          (match_operand:QI 2 \"aarch64_reg_or_shift_imm_<mode>\" \"Us<cmode>,w,rUs<cmode>\")))]\n+          (match_operand:GPI 1 \"register_operand\" \"r,w,w\")\n+          (match_operand:QI 2 \"aarch64_reg_or_shift_imm_<mode>\" \"rUs<cmode>,Us<cmode>,w\")))]\n   \"\"\n   \"@\n+   lsl\\t%<w>0, %<w>1, %<w>2\n    shl\\t%<rtn>0<vas>, %<rtn>1<vas>, %2\n-   ushl\\t%<rtn>0<vas>, %<rtn>1<vas>, %<rtn>2<vas>\n-   lsl\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"simd\" \"yes,yes,no\")\n-   (set_attr \"type\" \"neon_shift_imm<q>, neon_shift_reg<q>,shift_reg\")]\n+   ushl\\t%<rtn>0<vas>, %<rtn>1<vas>, %<rtn>2<vas>\"\n+  [(set_attr \"simd\" \"no,yes,yes\")\n+   (set_attr \"type\" \"shift_reg,neon_shift_imm<q>, neon_shift_reg<q>\")]\n )\n \n ;; Logical right shift using SISD or Integer instruction"}]}