{"sha": "e89f93f66a38c13fc856a88d2929800c4f36b9d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg5ZjkzZjY2YTM4YzEzZmM4NTZhODhkMjkyOTgwMGM0ZjM2YjlkMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-09-01T19:09:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-09-01T19:09:02Z"}, "message": "re PR target/54436 (Compiling some regular C++ code gives assembler '700415 shortened to 255' warning)\n\n\tPR target/54436\n\t* config/i386/i386.md (*mov<mode>_insv_1_rex64, *movsi_insv_1): If\n\toperands[1] is CONST_INT_P, convert it to QImode before printing.\n\n\t* gcc.dg/torture/pr54436.c: New test.\n\nFrom-SVN: r190849", "tree": {"sha": "4b1a87a00d117046f7724c58b018d003fbdccbd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b1a87a00d117046f7724c58b018d003fbdccbd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e89f93f66a38c13fc856a88d2929800c4f36b9d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e89f93f66a38c13fc856a88d2929800c4f36b9d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e89f93f66a38c13fc856a88d2929800c4f36b9d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e89f93f66a38c13fc856a88d2929800c4f36b9d3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcf8468f1cad977c1f82aa008aecc74f5c858161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcf8468f1cad977c1f82aa008aecc74f5c858161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcf8468f1cad977c1f82aa008aecc74f5c858161"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "c9790e8af99b2ecd22047748ffa9ca895f175d9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e89f93f66a38c13fc856a88d2929800c4f36b9d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e89f93f66a38c13fc856a88d2929800c4f36b9d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e89f93f66a38c13fc856a88d2929800c4f36b9d3", "patch": "@@ -1,3 +1,9 @@\n+2012-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/54436\n+\t* config/i386/i386.md (*mov<mode>_insv_1_rex64, *movsi_insv_1): If\n+\toperands[1] is CONST_INT_P, convert it to QImode before printing.\n+\n 2012-09-01  Andrew Pinski  <apinski@cavium.com>\n \n \t* simplify-rtx.c (simplify_unary_operation_1 <case TRUNCATE>):"}, {"sha": "16cee7a9dbe3a5a9a532c0522ddf043f09b30e8f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e89f93f66a38c13fc856a88d2929800c4f36b9d3/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e89f93f66a38c13fc856a88d2929800c4f36b9d3/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e89f93f66a38c13fc856a88d2929800c4f36b9d3", "patch": "@@ -2690,7 +2690,11 @@\n \t\t\t     (const_int 8))\n \t(match_operand:SWI48x 1 \"nonmemory_operand\" \"Qn\"))]\n   \"TARGET_64BIT\"\n-  \"mov{b}\\t{%b1, %h0|%h0, %b1}\"\n+{\n+  if (CONST_INT_P (operands[1]))\n+    operands[1] = simplify_gen_subreg (QImode, operands[1], <MODE>mode, 0);\n+  return \"mov{b}\\t{%b1, %h0|%h0, %b1}\";\n+}\n   [(set_attr \"type\" \"imov\")\n    (set_attr \"mode\" \"QI\")])\n \n@@ -2700,7 +2704,11 @@\n \t\t\t (const_int 8))\n \t(match_operand:SI 1 \"general_operand\" \"Qmn\"))]\n   \"!TARGET_64BIT\"\n-  \"mov{b}\\t{%b1, %h0|%h0, %b1}\"\n+{\n+  if (CONST_INT_P (operands[1]))\n+    operands[1] = simplify_gen_subreg (QImode, operands[1], SImode, 0);\n+  return \"mov{b}\\t{%b1, %h0|%h0, %b1}\";\n+}\n   [(set_attr \"type\" \"imov\")\n    (set_attr \"mode\" \"QI\")])\n "}, {"sha": "6c433056ba449bfd59c1b94e6171354f6bd0fcd4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e89f93f66a38c13fc856a88d2929800c4f36b9d3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e89f93f66a38c13fc856a88d2929800c4f36b9d3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e89f93f66a38c13fc856a88d2929800c4f36b9d3", "patch": "@@ -1,3 +1,8 @@\n+2012-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/54436\n+\t* gcc.dg/torture/pr54436.c: New test.\n+\n 2012-09-01  Andrew Pinski  <apinski@cavium.com>\n \n \t* gcc.target/mips/truncate-8.c: New testcase."}, {"sha": "4bce324090665ee129ba414f8f4ab9f3b5f44c19", "filename": "gcc/testsuite/gcc.dg/torture/pr54436.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e89f93f66a38c13fc856a88d2929800c4f36b9d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54436.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e89f93f66a38c13fc856a88d2929800c4f36b9d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54436.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54436.c?ref=e89f93f66a38c13fc856a88d2929800c4f36b9d3", "patch": "@@ -0,0 +1,38 @@\n+/* PR target/54436 */\n+/* { dg-do assemble } */\n+\n+#if __SIZEOF_SHORT__ == 2 && __SIZEOF_LONG_LONG__ == 8\n+static inline unsigned short\n+baz (unsigned short *x)\n+{\n+  union U { unsigned short a; unsigned char b[2]; } u = { *x };\n+  u.b[0] = ((u.b[0] * 0x0802ULL & 0x22110ULL)\n+\t    | (u.b[0] * 0x8020ULL & 0x88440ULL)) * 0x10101ULL >> 16;\n+  u.b[1] = ((u.b[1] * 0x0802ULL & 0x22110ULL)\n+\t    | (u.b[1] * 0x8020ULL & 0x88440ULL)) * 0x10101ULL >> 16;\n+  unsigned char t = u.b[0];\n+  u.b[0] = u.b[1];\n+  u.b[1] = t;\n+  return u.a;\n+}\n+\n+static inline unsigned long long\n+bar (unsigned long long *x)\n+{\n+  union U { unsigned long long a; unsigned short b[4]; } u = { *x };\n+  u.b[0] = baz (&u.b[0]);\n+  return u.a;\n+}\n+\n+void\n+foo (void)\n+{\n+  unsigned long long l = -1ULL;\n+  __asm volatile (\"\" : : \"r\" (bar (&l)));\n+}\n+#else\n+void\n+foo (void)\n+{\n+}\n+#endif"}]}