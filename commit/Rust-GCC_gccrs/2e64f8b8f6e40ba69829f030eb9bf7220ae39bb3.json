{"sha": "2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU2NGY4YjhmNmU0MGJhNjk4MjlmMDMwZWI5YmY3MjIwYWUzOWJiMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-03-14T20:12:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-03-14T20:12:16Z"}, "message": "re PR middle-end/38878 (gcc.dg/tree-ssa/foldaddr-1.c XFAILed)\n\n\tPR middle-end/38878\n\t* fold-const.c (fold_binary_loc) <case EQ_EXPR, NE_EXPR>: Add\n\tSTRIP_NOPS on arg0 and arg1.  When optimizing X +- C == X\n\tand C - X == X also strip nops from +/-/p+ operand.\n\tWhen optimizing -X == C, fold C to arg0's type.\n\n\t* gcc.dg/tree-ssa/foldaddr-1.c: Remove xfail.\n\nFrom-SVN: r170957", "tree": {"sha": "616419a240f8d7d0dc79298ff66f5f5b9b80dfc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/616419a240f8d7d0dc79298ff66f5f5b9b80dfc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de888d9027079b9a38b068a4c58a8563a4a4d600", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de888d9027079b9a38b068a4c58a8563a4a4d600", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de888d9027079b9a38b068a4c58a8563a4a4d600"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "d437a6036c61a9a5dd50c117fa5924738d6a4100", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3", "patch": "@@ -1,5 +1,11 @@\n 2011-03-14  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/38878\n+\t* fold-const.c (fold_binary_loc) <case EQ_EXPR, NE_EXPR>: Add\n+\tSTRIP_NOPS on arg0 and arg1.  When optimizing X +- C == X\n+\tand C - X == X also strip nops from +/-/p+ operand.\n+\tWhen optimizing -X == C, fold C to arg0's type.\n+\n \tPR debug/47946\n \t* dwarf2out.c (add_bit_offset_attribute): If bit_offset is negative,\n \temit it as add_AT_int instead of add_AT_unsigned."}, {"sha": "354aa4f68c62a26dbbf8a2fa0dba38a9db61b03a", "filename": "gcc/fold-const.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3", "patch": "@@ -12112,6 +12112,9 @@ fold_binary_loc (location_t loc,\n \n     case EQ_EXPR:\n     case NE_EXPR:\n+      STRIP_NOPS (arg0);\n+      STRIP_NOPS (arg1);\n+\n       tem = fold_comparison (loc, code, type, op0, op1);\n       if (tem != NULL_TREE)\n \treturn tem;\n@@ -12194,7 +12197,8 @@ fold_binary_loc (location_t loc,\n       /* Similarly for a NEGATE_EXPR.  */\n       if (TREE_CODE (arg0) == NEGATE_EXPR\n \t  && TREE_CODE (arg1) == INTEGER_CST\n-\t  && 0 != (tem = negate_expr (arg1))\n+\t  && 0 != (tem = negate_expr (fold_convert_loc (loc, TREE_TYPE (arg0),\n+\t\t\t\t\t\t\targ1)))\n \t  && TREE_CODE (tem) == INTEGER_CST\n \t  && !TREE_OVERFLOW (tem))\n \treturn fold_build2_loc (loc, code, type, TREE_OPERAND (arg0, 0), tem);\n@@ -12214,7 +12218,9 @@ fold_binary_loc (location_t loc,\n       if ((TREE_CODE (arg0) == PLUS_EXPR\n \t   || TREE_CODE (arg0) == POINTER_PLUS_EXPR\n \t   || TREE_CODE (arg0) == MINUS_EXPR)\n-\t  && operand_equal_p (TREE_OPERAND (arg0, 0), arg1, 0)\n+\t  && operand_equal_p (tree_strip_nop_conversions (TREE_OPERAND (arg0,\n+\t\t\t\t\t\t\t\t\t0)),\n+\t\t\t      arg1, 0)\n \t  && (INTEGRAL_TYPE_P (TREE_TYPE (arg0))\n \t      || POINTER_TYPE_P (TREE_TYPE (arg0))))\n \t{\n@@ -12230,7 +12236,9 @@ fold_binary_loc (location_t loc,\n       /* Transform comparisons of the form C - X CMP X if C % 2 == 1.  */\n       if (TREE_CODE (arg0) == MINUS_EXPR\n \t  && TREE_CODE (TREE_OPERAND (arg0, 0)) == INTEGER_CST\n-\t  && operand_equal_p (TREE_OPERAND (arg0, 1), arg1, 0)\n+\t  && operand_equal_p (tree_strip_nop_conversions (TREE_OPERAND (arg0,\n+\t\t\t\t\t\t\t\t\t1)),\n+\t\t\t      arg1, 0)\n \t  && (TREE_INT_CST_LOW (TREE_OPERAND (arg0, 0)) & 1) == 1)\n \t{\n \t  return omit_two_operands_loc (loc, type,"}, {"sha": "4c1bea9595ed4a74ad485413c3e3804857069f76", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3", "patch": "@@ -1,3 +1,8 @@\n+2011-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/38878\n+\t* gcc.dg/tree-ssa/foldaddr-1.c: Remove xfail.\n+\n 2011-03-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/sse4_1-floor-vec.c: New test."}, {"sha": "d74022e4b52b15ce079baa5c1e8face0f27d1846", "filename": "gcc/testsuite/gcc.dg/tree-ssa/foldaddr-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldaddr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldaddr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldaddr-1.c?ref=2e64f8b8f6e40ba69829f030eb9bf7220ae39bb3", "patch": "@@ -11,6 +11,6 @@ int foo(char *b)\n /* Folding should have determined that the two addresses were\n    not identical and thus collapsed the function into a trivial\n    \"return 0\".  */\n-/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"original\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"original\" } } */\n /* { dg-final { cleanup-tree-dump \"original\" } } */\n "}]}