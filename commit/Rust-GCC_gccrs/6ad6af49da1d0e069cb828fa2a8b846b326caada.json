{"sha": "6ad6af49da1d0e069cb828fa2a8b846b326caada", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFkNmFmNDlkYTFkMGUwNjljYjgyOGZhMmE4Yjg0NmIzMjZjYWFkYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-05-31T20:36:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-05-31T20:36:18Z"}, "message": "re PR c++/66320 (ICE: in cxx_eval_constant_expression, at cp/constexpr.c:3524)\n\n\tPR c++/66320\n\t* constexpr.c (cxx_eval_constant_expression): Treat a placeholder\n\twith the wrong type as non-constant.\n\nFrom-SVN: r223901", "tree": {"sha": "46fdad37f6099493987210331c1098ff40ec7be7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46fdad37f6099493987210331c1098ff40ec7be7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ad6af49da1d0e069cb828fa2a8b846b326caada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad6af49da1d0e069cb828fa2a8b846b326caada", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad6af49da1d0e069cb828fa2a8b846b326caada", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad6af49da1d0e069cb828fa2a8b846b326caada/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce8cddc1b55feef20e7d8f55c742b775aa23aea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce8cddc1b55feef20e7d8f55c742b775aa23aea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce8cddc1b55feef20e7d8f55c742b775aa23aea9"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "5029f8320b910f94246a45a16ec439ff8452abde", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad6af49da1d0e069cb828fa2a8b846b326caada/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad6af49da1d0e069cb828fa2a8b846b326caada/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6ad6af49da1d0e069cb828fa2a8b846b326caada", "patch": "@@ -1,3 +1,9 @@\n+2015-05-31  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/66320\n+\t* constexpr.c (cxx_eval_constant_expression): Treat a placeholder\n+\twith the wrong type as non-constant.\n+\n 2015-05-27  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (check_redeclaration_exception_specification): Depend on"}, {"sha": "f343ea7eae0a06fa2450ac0a379c376af2ac31c6", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad6af49da1d0e069cb828fa2a8b846b326caada/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad6af49da1d0e069cb828fa2a8b846b326caada/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=6ad6af49da1d0e069cb828fa2a8b846b326caada", "patch": "@@ -3458,7 +3458,9 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n       break;\n \n     case PLACEHOLDER_EXPR:\n-      if (!ctx || !ctx->ctor || (lval && !ctx->object))\n+      if (!ctx || !ctx->ctor || (lval && !ctx->object)\n+\t  || !(same_type_ignoring_top_level_qualifiers_p\n+\t       (TREE_TYPE (t), TREE_TYPE (ctx->ctor))))\n \t{\n \t  /* A placeholder without a referent.  We can get here when\n \t     checking whether NSDMIs are noexcept, or in massage_init_elt;\n@@ -3473,8 +3475,6 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t     use ctx->object unconditionally, but using ctx->ctor when we\n \t     can is a minor optimization.  */\n \t  tree ctor = lval ? ctx->object : ctx->ctor;\n-\t  gcc_assert (same_type_ignoring_top_level_qualifiers_p\n-\t\t      (TREE_TYPE (t), TREE_TYPE (ctor)));\n \t  return cxx_eval_constant_expression\n \t    (ctx, ctor, lval,\n \t     non_constant_p, overflow_p);"}, {"sha": "29942b07b8a65957feb23fcb46a5c73e076dbfe4", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi11.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad6af49da1d0e069cb828fa2a8b846b326caada/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad6af49da1d0e069cb828fa2a8b846b326caada/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi11.C?ref=6ad6af49da1d0e069cb828fa2a8b846b326caada", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/66320\n+// { dg-do compile { target c++11 } }\n+\n+class A\n+{\n+  virtual int m_fn1 ();\n+};\n+class B\n+{\n+public:\n+  B (int);\n+};\n+class D : B\n+{\n+  struct C\n+  {\n+    A a;\n+    A b = a;\n+  };\n+  D (int *);\n+  C _channels;\n+};\n+D::D (int *) : B (0) {}"}]}