{"sha": "3a5395a311b5fff0b87edf3eeef99cff9f0d4354", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E1Mzk1YTMxMWI1ZmZmMGI4N2VkZjNlZWVmOTljZmY5ZjBkNDM1NA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-09-02T23:44:04Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-09-02T23:44:04Z"}, "message": "gjavah.c (decode_signature_piece): Emit \"::\" in JArray<>.\n\n\t* gjavah.c (decode_signature_piece): Emit \"::\" in JArray<>.\n\tHandle nested arrays, like `[[I'.\n\nFrom-SVN: r29067", "tree": {"sha": "06b3fd05ead2741160cf19f4556e115de5541464", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06b3fd05ead2741160cf19f4556e115de5541464"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a5395a311b5fff0b87edf3eeef99cff9f0d4354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5395a311b5fff0b87edf3eeef99cff9f0d4354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a5395a311b5fff0b87edf3eeef99cff9f0d4354", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5395a311b5fff0b87edf3eeef99cff9f0d4354/comments", "author": null, "committer": null, "parents": [{"sha": "ad7342be69761f32de99198fd8461cbcc4ff884e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7342be69761f32de99198fd8461cbcc4ff884e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad7342be69761f32de99198fd8461cbcc4ff884e"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "c49c91931d4b813998bdd0dfcb51a3393998bd8e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a5395a311b5fff0b87edf3eeef99cff9f0d4354/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a5395a311b5fff0b87edf3eeef99cff9f0d4354/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=3a5395a311b5fff0b87edf3eeef99cff9f0d4354", "patch": "@@ -1,3 +1,8 @@\n+1999-09-02  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* gjavah.c (decode_signature_piece): Emit \"::\" in JArray<>.\n+\tHandle nested arrays, like `[[I'.\n+\n 1999-09-02  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* class.c (finish_class): Remove unused parameter, all callers"}, {"sha": "1fd8493188095fc4fe7086c2875b7ca22d250a4d", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a5395a311b5fff0b87edf3eeef99cff9f0d4354/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a5395a311b5fff0b87edf3eeef99cff9f0d4354/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=3a5395a311b5fff0b87edf3eeef99cff9f0d4354", "patch": "@@ -695,10 +695,13 @@ decode_signature_piece (stream, signature, limit, need_space)\n      int *need_space;\n {\n   const char *ctype;\n+  int array_depth = 0;\n \n   switch (signature[0])\n     {\n     case '[':\n+      /* More spaghetti.  */\n+    array_loop:\n       for (signature++; (signature < limit\n \t\t\t && *signature >= '0'\n \t\t\t && *signature <= '9'); signature++)\n@@ -713,13 +716,17 @@ decode_signature_piece (stream, signature, limit, need_space)\n \tcase 'S': ctype = \"jshortArray\";  goto printit;\n \tcase 'J': ctype = \"jlongArray\";  goto printit;\n \tcase 'Z': ctype = \"jbooleanArray\";  goto printit;\n-\tcase '[': ctype = \"jobjectArray\"; goto printit;\n+\tcase '[':\n+\t  /* We have a nested array.  */\n+\t  ++array_depth;\n+\t  fputs (\"JArray<\", stream);\n+\t  goto array_loop;\n+\n \tcase 'L':\n-\t  /* We have to generate a reference to JArray here,\n-\t     so that our output matches what the compiler\n-\t     does.  */\n+\t  /* We have to generate a reference to JArray here, so that\n+\t     our output matches what the compiler does.  */\n \t  ++signature;\n-\t  fputs (\"JArray<\", stream);\n+\t  fputs (\"JArray<::\", stream);\n \t  while (signature < limit && *signature != ';')\n \t    {\n \t      int ch = UTF8_GET (signature, limit);\n@@ -781,6 +788,9 @@ decode_signature_piece (stream, signature, limit, need_space)\n       break;\n     }\n \n+  while (array_depth-- > 0)\n+    fputs (\"> *\", stream);\n+\n   return signature;\n }\n "}]}