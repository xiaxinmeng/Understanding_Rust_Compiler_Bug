{"sha": "9954e17f70b8212a51603332d6c15991b7ada434", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk1NGUxN2Y3MGI4MjEyYTUxNjAzMzMyZDZjMTU5OTFiN2FkYTQzNA==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2012-02-20T22:05:08Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2012-02-20T22:05:08Z"}, "message": "re PR target/52238 (-mms-bitfields: __attribute__ ((aligned (n))) ignored for struct members)\n\n\tPR target/52238\n\t* stor-layout.c (place_field): Handle desired_align for\n\tms-bitfields, too.\n\n\t* gcc.dg/bf-ms-layout-3.c: New testcase.\n\nFrom-SVN: r184409", "tree": {"sha": "76fcb1843cfb01eb15783e1bd2edaeb026e72dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76fcb1843cfb01eb15783e1bd2edaeb026e72dcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9954e17f70b8212a51603332d6c15991b7ada434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9954e17f70b8212a51603332d6c15991b7ada434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9954e17f70b8212a51603332d6c15991b7ada434", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9954e17f70b8212a51603332d6c15991b7ada434/comments", "author": null, "committer": null, "parents": [{"sha": "d74703744533a360a30ed5d62a6174072fb3bdf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74703744533a360a30ed5d62a6174072fb3bdf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d74703744533a360a30ed5d62a6174072fb3bdf9"}], "stats": {"total": 73, "additions": 67, "deletions": 6}, "files": [{"sha": "c579214456a9d5c2b389735776b6ec4d70452a1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9954e17f70b8212a51603332d6c15991b7ada434/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9954e17f70b8212a51603332d6c15991b7ada434/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9954e17f70b8212a51603332d6c15991b7ada434", "patch": "@@ -1,3 +1,9 @@\n+2012-02-20  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR target/52238\n+\t* stor-layout.c (place_field): Handle desired_align for\n+\tms-bitfields, too.\n+\n 2012-02-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/52298"}, {"sha": "a1ac0008c75464e74729ffefadf876d4a4c7a957", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9954e17f70b8212a51603332d6c15991b7ada434/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9954e17f70b8212a51603332d6c15991b7ada434/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=9954e17f70b8212a51603332d6c15991b7ada434", "patch": "@@ -1141,15 +1141,14 @@ place_field (record_layout_info rli, tree field)\n     }\n \n   /* Does this field automatically have alignment it needs by virtue\n-     of the fields that precede it and the record's own alignment?\n-     We already align ms_struct fields, so don't re-align them.  */\n-  if (known_align < desired_align\n-      && !targetm.ms_bitfield_layout_p (rli->t))\n+     of the fields that precede it and the record's own alignment?  */\n+  if (known_align < desired_align)\n     {\n       /* No, we need to skip space before this field.\n \t Bump the cumulative size to multiple of field alignment.  */\n \n-      if (DECL_SOURCE_LOCATION (field) != BUILTINS_LOCATION)\n+      if (!targetm.ms_bitfield_layout_p (rli->t)\n+          && DECL_SOURCE_LOCATION (field) != BUILTINS_LOCATION)\n \twarning (OPT_Wpadded, \"padding struct to align %q+D\", field);\n \n       /* If the alignment is still within offset_align, just align\n@@ -1171,7 +1170,8 @@ place_field (record_layout_info rli, tree field)\n \n       if (! TREE_CONSTANT (rli->offset))\n \trli->offset_align = desired_align;\n-\n+      if (targetm.ms_bitfield_layout_p (rli->t))\n+\trli->prev_field = NULL;\n     }\n \n   /* Handle compatibility with PCC.  Note that if the record has any"}, {"sha": "df818afcaebc9fb63dd5839facba56f9cd02e5f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9954e17f70b8212a51603332d6c15991b7ada434/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9954e17f70b8212a51603332d6c15991b7ada434/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9954e17f70b8212a51603332d6c15991b7ada434", "patch": "@@ -1,3 +1,7 @@\n+2012-02-20  Kai Tietz  <ktietz@redhat.com>\n+\n+\t* gcc.dg/bf-ms-layout-3.c: New testcase.\n+\n 2012-02-20  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR testsuite/52229"}, {"sha": "9abb9dc2d06d4107783596ec72512c53ba8164d4", "filename": "gcc/testsuite/gcc.dg/bf-ms-layout-3.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9954e17f70b8212a51603332d6c15991b7ada434/gcc%2Ftestsuite%2Fgcc.dg%2Fbf-ms-layout-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9954e17f70b8212a51603332d6c15991b7ada434/gcc%2Ftestsuite%2Fgcc.dg%2Fbf-ms-layout-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbf-ms-layout-3.c?ref=9954e17f70b8212a51603332d6c15991b7ada434", "patch": "@@ -0,0 +1,51 @@\n+/* Test for MS bitfield layout */\n+/* { dg-do run { target *-*-interix* *-*-mingw* *-*-cygwin* i?86-*-* x86_64-*-* } } */\n+\n+extern void abort();\n+\n+struct s1_t {\n+    char a;\n+    char b __attribute__ ((aligned (16)));\n+} __attribute__ ((ms_struct));\n+struct s1_t s1;\n+\n+struct s2_t {\n+  char a;\n+  char b;\n+} __attribute__ ((ms_struct));\n+struct s2_t s2;\n+\n+struct s3_t {\n+  char a : 6;\n+  char b __attribute__ ((aligned (16)));\n+} __attribute__ ((ms_struct));\n+struct s3_t s3;\n+\n+struct s4_t {\n+  char a : 6;\n+  char b __attribute__ ((aligned (2)));\n+} __attribute__ ((ms_struct));\n+struct s4_t s4;\n+\n+struct s5_t {\n+  char a : 6;\n+  char b __attribute__ ((aligned (1)));\n+} __attribute__ ((ms_struct));\n+struct s5_t s5;\n+\n+__PTRDIFF_TYPE__ offs (const void *a, const void *b)\n+{\n+  return (__PTRDIFF_TYPE__) ((const char*)a  - (const char*)b);\n+}\n+\n+int main()\n+{\n+  if (offs (&s1.b, &s1) != 16\n+      || offs (&s2.b, &s2) != 1\n+      || offs (&s3.b, &s3) != 16\n+      || offs (&s4.b, &s4) != 2\n+      || offs (&s5.b, &s5) != 1)\n+    abort ();\n+  return 0;\n+}\n+"}]}