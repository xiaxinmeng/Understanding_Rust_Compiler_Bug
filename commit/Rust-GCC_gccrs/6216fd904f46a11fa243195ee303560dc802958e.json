{"sha": "6216fd904f46a11fa243195ee303560dc802958e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIxNmZkOTA0ZjQ2YTExZmEyNDMxOTVlZTMwMzU2MGRjODAyOTU4ZQ==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2017-11-08T15:36:34Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2017-11-08T15:36:34Z"}, "message": "[AArch64] Simplify aarch64_can_eliminate\n\nSimplify aarch64_can_eliminate - if we need a frame pointer, we must\neliminate to HARD_FRAME_POINTER_REGNUM.  Rather than hardcoding all\ncombinations from the ELIMINABLE_REGS list, just do the correct check.\n\n    gcc/\n\t* config/aarch64/aarch64.c (aarch64_can_eliminate): Simplify logic.\n\nFrom-SVN: r254534", "tree": {"sha": "5042e527d2dd7e17df0bf83129d5005d43d2cc8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5042e527d2dd7e17df0bf83129d5005d43d2cc8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6216fd904f46a11fa243195ee303560dc802958e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6216fd904f46a11fa243195ee303560dc802958e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6216fd904f46a11fa243195ee303560dc802958e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6216fd904f46a11fa243195ee303560dc802958e/comments", "author": null, "committer": null, "parents": [{"sha": "7040939b9e2cbd084e6dbe015ee6cd2761aacf46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7040939b9e2cbd084e6dbe015ee6cd2761aacf46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7040939b9e2cbd084e6dbe015ee6cd2761aacf46"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "e546a12d09ff1158d06e720e5a886458eb648f34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6216fd904f46a11fa243195ee303560dc802958e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6216fd904f46a11fa243195ee303560dc802958e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6216fd904f46a11fa243195ee303560dc802958e", "patch": "@@ -1,3 +1,7 @@\n+2017-11-08  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_can_eliminate): Simplify logic.\n+\n 2017-11-08  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_frame_pointer_required)"}, {"sha": "0c67e2b5c67ad7c31da4a7bda98f754b7d57192f", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6216fd904f46a11fa243195ee303560dc802958e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6216fd904f46a11fa243195ee303560dc802958e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=6216fd904f46a11fa243195ee303560dc802958e", "patch": "@@ -5913,26 +5913,14 @@ aarch64_secondary_reload (bool in_p ATTRIBUTE_UNUSED, rtx x,\n }\n \n static bool\n-aarch64_can_eliminate (const int from, const int to)\n+aarch64_can_eliminate (const int from ATTRIBUTE_UNUSED, const int to)\n {\n-  /* If we need a frame pointer, we must eliminate FRAME_POINTER_REGNUM into\n-     HARD_FRAME_POINTER_REGNUM and not into STACK_POINTER_REGNUM.  */\n+  gcc_assert (from == ARG_POINTER_REGNUM || from == FRAME_POINTER_REGNUM);\n \n+  /* If we need a frame pointer, ARG_POINTER_REGNUM and FRAME_POINTER_REGNUM\n+     can only eliminate to HARD_FRAME_POINTER_REGNUM.  */\n   if (frame_pointer_needed)\n-    {\n-      if (from == ARG_POINTER_REGNUM && to == HARD_FRAME_POINTER_REGNUM)\n-\treturn true;\n-      if (from == ARG_POINTER_REGNUM && to == STACK_POINTER_REGNUM)\n-\treturn false;\n-      if (from == FRAME_POINTER_REGNUM && to == STACK_POINTER_REGNUM\n-\t  && !cfun->calls_alloca)\n-\treturn true;\n-      if (from == FRAME_POINTER_REGNUM && to == HARD_FRAME_POINTER_REGNUM)\n-\treturn true;\n-\n-      return false;\n-    }\n-\n+    return to == HARD_FRAME_POINTER_REGNUM;\n   return true;\n }\n "}]}