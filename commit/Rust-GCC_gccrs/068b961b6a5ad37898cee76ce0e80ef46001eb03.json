{"sha": "068b961b6a5ad37898cee76ce0e80ef46001eb03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY4Yjk2MWI2YTVhZDM3ODk4Y2VlNzZjZTBlODBlZjQ2MDAxZWIwMw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-12-12T18:54:54Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-12-12T18:54:54Z"}, "message": "re PR fortran/78392 (ICE in gfc_trans_auto_array_allocation, at fortran/trans-array.c:5979)\n\n2016-12-12  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/78392\n\t* expr.c (gfc_is_constant_expr): Specification functions are not\n\tcompile-time constants. Update documentation (add reference to F08\n\tstandard), add a FIXME.\n\t(external_spec_function): Add reference to F08 standard.\n\t* resolve.c (resolve_fl_variable): Ditto.\n\n2016-12-12  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/78392\n\t* gfortran.dg/constant_shape.f90: New test case.\n\nFrom-SVN: r243580", "tree": {"sha": "94f26051c1bbc2bd927fc10c86cdce7e02428131", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94f26051c1bbc2bd927fc10c86cdce7e02428131"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/068b961b6a5ad37898cee76ce0e80ef46001eb03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/068b961b6a5ad37898cee76ce0e80ef46001eb03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/068b961b6a5ad37898cee76ce0e80ef46001eb03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/068b961b6a5ad37898cee76ce0e80ef46001eb03/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4d604062535264fd7973c29f3343d1e51951437", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d604062535264fd7973c29f3343d1e51951437", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4d604062535264fd7973c29f3343d1e51951437"}], "stats": {"total": 66, "additions": 41, "deletions": 25}, "files": [{"sha": "7a47db2e9995f8e958146eab7ea731f056c4795c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068b961b6a5ad37898cee76ce0e80ef46001eb03/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068b961b6a5ad37898cee76ce0e80ef46001eb03/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=068b961b6a5ad37898cee76ce0e80ef46001eb03", "patch": "@@ -1,3 +1,12 @@\n+2016-12-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/78392\n+\t* expr.c (gfc_is_constant_expr): Specification functions are not\n+\tcompile-time constants. Update documentation (add reference to F08\n+\tstandard), add a FIXME.\n+\t(external_spec_function): Add reference to F08 standard.\n+\t* resolve.c (resolve_fl_variable): Ditto.\n+\n 2016-12-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/78226"}, {"sha": "c4a6ae10de6ea19beb53d0d72c315769fb8bc4d8", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068b961b6a5ad37898cee76ce0e80ef46001eb03/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068b961b6a5ad37898cee76ce0e80ef46001eb03/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=068b961b6a5ad37898cee76ce0e80ef46001eb03", "patch": "@@ -881,15 +881,15 @@ gfc_type_convert_binary (gfc_expr *e, int wconversion)\n }\n \n \n-/* Function to determine if an expression is constant or not.  This\n-   function expects that the expression has already been simplified.  */\n+/* Determine if an expression is constant in the sense of F08:7.1.12.\n+ * This function expects that the expression has already been simplified.\n+ * FIXME: Return a bool, not an int.  */\n \n int\n gfc_is_constant_expr (gfc_expr *e)\n {\n   gfc_constructor *c;\n   gfc_actual_arglist *arg;\n-  gfc_symbol *sym;\n \n   if (e == NULL)\n     return 1;\n@@ -918,25 +918,6 @@ gfc_is_constant_expr (gfc_expr *e)\n \t      return 0;\n \t}\n \n-      /* Specification functions are constant.  */\n-      /* F95, 7.1.6.2; F2003, 7.1.7  */\n-      sym = NULL;\n-      if (e->symtree)\n-\tsym = e->symtree->n.sym;\n-      if (e->value.function.esym)\n-\tsym = e->value.function.esym;\n-\n-      if (sym\n-\t  && sym->attr.function\n-\t  && sym->attr.pure\n-\t  && !sym->attr.intrinsic\n-\t  && !sym->attr.recursive\n-\t  && sym->attr.proc != PROC_INTERNAL\n-\t  && sym->attr.proc != PROC_ST_FUNCTION\n-\t  && sym->attr.proc != PROC_UNKNOWN\n-\t  && gfc_sym_get_dummy_args (sym) == NULL)\n-\treturn 1;\n-\n       if (e->value.function.isym\n \t  && (e->value.function.isym->elemental\n \t      || e->value.function.isym->pure\n@@ -2739,7 +2720,8 @@ restricted_args (gfc_actual_arglist *a)\n /************* Restricted/specification expressions *************/\n \n \n-/* Make sure a non-intrinsic function is a specification function.  */\n+/* Make sure a non-intrinsic function is a specification function,\n+ * see F08:7.1.11.5.  */\n \n static bool\n external_spec_function (gfc_expr *e)"}, {"sha": "ece4d7523a2cf8245c1b0f74b9ae34063726d343", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068b961b6a5ad37898cee76ce0e80ef46001eb03/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068b961b6a5ad37898cee76ce0e80ef46001eb03/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=068b961b6a5ad37898cee76ce0e80ef46001eb03", "patch": "@@ -11825,8 +11825,8 @@ resolve_fl_variable (gfc_symbol *sym, int mp_flag)\n       && !sym->attr.pointer\n       && is_non_constant_shape_array (sym))\n     {\n-      /* The shape of a main program or module array needs to be\n-\t constant.  */\n+      /* F08:C541. The shape of an array defined in a main program or module\n+       * needs to be constant.  */\n       gfc_error (\"The module or main program array %qs at %L must \"\n \t\t \"have constant shape\", sym->name, &sym->declared_at);\n       specification_expr = saved_specification_expr;"}, {"sha": "d333de178da3b2a1a4cdb43a95f97e3297e55133", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068b961b6a5ad37898cee76ce0e80ef46001eb03/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068b961b6a5ad37898cee76ce0e80ef46001eb03/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=068b961b6a5ad37898cee76ce0e80ef46001eb03", "patch": "@@ -1,3 +1,8 @@\n+2016-12-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/78392\n+\t* gfortran.dg/constant_shape.f90: New test case.\n+\n 2016-12-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/78647"}, {"sha": "c2eaf82f5ec7766a014b74fb25a9ddbea38fa279", "filename": "gcc/testsuite/gfortran.dg/constant_shape.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/068b961b6a5ad37898cee76ce0e80ef46001eb03/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstant_shape.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/068b961b6a5ad37898cee76ce0e80ef46001eb03/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstant_shape.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstant_shape.f90?ref=068b961b6a5ad37898cee76ce0e80ef46001eb03", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+!\n+! PR 78392: ICE in gfc_trans_auto_array_allocation, at fortran/trans-array.c:5979\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+module mytypes\n+   implicit none\n+ contains\n+   pure integer function get_i ()\n+     get_i = 13\n+   end function\n+end module\n+\n+program test\n+  use mytypes\n+  implicit none\n+  integer, dimension(get_i()) :: x  ! { dg-error \"must have constant shape\" }\n+  print *, size (x)\n+end"}]}