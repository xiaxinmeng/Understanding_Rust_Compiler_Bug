{"sha": "3f5cb2514af64e1a6114cf49767a8ea056422ee0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y1Y2IyNTE0YWY2NGUxYTYxMTRjZjQ5NzY3YThlYTA1NjQyMmVlMA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-05-26T10:33:06Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-05-26T10:33:06Z"}, "message": "tree-prof.exp: Check for -fprofile-generate support.\n\n gcov-profile/48845\n\t* g++.dg/tree-prof/tree-prof.exp: Check for -fprofile-generate\n\tsupport.\n\t* gcc.dg/matrix/matrix.exp: Likewise.\n\t* gcc.dg/tree-prof/tree-prof.exp: Likewise.\n\t* lib/target-supports-dg.exp (dg-require-profiling): Don't pass\n\tline number to check_profiling_available.\n\t* lib/target-supports.exp (check_profiling_available): Account for\n\tthis.\n\tRequire TLS runtime support with -fprofile-generate.\n\t* lib/profopt.exp (profopt-execute): Add TLS options for\n\t-fprofile-generate.\n\t* gcc.dg/pr47793.c: Add dg-require-profiling \"-fprofile-generate\".\n\nFrom-SVN: r174275", "tree": {"sha": "a45aad2c589464efdb53c646234462e9e089ab1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a45aad2c589464efdb53c646234462e9e089ab1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f5cb2514af64e1a6114cf49767a8ea056422ee0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5cb2514af64e1a6114cf49767a8ea056422ee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f5cb2514af64e1a6114cf49767a8ea056422ee0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5cb2514af64e1a6114cf49767a8ea056422ee0/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1537737f284eaacd8a335d1c8dbfb6cd10b0803b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1537737f284eaacd8a335d1c8dbfb6cd10b0803b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1537737f284eaacd8a335d1c8dbfb6cd10b0803b"}], "stats": {"total": 58, "additions": 42, "deletions": 16}, "files": [{"sha": "5acf08e8c5c6bac273c21bef9ded3604537fbcf7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f5cb2514af64e1a6114cf49767a8ea056422ee0", "patch": "@@ -1,3 +1,19 @@\n+2011-05-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR gcov-profile/48845\n+\t* g++.dg/tree-prof/tree-prof.exp: Check for -fprofile-generate\n+\tsupport.\n+\t* gcc.dg/matrix/matrix.exp: Likewise.\n+\t* gcc.dg/tree-prof/tree-prof.exp: Likewise.\n+\t* lib/target-supports-dg.exp (dg-require-profiling): Don't pass\n+\tline number to check_profiling_available.\n+\t* lib/target-supports.exp (check_profiling_available): Account for\n+\tthis.\n+\tRequire TLS runtime support with -fprofile-generate.\n+\t* lib/profopt.exp (profopt-execute): Add TLS options for\n+\t-fprofile-generate.\n+\t* gcc.dg/pr47793.c: Add dg-require-profiling \"-fprofile-generate\".\n+\n 2011-05-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/49165"}, {"sha": "0f69a16c902610468535b39ebb6c6a3ee9326c50", "filename": "gcc/testsuite/g++.dg/tree-prof/tree-prof.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Ftree-prof.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Ftree-prof.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Ftree-prof.exp?ref=3f5cb2514af64e1a6114cf49767a8ea056422ee0", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2001, 2002, 2004, 2005, 2007, 2008\n+# Copyright (C) 2001, 2002, 2004, 2005, 2007, 2008, 2011\n # Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -21,7 +21,7 @@\n load_lib target-supports.exp\n \n # Some targets don't support tree profiling.\n-if { ![check_profiling_available \"\"] } {\n+if { ![check_profiling_available \"-fprofile-generate\"] } {\n     return\n }\n "}, {"sha": "c1bf2713acc8d7c844f5d189dcfe68c69025f659", "filename": "gcc/testsuite/gcc.dg/matrix/matrix.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Fgcc.dg%2Fmatrix%2Fmatrix.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Fgcc.dg%2Fmatrix%2Fmatrix.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmatrix%2Fmatrix.exp?ref=3f5cb2514af64e1a6114cf49767a8ea056422ee0", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2001, 2002, 2004, 2005, 2007, 2010\n+#   Copyright (C) 2001, 2002, 2004, 2005, 2007, 2010, 2011\n #   Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -31,7 +31,7 @@ dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/matrix-\\[1-6\\].\\[cS\\]]]  \\\n dg-final\n \n # Some targets don't support tree profiling.\n-if { ![check_profiling_available \"\"] } {\n+if { ![check_profiling_available \"-fprofile-generate\"] } {\n     return\n }\n "}, {"sha": "0ee1aaee421b15fbcab6842ae94e692e1c255478", "filename": "gcc/testsuite/gcc.dg/pr47793.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47793.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47793.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47793.c?ref=3f5cb2514af64e1a6114cf49767a8ea056422ee0", "patch": "@@ -1,6 +1,7 @@\n /* Bug pr47793: Allow relative paths in profile-generate.  */\n /* { dg-do run } */\n /* { dg-options \"-O -fprofile-generate=./\" } */\n+/* { dg-require-profiling \"-fprofile-generate\" } */\n /* { dg-final { scan-file pr47793.gcda \".\"} } */\n \n int"}, {"sha": "2d054d23366c26fc908e732db7311f0b069207cb", "filename": "gcc/testsuite/gcc.dg/tree-prof/tree-prof.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Ftree-prof.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Ftree-prof.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Ftree-prof.exp?ref=3f5cb2514af64e1a6114cf49767a8ea056422ee0", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2001, 2002, 2004, 2005, 2007, 2008\n+# Copyright (C) 2001, 2002, 2004, 2005, 2007, 2008, 2011\n # Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -21,7 +21,7 @@\n load_lib target-supports.exp\n \n # Some targets don't support tree profiling.\n-if { ![check_profiling_available \"\"] } {\n+if { ![check_profiling_available \"-fprofile-generate\"] } {\n     return\n }\n "}, {"sha": "5e0f9a28ee1dbdf6e14c73888b600da4cec5a8fa", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=3f5cb2514af64e1a6114cf49767a8ea056422ee0", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2001, 2004, 2005, 2007, 2008, 2010\n+# Copyright (C) 2001, 2004, 2005, 2007, 2008, 2010, 2011\n # Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -274,6 +274,12 @@ proc profopt-execute { src } {\n \n         set extra_options [dg-additional-files-options \"\" \"$src\"]\n \n+\t# Tree profiling requires TLS runtime support, which may need\n+\t# additional flags.\n+\tif { [string first \"-fprofile-generate\" $profile_option] >= 0 } {\n+\t    set extra_flags [add_options_for_tls $extra_flags]\n+\t}\n+\n \t# Compile for profiling.\n \n \tset options \"$extra_options\""}, {"sha": "0e0252dcb4ab67b0a8e2bd1c3092e0eac76faff7", "filename": "gcc/testsuite/lib/target-supports-dg.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp?ref=3f5cb2514af64e1a6114cf49767a8ea056422ee0", "patch": "@@ -113,7 +113,7 @@ proc dg-require-gc-sections { args } {\n # If this target does not support profiling, skip this test.\n \n proc dg-require-profiling { args } {\n-    if { ![ check_profiling_available ${args} ] } {\n+    if { ![ check_profiling_available [lindex $args 1] ] } {\n \tupvar dg-do-what dg-do-what\n \tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n     }"}, {"sha": "53990f6063144da0be51ee3f603703df69ff5a9b", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5cb2514af64e1a6114cf49767a8ea056422ee0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=3f5cb2514af64e1a6114cf49767a8ea056422ee0", "patch": "@@ -495,11 +495,16 @@ proc check_profiling_available { test_what } {\n     # These conditions depend on the argument so examine them before\n     # looking at the cache variable.\n \n+    # Tree profiling requires TLS runtime support.\n+    if { $test_what == \"-fprofile-generate\" } {\n+\treturn [check_effective_target_tls_runtime]\n+    }\n+\n     # Support for -p on solaris2 relies on mcrt1.o which comes with the\n     # vendor compiler.  We cannot reliably predict the directory where the\n     # vendor compiler (and thus mcrt1.o) is installed so we can't\n     # necessarily find mcrt1.o even if we have it.\n-    if { [istarget *-*-solaris2*] && [lindex $test_what 1] == \"-p\" } {\n+    if { [istarget *-*-solaris2*] && $test_what == \"-p\" } {\n \treturn 0\n     }\n \n@@ -508,32 +513,30 @@ proc check_profiling_available { test_what } {\n     # Support for -pg on irix relies on gcrt1.o which doesn't exist yet.\n     # See: http://gcc.gnu.org/ml/gcc/2002-10/msg00169.html\n     if { [istarget mips*-*-irix*]\n-    && ([lindex $test_what 1] == \"-p\" || [lindex $test_what 1] == \"-pg\") } {\n+         && ($test_what == \"-p\" || $test_what == \"-pg\") } {\n \treturn 0\n     }\n \n     # We don't yet support profiling for MIPS16.\n     if { [istarget mips*-*-*]\n \t && ![check_effective_target_nomips16]\n-\t && ([lindex $test_what 1] == \"-p\"\n-\t     || [lindex $test_what 1] == \"-pg\") } {\n+\t && ($test_what == \"-p\" || $test_what == \"-pg\") } {\n \treturn 0\n     }\n \n     # MinGW does not support -p.\n-    if { [istarget *-*-mingw*] && [lindex $test_what 1] == \"-p\" } {\n+    if { [istarget *-*-mingw*] && $test_what == \"-p\" } {\n \treturn 0\n     }\n \n     # cygwin does not support -p.\n-    if { [istarget *-*-cygwin*] && [lindex $test_what 1] == \"-p\" } {\n+    if { [istarget *-*-cygwin*] && $test_what == \"-p\" } {\n \treturn 0\n     }\n \n     # uClibc does not have gcrt1.o.\n     if { [check_effective_target_uclibc]\n-\t && ([lindex $test_what 1] == \"-p\"\n-\t     || [lindex $test_what 1] == \"-pg\") } {\n+\t && ($test_what == \"-p\" || $test_what == \"-pg\") } {\n \treturn 0\n     }\n "}]}