{"sha": "78441afbc88a084f88d821c88635966414fda3b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg0NDFhZmJjODhhMDg0Zjg4ZDgyMWM4ODYzNTk2NjQxNGZkYTNiMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-10-09T19:01:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-10-09T19:01:53Z"}, "message": "re PR rtl-optimization/41646 (Reload ICE due to combiner extending life time of a hard register)\n\n\tPR rtl-optimization/41646\n\t* calls.c (expand_call): For BLKmode types returned in registers\n\tavoid likely spilled hard regs in copy_blkmode_from_reg generated\n\tinsns.\n\n\t* gcc.c-torture/compile/pr41646.c: New test.\n\nFrom-SVN: r152597", "tree": {"sha": "0a14cb990a496d2509e552e0f78dbea2f1b1fecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a14cb990a496d2509e552e0f78dbea2f1b1fecd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78441afbc88a084f88d821c88635966414fda3b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78441afbc88a084f88d821c88635966414fda3b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78441afbc88a084f88d821c88635966414fda3b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78441afbc88a084f88d821c88635966414fda3b2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aabf6a0372105ce6deb5780e39d648e92a491a37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aabf6a0372105ce6deb5780e39d648e92a491a37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aabf6a0372105ce6deb5780e39d648e92a491a37"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "0dfb2d04fff5f8178f6b6ee61f849af61784e544", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78441afbc88a084f88d821c88635966414fda3b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78441afbc88a084f88d821c88635966414fda3b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78441afbc88a084f88d821c88635966414fda3b2", "patch": "@@ -1,3 +1,10 @@\n+2009-10-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/41646\n+\t* calls.c (expand_call): For BLKmode types returned in registers\n+\tavoid likely spilled hard regs in copy_blkmode_from_reg generated\n+\tinsns.\n+\n 2009-10-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41634"}, {"sha": "13167a620a4e8db26642caf9993fe985c27d962e", "filename": "gcc/calls.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78441afbc88a084f88d821c88635966414fda3b2/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78441afbc88a084f88d821c88635966414fda3b2/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=78441afbc88a084f88d821c88635966414fda3b2", "patch": "@@ -3020,7 +3020,10 @@ expand_call (tree exp, rtx target, int ignore)\n \t}\n       else if (TYPE_MODE (rettype) == BLKmode)\n \t{\n-\t  target = copy_blkmode_from_reg (target, valreg, rettype);\n+\t  rtx val = valreg;\n+\t  if (GET_MODE (val) != BLKmode)\n+\t    val = avoid_likely_spilled_reg (val);\n+\t  target = copy_blkmode_from_reg (target, val, rettype);\n \n \t  /* We can not support sibling calls for this case.  */\n \t  sibcall_failure = 1;"}, {"sha": "a1517050474dc818440bcb87938f77cd05a5fdb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78441afbc88a084f88d821c88635966414fda3b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78441afbc88a084f88d821c88635966414fda3b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78441afbc88a084f88d821c88635966414fda3b2", "patch": "@@ -1,3 +1,8 @@\n+2009-10-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/41646\n+\t* gcc.c-torture/compile/pr41646.c: New test.\n+\n 2009-10-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41634"}, {"sha": "f07b6ba19f435bfd1488becca0735dc7bc87ddb7", "filename": "gcc/testsuite/gcc.c-torture/compile/pr41646.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78441afbc88a084f88d821c88635966414fda3b2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41646.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78441afbc88a084f88d821c88635966414fda3b2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41646.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41646.c?ref=78441afbc88a084f88d821c88635966414fda3b2", "patch": "@@ -0,0 +1,28 @@\n+/* PR rtl-optimization/41646 */\n+\n+struct A { unsigned long a; };\n+struct B { unsigned short b, c, d; };\n+struct B bar (unsigned long);\n+\n+char *\n+foo (char *a, struct A *x)\n+{\n+  struct B b = bar (x->a);\n+  unsigned char c;\n+  unsigned short d;\n+  a[3] = ((unsigned char) (b.b % 10) + 48);\n+  d = b.b / 10;\n+  a[2] = ((unsigned char) (d % 10) + 48);\n+  d = d / 10;\n+  a[1] = ((unsigned char) (d % 10) + 48);\n+  a[0] = ((unsigned char) ((d / 10) % 10) + 48);\n+  a[4] = 46;\n+  c = (unsigned char) b.c;\n+  a[6] = (c % 10 + 48);\n+  a[5] = ((c / 10) % 10 + 48);\n+  a[7] = 46;\n+  c = b.d;\n+  a[9] = (c % 10 + 48);\n+  a[8] = ((c / 10) % 10 + 48);\n+  return a + 10;\n+}"}]}