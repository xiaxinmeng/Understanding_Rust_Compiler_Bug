{"sha": "939759fcc993f08e734ed2942a64a8f406335b07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM5NzU5ZmNjOTkzZjA4ZTczNGVkMjk0MmE2NGE4ZjQwNjMzNWIwNw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2008-03-26T06:27:35Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2008-03-26T06:27:35Z"}, "message": "run_doxygen: Remove html_output_dir.\n\n2008-03-25  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* scripts/run_doxygen: Remove html_output_dir. Downgrade to\n\tDoxygen 1.5.1.\n\t* doc/doxygen/style.css: Delete.\n\t* doc/doxygen/user.cfg.in: Regenerate with Doxygen 1.5.1.\n\t(INPUT): Update.\n\t(PREDEFINED): Update.\n\t(HTML_OUTPUT): Remove html_output_dir, use html.\n\t(HTML_STYLESHEET): Remove style.css.\n\t* doc/doxygen/tables.html: Remove style.css use.\n\t* doc/doxygen/mainpage.html: Nested lists for Namespaces and Classes.\n\t* doc/doxygen/doxygroups.cc: Namespace edits.\n\t* doc/doxygen/Intro.3: Correct typo.\n\n\t* doc/xml/api.xml: Add gcc-4.3 links.\n\t* doc/html/api.html: Regenerate.\t\n\t\n\t* include/debug/debug.h: Document namepaces here.\n\t* include/parallel/base.h: Same.\n\t* include/ext/typelist.h: Same.\n\t* include/ext/pb_ds/tag_and_trait.hpp: Same.\n\t\n\t* include/tr1_impl/random: Adjust line break.\n\t* include/tr1_impl/unordered_map: Correct and or add markup.\n\t* include/tr1_impl/boost_shared_ptr.h: Correct and or add markup.\n\t* include/tr1_impl/functional_hash.h: Same.\n\t* include/tr1_impl/cmath: Same.\n\t* include/tr1_impl/functional: Same.\n\t* include/tr1_impl/unordered_set: Same.\n\t* include/tr1_impl/complex: Same.\n\t* include/tr1_impl/type_traits: Same.\n\t* include/tr1_impl/regex: Same.\n\t* include/tr1_impl/array: Same.\n\t* include/std/tuple: Same.\n\t* include/std/date_time: Same.\n\t* include/std/system_error: Same.\n\t* include/std/type_traits: Same.\n\t* include/ext/enc_filebuf.h: Same.\n\t* include/ext/throw_allocator.h: Same.\n\t* include/ext/pool_allocator.h: Same.\n\t* include/ext/bitmap_allocator.h: Same.\n\t* include/ext/concurrence.h: Same.\n\t* include/ext/codecvt_specializations.h: Same.\n\t* include/ext/stdio_sync_filebuf.h: Same.\n\t* include/ext/array_allocator.h: Same.\n\t* include/ext/mt_allocator.h: Same.\n\t* include/bits/locale_classes.h: Same.\n\t* include/bits/locale_facets.h: Same.\n\t* include/bits/codecvt.h: Same.\n\t* include/bits/char_traits.h: Same.\n\t* include/bits/allocator.h: Same.\n\t* include/bits/locale_facets_nonio.h: Same.\n\t* include/tr1/poly_laguerre.tcc: Same.\n\t* include/tr1/riemann_zeta.tcc: Same.\n\t* include/tr1/beta_function.tcc: Same.\n\t* include/tr1/tuple: Same.\n\t* include/tr1/exp_integral.tcc: Same.\n\t* include/tr1/gamma.tcc: Same.\n\t* include/tr1/hypergeometric.tcc: Same.\n\t* include/tr1/modified_bessel_func.tcc: Same.\n\t* include/tr1/legendre_function.tcc: Same.\n\t* include/tr1/type_traits: Same.\n\t* include/tr1/special_function_util.h: Same.\n\t* include/tr1/bessel_function.tcc: Same.\n\t* include/tr1/cmath: Same.\n\t* include/tr1/poly_hermite.tcc: Same.\n\t* include/tr1/ell_integral.tcc: Same.\n\t* config/abi/compatibility.h: Adjust file name.\n\n\t* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Adjust\n\tline numbers.\t\n\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Same.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Same.\n\nFrom-SVN: r133544", "tree": {"sha": "bac7112eda84cb436582837155e41f192bcb0515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bac7112eda84cb436582837155e41f192bcb0515"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/939759fcc993f08e734ed2942a64a8f406335b07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/939759fcc993f08e734ed2942a64a8f406335b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/939759fcc993f08e734ed2942a64a8f406335b07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/939759fcc993f08e734ed2942a64a8f406335b07/comments", "author": null, "committer": null, "parents": [{"sha": "a0a5f30f8e6741d55daca7fb3093df6365425661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0a5f30f8e6741d55daca7fb3093df6365425661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0a5f30f8e6741d55daca7fb3093df6365425661"}], "stats": {"total": 1075, "additions": 512, "deletions": 563}, "files": [{"sha": "85efeab74983f65e42a96219b77fcdb978911c74", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,3 +1,78 @@\n+2008-03-25  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* scripts/run_doxygen: Remove html_output_dir. Downgrade to\n+\tDoxygen 1.5.1.\n+\t* doc/doxygen/style.css: Delete.\n+\t* doc/doxygen/user.cfg.in: Regenerate with Doxygen 1.5.1.\n+\t(INPUT): Update.\n+\t(PREDEFINED): Update.\n+\t(HTML_OUTPUT): Remove html_output_dir, use html.\n+\t(HTML_STYLESHEET): Remove style.css.\n+\t* doc/doxygen/tables.html: Remove style.css use.\n+\t* doc/doxygen/mainpage.html: Nested lists for Namespaces and Classes.\n+\t* doc/doxygen/doxygroups.cc: Namespace edits.\n+\t* doc/doxygen/Intro.3: Correct typo.\n+\n+\t* doc/xml/api.xml: Add gcc-4.3 links.\n+\t* doc/html/api.html: Regenerate.\t\n+\t\n+\t* include/debug/debug.h: Document namepaces here.\n+\t* include/parallel/base.h: Same.\n+\t* include/ext/typelist.h: Same.\n+\t* include/ext/pb_ds/tag_and_trait.hpp: Same.\n+\t\n+\t* include/tr1_impl/random: Adjust line break.\n+\t* include/tr1_impl/unordered_map: Correct and or add markup.\n+\t* include/tr1_impl/boost_shared_ptr.h: Correct and or add markup.\n+\t* include/tr1_impl/functional_hash.h: Same.\n+\t* include/tr1_impl/cmath: Same.\n+\t* include/tr1_impl/functional: Same.\n+\t* include/tr1_impl/unordered_set: Same.\n+\t* include/tr1_impl/complex: Same.\n+\t* include/tr1_impl/type_traits: Same.\n+\t* include/tr1_impl/regex: Same.\n+\t* include/tr1_impl/array: Same.\n+\t* include/std/tuple: Same.\n+\t* include/std/date_time: Same.\n+\t* include/std/system_error: Same.\n+\t* include/std/type_traits: Same.\n+\t* include/ext/enc_filebuf.h: Same.\n+\t* include/ext/throw_allocator.h: Same.\n+\t* include/ext/pool_allocator.h: Same.\n+\t* include/ext/bitmap_allocator.h: Same.\n+\t* include/ext/concurrence.h: Same.\n+\t* include/ext/codecvt_specializations.h: Same.\n+\t* include/ext/stdio_sync_filebuf.h: Same.\n+\t* include/ext/array_allocator.h: Same.\n+\t* include/ext/mt_allocator.h: Same.\n+\t* include/bits/locale_classes.h: Same.\n+\t* include/bits/locale_facets.h: Same.\n+\t* include/bits/codecvt.h: Same.\n+\t* include/bits/char_traits.h: Same.\n+\t* include/bits/allocator.h: Same.\n+\t* include/bits/locale_facets_nonio.h: Same.\n+\t* include/tr1/poly_laguerre.tcc: Same.\n+\t* include/tr1/riemann_zeta.tcc: Same.\n+\t* include/tr1/beta_function.tcc: Same.\n+\t* include/tr1/tuple: Same.\n+\t* include/tr1/exp_integral.tcc: Same.\n+\t* include/tr1/gamma.tcc: Same.\n+\t* include/tr1/hypergeometric.tcc: Same.\n+\t* include/tr1/modified_bessel_func.tcc: Same.\n+\t* include/tr1/legendre_function.tcc: Same.\n+\t* include/tr1/type_traits: Same.\n+\t* include/tr1/special_function_util.h: Same.\n+\t* include/tr1/bessel_function.tcc: Same.\n+\t* include/tr1/cmath: Same.\n+\t* include/tr1/poly_hermite.tcc: Same.\n+\t* include/tr1/ell_integral.tcc: Same.\n+\t* config/abi/compatibility.h: Adjust file name.\n+\n+\t* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Adjust\n+\tline numbers.\t\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Same.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Same.\n+\n 2008-03-23  Paolo Carlini  <pcarlini@suse.de>\n \n \t* doc/xml/faq.xml: Fix various links."}, {"sha": "9975074dc043df3fc1df404031704b875ab4eedc", "filename": "libstdc++-v3/config/abi/compatibility.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fcompatibility.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fcompatibility.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fcompatibility.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -28,7 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file compatibility.h\n+/** @file bits/compatibility.h\n  *  This is an internal header file, included by other library sources.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "35fdb1384ef41f981b0aa8bfaf81e4003b82566a", "filename": "libstdc++-v3/doc/doxygen/Intro.3", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2FIntro.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2FIntro.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2FIntro.3?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,5 +1,5 @@\n .\\\" t\n-.\\\" This man page is released under the FDL as part of libstdc++.\n+.\\\" This man page is released under the GPL as part of libstdc++.\n .TH C++Intro 3 \"20 May 2004\" \"GNU libstdc++\" \"Standard C++ Library\"\n .SH NAME\n C++Intro \\- Introduction to the GNU libstdc++ man pages"}, {"sha": "f051a7e7b55479667d1f6ddd3690b8d45a420900", "filename": "libstdc++-v3/doc/doxygen/doxygroups.cc", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fdoxygroups.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fdoxygroups.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fdoxygroups.cc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,5 +1,5 @@\n /*\n-   Copyright (C) 2001, 2002, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2005, 2008 Free Software Foundation, Inc.\n    See license.html for license.\n \n    This just provides documentation for stuff that doesn't need to be in the\n@@ -17,36 +17,34 @@\n \n // // // // // // // // // // // // // // // // // // // // // // // //\n /** @namespace std\n- *  @brief Everything defined by the ISO C++ Standard is within\n- *  namespace <a class=\"el\" href=\"namespacestd.html\">std</a>.\n+ *  @brief ISO C++ entities toplevel namespace is std.\n */\n /** @namespace std::__detail\n- *  @brief Implementation details not part of the namespace <a class=\"el\"\n- *  href=\"namespacestd.html\">std</a> interface.\n+ *  @brief Implementation details not part of the namespace std interface.\n */\n /** @namespace std::tr1\n- *  @brief Everything defined by the ISO C++ TR1 is within namespace std::tr1.\n+ *  @brief ISO C++ TR1 entities toplevel namespace is std::tr1.\n */\n /** @namespace std::tr1::__detail\n  *  @brief Implementation details not part of the namespace std::tr1 interface.\n */\n+/** @namespace std::regex_constants\n+ *  @brief ISO C++ 0x entities sub namespace for regex.\n+*/\n+/** @namespace std::placeholders\n+ *  @brief ISO C++ 0x entities sub namespace for functional.\n+*/\n /** @namespace __gnu_cxx\n  *  @brief GNU extensions for public use.\n */\n /** @namespace __gnu_cxx::__detail\n- *  @brief Implementation details not part of the namespace __gnu_cxx\n+ *  @brief Implementation details not part of the namespace __gnu_cxx \n  *  interface.\n */\n-/** @namespace __gnu_cxx::typelist\n- *  @brief GNU typelist extensions for public compile-time use.\n-*/\n /** @namespace __gnu_internal\n  *  @brief GNU implemenation details, not for public use or\n  *  export. Used only when anonymous namespaces cannot be substituted.\n */\n-/** @namespace __gnu_debug\n- *  @brief GNU debug classes for public use.\n-*/\n // // // // // // // // // // // // // // // // // // // // // // // //\n /** @addtogroup SGIextensions STL extensions from SGI\n Because libstdc++ based its implementation of the STL subsections of"}, {"sha": "aa650bafeda353e3a01cfadf051ac07136feef75", "filename": "libstdc++-v3/doc/doxygen/mainpage.html", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fmainpage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fmainpage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fmainpage.html?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -2,7 +2,6 @@\n <html>\n <head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n <title>libstdc++ Source: Main Index</title>\n-<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\n </head>\n \n <body bgcolor=\"#ffffff\">\n@@ -39,14 +38,25 @@ <h2>Documentation Overview</h2>\n \n <p>Here are entry points to all the pages generated by Doxygen:\n    <ul>\n-    <li><a href=\"modules.html\">Modules</a>\n-    <li><a href=\"namespaces.html\">Namespace List</a>\n-    <li><a href=\"hierarchy.html\">Class List</a>\n-    <li><a href=\"annotated.html\">Class Annotated List</a>\n-    <li><a href=\"classes.html\">Class Alphabetical Index</a>\n-    <li><a href=\"globals_func.html\">Function Alphabetical List</a>\n-    <li><a href=\"files.html\">Source File List</a>\n-    <li><a href=\"todo.html\">TODO List</a> (This is incomplete... how ironic.)\n+    <li><a href=\"modules.html\">Modules</a></li>\n+\n+    <li>Namespaces\n+    <ul>\n+    <li><a href=\"namespaces.html\">List</a></li>\n+    <li><a href=\"namespacemembers.html\">Members</a></li>\n+    </ul>\n+    </li>\n+\n+    <li>Classes\n+    <ul>\n+    <li><a href=\"classes.html\">List</a></li>\n+    <li><a href=\"hierarchy.html\">Hierarchy</a></li>\n+    <li><a href=\"functions.html\">Members</a></li>\n+    </ul>\n+    </li>\n+\n+    <li><a href=\"files.html\">Source Files</a></li>\n+    <li><a href=\"todo.html\">TODO List</a></li>\n    </ul>\n </p>\n "}, {"sha": "c49c37cdfd98c2b3ae4dbf84b885ac6dfe3ec676", "filename": "libstdc++-v3/doc/doxygen/style.css", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0a5f30f8e6741d55daca7fb3093df6365425661/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fstyle.css", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0a5f30f8e6741d55daca7fb3093df6365425661/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fstyle.css", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fstyle.css?ref=a0a5f30f8e6741d55daca7fb3093df6365425661", "patch": "@@ -1,74 +0,0 @@\n-BODY { \n-   background: white; \n-   font-size: small;\n-}\n-H1 { text-align: center; font-size: large }\n-H2 { text-align: left; font-size: medium; }\n-H3 { text-align: left; font-size: small; }\n-CODE { font-size: small; }\n-CAPTION { font-weight: normal }\n-A.qindex {}\n-A.qindexRef {}\n-A.el { text-decoration: none; font-size: small; font-weight: normal }\n-A.elRef { text-decoration: none; font-size: small; font-weight: normal }\n-A.code { text-decoration: none; font-weight: normal; color: #4444ee }\n-A.codeRef { font-weight: normal; color: #4444ee }\n-A:hover { text-decoration: none; background-color: #f2f2ff }\n-DL.el { margin-left: -1cm }\n-DIV.fragment { width: 100%; border: none; background-color: #eeeeee }\n-DIV.ah { \n-   background-color: black; \n-   font-weight: normal; \n-   color: #ffffff; \n-   margin-bottom: 3px; \n-   margin-top: 3px \n-}\n-DIV.groupHeader { \n-   margin-left: 16px; \n-   margin-top: 12px; \n-   margin-bottom: 6px; \n-   font-weight: normal \n-}\n-DIV.groupText { margin-left: 16px; font-style: italic; font-size: small }\n-TD.md { background-color: #f2f2ff; font-size: small; }\n-TD.mdname1 { background-color: #f2f2ff; font-size: small; color: #602020; }\n-TD.mdname { \n-   background-color: #f2f2ff; \n-   font-weight: normal; \n-   font-size: small; \n-   color: #602020; \n-   width: 600px\n-}\n-TD.indexkey { \n-   background-color: #eeeeff; \n-   font-weight: normal; \n-   font-size: small; \n-   padding-right  : 10px; \n-   padding-top    : 2px; \n-   padding-left   : 10px; \n-   padding-bottom : 2px; \n-   margin-left    : 0px; \n-   margin-right   : 0px; \n-   margin-top     : 2px; \n-   margin-bottom  : 2px  \n-}\n-TD.indexvalue { \n-   background-color: #eeeeff; \n-   font-style: italic; \n-   font-size: small; \n-   padding-right  : 10px; \n-   padding-top    : 2px; \n-   padding-left   : 10px; \n-   padding-bottom : 2px; \n-   margin-left    : 0px; \n-   margin-right   : 0px; \n-   margin-top     : 2px; \n-   margin-bottom  : 2px  \n-}\n-span.keyword       { color: #008000 }\n-span.keywordtype   { color: #604020 }\n-span.keywordflow   { color: #e08000 }\n-span.comment       { color: #800000 }\n-span.preprocessor  { color: #806020 }\n-span.stringliteral { color: #002080 }\n-span.charliteral   { color: #008080 }"}, {"sha": "def011e7408f2caaf25f8faa4f419bb95df9290c", "filename": "libstdc++-v3/doc/doxygen/tables.html", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Ftables.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Ftables.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Ftables.html?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -2,7 +2,6 @@\n <html>\n <head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n <title>Tables</title>\n-<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\n </head>\n \n <body bgcolor=\"#ffffff\">"}, {"sha": "059d95da229909a0693f4a558094373158df673e", "filename": "libstdc++-v3/doc/doxygen/user.cfg.in", "status": "modified", "additions": 118, "deletions": 186, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,4 +1,4 @@\n-# Doxyfile 1.5.4\n+# Doxyfile 1.5.1\n \n # This file describes the settings to be used by the documentation system\n # doxygen (www.doxygen.org) for a project\n@@ -14,15 +14,6 @@\n # Project related configuration options\n #---------------------------------------------------------------------------\n \n-# This tag specifies the encoding used for all characters in the\n-# config file that follow. The default is UTF-8 which is also the\n-# encoding used for all text before the first occurrence of this\n-# tag. Doxygen uses libiconv (or the iconv built into libc) for the\n-# transcoding. See http://www.gnu.org/software/libiconv for the list\n-# of possible encodings.\n-\n-DOXYFILE_ENCODING      = UTF-8\n-\n # The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n # by quotes) that should identify the project.\n \n@@ -62,18 +53,27 @@ CREATE_SUBDIRS         = NO\n \n OUTPUT_LANGUAGE        = English\n \n+# This tag can be used to specify the encoding used in the generated output. \n+# The encoding is not always determined by the language that is chosen, \n+# but also whether or not the output is meant for Windows or non-Windows users. \n+# In case there is a difference, setting the USE_WINDOWS_ENCODING tag to YES \n+# forces the Windows encoding (this is the default for the Windows binary), \n+# whereas setting the tag to NO uses a Unix-style encoding (the default for \n+# all platforms other than Windows).\n+\n+USE_WINDOWS_ENCODING   = NO\n+\n # If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will \n # include brief member descriptions after the members that are listed in \n # the file and class documentation (similar to JavaDoc). \n # Set to NO to disable this.\n \n BRIEF_MEMBER_DESC      = NO\n \n-# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will\n-# prepend the brief description of a member or function before the\n-# detailed description.  Note: if both HIDE_UNDOC_MEMBERS and\n-# BRIEF_MEMBER_DESC are set to NO, the brief descriptions will be\n-# completely suppressed.\n+# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend \n+# the brief description of a member or function before the detailed description. \n+# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the \n+# brief descriptions will be completely suppressed.\n \n REPEAT_BRIEF           = YES\n \n@@ -135,19 +135,11 @@ SHORT_NAMES            = YES\n # If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen \n # will interpret the first line (until the first dot) of a JavaDoc-style \n # comment as the brief description. If set to NO, the JavaDoc \n-# comments will behave just like regular Qt-style comments \n-# (thus requiring an explicit @brief command for a brief description.)\n+# comments will behave just like the Qt-style comments (thus requiring an \n+# explicit @brief command for a brief description.\n \n JAVADOC_AUTOBRIEF      = NO\n \n-# If the QT_AUTOBRIEF tag is set to YES then Doxygen will \n-# interpret the first line (until the first dot) of a Qt-style \n-# comment as the brief description. If set to NO, the comments \n-# will behave just like regular Qt-style comments (thus requiring \n-# an explicit \\brief command for a brief description.)\n-\n-QT_AUTOBRIEF           = NO\n-\n # The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen \n # treat a multi-line C++ special comment block (i.e. a block of //! or /// \n # comments) as a brief description. This used to be the default behaviour. \n@@ -213,18 +205,6 @@ OPTIMIZE_OUTPUT_JAVA   = NO\n \n BUILTIN_STL_SUPPORT    = NO\n \n-# If you use Microsoft's C++/CLI language, you should set this option to YES to\n-# enable parsing support.\n-\n-CPP_CLI_SUPPORT        = NO\n-\n-# Set the SIP_SUPPORT tag to YES if your project consists of sip\n-# sources only.  Doxygen will parse them like normal C++ but will\n-# assume all classes use public instead of private inheritance when no\n-# explicit protection keyword is present.\n-\n-SIP_SUPPORT            = NO\n-\n # If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC \n # tag is set to YES, then doxygen will reuse the documentation of the first \n # member in the group (if any) for the other members of the group. By default \n@@ -240,16 +220,6 @@ DISTRIBUTE_GROUP_DOC   = YES\n \n SUBGROUPING            = YES\n \n-# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct (or union) is \n-# documented as struct with the name of the typedef. So \n-# typedef struct TypeS {} TypeT, will appear in the documentation as a struct \n-# with name TypeT. When disabled the typedef will appear as a member of a file, \n-# namespace, or class. And the struct will be named TypeS. This can typically \n-# be useful for C code where the coding convention is that all structs are \n-# typedef'ed and only the typedef is referenced never the struct's name.\n-\n-TYPEDEF_HIDES_STRUCT   = NO\n-\n #---------------------------------------------------------------------------\n # Build related configuration options\n #---------------------------------------------------------------------------\n@@ -284,14 +254,6 @@ EXTRACT_LOCAL_CLASSES  = YES\n \n EXTRACT_LOCAL_METHODS  = YES\n \n-# If this flag is set to YES, the members of anonymous namespaces will\n-# be extracted and appear in the documentation as a namespace called\n-# 'anonymous_namespace{file}', where file will be replaced with the\n-# base name of the file that contains the anonymous namespace. By\n-# default anonymous namespace are hidden.\n-\n-EXTRACT_ANON_NSPACES   = NO\n-\n # If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all \n # undocumented members of documented classes, files or namespaces. \n # If set to NO (the default) these members will be included in the \n@@ -422,20 +384,19 @@ MAX_INITIALIZER_LINES  = 0\n \n SHOW_USED_FILES        = YES\n \n-# If the sources in your project are distributed over multiple\n-# directories then setting the SHOW_DIRECTORIES tag to YES will show\n-# the directory hierarchy in the documentation. The default is NO.\n+# If the sources in your project are distributed over multiple directories \n+# then setting the SHOW_DIRECTORIES tag to YES will show the directory hierarchy \n+# in the documentation. The default is NO.\n \n SHOW_DIRECTORIES       = YES\n \n-# The FILE_VERSION_FILTER tag can be used to specify a program or\n-# script that doxygen should invoke to get the current version for\n-# each file (typically from the version control system). Doxygen will\n-# invoke the program by executing (via popen()) the command <command>\n-# <input-file>, where <command> is the value of the\n-# FILE_VERSION_FILTER tag, and <input-file> is the name of an input\n-# file provided by doxygen. Whatever the program writes to standard\n-# output is used as the file version. See the manual for examples.\n+# The FILE_VERSION_FILTER tag can be used to specify a program or script that \n+# doxygen should invoke to get the current version for each file (typically from the \n+# version control system). Doxygen will invoke the program by executing (via \n+# popen()) the command <command> <input-file>, where <command> is the value of \n+# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file \n+# provided by doxygen. Whatever the program writes to standard output \n+# is used as the file version. See the manual for examples.\n \n FILE_VERSION_FILTER    = \n \n@@ -494,53 +455,20 @@ WARN_LOGFILE           =\n # configuration options related to the input files\n #---------------------------------------------------------------------------\n \n-# The INPUT tag can be used to specify the files and/or directories\n-# that contain documented source files. You may enter file names like\n-# \"myfile.cpp\" or directories like \"/usr/src/myproject\". Separate the\n-# files or directories with spaces.\n+# The INPUT tag can be used to specify the files and/or directories that contain \n+# documented source files. You may enter file names like \"myfile.cpp\" or \n+# directories like \"/usr/src/myproject\". Separate the files or directories \n+# with spaces.\n \n-INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n-                         @srcdir@/include/precompiled/stdc++.h \\\n-                         @srcdir@/include/precompiled/stdtr1c++.h \\\n-                         @srcdir@/include/precompiled/extc++.h \\\n-                         @srcdir@/libsupc++/cxxabi.h \\\n+INPUT                  = @srcdir@/libsupc++/cxxabi.h \\\n+                         @srcdir@/libsupc++/cxxabi-forced.h \\\n                          @srcdir@/libsupc++/exception \\\n                          @srcdir@/libsupc++/new \\\n                          @srcdir@/libsupc++/typeinfo \\\n-                         include/@host_alias@/bits \\\n-                         include/bits \\\n-                         include/debug \\\n-                         include/parallel \\\n-                         include/ext \\\n-                         include/tr1 \\\n-                         include/tr1_impl \\\n                          include/algorithm \\\n                          include/array \\\n                          include/bitset \\\n-                         include/cassert \\\n-                         include/ccomplex \\\n-                         include/cctype \\\n-                         include/cerrno \\\n-                         include/cfenv \\\n-                         include/cfloat \\\n-                         include/cinttypes \\\n-                         include/ciso646 \\\n-                         include/climits \\\n-                         include/clocale \\\n-                         include/cmath \\\n-                         include/csetjmp \\\n-                         include/csignal \\\n-                         include/cstdarg \\\n-                         include/cstdbool \\\n-                         include/cstddef \\\n-                         include/cstdint \\\n-                         include/cstdio \\\n-                         include/cstdlib \\\n-                         include/cstring \\\n-                         include/ctgmath \\\n-                         include/ctime \\\n-                         include/cwchar \\\n-                         include/cwctype \\\n+                         include/date_time \\\n                          include/deque \\\n                          include/fstream \\\n                          include/functional \\\n@@ -574,14 +502,41 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/utility \\\n                          include/valarray \\\n                          include/vector \\\n+                         include/cassert \\\n+                         include/ccomplex \\\n+                         include/cctype \\\n+                         include/cerrno \\\n+                         include/cfenv \\\n+                         include/cfloat \\\n+                         include/cinttypes \\\n+                         include/ciso646 \\\n+                         include/climits \\\n+                         include/clocale \\\n+                         include/cmath \\\n+                         include/csetjmp \\\n+                         include/csignal \\\n+                         include/cstdarg \\\n+                         include/cstdbool \\\n+                         include/cstddef \\\n+                         include/cstdint \\\n+                         include/cstdio \\\n+                         include/cstdlib \\\n+                         include/cstring \\\n+                         include/ctgmath \\\n+                         include/ctime \\\n+                         include/cwchar \\\n+                         include/cwctype \\\n                          include/backward/hash_map \\\n                          include/backward/hash_set \\\n+                         include/backward/strstream \\\n                          include/debug/bitset \\\n                          include/debug/deque \\\n                          include/debug/list \\\n                          include/debug/map \\\n                          include/debug/set \\\n                          include/debug/string \\\n+                         include/debug/unordered_map \\\n+                         include/debug/unordered_set \\\n                          include/debug/vector \\\n                          include/ext/algorithm \\\n                          include/ext/functional \\\n@@ -591,8 +546,6 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/ext/rb_tree \\\n                          include/ext/rope \\\n                          include/ext/slist \\\n-                         include/ext/pb_ds \\\n-                         include/ext/pb_ds/detail \\\n                          include/parallel/algorithm \\\n                          include/parallel/numeric \\\n                          include/tr1/array \\\n@@ -614,15 +567,13 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/tr1/cwchar \\\n                          include/tr1/cwctype \\\n                          include/tr1/functional \\\n-                         include/tr1/hashtable.h \\\n                          include/tr1/memory \\\n                          include/tr1/random \\\n                          include/tr1/regex \\\n                          include/tr1/tuple \\\n                          include/tr1/type_traits \\\n                          include/tr1/unordered_map \\\n                          include/tr1/unordered_set \\\n-                         include/tr1_impl/utility \\\n                          include/tr1_impl/array \\\n                          include/tr1_impl/cctype \\\n                          include/tr1_impl/cfenv \\\n@@ -638,27 +589,28 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/tr1_impl/hashtable \\\n                          include/tr1_impl/random \\\n                          include/tr1_impl/regex \\\n-                         include/tr1_impl/tuple \\\n                          include/tr1_impl/type_traits \\\n                          include/tr1_impl/unordered_map \\\n                          include/tr1_impl/unordered_set \\\n-                         include/tr1_impl/utility\n-\n-# This tag can be used to specify the character encoding of the source\n-# files that doxygen parses. Internally doxygen uses the UTF-8\n-# encoding, which is also the default input encoding. Doxygen uses\n-# libiconv (or the iconv built into libc) for the transcoding.  See\n-# http://www.gnu.org/software/libiconv for the list of possible\n-# encodings.\n-\n-INPUT_ENCODING         = UTF-8\n+                         include/tr1_impl/utility \\\n+                         include/@host_alias@/bits \\\n+                         include/backward \\\n+                         include/bits \\\n+                         include/debug \\\n+                         include/parallel \\\n+                         include/tr1 \\\n+                         include/tr1_impl \\\n+                         include/ext \\\n+                         include/ext/pb_ds \\\n+                         include/ext/pb_ds/detail \\\n+                         @srcdir@/doc/doxygen/doxygroups.cc\n \n # If the value of the INPUT tag contains directories, you can use the \n # FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n # and *.h) to filter out the source-files in the directories. If left \n # blank the following patterns are tested: \n # *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx \n-# *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.py *.f90\n+# *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.py\n \n FILE_PATTERNS          = *.h \\\n                          *.hpp \\\n@@ -694,14 +646,6 @@ EXCLUDE_PATTERNS       = stamp-* \\\n                          *extc++.h* \\\n                          */.svn/*\n \n-# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol\n-# names (namespaces, classes, functions, etc.) that should be excluded\n-# from the output.  The symbol name can be a fully qualified name, a\n-# word, or if the wildcard * is used, a substring. Examples:\n-# ANamespace, AClass, AClass::ANamespace, ANamespace::*Test\n-\n-EXCLUDE_SYMBOLS        = \n-\n # The EXAMPLE_PATH tag can be used to specify one or more files or \n # directories that contain example code fragments that are included (see \n # the \\include command).\n@@ -757,13 +701,10 @@ FILTER_SOURCE_FILES    = NO\n # configuration options related to source browsing\n #---------------------------------------------------------------------------\n \n-# If the SOURCE_BROWSER tag is set to YES then a list of source files\n-# will be generated. Documented entities will be cross-referenced with\n-# these sources.  Note: To get rid of all source code in the generated\n-# output, make sure also VERBATIM_HEADERS is set to NO. If you have\n-# enabled CALL_GRAPH or CALLER_GRAPH then you must also enable this\n-# option. If you don't then doxygen will produce a warning and turn it\n-# on anyway\n+# If the SOURCE_BROWSER tag is set to YES then a list of source files will \n+# be generated. Documented entities will be cross-referenced with these sources. \n+# Note: To get rid of all source code in the generated output, make sure also \n+# VERBATIM_HEADERS is set to NO.\n \n SOURCE_BROWSER         = YES\n \n@@ -847,7 +788,7 @@ GENERATE_HTML          = @do_html@\n # If a relative path is entered the value of OUTPUT_DIRECTORY will be \n # put in front of it. If left blank `html' will be used as the default path.\n \n-HTML_OUTPUT            = @html_output_dir@\n+HTML_OUTPUT            = html\n \n # The HTML_FILE_EXTENSION tag can be used to specify the file extension for \n # each generated HTML page (for example: .htm,.php,.asp). If it is left blank \n@@ -874,7 +815,7 @@ HTML_FOOTER            =\n # the style sheet file to the HTML output directory, so don't put your own \n # stylesheet in the HTML output directory as well, or it will be erased!\n \n-HTML_STYLESHEET        = @srcdir@/doc/doxygen/style.css\n+HTML_STYLESHEET        = \n \n # If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes, \n # files or namespaces will be aligned in HTML using tables. If set to \n@@ -889,14 +830,6 @@ HTML_ALIGN_MEMBERS     = NO\n \n GENERATE_HTMLHELP      = NO\n \n-# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML \n-# documentation will contain sections that can be hidden and shown after the \n-# page has loaded. For this to work a browser that supports \n-# JavaScript and DHTML is required (for instance Mozilla 1.0+, Firefox \n-# Netscape 6.0+, Internet explorer 5.0+, Konqueror, or Safari).\n-\n-HTML_DYNAMIC_SECTIONS  = NO\n-\n # If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can \n # be used to specify the file name of the resulting .chm file. You \n # can add a path in front of the file if the result should not be \n@@ -1120,15 +1053,13 @@ XML_OUTPUT             = xml\n # which can be used by a validating XML parser to check the \n # syntax of the XML files.\n \n-#XML_SCHEMA             = \n XML_SCHEMA             = \n \n # The XML_DTD tag can be used to specify an XML DTD, \n # which can be used by a validating XML parser to check the \n # syntax of the XML files.\n \n XML_DTD                = \n-#XML_DTD                = http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd\n \n # If the XML_PROGRAMLISTING tag is set to YES Doxygen will \n # dump the program listings (including syntax highlighting \n@@ -1232,13 +1163,18 @@ INCLUDE_FILE_PATTERNS  =\n # instead of the = operator.\n \n PREDEFINED             = __GTHREADS \\\n+                         \"_GLIBCXX_STD_P= \" \\\n+                         \"_GLIBCXX_STD_D= \" \\\n                          _GLIBCXX_STD=std \\\n-                         _GLIBCXX_TR1=tr1 \\\n+                         \"_GLIBCXX_TR1= \" \\\n+                         \"_GLIBCXX_BEGIN_NAMESPACE_TR1= \" \\\n+                         \"_GLIBCXX_END_NAMESPACE_TR1= \" \\\n                          \"_GLIBCXX_BEGIN_NAMESPACE(name)=namespace name {  \" \\\n                          \"_GLIBCXX_BEGIN_NESTED_NAMESPACE(name, unused)=namespace name {  \" \\\n                          _GLIBCXX_END_NAMESPACE=} \\\n                          _GLIBCXX_END_NESTED_NAMESPACE=} \\\n                          \"_GLIBCXX_TEMPLATE_ARGS=...  \" \\\n+                         _GLIBCXX_INCLUDE_AS_CXX0X \\\n                          _GLIBCXX_DEPRECATED \\\n                          _GLIBCXX_USE_WCHAR_T \\\n                          _GLIBCXX_USE_LONG_LONG \\\n@@ -1248,11 +1184,10 @@ PREDEFINED             = __GTHREADS \\\n                          __glibcxx_class_requires3=// \\\n                          __glibcxx_class_requires4=//\n \n-# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES\n-# then this tag can be used to specify a list of macro names that\n-# should be expanded.  The macro definition that is found in the\n-# sources will be used.  Use the PREDEFINED tag if you want to use a\n-# different macro definition.\n+# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then \n+# this tag can be used to specify a list of macro names that should be expanded. \n+# The macro definition that is found in the sources will be used. \n+# Use the PREDEFINED tag if you want to use a different macro definition.\n \n EXPAND_AS_DEFINED      = \n \n@@ -1320,14 +1255,6 @@ PERL_PATH              = /usr/bin/perl\n \n CLASS_DIAGRAMS         = YES\n \n-# You can define message sequence charts within doxygen comments using the \\msc \n-# command. Doxygen will then run the mscgen tool (see http://www.mcternan.me.uk/mscgen/) to \n-# produce the chart and insert it in the documentation. The MSCGEN_PATH tag allows you to \n-# specify the directory where the mscgen tool resides. If left empty the tool is assumed to \n-# be found in the default search path.\n-\n-MSCGEN_PATH            = \n-\n # If set to YES, the inheritance and collaboration graphs will hide \n # inheritance and usage relations if the target is undocumented \n # or is not a class.\n@@ -1385,21 +1312,19 @@ INCLUDE_GRAPH          = NO\n \n INCLUDED_BY_GRAPH      = NO\n \n-# If the CALL_GRAPH, SOURCE_BROWSER and HAVE_DOT tags are set to YES\n-# then doxygen will generate a call dependency graph for every global\n-# function or class method.  Note that enabling this option will\n-# significantly increase the time of a run.  So in most cases it will\n-# be better to enable call graphs for selected functions only using\n-# the \\callgraph command.\n+# If the CALL_GRAPH and HAVE_DOT tags are set to YES then doxygen will \n+# generate a call dependency graph for every global function or class method. \n+# Note that enabling this option will significantly increase the time of a run. \n+# So in most cases it will be better to enable call graphs for selected \n+# functions only using the \\callgraph command.\n \n CALL_GRAPH             = NO\n \n-# If the CALLER_GRAPH, SOURCE_BROWSER and HAVE_DOT tags are set to YES\n-# then doxygen will generate a caller dependency graph for every\n-# global function or class method.  Note that enabling this option\n-# will significantly increase the time of a run.  So in most cases it\n-# will be better to enable caller graphs for selected functions only\n-# using the \\callergraph command.\n+# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then doxygen will \n+# generate a caller dependency graph for every global function or class method. \n+# Note that enabling this option will significantly increase the time of a run. \n+# So in most cases it will be better to enable caller graphs for selected \n+# functions only using the \\callergraph command.\n \n CALLER_GRAPH           = NO\n \n@@ -1432,24 +1357,31 @@ DOT_PATH               =\n \n DOTFILE_DIRS           = \n \n-# The MAX_DOT_GRAPH_MAX_NODES tag can be used to set the maximum\n-# number of nodes that will be shown in the graph. If the number of\n-# nodes in a graph becomes larger than this value, doxygen will\n-# truncate the graph, which is visualized by representing a node as a\n-# red box. Note that doxygen if the number of direct children of the\n-# root node in a graph is already larger than MAX_DOT_GRAPH_NOTES then\n-# the graph will not be shown at all. Also note that the size of a\n-# graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n+# The MAX_DOT_GRAPH_WIDTH tag can be used to set the maximum allowed width \n+# (in pixels) of the graphs generated by dot. If a graph becomes larger than \n+# this value, doxygen will try to truncate the graph, so that it fits within \n+# the specified constraint. Beware that most browsers cannot cope with very \n+# large images.\n+\n+MAX_DOT_GRAPH_WIDTH    = 1024\n+\n+# The MAX_DOT_GRAPH_HEIGHT tag can be used to set the maximum allows height \n+# (in pixels) of the graphs generated by dot. If a graph becomes larger than \n+# this value, doxygen will try to truncate the graph, so that it fits within \n+# the specified constraint. Beware that most browsers cannot cope with very \n+# large images.\n \n-DOT_GRAPH_MAX_NODES    = 50\n+MAX_DOT_GRAPH_HEIGHT   = 1024\n \n # The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the \n # graphs generated by dot. A depth value of 3 means that only nodes reachable \n # from the root by following a path via at most 3 edges will be shown. Nodes \n # that lay further from the root node will be omitted. Note that setting this \n # option to 1 or 2 may greatly reduce the computation time needed for large \n-# code bases. Also note that the size of a graph can be further restricted by \n-# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n+# code bases. Also note that a graph may be further truncated if the graph's \n+# image dimensions are not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH \n+# and MAX_DOT_GRAPH_HEIGHT). If 0 is used for the depth value (the default), \n+# the graph is not depth-constrained.\n \n MAX_DOT_GRAPH_DEPTH    = 0\n "}, {"sha": "6724b72ade28a426156017dfa47a4776819341f6", "filename": "libstdc++-v3/doc/html/api.html", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fapi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fapi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fapi.html?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -5,7 +5,7 @@\n      \n       <a class=\"ulink\" href=\"http://www.fsf.org/\" target=\"_top\">FSF\n       </a>\n-    </p></div><div><div class=\"legalnotice\"><a id=\"id375791\"></a><p>\n+    </p></div><div><div class=\"legalnotice\"><a id=\"id478877\"></a><p>\n       <a class=\"ulink\" href=\"17_intro/license.html\" target=\"_top\">License \n       </a>\n     </p></div></div></div><hr /></div><p>\n@@ -28,6 +28,9 @@\n     </p></li><li><p>\n       <a class=\"ulink\" href=\"libstdc++-html-USERS-4.2/index.html\" target=\"_top\">for the 4.2 release\n       </a>\n+    </p></li><li><p>\n+      <a class=\"ulink\" href=\"libstdc++-html-USERS-4.3/index.html\" target=\"_top\">for the 4.3 release\n+      </a>\n     </p></li><li><p>\n       <a class=\"ulink\" href=\"latest-doxygen/index.html\" target=\"_top\">\"the latest collection\"\n       </a>"}, {"sha": "f7ecb7d1acc6e52f83d6fdf8ea904089f6668d85", "filename": "libstdc++-v3/doc/xml/api.xml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fapi.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fapi.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fapi.xml?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -61,6 +61,12 @@ viewed online:\n       </ulink>\n     </para>\n   </listitem>\n+  <listitem>\n+    <para>\n+      <ulink url=\"libstdc++-html-USERS-4.3/index.html\">for the 4.3 release\n+      </ulink>\n+    </para>\n+  </listitem>\n   <listitem>\n     <para>\n       <ulink url=\"latest-doxygen/index.html\">&quot;the latest collection&quot;"}, {"sha": "a90f7b4105b2a42a7df4e8d81b7000af717e481f", "filename": "libstdc++-v3/include/bits/allocator.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Allocators -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -77,7 +77,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    * @brief  The \"standard\" allocator, as per [20.4].\n    *\n    *  Further details:\n-   *  http://gcc.gnu.org/onlinedocs/libstdc++/20_util/allocator.html\n+   *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt04ch11.html\n    */\n   template<typename _Tp>\n     class allocator: public __glibcxx_base_allocator<_Tp>"}, {"sha": "ae0f6cfbe092a694674be9da146a68ab01415a9c", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -231,7 +231,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     { };\n \n \n-  /// @brief  21.1.3.1  char_traits specializations\n+  /// 21.1.3.1  char_traits specializations\n   template<>\n     struct char_traits<char>\n     {\n@@ -301,7 +301,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n \n #ifdef _GLIBCXX_USE_WCHAR_T\n-  /// @brief  21.1.3.2  char_traits specializations\n+  /// 21.1.3.2  char_traits specializations\n   template<>\n     struct char_traits<wchar_t>\n     {"}, {"sha": "9d6655a0aad7b02f3554531f19c979fc9e6c53fd", "filename": "libstdc++-v3/include/bits/codecvt.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Locale support (codecvt) -*- C++ -*-\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n //  Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -46,7 +46,7 @@\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n \n-  /// @brief  Empty base class for codecvt facet [22.2.1.5].\n+  /// Empty base class for codecvt facet [22.2.1.5].\n   class codecvt_base\n   {\n   public:\n@@ -330,7 +330,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   template<typename _InternT, typename _ExternT, typename _StateT>\n     locale::id codecvt<_InternT, _ExternT, _StateT>::id;\n \n-  /// @brief class codecvt<char, char, mbstate_t> specialization.\n+  /// class codecvt<char, char, mbstate_t> specialization.\n   template<>\n     class codecvt<char, char, mbstate_t>\n     : public __codecvt_abstract_base<char, char, mbstate_t>\n@@ -388,7 +388,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   };\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n-  /// @brief  class codecvt<wchar_t, char, mbstate_t> specialization.\n+  /// class codecvt<wchar_t, char, mbstate_t> specialization.\n   template<>\n     class codecvt<wchar_t, char, mbstate_t>\n     : public __codecvt_abstract_base<wchar_t, char, mbstate_t>\n@@ -448,7 +448,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     };\n #endif //_GLIBCXX_USE_WCHAR_T\n \n-  /// @brief class codecvt_byname [22.2.1.6].\n+  /// class codecvt_byname [22.2.1.6].\n   template<typename _InternT, typename _ExternT, typename _StateT>\n     class codecvt_byname : public codecvt<_InternT, _ExternT, _StateT>\n     {"}, {"sha": "cab5812160ecd607d2a46da1079b39a6f5362133", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -780,7 +780,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     collate<wchar_t>::_M_transform(wchar_t*, const wchar_t*, size_t) const;\n #endif\n \n-  /// @brief  class collate_byname [22.2.4.2].\n+  /// class collate_byname [22.2.4.2].\n   template<typename _CharT>\n     class collate_byname : public collate<_CharT>\n     {"}, {"sha": "cb9c021f3536d57f51906fb7158c342e9638445f", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1511,7 +1511,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     use_facet<ctype<wchar_t> >(const locale& __loc);\n #endif //_GLIBCXX_USE_WCHAR_T\n \n-  /// @brief  class ctype_byname [22.2.1.2].\n+  /// class ctype_byname [22.2.1.2].\n   template<typename _CharT>\n     class ctype_byname : public ctype<_CharT>\n     {\n@@ -1912,7 +1912,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     numpunct<wchar_t>::_M_initialize_numpunct(__c_locale __cloc);\n #endif\n \n-  /// @brief  class numpunct_byname [22.2.3.2].\n+  /// class numpunct_byname [22.2.3.2].\n   template<typename _CharT>\n     class numpunct_byname : public numpunct<_CharT>\n     {"}, {"sha": "f2da433fc671f5f5107d969c72f09b202d6a0f3a", "filename": "libstdc++-v3/include/bits/locale_facets_nonio.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -674,7 +674,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   template<typename _CharT, typename _InIter>\n     locale::id time_get<_CharT, _InIter>::id;\n \n-  /// @brief  class time_get_byname [22.2.5.2].\n+  /// class time_get_byname [22.2.5.2].\n   template<typename _CharT, typename _InIter>\n     class time_get_byname : public time_get<_CharT, _InIter>\n     {\n@@ -798,7 +798,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   template<typename _CharT, typename _OutIter>\n     locale::id time_put<_CharT, _OutIter>::id;\n \n-  /// @brief  class time_put_byname [22.2.5.4].\n+  /// class time_put_byname [22.2.5.4].\n   template<typename _CharT, typename _OutIter>\n     class time_put_byname : public time_put<_CharT, _OutIter>\n     {\n@@ -1306,7 +1306,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t\t\t\t\t\t\t const char*);\n #endif\n \n-  /// @brief  class moneypunct_byname [22.2.6.4].\n+  /// class moneypunct_byname [22.2.6.4].\n   template<typename _CharT, bool _Intl>\n     class moneypunct_byname : public moneypunct<_CharT, _Intl>\n     {\n@@ -1887,7 +1887,7 @@ _GLIBCXX_END_LDBL_NAMESPACE\n     messages<wchar_t>::do_get(catalog, int, int, const wstring&) const;\n #endif\n \n-   /// @brief class messages_byname [22.2.7.2].\n+   /// class messages_byname [22.2.7.2].\n    template<typename _CharT>\n     class messages_byname : public messages<_CharT>\n     {"}, {"sha": "0f64488c2349170c7977190b812f6f777e6dfb74", "filename": "libstdc++-v3/include/debug/debug.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdebug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdebug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdebug.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -44,11 +44,19 @@\n */\n \n // Debug mode namespaces.\n+\n+/**\n+ * @namespace std::__debug\n+ * @brief GNU debug code, replaces standard behavior with debug behavior.\n+ */\n namespace std \n { \n   namespace __debug { } \n }\n \n+/** @namespace __gnu_debug\n+ *  @brief GNU debug classes for public use.\n+*/\n namespace __gnu_debug\n {\n   using namespace std::__debug;"}, {"sha": "a2e28f9d998b101a6817343cdf577d00c70a1170", "filename": "libstdc++-v3/include/ext/array_allocator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Farray_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Farray_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Farray_allocator.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -45,7 +45,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n  using std::size_t;\n  using std::ptrdiff_t;\n \n-  /// @brief  Base class.\n+  /// Base class.\n  template<typename _Tp>\n     class array_allocator_base\n     {"}, {"sha": "5e553b00af866f9bdc7bf101d0738bc4b27529e7", "filename": "libstdc++-v3/include/ext/bitmap_allocator.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -706,6 +706,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \t};\n     };\n \n+  /// Primary template\n   template<typename _Tp>\n     class bitmap_allocator : private free_list\n     {"}, {"sha": "e46d9675fd1e67dcf82bcb527d8bc2b50cb79045", "filename": "libstdc++-v3/include/ext/codecvt_specializations.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fcodecvt_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fcodecvt_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fcodecvt_specializations.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -47,7 +47,7 @@\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n-  /// @brief  Extension to use iconv for dealing with character encodings.\n+  /// Extension to use iconv for dealing with character encodings.\n   // This includes conversions and comparisons between various character\n   // sets.  This object encapsulates data that may need to be shared between\n   // char_traits, codecvt and ctype.\n@@ -206,7 +206,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     }\n   };\n \n-  /// @brief  encoding_char_traits.\n+  /// encoding_char_traits\n   // Custom traits type with encoding_state for the state type, and the\n   // associated fpos<encoding_state> for the position type, all other\n   // bits equivalent to the required char_traits instantiations.\n@@ -224,7 +224,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   using __gnu_cxx::encoding_state;\n \n-  /// @brief  codecvt<InternT, _ExternT, encoding_state> specialization.\n+  /// codecvt<InternT, _ExternT, encoding_state> specialization.\n   // This partial specialization takes advantage of iconv to provide\n   // code conversions between a large number of character encodings.\n   template<typename _InternT, typename _ExternT>"}, {"sha": "b9e43d67f90b524131ecfc43734d4b1f013a3ca6", "filename": "libstdc++-v3/include/ext/concurrence.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fconcurrence.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -240,7 +240,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       { return &_M_mutex; }\n   };\n \n-  /// @brief  Scoped lock idiom.\n+  /// Scoped lock idiom.\n   // Acquire the mutex here with a constructor call, then release with\n   // the destructor call in accordance with RAII style.\n   class __scoped_lock"}, {"sha": "e04072bce470d40ebce4403aeda08543bc5724a0", "filename": "libstdc++-v3/include/ext/enc_filebuf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fenc_filebuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fenc_filebuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fenc_filebuf.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -40,7 +40,7 @@\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n-  /// @brief  class enc_filebuf.\n+  /// class enc_filebuf.\n   template<typename _CharT>\n     class enc_filebuf\n     : public std::basic_filebuf<_CharT, encoding_char_traits<_CharT> >"}, {"sha": "08aa311f8b8b687e853082683ecec6abafa7c6f8", "filename": "libstdc++-v3/include/ext/mt_allocator.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -47,7 +47,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n   typedef void (*__destroy_handler)(void*);\n \n-  /// @brief  Base class for pool object.\n+  /// Base class for pool object.\n   struct __pool_base\n   {\n     // Using short int as type for the binmap implies we are never\n@@ -455,7 +455,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     };\n #endif\n \n-  /// @brief  Policy for shared __pool objects.\n+  /// Policy for shared __pool objects.\n   template<template <bool> class _PoolTp, bool _Thread>\n     struct __common_pool_policy : public __common_pool_base<_PoolTp, _Thread>\n     {\n@@ -550,7 +550,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     };\n #endif\n \n-  /// @brief  Policy for individual __pool objects.\n+  /// Policy for individual __pool objects.\n   template<typename _Tp, template <bool> class _PoolTp, bool _Thread>\n     struct __per_type_pool_policy \n     : public __per_type_pool_base<_Tp, _PoolTp, _Thread>\n@@ -565,7 +565,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n   };\n \n \n-  /// @brief  Base class for _Tp dependent member functions.\n+  /// Base class for _Tp dependent member functions.\n   template<typename _Tp>\n     class __mt_alloc_base \n     {\n@@ -621,7 +621,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n    *  the \"global\" list).\n    *\n    *  Further details:\n-   *  http://gcc.gnu.org/onlinedocs/libstdc++/ext/mt_allocator.html\n+   *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt12ch32.html\n    */\n   template<typename _Tp, \n \t   typename _Poolp = __common_pool_policy<__pool, __thread_default> >"}, {"sha": "bb39d17931f002b9883ee78b60e2f78f907f6a52", "filename": "libstdc++-v3/include/ext/pb_ds/tag_and_trait.hpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftag_and_trait.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftag_and_trait.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Ftag_and_trait.hpp?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -52,9 +52,8 @@\n \n /**\n  * @namespace __gnu_pbds\n- * @brief GNU extension policy-based data structures for public use.\n+ * @brief GNU extensions for policy-based data structures for public use.\n  */\n-\n namespace __gnu_pbds\n {\n   // A trivial iterator tag. Signifies that the iterators has none of"}, {"sha": "c4d2ef2157d400e9665788eae990e2f3aa9a2b45", "filename": "libstdc++-v3/include/ext/pool_allocator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -119,7 +119,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     };\n \n \n-  /// @brief  class __pool_alloc.\n+  /// class __pool_alloc.\n   template<typename _Tp>\n     class __pool_alloc : private __pool_alloc_base\n     {"}, {"sha": "6cb555a08a39c9e352fb9a914b990786da755fa9", "filename": "libstdc++-v3/include/ext/stdio_sync_filebuf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_sync_filebuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_sync_filebuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_sync_filebuf.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -47,7 +47,7 @@\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n-  /// @brief  class stdio_sync_filebuf.\n+  /// class stdio_sync_filebuf.\n   template<typename _CharT, typename _Traits = std::char_traits<_CharT> >\n     class stdio_sync_filebuf : public std::basic_streambuf<_CharT, _Traits>\n     {"}, {"sha": "a5aa725cdce87d9ad21f740324751bc3e85f3ca1", "filename": "libstdc++-v3/include/ext/throw_allocator.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -80,6 +80,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     std::tr1::mt19937 _M_generator;\n   };\n \n+  /// Thown by throw_allocator.\n   struct forced_exception_error : public std::exception\n   { };\n \n@@ -94,6 +95,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n #endif\n   }\n \n+  /// Base class.\n   class throw_allocator_base\n   {\n   public:\n@@ -184,7 +186,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     static size_t \t\t_S_label;\n   };\n \n-\n+  /// Allocator class with logging and exception control.\n   template<typename T>\n     class throw_allocator : public throw_allocator_base\n     {\n@@ -309,7 +311,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n   twister_rand_gen throw_allocator_base::_S_g;\n \n-  throw_allocator_base::map_type\n+  throw_allocator_base::map_type \n   throw_allocator_base::_S_map;\n \n   double throw_allocator_base::_S_throw_prob;"}, {"sha": "b7cd95434e6c9edea17b1be20a40279bcbb0c307", "filename": "libstdc++-v3/include/ext/typelist.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftypelist.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftypelist.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftypelist.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -50,6 +50,9 @@\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n+/** @namespace __gnu_cxx::typelist\n+ *  @brief GNU typelist extensions for public compile-time use.\n+*/\n namespace typelist\n {\n   struct null_type { };"}, {"sha": "b713ee7a41091fc9ec70630fd7358e6c1dc152e4", "filename": "libstdc++-v3/include/parallel/base.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -47,14 +47,19 @@\n \n \n // Parallel mode namespaces.\n+\n+/**\n+ * @namespace std::__parallel\n+ * @brief GNU parallel code, replaces standard behavior with parallel behavior.\n+ */\n namespace std \n { \n   namespace __parallel { } \n }\n \n /**\n  * @namespace __gnu_parallel\n- * @brief GNU parallel classes for public use.\n+ * @brief GNU parallel code for public use.\n  */\n namespace __gnu_parallel\n {"}, {"sha": "b956a9b0119073c15cad6b51eadd820bd3edb112", "filename": "libstdc++-v3/include/std/date_time", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdate_time", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdate_time", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdate_time?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -45,7 +45,8 @@\n namespace std\n {\n   // duration types\n-  \n+\n+  /// nanoseconds\n   class nanoseconds\n   {\n   public:\n@@ -90,7 +91,7 @@ namespace std\n   class minutes;\n   class hours;\n   \n-  // timepoint type\n+  /// timepoint type\n   class system_time\n   {\n   public:"}, {"sha": "c8973d147355dce786de99a08bbd7e76976cf3b7", "filename": "libstdc++-v3/include/std/system_error", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -53,6 +53,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   extern const error_category& system_category;\n \n+  /// error_category\n   struct error_category\n   {\n     error_category() { }\n@@ -78,6 +79,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     operator=(const error_category&);\n   };\n \n+  /// error_code\n   struct error_code\n   {\n     error_code() throw()\n@@ -133,6 +135,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     const error_category* \t_M_cat;\n   };\n \n+  /// Thrown to indicate error code of underlying system.\n   class system_error : public std::runtime_error\n   {\n   private:"}, {"sha": "3dda5301644f9034794b37f51b0b2c52f4f97b52", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -205,6 +205,7 @@ namespace std\n \t}\n     };\n \n+  /// tuple\n   template<typename... _Elements> \n     class tuple : public _Tuple_impl<0, _Elements...>\n     {\n@@ -275,9 +276,11 @@ namespace std\n \t}\n     };\n \n-  template<> class tuple<> { };\n \n-  // 2-element tuple, with construction and assignment from a pair.\n+  template<>  \n+    class tuple<> { };\n+\n+  /// tuple (2-element), with construction and assignment from a pair.\n   template<typename _T1, typename _T2>\n     class tuple<_T1, _T2> : public _Tuple_impl<0, _T1, _T2>\n     {\n@@ -393,7 +396,7 @@ namespace std\n   template<typename _Tp>\n     struct tuple_size;\n \n-  /// @brief class tuple_size\n+  /// class tuple_size\n   template<typename... _Elements>\n     struct tuple_size<tuple<_Elements...> >\n     {"}, {"sha": "1f9a2d9f72db56162940083046c53dcb3dd3cd45", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 44, "deletions": 6, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // <type_traits> -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -63,6 +63,8 @@\n namespace std\n {\n   // Primary classification traits.\n+\n+  /// is_lvalue_reference\n   template<typename>\n     struct is_lvalue_reference\n     : public false_type { };\n@@ -71,6 +73,7 @@ namespace std\n     struct is_lvalue_reference<_Tp&>\n     : public true_type { };\n \n+  /// is_rvalue_reference\n   template<typename>\n     struct is_rvalue_reference\n     : public false_type { };\n@@ -80,13 +83,17 @@ namespace std\n     : public true_type { };\n \n   // Secondary classification traits.\n+\n+  /// is_reference\n   template<typename _Tp>\n     struct is_reference\n     : public integral_constant<bool, (is_lvalue_reference<_Tp>::value\n \t\t\t\t      || is_rvalue_reference<_Tp>::value)>\n     { };\n \n   // Reference transformations.\n+\n+  /// remove_reference\n   template<typename _Tp>\n     struct remove_reference\n     { typedef _Tp   type; };\n@@ -113,6 +120,7 @@ namespace std\n     struct __add_lvalue_reference_helper<_Tp, false, true>\n     { typedef typename remove_reference<_Tp>::type&   type; };\n \n+  /// add_lvalue_reference\n   template<typename _Tp>\n     struct add_lvalue_reference\n     : public __add_lvalue_reference_helper<_Tp>\n@@ -127,12 +135,14 @@ namespace std\n     struct __add_rvalue_reference_helper<_Tp, true>\n     { typedef _Tp&&   type; };\n \n+  /// add_rvalue_reference\n   template<typename _Tp>\n     struct add_rvalue_reference\n     : public __add_rvalue_reference_helper<_Tp>\n     { };\n \n   // Scalar properties and transformations.\n+\n   template<typename _Tp,\n \t   bool = is_integral<_Tp>::value,\n \t   bool = is_floating_point<_Tp>::value>\n@@ -148,58 +158,70 @@ namespace std\n     : public integral_constant<bool, _Tp(-1) < _Tp(0)>\n     { };\n \n+  /// is_signed\n   template<typename _Tp>\n     struct is_signed\n     : public integral_constant<bool, __is_signed_helper<_Tp>::value>\n     { };\n \n+  /// is_unsigned\n   template<typename _Tp>\n     struct is_unsigned\n     : public integral_constant<bool, (is_arithmetic<_Tp>::value\n \t\t\t\t      && !is_signed<_Tp>::value)>\n     { };\n \n   // Member introspection.\n+\n+  /// is_pod\n   template<typename _Tp>\n     struct is_pod\n     : public integral_constant<bool, __is_pod(_Tp)>\n     { };\n \n+  /// has_trivial_default_constructor\n   template<typename _Tp>\n     struct has_trivial_default_constructor\n     : public integral_constant<bool, __has_trivial_constructor(_Tp)>\n     { };\n \n+  /// has_trivial_copy_constructor\n   template<typename _Tp>\n     struct has_trivial_copy_constructor\n     : public integral_constant<bool, __has_trivial_copy(_Tp)>\n     { };\n \n+  /// has_trivial_assign\n   template<typename _Tp>\n     struct has_trivial_assign\n     : public integral_constant<bool, __has_trivial_assign(_Tp)>\n     { };\n \n+  /// has_trivial_destructor\n   template<typename _Tp>\n     struct has_trivial_destructor\n     : public integral_constant<bool, __has_trivial_destructor(_Tp)>\n     { };\n \n+  /// has_nothrow_default_destructor\n   template<typename _Tp>\n     struct has_nothrow_default_constructor\n     : public integral_constant<bool, __has_nothrow_constructor(_Tp)>\n     { };\n \n+  /// has_nothrow_copy_destructor\n   template<typename _Tp>\n     struct has_nothrow_copy_constructor\n     : public integral_constant<bool, __has_nothrow_copy(_Tp)>\n     { };\n \n+  /// has_nothrow_assign\n   template<typename _Tp>\n     struct has_nothrow_assign\n     : public integral_constant<bool, __has_nothrow_assign(_Tp)>\n     { };\n \n+  /// is_base_of\n   template<typename _Base, typename _Derived>\n     struct is_base_of\n     : public integral_constant<bool, __is_base_of(_Base, _Derived)>\n@@ -232,7 +254,7 @@ namespace std\n   template<typename _From, typename _To,\n \t   bool = (is_void<_From>::value || is_void<_To>::value\n \t\t   || is_function<_To>::value || is_array<_To>::value\n-\t\t   // This special case is here only to avoid warnings.\t\t   \n+\t\t   // This special case is here only to avoid warnings.\n \t\t   || (is_floating_point<typename\n \t\t       remove_reference<_From>::type>::value\n \t\t       && __is_int_or_cref<_To>::__value))>\n@@ -252,6 +274,7 @@ namespace std\n \n   // XXX FIXME\n   // The C++0x specifications are different, see N2255.\n+  /// is_convertible\n   template<typename _From, typename _To>\n     struct is_convertible\n     : public integral_constant<bool,\n@@ -268,6 +291,16 @@ namespace std\n       };\n     };\n \n+  /**\n+   *  @brief Alignment type.\n+   *\n+   *  The value of _Align is a default-alignment which shall be the\n+   *  most stringent alignment requirement for any C++ object type\n+   *  whose size is no greater than _Len (3.9). The member typedef\n+   *  type shall be a POD type suitable for use as uninitialized\n+   *  storage for any object whose size is at most _Len and whose\n+   *  alignment is a divisor of _Align.\n+  */\n   template<std::size_t _Len, std::size_t _Align =\n \t   __alignof__(typename __aligned_storage_msa<_Len>::__type)>\n     struct aligned_storage\n@@ -281,21 +314,25 @@ namespace std\n \n \n   // Define a nested type if some predicate holds.\n+  /// Primary template.\n   template<bool, typename _Tp = void>\n     struct enable_if \n     { };\n \n+  /// Partial specialization for true.\n   template<typename _Tp>\n     struct enable_if<true, _Tp>\n     { typedef _Tp type; };\n \n \n-  // Like a conditional expression, but for types. If true, first, if\n-  // false, second.\n+  // A conditional expression, but for types. \n+  // If true, first, if false, second.\n+  /// Primary template.\n   template<bool _Cond, typename _Iftrue, typename _Iffalse>\n     struct conditional\n     { typedef _Iftrue type; };\n \n+  /// Partial specialization for false.\n   template<typename _Iftrue, typename _Iffalse>\n     struct conditional<false, _Iftrue, _Iffalse>\n     { typedef _Iffalse type; };\n@@ -321,6 +358,7 @@ namespace std\n     struct __decay_selector<_Up, false, true>\n     { typedef typename add_pointer<_Up>::type __type; };\n \n+  /// decay\n   template<typename _Tp> \n     struct decay \n     { \n@@ -428,9 +466,9 @@ namespace std\n       typedef typename conditional<__b1, __smallest, __cond_type>::type __type;\n     };\n \n-  // Primary class template.\n   // Given an integral/enum type, return the corresponding unsigned\n   // integer type.\n+  /// Primary template.\n   template<typename _Tp>\n     struct make_unsigned \n     { typedef typename __make_unsigned_selector<_Tp>::__type type; };\n@@ -503,9 +541,9 @@ namespace std\n       typedef typename conditional<__b1, __smallest, __cond_type>::type __type;\n     };\n \n-  // Primary class template.\n   // Given an integral/enum type, return the corresponding signed\n   // integer type.\n+  /// Primary template.\n   template<typename _Tp>\n     struct make_signed \n     { typedef typename __make_signed_selector<_Tp>::__type type; };"}, {"sha": "bf61a6fcf748bb838c86ed2fccfc7a4efda1c392", "filename": "libstdc++-v3/include/tr1/bessel_function.tcc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -61,14 +61,7 @@ namespace tr1\n \n   // [5.2] Special functions\n \n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -633,9 +626,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "8c0b1b53f8e1d0d8df2a464e4c96ce3e6dba6e0e", "filename": "libstdc++-v3/include/tr1/beta_function.tcc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbeta_function.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbeta_function.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbeta_function.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -59,14 +59,7 @@ namespace tr1\n \n   // [5.2] Special functions\n \n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -203,9 +196,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "63e6a2e5fdafa91f3df47c23dc64c7818fd598e7", "filename": "libstdc++-v3/include/tr1/cmath", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // TR1 cmath -*- C++ -*-\n \n-// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,15 +56,10 @@\n #  undef _GLIBCXX_INCLUDE_AS_TR1\n #endif\n \n-/**\n- * @defgroup tr1_math_spec_func Mathematical Special Functions\n- * A collection of advanced mathematical special functions.\n- * @{\n- */\n #include <bits/stl_algobase.h>\n #include <limits>\n-\n #include <tr1/type_traits>\n+\n #include <tr1/gamma.tcc>\n #include <tr1/bessel_function.tcc>\n #include <tr1/beta_function.tcc>\n@@ -77,12 +72,16 @@\n #include <tr1/poly_laguerre.tcc>\n #include <tr1/riemann_zeta.tcc>\n \n-// namespace std::tr1\n namespace std\n {\n namespace tr1\n {\n-  //  5.2.1.1  Associated Laguerre polynomials.\n+  /**\n+   * @addtogroup tr1_math_spec_func Mathematical Special Functions\n+   * A collection of advanced mathematical special functions.\n+   * @{\n+   */\n+\n   inline float\n   assoc_laguerref(unsigned int __n, unsigned int __m, float __x)\n   { return __detail::__assoc_laguerre<float>(__n, __m, __x); }\n@@ -93,6 +92,7 @@ namespace tr1\n     return __detail::__assoc_laguerre<long double>(__n, __m, __x);\n   }\n \n+  ///  5.2.1.1  Associated Laguerre polynomials.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     assoc_laguerre(unsigned int __n, unsigned int __m, _Tp __x)\n@@ -101,7 +101,6 @@ namespace tr1\n       return __detail::__assoc_laguerre<__type>(__n, __m, __x);\n     }\n \n-  //  5.2.1.2  Associated Legendre functions.\n   inline float\n   assoc_legendref(unsigned int __l, unsigned int __m, float __x)\n   { return __detail::__assoc_legendre_p<float>(__l, __m, __x); }\n@@ -110,6 +109,7 @@ namespace tr1\n   assoc_legendrel(unsigned int __l, unsigned int __m, long double __x)\n   { return __detail::__assoc_legendre_p<long double>(__l, __m, __x); }\n \n+  ///  5.2.1.2  Associated Legendre functions.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     assoc_legendre(unsigned int __l, unsigned int __m, _Tp __x)\n@@ -118,7 +118,6 @@ namespace tr1\n       return __detail::__assoc_legendre_p<__type>(__l, __m, __x);\n     }\n \n-  //  5.2.1.3  Beta functions.\n   inline float\n   betaf(float __x, float __y)\n   { return __detail::__beta<float>(__x, __y); }\n@@ -127,6 +126,7 @@ namespace tr1\n   betal(long double __x, long double __y)\n   { return __detail::__beta<long double>(__x, __y); }\n \n+  ///  5.2.1.3  Beta functions.\n   template<typename _Tpx, typename _Tpy>\n     inline typename __gnu_cxx::__promote_2<_Tpx, _Tpy>::__type\n     beta(_Tpx __x, _Tpy __y)\n@@ -135,7 +135,6 @@ namespace tr1\n       return __detail::__beta<__type>(__x, __y);\n     }\n \n-  //  5.2.1.4  Complete elliptic integrals of the first kind.\n   inline float\n   comp_ellint_1f(float __k)\n   { return __detail::__comp_ellint_1<float>(__k); }\n@@ -144,6 +143,7 @@ namespace tr1\n   comp_ellint_1l(long double __k)\n   { return __detail::__comp_ellint_1<long double>(__k); }\n \n+  ///  5.2.1.4  Complete elliptic integrals of the first kind.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     comp_ellint_1(_Tp __k)\n@@ -152,7 +152,6 @@ namespace tr1\n       return __detail::__comp_ellint_1<__type>(__k);\n     }\n \n-  //  5.2.1.5  Complete elliptic integrals of the second kind.\n   inline float\n   comp_ellint_2f(float __k)\n   { return __detail::__comp_ellint_2<float>(__k); }\n@@ -161,6 +160,7 @@ namespace tr1\n   comp_ellint_2l(long double __k)\n   { return __detail::__comp_ellint_2<long double>(__k); }\n \n+  ///  5.2.1.5  Complete elliptic integrals of the second kind.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     comp_ellint_2(_Tp __k)\n@@ -169,7 +169,6 @@ namespace tr1\n       return __detail::__comp_ellint_2<__type>(__k);\n     }\n \n-  //  5.2.1.6  Complete elliptic integrals of the third kind.\n   inline float\n   comp_ellint_3f(float __k, float __nu)\n   { return __detail::__comp_ellint_3<float>(__k, __nu); }\n@@ -178,6 +177,7 @@ namespace tr1\n   comp_ellint_3l(long double __k, long double __nu)\n   { return __detail::__comp_ellint_3<long double>(__k, __nu); }\n \n+  ///  5.2.1.6  Complete elliptic integrals of the third kind.\n   template<typename _Tp, typename _Tpn>\n     inline typename __gnu_cxx::__promote_2<_Tp, _Tpn>::__type\n     comp_ellint_3(_Tp __k, _Tpn __nu)\n@@ -186,7 +186,6 @@ namespace tr1\n       return __detail::__comp_ellint_3<__type>(__k, __nu);\n     }\n \n-  //  5.2.1.7  Confluent hypergeometric functions.\n   inline float\n   conf_hypergf(float __a, float __c, float __x)\n   { return __detail::__conf_hyperg<float>(__a, __c, __x); }\n@@ -195,6 +194,7 @@ namespace tr1\n   conf_hypergl(long double __a, long double __c, long double __x)\n   { return __detail::__conf_hyperg<long double>(__a, __c, __x); }\n \n+  ///  5.2.1.7  Confluent hypergeometric functions.\n   template<typename _Tpa, typename _Tpc, typename _Tp>\n     inline typename __gnu_cxx::__promote_3<_Tpa, _Tpc, _Tp>::__type\n     conf_hyperg(_Tpa __a, _Tpc __c, _Tp __x)\n@@ -203,7 +203,6 @@ namespace tr1\n       return __detail::__conf_hyperg<__type>(__a, __c, __x);\n     }\n \n-  //  5.2.1.8  Regular modified cylindrical Bessel functions.\n   inline float\n   cyl_bessel_if(float __nu, float __x)\n   { return __detail::__cyl_bessel_i<float>(__nu, __x); }\n@@ -212,6 +211,7 @@ namespace tr1\n   cyl_bessel_il(long double __nu, long double __x)\n   { return __detail::__cyl_bessel_i<long double>(__nu, __x); }\n \n+  ///  5.2.1.8  Regular modified cylindrical Bessel functions.\n   template<typename _Tpnu, typename _Tp>\n     inline typename __gnu_cxx::__promote_2<_Tpnu, _Tp>::__type\n     cyl_bessel_i(_Tpnu __nu, _Tp __x)\n@@ -220,7 +220,6 @@ namespace tr1\n       return __detail::__cyl_bessel_i<__type>(__nu, __x);\n     }\n \n-  //  5.2.1.9  Cylindrical Bessel functions (of the first kind).\n   inline float\n   cyl_bessel_jf(float __nu, float __x)\n   { return __detail::__cyl_bessel_j<float>(__nu, __x); }\n@@ -229,6 +228,7 @@ namespace tr1\n   cyl_bessel_jl(long double __nu, long double __x)\n   { return __detail::__cyl_bessel_j<long double>(__nu, __x); }\n \n+  ///  5.2.1.9  Cylindrical Bessel functions (of the first kind).\n   template<typename _Tpnu, typename _Tp>\n     inline typename __gnu_cxx::__promote_2<_Tpnu, _Tp>::__type\n     cyl_bessel_j(_Tpnu __nu, _Tp __x)\n@@ -237,7 +237,6 @@ namespace tr1\n       return __detail::__cyl_bessel_j<__type>(__nu, __x);\n     }\n \n-  //  5.2.1.10  Irregular modified cylindrical Bessel functions.\n   inline float\n   cyl_bessel_kf(float __nu, float __x)\n   { return __detail::__cyl_bessel_k<float>(__nu, __x); }\n@@ -246,6 +245,7 @@ namespace tr1\n   cyl_bessel_kl(long double __nu, long double __x)\n   { return __detail::__cyl_bessel_k<long double>(__nu, __x); }\n \n+  ///  5.2.1.10  Irregular modified cylindrical Bessel functions.\n   template<typename _Tpnu, typename _Tp>\n     inline typename __gnu_cxx::__promote_2<_Tpnu, _Tp>::__type\n     cyl_bessel_k(_Tpnu __nu, _Tp __x)\n@@ -254,7 +254,6 @@ namespace tr1\n       return __detail::__cyl_bessel_k<__type>(__nu, __x);\n     }\n \n-  //  5.2.1.11  Cylindrical Neumann functions.\n   inline float\n   cyl_neumannf(float __nu, float __x)\n   { return __detail::__cyl_neumann_n<float>(__nu, __x); }\n@@ -263,6 +262,7 @@ namespace tr1\n   cyl_neumannl(long double __nu, long double __x)\n   { return __detail::__cyl_neumann_n<long double>(__nu, __x); }\n \n+  ///  5.2.1.11  Cylindrical Neumann functions.\n   template<typename _Tpnu, typename _Tp>\n     inline typename __gnu_cxx::__promote_2<_Tpnu, _Tp>::__type\n     cyl_neumann(_Tpnu __nu, _Tp __x)\n@@ -271,7 +271,6 @@ namespace tr1\n       return __detail::__cyl_neumann_n<__type>(__nu, __x);\n     }\n \n-  //  5.2.1.12  Incomplete elliptic integrals of the first kind.\n   inline float\n   ellint_1f(float __k, float __phi)\n   { return __detail::__ellint_1<float>(__k, __phi); }\n@@ -280,6 +279,7 @@ namespace tr1\n   ellint_1l(long double __k, long double __phi)\n   { return __detail::__ellint_1<long double>(__k, __phi); }\n \n+  ///  5.2.1.12  Incomplete elliptic integrals of the first kind.\n   template<typename _Tp, typename _Tpp>\n     inline typename __gnu_cxx::__promote_2<_Tp, _Tpp>::__type\n     ellint_1(_Tp __k, _Tpp __phi)\n@@ -288,7 +288,6 @@ namespace tr1\n       return __detail::__ellint_1<__type>(__k, __phi);\n     }\n \n-  //  5.2.1.13  Incomplete elliptic integrals of the second kind.\n   inline float\n   ellint_2f(float __k, float __phi)\n   { return __detail::__ellint_2<float>(__k, __phi); }\n@@ -297,6 +296,7 @@ namespace tr1\n   ellint_2l(long double __k, long double __phi)\n   { return __detail::__ellint_2<long double>(__k, __phi); }\n \n+  ///  5.2.1.13  Incomplete elliptic integrals of the second kind.\n   template<typename _Tp, typename _Tpp>\n     inline typename __gnu_cxx::__promote_2<_Tp, _Tpp>::__type\n     ellint_2(_Tp __k, _Tpp __phi)\n@@ -305,7 +305,6 @@ namespace tr1\n       return __detail::__ellint_2<__type>(__k, __phi);\n     }\n \n-  //  5.2.1.14  Incomplete elliptic integrals of the third kind.\n   inline float\n   ellint_3f(float __k, float __nu, float __phi)\n   { return __detail::__ellint_3<float>(__k, __nu, __phi); }\n@@ -314,6 +313,7 @@ namespace tr1\n   ellint_3l(long double __k, long double __nu, long double __phi)\n   { return __detail::__ellint_3<long double>(__k, __nu, __phi); }\n \n+  ///  5.2.1.14  Incomplete elliptic integrals of the third kind.\n   template<typename _Tp, typename _Tpn, typename _Tpp>\n     inline typename __gnu_cxx::__promote_3<_Tp, _Tpn, _Tpp>::__type\n     ellint_3(_Tp __k, _Tpn __nu, _Tpp __phi)\n@@ -322,7 +322,6 @@ namespace tr1\n       return __detail::__ellint_3<__type>(__k, __nu, __phi);\n     }\n \n-  //  5.2.1.15  Exponential integrals.\n   inline float\n   expintf(float __x)\n   { return __detail::__expint<float>(__x); }\n@@ -331,6 +330,7 @@ namespace tr1\n   expintl(long double __x)\n   { return __detail::__expint<long double>(__x); }\n \n+  ///  5.2.1.15  Exponential integrals.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     expint(_Tp __x)\n@@ -339,7 +339,6 @@ namespace tr1\n       return __detail::__expint<__type>(__x);\n     }\n \n-  //  5.2.1.16  Hermite polynomials.\n   inline float\n   hermitef(unsigned int __n, float __x)\n   { return __detail::__poly_hermite<float>(__n, __x); }\n@@ -348,6 +347,7 @@ namespace tr1\n   hermitel(unsigned int __n, long double __x)\n   { return __detail::__poly_hermite<long double>(__n, __x); }\n \n+  ///  5.2.1.16  Hermite polynomials.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     hermite(unsigned int __n, _Tp __x)\n@@ -356,7 +356,6 @@ namespace tr1\n       return __detail::__poly_hermite<__type>(__n, __x);\n     }\n \n-  //  5.2.1.17  Hypergeometric functions.\n   inline float\n   hypergf(float __a, float __b, float __c, float __x)\n   { return __detail::__hyperg<float>(__a, __b, __c, __x); }\n@@ -365,6 +364,7 @@ namespace tr1\n   hypergl(long double __a, long double __b, long double __c, long double __x)\n   { return __detail::__hyperg<long double>(__a, __b, __c, __x); }\n \n+  ///  5.2.1.17  Hypergeometric functions.\n   template<typename _Tpa, typename _Tpb, typename _Tpc, typename _Tp>\n     inline typename __gnu_cxx::__promote_4<_Tpa, _Tpb, _Tpc, _Tp>::__type\n     hyperg(_Tpa __a, _Tpb __b, _Tpc __c, _Tp __x)\n@@ -373,7 +373,6 @@ namespace tr1\n       return __detail::__hyperg<__type>(__a, __b, __c, __x);\n     }\n \n-  //  5.2.1.18  Laguerre polynomials.\n   inline float\n   laguerref(unsigned int __n, float __x)\n   { return __detail::__laguerre<float>(__n, __x); }\n@@ -382,6 +381,7 @@ namespace tr1\n   laguerrel(unsigned int __n, long double __x)\n   { return __detail::__laguerre<long double>(__n, __x); }\n \n+  ///  5.2.1.18  Laguerre polynomials.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     laguerre(unsigned int __n, _Tp __x)\n@@ -390,7 +390,6 @@ namespace tr1\n       return __detail::__laguerre<__type>(__n, __x);\n     }\n \n-  //  5.2.1.19  Legendre polynomials.\n   inline float\n   legendref(unsigned int __n, float __x)\n   { return __detail::__poly_legendre_p<float>(__n, __x); }\n@@ -399,6 +398,7 @@ namespace tr1\n   legendrel(unsigned int __n, long double __x)\n   { return __detail::__poly_legendre_p<long double>(__n, __x); }\n \n+  ///  5.2.1.19  Legendre polynomials.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     legendre(unsigned int __n, _Tp __x)\n@@ -407,7 +407,6 @@ namespace tr1\n       return __detail::__poly_legendre_p<__type>(__n, __x);\n     }\n \n-  //  5.2.1.20  Riemann zeta function.\n   inline float\n   riemann_zetaf(float __x)\n   { return __detail::__riemann_zeta<float>(__x); }\n@@ -416,6 +415,7 @@ namespace tr1\n   riemann_zetal(long double __x)\n   { return __detail::__riemann_zeta<long double>(__x); }\n \n+  ///  5.2.1.20  Riemann zeta function.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     riemann_zeta(_Tp __x)\n@@ -424,7 +424,6 @@ namespace tr1\n       return __detail::__riemann_zeta<__type>(__x);\n     }\n \n-  //  5.2.1.21  Spherical Bessel functions.\n   inline float\n   sph_besself(unsigned int __n, float __x)\n   { return __detail::__sph_bessel<float>(__n, __x); }\n@@ -433,6 +432,7 @@ namespace tr1\n   sph_bessell(unsigned int __n, long double __x)\n   { return __detail::__sph_bessel<long double>(__n, __x); }\n \n+  ///  5.2.1.21  Spherical Bessel functions.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     sph_bessel(unsigned int __n, _Tp __x)\n@@ -441,7 +441,6 @@ namespace tr1\n       return __detail::__sph_bessel<__type>(__n, __x);\n     }\n \n-  //  5.2.1.22  Spherical associated Legendre functions.\n   inline float\n   sph_legendref(unsigned int __l, unsigned int __m, float __theta)\n   { return __detail::__sph_legendre<float>(__l, __m, __theta); }\n@@ -450,6 +449,7 @@ namespace tr1\n   sph_legendrel(unsigned int __l, unsigned int __m, long double __theta)\n   { return __detail::__sph_legendre<long double>(__l, __m, __theta); }\n \n+  ///  5.2.1.22  Spherical associated Legendre functions.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     sph_legendre(unsigned int __l, unsigned int __m, _Tp __theta)\n@@ -458,7 +458,6 @@ namespace tr1\n       return __detail::__sph_legendre<__type>(__l, __m, __theta);\n     }\n \n-  //  5.2.1.23  Spherical Neumann functions.\n   inline float\n   sph_neumannf(unsigned int __n, float __x)\n   { return __detail::__sph_neumann<float>(__n, __x); }\n@@ -467,6 +466,7 @@ namespace tr1\n   sph_neumannl(unsigned int __n, long double __x)\n   { return __detail::__sph_neumann<long double>(__n, __x); }\n \n+  ///  5.2.1.23  Spherical Neumann functions.\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     sph_neumann(unsigned int __n, _Tp __x)\n@@ -475,7 +475,7 @@ namespace tr1\n       return __detail::__sph_neumann<__type>(__n, __x);\n     }\n \n-  /* @} */ // group tr1_math_spec_func\n+  /* @} */ // tr1_math_spec_func\n }\n }\n "}, {"sha": "404cc278cf2399e5a147e146f0f3280c34bf2d16", "filename": "libstdc++-v3/include/tr1/ell_integral.tcc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fell_integral.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -55,14 +55,7 @@ namespace tr1\n \n   // [5.2] Special functions\n \n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -753,9 +746,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "5dff27c0823d6ad95e66748562e5cab0b139bcd1", "filename": "libstdc++-v3/include/tr1/exp_integral.tcc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fexp_integral.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fexp_integral.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fexp_integral.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -60,14 +60,7 @@ namespace tr1\n \n   // [5.2] Special functions\n \n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -530,9 +523,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "892dacdeccea615c045fe057bcfd3380b2be94af", "filename": "libstdc++-v3/include/tr1/gamma.tcc", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fgamma.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fgamma.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fgamma.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -58,15 +58,7 @@ namespace std\n {\n namespace tr1\n {\n-\n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -477,9 +469,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "5e6902f98ed149600aa14fd9a8089dcfda61c9be", "filename": "libstdc++-v3/include/tr1/hypergeometric.tcc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhypergeometric.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhypergeometric.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhypergeometric.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -54,14 +54,7 @@ namespace tr1\n \n   // [5.2] Special functions\n \n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -780,9 +773,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "8c3f8770b3647dccb77409981423c397da7772dc", "filename": "libstdc++-v3/include/tr1/legendre_function.tcc", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -59,14 +59,7 @@ namespace tr1\n \n   // [5.2] Special functions\n \n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -161,7 +154,8 @@ namespace tr1\n           _Tp __p_mm = _Tp(1);\n           if (__m > 0)\n             {\n-              //  Two square roots seem more accurate more of the time than just one.\n+              //  Two square roots seem more accurate more of the time\n+              //  than just one.\n               _Tp __root = std::sqrt(_Tp(1) - __x) * std::sqrt(_Tp(1) + __x);\n               _Tp __fact = _Tp(1);\n               for (unsigned int __i = 1; __i <= __m; ++__i)\n@@ -310,9 +304,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "98aab8d4f97038e99f388ca2f275d506954aeca5", "filename": "libstdc++-v3/include/tr1/modified_bessel_func.tcc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmodified_bessel_func.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmodified_bessel_func.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmodified_bessel_func.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -61,14 +61,7 @@ namespace tr1\n \n   // [5.2] Special functions\n \n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -442,9 +435,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "9851e8056ede633a7d0f97d531c79e13058860b2", "filename": "libstdc++-v3/include/tr1/poly_hermite.tcc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_hermite.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_hermite.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_hermite.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -52,14 +52,7 @@ namespace tr1\n \n   // [5.2] Special functions\n \n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -130,9 +123,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "24cdd1813215d7adf6a343b65ef22f0f81338c09", "filename": "libstdc++-v3/include/tr1/poly_laguerre.tcc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_laguerre.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_laguerre.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fpoly_laguerre.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -54,14 +54,7 @@ namespace tr1\n \n   // [5.2] Special functions\n \n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -335,9 +328,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "62512f85be13b4255495a2da45c0281558c2713d", "filename": "libstdc++-v3/include/tr1/riemann_zeta.tcc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Friemann_zeta.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Friemann_zeta.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Friemann_zeta.tcc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // Special functions -*- C++ -*-\n \n-// Copyright (C) 2006-2007\n+// Copyright (C) 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -57,14 +57,7 @@ namespace tr1\n \n   // [5.2] Special functions\n \n-  /**\n-   * @ingroup tr1_math_spec_func\n-   * @{\n-   */\n-\n-  //\n   // Implementation-space details.\n-  //\n   namespace __detail\n   {\n \n@@ -441,9 +434,6 @@ namespace tr1\n     }\n \n   } // namespace std::tr1::__detail\n-\n-  /* @} */ // group tr1_math_spec_func\n-\n }\n }\n "}, {"sha": "a07a193679b55d858fc3c5cc68f78c1561bd73fa", "filename": "libstdc++-v3/include/tr1/special_function_util.h", "status": "modified", "additions": 13, "deletions": 20, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fspecial_function_util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fspecial_function_util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fspecial_function_util.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -42,7 +42,6 @@\n #ifndef _GLIBCXX_TR1_SPECIAL_FUNCTION_UTIL_H\n #define _GLIBCXX_TR1_SPECIAL_FUNCTION_UTIL_H 1\n \n-// namespace std::tr1\n namespace std\n {\n namespace tr1\n@@ -51,21 +50,17 @@ namespace tr1\n   namespace __detail\n   {\n \n-    ///\n-    ///  @brief  A class to encapsulate type dependent floating point\n-    ///          constants.  Not everything will be able to be expressed\n-    ///          as type logic.\n-    ///\n-    template <typename _Tp>\n+    /// A class to encapsulate type dependent floating point\n+    /// constants.  Not everything will be able to be expressed as\n+    /// type logic.\n+    template<typename _Tp>\n     struct __floating_point_constant\n     {\n       static const _Tp __value;\n     };\n \n \n-    ///\n-    ///  @brief  A structure for numeric constants.\n-    ///\n+    /// A structure for numeric constants.\n     template<typename _Tp>\n       struct __numeric_constants\n       {\n@@ -111,35 +106,33 @@ namespace tr1\n       };\n \n \n-    ///\n-    ///  @brief  This is a wrapper for the isnan function.\n-    ///          Otherwise, for NaN, all comparisons result in false.\n-    ///          If/when we build a std::isnan out of intrinsics, this\n-    ///          will disappear completely in favor of std::isnan.\n-    ///\n #if _GLIBCXX_USE_C99_MATH && !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC\n \n-    template <typename _Tp>\n+    /// This is a wrapper for the isnan function. Otherwise, for NaN,\n+    /// all comparisons result in false. If/when we build a std::isnan\n+    /// out of intrinsics, this will disappear completely in favor of\n+    /// std::isnan.\n+    template<typename _Tp>\n     inline bool __isnan(const _Tp __x)\n     {\n       return std::isnan(__x);\n     }\n \n #else\n \n-    template <typename _Tp>\n+    template<typename _Tp>\n     inline bool __isnan(const _Tp __x)\n     {\n       return __builtin_isnan(__x);\n     }\n \n-    template <>\n+    template<>\n     inline bool __isnan<float>(const float __x)\n     {\n       return __builtin_isnanf(__x);\n     }\n \n-    template <>\n+    template<>\n     inline bool __isnan<long double>(const long double __x)\n     {\n       return __builtin_isnanl(__x);"}, {"sha": "09ee501e69193e41ce8279a905ce2d58d498812a", "filename": "libstdc++-v3/include/tr1/tuple", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -246,7 +246,7 @@ namespace tr1\n   template<typename _Tp>\n     struct tuple_size;\n \n-  /// @brief class tuple_size\n+  /// class tuple_size\n   template<typename... _Elements>\n     struct tuple_size<tuple<_Elements...> >\n     {"}, {"sha": "734eec6ab7e24c970a210b145cdb36a72be4d4db", "filename": "libstdc++-v3/include/tr1/type_traits", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -183,7 +183,7 @@ namespace tr1\n   template<typename _From, typename _To,\n \t   bool = (is_void<_From>::value || is_void<_To>::value\n \t\t   || is_function<_To>::value || is_array<_To>::value\n-\t\t   // This special case is here only to avoid warnings.\t\t   \n+\t\t   // This special case is here only to avoid warnings.\t\n \t\t   || (is_floating_point<typename\n \t\t       remove_reference<_From>::type>::value\n \t\t       && __is_int_or_cref<_To>::__value))>\n@@ -206,7 +206,7 @@ namespace tr1\n \t\t\t       __is_convertible_helper<_From, _To>::__value>\n     { };\n \n-  /// @brief  reference modifications [4.7.2].\n+  // reference modifications [4.7.2].\n   template<typename _Tp>\n     struct remove_reference\n     { typedef _Tp     type; };\n@@ -230,7 +230,7 @@ namespace tr1\n     : public __add_reference_helper<_Tp>\n     { };\n \n-  /// @brief  other transformations [4.8].\n+  // other transformations [4.8].\n   template<std::size_t _Len, std::size_t _Align>\n     struct aligned_storage\n     { "}, {"sha": "437670f3dfcde8d9fa4422e4940673f35c26b310", "filename": "libstdc++-v3/include/tr1_impl/array", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -36,7 +36,7 @@ namespace std\n {\n _GLIBCXX_BEGIN_NAMESPACE_TR1\n \n-  /// @brief  struct array.\n+  /// array.\n   /// NB: Requires complete type _Tp.\n   template<typename _Tp, std::size_t _Nm>\n     struct array\n@@ -216,8 +216,14 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     { std::swap_ranges(__one.begin(), __one.end(), __two.begin()); }\n \n   // Tuple interface to class template array [6.2.2.5].\n-  template<typename _Tp> class tuple_size;\n-  template<int _Int, typename _Tp> class tuple_element;\n+\n+  /// tuple_size\n+  template<typename _Tp> \n+    class tuple_size;\n+\n+  /// tuple_element\n+  template<int _Int, typename _Tp> \n+    class tuple_element;\n \n   template<typename _Tp, std::size_t _Nm>\n     struct tuple_size<array<_Tp, _Nm> >"}, {"sha": "a3fd80e85512f5bacacc05b01bf9402fb05dd100", "filename": "libstdc++-v3/include/tr1_impl/boost_shared_ptr.h", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_shared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_shared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_shared_ptr.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -195,7 +195,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n #endif\n \n   /**\n-   *  @class shared_ptr <tr1/memory>\n+   *  @class __shared_ptr \n    *\n    *  A smart pointer with reference-counted copy semantics.\n    *  The object pointed to is deleted when the last shared_ptr pointing to\n@@ -230,7 +230,8 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t}\n \n       //\n-      // Requirements: _Deleter's copy constructor and destructor must not throw\n+      // Requirements: _Deleter's copy constructor and destructor must\n+      // not throw\n       //\n       // __shared_ptr will release __p by calling __d(__p)\n       //\n@@ -252,8 +253,9 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       \n #ifdef _GLIBCXX_INCLUDE_AS_CXX0X\n       //\n-      // Requirements: _Deleter's copy constructor and destructor must not throw\n-      // _Alloc's copy constructor and destructor must not throw.\n+      // Requirements: _Deleter's copy constructor and destructor must\n+      // not throw _Alloc's copy constructor and destructor must not\n+      // throw.\n       //\n       // __shared_ptr will release __p by calling __d(__p)\n       //\n@@ -811,7 +813,8 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     };\n \n \n-  // The actual TR1 shared_ptr, with forwarding constructors and\n+  /// shared_ptr\n+  // The actual shared_ptr, with forwarding constructors and\n   // assignment operators.\n   template<typename _Tp>\n     class shared_ptr\n@@ -965,7 +968,8 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     }\n \n \n-  // The actual TR1 weak_ptr, with forwarding constructors and\n+  /// weak_ptr\n+  // The actual weak_ptr, with forwarding constructors and\n   // assignment operators.\n   template<typename _Tp>\n     class weak_ptr\n@@ -1021,7 +1025,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       }\n     };\n \n-\n+  /// enable_shared_from_this\n   template<typename _Tp>\n     class enable_shared_from_this\n     {"}, {"sha": "afb05e2aa7104d09e7470a27bdd0cb143a4c5a8d", "filename": "libstdc++-v3/include/tr1_impl/cmath", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcmath?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -298,8 +298,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n #if _GLIBCXX_USE_C99_MATH\n #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC\n \n-  /// @brief Function template definitions [8.16.3].\n-  //\n+  /// Function template definitions [8.16.3].\n   using std::signbit;\n   \n   using std::fpclassify;\n@@ -320,8 +319,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \n #if _GLIBCXX_USE_C99_MATH_TR1\n \n-  /// @brief Additional overloads [8.16.4].\n-  //\n+  /// Additional overloads [8.16.4].\n   using std::acos;\n \n   inline float"}, {"sha": "e7d433edc68777900a3f7c14703f03afee12b948", "filename": "libstdc++-v3/include/tr1_impl/complex", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcomplex?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -51,7 +51,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   template<typename _Tp> std::complex<_Tp> fabs(const std::complex<_Tp>&);\n #endif\n \n-  /// @brief acos(__z) [8.1.2].\n+  /// acos(__z) [8.1.2].\n   //  Effects:  Behaves the same as C99 function cacos, defined\n   //            in subclause 7.3.5.1.\n   template<typename _Tp>\n@@ -87,7 +87,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     { return __complex_acos(__z); }\n #endif\n \n-  /// @brief asin(__z) [8.1.3].\n+  /// asin(__z) [8.1.3].\n   //  Effects:  Behaves the same as C99 function casin, defined\n   //            in subclause 7.3.5.2.\n   template<typename _Tp>\n@@ -123,7 +123,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     { return __complex_asin(__z); }\n #endif\n   \n-  /// @brief atan(__z) [8.1.4].\n+  /// atan(__z) [8.1.4].\n   //  Effects:  Behaves the same as C99 function catan, defined\n   //            in subclause 7.3.5.3.\n   template<typename _Tp>\n@@ -167,7 +167,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     { return __complex_atan(__z); }\n #endif\n \n-  /// @brief acosh(__z) [8.1.5].\n+  /// acosh(__z) [8.1.5].\n   //  Effects:  Behaves the same as C99 function cacosh, defined\n   //            in subclause 7.3.6.1.\n   template<typename _Tp>\n@@ -206,7 +206,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     { return __complex_acosh(__z); }\n #endif\n \n-  /// @brief asinh(__z) [8.1.6].\n+  /// asinh(__z) [8.1.6].\n   //  Effects:  Behaves the same as C99 function casin, defined\n   //            in subclause 7.3.6.2.\n   template<typename _Tp>\n@@ -245,7 +245,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     { return __complex_asinh(__z); }\n #endif\n \n-  /// @brief atanh(__z) [8.1.7].\n+  /// atanh(__z) [8.1.7].\n   //  Effects:  Behaves the same as C99 function catanh, defined\n   //            in subclause 7.3.6.3.\n   template<typename _Tp>\n@@ -289,7 +289,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     { return __complex_atanh(__z); }\n #endif\n \n-  /// @brief fabs(__z) [8.1.8].\n+  /// fabs(__z) [8.1.8].\n   //  Effects:  Behaves the same as C99 function cabs, defined\n   //            in subclause 7.3.8.1.\n   template<typename _Tp>\n@@ -306,8 +306,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n      || (defined(_GLIBCXX_INCLUDE_AS_TR1) \\\n \t && !defined(__GXX_EXPERIMENTAL_CXX0X__)))\n \n-  /// @brief Additional overloads [8.1.9].\n-  //\n+  /// Additional overloads [8.1.9].\n   template<typename _Tp>\n     inline typename __gnu_cxx::__promote<_Tp>::__type\n     arg(_Tp __x)"}, {"sha": "b819374f92d42df50c422f45c7de1802b0a210b8", "filename": "libstdc++-v3/include/tr1_impl/functional", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ffunctional?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -426,6 +426,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     : binary_function<const volatile _T1*, _T2, _Res>\n     { };\n \n+  /// reference_wrapper\n   template<typename _Tp>\n     class reference_wrapper\n     : public _Reference_wrapper_base<typename remove_cv<_Tp>::type>\n@@ -1336,6 +1337,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   template<typename _Result, typename _Signature>\n     const bool is_bind_expression<_Bind_result<_Result, _Signature> >::value;\n \n+  /// bind\n   template<typename _Functor, typename... _ArgTypes>\n     inline\n     _Bind<typename _Maybe_wrap_member_pointer<_Functor>::type(_ArgTypes...)>\n@@ -1751,6 +1753,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       }\n     };\n \n+  /// class function\n   template<typename _Res, typename... _ArgTypes>\n     class function<_Res(_ArgTypes...)>\n     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,"}, {"sha": "0611f70d34afe0ac1de7833dae0efa58e379998f", "filename": "libstdc++-v3/include/tr1_impl/functional_hash.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ffunctional_hash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ffunctional_hash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ffunctional_hash.h?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -1,6 +1,6 @@\n // TR1 functional -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,7 +36,7 @@ namespace std\n {\n _GLIBCXX_BEGIN_NAMESPACE_TR1\n \n-  // Class template hash.\n+  /// Class template hash.\n   // Declaration of default hash functor std::tr1::hash.  The types for\n   // which std::tr1::hash<T> is well-defined is in clause 6.3.3. of the PDTR.\n   template<typename _Tp>\n@@ -46,7 +46,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       operator()(_Tp __val) const;\n     };\n \n-  // Partial specializations for pointer types.\n+  /// Partial specializations for pointer types.\n   template<typename _Tp>\n     struct hash<_Tp*> : public std::unary_function<_Tp*, size_t>\n     {\n@@ -55,7 +55,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       { return reinterpret_cast<size_t>(__p); }\n     };\n \n-  // Explicit specializations for integer types.\n+  /// Explicit specializations for integer types.\n #define _TR1_hashtable_define_trivial_hash(_Tp) \t\\\n   template<>\t\t\t\t\t\t\\\n     inline size_t\t\t\t\t\t\\\n@@ -81,7 +81,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   // Fowler / Noll / Vo (FNV) Hash (type FNV-1a)\n   // (Used by the next specializations of std::tr1::hash.)\n \n-  // Dummy generic implementation (for sizeof(size_t) != 4, 8).\n+  /// Dummy generic implementation (for sizeof(size_t) != 4, 8).\n   template<size_t = sizeof(size_t)>\n     struct _Fnv_hash\n     {\n@@ -128,7 +128,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       }\n     };\n \n-  // Explicit specializations for floating point types.\n+  /// Explicit specializations for float.\n   template<>\n     inline size_t\n     hash<float>::operator()(float __val) const\n@@ -142,6 +142,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       return __result;\n     };\n \n+  /// Explicit specializations for double.\n   template<>\n     inline size_t\n     hash<double>::operator()(double __val) const\n@@ -155,11 +156,12 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \treturn __result;\n     };\n \n+  /// Explicit specializations for long double.\n   template<>\n     size_t\n     hash<long double>::operator()(long double __val) const;\n \n-  // Explicit specialization of member operator for types that are not builtin.\n+  /// Explicit specialization of member operator for non-builtin types.\n   template<>\n     size_t\n     hash<string>::operator()(string) const;"}, {"sha": "b45368d75321fac2cf309e84fa3eafc1a6f4ecfe", "filename": "libstdc++-v3/include/tr1_impl/random", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -149,8 +149,8 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   } // namespace __detail\n \n   /**\n-   * Produces random numbers on a given distribution function using a non-uniform\n-   * random number generation engine.\n+   * Produces random numbers on a given distribution function using a\n+   * non-uniform random number generation engine.\n    *\n    * @todo the engine_value_type needs to be studied more carefully.\n    */"}, {"sha": "f99e00678506ccc19e92e08db998017c39cef574", "filename": "libstdc++-v3/include/tr1_impl/regex", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -241,7 +241,7 @@ namespace regex_constants\n   static const match_flag_type format_first_only = 1 << _S_first_only;\n \n \n-  // [7.5.3] implementation-defined error type\n+  /// [7.5.3] implementation-defined error type\n   enum error_type\n     {\n       _S_error_collate,\n@@ -308,7 +308,7 @@ namespace regex_constants\n \n   // [7.8] Class regex_error\n   /**\n-   * Defines the type of objects thrown as exceptions to report errors from the\n+   * Defines the exception objects thrown report errors from the\n    * regular expression library.\n    */\n   class regex_error"}, {"sha": "4cf97dff31f07b6acece91ff4387ab50cf0ecabc", "filename": "libstdc++-v3/include/tr1_impl/type_traits", "status": "modified", "additions": 49, "deletions": 8, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftype_traits?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -67,26 +67,31 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   _DEFINE_SPEC_##_Order##_HELPER(_Trait<_Type volatile>, _Value)     \\\n   _DEFINE_SPEC_##_Order##_HELPER(_Trait<_Type const volatile>, _Value)\n \n-  /// @brief  helper classes [4.3].\n+  /// helper classes [4.3].\n   template<typename _Tp, _Tp __v>\n     struct integral_constant\n     {\n       static const _Tp                      value = __v;\n       typedef _Tp                           value_type;\n       typedef integral_constant<_Tp, __v>   type;\n     };\n+  \n+  /// typedef for true_type\n   typedef integral_constant<bool, true>     true_type;\n+\n+  /// typedef for true_type\n   typedef integral_constant<bool, false>    false_type;\n \n   template<typename _Tp, _Tp __v>\n     const _Tp integral_constant<_Tp, __v>::value;\n \n-  /// @brief  primary type categories [4.5.1].\n+  /// primary type categories [4.5.1].\n   template<typename>\n     struct is_void\n     : public false_type { };\n   _DEFINE_SPEC(0, is_void, void, true)\n \n+  /// is_integral\n   template<typename>\n     struct is_integral\n     : public false_type { };\n@@ -106,13 +111,15 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   _DEFINE_SPEC(0, is_integral, long long, true)\n   _DEFINE_SPEC(0, is_integral, unsigned long long, true)\n \n+  /// is_floating_point\n   template<typename>\n     struct is_floating_point\n     : public false_type { };\n   _DEFINE_SPEC(0, is_floating_point, float, true)\n   _DEFINE_SPEC(0, is_floating_point, double, true)\n   _DEFINE_SPEC(0, is_floating_point, long double, true)\n \n+  /// is_array\n   template<typename>\n     struct is_array\n     : public false_type { };\n@@ -125,39 +132,47 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct is_array<_Tp[]>\n     : public true_type { };\n \n+  /// is_pointer\n   template<typename>\n     struct is_pointer\n     : public false_type { };\n   _DEFINE_SPEC(1, is_pointer, _Tp*, true)\n \n+  /// is_reference\n   template<typename _Tp>\n     struct is_reference;\n \n+  /// is_function\n   template<typename _Tp>\n     struct is_function;\n \n+  /// is_member_object_pointer\n   template<typename>\n     struct is_member_object_pointer\n     : public false_type { };\n   _DEFINE_SPEC(2, is_member_object_pointer, _Tp _Cp::*,\n \t       !is_function<_Tp>::value)\n \n+  /// is_member_function_pointer\n   template<typename>\n     struct is_member_function_pointer\n     : public false_type { };\n   _DEFINE_SPEC(2, is_member_function_pointer, _Tp _Cp::*,\n \t       is_function<_Tp>::value)\n \n+  /// is_enum\n   template<typename _Tp>\n     struct is_enum\n     : public integral_constant<bool, __is_enum(_Tp)>\n     { };\n \n+  /// is_union\n   template<typename _Tp>\n     struct is_union\n     : public integral_constant<bool, __is_union(_Tp)>\n     { };\n \n+  /// is_class\n   template<typename _Tp>\n     struct is_class\n     : public integral_constant<bool, __is_class(_Tp)>\n@@ -177,9 +192,11 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       static const bool __value = sizeof(__test<_Tp>(0)) == 1;\n     };\n \n+  /// is_abstract\n   template<typename _Tp>\n     struct is_abstract;\n \n+  /// is_function\n   template<typename _Tp>\n     struct is_function\n     : public integral_constant<bool, !(__in_array<_Tp>::__value\n@@ -188,29 +205,33 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t\t\t\t       || is_void<_Tp>::value)>\n     { };\n \n-  /// @brief  composite type traits [4.5.2].\n+  /// composite type traits [4.5.2].\n   template<typename _Tp>\n     struct is_arithmetic\n     : public integral_constant<bool, (is_integral<_Tp>::value\n \t\t\t\t      || is_floating_point<_Tp>::value)>\n     { };\n \n+  /// is_fundamental\n   template<typename _Tp>\n     struct is_fundamental\n     : public integral_constant<bool, (is_arithmetic<_Tp>::value\n \t\t\t\t      || is_void<_Tp>::value)>\n     { };\n \n+  /// is_object\n   template<typename _Tp>\n     struct is_object\n     : public integral_constant<bool, !(is_function<_Tp>::value\n \t\t\t\t       || is_reference<_Tp>::value\n \t\t\t\t       || is_void<_Tp>::value)>\n     { };\n \n+  /// is_member_pointer\n   template<typename _Tp>\n     struct is_member_pointer;\n \n+  /// is_scalal\n   template<typename _Tp>\n     struct is_scalar\n     : public integral_constant<bool, (is_arithmetic<_Tp>::value\n@@ -219,26 +240,30 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t\t\t\t      || is_member_pointer<_Tp>::value)>\n     { };\n \n+  /// is_compound\n   template<typename _Tp>\n     struct is_compound\n     : public integral_constant<bool, !is_fundamental<_Tp>::value> { };\n \n+  /// is_member_pointer\n   template<typename _Tp>\n     struct is_member_pointer\n     : public integral_constant<bool,\n \t\t\t       (is_member_object_pointer<_Tp>::value\n \t\t\t\t|| is_member_function_pointer<_Tp>::value)>\n     { };\n \n-  /// @brief  type properties [4.5.3].\n+  /// type properties [4.5.3].\n   template<typename>\n     struct is_const\n     : public false_type { };\n \n+  /// is_const\n   template<typename _Tp>\n     struct is_const<_Tp const>\n     : public true_type { };\n   \n+  /// is_volatile\n   template<typename>\n     struct is_volatile\n     : public false_type { };\n@@ -247,30 +272,36 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct is_volatile<_Tp volatile>\n     : public true_type { };\n \n+  /// is_empty\n   template<typename _Tp>\n     struct is_empty\n     : public integral_constant<bool, __is_empty(_Tp)>\n     { };\n \n+  /// is_polymorphic\n   template<typename _Tp>\n     struct is_polymorphic\n     : public integral_constant<bool, __is_polymorphic(_Tp)>\n     { };\n \n+  /// is_abstract\n   template<typename _Tp>\n     struct is_abstract\n     : public integral_constant<bool, __is_abstract(_Tp)>\n     { };\n \n+  /// has_virtual_destructor\n   template<typename _Tp>\n     struct has_virtual_destructor\n     : public integral_constant<bool, __has_virtual_destructor(_Tp)>\n     { };\n \n+  /// alignment_of\n   template<typename _Tp>\n     struct alignment_of\n     : public integral_constant<std::size_t, __alignof__(_Tp)> { };\n   \n+  /// rank\n   template<typename>\n     struct rank\n     : public integral_constant<std::size_t, 0> { };\n@@ -283,6 +314,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct rank<_Tp[]>\n     : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };\n \n+  /// extent\n   template<typename, unsigned _Uint = 0>\n     struct extent\n     : public integral_constant<std::size_t, 0> { };\n@@ -301,7 +333,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t\t\t\t\t\t       _Uint - 1>::value>\n     { };\n \n-  /// @brief  relationships between types [4.6].\n+  /// relationships between types [4.6].\n   template<typename, typename>\n     struct is_same\n     : public false_type { };\n@@ -310,7 +342,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct is_same<_Tp, _Tp>\n     : public true_type { };\n \n-  /// @brief  const-volatile modifications [4.7.1].\n+  /// const-volatile modifications [4.7.1].\n   template<typename _Tp>\n     struct remove_const\n     { typedef _Tp     type; };\n@@ -319,6 +351,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct remove_const<_Tp const>\n     { typedef _Tp     type; };\n   \n+  /// remove_volatile\n   template<typename _Tp>\n     struct remove_volatile\n     { typedef _Tp     type; };\n@@ -327,29 +360,33 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct remove_volatile<_Tp volatile>\n     { typedef _Tp     type; };\n   \n+  /// remove_cv\n   template<typename _Tp>\n     struct remove_cv\n     {\n       typedef typename\n       remove_const<typename remove_volatile<_Tp>::type>::type     type;\n     };\n   \n+  /// add_const\n   template<typename _Tp>\n     struct add_const\n     { typedef _Tp const     type; };\n    \n+  /// add_volatile\n   template<typename _Tp>\n     struct add_volatile\n     { typedef _Tp volatile     type; };\n   \n+  /// add_cv\n   template<typename _Tp>\n     struct add_cv\n     {\n       typedef typename\n       add_const<typename add_volatile<_Tp>::type>::type     type;\n     };\n \n-  /// @brief  array modifications [4.7.3].\n+  /// array modifications [4.7.3].\n   template<typename _Tp>\n     struct remove_extent\n     { typedef _Tp     type; };\n@@ -362,6 +399,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct remove_extent<_Tp[]>\n     { typedef _Tp     type; };\n \n+  /// remove_all_extents\n   template<typename _Tp>\n     struct remove_all_extents\n     { typedef _Tp     type; };\n@@ -374,19 +412,22 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct remove_all_extents<_Tp[]>\n     { typedef typename remove_all_extents<_Tp>::type     type; };\n \n-  /// @brief  pointer modifications [4.7.4].\n+  /// pointer modifications [4.7.4].\n #undef _DEFINE_SPEC_BODY\n #define _DEFINE_SPEC_BODY(_Value)      \\\n     { typedef _Tp     type; };\n \n+  /// remove_pointer\n   template<typename _Tp>\n     struct remove_pointer\n     { typedef _Tp     type; };\n   _DEFINE_SPEC(1, remove_pointer, _Tp*, false)\n \n+  /// remove_reference\n   template<typename _Tp>\n     struct remove_reference;\n \n+  /// add_pointer\n   template<typename _Tp>\n     struct add_pointer\n     { typedef typename remove_reference<_Tp>::type*     type; };"}, {"sha": "bb69479f277fe26a7f414f25bf34f14b8bc51ad7", "filename": "libstdc++-v3/include/tr1_impl/unordered_map", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_map?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -168,6 +168,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     { __x.swap(__y); }\n \n \n+  /// class unordered_map\n   template<class _Key, class _Tp,\n \t   class _Hash = hash<_Key>,\n \t   class _Pred = std::equal_to<_Key>,\n@@ -215,6 +216,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n #endif\n     };\n   \n+  /// class unordered_multimap\n   template<class _Key, class _Tp,\n \t   class _Hash = hash<_Key>,\n \t   class _Pred = std::equal_to<_Key>,"}, {"sha": "80b1ec5f003ffc180e1d6ccdfd366b8fe6efa360", "filename": "libstdc++-v3/include/tr1_impl/unordered_set", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_set?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -150,10 +150,8 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   template<class _Value, class _Hash, class _Pred, class _Alloc,\n \t   bool __cache_hash_code>\n     inline void\n-    swap (__unordered_set<_Value, _Hash, _Pred,\n-\t  _Alloc, __cache_hash_code>& __x,\n-\t  __unordered_set<_Value, _Hash, _Pred,\n-\t  _Alloc, __cache_hash_code>& __y)\n+    swap(__unordered_set<_Value, _Hash, _Pred, _Alloc, __cache_hash_code>& __x,\n+\t __unordered_set<_Value, _Hash, _Pred, _Alloc, __cache_hash_code>& __y)\n     { __x.swap(__y); }\n \n   template<class _Value, class _Hash, class _Pred, class _Alloc,\n@@ -166,6 +164,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     { __x.swap(__y); }\n \n \n+  /// class unordered_set\n   template<class _Value,\n \t   class _Hash = hash<_Value>,\n \t   class _Pred = std::equal_to<_Value>,\n@@ -213,6 +212,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n #endif\n     };\n \n+  /// class unordered_multiset\n   template<class _Value,\n \t   class _Hash = hash<_Value>,\n \t   class _Pred = std::equal_to<_Value>,"}, {"sha": "dcaea51158ea42b927ae9308eb2eb48f4669f296", "filename": "libstdc++-v3/scripts/run_doxygen", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -10,7 +10,7 @@\n \n \n # We can check now that the version of doxygen is >= this variable.\n-DOXYVER=1.5.4\n+DOXYVER=1.5.1\n \n find_doxygen() {\n     local -r v_required=`echo $DOXYVER |  \\\n@@ -156,7 +156,6 @@ fi\n       -e \"s=@srcdir@=${srcdir}=g\" \\\n       -e \"s=@builddir@=${builddir}=g\" \\\n       -e \"s=@host_alias@=${host_alias}=g\" \\\n-      -e \"s=@html_output_dir@=html=\" \\\n       -e \"s=@enabled_sections@=${enabled_sections}=\" \\\n       -e \"s=@do_html@=${do_html}=\" \\\n       -e \"s=@do_man@=${do_man}=\" \\"}, {"sha": "5a8ec640fefeae317419247fe6d020ed3cab93f6", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -50,7 +50,7 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"is private\" \"\" { target *-*-* } 75 }\n+// { dg-error \"is private\" \"\" { target *-*-* } 76 }\n // { dg-error \"within this context\" \"\" { target *-*-* } 29 }\n // { dg-error \"first required here\" \"\" { target *-*-* } 48 }\n // { dg-excess-errors \"copy constructor\" }"}, {"sha": "dc33931a6652364cb154642a6188abfc5fe3f5f5", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -49,8 +49,8 @@ void test01()\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 41 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 43 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 511 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 477 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 549 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 515 }\n \n // { dg-excess-errors \"At global scope\" }\n // { dg-excess-errors \"In instantiation of\" }"}, {"sha": "0b02e3345f6376a176e3551d0daa2aac3a6669e5", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939759fcc993f08e734ed2942a64a8f406335b07/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc?ref=939759fcc993f08e734ed2942a64a8f406335b07", "patch": "@@ -49,8 +49,8 @@ void test01()\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 41 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 43 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 436 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 402 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 474 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 440 }\n \n // { dg-excess-errors \"At global scope\" }\n // { dg-excess-errors \"In instantiation of\" }"}]}