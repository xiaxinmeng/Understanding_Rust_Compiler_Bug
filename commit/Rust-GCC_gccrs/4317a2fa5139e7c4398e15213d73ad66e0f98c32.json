{"sha": "4317a2fa5139e7c4398e15213d73ad66e0f98c32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMxN2EyZmE1MTM5ZTdjNDM5OGUxNTIxM2Q3M2FkNjZlMGY5OGMzMg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-05-06T15:41:08Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-05-06T15:41:08Z"}, "message": "re PR target/35657 (Alignments of DFP types aren't consistent)\n\n2008-05-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/35657\n\t* config/i386/i386.c (contains_128bit_aligned_vector_p): Renamed\n\tto ...\n\t(contains_aligned_value_p): This.  Handle _Decimal128.\n\t(ix86_function_arg_boundary): Only align _Decimal128 to its\n\tnatural boundary and handle it properly.\n\nFrom-SVN: r134987", "tree": {"sha": "e9ed86ff0fb107e2ae6af7e2a8b36ddeef1f18db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9ed86ff0fb107e2ae6af7e2a8b36ddeef1f18db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4317a2fa5139e7c4398e15213d73ad66e0f98c32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4317a2fa5139e7c4398e15213d73ad66e0f98c32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4317a2fa5139e7c4398e15213d73ad66e0f98c32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4317a2fa5139e7c4398e15213d73ad66e0f98c32/comments", "author": null, "committer": null, "parents": [{"sha": "2fc794f27999cd513d6924f79d471105e0346a80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fc794f27999cd513d6924f79d471105e0346a80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fc794f27999cd513d6924f79d471105e0346a80"}], "stats": {"total": 67, "additions": 37, "deletions": 30}, "files": [{"sha": "70683471ad2e8955f687cec1ea47014710fa0024", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 18, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317a2fa5139e7c4398e15213d73ad66e0f98c32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317a2fa5139e7c4398e15213d73ad66e0f98c32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4317a2fa5139e7c4398e15213d73ad66e0f98c32", "patch": "@@ -1,23 +1,32 @@\n+2008-05-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/35657\n+\t* config/i386/i386.c (contains_128bit_aligned_vector_p): Renamed\n+\tto ...\n+\t(contains_aligned_value_p): This.  Handle _Decimal128.\n+\t(ix86_function_arg_boundary): Only align _Decimal128 to its\n+\tnatural boundary and handle it properly.\n+\n 2008-05-06  Martin Jambor  <mjambor@suse.cz>\n \n-        * ipa-cp.c (ipcp_method_orig_node): Renamed to ipcp_get_orig_node.\n-        (ipcp_method_is_cloned): Renamed to ipcp_node_is_clone\n-        (ipcp_method_set_orig_node): Removed.\n-        (ipcp_cval_get_cvalue_type): Removed.\n-        (ipcp_method_get_scale): Renamed to ipcp_get_node_scale.\n-        (ipcp_method_set_scale): Renamed to ipcp_set_node_scale.\n-        (ipcp_cval_set_cvalue_type): Removed.\n-        (ipcp_cval_get_cvalue): Removed.\n-        (ipcp_cval_set_cvalue): Removed.\n-        (ipcp_type_is_const): Renamed to ipcp_lat_is_const.\n-        (ipcp_cval_equal_cvalues): Renamed to ipcp_lats_are_equal\n-        (ipcp_lats_are_equal): Changed parameters to two ipcp_lattice's\n-        (ipcp_cval_meet): Renamed to ipa_lattice_meet\n-        (ipcp_cval_changed): Changed to use ipcp_lat_is_const\n-        (ipcp_method_cval): Renamed to ipcp_get_ith_lattice\n-        (ipcp_get_ith_lattice): Changed parameters.\n-        (ipcp_cval_compute): Renamed to ipcp_lattice_from_jfunc\n-        (ipcp_lattice_from_jfunc): Changed parameters.\n+\t* ipa-cp.c (ipcp_method_orig_node): Renamed to ipcp_get_orig_node.\n+\t(ipcp_method_is_cloned): Renamed to ipcp_node_is_clone\n+\t(ipcp_method_set_orig_node): Removed.\n+\t(ipcp_cval_get_cvalue_type): Removed.\n+\t(ipcp_method_get_scale): Renamed to ipcp_get_node_scale.\n+\t(ipcp_method_set_scale): Renamed to ipcp_set_node_scale.\n+\t(ipcp_cval_set_cvalue_type): Removed.\n+\t(ipcp_cval_get_cvalue): Removed.\n+\t(ipcp_cval_set_cvalue): Removed.\n+\t(ipcp_type_is_const): Renamed to ipcp_lat_is_const.\n+\t(ipcp_cval_equal_cvalues): Renamed to ipcp_lats_are_equal\n+\t(ipcp_lats_are_equal): Changed parameters to two ipcp_lattice's\n+\t(ipcp_cval_meet): Renamed to ipa_lattice_meet\n+\t(ipcp_cval_changed): Changed to use ipcp_lat_is_const\n+\t(ipcp_method_cval): Renamed to ipcp_get_ith_lattice\n+\t(ipcp_get_ith_lattice): Changed parameters.\n+\t(ipcp_cval_compute): Renamed to ipcp_lattice_from_jfunc\n+\t(ipcp_lattice_from_jfunc): Changed parameters.\n \t(ipcp_redirect): Local lattice pointer instead of lattice type variable.\n \t(ipcp_method_cval_print): Added temporary variable info.\n \t(ipcp_redirect): Removed already unused local variable caller."}, {"sha": "d0ebd80822ed62d5a48a28d48336e4aa058fda5e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4317a2fa5139e7c4398e15213d73ad66e0f98c32/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4317a2fa5139e7c4398e15213d73ad66e0f98c32/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4317a2fa5139e7c4398e15213d73ad66e0f98c32", "patch": "@@ -4579,12 +4579,12 @@ ix86_pass_by_reference (CUMULATIVE_ARGS *cum ATTRIBUTE_UNUSED,\n }\n \n /* Return true when TYPE should be 128bit aligned for 32bit argument passing\n-   ABI.  Only called if TARGET_SSE.  */\n+   ABI.  */\n static bool\n-contains_128bit_aligned_vector_p (tree type)\n+contains_aligned_value_p (tree type)\n {\n   enum machine_mode mode = TYPE_MODE (type);\n-  if (SSE_REG_MODE_P (mode)\n+  if (((TARGET_SSE && SSE_REG_MODE_P (mode)) || mode == TDmode)\n       && (!TYPE_USER_ALIGN (type) || TYPE_ALIGN (type) > 128))\n     return true;\n   if (TYPE_ALIGN (type) < 128)\n@@ -4605,15 +4605,15 @@ contains_128bit_aligned_vector_p (tree type)\n \t    for (field = TYPE_FIELDS (type); field; field = TREE_CHAIN (field))\n \t      {\n \t\tif (TREE_CODE (field) == FIELD_DECL\n-\t\t    && contains_128bit_aligned_vector_p (TREE_TYPE (field)))\n+\t\t    && contains_aligned_value_p (TREE_TYPE (field)))\n \t\t  return true;\n \t      }\n \t    break;\n \t  }\n \n \tcase ARRAY_TYPE:\n \t  /* Just for use if some languages passes arrays by value.  */\n-\t  if (contains_128bit_aligned_vector_p (TREE_TYPE (type)))\n+\t  if (contains_aligned_value_p (TREE_TYPE (type)))\n \t    return true;\n \t  break;\n \n@@ -4637,8 +4637,8 @@ ix86_function_arg_boundary (enum machine_mode mode, tree type)\n     align = GET_MODE_ALIGNMENT (mode);\n   if (align < PARM_BOUNDARY)\n     align = PARM_BOUNDARY;\n-  /* Decimal floating point is aligned to its natural boundary.  */\n-  if (!TARGET_64BIT && !VALID_DFP_MODE_P (mode))\n+  /* In 32bit, only _Decimal128 is aligned to its natural boundary.  */\n+  if (!TARGET_64BIT && mode != TDmode)\n     {\n       /* i386 ABI defines all arguments to be 4 byte aligned.  We have to\n \t make an exception for SSE modes since these require 128bit\n@@ -4647,16 +4647,14 @@ ix86_function_arg_boundary (enum machine_mode mode, tree type)\n \t The handling here differs from field_alignment.  ICC aligns MMX\n \t arguments to 4 byte boundaries, while structure fields are aligned\n \t to 8 byte boundaries.  */\n-      if (!TARGET_SSE)\n-\talign = PARM_BOUNDARY;\n-      else if (!type)\n+      if (!type)\n \t{\n-\t  if (!SSE_REG_MODE_P (mode))\n+\t  if (!(TARGET_SSE && SSE_REG_MODE_P (mode)) && mode != TDmode)\n \t    align = PARM_BOUNDARY;\n \t}\n       else\n \t{\n-\t  if (!contains_128bit_aligned_vector_p (type))\n+\t  if (!contains_aligned_value_p (type))\n \t    align = PARM_BOUNDARY;\n \t}\n     }"}]}