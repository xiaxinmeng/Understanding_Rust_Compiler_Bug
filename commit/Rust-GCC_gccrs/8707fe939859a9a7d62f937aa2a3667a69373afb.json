{"sha": "8707fe939859a9a7d62f937aa2a3667a69373afb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODcwN2ZlOTM5ODU5YTlhN2Q2MmY5MzdhYTJhMzY2N2E2OTM3M2FmYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-04-28T17:58:02Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-04-28T17:58:02Z"}, "message": "sparc.c (print_operand): Add 's' to sign-extend.\n\n        * config/sparc/sparc.c (print_operand): Add 's' to sign-extend.\n        * config/sparc/sparc.md (const_mulsidi3_v8plus): Fix mode of\n        integral constant mult operand.\n        (const_mulsidi3_sp32, const_mulsidi3_sp64): Likewise.\n        (const_smulsi3_highpart_v8plus): Likewise.\n        (const_smulsi3_highpart): Likewise.\n        (const_umulsidi3_sp32): Likewise; sign-extend it in the output.\n        (const_umulsidi3_sp64, const_umulsidi3_v8plus): Likewise.\n        (const_umulsi3_highpart_v8plus): Likewise.\n        (const_umulsi3_highpart): Likewise.\n\nFrom-SVN: r66179", "tree": {"sha": "1c718270af42b01709bf0b3db3e4b85e716ece83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c718270af42b01709bf0b3db3e4b85e716ece83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8707fe939859a9a7d62f937aa2a3667a69373afb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8707fe939859a9a7d62f937aa2a3667a69373afb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8707fe939859a9a7d62f937aa2a3667a69373afb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8707fe939859a9a7d62f937aa2a3667a69373afb/comments", "author": null, "committer": null, "parents": [{"sha": "2aacd7357ad4eded006166c5431b23cf998a381f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aacd7357ad4eded006166c5431b23cf998a381f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aacd7357ad4eded006166c5431b23cf998a381f"}], "stats": {"total": 64, "additions": 46, "deletions": 18}, "files": [{"sha": "c5900668f451b6323bcdf63957762f61bb94a04a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8707fe939859a9a7d62f937aa2a3667a69373afb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8707fe939859a9a7d62f937aa2a3667a69373afb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8707fe939859a9a7d62f937aa2a3667a69373afb", "patch": "@@ -1,3 +1,16 @@\n+2003-04-28  Richard Henderson  <rth@redhat.com>\n+\n+        * config/sparc/sparc.c (print_operand): Add 's' to sign-extend.\n+        * config/sparc/sparc.md (const_mulsidi3_v8plus): Fix mode of\n+        integral constant mult operand.\n+        (const_mulsidi3_sp32, const_mulsidi3_sp64): Likewise.\n+        (const_smulsi3_highpart_v8plus): Likewise.\n+        (const_smulsi3_highpart): Likewise.\n+        (const_umulsidi3_sp32): Likewise; sign-extend it in the output.\n+        (const_umulsidi3_sp64, const_umulsidi3_v8plus): Likewise.\n+        (const_umulsi3_highpart_v8plus): Likewise.\n+        (const_umulsi3_highpart): Likewise.\n+\n 2003-04-28  David O'Brien  <obrien@FreeBSD.org>\n \n \t* config/i386/x86-64.h (NO_PROFILE_COUNTERS, HAVE_AS_DWARF2_DEBUG_LINE):"}, {"sha": "857fe3f321b050869a64d3a0978d99a250ce7beb", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8707fe939859a9a7d62f937aa2a3667a69373afb/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8707fe939859a9a7d62f937aa2a3667a69373afb/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=8707fe939859a9a7d62f937aa2a3667a69373afb", "patch": "@@ -6472,6 +6472,21 @@ print_operand (file, x, code)\n       output_address (XEXP (x, 0));\n       return;\n \n+    case 's':\n+      {\n+\t/* Print a sign-extended 32-bit value.  */\n+\tHOST_WIDE_INT i;\n+\tif (GET_CODE(x) == CONST_INT)\n+\t  i = INTVAL (x);\n+\telse if (GET_CODE(x) == CONST_DOUBLE)\n+\t  i = CONST_DOUBLE_LOW (x);\n+\telse\n+\t  output_operand_lossage (\"invalid %%s operand\");\n+\ti = trunc_int_for_mode (i, SImode);\n+\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, i);\n+\treturn;\n+      }\n+\n     case 0:\n       /* Do nothing special.  */\n       break;"}, {"sha": "4c66a7867fa7767458da05532704719ddab765bd", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8707fe939859a9a7d62f937aa2a3667a69373afb/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8707fe939859a9a7d62f937aa2a3667a69373afb/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=8707fe939859a9a7d62f937aa2a3667a69373afb", "patch": "@@ -5323,7 +5323,7 @@\n (define_insn \"const_mulsidi3_v8plus\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=h,r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r,r\"))\n-\t\t (match_operand:SI 2 \"small_int\" \"I,I\")))\n+\t\t (match_operand:DI 2 \"small_int\" \"I,I\")))\n    (clobber (match_scratch:SI 3 \"=X,&h\"))]\n   \"TARGET_V8PLUS\"\n   \"@\n@@ -5364,7 +5364,7 @@\n (define_insn \"const_mulsidi3_sp32\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n-\t\t (match_operand:SI 2 \"small_int\" \"I\")))]\n+\t\t (match_operand:DI 2 \"small_int\" \"I\")))]\n   \"TARGET_HARD_MUL32\"\n {\n   return TARGET_SPARCLET\n@@ -5381,7 +5381,7 @@\n (define_insn \"const_mulsidi3_sp64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n-\t\t (match_operand:SI 2 \"small_int\" \"I\")))]\n+\t\t (match_operand:DI 2 \"small_int\" \"I\")))]\n   \"TARGET_DEPRECATED_V8_INSNS && TARGET_ARCH64\"\n   \"smul\\t%1, %2, %0\"\n   [(set_attr \"type\" \"imul\")])\n@@ -5453,7 +5453,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=h,r\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r,r\"))\n-\t\t\t       (match_operand 2 \"small_int\" \"i,i\"))\n+\t\t\t       (match_operand:DI 2 \"small_int\" \"i,i\"))\n \t\t      (match_operand:SI 3 \"const_int_operand\" \"i,i\"))))\n    (clobber (match_scratch:SI 4 \"=X,&h\"))]\n   \"TARGET_V8PLUS\"\n@@ -5480,7 +5480,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n-\t\t\t       (match_operand:SI 2 \"register_operand\" \"r\"))\n+\t\t\t       (match_operand:DI 2 \"small_int\" \"i\"))\n \t\t      (const_int 32))))]\n   \"TARGET_HARD_MUL32\"\n   \"smul\\t%1, %2, %%g0\\n\\trd\\t%%y, %0\"\n@@ -5558,12 +5558,12 @@\n (define_insn \"const_umulsidi3_sp32\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n-\t\t (match_operand:SI 2 \"uns_small_int\" \"\")))]\n+\t\t (match_operand:DI 2 \"uns_small_int\" \"\")))]\n   \"TARGET_HARD_MUL32\"\n {\n   return TARGET_SPARCLET\n-         ? \"umuld\\t%1, %2, %L0\"\n-         : \"umul\\t%1, %2, %L0\\n\\trd\\t%%y, %H0\";\n+         ? \"umuld\\t%1, %s2, %L0\"\n+         : \"umul\\t%1, %s2, %L0\\n\\trd\\t%%y, %H0\";\n }\n   [(set (attr \"type\")\n \t(if_then_else (eq_attr \"isa\" \"sparclet\")\n@@ -5575,21 +5575,21 @@\n (define_insn \"const_umulsidi3_sp64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n-\t\t (match_operand:SI 2 \"uns_small_int\" \"\")))]\n+\t\t (match_operand:DI 2 \"uns_small_int\" \"\")))]\n   \"TARGET_DEPRECATED_V8_INSNS && TARGET_ARCH64\"\n-  \"umul\\t%1, %2, %0\"\n+  \"umul\\t%1, %s2, %0\"\n   [(set_attr \"type\" \"imul\")])\n \n ;; XXX\n (define_insn \"const_umulsidi3_v8plus\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=h,r\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r,r\"))\n-\t\t (match_operand:SI 2 \"uns_small_int\" \"\")))\n+\t\t (match_operand:DI 2 \"uns_small_int\" \"\")))\n    (clobber (match_scratch:SI 3 \"=X,h\"))]\n   \"TARGET_V8PLUS\"\n   \"@\n-   umul\\t%1, %2, %L0\\n\\tsrlx\\t%L0, 32, %H0\n-   umul\\t%1, %2, %3\\n\\tsrlx\\t%3, 32, %H0\\n\\tmov\\t%3, %L0\"\n+   umul\\t%1, %s2, %L0\\n\\tsrlx\\t%L0, 32, %H0\n+   umul\\t%1, %s2, %3\\n\\tsrlx\\t%3, 32, %H0\\n\\tmov\\t%3, %L0\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"2,3\")])\n \n@@ -5642,13 +5642,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=h,r\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r,r\"))\n-\t\t\t       (match_operand:SI 2 \"uns_small_int\" \"\"))\n+\t\t\t       (match_operand:DI 2 \"uns_small_int\" \"\"))\n \t\t      (match_operand:SI 3 \"const_int_operand\" \"i,i\"))))\n    (clobber (match_scratch:SI 4 \"=X,h\"))]\n   \"TARGET_V8PLUS\"\n   \"@\n-   umul\\t%1, %2, %0\\n\\tsrlx\\t%0, %3, %0\n-   umul\\t%1, %2, %4\\n\\tsrlx\\t%4, %3, %0\"\n+   umul\\t%1, %s2, %0\\n\\tsrlx\\t%0, %3, %0\n+   umul\\t%1, %s2, %4\\n\\tsrlx\\t%4, %3, %0\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"2\")])\n \n@@ -5669,10 +5669,10 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n-\t\t\t       (match_operand:SI 2 \"uns_small_int\" \"\"))\n+\t\t\t       (match_operand:DI 2 \"uns_small_int\" \"\"))\n \t\t      (const_int 32))))]\n   \"TARGET_HARD_MUL32\"\n-  \"umul\\t%1, %2, %%g0\\n\\trd\\t%%y, %0\"\n+  \"umul\\t%1, %s2, %%g0\\n\\trd\\t%%y, %0\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"2\")])\n "}]}