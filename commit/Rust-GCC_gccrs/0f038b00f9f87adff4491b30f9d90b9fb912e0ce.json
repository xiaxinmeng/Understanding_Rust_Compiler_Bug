{"sha": "0f038b00f9f87adff4491b30f9d90b9fb912e0ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYwMzhiMDBmOWY4N2FkZmY0NDkxYjMwZjlkOTBiOWZiOTEyZTBjZQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1996-02-27T13:15:13Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1996-02-27T13:15:13Z"}, "message": "aof.h (EXTRA_SECTIONS, [...]): Remove readonly data sections.\n\n* arm/aof.h (EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS): Remove\nreadonly data sections.\n(READONLYDATA_SECTION, READONLY_DATA_SECTION): Delete.\n\nFrom-SVN: r11353", "tree": {"sha": "dd3c69f1fa54d5d3aeb51b20367e86dcf25c9fa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd3c69f1fa54d5d3aeb51b20367e86dcf25c9fa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f038b00f9f87adff4491b30f9d90b9fb912e0ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f038b00f9f87adff4491b30f9d90b9fb912e0ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f038b00f9f87adff4491b30f9d90b9fb912e0ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f038b00f9f87adff4491b30f9d90b9fb912e0ce/comments", "author": null, "committer": null, "parents": [{"sha": "589fe0fc3af422f48445de50d31ea56985670e57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/589fe0fc3af422f48445de50d31ea56985670e57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/589fe0fc3af422f48445de50d31ea56985670e57"}], "stats": {"total": 39, "additions": 4, "deletions": 35}, "files": [{"sha": "3aec60302828c0a066dc397494ec7041666ed9a4", "filename": "gcc/config/arm/aof.h", "status": "modified", "additions": 4, "deletions": 35, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f038b00f9f87adff4491b30f9d90b9fb912e0ce/gcc%2Fconfig%2Farm%2Faof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f038b00f9f87adff4491b30f9d90b9fb912e0ce/gcc%2Fconfig%2Farm%2Faof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faof.h?ref=0f038b00f9f87adff4491b30f9d90b9fb912e0ce", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for Advanced RISC Machines\n    ARM compilation, AOF Assembler.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Richard Earnshaw (rearnsha@armltd.co.uk)\n \n This file is part of GNU CC.\n@@ -51,23 +51,19 @@ Boston, MA 02111-1307, USA.  */\n    to that.  Unfortunately, there is nothing we can do here to guarantee that\n    two areas with the same attributes will be linked adjacently in the\n    resulting executable, so we have to be careful not to do pc-relative \n-   addressing across such boundaries.  This isn't a major problem for thumb,\n-   since the range of such addressing modes is so limited that it would\n-   rarely be useful anyway. */\n+   addressing across such boundaries.  */\n char *aof_text_section ();\n-#define TEXT_SECTION_ASM_OP \\\n-  aof_text_section (in_section == in_readonly_data)\n+#define TEXT_SECTION_ASM_OP aof_text_section ()\n \n #define SELECT_RTX_SECTION(MODE,RTX) text_section ();\n \n char *aof_data_section ();\n #define DATA_SECTION_ASM_OP aof_data_section ()\n \n-#define EXTRA_SECTIONS in_zero_init, in_readonly_data, in_ctor, in_dtor\n+#define EXTRA_SECTIONS in_zero_init, in_ctor, in_dtor\n \n #define EXTRA_SECTION_FUNCTIONS\t\\\n ZERO_INIT_SECTION\t\t\\\n-READONLYDATA_SECTION\t\t\\\n CTOR_SECTION\t\t\t\\\n DTOR_SECTION\n \n@@ -84,32 +80,6 @@ zero_init_section ()\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n \n-#define READONLYDATA_SECTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-readonly_data ()\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  extern int arm_text_section_count;\t\t\t\t\t\\\n-  if (in_section != in_readonly_data)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (in_section != in_text)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  fprintf (asm_out_file,\t\t\t\t\t\\\n-\t\t   \"\\tAREA |C$$code%d|, CODE, READONLY\",\t\t\\\n-\t\t   arm_text_section_count++);\t\t\t\t\\\n-\t  if (flag_pic)\t\t\t\t\t\t\t\\\n-\t    fputs (\", PIC, REENTRANT\", asm_out_file);\t\t\t\\\n-\t  fputc ('\\n', asm_out_file);\t\t \t\t\t\\\n-\t}\t \t\t\t\t\t\t\t\\\n-      in_section = in_readonly_data;\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-int\t\t\t\t\t\t\t\t\t\\\n-in_readonly_data_section ()\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  return in_section == in_readonly_data;\t\t\t\t\\\n-}\n-\n #define CTOR_SECTION\t\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n ctor_section ()\t\t\t\t\t\t\t\t\\\n@@ -179,7 +149,6 @@ do {\t\t\t\t\t\\\n   while (*ptr)\t\t\t\t\\\n     (*ptr++) ();\t\t\t\\\n } while (0)\n-#define READONLY_DATA_SECTION readonly_data\n \n #define JUMP_TABLES_IN_TEXT_SECTION 1\n "}]}