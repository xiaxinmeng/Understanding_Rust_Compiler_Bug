{"sha": "e756e900e911fdbc57cd76d6c12d20a9b1892e55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc1NmU5MDBlOTExZmRiYzU3Y2Q3NmQ2YzEyZDIwYTliMTg5MmU1NQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2019-06-04T21:52:32Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2019-06-04T21:52:32Z"}, "message": "re PR target/78263 (Compile failure with AltiVec library on PPC64le and -std=c++11 flag)\n\n[gcc]\n\n2019-06-04  Bill Schmidt  <wschmidt@linux.ibm.com>\n\n\tPR target/78263\n\t* config/rs6000/altivec.h: Don't #define vector, pixel, bool for\n\tC++ with strict ANSI requirements.\n\n[gcc/testsuite]\n\n2019-06-04  Bill Schmidt  <wschmidt@linux.ibm.com>\n\n\tPR target/78263\n\t* g++.target/powerpc: New directory.\n\t* g++.target/powerpc/powerpc.exp: New test driver.\n\t* g++.target/powerpc/undef-bool-3.C: New.\n\nFrom-SVN: r271927", "tree": {"sha": "bfa80a05ad210655b6a8beb1164fafb38cb292a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfa80a05ad210655b6a8beb1164fafb38cb292a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e756e900e911fdbc57cd76d6c12d20a9b1892e55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e756e900e911fdbc57cd76d6c12d20a9b1892e55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e756e900e911fdbc57cd76d6c12d20a9b1892e55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e756e900e911fdbc57cd76d6c12d20a9b1892e55/comments", "author": null, "committer": null, "parents": [{"sha": "4a28e1f11335c771e215d0cdbae630828c0acaf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a28e1f11335c771e215d0cdbae630828c0acaf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a28e1f11335c771e215d0cdbae630828c0acaf2"}], "stats": {"total": 78, "additions": 75, "deletions": 3}, "files": [{"sha": "8b3fe98771d591940507fb18ef36b66468b466bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e756e900e911fdbc57cd76d6c12d20a9b1892e55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e756e900e911fdbc57cd76d6c12d20a9b1892e55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e756e900e911fdbc57cd76d6c12d20a9b1892e55", "patch": "@@ -1,3 +1,9 @@\n+2019-06-04  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\tPR target/78263\n+\t* config/rs6000/altivec.h: Don't #define vector, pixel, bool for\n+\tC++ with strict ANSI requirements.\n+\n 2019-06-04  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* tree-ssa-loop-niter.c (number_of_iterations_ne): Skip"}, {"sha": "dafc76aeafa506a1ce2a271d65c7c721a0951892", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e756e900e911fdbc57cd76d6c12d20a9b1892e55/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e756e900e911fdbc57cd76d6c12d20a9b1892e55/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=e756e900e911fdbc57cd76d6c12d20a9b1892e55", "patch": "@@ -37,10 +37,12 @@\n /* If __APPLE_ALTIVEC__ is defined, the compiler supports 'vector',\n    'pixel' and 'bool' as context-sensitive AltiVec keywords (in \n    non-AltiVec contexts, they revert to their original meanings,\n-   if any), so we do not need to define them as macros.  */\n+   if any), so we do not need to define them as macros.  Also,\n+   avoid defining them as macros for C++ with strict ANSI, as\n+   this is not compatible.  */\n \n-#if !defined(__APPLE_ALTIVEC__)\n-/* You are allowed to undef these for C++ compatibility.  */\n+#if !defined(__APPLE_ALTIVEC__) \\\n+    && (!defined(__STRICT_ANSI__) || !defined(__cplusplus))\n #define vector __vector\n #define pixel __pixel\n #define bool __bool"}, {"sha": "7bcc461327dcf01e80e3fe456948dfc856d8bf55", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e756e900e911fdbc57cd76d6c12d20a9b1892e55/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e756e900e911fdbc57cd76d6c12d20a9b1892e55/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e756e900e911fdbc57cd76d6c12d20a9b1892e55", "patch": "@@ -1,3 +1,10 @@\n+2019-06-04  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\tPR target/78263\n+\t* g++.target/powerpc: New directory.\n+\t* g++.target/powerpc/powerpc.exp: New test driver.\n+\t* g++.target/powerpc/undef-bool-3.C: New.\n+\n 2019-06-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-c++-common/gomp/lastprivate-conditional-2.c (foo): Don't expect"}, {"sha": "4e7ea3311e6d78d32473383855c5394b89f8c62c", "filename": "gcc/testsuite/g++.target/powerpc/powerpc.exp", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e756e900e911fdbc57cd76d6c12d20a9b1892e55/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fpowerpc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e756e900e911fdbc57cd76d6c12d20a9b1892e55/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fpowerpc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fpowerpc.exp?ref=e756e900e911fdbc57cd76d6c12d20a9b1892e55", "patch": "@@ -0,0 +1,44 @@\n+#  Specific regression driver for PowerPC.\n+#  Copyright (C) 2019 Free Software Foundation, Inc.\n+#\n+#  This file is part of GCC.\n+#\n+#  GCC is free software; you can redistribute it and/or modify it\n+#  under the terms of the GNU General Public License as published by\n+#  the Free Software Foundation; either version 3, or (at your option)\n+#  any later version.\n+#\n+#  GCC is distributed in the hope that it will be useful, but\n+#  WITHOUT ANY WARRANTY; without even the implied warranty of\n+#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+#  General Public License for more details.\n+#\n+#  You should have received a copy of the GNU General Public License\n+#  along with GCC; see the file COPYING3.  If not see\n+#  <http://www.gnu.org/licenses/>.  */\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Exit immediately if this isn't a PowerPC target.\n+if {![istarget powerpc*-*-*] } then {\n+  return\n+}\n+\n+# Load support procs.\n+load_lib g++-dg.exp\n+\n+global DEFAULT_CXXFLAGS\n+if ![info exists DEFAULT_CXXFLAGS] then {\n+    set DEFAULT_CXXFLAGS \" -pedantic-errors\"\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \\\n+        \"\" $DEFAULT_CXXFLAGS\n+\n+# All done.\n+dg-finish\n+"}, {"sha": "27f3da582175417ff5129c310cef21197f175807", "filename": "gcc/testsuite/g++.target/powerpc/undef-bool-3.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e756e900e911fdbc57cd76d6c12d20a9b1892e55/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fundef-bool-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e756e900e911fdbc57cd76d6c12d20a9b1892e55/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fundef-bool-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fundef-bool-3.C?ref=e756e900e911fdbc57cd76d6c12d20a9b1892e55", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -std=c++11\" } */\n+\n+/* Test to ensure that \"bool\" is not #define'd in altivec.h for C++ when\n+   we require strict ANSI.  We should compile without errors.  */\n+\n+#include <altivec.h>\n+\n+bool foo (int x)\n+{\n+  return x == 2;\n+}\n+"}]}