{"sha": "7e99f74bbbb709c118fef4991219f83e55bc9b98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U5OWY3NGJiYmI3MDljMTE4ZmVmNDk5MTIxOWY4M2U1NWJjOWI5OA==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2008-08-06T16:37:06Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2008-08-06T16:37:06Z"}, "message": "re PR c++/26785 (\"extra qualification\" error gives line number of end of declaration)\n\n2008-08-06  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR 26785\n\t* diagnostic.c (permerror_at): New.\n\t* toplev.h (permerror_at): Declare.\ncp/\n\t* decl.c (grokdeclarator): Use explicit location with\n        permerror_at.\ntestsuite/\n\t* g++.dg/warn/pr26785.C: New.\n\nFrom-SVN: r138816", "tree": {"sha": "783902cef32fa8d98d51a37c7d2c4cc393628f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/783902cef32fa8d98d51a37c7d2c4cc393628f93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e99f74bbbb709c118fef4991219f83e55bc9b98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e99f74bbbb709c118fef4991219f83e55bc9b98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e99f74bbbb709c118fef4991219f83e55bc9b98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e99f74bbbb709c118fef4991219f83e55bc9b98/comments", "author": null, "committer": null, "parents": [{"sha": "4eee656926d2ff1d11587c909a828267a5e3f40a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eee656926d2ff1d11587c909a828267a5e3f40a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eee656926d2ff1d11587c909a828267a5e3f40a"}], "stats": {"total": 57, "additions": 51, "deletions": 6}, "files": [{"sha": "00b3b7dabdb1b829a8a03675160832133df1cd4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e99f74bbbb709c118fef4991219f83e55bc9b98", "patch": "@@ -1,3 +1,9 @@\n+2008-08-06  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+       \n+\tPR 26785\n+\t* diagnostic.c (permerror_at): New.\n+\t* toplev.h (permerror_at): Declare.\n+\t\n 2008-08-06  Victor Kaplansky  <victork@il.ibm.com>\n \t    Ira Rosen  <irar@il.ibm.com>\n "}, {"sha": "4dfd564a7ec582fbf7d50ebd5bdd24c2d1eceae5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7e99f74bbbb709c118fef4991219f83e55bc9b98", "patch": "@@ -1,3 +1,8 @@\n+2008-08-06  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR 26785\n+\t* decl.c (grokdeclarator): Use explicit location with permerror_at.\n+\t\n 2008-08-06  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR 8715"}, {"sha": "4c340e28a915eb074fa21a5d65740c91d4d9af3e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=7e99f74bbbb709c118fef4991219f83e55bc9b98", "patch": "@@ -8437,8 +8437,9 @@ grokdeclarator (const cp_declarator *declarator,\n \t      friendp = 0;\n \t    }\n \t  else\n-\t    permerror (\"extra qualification %<%T::%> on member %qs\",\n-\t\t       ctype, name);\n+\t    permerror_at (declarator->id_loc, \n+\t\t\t  \"extra qualification %<%T::%> on member %qs\",\n+\t\t\t  ctype, name);\n \t}\n       else if (/* If the qualifying type is already complete, then we\n \t\t  can skip the following checks.  */"}, {"sha": "69b7e4b534e9e8235c9275e6ce899d8d8499bc98", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=7e99f74bbbb709c118fef4991219f83e55bc9b98", "patch": "@@ -554,10 +554,26 @@ pedwarn0 (const char *gmsgid, ...)\n   va_end (ap);\n }\n \n-/* A \"permissive\" error: issues an error unless -fpermissive was given\n-   on the command line, in which case it issues a warning.  Use this\n-   for things that really should be errors but we want to support\n-   legacy code.  */\n+/* A \"permissive\" error at LOCATION: issues an error unless\n+   -fpermissive was given on the command line, in which case it issues\n+   a warning.  Use this for things that really should be errors but we\n+   want to support legacy code.  */\n+\n+void\n+permerror_at (location_t location, const char *gmsgid, ...)\n+{\n+  diagnostic_info diagnostic;\n+  va_list ap;\n+\n+  va_start (ap, gmsgid);\n+  diagnostic_set_info (&diagnostic, gmsgid, &ap, location,\n+\t\t       permissive_error_kind ());\n+  diagnostic.option_index = OPT_fpermissive;\n+  report_diagnostic (&diagnostic);\n+  va_end (ap);\n+}\n+\n+/* Equivalent to permerror_at (input_location, ...).  */\n \n void\n permerror (const char *gmsgid, ...)"}, {"sha": "d1bed88f968c2f78984e4e0f131050839a420af5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e99f74bbbb709c118fef4991219f83e55bc9b98", "patch": "@@ -1,3 +1,8 @@\n+2008-08-06  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR 26785\n+\t* g++.dg/warn/pr26785.C: New.\n+\t\t\n 2008-08-06  Victor Kaplansky  <victork@il.ibm.com>\n \n \t* gcc.dg/vect/costmodel/ppc/costmodel-slp-34.c: New test."}, {"sha": "b3c0313eaf6bb9dde99f37275e5d8c0596dc3dcd", "filename": "gcc/testsuite/g++.dg/warn/pr26785.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr26785.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr26785.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr26785.C?ref=7e99f74bbbb709c118fef4991219f83e55bc9b98", "patch": "@@ -0,0 +1,10 @@\n+// PR 26785\n+// { dg-do compile }\n+// { dg-options \"-fshow-column\" }\n+\n+class foo {\n+  foo::foo // { dg-error \"3: error: extra qualification\" }\n+  (int a, \n+   int b,\n+   int c);\n+};"}, {"sha": "1a015e69e0eb112ed034f8c992ecaaf440ac4727", "filename": "gcc/toplev.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e99f74bbbb709c118fef4991219f83e55bc9b98/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=7e99f74bbbb709c118fef4991219f83e55bc9b98", "patch": "@@ -68,6 +68,8 @@ extern void pedwarn0 (const char *, ...) ATTRIBUTE_GCC_DIAG(1,2);\n /* Pass one of the OPT_W* from options.h as the first parameter.  */\n extern void pedwarn (int, const char *, ...) ATTRIBUTE_GCC_DIAG(2,3);\n extern void permerror (const char *, ...) ATTRIBUTE_GCC_DIAG(1,2);\n+extern void permerror_at (location_t, const char *, ...)\n+     ATTRIBUTE_GCC_DIAG(2,3);\n extern void sorry (const char *, ...) ATTRIBUTE_GCC_DIAG(1,2);\n extern void inform (const char *, ...) ATTRIBUTE_GCC_DIAG(1,2);\n extern void verbatim (const char *, ...) ATTRIBUTE_GCC_DIAG(1,2);"}]}