{"sha": "66de4d7c91fca7d178f619761565fed9826cd05c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZkZTRkN2M5MWZjYTdkMTc4ZjYxOTc2MTU2NWZlZDk4MjZjZDA1Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-03-23T11:13:39Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-03-23T11:13:39Z"}, "message": "calls.c (expand_call): Add missing guard to code handling return of non-BLKmode structures in MSB.\n\n\t* calls.c (expand_call): Add missing guard to code handling return\n\tof non-BLKmode structures in MSB.\n\t* function.c (expand_function_end): Likewise.\n\nFrom-SVN: r197003", "tree": {"sha": "531e09418de1364c9e9e88b283de5f7dd9b75cbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/531e09418de1364c9e9e88b283de5f7dd9b75cbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66de4d7c91fca7d178f619761565fed9826cd05c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66de4d7c91fca7d178f619761565fed9826cd05c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66de4d7c91fca7d178f619761565fed9826cd05c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66de4d7c91fca7d178f619761565fed9826cd05c/comments", "author": null, "committer": null, "parents": [{"sha": "4f25c8fbfd7c6909cb107c2634a92fb0187966fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f25c8fbfd7c6909cb107c2634a92fb0187966fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f25c8fbfd7c6909cb107c2634a92fb0187966fc"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "ee8685b8e853de4e5ba1541d718d99937069a629", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66de4d7c91fca7d178f619761565fed9826cd05c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66de4d7c91fca7d178f619761565fed9826cd05c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66de4d7c91fca7d178f619761565fed9826cd05c", "patch": "@@ -1,3 +1,9 @@\n+2013-03-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* calls.c (expand_call): Add missing guard to code handling return\n+\tof non-BLKmode structures in MSB.\n+\t* function.c (expand_function_end): Likewise.\n+\n 2013-03-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* combine.c (try_combine): Adjust comment.  Do not add the set of"}, {"sha": "a585390be5f58a144b5cdbf42542268fd7f8b7b9", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66de4d7c91fca7d178f619761565fed9826cd05c/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66de4d7c91fca7d178f619761565fed9826cd05c/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=66de4d7c91fca7d178f619761565fed9826cd05c", "patch": "@@ -3171,7 +3171,9 @@ expand_call (tree exp, rtx target, int ignore)\n \t group load/store machinery below.  */\n       if (!structure_value_addr\n \t  && !pcc_struct_value\n+\t  && TYPE_MODE (rettype) != VOIDmode\n \t  && TYPE_MODE (rettype) != BLKmode\n+\t  && REG_P (valreg)\n \t  && targetm.calls.return_in_msb (rettype))\n \t{\n \t  if (shift_return_value (TYPE_MODE (rettype), false, valreg))"}, {"sha": "5419b88593dfbaf27eabf4f13ff298c7c180ef1c", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66de4d7c91fca7d178f619761565fed9826cd05c/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66de4d7c91fca7d178f619761565fed9826cd05c/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=66de4d7c91fca7d178f619761565fed9826cd05c", "patch": "@@ -5093,6 +5093,7 @@ expand_function_end (void)\n \t     amount.  BLKmode results are handled using the group load/store\n \t     machinery.  */\n \t  if (TYPE_MODE (TREE_TYPE (decl_result)) != BLKmode\n+\t      && REG_P (real_decl_rtl)\n \t      && targetm.calls.return_in_msb (TREE_TYPE (decl_result)))\n \t    {\n \t      emit_move_insn (gen_rtx_REG (GET_MODE (decl_rtl),"}]}