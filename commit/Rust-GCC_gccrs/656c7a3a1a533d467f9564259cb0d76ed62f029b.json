{"sha": "656c7a3a1a533d467f9564259cb0d76ed62f029b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU2YzdhM2ExYTUzM2Q0NjdmOTU2NDI1OWNiMGQ3NmVkNjJmMDI5Yg==", "commit": {"author": {"name": "Aaron W. LaFramboise", "email": "aaronraolete36@aaronwl.com", "date": "2004-07-01T23:55:22Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2004-07-01T23:55:22Z"}, "message": "gcc.c (STANDARD_STARTFILE_PREFIX_1): Define.\n\n2004-07-02  Aaron W. LaFramboise <aaronraolete36@aaronwl.com>\n\n\t* gcc.c (STANDARD_STARTFILE_PREFIX_1): Define.\n\t(STANDARD_STARTFILE_PREFIX_2): Define.\n\t(standard_startfile_prefix_1): Initialize to\n\tSTANDARD_STARTFILE_PREFIX_1.\n\t(standard_startfile_prefix_2): Initialize to\n\tSTANDARD_STARTFILE_PREFIX_2.\n\t* config/i386/mingw32.h (MD_STARTFILE_PREFIX): Remove.\n\t(STANDARD_STARTFILE_PREFIX_1): Define.\n\t(STANDARD_STARTFILE_PREFIX_2): Define.\n\t* doc/tm.texi (STANDARD_STARTFILE_PREFIX_1): Document.\n\t(STANDARD_STARTFILE_PREFIX_2): Document.\n\nFrom-SVN: r84002", "tree": {"sha": "c9d8a4ff46096ac1b499e243563c19c59274b028", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9d8a4ff46096ac1b499e243563c19c59274b028"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/656c7a3a1a533d467f9564259cb0d76ed62f029b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/656c7a3a1a533d467f9564259cb0d76ed62f029b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/656c7a3a1a533d467f9564259cb0d76ed62f029b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/656c7a3a1a533d467f9564259cb0d76ed62f029b/comments", "author": null, "committer": null, "parents": [{"sha": "78cc4167bcd0392c21b3db4682415245bfead558", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78cc4167bcd0392c21b3db4682415245bfead558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78cc4167bcd0392c21b3db4682415245bfead558"}], "stats": {"total": 65, "additions": 56, "deletions": 9}, "files": [{"sha": "1628676a55759a51e9b711f19c8325a777ca73c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/656c7a3a1a533d467f9564259cb0d76ed62f029b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/656c7a3a1a533d467f9564259cb0d76ed62f029b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=656c7a3a1a533d467f9564259cb0d76ed62f029b", "patch": "@@ -1,3 +1,17 @@\n+2004-07-02  Aaron W. LaFramboise <aaronraolete36@aaronwl.com>\n+\n+\t* gcc.c (STANDARD_STARTFILE_PREFIX_1): Define.\n+\t(STANDARD_STARTFILE_PREFIX_2): Define.\n+\t(standard_startfile_prefix_1): Initialize to\n+\tSTANDARD_STARTFILE_PREFIX_1.\n+\t(standard_startfile_prefix_2): Initialize to\n+\tSTANDARD_STARTFILE_PREFIX_2.\n+\t* config/i386/mingw32.h (MD_STARTFILE_PREFIX): Remove.\n+\t(STANDARD_STARTFILE_PREFIX_1): Define.\n+\t(STANDARD_STARTFILE_PREFIX_2): Define.\n+\t* doc/tm.texi (STANDARD_STARTFILE_PREFIX_1): Document.\n+\t(STANDARD_STARTFILE_PREFIX_2): Document.\n+\n 2004-07-01  Richard Henderson  <rth@redhat.com>\n \n         * tree-sra.c (sra_walk_expr): Don't maybe_lookup_element_for_expr"}, {"sha": "bdd8da2b3dd291f4d00796bd1dcdcdfa104b229c", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/656c7a3a1a533d467f9564259cb0d76ed62f029b/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/656c7a3a1a533d467f9564259cb0d76ed62f029b/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=656c7a3a1a533d467f9564259cb0d76ed62f029b", "patch": "@@ -69,9 +69,13 @@ Boston, MA 02111-1307, USA.  */\n #define STARTFILE_SPEC \"%{shared|mdll:dllcrt2%O%s} \\\n   %{!shared:%{!mdll:crt2%O%s}} %{pg:gcrt2%O%s}\"\n \n-/* An additional prefix to try after the standard prefixes.  */\n-#undef MD_STARTFILE_PREFIX\n-#define MD_STARTFILE_PREFIX \"/mingw/lib/\"\n+/* Override startfile prefix defaults.  */\n+#ifndef STANDARD_STARTFILE_PREFIX_1\n+#define STANDARD_STARTFILE_PREFIX_1 \"/mingw/lib/\"\n+#endif\n+#ifndef STANDARD_STARTFILE_PREFIX_2\n+#define STANDARD_STARTFILE_PREFIX_2 \"\"\n+#endif\n \n /* Output STRING, a string representing a filename, to FILE.\n    We canonicalize it to be in Unix format (backslashes are replaced"}, {"sha": "1b5de1b71cbdd5ee5771ffff49828e94437d15e1", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/656c7a3a1a533d467f9564259cb0d76ed62f029b/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/656c7a3a1a533d467f9564259cb0d76ed62f029b/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=656c7a3a1a533d467f9564259cb0d76ed62f029b", "patch": "@@ -469,6 +469,22 @@ try when searching for startup files such as @file{crt0.o}.\n is built as a cross compiler.\n @end defmac\n \n+@defmac STANDARD_STARTFILE_PREFIX_1\n+Define this macro as a C string constant if you wish to override the\n+standard choice of @code{/lib} as a prefix to try after the default prefix\n+when searching for startup files such as @file{crt0.o}.\n+@code{STANDARD_STARTFILE_PREFIX_1} is not searched when the compiler\n+is built as a cross compiler.\n+@end defmac\n+\n+@defmac STANDARD_STARTFILE_PREFIX_2\n+Define this macro as a C string constant if you wish to override the\n+standard choice of @code{/lib} as yet another prefix to try after the\n+default prefix when searching for startup files such as @file{crt0.o}.\n+@code{STANDARD_STARTFILE_PREFIX_2} is not searched when the compiler\n+is built as a cross compiler.\n+@end defmac\n+\n @defmac MD_STARTFILE_PREFIX\n If defined, this macro supplies an additional prefix to try after the\n standard prefixes.  @code{MD_EXEC_PREFIX} is not searched when the"}, {"sha": "74d043fea74061cf9e0e386eb05f4a2c7f6e98a1", "filename": "gcc/gcc.c", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/656c7a3a1a533d467f9564259cb0d76ed62f029b/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/656c7a3a1a533d467f9564259cb0d76ed62f029b/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=656c7a3a1a533d467f9564259cb0d76ed62f029b", "patch": "@@ -1429,6 +1429,13 @@ static const char *gcc_libexec_prefix;\n \n /* Default prefixes to attach to command names.  */\n \n+#ifndef STANDARD_STARTFILE_PREFIX_1\n+#define STANDARD_STARTFILE_PREFIX_1 \"/lib/\"\n+#endif\n+#ifndef STANDARD_STARTFILE_PREFIX_2\n+#define STANDARD_STARTFILE_PREFIX_2 \"/usr/lib/\"\n+#endif\n+ \n #ifdef CROSS_COMPILE  /* Don't use these prefixes for a cross compiler.  */\n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX\n@@ -1454,8 +1461,10 @@ static const char *md_exec_prefix = MD_EXEC_PREFIX;\n static const char *md_startfile_prefix = MD_STARTFILE_PREFIX;\n static const char *md_startfile_prefix_1 = MD_STARTFILE_PREFIX_1;\n static const char *const standard_startfile_prefix = STANDARD_STARTFILE_PREFIX;\n-static const char *const standard_startfile_prefix_1 = \"/lib/\";\n-static const char *const standard_startfile_prefix_2 = \"/usr/lib/\";\n+static const char *const standard_startfile_prefix_1\n+  = STANDARD_STARTFILE_PREFIX_1;\n+static const char *const standard_startfile_prefix_2\n+  = STANDARD_STARTFILE_PREFIX_2;\n \n static const char *const tooldir_base_prefix = TOOLDIR_BASE_PREFIX;\n static const char *tooldir_prefix;\n@@ -6231,10 +6240,14 @@ main (int argc, const char **argv)\n \t\t      NULL, PREFIX_PRIORITY_LAST, 0, NULL, 1);\n \t}\n \n-      add_sysrooted_prefix (&startfile_prefixes, standard_startfile_prefix_1,\n-\t\t\t    \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL, 1);\n-      add_sysrooted_prefix (&startfile_prefixes, standard_startfile_prefix_2,\n-\t\t\t    \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL, 1);\n+      if (*standard_startfile_prefix_1)\n+ \tadd_sysrooted_prefix (&startfile_prefixes,\n+\t\t\t      standard_startfile_prefix_1, \"BINUTILS\",\n+\t\t\t      PREFIX_PRIORITY_LAST, 0, NULL, 1);\n+      if (*standard_startfile_prefix_2)\n+\tadd_sysrooted_prefix (&startfile_prefixes,\n+\t\t\t      standard_startfile_prefix_2, \"BINUTILS\",\n+\t\t\t      PREFIX_PRIORITY_LAST, 0, NULL, 1);\n #if 0 /* Can cause surprises, and one can use -B./ instead.  */\n       add_prefix (&startfile_prefixes, \"./\", NULL,\n \t\t  PREFIX_PRIORITY_LAST, 1, NULL, 0);"}]}