{"sha": "d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE0NmMzMDViMmE2MWZjMTU4ODVlM2Q5Y2NiZTRiNzNiMGZjZjRiNA==", "commit": {"author": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "1998-06-01T09:09:55Z"}, "committer": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "1998-06-01T09:09:55Z"}, "message": "Additional changes from Martin.\n\nFrom-SVN: r20167", "tree": {"sha": "51390b62adce9c36344044096991e53750318d23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51390b62adce9c36344044096991e53750318d23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4/comments", "author": null, "committer": null, "parents": [{"sha": "8e54705d55273a3621964e314746cb673e10cadd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e54705d55273a3621964e314746cb673e10cadd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e54705d55273a3621964e314746cb673e10cadd"}], "stats": {"total": 24, "additions": 5, "deletions": 19}, "files": [{"sha": "86be02a0af0042f9ba486fbb047c21b4cdff6e04", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb121.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb121.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb121.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb121.C?ref=d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4", "patch": "@@ -1,14 +1,14 @@\n-// Compiles.   Shouldn't.\n+//Build don't link:\n class A {\n private:\n   int i1_;\n public:\n-  void f(int const i1 = 1);\n+  void f(int const i1 = 1); // ERROR -\n };\n \n void\n-A::f(int const i1 = 1) // !!! SHOULD TRIGGER AN ERROR !!!\n-{\n+A::f(int const i1 = 1)\n+{                          // ERROR - duplicate default argument\n   i1_ = i1;\n }\n "}, {"sha": "8850f9fa63981707aa80e324ca4755eca909b640", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb42.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb42.C?ref=d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4", "patch": "@@ -1,3 +1,4 @@\n+//Build don't link:\n #include <vector.h>\n #include <algo.h>\n "}, {"sha": "8ae65023b12e3945cd9b32446bd1d3e6c6eea34f", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb43.C", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb43.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb43.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb43.C?ref=d146c305b2a61fc15885e3d9ccbe4b73b0fcf4b4", "patch": "@@ -8,41 +8,26 @@ Expr(){};\n Expr(const T&){};\n };\n \n-#ifdef TEMPLATE\n template <class T >\n inline bool compare(const Expr<T> a, const Expr<T> b){ return true; };\n-#else\n-inline bool compare(const Expr<int> a, const Expr<int> b){ return true; };\n-#endif\n \n void main()\n {\n   vector<int>\ta(3);\n-#if TEMPLATE == 1\n   sort( a.begin(), a.end(),\n \tstatic_cast<bool (*)(const Expr<int>,const Expr<int>)>(compare) );\n-#elif TEMPLATE == 2\n   sort( a.begin(), a.end(), compare<int> );\n-#elif TEMPLATE == 3\n   sort<vector<int>::iterator,\n        pointer_to_binary_function<const Expr<int>, const Expr<int>, bool> >\n     ( a.begin(), a.end(), compare );\n-#elif TEMPLATE == 4\n   sort( a.begin(), a.end(),\n \tptr_fun<const Expr<int>, const Expr<int>, bool> (compare) );\n-#elif TEMPLATE == 5\n   sort( a.begin(), a.end(),\n \tptr_fun(compare<int>) );\n-#elif TEMPLATE == 6\n   sort( a.begin(), a.end(),\n \tpointer_to_binary_function<const Expr<int>, const Expr<int>, bool>(compare) );\n-#elif TEMPLATE == 7\n   sort( a.begin(), a.end(),\n \tpointer_to_binary_function<const Expr<int>, const Expr<int>, bool>(compare<int>) );\n-#elif TEMPLATE == 8\n   sort( a.begin(), a.end(),\n \tpointer_to_binary_function<const Expr<int>, const Expr<int>, bool>(compare<>) );\n-#else\n-  sort( a.begin(), a.end(), compare );\n-#endif\n }"}]}