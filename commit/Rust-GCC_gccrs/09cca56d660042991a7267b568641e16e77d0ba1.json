{"sha": "09cca56d660042991a7267b568641e16e77d0ba1", "node_id": "C_kwDOANBUbNoAKDA5Y2NhNTZkNjYwMDQyOTkxYTcyNjdiNTY4NjQxZTE2ZTc3ZDBiYTE", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2022-01-12T11:04:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-09T09:27:34Z"}, "message": "[Ada] Fix package installation for private array type of private element\n\nThe problem comes from the construction of Stream operations, which\nhappens at the point a tagged type is frozen. Streams need to see the\nfull view of types, so that for example the Read attribute for an array\ncan be expanded into a loop over the Read attribute for the component\ntype.  Now if during that expansion we have a private type we may need\nto retrieve the full view of the type to find its structure. And the\ncorresponding tree must be compiled in the context of the package that\ndefines the type, which might not be the current package.  The problem\narises when both array and component types are private, then the\ndescribed mechanism is invoked twice.\n\ngcc/ada/\n\n\t* exp_attr.adb (Compile_Stream_Body_In_Scope): Do not install\n\tpackage if array type and element type come from the same\n\tpackage, and the original array type is private.", "tree": {"sha": "6074de193925edbd787e6d8e851b77e0a2cb5f8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6074de193925edbd787e6d8e851b77e0a2cb5f8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09cca56d660042991a7267b568641e16e77d0ba1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09cca56d660042991a7267b568641e16e77d0ba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09cca56d660042991a7267b568641e16e77d0ba1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09cca56d660042991a7267b568641e16e77d0ba1/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "692a4bf88c5a4743bb5dca47b59a73a83add0fae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692a4bf88c5a4743bb5dca47b59a73a83add0fae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/692a4bf88c5a4743bb5dca47b59a73a83add0fae"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "ab14a49811770632d5fc9b6d2a534ca75a55ecd1", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09cca56d660042991a7267b568641e16e77d0ba1/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09cca56d660042991a7267b568641e16e77d0ba1/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=09cca56d660042991a7267b568641e16e77d0ba1", "patch": "@@ -888,6 +888,11 @@ package body Exp_Attr is\n          --  special stream-processing operations for that type (for example\n          --  Unbounded_String and its wide varieties).\n \n+         --  We don't install the package either if array type and element\n+         --  type come from the same package, and the original array type is\n+         --  private, because in this case the underlying type Arr is\n+         --  itself a full view, which carries the full view of the component.\n+\n          Scop := Scope (C_Type);\n \n          if Is_Private_Type (C_Type)\n@@ -896,7 +901,15 @@ package body Exp_Attr is\n            and then Ekind (Scop) = E_Package\n            and then No (Get_Stream_Convert_Pragma (C_Type))\n          then\n-            Install := True;\n+            if Scope (Arr) = Scope (C_Type)\n+              and then Is_Private_Type (Etype (Prefix (N)))\n+              and then Full_View (Etype (Prefix (N))) = Arr\n+            then\n+               null;\n+\n+            else\n+               Install := True;\n+            end if;\n          end if;\n       end if;\n "}]}