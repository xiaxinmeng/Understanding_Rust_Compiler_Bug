{"sha": "c946a318432341ea470c5f7540490a87823aaedd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk0NmEzMTg0MzIzNDFlYTQ3MGM1Zjc1NDA0OTBhODc4MjNhYWVkZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-25T15:49:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-25T15:49:34Z"}, "message": "re PR middle-end/44069 (optimization bug initializing from cast array)\n\n2010-05-25  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/44069\n\t* gimple-fold.c (maybe_fold_stmt_addition): Avoid generating\n\tout-of-bounds array accesses.\n\n\t* g++.dg/torture/pr44069.C: New testcase.\n\nFrom-SVN: r159824", "tree": {"sha": "73a47c9d393c96ebe9abf0772ccfbfc4fc116624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73a47c9d393c96ebe9abf0772ccfbfc4fc116624"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c946a318432341ea470c5f7540490a87823aaedd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c946a318432341ea470c5f7540490a87823aaedd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c946a318432341ea470c5f7540490a87823aaedd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c946a318432341ea470c5f7540490a87823aaedd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50ee30d539971a73447f01f61c1e66302c3c91d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ee30d539971a73447f01f61c1e66302c3c91d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ee30d539971a73447f01f61c1e66302c3c91d0"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "02fb290b833963cc30b9fb42e04bf3132ea9ebcf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c946a318432341ea470c5f7540490a87823aaedd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c946a318432341ea470c5f7540490a87823aaedd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c946a318432341ea470c5f7540490a87823aaedd", "patch": "@@ -1,3 +1,9 @@\n+2010-05-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/44069\n+\t* gimple-fold.c (maybe_fold_stmt_addition): Avoid generating\n+\tout-of-bounds array accesses.\n+\n 2010-05-25  Richard Guenther  <rguenther@suse.de>\n \n \t* lto-wrapper.c (nr, input_names, output_names, makefile): Globalize."}, {"sha": "e74f52457d8379b02b80c4852b65086a2b0a0b5d", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c946a318432341ea470c5f7540490a87823aaedd/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c946a318432341ea470c5f7540490a87823aaedd/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=c946a318432341ea470c5f7540490a87823aaedd", "patch": "@@ -640,6 +640,18 @@ maybe_fold_stmt_addition (location_t loc, tree res_type, tree op0, tree op1)\n \t  if (!is_gimple_assign (offset_def))\n \t    return NULL_TREE;\n \n+\t  /* As we will end up creating a variable index array access\n+\t     in the outermost array dimension make sure there isn't\n+\t     a more inner array that the index could overflow to.  */\n+\t  if (TREE_CODE (TREE_OPERAND (op0, 0)) == ARRAY_REF)\n+\t    return NULL_TREE;\n+\n+\t  /* Do not build array references of something that we can't\n+\t     see the true number of array dimensions for.  */\n+\t  if (!DECL_P (TREE_OPERAND (op0, 0))\n+\t      && !handled_component_p (TREE_OPERAND (op0, 0)))\n+\t    return NULL_TREE;\n+\n \t  if (gimple_assign_rhs_code (offset_def) == MULT_EXPR\n \t      && TREE_CODE (gimple_assign_rhs2 (offset_def)) == INTEGER_CST\n \t      && tree_int_cst_equal (gimple_assign_rhs2 (offset_def),"}, {"sha": "42e23ab5c70b4bbf2bd30bb1f5872437be67aab9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c946a318432341ea470c5f7540490a87823aaedd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c946a318432341ea470c5f7540490a87823aaedd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c946a318432341ea470c5f7540490a87823aaedd", "patch": "@@ -1,3 +1,8 @@\n+2010-05-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/44069\n+\t* g++.dg/torture/pr44069.C: New testcase.\n+\n 2010-05-25  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/sra-10.c: Do not dump esra details."}, {"sha": "99fcd173e27b85d0141e5ddc261433c6bc668585", "filename": "gcc/testsuite/g++.dg/torture/pr44069.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c946a318432341ea470c5f7540490a87823aaedd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr44069.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c946a318432341ea470c5f7540490a87823aaedd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr44069.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr44069.C?ref=c946a318432341ea470c5f7540490a87823aaedd", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+\n+template <unsigned R, unsigned C>\n+class M {\n+public:\n+    M(const int* arr) {\n+\tfor (unsigned long r = 0; r < R; ++r)\n+\t  for (unsigned long c = 0; c < C; ++c)\n+\t    m[r*C+c] = arr[r*C+c];\n+    }\n+    int operator()(unsigned r, unsigned c) const\n+      { return m[r*C+c]; }\n+private:\n+    int m[R*C];\n+};\n+extern \"C\" void abort (void);\n+int main()\n+{\n+  int vals[2][2] = { { 1, 2 }, { 5, 6 } };\n+  M<2,2> m( &(vals[0][0]) );\n+  if (m(1,0) != 5)\n+    abort ();\n+  return 0;\n+}\n+"}]}