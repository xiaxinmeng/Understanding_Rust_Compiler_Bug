{"sha": "1d12df723d8dc90f2f75b73bbf799725c214584b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQxMmRmNzIzZDhkYzkwZjJmNzViNzNiYmY3OTk3MjVjMjE0NTg0Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-12T18:57:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-12T18:57:01Z"}, "message": "(simplify_rtx, case FLOAT_TRUNCATE): Remove redundant float_truncate.\n\nFrom-SVN: r7906", "tree": {"sha": "9e43a35e7e1f25f831ab0f0c37de9cb1b6913589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e43a35e7e1f25f831ab0f0c37de9cb1b6913589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d12df723d8dc90f2f75b73bbf799725c214584b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d12df723d8dc90f2f75b73bbf799725c214584b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d12df723d8dc90f2f75b73bbf799725c214584b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d12df723d8dc90f2f75b73bbf799725c214584b/comments", "author": null, "committer": null, "parents": [{"sha": "7d79bcc1698293a21d4b6d33f32d108072df44cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d79bcc1698293a21d4b6d33f32d108072df44cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d79bcc1698293a21d4b6d33f32d108072df44cf"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "581105ea8ec6537ae8b05709ee4cd0322aec07b8", "filename": "gcc/combine.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d12df723d8dc90f2f75b73bbf799725c214584b/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d12df723d8dc90f2f75b73bbf799725c214584b/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=1d12df723d8dc90f2f75b73bbf799725c214584b", "patch": "@@ -3444,6 +3444,13 @@ simplify_rtx (x, op0_mode, last, in_dest)\n \t  && GET_MODE (XEXP (XEXP (XEXP (x, 0), 0), 0)) == mode)\n \treturn gen_unary (GET_CODE (XEXP (x, 0)), mode, mode,\n \t\t\t  XEXP (XEXP (XEXP (x, 0), 0), 0));\n+\n+      /* (float_truncate:SF (subreg:DF (float_truncate:SF X) 0))\n+\t is (float_truncate:SF x).  */\n+      if (GET_CODE (XEXP (x, 0)) == SUBREG\n+\t  && subreg_lowpart_p (XEXP (x, 0))\n+\t  && GET_CODE (SUBREG_REG (XEXP (x, 0))) == FLOAT_TRUNCATE)\n+\treturn SUBREG_REG (XEXP (x, 0));\n       break;  \n \n #ifdef HAVE_cc0"}]}