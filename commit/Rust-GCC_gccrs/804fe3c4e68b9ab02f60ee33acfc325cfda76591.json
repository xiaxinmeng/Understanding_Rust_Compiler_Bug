{"sha": "804fe3c4e68b9ab02f60ee33acfc325cfda76591", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA0ZmUzYzRlNjhiOWFiMDJmNjBlZTMzYWNmYzMyNWNmZGE3NjU5MQ==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2011-08-03T09:30:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T09:30:45Z"}, "message": "prj-proc.adb, [...] (Environment): new type.\n\n2011-08-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-proc.adb, prj.ads, makeutl.adb, makeutl.ads, prj-conf.adb,\n\tprj-tree.adb, prj-tree.ads (Environment): new type.\n\nFrom-SVN: r177247", "tree": {"sha": "ed25e8fbaa6ce83df1c7e3fb92cfeaa14e0cc829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed25e8fbaa6ce83df1c7e3fb92cfeaa14e0cc829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/804fe3c4e68b9ab02f60ee33acfc325cfda76591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804fe3c4e68b9ab02f60ee33acfc325cfda76591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/804fe3c4e68b9ab02f60ee33acfc325cfda76591", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804fe3c4e68b9ab02f60ee33acfc325cfda76591/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c565bc662885e6499424f898701924445d62c2f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c565bc662885e6499424f898701924445d62c2f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c565bc662885e6499424f898701924445d62c2f7"}], "stats": {"total": 105, "additions": 76, "deletions": 29}, "files": [{"sha": "f415e5973ffb72d7df2531ac91dc387db99aa122", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=804fe3c4e68b9ab02f60ee33acfc325cfda76591", "patch": "@@ -1,3 +1,8 @@\n+2011-08-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-proc.adb, prj.ads, makeutl.adb, makeutl.ads, prj-conf.adb,\n+\tprj-tree.adb, prj-tree.ads (Environment): new type.\n+\n 2011-08-03  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-tree.ads: Remove unused variable."}, {"sha": "5f677ea699ee4e0ea294cc78b96dbdef160b614c", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=804fe3c4e68b9ab02f60ee33acfc325cfda76591", "patch": "@@ -701,7 +701,7 @@ package body Makeutl is\n    ----------------------------\n \n    function Is_External_Assignment\n-     (Tree : Prj.Tree.Project_Node_Tree_Ref;\n+     (Env  : Prj.Tree.Environment;\n       Argv : String) return Boolean\n    is\n       Start     : Positive := 3;\n@@ -724,7 +724,7 @@ package body Makeutl is\n       end if;\n \n       return Prj.Ext.Check\n-        (Self        => Tree.External,\n+        (Self        => Env.External,\n          Declaration => Argv (Start .. Finish));\n    end Is_External_Assignment;\n "}, {"sha": "b1e5765c814d72d64d456809ad585e780c7a7b0f", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=804fe3c4e68b9ab02f60ee33acfc325cfda76591", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -113,7 +113,7 @@ package Makeutl is\n    --  if everything is still valid.\n \n    function Is_External_Assignment\n-     (Tree : Prj.Tree.Project_Node_Tree_Ref;\n+     (Env  : Prj.Tree.Environment;\n       Argv : String) return Boolean;\n    --  Verify that an external assignment switch is syntactically correct\n    --"}, {"sha": "de25dce40fba6f41b387ae294f5c3f0ef79d0e4c", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=804fe3c4e68b9ab02f60ee33acfc325cfda76591", "patch": "@@ -573,6 +573,7 @@ package body Prj.Conf is\n      (Project                    : Project_Id;\n       Project_Tree               : Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n+      Env                        : Prj.Tree.Environment;\n       Allow_Automatic_Generation : Boolean;\n       Config_File_Name           : String := \"\";\n       Autoconf_Specified         : Boolean;\n@@ -1061,7 +1062,7 @@ package body Prj.Conf is\n       Config_Project_Node : Project_Node_Id := Empty_Node;\n \n    begin\n-      pragma Assert (Prj.Env.Is_Initialized (Project_Node_Tree.Project_Path));\n+      pragma Assert (Prj.Env.Is_Initialized (Env.Project_Path));\n \n       Free (Config_File_Path);\n       Config := No_Project;"}, {"sha": "9c9c3b5f32c73ef0bb36cb270fd9329d6321b93c", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=804fe3c4e68b9ab02f60ee33acfc325cfda76591", "patch": "@@ -2814,8 +2814,7 @@ package body Prj.Proc is\n                Project                => Project.Extends,\n                Flags                  => Flags,\n                From_Project_Node      => Extended_Project_Of\n-                                          (Declaration_Node,\n-                                           From_Project_Node_Tree),\n+                 (Declaration_Node, From_Project_Node_Tree),\n                From_Project_Node_Tree => From_Project_Node_Tree,\n                Extended_By            => Project);\n \n@@ -2824,11 +2823,10 @@ package body Prj.Proc is\n                In_Tree                => In_Tree,\n                Flags                  => Flags,\n                From_Project_Node      => From_Project_Node,\n-               Node_Tree => From_Project_Node_Tree,\n+               Node_Tree              => From_Project_Node_Tree,\n                Pkg                    => No_Package,\n                Item                   => First_Declarative_Item_Of\n-                                          (Declaration_Node,\n-                                           From_Project_Node_Tree));\n+                 (Declaration_Node, From_Project_Node_Tree));\n \n             if Project.Extends /= No_Project then\n                Process_Extended_Project;"}, {"sha": "6fa56ce975df4147fced9e105e664126c045b866", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=804fe3c4e68b9ab02f60ee33acfc325cfda76591", "patch": "@@ -982,35 +982,56 @@ package body Prj.Tree is\n    -- Initialize --\n    ----------------\n \n-   procedure Initialize (Tree : Project_Node_Tree_Ref) is\n+   procedure Initialize\n+     (Tree : Project_Node_Tree_Ref; Env : in out Environment) is\n    begin\n       Project_Node_Table.Init (Tree.Project_Nodes);\n       Projects_Htable.Reset (Tree.Projects_HT);\n+      Initialize (Env);\n+   end Initialize;\n \n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize (Self : in out Environment) is\n+   begin\n       --  Do not reset the external references, in case we are reloading a\n       --  project, since we want to preserve the current environment.\n       --  But we still need to ensure that the external references are properly\n       --  initialized.\n \n-      Prj.Ext.Initialize (Tree.External);\n+      Prj.Ext.Initialize (Self.External);\n       --  Prj.Ext.Reset (Tree.External);\n    end Initialize;\n \n    ----------\n    -- Free --\n    ----------\n \n-   procedure Free (Proj : in out Project_Node_Tree_Ref) is\n+   procedure Free (Self : in out Environment) is\n+   begin\n+      Prj.Ext.Free (Self.External);\n+      Free (Self.Project_Path);\n+   end Free;\n+\n+   ----------\n+   -- Free --\n+   ----------\n+\n+   procedure Free\n+     (Proj : in out Project_Node_Tree_Ref;\n+      Env  : in out Environment)\n+   is\n       procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n         (Project_Node_Tree_Data, Project_Node_Tree_Ref);\n    begin\n       if Proj /= null then\n          Project_Node_Table.Free (Proj.Project_Nodes);\n          Projects_Htable.Reset (Proj.Projects_HT);\n-         Prj.Ext.Free (Proj.External);\n-         Free (Proj.Project_Path);\n          Unchecked_Free (Proj);\n       end if;\n+      Free (Env);\n    end Free;\n \n    -------------------------------"}, {"sha": "ae0d046366f029fb5d7b01b1cdca061c369ae679", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 34, "deletions": 14, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=804fe3c4e68b9ab02f60ee33acfc325cfda76591", "patch": "@@ -36,6 +36,36 @@ with Prj.Ext;\n \n package Prj.Tree is\n \n+   -----------------\n+   -- Environment --\n+   -----------------\n+\n+   type Environment is record\n+      External : Prj.Ext.External_References;\n+      --  External references are stored in this hash table (and manipulated\n+      --  through subprograms in prj-ext.ads). External references are\n+      --  project-tree specific so that one can load the same tree twice but\n+      --  have two views of it, for instance.\n+\n+      Project_Path : aliased Prj.Env.Project_Search_Path;\n+      --  The project path is tree specific, since we might want to load\n+      --  simultaneously multiple projects, each with its own search path, in\n+      --  particular when using different compilers with different default\n+      --  search directories.\n+   end record;\n+   --  This record contains the context in which projects are parsed and\n+   --  processed (finding importing project, resolving external values,...)\n+\n+   procedure Initialize (Self : in out Environment);\n+   --  Initialize a new environment\n+\n+   procedure Free (Self : in out Environment);\n+   --  Free the memory used by Self\n+\n+   -------------------\n+   -- Project nodes --\n+   -------------------\n+\n    type Project_Node_Tree_Data;\n    type Project_Node_Tree_Ref is access all Project_Node_Tree_Data;\n    --  Type to designate a project node tree, so that several project node\n@@ -100,7 +130,8 @@ package Prj.Tree is\n    pragma Inline (No);\n    --  Return True if Node = Empty_Node\n \n-   procedure Initialize (Tree : Project_Node_Tree_Ref);\n+   procedure Initialize (Tree : Project_Node_Tree_Ref;\n+                         Env : in out Environment);\n    --  Initialize the Project File tree: empty the Project_Nodes table\n    --  and reset the Projects_Htable.\n \n@@ -1457,21 +1488,10 @@ package Prj.Tree is\n    type Project_Node_Tree_Data is record\n       Project_Nodes : Tree_Private_Part.Project_Node_Table.Instance;\n       Projects_HT   : Tree_Private_Part.Projects_Htable.Instance;\n-\n-      External : Prj.Ext.External_References;\n-      --  External references are stored in this hash table (and manipulated\n-      --  through subprograms in prj-ext.ads). External references are\n-      --  project-tree specific so that one can load the same tree twice but\n-      --  have two views of it, for instance.\n-\n-      Project_Path : aliased Prj.Env.Project_Search_Path;\n-      --  The project path is tree specific, since we might want to load\n-      --  simultaneously multiple projects, each with its own search path, in\n-      --  particular when using different compilers with different default\n-      --  search directories.\n    end record;\n \n-   procedure Free (Proj : in out Project_Node_Tree_Ref);\n+   procedure Free (Proj : in out Project_Node_Tree_Ref;\n+                   Env : in out Environment);\n    --  Free memory used by Prj\n \n private"}, {"sha": "ebcc815c76e920aa0984345fba1fc9475ad58278", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fe3c4e68b9ab02f60ee33acfc325cfda76591/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=804fe3c4e68b9ab02f60ee33acfc325cfda76591", "patch": "@@ -1321,6 +1321,8 @@ package Prj is\n       case Qualifier is\n          when Aggregate =>\n             Aggregated_Projects : Aggregated_Project_List := null;\n+            --  List of aggregated projects (which could themselves be\n+            --  aggregate projects).\n \n          when others =>\n             null;"}]}