{"sha": "10122cbf2160faf8fa42adf61c599143b6d87481", "node_id": "C_kwDOANBUbNoAKDEwMTIyY2JmMjE2MGZhZjhmYTQyYWRmNjFjNTk5MTQzYjZkODc0ODE", "commit": {"author": {"name": "Nirmal Patel", "email": "npate012@gmail.com", "date": "2021-10-26T01:55:04Z"}, "committer": {"name": "Nirmal Patel", "email": "npate012@gmail.com", "date": "2021-10-26T01:55:04Z"}, "message": "Converted FnType preprocessor defines into constants\n\nSigned-off-by: Nirmal Patel <npate012@gmail.com>", "tree": {"sha": "341eec036f8244bacfd22acd2376152f6a891794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/341eec036f8244bacfd22acd2376152f6a891794"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10122cbf2160faf8fa42adf61c599143b6d87481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10122cbf2160faf8fa42adf61c599143b6d87481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10122cbf2160faf8fa42adf61c599143b6d87481", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10122cbf2160faf8fa42adf61c599143b6d87481/comments", "author": {"login": "nirmal-j-patel", "id": 5339144, "node_id": "MDQ6VXNlcjUzMzkxNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5339144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirmal-j-patel", "html_url": "https://github.com/nirmal-j-patel", "followers_url": "https://api.github.com/users/nirmal-j-patel/followers", "following_url": "https://api.github.com/users/nirmal-j-patel/following{/other_user}", "gists_url": "https://api.github.com/users/nirmal-j-patel/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirmal-j-patel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirmal-j-patel/subscriptions", "organizations_url": "https://api.github.com/users/nirmal-j-patel/orgs", "repos_url": "https://api.github.com/users/nirmal-j-patel/repos", "events_url": "https://api.github.com/users/nirmal-j-patel/events{/privacy}", "received_events_url": "https://api.github.com/users/nirmal-j-patel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nirmal-j-patel", "id": 5339144, "node_id": "MDQ6VXNlcjUzMzkxNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5339144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirmal-j-patel", "html_url": "https://github.com/nirmal-j-patel", "followers_url": "https://api.github.com/users/nirmal-j-patel/followers", "following_url": "https://api.github.com/users/nirmal-j-patel/following{/other_user}", "gists_url": "https://api.github.com/users/nirmal-j-patel/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirmal-j-patel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirmal-j-patel/subscriptions", "organizations_url": "https://api.github.com/users/nirmal-j-patel/orgs", "repos_url": "https://api.github.com/users/nirmal-j-patel/repos", "events_url": "https://api.github.com/users/nirmal-j-patel/events{/privacy}", "received_events_url": "https://api.github.com/users/nirmal-j-patel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78ed354283b17658d922029f07e4e7401039a4a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78ed354283b17658d922029f07e4e7401039a4a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78ed354283b17658d922029f07e4e7401039a4a3"}], "stats": {"total": 55, "additions": 29, "deletions": 26}, "files": [{"sha": "501ce3fba5b7894f83aaeeb853a84a4a8bc7eb6b", "filename": "gcc/rust/typecheck/rust-hir-type-check-implitem.h", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10122cbf2160faf8fa42adf61c599143b6d87481/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-implitem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10122cbf2160faf8fa42adf61c599143b6d87481/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-implitem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-implitem.h?ref=10122cbf2160faf8fa42adf61c599143b6d87481", "patch": "@@ -111,9 +111,9 @@ class TypeCheckTopLevelExternItem : public TypeCheckBase\n \tcontext->insert_type (param.get_mappings (), param_tyty);\n       }\n \n-    uint8_t flags = FNTYPE_IS_EXTERN_FLAG;\n+    uint8_t flags = TyTy::FnType::FNTYPE_IS_EXTERN_FLAG;\n     if (function.is_variadic ())\n-      flags |= FNTYPE_IS_VARADIC_FLAG;\n+      flags |= TyTy::FnType::FNTYPE_IS_VARADIC_FLAG;\n \n     auto fnType = new TyTy::FnType (\n       function.get_mappings ().get_hirid (),\n@@ -272,11 +272,14 @@ class TypeCheckTopLevelImplItem : public TypeCheckBase\n \tcontext->insert_type (param.get_mappings (), param_tyty);\n       }\n \n-    auto fnType = new TyTy::FnType (\n-      function.get_mappings ().get_hirid (),\n-      function.get_mappings ().get_defid (), function.get_function_name (),\n-      function.is_method () ? FNTYPE_IS_METHOD_FLAG : FNTYPE_DEFAULT_FLAGS,\n-      ABI::RUST, std::move (params), ret_type, std::move (substitutions));\n+    auto fnType = new TyTy::FnType (function.get_mappings ().get_hirid (),\n+\t\t\t\t    function.get_mappings ().get_defid (),\n+\t\t\t\t    function.get_function_name (),\n+\t\t\t\t    function.is_method ()\n+\t\t\t\t      ? TyTy::FnType::FNTYPE_IS_METHOD_FLAG\n+\t\t\t\t      : TyTy::FnType::FNTYPE_DEFAULT_FLAGS,\n+\t\t\t\t    ABI::RUST, std::move (params), ret_type,\n+\t\t\t\t    std::move (substitutions));\n \n     context->insert_type (function.get_mappings (), fnType);\n   }"}, {"sha": "17def2b6aee2ffc32842a4060ccfe6a110196a0b", "filename": "gcc/rust/typecheck/rust-hir-type-check-stmt.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10122cbf2160faf8fa42adf61c599143b6d87481/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10122cbf2160faf8fa42adf61c599143b6d87481/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-stmt.h?ref=10122cbf2160faf8fa42adf61c599143b6d87481", "patch": "@@ -331,12 +331,12 @@ class TypeCheckStmt : public TypeCheckBase\n \tcontext->insert_type (param.get_mappings (), param_tyty);\n       }\n \n-    auto fnType\n-      = new TyTy::FnType (function.get_mappings ().get_hirid (),\n-\t\t\t  function.get_mappings ().get_defid (),\n-\t\t\t  function.get_function_name (), FNTYPE_DEFAULT_FLAGS,\n-\t\t\t  ABI::RUST, std::move (params), ret_type,\n-\t\t\t  std::move (substitutions));\n+    auto fnType = new TyTy::FnType (function.get_mappings ().get_hirid (),\n+\t\t\t\t    function.get_mappings ().get_defid (),\n+\t\t\t\t    function.get_function_name (),\n+\t\t\t\t    TyTy::FnType::FNTYPE_DEFAULT_FLAGS,\n+\t\t\t\t    ABI::RUST, std::move (params), ret_type,\n+\t\t\t\t    std::move (substitutions));\n     context->insert_type (function.get_mappings (), fnType);\n \n     TyTy::FnType *resolved_fn_type = fnType;"}, {"sha": "a85fe6693b903192f2ffcb699843cea80e1c955f", "filename": "gcc/rust/typecheck/rust-hir-type-check-toplevel.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10122cbf2160faf8fa42adf61c599143b6d87481/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-toplevel.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10122cbf2160faf8fa42adf61c599143b6d87481/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-toplevel.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-toplevel.h?ref=10122cbf2160faf8fa42adf61c599143b6d87481", "patch": "@@ -290,12 +290,12 @@ class TypeCheckTopLevel : public TypeCheckBase\n \tcontext->insert_type (param.get_mappings (), param_tyty);\n       }\n \n-    auto fnType\n-      = new TyTy::FnType (function.get_mappings ().get_hirid (),\n-\t\t\t  function.get_mappings ().get_defid (),\n-\t\t\t  function.get_function_name (), FNTYPE_DEFAULT_FLAGS,\n-\t\t\t  ABI::RUST, std::move (params), ret_type,\n-\t\t\t  std::move (substitutions));\n+    auto fnType = new TyTy::FnType (function.get_mappings ().get_hirid (),\n+\t\t\t\t    function.get_mappings ().get_defid (),\n+\t\t\t\t    function.get_function_name (),\n+\t\t\t\t    TyTy::FnType::FNTYPE_DEFAULT_FLAGS,\n+\t\t\t\t    ABI::RUST, std::move (params), ret_type,\n+\t\t\t\t    std::move (substitutions));\n     context->insert_type (function.get_mappings (), fnType);\n   }\n "}, {"sha": "0febc6c45cf6c9e721e62847cc304a004695471c", "filename": "gcc/rust/typecheck/rust-hir-type-check.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10122cbf2160faf8fa42adf61c599143b6d87481/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10122cbf2160faf8fa42adf61c599143b6d87481/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc?ref=10122cbf2160faf8fa42adf61c599143b6d87481", "patch": "@@ -583,8 +583,9 @@ TraitItemReference::get_type_from_fn (/*const*/ HIR::TraitItemFunc &fn) const\n     = new TyTy::FnType (fn.get_mappings ().get_hirid (),\n \t\t\tfn.get_mappings ().get_defid (),\n \t\t\tfunction.get_function_name (),\n-\t\t\tfunction.is_method () ? FNTYPE_IS_METHOD_FLAG\n-\t\t\t\t\t      : FNTYPE_DEFAULT_FLAGS,\n+\t\t\tfunction.is_method ()\n+\t\t\t  ? TyTy::FnType::FNTYPE_IS_METHOD_FLAG\n+\t\t\t  : TyTy::FnType::FNTYPE_DEFAULT_FLAGS,\n \t\t\tABI::RUST, std::move (params), ret_type, substitutions);\n \n   context->insert_type (fn.get_mappings (), resolved);"}, {"sha": "aa24464f41bca2e31755d5af58efe54d737ce010", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10122cbf2160faf8fa42adf61c599143b6d87481/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10122cbf2160faf8fa42adf61c599143b6d87481/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=10122cbf2160faf8fa42adf61c599143b6d87481", "patch": "@@ -1138,11 +1138,10 @@ class ADTType : public BaseType, public SubstitutionRef\n class FnType : public BaseType, public SubstitutionRef\n {\n public:\n-  // FIXME these could be constants\n-#define FNTYPE_DEFAULT_FLAGS 0x00\n-#define FNTYPE_IS_METHOD_FLAG 0x01\n-#define FNTYPE_IS_EXTERN_FLAG 0x02\n-#define FNTYPE_IS_VARADIC_FLAG 0X04\n+  static const uint8_t FNTYPE_DEFAULT_FLAGS = 0x00;\n+  static const uint8_t FNTYPE_IS_METHOD_FLAG = 0x01;\n+  static const uint8_t FNTYPE_IS_EXTERN_FLAG = 0x02;\n+  static const uint8_t FNTYPE_IS_VARADIC_FLAG = 0X04;\n \n   FnType (HirId ref, DefId id, std::string identifier, uint8_t flags, ABI abi,\n \t  std::vector<std::pair<HIR::Pattern *, BaseType *>> params,"}]}