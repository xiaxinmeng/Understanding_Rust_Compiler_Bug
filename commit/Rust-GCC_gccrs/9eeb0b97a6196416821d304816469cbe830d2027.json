{"sha": "9eeb0b97a6196416821d304816469cbe830d2027", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVlYjBiOTdhNjE5NjQxNjgyMWQzMDQ4MTY0NjljYmU4MzBkMjAyNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-10-30T08:28:48Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-10-30T08:28:48Z"}, "message": "Fix typo in documentation of __builtin_expect_with_probability.\n\n2018-10-30  Martin Liska  <mliska@suse.cz>\n\n\t* doc/extend.texi: Fix typo in documentation\n\tof __builtin_expect_with_probability.\n\nFrom-SVN: r265615", "tree": {"sha": "ed6a68e1bcd1807b4504b5e4258678f03158a58c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed6a68e1bcd1807b4504b5e4258678f03158a58c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9eeb0b97a6196416821d304816469cbe830d2027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eeb0b97a6196416821d304816469cbe830d2027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eeb0b97a6196416821d304816469cbe830d2027", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eeb0b97a6196416821d304816469cbe830d2027/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4267ed519538295a3a71d75ca6002ec8489f206a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4267ed519538295a3a71d75ca6002ec8489f206a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4267ed519538295a3a71d75ca6002ec8489f206a"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "f6137d60b1e4e4f28940310babb1a5b511f28b74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eeb0b97a6196416821d304816469cbe830d2027/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eeb0b97a6196416821d304816469cbe830d2027/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9eeb0b97a6196416821d304816469cbe830d2027", "patch": "@@ -1,3 +1,8 @@\n+2018-10-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/extend.texi: Fix typo in documentation\n+\tof __builtin_expect_with_probability.\n+\n 2018-10-29  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/87721"}, {"sha": "8772f3afe6bd32bcb85d20bf75c36d8a46c11f4e", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eeb0b97a6196416821d304816469cbe830d2027/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eeb0b97a6196416821d304816469cbe830d2027/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=9eeb0b97a6196416821d304816469cbe830d2027", "patch": "@@ -12027,7 +12027,7 @@ when testing pointer or floating-point values.\n @deftypefn {Built-in Function} long __builtin_expect_with_probability\n (long @var{exp}, long @var{c}, long @var{probability})\n \n-The built-in has same semantics as @code{__builtin_expect_with_probability},\n+The built-in has same semantics as @code{__builtin_expect},\n but user can provide expected probability (in percent) for value of @var{exp}.\n Last argument @var{probability} is of float type and valid values\n are in inclusive range 0.0f and 1.0f."}]}