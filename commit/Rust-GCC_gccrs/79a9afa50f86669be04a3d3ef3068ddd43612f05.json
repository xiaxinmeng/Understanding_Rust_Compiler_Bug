{"sha": "79a9afa50f86669be04a3d3ef3068ddd43612f05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlhOWFmYTUwZjg2NjY5YmUwNGEzZDNlZjMwNjhkZGQ0MzYxMmYwNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-06-13T03:33:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-06-13T03:33:06Z"}, "message": "PR c++/86098 - ICE with template placeholder for TTP.\n\n\t* typeck.c (structural_comptypes) [TEMPLATE_TYPE_PARM]: Check\n\tCLASS_PLACEHOLDER_TEMPLATE.\n\nFrom-SVN: r261536", "tree": {"sha": "30fa7ce5a79bfe42395187b86296cf784ef1e6a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30fa7ce5a79bfe42395187b86296cf784ef1e6a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79a9afa50f86669be04a3d3ef3068ddd43612f05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79a9afa50f86669be04a3d3ef3068ddd43612f05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79a9afa50f86669be04a3d3ef3068ddd43612f05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79a9afa50f86669be04a3d3ef3068ddd43612f05/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b4b756f2dc834577025b339eb1adc1f38763bce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b4b756f2dc834577025b339eb1adc1f38763bce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b4b756f2dc834577025b339eb1adc1f38763bce"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "4c23d574bf1e5a94c2813ab3ddef2eede0d6a288", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79a9afa50f86669be04a3d3ef3068ddd43612f05/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79a9afa50f86669be04a3d3ef3068ddd43612f05/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=79a9afa50f86669be04a3d3ef3068ddd43612f05", "patch": "@@ -1,3 +1,9 @@\n+2018-06-12  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/86098 - ICE with template placeholder for TTP.\n+\t* typeck.c (structural_comptypes) [TEMPLATE_TYPE_PARM]: Check\n+\tCLASS_PLACEHOLDER_TEMPLATE.\n+\n 2018-06-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl2.c (coerce_new_type, coerce_delete_type): Add location_t"}, {"sha": "b033afd9884d5806dea1e4d1e2f888af33047a44", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79a9afa50f86669be04a3d3ef3068ddd43612f05/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79a9afa50f86669be04a3d3ef3068ddd43612f05/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=79a9afa50f86669be04a3d3ef3068ddd43612f05", "patch": "@@ -1375,6 +1375,11 @@ structural_comptypes (tree t1, tree t2, int strict)\n \t template parameters set, they can't be equal.  */\n       if (!comp_template_parms_position (t1, t2))\n \treturn false;\n+      /* If T1 and T2 don't represent the same class template deduction,\n+         they aren't equal.  */\n+      if (CLASS_PLACEHOLDER_TEMPLATE (t1)\n+\t  != CLASS_PLACEHOLDER_TEMPLATE (t2))\n+\treturn false;\n       /* Constrained 'auto's are distinct from parms that don't have the same\n \t constraints.  */\n       if (!equivalent_placeholder_constraints (t1, t2))"}, {"sha": "82c3f83710faf7a7ba2949b6dea455a2d68c4728", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction58.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79a9afa50f86669be04a3d3ef3068ddd43612f05/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79a9afa50f86669be04a3d3ef3068ddd43612f05/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction58.C?ref=79a9afa50f86669be04a3d3ef3068ddd43612f05", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/86098\n+// { dg-additional-options -std=c++17 }\n+\n+template <class _Res> class future;\n+template <class T> T&& declval();\n+\n+template<template <class...> class T>\n+struct construct_deduced {\n+  template <class... AN>\n+  using deduced_t = decltype(T{declval<AN>()...});\n+  template<class... AN>\n+  deduced_t<AN...> operator()(AN&&... an) const;\n+};\n+\n+template<class T>\n+future<T> future_from(T singleSender);"}]}