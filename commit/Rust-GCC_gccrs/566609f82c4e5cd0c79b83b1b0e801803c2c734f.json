{"sha": "566609f82c4e5cd0c79b83b1b0e801803c2c734f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY2NjA5ZjgyYzRlNWNkMGM3OWI4M2IxYjBlODAxODAzYzJjNzM0Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-24T04:22:34Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-24T04:22:34Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1271", "tree": {"sha": "d866aa4031cab477ec11df5693ef81ac48367bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d866aa4031cab477ec11df5693ef81ac48367bbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/566609f82c4e5cd0c79b83b1b0e801803c2c734f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566609f82c4e5cd0c79b83b1b0e801803c2c734f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/566609f82c4e5cd0c79b83b1b0e801803c2c734f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566609f82c4e5cd0c79b83b1b0e801803c2c734f/comments", "author": null, "committer": null, "parents": [{"sha": "2296cba35f3b6706fab781b07cd4f55d9e4084ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2296cba35f3b6706fab781b07cd4f55d9e4084ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2296cba35f3b6706fab781b07cd4f55d9e4084ae"}], "stats": {"total": 46, "additions": 10, "deletions": 36}, "files": [{"sha": "0d29606031b4a31cec94bc68b9500fb2c28711b1", "filename": "gcc/cccp.c", "status": "modified", "additions": 10, "deletions": 36, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566609f82c4e5cd0c79b83b1b0e801803c2c734f/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566609f82c4e5cd0c79b83b1b0e801803c2c734f/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=566609f82c4e5cd0c79b83b1b0e801803c2c734f", "patch": "@@ -67,7 +67,6 @@ typedef unsigned char U_CHAR;\n #include <sys/stat.h>\n #include <ctype.h>\n #include <stdio.h>\n-#include <signal.h>\n \n #ifndef VMS\n #ifndef USG\n@@ -866,24 +865,10 @@ static int deps_size;\n /* Number of bytes since the last newline.  */\n static int deps_column;\n \n-/* File name which deps are being written to.\n-   This is 0 if deps are being written to stdout.  */\n-static char *deps_file = 0;\n-\n /* Nonzero means -I- has been seen,\n    so don't look for #include \"foo\" the source-file directory.  */\n static int ignore_srcdir;\n \f\n-/* Handler for SIGPIPE.  */\n-\n-static void\n-pipe_closed (signo)\n-     /* If this is missing, some compilers complain.  */\n-     int signo;\n-{\n-  fatal (\"output pipe has been closed\");\n-}\n-\n int\n main (argc, argv)\n      int argc;\n@@ -913,6 +898,9 @@ main (argc, argv)\n   /* Non-0 means don't output the preprocessed program.  */\n   int inhibit_output = 0;\n \n+  /* File name which deps are being written to.\n+     This is 0 if deps are being written to stdout.  */\n+  char *deps_file = 0;\n   /* Stream on which to print the dependency information.  */\n   FILE *deps_stream = 0;\n   /* Target-name to write with the dependency information.  */\n@@ -962,10 +950,6 @@ main (argc, argv)\n   no_output = 0;\n   cplusplus = 0;\n \n-#ifdef SIGPIPE\n-  signal (SIGPIPE, pipe_closed);\n-#endif\n-\n   for (i = 0; include_defaults[i].fname; i++)\n     max_include_len = MAX (max_include_len,\n \t\t\t   strlen (include_defaults[i].fname));\n@@ -1143,9 +1127,6 @@ main (argc, argv)\n \t    || !strcmp (argv[i], \"-MMD\")) {\n \t  i++;\n \t  deps_file = argv[i];\n-\t  deps_stream = fopen (argv[i], \"a\");\n-\t  if (deps_stream == 0)\n-\t    pfatal_with_name (argv[i]);\n \t} else {\n \t  /* For -M and -MM, write deps on standard output\n \t     and suppress the usual output.  */\n@@ -1658,9 +1639,6 @@ main (argc, argv)\n     }\n       \n     deps_file = output_file;\n-    deps_stream = fopen (output_file, \"a\");\n-    if (deps_stream == 0)\n-      pfatal_with_name (output_file);\n   }\n \n   /* For -M, print the expected object file name\n@@ -1816,22 +1794,20 @@ main (argc, argv)\n   }\n \n   if (print_deps) {\n-    /* Don't actually write the deps file if compilation has failed.\n-       Delete it instead.  */\n-    if (errors > 0 && deps_file != 0)\n-      unlink (deps_file);\n-    else {\n+    /* Don't actually write the deps file if compilation has failed.  */\n+    if (errors == 0) {\n+      if (deps_file && ! (deps_stream = fopen (deps_file, \"a\")))\n+\tpfatal_with_name (deps_file);\n       fputs (deps_buffer, deps_stream);\n       putc ('\\n', deps_stream);\n-      if (deps_stream != stdout) {\n-\tfclose (deps_stream);\n-\tif (ferror (deps_stream))\n+      if (deps_file) {\n+\tif (ferror (deps_stream) || fclose (deps_stream) != 0)\n \t  fatal (\"I/O error on output\");\n       }\n     }\n   }\n \n-  if (ferror (stdout))\n+  if (ferror (stdout) || fclose (stdout) != 0)\n     fatal (\"I/O error on output\");\n \n   if (errors)\n@@ -8419,8 +8395,6 @@ static void\n fatal (str, arg)\n      char *str, *arg;\n {\n-  if (deps_file)\n-    unlink (deps_file);\n   fprintf (stderr, \"%s: \", progname);\n   fprintf (stderr, str, arg);\n   fprintf (stderr, \"\\n\");"}]}