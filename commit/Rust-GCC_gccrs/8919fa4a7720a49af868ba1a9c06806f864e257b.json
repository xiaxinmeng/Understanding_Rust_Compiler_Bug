{"sha": "8919fa4a7720a49af868ba1a9c06806f864e257b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkxOWZhNGE3NzIwYTQ5YWY4NjhiYTFhOWMwNjgwNmY4NjRlMjU3Yg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2007-07-05T18:43:16Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2007-07-05T18:43:16Z"}, "message": "re PR libgcj/28190 (libjava bootstrap failure on IRIX 6.5: stdint.h misdetection)\n\n\tPR libgcj/28190\n\t* inclhack.def (irix_stdint_c99): New fix.\n\t* fixincl.x: Regenerate.\n\t* tests/base/stdint.h: New test.\n\nFrom-SVN: r126377", "tree": {"sha": "a42051c89a8248de5f2c5fe584116500e53c315b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a42051c89a8248de5f2c5fe584116500e53c315b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8919fa4a7720a49af868ba1a9c06806f864e257b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8919fa4a7720a49af868ba1a9c06806f864e257b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8919fa4a7720a49af868ba1a9c06806f864e257b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8919fa4a7720a49af868ba1a9c06806f864e257b/comments", "author": null, "committer": null, "parents": [{"sha": "bd76921050ba5a4817a8b833b232cb595d2d96e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd76921050ba5a4817a8b833b232cb595d2d96e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd76921050ba5a4817a8b833b232cb595d2d96e6"}], "stats": {"total": 107, "additions": 96, "deletions": 11}, "files": [{"sha": "526e003e43cf418be89a8d0184b21538b9888813", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8919fa4a7720a49af868ba1a9c06806f864e257b/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8919fa4a7720a49af868ba1a9c06806f864e257b/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=8919fa4a7720a49af868ba1a9c06806f864e257b", "patch": "@@ -1,3 +1,10 @@\n+2007-07-05  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\tPR libgcj/28190\n+\t* inclhack.def (irix_stdint_c99): New fix.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/stdint.h: New test.\n+\n 2007-06-06  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR testsuite/31828"}, {"sha": "f6288d2661de0fb033129c0d8db486fd9c58fd22", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 55, "deletions": 11, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8919fa4a7720a49af868ba1a9c06806f864e257b/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8919fa4a7720a49af868ba1a9c06806f864e257b/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=8919fa4a7720a49af868ba1a9c06806f864e257b", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Tuesday June  5, 2007 at 02:48:40 PM PDT\n+ * It has been AutoGen-ed  Friday June 29, 2007 at 06:59:26 PM MEST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Jun  5 14:48:40 PDT 2007\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Fri Jun 29 18:59:26 MEST 2007\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 209 fixup descriptions.\n+ * This file contains 210 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -26,19 +26,18 @@\n  *  \n  *  You may redistribute it and/or modify it under the terms of the\n  *  GNU General Public License, as published by the Free Software\n- *  Foundation; either version 2 of the License, or (at your option)\n- *  any later version.\n+ *  Foundation; either version 2, or (at your option) any later version.\n  *  \n  *  inclhack is distributed in the hope that it will be useful,\n  *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n  *  See the GNU General Public License for more details.\n  *  \n  *  You should have received a copy of the GNU General Public License\n- *  along with inclhack.  If not, write to:\n- *  \tThe Free Software Foundation, Inc.,\n- *  \t51 Franklin Street, Fifth Floor\n- *  \tBoston, MA  02110-1301, USA.\n+ *  along with inclhack.  See the file \"COPYING\".  If not,\n+ *  write to:  The Free Software Foundation, Inc.,\n+ *             59 Temple Place - Suite 330,\n+ *             Boston,  MA  02111-1307, USA.\n  */\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3918,6 +3917,45 @@ typedef int socklen_t;\\n\\\n #endif /* _NO_XOPEN4 && _NO_XOPEN5 */\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Irix_Stdint_C99 fix\n+ */\n+tSCC zIrix_Stdint_C99Name[] =\n+     \"irix_stdint_c99\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zIrix_Stdint_C99List[] =\n+  \"stdint.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzIrix_Stdint_C99Machs[] = {\n+        \"mips-sgi-irix6.5\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zIrix_Stdint_C99Select0[] =\n+       \"(#ifndef __c99\\n\\\n+)(#error This header file is to be used only for c99 mode compilations)\";\n+\n+#define    IRIX_STDINT_C99_TEST_CT  1\n+static tTestDesc aIrix_Stdint_C99Tests[] = {\n+  { TT_EGREP,    zIrix_Stdint_C99Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Irix_Stdint_C99\n+ */\n+static const char* apzIrix_Stdint_C99Patch[] = {\n+    \"format\",\n+    \"#if 0\\n\\\n+%2\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Irix_Stdio_Va_List fix\n@@ -8518,9 +8556,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          254\n+#define REGEX_COUNT          255\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            209\n+#define FIX_COUNT            210\n \n /*\n  *  Enumerate the fixes\n@@ -8619,6 +8657,7 @@ typedef enum {\n     IRIX_ASM_APOSTROPHE_FIXIDX,\n     IRIX_LIMITS_CONST_FIXIDX,\n     IRIX_SOCKLEN_T_FIXIDX,\n+    IRIX_STDINT_C99_FIXIDX,\n     IRIX_STDIO_VA_LIST_FIXIDX,\n     IRIX_WCSFTIME_FIXIDX,\n     ISC_FMOD_FIXIDX,\n@@ -9203,6 +9242,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      IRIX_SOCKLEN_T_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aIrix_Socklen_TTests,   apzIrix_Socklen_TPatch, 0 },\n \n+  {  zIrix_Stdint_C99Name,    zIrix_Stdint_C99List,\n+     apzIrix_Stdint_C99Machs,\n+     IRIX_STDINT_C99_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aIrix_Stdint_C99Tests,   apzIrix_Stdint_C99Patch, 0 },\n+\n   {  zIrix_Stdio_Va_ListName,    zIrix_Stdio_Va_ListList,\n      apzIrix_Stdio_Va_ListMachs,\n      IRIX_STDIO_VA_LIST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "f7f9888969fae6c70125be127da26f241788232c", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8919fa4a7720a49af868ba1a9c06806f864e257b/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8919fa4a7720a49af868ba1a9c06806f864e257b/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=8919fa4a7720a49af868ba1a9c06806f864e257b", "patch": "@@ -2210,6 +2210,24 @@ fix = {\n     test_text = \"#define _SOCKLEN_T\\ntypedef u_int32_t socklen_t;\";\n };\n \n+/*\n+ *  IRIX 6.5 <stdint.h> only works with ISO C99 and errors out\n+ *  otherwise.\n+ */\n+fix = {\n+    hackname  = irix_stdint_c99;\n+    files     = stdint.h;\n+    select = \"(#ifndef __c99\\n)(#error This header file is to be used only for c99 mode compilations)\";\n+\n+    mach      = \"mips-sgi-irix6.5\";\n+    c_fix  = format;\n+    c_fix_arg = \"#if 0\\n\"\n+\t        \"%2\";\n+    test_text =\n+    \"#ifndef __c99\\n#error This header file is to be used only for c99 mode compilations\\n#else\";\n+};\n+\n+\n /*\n  *  IRIX 5.x's stdio.h and IRIX 6.5's internal/stdio_core.h declare\n  *  some functions that take a va_list as"}, {"sha": "369b0120118a6b54659d8691d727c3b6ff1dec2b", "filename": "fixincludes/tests/base/stdint.h", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8919fa4a7720a49af868ba1a9c06806f864e257b/fixincludes%2Ftests%2Fbase%2Fstdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8919fa4a7720a49af868ba1a9c06806f864e257b/fixincludes%2Ftests%2Fbase%2Fstdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstdint.h?ref=8919fa4a7720a49af868ba1a9c06806f864e257b", "patch": "@@ -0,0 +1,16 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/stdint.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( IRIX_STDINT_C99_CHECK )\n+#if 0\n+#error This header file is to be used only for c99 mode compilations\n+#else\n+#endif  /* IRIX_STDINT_C99_CHECK */"}]}