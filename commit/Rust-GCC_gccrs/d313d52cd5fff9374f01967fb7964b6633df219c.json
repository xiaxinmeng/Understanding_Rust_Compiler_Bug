{"sha": "d313d52cd5fff9374f01967fb7964b6633df219c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMxM2Q1MmNkNWZmZjkzNzRmMDE5NjdmYjc5NjRiNjYzM2RmMjE5Yw==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2016-12-02T14:10:33Z"}, "committer": {"name": "Sebastian Huber", "email": "sh@gcc.gnu.org", "date": "2016-12-02T14:10:33Z"}, "message": "[RTEMS] Fix libgomp for nthreads == 1\n\nlibgomp/\n\n        * config/rtems/pool.h (gomp_get_thread_pool): Return proper\n        thread pool in case nthreads == 1.\n\nFrom-SVN: r243179", "tree": {"sha": "653fcd1f097ac796d49bea19a3fca4d48bf32f50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/653fcd1f097ac796d49bea19a3fca4d48bf32f50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d313d52cd5fff9374f01967fb7964b6633df219c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d313d52cd5fff9374f01967fb7964b6633df219c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d313d52cd5fff9374f01967fb7964b6633df219c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d313d52cd5fff9374f01967fb7964b6633df219c/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "310a7f96996f46f1565376f092e08daa1d44d1e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/310a7f96996f46f1565376f092e08daa1d44d1e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/310a7f96996f46f1565376f092e08daa1d44d1e7"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "f072ce4971175c6cfa8629584f52c7a2e9665f3e", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d313d52cd5fff9374f01967fb7964b6633df219c/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d313d52cd5fff9374f01967fb7964b6633df219c/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=d313d52cd5fff9374f01967fb7964b6633df219c", "patch": "@@ -1,3 +1,8 @@\n+2016-12-02  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* config/rtems/pool.h (gomp_get_thread_pool): Return proper\n+\tthread pool in case nthreads == 1.\n+\n 2016-11-30  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* config/nvptx/env.c: Delete."}, {"sha": "e69eca45dda615539ed1e64821fa3d7f2a22112a", "filename": "libgomp/config/rtems/pool.h", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d313d52cd5fff9374f01967fb7964b6633df219c/libgomp%2Fconfig%2Frtems%2Fpool.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d313d52cd5fff9374f01967fb7964b6633df219c/libgomp%2Fconfig%2Frtems%2Fpool.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Frtems%2Fpool.h?ref=d313d52cd5fff9374f01967fb7964b6633df219c", "patch": "@@ -87,28 +87,24 @@ static inline struct gomp_thread_pool *\n gomp_get_thread_pool (struct gomp_thread *thr, unsigned nthreads)\n {\n   struct gomp_thread_pool *pool;\n+  struct gomp_thread_pool_reservoir *res;\n \n   if (__builtin_expect (thr->thread_pool == NULL, 0))\n     pthread_setspecific (gomp_thread_destructor, thr);\n \n-  if (nthreads != 1)\n+  res = gomp_get_thread_pool_reservoir ();\n+  if (res != NULL)\n     {\n-      struct gomp_thread_pool_reservoir *res =\n-\tgomp_get_thread_pool_reservoir ();\n-      if (res != NULL)\n-\t{\n-\t  gomp_sem_wait (&res->available);\n-\t  gomp_mutex_lock (&res->lock);\n-\t  pool = res->pools[--res->index];\n-\t  gomp_mutex_unlock (&res->lock);\n-\t  pool->threads_busy = nthreads;\n-\t  thr->thread_pool = pool;\n-\t}\n-      else\n-\tpool = gomp_get_own_thread_pool (thr, nthreads);\n+      gomp_sem_wait (&res->available);\n+      gomp_mutex_lock (&res->lock);\n+      pool = res->pools[--res->index];\n+      gomp_mutex_unlock (&res->lock);\n+      pool->threads_busy = nthreads;\n+      thr->thread_pool = pool;\n     }\n   else\n-    pool = NULL;\n+    pool = gomp_get_own_thread_pool (thr, nthreads);\n+\n   return pool;\n }\n "}]}