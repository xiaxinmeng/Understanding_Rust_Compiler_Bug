{"sha": "a4d3961ad61b17eecfb6968552ae4e6704c64540", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRkMzk2MWFkNjFiMTdlZWNmYjY5Njg1NTJhZTRlNjcwNGM2NDU0MA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-08-06T16:57:53Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-08-06T16:57:53Z"}, "message": "profile.c (branch_prob): Remove unused variable insn.\n\n\t* profile.c (branch_prob): Remove unused variable insn.\n\n\t* Makefile.in (local-alloc.o): Add dependency on except.h.\n\n\t* local-alloc.c: Include except.h for can_throw_internal prototype.\n\nFrom-SVN: r44665", "tree": {"sha": "ca515252204eb7227888e0361680bc2601da6c70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca515252204eb7227888e0361680bc2601da6c70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4d3961ad61b17eecfb6968552ae4e6704c64540", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d3961ad61b17eecfb6968552ae4e6704c64540", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4d3961ad61b17eecfb6968552ae4e6704c64540", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d3961ad61b17eecfb6968552ae4e6704c64540/comments", "author": null, "committer": null, "parents": [{"sha": "1d4820563901c443ef95b649963c54efbb1268a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4820563901c443ef95b649963c54efbb1268a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d4820563901c443ef95b649963c54efbb1268a4"}], "stats": {"total": 62, "additions": 35, "deletions": 27}, "files": [{"sha": "400bf99304bb2c1bcd1a28101f38080dfe773bf4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d3961ad61b17eecfb6968552ae4e6704c64540/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d3961ad61b17eecfb6968552ae4e6704c64540/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4d3961ad61b17eecfb6968552ae4e6704c64540", "patch": "@@ -1,3 +1,11 @@\n+2001-08-06  Andreas Jaeger  <aj@suse.de>\n+\n+\t* profile.c (branch_prob): Remove unused variable insn.\n+\n+\t* Makefile.in (local-alloc.o): Add dependency on except.h.\n+\n+\t* local-alloc.c: Include except.h for can_throw_internal prototype.\n+\n 2001-08-06  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.h (FORCE_PREFERRED_STACK_BOUNDARY_IN_MAIN): New.\n@@ -17,7 +25,7 @@\n \t* config/rs6000/darwin.h (DOUBLE_INT_ASM_OP): New macro.\n \n \t* config/rs6000/linux.h: Remove vtable thunks stuff we accidently\n-\treadded. \n+\treadded.\n \n \t* config/rs6000/linux64.h: Ditto.\n \n@@ -30,7 +38,7 @@\n \n \t* config/rs6000/sysv4.h: Move CPP_CPU_SPEC and ASM_CPU_SPEC back\n \tto rs6000.h\n-\t\n+\n 2001-08-05  Richard Henderson  <rth@redhat.com>\n \n \t* local-alloc.c (update_equiv_regs): Do not move insns that\n@@ -210,7 +218,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-08-04  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n-\t* config/m68hc11/m68hc11.md (\"cmphi_1\", \"cmpqi_1\"): Allow memory \n+\t* config/m68hc11/m68hc11.md (\"cmphi_1\", \"cmpqi_1\"): Allow memory\n \tand soft register for operand 0.\n \t(\"cmphi_z_used\", \"cmpqi_z_used\"): Allow memory for operand 0.\n \n@@ -227,7 +235,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-08-03  Zack Weinberg  <zackw@stanford.edu>\n \n-\t* sparc-protos.h: Add prototypes for fp_zero_operand and \n+\t* sparc-protos.h: Add prototypes for fp_zero_operand and\n \treg_or_0_operand.\n \t* sh-protos.h: Add prototype for fpul_operand.\n \n@@ -237,7 +245,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-08-03  Richard Henderson  <rth@redhat.com>\n \n-\t* target.h (gcc_target): Add asm_out.named_section, \n+\t* target.h (gcc_target): Add asm_out.named_section,\n \tsection_type_flags, have_named_sections.\n \t* target-def.h (TARGET_ASM_NAMED_SECTION): New.\n \t(TARGET_HAVE_NAMED_SECTIONS): New.\n@@ -287,7 +295,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t* config/ia64/sysv4.h, config/mcore/mcore-pe.h: Likewise.\n \t* config/mips/elf.h, config/mips/elf64.h: Likewise.\n \t* config/mips/iris6gld.h, config/mips/mips.h: Likewise.\n-\t* config/pa/pa64-hpux.h, \n+\t* config/pa/pa64-hpux.h,\n \n \t* config/elfos.h (ASM_OUTPUT_SECTION_NAME): Remove.\n \t(TARGET_ASM_NAMED_SECTION): New.\n@@ -383,7 +391,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t(__gthread_mutex_init_function): New function for mutex initialization.\n \n 2001-08-03  Daniel Berlin  <dan@cgsoftware.com>\n-\t\n+\n \t* Makefile.in: Revert screwed up commit.\n \n 2001-08-03  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n@@ -403,9 +411,9 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t(DTORS_SECTION_FUNCTION): Likewise for __do_global_dtors.\n \n 2001-08-03  Daniel Berlin  <dan@cgsoftware.com>\n-\t\n+\n \t* ChangeLog: Fix date on previous ChangeLog entry for GCSE.\n-\t\n+\n \t* Makefile.in: Add df.h to gcse.c dependencies.\n \n 2001-08-03  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n@@ -433,7 +441,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \tthe answer, and just want to know if the store itself was killed.\n \t(build_store_vector): Largely rewritten to calculate the various\n \tvectors properly, and somewhat optimized.\n-\t(store_motion): Init the df_analyzer, get REG_DEF chains. \n+\t(store_motion): Init the df_analyzer, get REG_DEF chains.\n \tAlso handle trapping expressions (since mems almost always trap)\n \t(simple_mem): Redefine what a simple mem is.\n \n@@ -453,7 +461,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t* doc/install.texi (Configuration): Fix markup.\n \t(Specific, i?86-*-udk): Likewise.\n \t(Specific, alpha*-dec-osf*): Warn against --with-gnu-as,\n-\t--with-gnu-ld. \n+\t--with-gnu-ld.\n \tDocument --enable-threads and --enable-libgcj status.\n \t(Specific, mips-sgi-irix*): Canonicalize triples.\n \t(Specific, mips-sgi-irix5): Warn about problems with this config.\n@@ -635,7 +643,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n 2001-07-11  Andrew Cagney  <ac131313@redhat.com>\n \n \t* config.gcc: Recognize powerpc-*-netbsd*.\n-\t\n+\n \t* doc/install.texi (Host/target specific installation notes for\n \tGCC): Mention powerpc-*-netbsd*.\n \n@@ -651,7 +659,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t(EXTRA_MULTILIB_PARTS): Add ncrti$(objext) and ncrtn$(objext).\n \t(ncrti.S, ncrtn.S): New targets.\n \t($(T)ncrti$(objext), $(T)ncrtn$(objext)): New targets.\n-\t\n+\n \t* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Recognize\n \t\"netbsd' as a V4 ABI.\n \t(ASM_SPEC): Check for -mcall-netbsd."}, {"sha": "6db8ae1ac97e474cf0033fe74d521b75e9c20b76", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d3961ad61b17eecfb6968552ae4e6704c64540/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d3961ad61b17eecfb6968552ae4e6704c64540/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a4d3961ad61b17eecfb6968552ae4e6704c64540", "patch": "@@ -794,7 +794,7 @@ LIB2FUNCS = _muldi3 _negdi2 _lshrdi3 _ashldi3 _ashrdi3 _ffsdi2 _clz \\\n     _mulvsi3 _mulvdi3 _negvsi2 _negvdi2 _ctors\n \n # Defined in libgcc2.c, included only in the static library.\n-LIB2FUNCS_ST = _eprintf _bb __gcc_bcmp \n+LIB2FUNCS_ST = _eprintf _bb __gcc_bcmp\n \n FPBIT_FUNCS = _pack_sf _unpack_sf _addsub_sf _mul_sf _div_sf \\\n     _fpcmp_parts_sf _compare_sf _eq_sf _ne_sf _gt_sf _ge_sf \\\n@@ -1496,7 +1496,7 @@ regclass.o : regclass.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) hard-reg-set.h flags.h\n    toplev.h function.h output.h $(GGC_H) $(TM_P_H) $(EXPR_H)\n local-alloc.o : local-alloc.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n-   output.h function.h $(INSN_ATTR_H) toplev.h $(TM_P_H)\n+   output.h function.h $(INSN_ATTR_H) toplev.h  except.h $(TM_P_H)\n bitmap.o : bitmap.c $(GCONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h $(BASIC_BLOCK_H) \\\n    $(REGS_H)\n \t$(CC) -c $(ALL_CFLAGS) -DGENERATOR_FILE $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)"}, {"sha": "efc31597908ec1acf9a435e0f64e175c8413e6ae", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d3961ad61b17eecfb6968552ae4e6704c64540/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d3961ad61b17eecfb6968552ae4e6704c64540/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=a4d3961ad61b17eecfb6968552ae4e6704c64540", "patch": "@@ -1,6 +1,6 @@\n /* Allocate registers within a basic block, for GNU compiler.\n    Copyright (C) 1987, 1988, 1991, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -73,6 +73,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"recog.h\"\n #include \"output.h\"\n #include \"toplev.h\"\n+#include \"except.h\"\n \f\n /* Next quantity number available for allocation.  */\n "}, {"sha": "b3ecf4c4429f06dfbb28847867de930c0f4fafa8", "filename": "gcc/profile.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d3961ad61b17eecfb6968552ae4e6704c64540/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d3961ad61b17eecfb6968552ae4e6704c64540/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=a4d3961ad61b17eecfb6968552ae4e6704c64540", "patch": "@@ -1,4 +1,4 @@\n-/* Calculate branch probabilities, and basic block execution counts. \n+/* Calculate branch probabilities, and basic block execution counts.\n    Copyright (C) 1990, 1991, 1992, 1993, 1994, 1996, 1997, 1998, 1999,\n    2000, 2001  Free Software Foundation, Inc.\n    Contributed by James E. Wilson, UC Berkeley/Cygnus Support;\n@@ -69,10 +69,10 @@ struct bb_info\n /* Keep all basic block indexes nonnegative in the gcov output.  Index 0\n    is used for entry block, last block exit block.   */\n #define GCOV_INDEX_TO_BB(i)  ((i) == 0 ? ENTRY_BLOCK_PTR\t\t\\\n-    \t\t\t      : (((i) == n_basic_blocks + 1)\t\t\\\n+\t\t\t      : (((i) == n_basic_blocks + 1)\t\t\\\n \t\t\t         ? EXIT_BLOCK_PTR : BASIC_BLOCK ((i)-1)))\n-#define BB_TO_GCOV_INDEX(bb)  ((bb) == ENTRY_BLOCK_PTR ? 0 \t\t\\\n-  \t\t\t       : ((bb) == EXIT_BLOCK_PTR\t\t\\\n+#define BB_TO_GCOV_INDEX(bb)  ((bb) == ENTRY_BLOCK_PTR ? 0\t\t\\\n+\t\t\t       : ((bb) == EXIT_BLOCK_PTR\t\t\\\n \t\t\t\t  ? n_basic_blocks + 1 : (bb)->index + 1))\n \n /* Name and file pointer of the output file for the basic block graph.  */\n@@ -179,7 +179,7 @@ output_gcov_string (string, delimiter)\n      long delimiter;\n {\n   long temp;\n-\t\t\t\n+\n   /* Write a delimiter to indicate that a file name follows.  */\n   __write_long (delimiter, bb_file, 4);\n \n@@ -355,7 +355,7 @@ compute_branch_probabilities ()\n \t\t  EDGE_INFO (e)->count_valid = 1;\n \t\t  e->count = total;\n \t\t  bi->succ_count--;\n-\t\t  \n+\n \t\t  BB_INFO (e->dest)->pred_count--;\n \t\t  changes = 1;\n \t\t}\n@@ -382,7 +382,7 @@ compute_branch_probabilities ()\n \t\t  EDGE_INFO (e)->count_valid = 1;\n \t\t  e->count = total;\n \t\t  bi->pred_count--;\n-\t\t  \n+\n \t\t  BB_INFO (e->src)->succ_count--;\n \t\t  changes = 1;\n \t\t}\n@@ -455,7 +455,7 @@ compute_branch_probabilities ()\n \n \t      prob = e->probability;\n \t      index = prob * 20 / REG_BR_PROB_BASE;\n-\t  \n+\n \t      if (index == 20)\n \t\tindex = 19;\n \t      hist_br_prob[index]++;\n@@ -471,7 +471,7 @@ compute_branch_probabilities ()\n \t\t\t\t       REG_NOTES (bb->end));\n \t    }\n \t  num_branches++;\n-\t  \n+\n \t}\n     }\n \n@@ -535,13 +535,12 @@ branch_prob ()\n      edge from entry node and every destination by fake edge to exit.\n      This keeps graph acyclic and our calculation exact for all normal\n      edges except for exit and entrance ones.\n-   \n+\n      We also add fake exit edges for each call and asm statement in the\n      basic, since it may not return.  */\n \n   for (i = 0; i < n_basic_blocks ; i++)\n     {\n-      rtx insn;\n       int need_exit_edge = 0, need_entry_edge = 0;\n       int have_exit_edge = 0, have_entry_edge = 0;\n       basic_block bb = BASIC_BLOCK (i);"}]}