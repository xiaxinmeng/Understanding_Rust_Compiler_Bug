{"sha": "43018f5892ff43551abad3f339bcb55cf74c89cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMwMThmNTg5MmZmNDM1NTFhYmFkM2YzMzliY2I1NWNmNzRjODljZg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-11-14T11:41:30Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-11-14T11:41:30Z"}, "message": "[Ada] Enhance constraints propagation to ease the work of optimizers\n\nThis patch recognizes additional object declarations whose defining\nidentifier is known statically to be valid. This allows additional\noptimizations to be performed by the front-end.\n\nExecuting:\n\n   gcc -c -gnatDG p.ads\n\nOn the following sources:\n\n----\nwith G;\nWith Q;\n\npackage P is\n\n  Val : constant Positive := Q.Config_Value (\"Size\");\n\n  package My_G is new G (Val);\n\nend P;\n----\ngeneric\n\n  Num : Natural := 0;\n\npackage G is\n\n  Multi : constant Boolean := Num > 0;\n\n  type Info is array (True .. Multi) of Integer;\n\n  type Arr is array (Natural range <>) of Boolean;\n\n  type Rec (D : Natural) is record\n    C : character;\n    I : Info;\n    E : Arr (0 .. D);\n  end record;\n\nend G;\n----\npackage Q is\n\n  function Config_Value (S : String) return Integer;\n\nend Q;\n----\n\nMust yield (note that variable Multi has been statically optimized to\ntrue):\n\n----\nwith g;\nwith q;\np_E : short_integer := 0;\n\npackage p is\n   p__R2s : constant integer := q.q__config_value (\"Size\");\n   [constraint_error when\n     not (p__R2s >= 1)\n     \"range check failed\"]\n   p__val : constant positive := p__R2s;\n\n   package p__my_g is\n      p__my_g__num : constant natural := p__val;\n      package p__my_g__g renames p__my_g;\n      package p__my_g__gGH renames p__my_g__g;\n      p__my_g__multi : constant boolean := true;\n      type p__my_g__info is array (true .. p__my_g__multi) of integer;\n      type p__my_g__arr is array (0 .. 16#7FFF_FFFF# range <>) of\n        boolean;\n      type p__my_g__rec (d : natural) is record\n         c : character;\n         i : p__my_g__info;\n         e : p__my_g__arr (0 .. d);\n      end record;\n      [type p__my_g__TinfoB is array (true .. p__my_g__multi range <>) of\n        integer]\n      freeze p__my_g__TinfoB [\n         procedure p__my_g__TinfoBIP (_init : in out p__my_g__TinfoB) is\n         begin\n            null;\n            return;\n         end p__my_g__TinfoBIP;\n      ]\n      freeze p__my_g__info []\n      freeze p__my_g__arr [\n         procedure p__my_g__arrIP (_init : in out p__my_g__arr) is\n         begin\n            null;\n            return;\n         end p__my_g__arrIP;\n      ]\n      freeze p__my_g__rec [\n         procedure p__my_g__recIP (_init : in out p__my_g__rec; d :\n           natural) is\n         begin\n            _init.d := d;\n            null;\n            return;\n         end p__my_g__recIP;\n      ]\n   end p__my_g;\n\n   package my_g is new g (p__val);\nend p;\n\nfreeze_generic info\n[subtype TinfoD1 is boolean range true .. multi]\nfreeze_generic TinfoD1\n[type TinfoB is array (true .. multi range <>) of integer]\nfreeze_generic TinfoB\nfreeze_generic arr\nfreeze_generic rec\n----\n\n2018-11-14  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch3.adb (Analyze_Object_Declaration): Use the\n\tActual_Subtype to preserve information about a constant\n\tinitialized with a non-static entity that is known to be valid,\n\twhen the type of the entity has a narrower range than that of\n\tthe nominal subtype of the constant.\n\t* checks.adb (Determine_Range): If the expression is a constant\n\tentity that is known-valid and has a defined Actual_Subtype, use\n\tit to determine the actual bounds of the value, to enable\n\tadditional optimizations.\n\nFrom-SVN: r266123", "tree": {"sha": "6bddd0ffa47a3dedf019d429021686a9e9e10bbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bddd0ffa47a3dedf019d429021686a9e9e10bbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43018f5892ff43551abad3f339bcb55cf74c89cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43018f5892ff43551abad3f339bcb55cf74c89cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43018f5892ff43551abad3f339bcb55cf74c89cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43018f5892ff43551abad3f339bcb55cf74c89cf/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c786216724918a454ed4634031f69efd275b963e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c786216724918a454ed4634031f69efd275b963e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c786216724918a454ed4634031f69efd275b963e"}], "stats": {"total": 57, "additions": 48, "deletions": 9}, "files": [{"sha": "3af78024531b00731ada21d3405648b100100fb7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43018f5892ff43551abad3f339bcb55cf74c89cf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43018f5892ff43551abad3f339bcb55cf74c89cf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=43018f5892ff43551abad3f339bcb55cf74c89cf", "patch": "@@ -1,3 +1,15 @@\n+2018-11-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Object_Declaration): Use the\n+\tActual_Subtype to preserve information about a constant\n+\tinitialized with a non-static entity that is known to be valid,\n+\twhen the type of the entity has a narrower range than that of\n+\tthe nominal subtype of the constant.\n+\t* checks.adb (Determine_Range): If the expression is a constant\n+\tentity that is known-valid and has a defined Actual_Subtype, use\n+\tit to determine the actual bounds of the value, to enable\n+\tadditional optimizations.\n+\n 2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* back_end.adb, checks.adb, exp_ch3.adb, exp_ch4.adb,"}, {"sha": "89f26fa0770bb313ea4585758cfee39633aed411", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43018f5892ff43551abad3f339bcb55cf74c89cf/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43018f5892ff43551abad3f339bcb55cf74c89cf/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=43018f5892ff43551abad3f339bcb55cf74c89cf", "patch": "@@ -722,7 +722,7 @@ package body Checks is\n       --  Generate a check to raise PE if alignment may be inappropriate\n \n       else\n-         --  If the original expression is a non-static constant, use the name\n+         --  If the original expression is a nonstatic constant, use the name\n          --  of the constant itself rather than duplicating its initialization\n          --  expression, which was extracted above.\n \n@@ -4563,6 +4563,17 @@ package body Checks is\n         or else Assume_No_Invalid_Values\n         or else Assume_Valid\n       then\n+         --  If this is a known valid constant with a nonstatic value, it may\n+         --  have inherited a narrower subtype from its initial value; use this\n+         --  saved subtype (see sem_ch3.adb).\n+\n+         if Is_Entity_Name (N)\n+           and then Ekind (Entity (N)) = E_Constant\n+           and then Present (Actual_Subtype (Entity (N)))\n+         then\n+            Typ := Actual_Subtype (Entity (N));\n+         end if;\n+\n          null;\n       else\n          Typ := Underlying_Type (Base_Type (Typ));"}, {"sha": "fae1d5dc66a1b7c8546c7d808674568f1bbe006a", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43018f5892ff43551abad3f339bcb55cf74c89cf/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43018f5892ff43551abad3f339bcb55cf74c89cf/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=43018f5892ff43551abad3f339bcb55cf74c89cf", "patch": "@@ -3657,7 +3657,7 @@ package body Sem_Ch3 is\n       Prev_Entity : Entity_Id := Empty;\n \n       procedure Check_Dynamic_Object (Typ : Entity_Id);\n-      --  A library-level object with non-static discriminant constraints may\n+      --  A library-level object with nonstatic discriminant constraints may\n       --  require dynamic allocation. The declaration is illegal if the\n       --  profile includes the restriction No_Implicit_Heap_Allocations.\n \n@@ -3672,7 +3672,7 @@ package body Sem_Ch3 is\n       --  This function is called when a non-generic library level object of a\n       --  task type is declared. Its function is to count the static number of\n       --  tasks declared within the type (it is only called if Has_Task is set\n-      --  for T). As a side effect, if an array of tasks with non-static bounds\n+      --  for T). As a side effect, if an array of tasks with nonstatic bounds\n       --  or a variant record type is encountered, Check_Restriction is called\n       --  indicating the count is unknown.\n \n@@ -4357,8 +4357,24 @@ package body Sem_Ch3 is\n                Set_Current_Value (Id, E);\n             end if;\n \n-         elsif Is_Scalar_Type (T) and then Is_OK_Static_Expression (E) then\n+         elsif Is_Scalar_Type (T)\n+            and then Is_OK_Static_Expression (E)\n+         then\n+            Set_Is_Known_Valid (Id);\n+\n+         --  If it is a constant initialized with a valid nonstatic entity,\n+         --  the constant is known valid as well, and can inherit the subtype\n+         --  of the entity if it is a subtype of the given type. This info\n+         --  is preserved on the actual subtype of the constant.\n+\n+         elsif Is_Scalar_Type (T)\n+           and then Is_Entity_Name (E)\n+           and then Is_Known_Valid (Entity (E))\n+           and then In_Subrange_Of (Etype (Entity (E)), T)\n+         then\n             Set_Is_Known_Valid (Id);\n+            Set_Ekind (Id, E_Constant);\n+            Set_Actual_Subtype (Id, Etype (Entity (E)));\n          end if;\n \n          --  Deal with setting of null flags\n@@ -5399,7 +5415,7 @@ package body Sem_Ch3 is\n                        (\"subtype mark required\", One_Cstr);\n \n                   --  String subtype must have a lower bound of 1 in SPARK.\n-                  --  Note that we do not need to test for the non-static case\n+                  --  Note that we do not need to test for the nonstatic case\n                   --  here, since that was already taken care of in\n                   --  Process_Range_Expr_In_Decl.\n \n@@ -12471,7 +12487,7 @@ package body Sem_Ch3 is\n       end if;\n \n       --  It is unsafe to share the bounds of a scalar type, because the Itype\n-      --  is elaborated on demand, and if a bound is non-static then different\n+      --  is elaborated on demand, and if a bound is nonstatic, then different\n       --  orders of elaboration in different units will lead to different\n       --  external symbols.\n \n@@ -16421,7 +16437,7 @@ package body Sem_Ch3 is\n \n       --  Because the implicit base is used in the conversion of the bounds, we\n       --  have to freeze it now. This is similar to what is done for numeric\n-      --  types, and it equally suspicious, but otherwise a non-static bound\n+      --  types, and it equally suspicious, but otherwise a nonstatic bound\n       --  will have a reference to an unfrozen type, which is rejected by Gigi\n       --  (???). This requires specific care for definition of stream\n       --  attributes. For details, see comments at the end of\n@@ -19343,8 +19359,8 @@ package body Sem_Ch3 is\n          end if;\n \n          --  In the subtype indication case, if the immediate parent of the\n-         --  new subtype is non-static, then the subtype we create is non-\n-         --  static, even if its bounds are static.\n+         --  new subtype is nonstatic, then the subtype we create is nonstatic,\n+         --  even if its bounds are static.\n \n          if Nkind (N) = N_Subtype_Indication\n            and then not Is_OK_Static_Subtype (Entity (Subtype_Mark (N)))"}]}