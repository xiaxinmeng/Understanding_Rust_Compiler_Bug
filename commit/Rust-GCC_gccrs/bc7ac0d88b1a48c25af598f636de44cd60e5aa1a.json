{"sha": "bc7ac0d88b1a48c25af598f636de44cd60e5aa1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM3YWMwZDg4YjFhNDhjMjVhZjU5OGY2MzZkZTQ0Y2Q2MGU1YWExYQ==", "commit": {"author": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-25T14:38:02Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-25T14:38:02Z"}, "message": "[multiple changes]\n\n2003-09-25  Sascha Brawer  <brawer@dandelis.ch>\n\n\t* java/awt/font/FontRenderContext.java (getTransform): Return\n\tcopy of internal transform object. Add Javadoc.\n\t* java/awt/geom/Rectangle2D.java (getPathIterator): Use the same\n\twinding rule as Sun J2SE.\n\t* javax/swing/border/MatteBorder.java (MatteBorder(Icon)): Docfix.\n\n2003-09-25  Ingo Proetel  <proetel@aicas.com>\n\n\t* java/rmi/Naming.java:\n\tAdded comments, now accepts pseudo protocol \"rmi\".\n\nFrom-SVN: r71777", "tree": {"sha": "98e9b1795bf4d73975fa89445f54388b466fb553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98e9b1795bf4d73975fa89445f54388b466fb553"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/comments", "author": null, "committer": null, "parents": [{"sha": "029e256e270438578036af00bae2fe084b5cd412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/029e256e270438578036af00bae2fe084b5cd412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/029e256e270438578036af00bae2fe084b5cd412"}], "stats": {"total": 84, "additions": 80, "deletions": 4}, "files": [{"sha": "9e33fe8651201d61a4d54bd6111c5cd7c50b15ad", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bc7ac0d88b1a48c25af598f636de44cd60e5aa1a", "patch": "@@ -1,3 +1,16 @@\n+2003-09-25  Sascha Brawer  <brawer@dandelis.ch>\n+\n+\t* java/awt/font/FontRenderContext.java (getTransform): Return\n+\tcopy of internal transform object. Add Javadoc.\n+\t* java/awt/geom/Rectangle2D.java (getPathIterator): Use the same\n+\twinding rule as Sun J2SE.\n+\t* javax/swing/border/MatteBorder.java (MatteBorder(Icon)): Docfix.\n+\n+2003-09-25  Ingo Proetel  <proetel@aicas.com>\n+\n+\t* java/rmi/Naming.java:\n+\tAdded comments, now accepts pseudo protocol \"rmi\".\n+\n 2003-09-25  Guilhem Lavaux  <guilhem@kaffe.org>\n \n \t* java/text/DecimalFormat.java (format): Don't immediatly round"}, {"sha": "2bec38d7e2d4c6115c6200ab394a4db126e0251d", "filename": "libjava/java/awt/font/FontRenderContext.java", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/libjava%2Fjava%2Fawt%2Ffont%2FFontRenderContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/libjava%2Fjava%2Fawt%2Ffont%2FFontRenderContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FFontRenderContext.java?ref=bc7ac0d88b1a48c25af598f636de44cd60e5aa1a", "patch": "@@ -1,5 +1,5 @@\n /* FontRenderContext.java\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -88,11 +88,22 @@ public boolean equals (FontRenderContext rhs)\n             && usesFractionalMetrics == rhs.usesFractionalMetrics ());\n   }\n \n+\n+  /**\n+   * Retrieves the affine transform for scaling typographical points\n+   * to raster pixels.\n+   *\n+   * @return a clone of the transform object.\n+   */\n   public AffineTransform getTransform ()\n   {\n-    return affineTransform;\n+    if (affineTransform == null)\n+      return new AffineTransform ();\n+    else\n+      return new AffineTransform (affineTransform);\n   }\n \n+\n   /**\n    * Returns the hash code of the font render context.\n    */"}, {"sha": "8203ca3447048b48bc1261d824eea0eb13930618", "filename": "libjava/java/awt/geom/Rectangle2D.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java?ref=bc7ac0d88b1a48c25af598f636de44cd60e5aa1a", "patch": "@@ -399,7 +399,13 @@ public PathIterator getPathIterator(final AffineTransform at)\n \n       public int getWindingRule()\n       {\n-        return WIND_EVEN_ODD;\n+        // A test program showed that Sun J2SE 1.3.1 and 1.4.1_01\n+        // return WIND_NON_ZERO paths.  While this does not really\n+        // make any difference for rectangles (because they are not\n+        // self-intersecting), it seems appropriate to behave\n+        // identically.\n+\n+        return WIND_NON_ZERO;\n       }\n \n       public boolean isDone()"}, {"sha": "2dd50d328044b456467c7d423d723da80ee740fa", "filename": "libjava/java/rmi/Naming.java", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/libjava%2Fjava%2Frmi%2FNaming.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/libjava%2Fjava%2Frmi%2FNaming.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2FNaming.java?ref=bc7ac0d88b1a48c25af598f636de44cd60e5aa1a", "patch": "@@ -44,26 +44,72 @@\n \n public final class Naming {\n \n+/** <pre>\n+ * Looks for the remote object that is associated with the named service.\n+ * Name and location is given in form of a URL without a scheme:\n+ * \n+ *   //host:port/service-name\n+ *  \n+ * The port is optional.\n+ * </pre>\n+ * @param name the service name and location\n+ * @return Remote-object that implements the named service\n+ * @throws NotBoundException if no object implements the service\n+ * @throws MalformedURLException \n+ * @throws RemoteException\n+ */\n public static Remote lookup(String name) throws NotBoundException, MalformedURLException, RemoteException {\n+\t// hack to accept \"rmi://host:port/service\" strings\n+\tif(name.startsWith(\"rmi:\")){ name = name.substring(4); }\n \tURL u = new URL(\"http:\" + name);\n \treturn (getRegistry(u).lookup(u.getFile().substring(1)));\n }\n \n+/**\n+ * Try to bind the given object to the given service name. \n+ * @param name\n+ * @param obj\n+ * @throws AlreadyBoundException\n+ * @throws MalformedURLException\n+ * @throws RemoteException\n+ */\n public static void bind(String name, Remote obj) throws AlreadyBoundException, MalformedURLException, RemoteException {\n \tURL u = new URL(\"http:\" + name);\n \tgetRegistry(u).bind(u.getFile().substring(1), obj);\n }\n \n+/**\n+ * Remove a binding for a given service name.\n+ * @param name\n+ * @throws RemoteException\n+ * @throws NotBoundException\n+ * @throws MalformedURLException\n+ */\n public static void unbind(String name) throws RemoteException, NotBoundException, MalformedURLException {\n \tURL u = new URL(\"http:\" + name);\n \tgetRegistry(u).unbind(u.getFile().substring(1));\n }\n \n+/**\n+ * Forces the binding between the given Remote-object and the given service name, even \n+ * if there was already an object bound to this name. \n+ * @param name\n+ * @param obj\n+ * @throws RemoteException\n+ * @throws MalformedURLException\n+ */\n public static void rebind(String name, Remote obj) throws RemoteException, MalformedURLException {\n \tURL u = new URL(\"http:\" + name);\n \tgetRegistry(u).rebind(u.getFile().substring(1), obj);\n }\n \n+/**\n+ * Lists all services at the named registry.\n+ * @param name url that specifies the registry\n+ * @return list of services at the name registry\n+ * @throws RemoteException\n+ * @throws MalformedURLException\n+ */\n public static String[] list(String name) throws RemoteException, MalformedURLException {\n \treturn (getRegistry(new URL(\"http:\" + name)).list());\n }"}, {"sha": "d5dc6ddf462bbe56c60c0d18ee811e02a705f27d", "filename": "libjava/javax/swing/border/MatteBorder.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/libjava%2Fjavax%2Fswing%2Fborder%2FMatteBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc7ac0d88b1a48c25af598f636de44cd60e5aa1a/libjava%2Fjavax%2Fswing%2Fborder%2FMatteBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FMatteBorder.java?ref=bc7ac0d88b1a48c25af598f636de44cd60e5aa1a", "patch": "@@ -183,7 +183,7 @@ public MatteBorder(Insets borderInsets, Icon tileIcon)\n    * at the left and right edge, the icon height for the top and\n    * bottom edge.\n    *\n-   * <p><img src=\"doc-files/MatteBorder-6.png\" width=\"500\" height=\"150\"\n+   * <p><img src=\"doc-files/MatteBorder-6.png\" width=\"379\" height=\"150\"\n    * alt=\"[A picture of a MatteBorder made by this constructor]\" />\n    *\n    * @param tileIcon an icon for tiling the border area."}]}