{"sha": "8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRjNDgxODFhZmZhMWQwM2VjOGQ0N2U1MTNkMWM2MmJkMTZkYTZmMw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-06-15T00:16:37Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-06-15T00:16:37Z"}, "message": "Daily bump.", "tree": {"sha": "8923c139bd5e0555e1b256bbaba2e7a7653b92a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8923c139bd5e0555e1b256bbaba2e7a7653b92a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/comments", "author": null, "committer": null, "parents": [{"sha": "d9f1466f88abef7c814d02ba39a6ea5ef420aaec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f1466f88abef7c814d02ba39a6ea5ef420aaec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9f1466f88abef7c814d02ba39a6ea5ef420aaec"}], "stats": {"total": 236, "additions": 235, "deletions": 1}, "files": [{"sha": "cc04030fdb7233c1ac38316b7aa0572e954efefc", "filename": "config/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "patch": "@@ -1,3 +1,10 @@\n+2021-06-14  Michael Forney  <mforney@mforney.org>\n+\n+\t* gettext.m4 (AM_GNU_GETTEXT): Skip checks for the internal\n+\tsymbols _nl_msg_cat_cntr, _nl_domain_bindings, and\n+\t_nl_expand_alias, if __GNU_GETTEXT_SUPPORTED_REVISION is defined.\n+\tBackport of gettext serial 68 patch.\n+\n 2021-05-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* acinclude.m4 (CYG_AC_PATH_SIM, CYG_AC_PATH_DEVO): Delete."}, {"sha": "65d57100f6acbe6ffdbaea125285f8f41d5135ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "patch": "@@ -1,3 +1,89 @@\n+2021-06-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/100876\n+\t* builtins.c (gimple_call_return_array): Check for attribute fn spec.\n+\tHandle calls to placement new.\n+\t(ndecl_dealloc_argno): Avoid placement delete.\n+\n+2021-06-14  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/100777\n+\t* config/rs6000/rs6000-call.c (rs6000_gimple_fold_mma_builtin): Use\n+\tcreate_tmp_reg_or_ssa_name().\n+\n+2021-06-14  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-cache.cc (ranger_cache::ranger_cache): Adjust.\n+\t(ranger_cache::enable_new_values): Set to specified value and\n+\treturn the old value.\n+\t(ranger_cache::disable_new_values): Delete.\n+\t(ranger_cache::fill_block_cache): Disable non 1st order derived\n+\tpoor values.\n+\t* gimple-range-cache.h (ranger_cache): Adjust prototypes.\n+\t* gimple-range.cc (gimple_ranger::range_of_expr): Adjust.\n+\n+2021-06-14  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/101058\n+\t* config/i386/i386-expand.c (ix86_vectorize_vec_perm_const):\n+\tReturn true early when testing with V2HImode.\n+\t* config/i386/mmx.md (*punpckwd): Split to sse2_pshuflw_1.\n+\n+2021-06-14  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/mve.md (mve_vec_unpack<US>_lo_<mode>): New pattern.\n+\t(mve_vec_unpack<US>_hi_<mode>): New pattern.\n+\t(@mve_vec_pack_trunc_lo_<mode>): New pattern.\n+\t(mve_vmovntq_<supf><mode>): Prefix with '@'.\n+\t* config/arm/neon.md (vec_unpack<US>_hi_<mode>): Move to\n+\tvec-common.md.\n+\t(vec_unpack<US>_lo_<mode>): Likewise.\n+\t(vec_pack_trunc_<mode>): Rename to\n+\tneon_quad_vec_pack_trunc_<mode>.\n+\t* config/arm/vec-common.md (vec_unpack<US>_hi_<mode>): New\n+\tpattern.\n+\t(vec_unpack<US>_lo_<mode>): New.\n+\t(vec_pack_trunc_<mode>): New.\n+\n+2021-06-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100934\n+\t* tree-ssa-dom.c (pass_dominator::execute): Properly\n+\tmark irreducible regions.\n+\n+2021-06-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Put r{...} on the same line as @item.\n+\n+2021-06-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Add missing newline.\n+\n+2021-06-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Remove '+' charasters.\n+\n+2021-06-14  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config.gcc (arc): Add support for with_cpu option.\n+\t* config/arc/arc.h (OPTION_DEFAULT_SPECS): Add fpu.\n+\n+2021-06-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/101031\n+\t* tree-ssa-strlen.c (maybe_invalidate): Increment max_size\n+\tinstead of size when accounting for a possibly string\n+\tterminating nul.\n+\n+2021-06-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* gimple-ssa-evrp.c (pointer_equiv_analyzer::~pointer_equiv_analyzer): Use delete[].\n+\n+2021-06-14  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-query.cc (gimple_range_global): Call get_range_global\n+\tif called after inlining.\n+\n 2021-06-13  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/101021"}, {"sha": "78287281a18b311e38928fbdfd163c1032c424fd", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "patch": "@@ -1 +1 @@\n-20210614\n+20210615"}, {"sha": "39fae4e6a8b44fc9a84db6dd084e3fb826a05b1c", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "patch": "@@ -1,3 +1,10 @@\n+2021-06-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR c++/101052\n+\t* known-headers.cc (get_stdlib_header_for_name): Add known\n+\theaders for EXIT_FAILURE, EXIT_SUCCESS, abort, atexit, calloc,\n+\texit, and getenv.\n+\n 2021-06-12  Jason Merrill  <jason@redhat.com>\n \n \t* c-attribs.c (handle_unused_attribute): Handle FIELD_DECL."}, {"sha": "665fcd84c2deffae715c5e9545f59d91e4c24912", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "patch": "@@ -1,3 +1,9 @@\n+2021-06-14  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR c/100913\n+\t* c-parser.c (c_parser_omp_clause_affinity): No need to set iterator\n+\tvar in the error case.\n+\n 2021-06-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR c/100920"}, {"sha": "f5659cf39b25659c52c36a529a4a61a856b4ffb0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "patch": "@@ -1,3 +1,9 @@\n+2021-06-14  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR c/100913\n+\t* parser.c (cp_parser_omp_clause_affinity): No need to set iterator\n+\tvar in the error case.\n+\n 2021-06-13  Trevor Saunders  <tbsaunde@tbsaunde.org>\n \n \t* constexpr.c (cxx_eval_call_expression): Iterate over vec<>"}, {"sha": "a0ee6eb21f5d82e3b433c37c4d023838d258b124", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "patch": "@@ -1,3 +1,8 @@\n+2021-06-14  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* resolve.c (resolve_variable): Remove *XCNEW used to\n+\tnullify nullified memory.\n+\n 2021-06-09  Martin Liska  <mliska@suse.cz>\n \n \t* intrinsic.texi: Add missing @headitem to tables with a header."}, {"sha": "fb8419834a0313e5b6a8bf235e67f1947bdd7967", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "patch": "@@ -1,3 +1,55 @@\n+2021-06-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/100876\n+\t* g++.dg/warn/Wmismatched-new-delete-4.C: New test.\n+\t* g++.dg/warn/Wmismatched-new-delete-5.C: New test.\n+\t* g++.dg/warn/Wstringop-overflow-7.C: New test.\n+\t* g++.dg/warn/Wfree-nonheap-object-6.C: New test.\n+\t* g++.dg/analyzer/placement-new.C: Prune out expected warning.\n+\n+2021-06-14  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/100777\n+\t* gcc.target/powerpc/pr100777.c: New test.\n+\n+2021-06-14  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/101058\n+\t* gcc.target/i386/pr101058.c: New test.\n+\n+2021-06-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR c++/101052\n+\t* g++.dg/spellcheck-stdlib.C: Add checks for <cstdlib> names.\n+\t* gcc.dg/spellcheck-stdlib.c: Likewise.\n+\n+2021-06-14  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-vclz.c: Update expected results.\n+\t* gcc.target/arm/simd/mve-vshl.c: Likewise.\n+\t* gcc.target/arm/simd/mve-vec-pack.c: New test.\n+\t* gcc.target/arm/simd/mve-vec-unpack.c: New test.\n+\n+2021-06-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100934\n+\t* gcc.dg/torture/pr100934.c: New testcase.\n+\n+2021-06-14  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\t* gcc.dg/sms-1.c: Remove scan-rtl-dump-times check.\n+\t* gcc.dg/sms-2.c: Remove scan-rtl-dump-times check.\n+\t* gcc.dg/sms-3.c: Remove scan-rtl-dump-times check.\n+\t* gcc.dg/sms-4.c: Remove scan-rtl-dump-times check.\n+\t* gcc.dg/sms-6.c: Remove scan-rtl-dump-times check.\n+\t* gcc.dg/sms-8.c: Remove scan-rtl-dump-times check.\n+\t* gcc.dg/sms-10.c: Remove scan-rtl-dump-times check.\n+\n+2021-06-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/101031\n+\t* gcc.dg/torture/pr101031.c: New testcase.\n+\n 2021-06-13  Jason Merrill  <jason@redhat.com>\n \n \t* gcc.dg/c2x-attr-maybe_unused-1.c: Expect no warnings."}, {"sha": "281385a6c2d7c9092094e7367b482668c446b682", "filename": "intl/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/intl%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/intl%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2FChangeLog?ref=8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "patch": "@@ -1,3 +1,7 @@\n+2021-06-14  Michael Forney  <mforney@mforney.org>\n+\n+\t* configure: Regenerated.\n+\n 2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR jit/100096"}, {"sha": "635bc1c4789ed5e04ce107cec6ba61e677639ac8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc48181affa1d03ec8d47e513d1c62bd16da6f3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8dc48181affa1d03ec8d47e513d1c62bd16da6f3", "patch": "@@ -1,3 +1,64 @@\n+2021-06-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/ranges_base.h (ranges::empty): Check whether\n+\tconversion to bool can throw.\n+\t* testsuite/std/ranges/access/empty.cc: Check for correct\n+\tnoexcept-specifier.\n+\n+2021-06-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/100894\n+\t* include/std/type_traits (__common_ref_impl<X&, Y&>): Only\n+\tuse the type if it's a reference.\n+\t* testsuite/20_util/common_reference/100894.cc: New test.\n+\n+2021-06-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/experimental/filesystem/path/native/conv_c++23.cc:\n+\tAdd dg-require-filesystem-ts directive.\n+\n+2021-06-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/101034\n+\t* include/std/any (any(in_place_t<T>, initializer_list<U>, A&&...))\n+\t(any::emplace<T>(initializer_list<U>, A&&...)): Fix constraint\n+\tto use lvalue.\n+\t* testsuite/20_util/any/cons/101034.cc: New test.\n+\n+2021-06-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/17_intro/headers/c++2017/all_attributes.cc: Add\n+\t-std=gnu++17 option.\n+\n+2021-06-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/101056\n+\t* libsupc++/compare (compare_partial_order_fallback): Add\n+\tconstraint using reversed parameter order, as per LWG 3465.\n+\t* testsuite/18_support/comparisons/algorithms/fallback.cc:\n+\tAdjust expected result.\n+\n+2021-06-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* libsupc++/compare (__decayed_same_as): New helper concept.\n+\t(strong_order, weak_order, partial_order): Constrain with new\n+\tconcept instead of using static_assert.\n+\t(compare_strong_order_fallback, compare_weak_order_fallback)\n+\t(compare_partial_order_fallback): Likewise. Do not deduce return\n+\ttypes. Remove redundant if-constexpr checks.\n+\t* testsuite/18_support/comparisons/algorithms/fallback.cc: New test.\n+\n+2021-06-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/101055\n+\t* include/std/tuple: Use reserved form of attribute name.\n+\t* testsuite/17_intro/headers/c++2011/all_attributes.cc: Add\n+\tcheck for no_unique_address.\n+\t* testsuite/17_intro/headers/c++2014/all_attributes.cc:\n+\tLikewise.\n+\t* testsuite/17_intro/headers/c++2017/all_attributes.cc:\n+\tLikewise.\n+\n 2021-06-11  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/fs_path.h (operator==, operator<=>): Use new"}]}