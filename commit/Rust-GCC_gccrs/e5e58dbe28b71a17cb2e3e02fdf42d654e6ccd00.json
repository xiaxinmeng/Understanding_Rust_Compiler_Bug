{"sha": "e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVlNThkYmUyOGI3MWExN2NiMmUzZTAyZmRmNDJkNjU0ZTZjY2QwMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-08-12T18:02:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-08-12T18:02:35Z"}, "message": "re PR c++/67108 (ICE: in cxx_eval_call_expression, at cp/constexpr.c:1345 when dumping)\n\n\tPR c++/67108\n\t* decl2.c (c_parse_final_cleanups): Set at_eof to 2 at end.\n\t* error.c (dump_template_bindings): Don't tsubst in that case.\n\nFrom-SVN: r226829", "tree": {"sha": "4b721044a7dd123ef8bf99b63365f215c68af112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b721044a7dd123ef8bf99b63365f215c68af112"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a024f5143d592db41c5316c24d3e10fd86c839ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a024f5143d592db41c5316c24d3e10fd86c839ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a024f5143d592db41c5316c24d3e10fd86c839ec"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "4f3f46dda344362c7dd1e7c585199067f0dc7751", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "patch": "@@ -1,5 +1,9 @@\n 2015-08-12  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/67108\n+\t* decl2.c (c_parse_final_cleanups): Set at_eof to 2 at end.\n+\t* error.c (dump_template_bindings): Don't tsubst in that case.\n+\n \tPR c++/67161\n \t* error.c (dump_decl) [TEMPLATE_ID_EXPR]: Pass\n \tTFF_NO_OMIT_DEFAULT_TEMPLATE_ARGUMENTS."}, {"sha": "ab6b3ec62069f7bd2b88ecf7858628ed3656c70e", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "patch": "@@ -4797,7 +4797,8 @@ extern GTY(()) vec<tree, va_gc> *local_classes;\n #endif /* !defined(NO_DOLLAR_IN_LABEL) || !defined(NO_DOT_IN_LABEL) */\n \n \f\n-/* Nonzero if we're done parsing and into end-of-file activities.  */\n+/* Nonzero if we're done parsing and into end-of-file activities.\n+   Two if we're done with front-end processing.  */\n \n extern int at_eof;\n "}, {"sha": "8e7a453ec1bbba7adc59b8ddf04750aa27c1bd13", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "patch": "@@ -4846,6 +4846,9 @@ c_parse_final_cleanups (void)\n \n   timevar_stop (TV_PHASE_DEFERRED);\n   timevar_start (TV_PHASE_PARSING);\n+\n+  /* Indicate that we're done with front end processing.  */\n+  at_eof = 2;\n }\n \n /* Perform any post compilation-proper cleanups for the C++ front-end."}, {"sha": "faf8744e225c19823283e2815e198021a45bc448", "filename": "gcc/cp/error.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "patch": "@@ -339,6 +339,11 @@ dump_template_bindings (cxx_pretty_printer *pp, tree parms, tree args,\n       && !DECL_LANG_SPECIFIC (current_function_decl))\n     return;\n \n+  /* Don't try to do this once cgraph starts throwing away front-end\n+     information.  */\n+  if (at_eof >= 2)\n+    return;\n+\n   FOR_EACH_VEC_SAFE_ELT (typenames, i, t)\n     {\n       if (need_semicolon)"}, {"sha": "d1e44827a3cc686bd8a7a6aa3fbd1b283a002e32", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-targ3.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-targ3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-targ3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-targ3.C?ref=e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "patch": "@@ -0,0 +1,40 @@\n+// PR c++/67108\n+// { dg-do compile { target c++11 } }\n+\n+template < typename, typename > struct is_same;\n+template < typename T > struct is_same <T, T >\n+{\n+  enum\n+  {\n+    value = true\n+  }\n+   ;\n+    constexpr bool operator () ()\n+  {\n+    return value;\n+  }\n+}\n+ ;\n+template < bool, typename = void >struct enable_if;\n+template < typename T > struct enable_if <true, T >\n+{\n+  typedef T type;\n+}\n+ ;\n+struct A;\n+template < typename, typename = void >struct F;\n+template < typename X > struct F <X, typename enable_if < is_same < X, A >\n+{\n+}\n+  () >::type >\n+{\n+  template < typename MakeDependent > F (MakeDependent)\n+  {\n+  }\n+}\n+;\n+\n+int main ()\n+{\n+  F < A > (1);\n+}"}]}