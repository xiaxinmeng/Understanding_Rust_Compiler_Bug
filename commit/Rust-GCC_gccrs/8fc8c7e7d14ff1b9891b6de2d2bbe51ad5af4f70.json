{"sha": "8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZjOGM3ZTdkMTRmZjFiOTg5MWI2ZGUyZDJiYmU1MWFkNWFmNGY3MA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-04-05T17:17:29Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-04-05T17:17:29Z"}, "message": "re PR middle-end/65665 (g++.dg/torture/pr64378.C   -O2 -flto -fno-use-linker-plugin -flto-partition=none)\n\nFix PR ipa/65665\n\n\tPR ipa/65665\n\t* ipa-icf.c (sem_function::equals_wpa): Verify that IPA CP\n\thas computed data structure.\n\t(sem_item_optimizer::update_hash_by_addr_refs): Likewise.\n\nFrom-SVN: r221872", "tree": {"sha": "462bc3752bbf0982b38517f9b4c8608b352b56bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/462bc3752bbf0982b38517f9b4c8608b352b56bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7870a3118b1b857ad373364f80875183e0587102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7870a3118b1b857ad373364f80875183e0587102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7870a3118b1b857ad373364f80875183e0587102"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "f9cb04c39b488a86f180252131686a6aeab751ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70", "patch": "@@ -1,3 +1,10 @@\n+2015-04-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/65665\n+\t* ipa-icf.c (sem_function::equals_wpa): Verify that IPA CP\n+\thas computed data structure.\n+\t(sem_item_optimizer::update_hash_by_addr_refs): Likewise.\n+\n 2015-04-04  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* invoke.texi (inline-unit-growth): Increase growth to 20%"}, {"sha": "8f8a0cf34636d57188bc52242fd98241ad3ea9a8", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=8fc8c7e7d14ff1b9891b6de2d2bbe51ad5af4f70", "patch": "@@ -535,7 +535,8 @@ sem_function::equals_wpa (sem_item *item,\n       && (TREE_CODE (TREE_TYPE (decl)) == METHOD_TYPE\n           || TREE_CODE (TREE_TYPE (item->decl)) == METHOD_TYPE)\n       && (ipa_node_params_sum == NULL\n-\t  || ipa_is_param_used (IPA_NODE_REF (dyn_cast <cgraph_node *>(node)),\n+\t  || IPA_NODE_REF (get_node ())->descriptors.is_empty ()\n+\t  || ipa_is_param_used (IPA_NODE_REF (get_node ()),\n \t\t\t\t0))\n       && compare_polymorphic_p ())\n     {\n@@ -2501,14 +2502,15 @@ sem_item_optimizer::update_hash_by_addr_refs ()\n       m_items[i]->update_hash_by_addr_refs (m_symtab_node_map);\n       if (m_items[i]->type == FUNC)\n \t{\n+\t  cgraph_node *cnode = dyn_cast <cgraph_node *> (m_items[i]->node);\n+\n \t  if (TREE_CODE (TREE_TYPE (m_items[i]->decl)) == METHOD_TYPE\n \t      && contains_polymorphic_type_p\n \t\t   (method_class_type (TREE_TYPE (m_items[i]->decl)))\n \t      && (DECL_CXX_CONSTRUCTOR_P (m_items[i]->decl)\n \t\t  || ((ipa_node_params_sum == NULL\n-\t\t       || ipa_is_param_used (\n-\t\t\t    IPA_NODE_REF\n-\t\t\t      (dyn_cast <cgraph_node *>(m_items[i]->node)), 0))\n+\t\t       || IPA_NODE_REF (cnode)->descriptors.is_empty ()\n+\t\t       || ipa_is_param_used (IPA_NODE_REF (cnode), 0))\n \t\t      && static_cast<sem_function *> (m_items[i])\n \t\t\t   ->compare_polymorphic_p ())))\n \t     {"}]}