{"sha": "c343d5a73197df34694a7c6eaebc4ae28081d8bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM0M2Q1YTczMTk3ZGYzNDY5NGE3YzZlYWViYzRhZTI4MDgxZDhiYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-10-11T09:39:41Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-10-11T09:39:41Z"}, "message": "re PR c++/31441 (ICE with variadic template and specialization)\n\n/testsuite\n2007-10-11  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR c++/31441\n\t* g++.dg/cpp0x/variadic83.C: New.\n\n/cp\n2007-10-11  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR c++/33461\n\t* pt.c (coerce_template_parameter_pack): Do not pass error_mark_node\n\tto convert_template_argument.\n\t(coerce_template_parms): Return error_mark_node after fixed-length\n\terror.\n\t(tsubst_decl): Check for error_mark_node the return value of the\n\tfirst tsubst in 'case VAR_DECL'.\n\n/testsuite\n2007-10-11  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR c++/33461\n\t* g++.dg/cpp0x/variadic81.C: New.\n\t* g++.dg/cpp0x/variadic82.C: Likewise.\n\nFrom-SVN: r129229", "tree": {"sha": "c5426eba18dae184c5aa3a4090afb67db54c2eb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5426eba18dae184c5aa3a4090afb67db54c2eb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c343d5a73197df34694a7c6eaebc4ae28081d8bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c343d5a73197df34694a7c6eaebc4ae28081d8bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c343d5a73197df34694a7c6eaebc4ae28081d8bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c343d5a73197df34694a7c6eaebc4ae28081d8bb/comments", "author": null, "committer": null, "parents": [{"sha": "20dcff2aec49d4274cf4564186ca11b78c01f4de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20dcff2aec49d4274cf4564186ca11b78c01f4de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20dcff2aec49d4274cf4564186ca11b78c01f4de"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "1aeacba8b96cbc4da4073d94bd6744a1fb3e71dc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c343d5a73197df34694a7c6eaebc4ae28081d8bb", "patch": "@@ -1,3 +1,13 @@\n+2007-10-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR c++/33461\n+\t* pt.c (coerce_template_parameter_pack): Do not pass error_mark_node\n+\tto convert_template_argument.\n+\t(coerce_template_parms): Return error_mark_node after fixed-length\n+\terror.\n+\t(tsubst_decl): Check for error_mark_node the return value of the\n+\tfirst tsubst in 'case VAR_DECL'.\n+\n 2007-10-08  Ollie Wild  <aaw@google.com>\n \n \t* typeck2.c (digest_init): Call cplus_expand_constant after"}, {"sha": "fe2a739d40c2a5c4c03f280b60547188f29700cd", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c343d5a73197df34694a7c6eaebc4ae28081d8bb", "patch": "@@ -4933,9 +4933,10 @@ coerce_template_parameter_pack (tree parms,\n             TREE_VEC_ELT (packed_types, arg_idx - parm_idx);\n         }\n \n-      arg = convert_template_argument (actual_parm, \n-                                       arg, new_args, complain, parm_idx,\n-                                       in_decl);\n+      if (arg != error_mark_node)\n+\targ = convert_template_argument (actual_parm, \n+\t\t\t\t\t arg, new_args, complain, parm_idx,\n+\t\t\t\t\t in_decl);\n       if (arg == error_mark_node)\n         (*lost)++;\n       TREE_VEC_ELT (packed_args, arg_idx - parm_idx) = arg; \n@@ -5086,6 +5087,7 @@ coerce_template_parms (tree parms,\n               else\n                 error (\"cannot expand %<%T%> into a fixed-length \"\n                        \"argument list\", arg);\n+\t      return error_mark_node;\n             }\n         }\n       else if (require_all_args)\n@@ -8087,6 +8089,8 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t       TYPE_NAME is not correct for the above test if\n \t       we've copied the type for a typedef.  */\n \t    type = tsubst (TREE_TYPE (t), args, complain, in_decl);\n+\t    if (type == error_mark_node)\n+\t      return error_mark_node;\n \t    r = TYPE_NAME (type);\n \t    break;\n \t  }"}, {"sha": "5129625c1634b9abdbdc25a80269277ea6483697", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c343d5a73197df34694a7c6eaebc4ae28081d8bb", "patch": "@@ -1,3 +1,14 @@\n+2007-10-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR c++/31441\n+\t* g++.dg/cpp0x/variadic83.C: New.\n+\n+2007-10-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR c++/33461\n+\t* g++.dg/cpp0x/variadic81.C: New.\n+\t* g++.dg/cpp0x/variadic82.C: Likewise.\n+\n 2007-10-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/33724"}, {"sha": "d710128df49a3bad2e1707169215dfe0cea722b7", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic81.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic81.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic81.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic81.C?ref=c343d5a73197df34694a7c6eaebc4ae28081d8bb", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/33461\n+// { dg-options \"-std=gnu++0x\" }\n+\n+template<typename> struct A;\n+\n+template<typename... T> struct A<T*>  // { dg-error \"not expanded|note\" }\n+{                                     // { dg-error \"not expanded|note\" }\n+  struct B;\n+};\n+\n+A<void*> a;"}, {"sha": "5acbc83a060e8c2b3cb32143bb35449e67a3f70d", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic82.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic82.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic82.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic82.C?ref=c343d5a73197df34694a7c6eaebc4ae28081d8bb", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/33461\n+// { dg-options \"-std=gnu++0x\" }\n+\n+template<typename> struct A;\n+\n+template<typename... T> struct A<T*...> // { dg-error \"cannot expand\" }\n+{\n+  struct B;\n+};\n+\n+A<void*> a; // { dg-error \"incomplete type\" }"}, {"sha": "ec6cabd4e4007b86402d731c1a4cdff13ea84ce0", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic83.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic83.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c343d5a73197df34694a7c6eaebc4ae28081d8bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic83.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic83.C?ref=c343d5a73197df34694a7c6eaebc4ae28081d8bb", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/31441\n+// { dg-options \"-std=gnu++0x\" }\n+\n+template<typename> struct A;\n+\n+template<typename... T> struct A<T...> { }; // { dg-error \"cannot expand\" }\n+\n+A<int> a; // { dg-error \"incomplete type\" }"}]}