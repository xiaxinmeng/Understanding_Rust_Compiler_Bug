{"sha": "15a40ced5aac977c558a93e969ce375cc8d0372b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVhNDBjZWQ1YWFjOTc3YzU1OGE5M2U5NjljZTM3NWNjOGQwMzcyYg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-06-21T20:11:14Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-06-21T20:11:14Z"}, "message": "Make-lang.in (F77_SRCS): Remove all .j files.\n\n\t* Make-lang.in (F77_SRCS): Remove all .j files.\n\t* Makefile.in (ASSERT_H, CONFIG_H, CONVERT_H, FLAGS_H, GGC_H,\n\tGLIMITS_H, HCONFIG_H, INPUT_H, OUTPUT_H, RTL_H, SYSTEM_H,\n\tTOPLEV_H, TREE_H): Remove references to .j files.\n\t(TCONFIG_H, TM_H): Remove entirely.\n\t(deps-kinda): Delete rule.\n\tCorrect commentary.\n\n\t* assert.j, config.j, convert.j. flags.j, ggc.j, glimits.j,\n\thconfig.j, input.j, output.j, rtl.j, system.j, toplev.j,\n\ttree.j, tconfig.j, tree.j: Delete.\n\n\t* ansify.c, bad.c, bit.c, com.c, com.h, intdoc.c, lex.c,\n\tparse.c, proj.c, proj.h, ste.c, target.c, target.h, top.c,\n\twhere.c, where.h: Include parent-directory headers directly.\n\t* lex.c: Don't include tree.h twice.\n\nFrom-SVN: r34638", "tree": {"sha": "d1ef72b000d594b2db01f39b22d15b7e42bd9d8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1ef72b000d594b2db01f39b22d15b7e42bd9d8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15a40ced5aac977c558a93e969ce375cc8d0372b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a40ced5aac977c558a93e969ce375cc8d0372b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15a40ced5aac977c558a93e969ce375cc8d0372b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a40ced5aac977c558a93e969ce375cc8d0372b/comments", "author": null, "committer": null, "parents": [{"sha": "5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7"}], "stats": {"total": 750, "additions": 134, "deletions": 616}, "files": [{"sha": "2f52b9050cb280da153fdbb636377dcec1e23696", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 79, "deletions": 60, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -1,3 +1,22 @@\n+2000-06-21  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* Make-lang.in (F77_SRCS): Remove all .j files.\n+\t* Makefile.in (ASSERT_H, CONFIG_H, CONVERT_H, FLAGS_H, GGC_H,\n+\tGLIMITS_H, HCONFIG_H, INPUT_H, OUTPUT_H, RTL_H, SYSTEM_H,\n+\tTOPLEV_H, TREE_H): Remove references to .j files.\n+\t(TCONFIG_H, TM_H): Remove entirely.\n+\t(deps-kinda): Delete rule.\n+\tCorrect commentary.\n+\n+\t* assert.j, config.j, convert.j. flags.j, ggc.j, glimits.j,\n+\thconfig.j, input.j, output.j, rtl.j, system.j, toplev.j,\n+\ttree.j, tconfig.j, tree.j: Delete.\n+\n+\t* ansify.c, bad.c, bit.c, com.c, com.h, intdoc.c, lex.c,\n+\tparse.c, proj.c, proj.h, ste.c, target.c, target.h, top.c,\n+\twhere.c, where.h: Include parent-directory headers directly.\n+\t* lex.c: Don't include tree.h twice.\n+\n 2000-05-17  H.J. Lu  (hjl@gnu.org)\n \n \t* Make-lang.in: Use a unique stamp for each target to support\n@@ -146,7 +165,7 @@ Sun Feb 27 16:40:33 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n 2000-02-23  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* com.c (ffecom_type_permanent_copy_): Delete unused function.\n-        (finish_decl): Don't change TREE_PERMANENT (DECL_INITIAL (decl)).\n+\t(finish_decl): Don't change TREE_PERMANENT (DECL_INITIAL (decl)).\n \n Sat Feb 19 18:43:13 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n@@ -203,9 +222,9 @@ Thu Dec 30 11:42:05 1999  Geoff Keating  <geoffk@cygnus.com>\n \t(ffecom_init_zero_): Remove obstack use.\n \t(ffecom_make_gfrt_): Remove obstack use.\n \t(ffecom_sym_transform_): Remove obstack use, save appropriate trees.\n-\t(ffecom_transform_common_): Remove obstack use, save appropriate \n+\t(ffecom_transform_common_): Remove obstack use, save appropriate\n \ttrees.\n-\t(ffecom_type_namelist_): Remove obstack use, save appropriate \n+\t(ffecom_type_namelist_): Remove obstack use, save appropriate\n \ttrees.\n \t(ffecom_type_vardesc_): Remove obstack use, save appropriate trees.\n \t(ffecom_lookup_label): Remove obstack use, save appropriate trees.\n@@ -262,11 +281,11 @@ Sun Nov 28 21:39:05 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* intrin.c (ffeintrin_cmp_name_): Don't needlessly cast away\n \tconst-ness.\n-\t\n+\n Sun Nov 28 21:15:29 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* com.c (ffecom_get_invented_identifier): Rewrite to take an ellipses.\n-\t\n+\n \t(ffecom_char_enhance_arg_, ffecom_do_entry_,\n \tffecom_f2c_make_type_, ffecom_gen_sfuncdef_,\n \tffecom_start_progunit_, ffecom_start_progunit_,\n@@ -295,7 +314,7 @@ Sun Nov 28 21:15:29 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \tffeste_io_icilist_, ffeste_io_inlist_, ffeste_io_olist_): Likewise.\n \n Wed Nov 10 12:43:21 1999  Philippe De Muyter  <phdm@macqel.be>\n-                          Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\t\t\t  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* proj.h: Test `GCC_VERSION', not `HAVE_GCC_VERSION'.\n \n@@ -396,9 +415,9 @@ Wed Aug 25 01:21:06 1999  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n Mon Aug  9 19:44:08 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-        * com.c (lang_print_error_function): Constify a char*.\n-        (init_parse): Remove redundant prototype for `print_error_function'.\n-        (lang_identify): Constify a char*.\n+\t* com.c (lang_print_error_function): Constify a char*.\n+\t(init_parse): Remove redundant prototype for `print_error_function'.\n+\t(lang_identify): Constify a char*.\n \n Thu Aug  5 02:40:42 1999  Jeffrey A Law  (law@cygnus.com)\n \n@@ -411,9 +430,9 @@ Thu Aug  5 02:40:42 1999  Jeffrey A Law  (law@cygnus.com)\n \t(ffecom_init_0): Init and use ptr_type_node.\n \n 1999-07-17  Alexandre Oliva  <oliva@dcc.unicamp.br>\n-        \n+\n \t* root.texi: Update e-mail addresses to gcc.gnu.org.\n-\t* g77spec.c (lang_specific_driver): Updated URL with bug reporting \n+\t* g77spec.c (lang_specific_driver): Updated URL with bug reporting\n \tinstructions to gcc.gnu.org.  Removed e-mail address.\n \n Sat Jul 17 11:28:43 1999  Craig Burley  <craig@jcb-sc.com>\n@@ -912,64 +931,64 @@ Fri Apr  2 12:49:12 1999  Craig Burley  <craig@jcb-sc.com>\n \n Tue Mar 30 12:04:11 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-        * sta.c (ffesta_ffebad_1sp, ffesta_ffebad_1st, ffesta_ffebad_2st):\n-        Const-ify a char*.\n-\n-        * sta.h (ffesta_ffebad_1sp, ffesta_ffebad_1st, ffesta_ffebad_2st):\n-        Likewise.\n-\n-        * stb.c (ffestb_local_u_): Likewise.\n-        (ffestb_do, ffestb_dowhile, ffestb_else, ffestb_elsexyz,\n-        ffestb_else3_, ffestb_endxyz, ffestb_goto, ffestb_let,\n-        ffestb_type, ffestb_type1_, ffestb_varlist, ffestb_R423B,\n-        ffestb_R522, ffestb_R528, ffestb_R542, ffestb_R834, ffestb_R835,\n-        ffestb_R838, ffestb_R841, ffestb_R1102, ffestb_blockdata,\n-        ffestb_R1212, ffestb_R1228, ffestb_V009, ffestb_module,\n-        ffestb_R809, ffestb_R810, ffestb_R10014_, ffestb_R10015_,\n-        ffestb_R10018_, ffestb_R1107, ffestb_R1202, ffestb_R12026_,\n-        ffestb_S3P4, ffestb_V012, ffestb_V014, ffestb_V025, ffestb_V0255_,\n-        ffestb_V020, ffestb_dimlist, ffestb_dummy, ffestb_R524,\n-        ffestb_R547, ffestb_decl_chartype, ffestb_decl_dbltype,\n-        ffestb_decl_gentype, ffestb_decl_recursive, ffestb_decl_entsp_2_,\n-        ffestb_decl_func_, ffestb_V003, ffestb_V016, ffestb_V027,\n-        ffestb_decl_R539): Likewise.\n-\n-        * stb.h (_ffestb_args_): Likewise.\n+\t* sta.c (ffesta_ffebad_1sp, ffesta_ffebad_1st, ffesta_ffebad_2st):\n+\tConst-ify a char*.\n \n-        * stc.c (ffestc_subr_binsrch_, ffestc_subr_is_present_,\n-        ffestc_subr_speccmp_, ffestc_R904, ffestc_R907): Likewise.\n+\t* sta.h (ffesta_ffebad_1sp, ffesta_ffebad_1st, ffesta_ffebad_2st):\n+\tLikewise.\n \n-        * std.c (ffestd_R1001dump_1005_1_, ffestd_R1001dump_1005_2_,\n-        ffestd_R1001dump_1005_3_, ffestd_R1001dump_1005_4_,\n-        ffestd_R1001dump_1005_5_, ffestd_R1001dump_1010_1_,\n-        ffestd_R1001dump_1010_2_, ffestd_R1001dump_1010_3_,\n-        ffestd_R1001dump_1010_4_, ffestd_R1001dump_1010_5_): Likewise.\n+\t* stb.c (ffestb_local_u_): Likewise.\n+\t(ffestb_do, ffestb_dowhile, ffestb_else, ffestb_elsexyz,\n+\tffestb_else3_, ffestb_endxyz, ffestb_goto, ffestb_let,\n+\tffestb_type, ffestb_type1_, ffestb_varlist, ffestb_R423B,\n+\tffestb_R522, ffestb_R528, ffestb_R542, ffestb_R834, ffestb_R835,\n+\tffestb_R838, ffestb_R841, ffestb_R1102, ffestb_blockdata,\n+\tffestb_R1212, ffestb_R1228, ffestb_V009, ffestb_module,\n+\tffestb_R809, ffestb_R810, ffestb_R10014_, ffestb_R10015_,\n+\tffestb_R10018_, ffestb_R1107, ffestb_R1202, ffestb_R12026_,\n+\tffestb_S3P4, ffestb_V012, ffestb_V014, ffestb_V025, ffestb_V0255_,\n+\tffestb_V020, ffestb_dimlist, ffestb_dummy, ffestb_R524,\n+\tffestb_R547, ffestb_decl_chartype, ffestb_decl_dbltype,\n+\tffestb_decl_gentype, ffestb_decl_recursive, ffestb_decl_entsp_2_,\n+\tffestb_decl_func_, ffestb_V003, ffestb_V016, ffestb_V027,\n+\tffestb_decl_R539): Likewise.\n+\n+\t* stb.h (_ffestb_args_): Likewise.\n+\n+\t* stc.c (ffestc_subr_binsrch_, ffestc_subr_is_present_,\n+\tffestc_subr_speccmp_, ffestc_R904, ffestc_R907): Likewise.\n+\n+\t* std.c (ffestd_R1001dump_1005_1_, ffestd_R1001dump_1005_2_,\n+\tffestd_R1001dump_1005_3_, ffestd_R1001dump_1005_4_,\n+\tffestd_R1001dump_1005_5_, ffestd_R1001dump_1010_1_,\n+\tffestd_R1001dump_1010_2_, ffestd_R1001dump_1010_3_,\n+\tffestd_R1001dump_1010_4_, ffestd_R1001dump_1010_5_): Likewise.\n \n-        * ste.c (ffeste_begin_iterdo_, ffeste_subr_file_): Likewise.\n+\t* ste.c (ffeste_begin_iterdo_, ffeste_subr_file_): Likewise.\n \n-        * sts.c (ffests_printf_1D, ffests_printf_1U, ffests_printf_1s,\n-        ffests_printf_2Us, ffests_puts, ffests_puttext): Likewise.\n+\t* sts.c (ffests_printf_1D, ffests_printf_1U, ffests_printf_1s,\n+\tffests_printf_2Us, ffests_puts, ffests_puttext): Likewise.\n \n-        * sts.h (ffests_printf_1D, ffests_printf_1U, ffests_printf_1s,\n-        ffests_printf_2Us, ffests_puts, ffests_puttext): Likewise.\n+\t* sts.h (ffests_printf_1D, ffests_printf_1U, ffests_printf_1s,\n+\tffests_printf_2Us, ffests_puts, ffests_puttext): Likewise.\n \n-        * stt.c (ffestt_exprlist_drive, ffestt_implist_drive,\n-        ffestt_tokenlist_drive): Add prototype arguments.\n+\t* stt.c (ffestt_exprlist_drive, ffestt_implist_drive,\n+\tffestt_tokenlist_drive): Add prototype arguments.\n \n-        * stt.h (ffestt_exprlist_drive, ffestt_implist_drive,\n-        ffestt_tokenlist_drive): Likewise.\n+\t* stt.h (ffestt_exprlist_drive, ffestt_implist_drive,\n+\tffestt_tokenlist_drive): Likewise.\n \n-        * stu.c (ffestu_dummies_transition_): Likewise.\n-        (ffestu_sym_end_transition): Const-ify a char*.\n+\t* stu.c (ffestu_dummies_transition_): Likewise.\n+\t(ffestu_sym_end_transition): Const-ify a char*.\n \n-        * stw.c (ffestw_display_state, ffestw_new, ffestw_pop): Add\n-        prototype arguments.\n+\t* stw.c (ffestw_display_state, ffestw_new, ffestw_pop): Add\n+\tprototype arguments.\n \n-        * stw.h (ffestw_display_state, ffestw_new, ffestw_pop): Likewise.\n+\t* stw.h (ffestw_display_state, ffestw_new, ffestw_pop): Likewise.\n \n-        * version.c (ffe_version_string): Const-ify a char*.\n+\t* version.c (ffe_version_string): Const-ify a char*.\n \n-        * version.h (ffe_version_string): Likewise.\n+\t* version.h (ffe_version_string): Likewise.\n \n Sat Mar 27 13:00:43 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n@@ -993,7 +1012,7 @@ Sat Mar 27 13:00:43 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \tffecom_get_identifier_, ffecom_decl_field,\n \tffecom_get_invented_identifier, lang_print_error_function,\n \tskip_redundant_dir_prefix, read_name_map, print_containing_files):\n-\tConst-ify a char*. \n+\tConst-ify a char*.\n \t(savestring): Remove, use `xstrdup' instead.\n \n \t* com.h (ffecom_decl_field, ffecom_get_invented_identifier):\n@@ -1201,7 +1220,7 @@ Wed Mar  3 00:05:52 1999  Craig Burley  <craig@jcb-sc.com>\n \n \t* g77.texi: Clarify/index lack of run-time allocation for\n \tconcatenation.\n-  \n+\n 1999-02-25  Andreas Jaeger  <aj@arthur.rhein-neckar.de>\n \n \t* f/intdoc.in: Add missing `,' after cross references.\n@@ -1329,7 +1348,7 @@ Sun Jan 31 20:34:29 1999  Zack Weinberg  <zack@rabi.columbia.edu>\n \n Tue Jan  5 22:12:41 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-        * Make-lang.in (g77.o): Depend on prefix.h.\n+\t* Make-lang.in (g77.o): Depend on prefix.h.\n \n Fri Nov 27 13:10:32 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n "}, {"sha": "f87842bb1998aea02c1735d047748ab8fb6a01fb", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -94,7 +94,6 @@ g77-cross$(exeext): g77$(exeext)\n \telse true; fi\n \n F77_SRCS = \\\n- $(srcdir)/f/assert.j \\\n  $(srcdir)/f/bad.c \\\n  $(srcdir)/f/bad.def \\\n  $(srcdir)/f/bad.h \\\n@@ -106,23 +105,17 @@ F77_SRCS = \\\n  $(srcdir)/f/com-rt.def \\\n  $(srcdir)/f/com.c \\\n  $(srcdir)/f/com.h \\\n- $(srcdir)/f/config.j \\\n- $(srcdir)/f/convert.j \\\n  $(srcdir)/f/data.c \\\n  $(srcdir)/f/data.h \\\n  $(srcdir)/f/equiv.c \\\n  $(srcdir)/f/equiv.h \\\n  $(srcdir)/f/expr.c \\\n  $(srcdir)/f/expr.h \\\n  $(srcdir)/f/fini.c \\\n- $(srcdir)/f/flags.j \\\n- $(srcdir)/f/glimits.j \\\n  $(srcdir)/f/global.c \\\n  $(srcdir)/f/global.h \\\n- $(srcdir)/f/hconfig.j \\\n  $(srcdir)/f/implic.c \\\n  $(srcdir)/f/implic.h \\\n- $(srcdir)/f/input.j \\\n  $(srcdir)/f/info-b.def \\\n  $(srcdir)/f/info-k.def \\\n  $(srcdir)/f/info-w.def \\\n@@ -139,11 +132,9 @@ F77_SRCS = \\\n  $(srcdir)/f/malloc.h \\\n  $(srcdir)/f/name.c \\\n  $(srcdir)/f/name.h \\\n- $(srcdir)/f/output.j \\\n  $(srcdir)/f/parse.c \\\n  $(srcdir)/f/proj.c \\\n  $(srcdir)/f/proj.h \\\n- $(srcdir)/f/rtl.j \\\n  $(srcdir)/f/src.c \\\n  $(srcdir)/f/src.h \\\n  $(srcdir)/f/st.c \\\n@@ -184,15 +175,10 @@ F77_SRCS = \\\n  $(srcdir)/f/symbol.c \\\n  $(srcdir)/f/symbol.def \\\n  $(srcdir)/f/symbol.h \\\n- $(srcdir)/f/system.j \\\n  $(srcdir)/f/target.c \\\n  $(srcdir)/f/target.h \\\n- $(srcdir)/f/tconfig.j \\\n- $(srcdir)/f/tm.j \\\n  $(srcdir)/f/top.c \\\n  $(srcdir)/f/top.h \\\n- $(srcdir)/f/toplev.j \\\n- $(srcdir)/f/tree.j \\\n  $(srcdir)/f/type.c \\\n  $(srcdir)/f/type.h \\\n  $(srcdir)/f/version.c \\"}, {"sha": "f33498fe325b4df742c80313682e6298eaf00aa3", "filename": "gcc/f/Makefile.in", "status": "modified", "additions": 19, "deletions": 71, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMakefile.in?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -220,40 +220,28 @@ native: config.status ../f771$(exeext)\n \n # F77 language-specific files.\n \n-# These macros expand to the corresponding g77-source .j files plus\n-# the gcc-source files involved (each file itself, plus whatever\n-# files on which it depends, but without including stuff resulting\n-# from configuration, since we can't guess at that).  The files\n-# that live in a distclean'd gcc source directory have \"$(srcdir)/\"\n-# prefixes, while the others don't because they'll be created\n-# only in the build directory.\n-ASSERT_H = $(srcdir)/assert.j $(srcdir)/../assert.h\n-CONFIG_H = $(srcdir)/config.j ../config.h\n-CONVERT_H = $(srcdir)/convert.j $(srcdir)/../convert.h\n-FLAGS_H = $(srcdir)/flags.j $(srcdir)/../flags.h\n-GGC_H = $(srcdir)/ggc.j $(srcdir)/../ggc.h $(srcdir)/../varray.h\n-GLIMITS_H = $(srcdir)/glimits.j $(srcdir)/../glimits.h\n-HCONFIG_H = $(srcdir)/hconfig.j ../hconfig.h\n-INPUT_H = $(srcdir)/input.j $(srcdir)/../input.h\n-OUTPUT_H = $(srcdir)/output.j $(srcdir)/../output.h\n-RTL_H = $(srcdir)/rtl.j $(srcdir)/../rtl.h $(srcdir)/../rtl.def \\\n+# These macros expand to the corresponding gcc-source files involved\n+# (each file itself, plus whatever files on which it depends, but\n+# without including stuff resulting from configuration, since we can't\n+# guess at that).  The files that live in a distclean'd gcc source\n+# directory have \"$(srcdir)/\" prefixes, while the others don't because\n+# they'll be created only in the build directory.\n+ASSERT_H = $(srcdir)/../assert.h\n+CONFIG_H = ../config.h\n+CONVERT_H = $(srcdir)/../convert.h\n+FLAGS_H = $(srcdir)/../flags.h\n+GGC_H = $(srcdir)/../ggc.h $(srcdir)/../varray.h\n+GLIMITS_H = $(srcdir)/../glimits.h\n+HCONFIG_H = ../hconfig.h\n+INPUT_H = $(srcdir)/../input.h\n+OUTPUT_H = $(srcdir)/../output.h\n+RTL_H = $(srcdir)/../rtl.h $(srcdir)/../rtl.def \\\n \t$(srcdir)/../machmode.h $(srcdir)/../machmode.def\n-SYSTEM_H = $(srcdir)/system.j $(srcdir)/../system.h\n-TCONFIG_H = $(srcdir)/tconfig.j ../tconfig.h\n-TM_H = $(srcdir)/tm.j ../tm.h\n-TOPLEV_H = $(srcdir)/toplev.j $(srcdir)/../toplev.h\n-TREE_H = $(srcdir)/tree.j $(srcdir)/../tree.h $(srcdir)/../real.h \\\n+SYSTEM_H = $(srcdir)/../system.h\n+TOPLEV_H = $(srcdir)/../toplev.h\n+TREE_H = $(srcdir)/../tree.h $(srcdir)/../real.h \\\n \t$(srcdir)/../tree.def $(srcdir)/../machmode.h $(srcdir)/../machmode.def\n \n-#Build the first part of this list with the command line:\n-#    cd gcc/; make deps-kinda -f f/Makefile.in\n-#Note that this command uses the host C compiler;\n-# use HOST_CC=\"./xgcc -B./\" to use GCC in the build directory, for example.\n-#Also note that this particular build file seems to want to use\n-# substitions: $(CONFIG_H) for config.h; $(TREE_H) for tree.h;\n-# $(RTL_H) for rtl.h; etc..  deps-kinda uses a sed script to do those\n-# substitutions, plus others for elegance.\n-\n ansify.o: ansify.c $(HCONFIG_H) $(SYSTEM_H) $(ASSERT_H)\n bad.o: bad.c proj.h $(CONFIG_H) $(SYSTEM_H) $(ASSERT_H) bad.h bad.def where.h \\\n  $(GLIMITS_H) top.h malloc.h $(FLAGS_H) com.h com-rt.def $(TREE_H) bld.h \\\n@@ -422,8 +410,6 @@ version.o: version.c\n where.o: where.c proj.h $(CONFIG_H) $(SYSTEM_H) $(ASSERT_H) where.h $(GLIMITS_H) \\\n  top.h malloc.h lex.h $(GGC_H)\n \n-# The rest of this list (Fortran 77 language-specific files) is hand-generated.\n-\n stamp-str: str-1t.h str-1t.j str-2t.h str-2t.j \\\n  str-fo.h str-fo.j str-io.h str-io.j str-nq.h  str-nq.j \\\n  str-op.h str-op.j str-ot.h str-ot.j\n@@ -462,44 +448,6 @@ proj-h.o: proj.c proj.h $(HCONFIG_H) $(SYSTEM_H) $(ASSERT_H) $(GLIMITS_H)\n \t$(HOST_CC) -c -DUSE_HCONFIG $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t      `echo $(srcdir)/proj.c | sed 's,^\\./,,'` -o $@\n \n-# Other than str-*.j, the *.j files are dummy #include files\n-# that normally just #include the corresponding back-end *.h\n-# files, but not if MAKING_DEPENDENCIES is #defined.  The str-*.j\n-# files also are not actually included if MAKING_DEPENDENCIES\n-# is #defined.  The point of all this is to come up with a clean\n-# dependencies list whether working in a clean directory, such\n-# that str-*.j and such do not exist, or in a directory full\n-# of already-built files.  Any dependency on a str-*.j file\n-# implies a dependency on str.h, so we key on that to replace\n-# it with stamp-str, and dependencies on the other *.j files\n-# are generally left alone (modulo special macros like RTL_H)\n-# because we might not want to recompile all of g77 just\n-# because a back-end file changes.  MG is usually \"-MG\" but\n-# should be defined with \"make MG= deps-kinda...\" if using\n-# a compiler that doesn't support -MG (gcc does as of 2.6) --\n-# it prevents diagnostics when an #include file is missing,\n-# as will be the case with proj.h in a clean directory.\n-MG=-MG\n-deps-kinda:\n-\t$(HOST_CC) -DMAKING_DEPENDENCIES -MM $(MG) *.c 2>&1 | \\\n-\t  sed -e 's: \\([.]/\\)*assert[.]j: $$(ASSERT_H):g' \\\n-\t      -e 's: \\([.]/\\)*config[.]j: $$(CONFIG_H):g' \\\n-\t      -e 's: \\([.]/\\)*convert[.]j: $$(CONVERT_H):g' \\\n-\t      -e 's: \\([.]/\\)*flags[.]j: $$(FLAGS_H):g' \\\n-\t      -e 's: \\([.]/\\)*glimits[.]j: $$(GLIMITS_H):g' \\\n-\t      -e 's: \\([.]/\\)*hconfig[.]j: $$(HCONFIG_H):g' \\\n-\t      -e 's: \\([.]/\\)*input[.]j: $$(INPUT_H):g' \\\n-\t      -e 's: \\([.]/\\)*output[.]j: $$(OUTPUT_H):g' \\\n-\t      -e 's: \\([.]/\\)*rtl[.]j: $$(RTL_H):g' \\\n-\t      -e 's: \\([.]/\\)*system[.]j: $$(SYSTEM_H):g' \\\n-\t      -e 's: \\([.]/\\)*tconfig[.]j: $$(TCONFIG_H):g' \\\n-\t      -e 's: \\([.]/\\)*tm[.]j: $$(TM_H):g' \\\n-\t      -e 's: \\([.]/\\)*toplev[.]j: $$(TOPLEV_H):g' \\\n-\t      -e 's: \\([.]/\\)*tree[.]j: $$(TREE_H):g' \\\n-\t      -e 's: \\([.]/\\)*str[.]h: stamp-str:g' \\\n-\t      -e 's:.*g77spec.*::g' \\\n-\t      -e 's%^\\(.*\\)[ ]*: %\\1: %g'\n-\n # This rule is just a handy way to build the g77 derived files without\n # having the gcc source tree around.\n g77-only: force"}, {"sha": "1c6f92d0fcae899f963d049a5f7134b1a932a2e0", "filename": "gcc/f/ansify.c", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fansify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fansify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fansify.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -19,28 +19,8 @@ along with GNU Fortran; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n 02111-1307, USA.  */\n \n-/* From f/proj.h, which uses #error -- not all C compilers\n-   support that, and we want *this* program to be compilable\n-   by pretty much any C compiler.  */\n-#include \"hconfig.j\"\n-#include \"system.j\"\n-#include \"assert.j\"\n-#if HAVE_STDDEF_H\n-#include <stddef.h>\n-#endif\n-\n-typedef enum\n-  {\n-#if !defined(false) || !defined(true)\n-    false = 0, true = 1,\n-#endif\n-#if !defined(FALSE) || !defined(TRUE)\n-    FALSE = 0, TRUE = 1,\n-#endif\n-    Doggone_Trailing_Comma_Dont_Work = 1\n-  } bool;\n-\n-#define ARRAY_SIZE(a) (sizeof(a)/sizeof(a[0]))\n+#include \"hconfig.h\"\n+#include \"system.h\"\n \n #define die_unless(c) \\\n   do if (!(c)) \\"}, {"sha": "d9b9daafdd211b8d69eda08800b0f78ba6d21aa1", "filename": "gcc/f/assert.j", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fassert.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fassert.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fassert.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,27 +0,0 @@\n-/* assert.j -- Wrapper for GCC's assert.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_assert\n-#define _J_f_assert\n-#include \"assert.h\"\n-#endif\n-#endif"}, {"sha": "6f25246ab97b2cb06453bdba6c841315611414a1", "filename": "gcc/f/bad.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fbad.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fbad.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -38,9 +38,9 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"proj.h\"\n #include \"bad.h\"\n-#include \"flags.j\"\n+#include \"flags.h\"\n #include \"com.h\"\n-#include \"toplev.j\"\n+#include \"toplev.h\"\n #include \"where.h\"\n \n /* Externals defined here. */"}, {"sha": "70d78333d67dcc1b07d3d81a3633820a3f215c44", "filename": "gcc/f/bit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fbit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fbit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbit.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -31,7 +31,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n /* Include files. */\n \n #include \"proj.h\"\n-#include \"glimits.j\"\n+#include \"glimits.h\"\n #include \"bit.h\"\n #include \"malloc.h\"\n "}, {"sha": "07c3141ec4f5400aded0b0801a2cf4b14c0737d0", "filename": "gcc/f/com.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -88,13 +88,13 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"proj.h\"\n #if FFECOM_targetCURRENT == FFECOM_targetGCC\n-#include \"flags.j\"\n-#include \"rtl.j\"\n-#include \"toplev.j\"\n-#include \"tree.j\"\n-#include \"output.j\"  /* Must follow tree.j so TREE_CODE is defined! */\n-#include \"convert.j\"\n-#include \"ggc.j\"\n+#include \"flags.h\"\n+#include \"rtl.h\"\n+#include \"toplev.h\"\n+#include \"tree.h\"\n+#include \"output.h\"  /* Must follow tree.h so TREE_CODE is defined! */\n+#include \"convert.h\"\n+#include \"ggc.h\"\n #endif\t/* FFECOM_targetCURRENT == FFECOM_targetGCC */\n \n #define FFECOM_GCC_INCLUDE 1\t/* Enable -I. */"}, {"sha": "6cf8aaa0a5da2cf56bafc2fd16159d0577cda542", "filename": "gcc/f/com.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fcom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fcom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.h?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -188,7 +188,7 @@ typedef enum\n \n #if FFECOM_targetCURRENT == FFECOM_targetGCC\n #ifndef TREE_CODE\n-#include \"tree.j\"\n+#include \"tree.h\"\n #endif\n \n #ifndef BUILT_FOR_270"}, {"sha": "fda03eb1e29a2d398b71747fef9614e7d4156424", "filename": "gcc/f/config.j", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fconfig.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fconfig.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fconfig.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,27 +0,0 @@\n-/* config.j -- Wrapper for GCC's config.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_config\n-#define _J_f_config\n-#include \"config.h\"\n-#endif\n-#endif"}, {"sha": "76b8e024b9a9020601c578c71a57f69aac82538c", "filename": "gcc/f/convert.j", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fconvert.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fconvert.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fconvert.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,28 +0,0 @@\n-/* convert.j -- Wrapper for GCC's convert.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_convert\n-#define _J_f_convert\n-#include \"tree.j\"\n-#include \"convert.h\"\n-#endif\n-#endif"}, {"sha": "44587a495229b7da4a7506c568178ed994b4cd91", "filename": "gcc/f/flags.j", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fflags.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fflags.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fflags.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,27 +0,0 @@\n-/* flags.j -- Wrapper for GCC's flags.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_flags\n-#define _J_f_flags\n-#include \"flags.h\"\n-#endif\n-#endif"}, {"sha": "1689b415cd46f9cacf4a0786a51e552c00d33276", "filename": "gcc/f/ggc.j", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fggc.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fggc.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fggc.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,29 +0,0 @@\n-/* rtl.j -- Wrapper for GCC's rtl.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_ggc\n-#define _J_f_ggc\n-#include \"system.j\"\n-#include \"config.j\"\n-#include \"ggc.h\"\n-#endif\n-#endif"}, {"sha": "0262258423ac22809dab0f8f8541d4bdfddc87c8", "filename": "gcc/f/glimits.j", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fglimits.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fglimits.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fglimits.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,28 +0,0 @@\n-/* glimits.j -- Wrapper for GCC's glimits.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#if !USE_HOST_LIMITS\n-#include \"glimits.h\"\n-#else\n-#include <limits.h>\n-#endif\n-#endif"}, {"sha": "c73930cf9e834881436024a3b9f780f6fa8a9090", "filename": "gcc/f/hconfig.j", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fhconfig.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fhconfig.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fhconfig.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,27 +0,0 @@\n-/* hconfig.j -- Wrapper for GCC's hconfig.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_hconfig\n-#define _J_f_hconfig\n-#include \"hconfig.h\"\n-#endif\n-#endif"}, {"sha": "cc9ff24b0730e6f43a4d6d028551060f75b420d2", "filename": "gcc/f/input.j", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Finput.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Finput.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Finput.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,27 +0,0 @@\n-/* input.j -- Wrapper for GCC's input.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_input\n-#define _J_f_input\n-#include \"input.h\"\n-#endif\n-#endif"}, {"sha": "91c6b3c70f6a902653c0f3d2277ae96914085b9f", "filename": "gcc/f/intdoc.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fintdoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fintdoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintdoc.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -22,12 +22,9 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n /* From f/proj.h, which uses #error -- not all C compilers\n    support that, and we want *this* program to be compilable\n    by pretty much any C compiler.  */\n-#include \"hconfig.j\"\n-#include \"system.j\"\n-#include \"assert.j\"\n-#if HAVE_STDDEF_H\n-#include <stddef.h>\n-#endif\n+#include \"hconfig.h\"\n+#include \"system.h\"\n+#include \"assert.h\"\n \n typedef enum\n   {"}, {"sha": "031c39e24ce74448e78000c90ad8b82715d3beeb", "filename": "gcc/f/lex.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flex.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -27,12 +27,11 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"malloc.h\"\n #include \"src.h\"\n #if FFECOM_targetCURRENT == FFECOM_targetGCC\n-#include \"flags.j\"\n-#include \"input.j\"\n-#include \"toplev.j\"\n-#include \"tree.j\"\n-#include \"output.j\"  /* Must follow tree.j so TREE_CODE is defined! */\n-#include \"ggc.j\"\n+#include \"flags.h\"\n+#include \"input.h\"\n+#include \"toplev.h\"\n+#include \"output.h\"\n+#include \"ggc.h\"\n #endif\n \n #ifdef DWARF_DEBUGGING_INFO"}, {"sha": "8816b75e66675662732a9e8ced6b72bcb5e8a3c7", "filename": "gcc/f/output.j", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Foutput.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Foutput.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Foutput.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,27 +0,0 @@\n-/* output.j -- Wrapper for GCC's output.h\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_output\n-#define _J_f_output\n-#include \"output.h\"\n-#endif\n-#endif"}, {"sha": "feeb1d530c6e1cff974371b6dcc291ac69626ba2", "filename": "gcc/f/parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fparse.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -25,7 +25,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"where.h\"\n #include \"version.h\"\n #if FFECOM_targetCURRENT == FFECOM_targetGCC\n-#include \"flags.j\"\n+#include \"flags.h\"\n #endif\n \n #define NAME_OF_STDIN \"<stdin>\""}, {"sha": "3ed83451331f61722b444dc2d9dc4360afa1bf3e", "filename": "gcc/f/proj.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fproj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fproj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fproj.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -20,7 +20,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n 02111-1307, USA.\t */\n \n #include \"proj.h\"\n-#include \"glimits.j\"\n+#include \"glimits.h\"\n \n #ifndef HAVE_STRTOUL\n unsigned long int"}, {"sha": "8671fdaf43100df372f3e2bc6e40ecc3f46a9e93", "filename": "gcc/f/proj.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fproj.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fproj.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fproj.h?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -25,11 +25,11 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define _H_f_proj\n \n #ifdef USE_HCONFIG\n-#include \"hconfig.j\"\n+#include \"hconfig.h\"\n #else\n-#include \"config.j\"\n+#include \"config.h\"\n #endif\n-#include \"system.j\"\n+#include \"system.h\"\n \n #if (GCC_VERSION < 2000)\n #error \"You have to use gcc 2.x to build g77 (might be fixed in g77-0.6).\"\n@@ -39,7 +39,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    <stddef.h> is needed for offsetof, but technically also NULL,\n    size_t, ptrdiff_t, and so on.  */\n \n-#include \"assert.j\"\n+#include \"assert.h\"\n \n #if HAVE_STDDEF_H\n #include <stddef.h>"}, {"sha": "ab78e3a7736d12611ca861a857ec38695872d490", "filename": "gcc/f/rtl.j", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Frtl.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Frtl.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Frtl.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,28 +0,0 @@\n-/* rtl.j -- Wrapper for GCC's rtl.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_rtl\n-#define _J_f_rtl\n-#include \"config.j\"\n-#include \"rtl.h\"\n-#endif\n-#endif"}, {"sha": "ea927cca7a505d02a0a70dd69b16d30549cfe85b", "filename": "gcc/f/ste.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fste.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fste.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fste.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -33,9 +33,9 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"proj.h\"\n \n #if FFECOM_targetCURRENT == FFECOM_targetGCC\n-#include \"rtl.j\"\n-#include \"toplev.j\"\n-#include \"ggc.j\"\n+#include \"rtl.h\"\n+#include \"toplev.h\"\n+#include \"ggc.h\"\n #endif\n \n #include \"ste.h\""}, {"sha": "38547c830086de4469c2635d97d8a7a4451ab677", "filename": "gcc/f/system.j", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fsystem.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Fsystem.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsystem.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,27 +0,0 @@\n-/* system.j -- Wrapper for GCC's system.h\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_system\n-#define _J_f_system\n-#include \"system.h\"\n-#endif\n-#endif"}, {"sha": "b52e37f50021cbdeaa0ba9539b310231f19022a7", "filename": "gcc/f/target.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftarget.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -69,7 +69,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n /* Include files. */\n \n #include \"proj.h\"\n-#include \"glimits.j\"\n+#include \"glimits.h\"\n #include \"target.h\"\n #include \"bad.h\"\n #include \"info.h\""}, {"sha": "7eab1067ca74a70d601bcae2a1c47cc01e283359", "filename": "gcc/f/target.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftarget.h?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -34,7 +34,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define HOST_WIDE_INT long\n #else\n #ifndef TREE_CODE\n-#include \"tree.j\"\n+#include \"tree.h\"\n #endif\n #endif\n "}, {"sha": "9c4c3ecf360c4f10c3d97e2d00672229d3b3dcbd", "filename": "gcc/f/tconfig.j", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Ftconfig.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Ftconfig.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftconfig.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,27 +0,0 @@\n-/* tconfig.j -- Wrapper for GCC's tconfig.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_tconfig\n-#define _J_f_tconfig\n-#include \"tconfig.h\"\n-#endif\n-#endif"}, {"sha": "e0d75942639636b3b6d9aad1bb85d663c7bac47f", "filename": "gcc/f/tm.j", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Ftm.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Ftm.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftm.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,27 +0,0 @@\n-/* tm.j -- Wrapper for GCC's tm.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_tm\n-#define _J_f_tm\n-#include \"tm.h\"\n-#endif\n-#endif"}, {"sha": "4da22584b95a1cdf9539e86abc0624aee57cb218", "filename": "gcc/f/top.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Ftop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Ftop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftop.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -54,8 +54,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"target.h\"\n #include \"where.h\"\n #if FFECOM_targetCURRENT == FFECOM_targetGCC\n-#include \"flags.j\"\n-#include \"toplev.j\"\n+#include \"flags.h\"\n+#include \"toplev.h\"\n #endif\n \n /* Externals defined here. */"}, {"sha": "4b8b7970cd05d2ab2fad7df9ab67c4e3021ba0f3", "filename": "gcc/f/toplev.j", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Ftoplev.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Ftoplev.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftoplev.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,27 +0,0 @@\n-/* toplev.j -- Wrapper for GCC's toplev.h\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_toplev\n-#define _J_f_toplev\n-#include \"toplev.h\"\n-#endif\n-#endif"}, {"sha": "b0bf98a73fdd86f4dbdd49051b910a1c7385d448", "filename": "gcc/f/tree.j", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Ftree.j", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5193cc6d9e3491a21ed4dd8f578b59a89572bcd7/gcc%2Ff%2Ftree.j", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftree.j?ref=5193cc6d9e3491a21ed4dd8f578b59a89572bcd7", "patch": "@@ -1,28 +0,0 @@\n-/* tree.j -- Wrapper for GCC's tree.h\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n-\n-#ifndef MAKING_DEPENDENCIES\n-#ifndef _J_f_tree\n-#define _J_f_tree\n-#include \"config.j\"\n-#include \"tree.h\"\n-#endif\n-#endif"}, {"sha": "9f853545c67f632e60e4f2239c439b4d859c7d35", "filename": "gcc/f/where.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fwhere.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fwhere.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fwhere.c?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -33,7 +33,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"where.h\"\n #include \"lex.h\"\n #include \"malloc.h\"\n-#include \"ggc.j\"\n+#include \"ggc.h\"\n \n /* Externals defined here. */\n "}, {"sha": "a6a3e1c15f73cc6b275e6e22ff7882d6e577dc42", "filename": "gcc/f/where.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fwhere.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15a40ced5aac977c558a93e969ce375cc8d0372b/gcc%2Ff%2Fwhere.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fwhere.h?ref=15a40ced5aac977c558a93e969ce375cc8d0372b", "patch": "@@ -61,7 +61,7 @@ typedef unsigned int ffewhereUses_;\n \n /* Include files needed by this one. */\n \n-#include \"glimits.j\"\n+#include \"glimits.h\"\n #include \"top.h\"\n \n /* Structure definitions. */"}]}