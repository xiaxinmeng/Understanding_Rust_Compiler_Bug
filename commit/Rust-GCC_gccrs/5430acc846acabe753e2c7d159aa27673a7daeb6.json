{"sha": "5430acc846acabe753e2c7d159aa27673a7daeb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQzMGFjYzg0NmFjYWJlNzUzZTJjN2QxNTlhYTI3NjczYTdkYWViNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-09-08T01:00:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-09-08T01:00:57Z"}, "message": "search.c (binfo_for_vtable): Use CLASSTYPE_VFIELD_PARENT.\n\n\t* search.c (binfo_for_vtable): Use CLASSTYPE_VFIELD_PARENT.\n\t(dfs_bfv_queue_p, dfs_bfv_helper, struct bfv_info): Remove.\n\nFrom-SVN: r29178", "tree": {"sha": "502fa12ca8df03ea84b28d6ea04d8c9234a0c248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/502fa12ca8df03ea84b28d6ea04d8c9234a0c248"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5430acc846acabe753e2c7d159aa27673a7daeb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5430acc846acabe753e2c7d159aa27673a7daeb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5430acc846acabe753e2c7d159aa27673a7daeb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5430acc846acabe753e2c7d159aa27673a7daeb6/comments", "author": null, "committer": null, "parents": [{"sha": "fd59e3a04e282342dc4d5ab878a2df37bd44e2a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd59e3a04e282342dc4d5ab878a2df37bd44e2a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd59e3a04e282342dc4d5ab878a2df37bd44e2a8"}], "stats": {"total": 76, "additions": 25, "deletions": 51}, "files": [{"sha": "5ee46749a92e2b0266d929dc49de77d962db4d59", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5430acc846acabe753e2c7d159aa27673a7daeb6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5430acc846acabe753e2c7d159aa27673a7daeb6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5430acc846acabe753e2c7d159aa27673a7daeb6", "patch": "@@ -1,3 +1,8 @@\n+1999-09-07  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* search.c (binfo_for_vtable): Use CLASSTYPE_VFIELD_PARENT.\n+\t(dfs_bfv_queue_p, dfs_bfv_helper, struct bfv_info): Remove.\n+\n 1999-09-07  Mark Mitchell  <mark@codesourcery.com>\n \n \t* Makefile.in (tree.o): Depend on ggc.h.\n@@ -1010,10 +1015,10 @@ Mon Aug 23 22:17:20 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \t\n 1999-08-13  Gavin Romig-Koch  <gavin@cygnus.com>\n \n-\tcp-tree.h (init_cplus_unsave): New.\n+\t* cp-tree.h (init_cplus_unsave): New.\n \t(cplus_unsave_expr_now): New.\n-\tlex.c (init_parse): Call init_cplus_unsave.\n-\ttree.c (init_cplus_unsave): New.\n+\t* lex.c (init_parse): Call init_cplus_unsave.\n+\t* tree.c (init_cplus_unsave): New.\n \t(cplus_unsave_expr_now): New.\n \n 1999-08-13  Mark Mitchell  <mark@codesourcery.com>\n@@ -1195,9 +1200,6 @@ Mon Aug 23 22:17:20 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \n 1999-08-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-        * decl.c: Remove redundant prototype for `print_error_function'.\n-        (lang_print_error_function): Constify a char*.\n-\n         * lex.c (lang_identify): Likewise.\n \n 1999-08-09  Bernd Schmidt  <bernds@cygnus.co.uk>\n@@ -1614,7 +1616,6 @@ Thu Aug  5 02:40:42 1999  Jeffrey A Law  (law@cygnus.com)\n \t\n 1999-07-24  Richard Henderson  <rth@cygnus.com>\n \n-\t* decl.c (ptr_type_node, va_list_type_node): New.\n \t* gxx.gperf (__builtin_va_arg): New.\n \t* parse.y (VA_ARG): New token.\n \t(unary_expr): Recognize it."}, {"sha": "6ce849447a8029121cf8d0d58eebdeef7c777f5c", "filename": "gcc/cp/search.c", "status": "modified", "additions": 17, "deletions": 44, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5430acc846acabe753e2c7d159aa27673a7daeb6/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5430acc846acabe753e2c7d159aa27673a7daeb6/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=5430acc846acabe753e2c7d159aa27673a7daeb6", "patch": "@@ -131,8 +131,6 @@ static tree dfs_walk_real PROTO ((tree,\n \t\t\t\t  tree (*) (tree, void *),\n \t\t\t\t  tree (*) (tree, void *),\n \t\t\t\t  void *));\n-static tree dfs_bfv_queue_p PROTO ((tree, void *));\n-static tree dfs_bfv_helper PROTO ((tree, void *));\n static tree get_virtuals_named_this_r PROTO ((tree, void *));\n static tree context_for_name_lookup PROTO ((tree));\n static tree canonical_binfo PROTO ((tree));\n@@ -3270,55 +3268,30 @@ types_overlap_p (empty_type, next_type)\n   return oi.found_overlap;\n }\n \n-struct bfv_info {\n-  tree vbases;\n-  tree var;\n-};\n-\n-static tree\n-dfs_bfv_queue_p (binfo, data)\n-     tree binfo;\n-     void *data;\n-{\n-  struct bfv_info *bfvi = (struct bfv_info *) data;\n-\n-  /* Use the real virtual base class objects, not the placeholders in\n-     the usual hierarchy.  */\n-  if (TREE_VIA_VIRTUAL (binfo))\n-    return binfo_member (BINFO_TYPE (binfo), bfvi->vbases);\n-  \n-  return binfo;\n-}\n-\n-/* Passed to dfs_walk_real by binfo_for_vtable; determine if bvtable\n-   comes from BINFO.  */\n-\n-static tree\n-dfs_bfv_helper (binfo, data)\n-     tree binfo;\n-     void *data;\n-{\n-  struct bfv_info *bfvi = (struct bfv_info *) data;\n-\n-  if (BINFO_VTABLE (binfo) == bfvi->var)\n-    return binfo;\n-  return NULL_TREE;\n-}\n-\n /* Given a vtable VAR, determine which binfo it comes from.  */\n \n tree\n binfo_for_vtable (var)\n      tree var;\n {\n-  tree type;\n-  struct bfv_info bfvi;\n+  tree binfo = TYPE_BINFO (DECL_CONTEXT (var));\n+  tree binfos;\n+  int i;\n \n-  type = DECL_CONTEXT (var);\n-  bfvi.vbases = CLASSTYPE_VBASECLASSES (type);\n-  bfvi.var = var;\n-  return dfs_walk_real (TYPE_BINFO (type),\n-\t\t\t0, dfs_bfv_helper, dfs_bfv_queue_p, &bfvi);\n+  while (1)\n+    {\n+      binfos = BINFO_BASETYPES (binfo);\n+      if (binfos == NULL_TREE)\n+\tbreak;\n+\n+      i = CLASSTYPE_VFIELD_PARENT (BINFO_TYPE (binfo));\n+      if (i == -1)\n+\tbreak;\n+\n+      binfo = TREE_VEC_ELT (binfos, i);\n+    }\n+\n+  return binfo;\n }\n \n /* Returns 1 iff BINFO is from a direct or indirect virtual base.  */"}]}