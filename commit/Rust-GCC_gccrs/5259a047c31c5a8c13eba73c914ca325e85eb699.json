{"sha": "5259a047c31c5a8c13eba73c914ca325e85eb699", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI1OWEwNDdjMzFjNWE4YzEzZWJhNzNjOTE0Y2EzMjVlODVlYjY5OQ==", "commit": {"author": {"name": "Hongtao Liu", "email": "hongtao.liu@intel.com", "date": "2019-06-05T06:04:22Z"}, "committer": {"name": "Hongtao Liu", "email": "liuhongt@gcc.gnu.org", "date": "2019-06-05T06:04:22Z"}, "message": "re PR target/89803 (Missing AVX512 intrinsics)\n\ngcc/\n2019-06-05  Hongtao Liu  <hongtao.liu@intel.com>\n\n\tPR target/89803\n\t* config/i386/avx512dqintrin.h (_mm_mask_fpclass_ss_mask,\n\t_mm_mask_fpclass_sd_mask): New intrinsics.\n\t(_mm_fpclass_ss_mask, _mm_fpclass_sd_mask): Modified, use new builtins.\n\t* config/i386/i386-builtin.def\n\t(__builtin_ia32_fpclassss_mask, __builtin_ia32_fpclasssd_mask):\n\tNew builtins.\n\t(__builtin_ia32_fpclassss, __builtin_ia32_fpclasssd): Deleted.\n\t* config/i386/i386-builtin-types.def (DEF_FUNCTION_TYPE (QI, V2DF, INT),\n\tDEF_FUNCTION_TYPE (QI, V4SF, INT)): Deleted.\n\t* config/i386/i386-expand.c (case QI_FTYPE_V4SF_INT,\n\tcase QI_FTYPE_V2SF_INT): Ditto.\n\t* config/i386/sse.md\n\t(define_insn \"avx512dq_vmfpclass<mode><mask_scalar_merge_name>):\n\tExtended to insnstructions with mask operands.\n\ngcc/testsuite\n2019-06-05  Hongtao Liu  <hongtao.liu@intel.com>\n\n\tPR target/89803\n\t* gcc.target/i386/avx-1.c (__builtin_ia32_fpclasssss,\n\t__builtin_ia32_fpclasssd): Removed.\n\t(__builtin_ia32_fpclassss_mask, __builtin_ia32_fpclasssd_mask): Define.\n\t* gcc.target/i386/sse-13.c (__builtin_ia32_fpclasssss,\n\t__builtin_ia32_fpclasssd): Removed.\n\t(__builtin_ia32_fpclassss_mask, __builtin_ia32_fpclasssd_mask): Define.\n\t* gcc.target/i386/sse-23.c (__builtin_ia32_fpclasssss,\n\t__builtin_ia32_fpclasssd): Removed.\n\t(__builtin_ia32_fpclassss_mask, __builtin_ia32_fpclasssd_mask): Define.\n\t* gcc.target/i386/avx512dq-vfpclassss-2.c: New.\n\t* gcc.target/i386/avx512dq-vfpclasssd-2.c: New.\n\t* gcc.target/i386/avx512dq-vfpclassss-1.c (avx512f_test):\n\tAdd test for _mm_mask_fpclass_ss_mask.\n\t* gcc.target/i386/avx512dq-vfpclasssd-1.c (avx512f_test):\n\tAdd test for _mm_mask_fpclass_sd_mask.\n\nFrom-SVN: r271946", "tree": {"sha": "468b9c214b8f96a51fc7f41bd0f0531694261fbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/468b9c214b8f96a51fc7f41bd0f0531694261fbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5259a047c31c5a8c13eba73c914ca325e85eb699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5259a047c31c5a8c13eba73c914ca325e85eb699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5259a047c31c5a8c13eba73c914ca325e85eb699", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5259a047c31c5a8c13eba73c914ca325e85eb699/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34f66a53b4f529f17643c1c1fc68dd3ae3f338ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34f66a53b4f529f17643c1c1fc68dd3ae3f338ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34f66a53b4f529f17643c1c1fc68dd3ae3f338ea"}], "stats": {"total": 254, "additions": 234, "deletions": 20}, "files": [{"sha": "401ba9c58f91fe0f1a04976eba3a6548e5e2dd1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -1,3 +1,21 @@\n+2019-06-05  Hongtao Liu  <hongtao.liu@intel.com>\n+\n+\tPR target/89803\n+\t* config/i386/avx512dqintrin.h (_mm_mask_fpclass_ss_mask,\n+\t_mm_mask_fpclass_sd_mask): New intrinsics.\n+\t(_mm_fpclass_ss_mask, _mm_fpclass_sd_mask): Modified, use new builtins.\n+\t* config/i386/i386-builtin.def\n+\t(__builtin_ia32_fpclassss_mask, __builtin_ia32_fpclasssd_mask):\n+\tNew builtins.\n+\t(__builtin_ia32_fpclassss, __builtin_ia32_fpclasssd): Deleted.\n+\t* config/i386/i386-builtin-types.def (DEF_FUNCTION_TYPE (QI, V2DF, INT),\n+\tDEF_FUNCTION_TYPE (QI, V4SF, INT)): Deleted.\n+\t* config/i386/i386-expand.c (case QI_FTYPE_V4SF_INT,\n+\tcase QI_FTYPE_V2SF_INT): Ditto.\n+\t* config/i386/sse.md\n+\t(define_insn \"avx512dq_vmfpclass<mode><mask_scalar_merge_name>):\n+\tExtended to insnstructions with mask operands.\n+\n 2019-06-04  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/constraints.md (define_register_constraint \"wp\"):"}, {"sha": "71c86fcc1c2fa3a05e9fe597ab66404a10dd67e0", "filename": "gcc/config/i386/avx512dqintrin.h", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -1362,14 +1362,30 @@ extern __inline __mmask8\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_fpclass_ss_mask (__m128 __A, const int __imm)\n {\n-  return (__mmask8) __builtin_ia32_fpclassss ((__v4sf) __A, __imm);\n+  return (__mmask8) __builtin_ia32_fpclassss_mask ((__v4sf) __A, __imm,\n+\t\t\t\t\t\t   (__mmask8) -1);\n }\n \n extern __inline __mmask8\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_fpclass_sd_mask (__m128d __A, const int __imm)\n {\n-  return (__mmask8) __builtin_ia32_fpclasssd ((__v2df) __A, __imm);\n+  return (__mmask8) __builtin_ia32_fpclasssd_mask ((__v2df) __A, __imm,\n+\t\t\t\t\t\t   (__mmask8) -1);\n+}\n+\n+extern __inline __mmask8\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_mask_fpclass_ss_mask (__mmask8 __U, __m128 __A, const int __imm)\n+{\n+  return (__mmask8) __builtin_ia32_fpclassss_mask ((__v4sf) __A, __imm, __U);\n+}\n+\n+extern __inline __mmask8\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_mask_fpclass_sd_mask (__mmask8 __U, __m128d __A, const int __imm)\n+{\n+  return (__mmask8) __builtin_ia32_fpclasssd_mask ((__v2df) __A, __imm, __U);\n }\n \n extern __inline __m512i\n@@ -2617,11 +2633,21 @@ _mm512_fpclass_ps_mask (__m512 __A, const int __imm)\n     (__v16si)(__m512i)_mm512_setzero_si512 (),\\\n     (__mmask16)(U)))\n \n-#define _mm_fpclass_ss_mask(X, C)\t\t\t\t\t\t\\\n-  ((__mmask8) __builtin_ia32_fpclassss ((__v4sf) (__m128) (X), (int) (C)))  \\\n+#define _mm_fpclass_ss_mask(X, C)\t\t\t\t\t\\\n+  ((__mmask8) __builtin_ia32_fpclassss_mask ((__v4sf) (__m128) (X),\t\\\n+\t\t\t\t\t     (int) (C), (__mmask8) (-1))) \\\n+\n+#define _mm_fpclass_sd_mask(X, C)\t\t\t\t\t\\\n+  ((__mmask8) __builtin_ia32_fpclasssd_mask ((__v2df) (__m128d) (X),\t\\\n+\t\t\t\t\t     (int) (C), (__mmask8) (-1))) \\\n+\n+#define _mm_mask_fpclass_ss_mask(X, C, U)\t\t\t\t\\\n+  ((__mmask8) __builtin_ia32_fpclassss_mask ((__v4sf) (__m128) (X),\t\\\n+\t\t\t\t\t     (int) (C), (__mmask8) (U)))\n \n-#define _mm_fpclass_sd_mask(X, C)\t\t\t\t\t\t\\\n-  ((__mmask8) __builtin_ia32_fpclasssd ((__v2df) (__m128d) (X), (int) (C))) \\\n+#define _mm_mask_fpclass_sd_mask(X, C, U)\t\t\t\t\\\n+  ((__mmask8) __builtin_ia32_fpclasssd_mask ((__v2df) (__m128d) (X),\t\\\n+\t\t\t\t\t     (int) (C), (__mmask8) (U)))\n \n #define _mm512_mask_fpclass_pd_mask(u, X, C)                            \\\n   ((__mmask8) __builtin_ia32_fpclasspd512_mask ((__v8df) (__m512d) (X), \\"}, {"sha": "4d1906049042653fc4d8d9ebeb6fb528502c59d8", "filename": "gcc/config/i386/i386-builtin-types.def", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -964,11 +964,9 @@ DEF_FUNCTION_TYPE (V4DI, V4DI, V2DI, V4DI, UQI)\n DEF_FUNCTION_TYPE (QI, V8DF, INT)\n DEF_FUNCTION_TYPE (QI, V4DF, INT)\n DEF_FUNCTION_TYPE (QI, V4DF, V4DF, INT, UQI)\n-DEF_FUNCTION_TYPE (QI, V2DF, INT)\n DEF_FUNCTION_TYPE (HI, V16SF, INT)\n DEF_FUNCTION_TYPE (QI, V8SF, INT)\n DEF_FUNCTION_TYPE (QI, V8SF, V8SF, INT, UQI)\n-DEF_FUNCTION_TYPE (QI, V4SF, INT)\n DEF_FUNCTION_TYPE (QI, V8DF, INT, UQI)\n DEF_FUNCTION_TYPE (QI, V4DF, INT, UQI)\n DEF_FUNCTION_TYPE (QI, V2DF, INT, UQI)"}, {"sha": "e547dda80f143d96980fdc8fdbedac87c007433f", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -2085,10 +2085,10 @@ BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_rorv4si_mask, \"__builtin_i\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_rolv4si_mask, \"__builtin_ia32_prold128_mask\", IX86_BUILTIN_PROLD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_INT_V4SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512dq_fpclassv4df_mask, \"__builtin_ia32_fpclasspd256_mask\", IX86_BUILTIN_FPCLASSPD256, UNKNOWN, (int) QI_FTYPE_V4DF_INT_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512dq_fpclassv2df_mask, \"__builtin_ia32_fpclasspd128_mask\", IX86_BUILTIN_FPCLASSPD128, UNKNOWN, (int) QI_FTYPE_V2DF_INT_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_avx512dq_vmfpclassv2df, \"__builtin_ia32_fpclasssd\", IX86_BUILTIN_FPCLASSSD, UNKNOWN, (int) QI_FTYPE_V2DF_INT)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_avx512dq_vmfpclassv2df_mask, \"__builtin_ia32_fpclasssd_mask\", IX86_BUILTIN_FPCLASSSD_MASK, UNKNOWN, (int) QI_FTYPE_V2DF_INT_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512dq_fpclassv8sf_mask, \"__builtin_ia32_fpclassps256_mask\", IX86_BUILTIN_FPCLASSPS256, UNKNOWN, (int) QI_FTYPE_V8SF_INT_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512dq_fpclassv4sf_mask, \"__builtin_ia32_fpclassps128_mask\", IX86_BUILTIN_FPCLASSPS128, UNKNOWN, (int) QI_FTYPE_V4SF_INT_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_avx512dq_vmfpclassv4sf, \"__builtin_ia32_fpclassss\", IX86_BUILTIN_FPCLASSSS, UNKNOWN, (int) QI_FTYPE_V4SF_INT)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_avx512dq_vmfpclassv4sf_mask, \"__builtin_ia32_fpclassss_mask\", IX86_BUILTIN_FPCLASSSS_MASK, UNKNOWN, (int) QI_FTYPE_V4SF_INT_UQI)\n BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_cvtb2maskv16qi, \"__builtin_ia32_cvtb2mask128\", IX86_BUILTIN_CVTB2MASK128, UNKNOWN, (int) UHI_FTYPE_V16QI)\n BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_cvtb2maskv32qi, \"__builtin_ia32_cvtb2mask256\", IX86_BUILTIN_CVTB2MASK256, UNKNOWN, (int) USI_FTYPE_V32QI)\n BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_cvtw2maskv8hi, \"__builtin_ia32_cvtw2mask128\", IX86_BUILTIN_CVTW2MASK128, UNKNOWN, (int) UQI_FTYPE_V8HI)"}, {"sha": "97914536ce4ade935a44c03a18b9e9a7fb45a069", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -9272,8 +9272,6 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n     case V4DI_FTYPE_V4DI_INT:\n     case V2DI_FTYPE_V4DI_INT:\n     case V4DI_FTYPE_V8DI_INT:\n-    case QI_FTYPE_V4SF_INT:\n-    case QI_FTYPE_V2DF_INT:\n     case UQI_FTYPE_UQI_UQI_CONST:\n     case UHI_FTYPE_UHI_UQI:\n     case USI_FTYPE_USI_UQI:"}, {"sha": "d21f4fc0f605e58b6035a3d25133cb038fbcab49", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -21327,7 +21327,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"avx512dq_vmfpclass<mode>\"\n+(define_insn \"avx512dq_vmfpclass<mode><mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n \t(and:<avx512fmaskmode>\n \t  (unspec:<avx512fmaskmode>\n@@ -21336,7 +21336,7 @@\n \t    UNSPEC_FPCLASS)\n \t  (const_int 1)))]\n    \"TARGET_AVX512DQ\"\n-   \"vfpclass<ssescalarmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\";\n+   \"vfpclass<ssescalarmodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\";\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"prefix\" \"evex\")"}, {"sha": "0de9ad902ce54ce74da1900af24e8c1f3b664c26", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -1,3 +1,22 @@\n+2019-06-05  Hongtao Liu  <hongtao.liu@intel.com>\n+\n+\tPR target/89803\n+\t* gcc.target/i386/avx-1.c (__builtin_ia32_fpclasssss,\n+\t__builtin_ia32_fpclasssd): Removed.\n+\t(__builtin_ia32_fpclassss_mask, __builtin_ia32_fpclasssd_mask): Define.\n+\t* gcc.target/i386/sse-13.c (__builtin_ia32_fpclasssss,\n+\t__builtin_ia32_fpclasssd): Removed.\n+\t(__builtin_ia32_fpclassss_mask, __builtin_ia32_fpclasssd_mask): Define.\n+\t* gcc.target/i386/sse-23.c (__builtin_ia32_fpclasssss,\n+\t__builtin_ia32_fpclasssd): Removed.\n+\t(__builtin_ia32_fpclassss_mask, __builtin_ia32_fpclasssd_mask): Define.\n+\t* gcc.target/i386/avx512dq-vfpclassss-2.c: New.\n+\t* gcc.target/i386/avx512dq-vfpclasssd-2.c: New.\n+\t* gcc.target/i386/avx512dq-vfpclassss-1.c (avx512f_test):\n+\tAdd test for _mm_mask_fpclass_ss_mask.\n+\t* gcc.target/i386/avx512dq-vfpclasssd-1.c (avx512f_test):\n+\tAdd test for _mm_mask_fpclass_sd_mask.\n+\n 2019-06-04  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* gcc.target/powerpc/direct-move-double1.c (VSX_REG_ATTR): Delete."}, {"sha": "741b3c4f8e3fb7524720ecb8b128445f5daa5baf", "filename": "gcc/testsuite/gcc.target/i386/avx-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -444,8 +444,8 @@\n #define __builtin_ia32_inserti32x8_mask(A, B, F, D, E) __builtin_ia32_inserti32x8_mask(A, B, 1, D, E)\n #define __builtin_ia32_insertf64x2_512_mask(A, B, F, D, E) __builtin_ia32_insertf64x2_512_mask(A, B, 1, D, E)\n #define __builtin_ia32_insertf32x8_mask(A, B, F, D, E) __builtin_ia32_insertf32x8_mask(A, B, 1, D, E)\n-#define __builtin_ia32_fpclassss(A, D) __builtin_ia32_fpclassss(A, 1)\n-#define __builtin_ia32_fpclasssd(A, D) __builtin_ia32_fpclasssd(A, 1)\n+#define __builtin_ia32_fpclassss_mask(A, D, U) __builtin_ia32_fpclassss_mask(A, 1, U)\n+#define __builtin_ia32_fpclasssd_mask(A, D, U) __builtin_ia32_fpclasssd_mask(A, 1, U)\n #define __builtin_ia32_fpclassps512_mask(A, D, C) __builtin_ia32_fpclassps512_mask(A, 1, C)\n #define __builtin_ia32_fpclasspd512_mask(A, D, C) __builtin_ia32_fpclasspd512_mask(A, 1, C)\n #define __builtin_ia32_extracti64x2_512_mask(A, E, C, D) __builtin_ia32_extracti64x2_512_mask(A, 1, C, D)"}, {"sha": "fb5c1d570354996c9f83fe39e8988a3dee3fbad4", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vfpclasssd-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclasssd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclasssd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclasssd-1.c?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512dq -O2\" } */\n /* { dg-final { scan-assembler-times \"vfpclasssd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfpclasssd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[0-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n \n@@ -11,4 +12,5 @@ void extern\n avx512dq_test (void)\n {\n   m8 = _mm_fpclass_sd_mask (x128, 13);\n+  m8 = _mm_mask_fpclass_sd_mask (m8, x128, 13);\n }"}, {"sha": "469ddc3b86b93d8730920ff94b2fbe699bf9c872", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vfpclasssd-2.c", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclasssd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclasssd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclasssd-2.c?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -0,0 +1,75 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512dq\" } */\n+/* { dg-require-effective-target avx512dq } */\n+\n+#define AVX512DQ\n+#include \"avx512f-helper.h\"\n+\n+#include <math.h>\n+#include <limits.h>\n+#include <float.h>\n+#define SIZE (128 / 64)\n+#include \"avx512f-mask-type.h\"\n+\n+#ifndef __FPCLASSSD__\n+#define __FPCLASSSD__\n+int check_fp_class_dp (double src, int imm)\n+{\n+  int qNaN_res = isnan (src);\n+  int sNaN_res = isnan (src);\n+  int Pzero_res = (src == 0.0);\n+  int Nzero_res = (src == -0.0);\n+  int PInf_res = (isinf (src) == 1);\n+  int NInf_res = (isinf (src) == -1);\n+  int Denorm_res = (fpclassify (src) == FP_SUBNORMAL);\n+  int FinNeg_res = __builtin_finite (src) && (src < 0);\n+\n+  int result = (((imm & 1) && qNaN_res)\n+\t\t|| (((imm >> 1) & 1) && Pzero_res)\n+\t\t|| (((imm >> 2) & 1) && Nzero_res)\n+\t\t|| (((imm >> 3) & 1) && PInf_res)\n+\t\t|| (((imm >> 4) & 1) && NInf_res)\n+\t\t|| (((imm >> 5) & 1) && Denorm_res)\n+\t\t|| (((imm >> 6) & 1) && FinNeg_res)\n+\t\t|| (((imm >> 7) & 1) && sNaN_res));\n+  return result;\n+}\n+#endif\n+\n+__mmask8\n+CALC (double *s1, int imm)\n+{\n+  int i;\n+  __mmask8 res = 0;\n+\n+  if (check_fp_class_dp(s1[0], imm))\n+    res = res | 1;\n+\n+  return res;\n+}\n+\n+void\n+TEST (void)\n+{\n+  int i;\n+  union128d src;\n+  __mmask8 res1, res2, res_ref = 0;\n+  __mmask8 mask = MASK_VALUE;\n+\n+  src.a[0] = 1.0 / 0.0;\n+  for (i = 1; i < SIZE; i++)\n+    {\n+      src.a[i] = -24.43 + 0.6 * i;\n+    }\n+\n+  res1 = _mm_fpclass_sd_mask (src.x, 0xFF);\n+  res2 = _mm_mask_fpclass_sd_mask (mask, src.x, 0xFF);\n+\n+  res_ref = CALC (src.a, 0xFF);\n+\n+  if (res_ref != res1)\n+    abort ();\n+\n+  if ((res_ref & mask) != res2)\n+    abort ();\n+}"}, {"sha": "4822441afa4caae1deaac975745af654d1ef09b6", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vfpclassss-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclassss-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclassss-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclassss-1.c?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512dq -O2\" } */\n /* { dg-final { scan-assembler-times \"vfpclassss\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfpclassss\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n^k\\]*%k\\[0-7\\]\\{%k\\[0-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n \n@@ -11,4 +12,5 @@ void extern\n avx512dq_test (void)\n {\n   m8 = _mm_fpclass_ss_mask (x128, 13);\n+  m8 = _mm_mask_fpclass_ss_mask (m8, x128, 13);\n }"}, {"sha": "38fd6575adc44f84529ececa7d5ce5f5f9495b4d", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vfpclassss-2.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclassss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclassss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vfpclassss-2.c?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -0,0 +1,76 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512dq\" } */\n+/* { dg-require-effective-target avx512dq } */\n+\n+#define AVX512DQ\n+#include \"avx512f-helper.h\"\n+\n+#include <math.h>\n+#include <limits.h>\n+#include <float.h>\n+#include \"avx512f-mask-type.h\"\n+#define SIZE (128 / 32)\n+\n+#ifndef __FPCLASSSS__\n+#define __FPCLASSSS__\n+int check_fp_class_sp (float src, int imm)\n+{\n+  int qNaN_res = isnan (src);\n+  int sNaN_res = isnan (src);\n+  int Pzero_res = (src == 0.0);\n+  int Nzero_res = (src == -0.0);\n+  int PInf_res = (isinf (src) == 1);\n+  int NInf_res = (isinf (src) == -1);\n+  int Denorm_res = (fpclassify (src) == FP_SUBNORMAL);\n+  int FinNeg_res = __builtin_finite (src) && (src < 0);\n+\n+  int result = (((imm & 1) && qNaN_res)\n+\t\t|| (((imm >> 1) & 1) && Pzero_res)\n+\t\t|| (((imm >> 2) & 1) && Nzero_res)\n+\t\t|| (((imm >> 3) & 1) && PInf_res)\n+\t\t|| (((imm >> 4) & 1) && NInf_res)\n+\t\t|| (((imm >> 5) & 1) && Denorm_res)\n+\t\t|| (((imm >> 6) & 1) && FinNeg_res)\n+\t\t|| (((imm >> 7) & 1) && sNaN_res));\n+  return result;\n+}\n+#endif\n+\n+__mmask8\n+CALC (float *s1, int imm)\n+{\n+  int i;\n+  __mmask8 res = 0;\n+\n+  if (check_fp_class_sp(s1[0], imm))\n+    res = res | 1;\n+\n+  return res;\n+}\n+\n+void\n+TEST (void)\n+{\n+  int i;\n+  union128 src;\n+  __mmask8 res1, res2, res_ref = 0;\n+  __mmask8 mask = MASK_VALUE;\n+\n+  src.a[0] = 1.0 / 0.0;\n+  for (i = 1; i < SIZE; i++)\n+    {\n+      src.a[i] = -24.43 + 0.6 * i;\n+    }\n+\n+  res1 = _mm_fpclass_ss_mask (src.x, 0xFF);\n+  res2 = _mm_mask_fpclass_ss_mask (mask, src.x, 0xFF);\n+\n+\n+  res_ref = CALC (src.a, 0xFF);\n+\n+  if (res_ref != res1)\n+    abort ();\n+\n+  if ((mask & res_ref) != res2)\n+    abort ();\n+}"}, {"sha": "91da5da0b96472caa091be73bb4600c37cb6d77a", "filename": "gcc/testsuite/gcc.target/i386/sse-13.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -461,8 +461,8 @@\n #define __builtin_ia32_inserti32x8_mask(A, B, F, D, E) __builtin_ia32_inserti32x8_mask(A, B, 1, D, E)\n #define __builtin_ia32_insertf64x2_512_mask(A, B, F, D, E) __builtin_ia32_insertf64x2_512_mask(A, B, 1, D, E)\n #define __builtin_ia32_insertf32x8_mask(A, B, F, D, E) __builtin_ia32_insertf32x8_mask(A, B, 1, D, E)\n-#define __builtin_ia32_fpclassss(A, D) __builtin_ia32_fpclassss(A, 1)\n-#define __builtin_ia32_fpclasssd(A, D) __builtin_ia32_fpclasssd(A, 1)\n+#define __builtin_ia32_fpclassss_mask(A, D, U) __builtin_ia32_fpclassss_mask(A, 1, U)\n+#define __builtin_ia32_fpclasssd_mask(A, D, U) __builtin_ia32_fpclasssd_mask(A, 1, U)\n #define __builtin_ia32_fpclassps512_mask(A, D, C) __builtin_ia32_fpclassps512_mask(A, 1, C)\n #define __builtin_ia32_fpclasspd512_mask(A, D, C) __builtin_ia32_fpclasspd512_mask(A, 1, C)\n #define __builtin_ia32_extracti64x2_512_mask(A, E, C, D) __builtin_ia32_extracti64x2_512_mask(A, 1, C, D)"}, {"sha": "8b809acd71fdf8a0f64a7a9eaaa75b5300c17027", "filename": "gcc/testsuite/gcc.target/i386/sse-23.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5259a047c31c5a8c13eba73c914ca325e85eb699/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c?ref=5259a047c31c5a8c13eba73c914ca325e85eb699", "patch": "@@ -460,8 +460,8 @@\n #define __builtin_ia32_inserti32x8_mask(A, B, F, D, E) __builtin_ia32_inserti32x8_mask(A, B, 1, D, E)\n #define __builtin_ia32_insertf64x2_512_mask(A, B, F, D, E) __builtin_ia32_insertf64x2_512_mask(A, B, 1, D, E)\n #define __builtin_ia32_insertf32x8_mask(A, B, F, D, E) __builtin_ia32_insertf32x8_mask(A, B, 1, D, E)\n-#define __builtin_ia32_fpclassss(A, D) __builtin_ia32_fpclassss(A, 1)\n-#define __builtin_ia32_fpclasssd(A, D) __builtin_ia32_fpclasssd(A, 1)\n+#define __builtin_ia32_fpclassss_mask(A, D, U) __builtin_ia32_fpclassss_mask(A, 1, U)\n+#define __builtin_ia32_fpclasssd_mask(A, D, U) __builtin_ia32_fpclasssd_mask(A, 1, U)\n #define __builtin_ia32_fpclassps512_mask(A, D, C) __builtin_ia32_fpclassps512_mask(A, 1, C)\n #define __builtin_ia32_fpclasspd512_mask(A, D, C) __builtin_ia32_fpclasspd512_mask(A, 1, C)\n #define __builtin_ia32_extracti64x2_512_mask(A, E, C, D) __builtin_ia32_extracti64x2_512_mask(A, 1, C, D)"}]}