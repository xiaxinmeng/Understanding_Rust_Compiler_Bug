{"sha": "1260d19905063540e560bda4924f09f1aff4bed5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI2MGQxOTkwNTA2MzU0MGU1NjBiZGE0OTI0ZjA5ZjFhZmY0YmVkNQ==", "commit": {"author": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2017-07-13T14:09:12Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2017-07-13T14:09:12Z"}, "message": "rs6000.c (rs6000_gimple_fold_builtin): Return early if there is no lhs.\n\n\n[gcc]\n\n\t2017-07-12  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_gimple_fold_builtin): Return\n\tearly if there is no lhs.\n\n[testsuite]\n\n\t2017-07-12  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n\t* gcc.target/powerpc/fold-vec-missing-lhs: New.\n\nFrom-SVN: r250185", "tree": {"sha": "454af3d3098d9b80041311cdffd31de14ddcffc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/454af3d3098d9b80041311cdffd31de14ddcffc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1260d19905063540e560bda4924f09f1aff4bed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1260d19905063540e560bda4924f09f1aff4bed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1260d19905063540e560bda4924f09f1aff4bed5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1260d19905063540e560bda4924f09f1aff4bed5/comments", "author": null, "committer": null, "parents": [{"sha": "1447cedf861772613f6cdc5571bb26ebc107c191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1447cedf861772613f6cdc5571bb26ebc107c191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1447cedf861772613f6cdc5571bb26ebc107c191"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "2a4f0827e8f3726ade63441ba70d3f22f916c298", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1260d19905063540e560bda4924f09f1aff4bed5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1260d19905063540e560bda4924f09f1aff4bed5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1260d19905063540e560bda4924f09f1aff4bed5", "patch": "@@ -1,3 +1,8 @@\n+\t2017-07-13  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_gimple_fold_builtin): Return\n+\tearly if there is no lhs.\n+\n 2017-07-13  Martin Liska  <mliska@suse.cz>\n \n \t* dwarf2out.c (gen_pointer_type_die): Remove dead code."}, {"sha": "a114d612162ddf3a9f7813825dc38326f7e79515", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1260d19905063540e560bda4924f09f1aff4bed5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1260d19905063540e560bda4924f09f1aff4bed5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=1260d19905063540e560bda4924f09f1aff4bed5", "patch": "@@ -16302,6 +16302,10 @@ rs6000_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n     = (enum rs6000_builtins) DECL_FUNCTION_CODE (fndecl);\n   tree arg0, arg1, lhs;\n \n+  /* Generic solution to prevent gimple folding of code without a LHS.  */\n+  if (!gimple_call_lhs (stmt))\n+    return false;\n+\n   switch (fn_code)\n     {\n     /* Flavors of vec_add.  We deliberately don't expand"}, {"sha": "b24aab8ccc7fede668f75163dba48654191b074b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1260d19905063540e560bda4924f09f1aff4bed5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1260d19905063540e560bda4924f09f1aff4bed5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1260d19905063540e560bda4924f09f1aff4bed5", "patch": "@@ -1,3 +1,7 @@\n+\t2017-07-13  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/fold-vec-missing-lhs.c: New.\n+\n 2017-07-13  Martin Liska  <mliska@suse.cz>\n \n \t* c-c++-common/ubsan/sanitize-all-1.c: Update scanned pattern."}, {"sha": "6add9038288707c09452e63b9cd2476e25e15cc5", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-missing-lhs.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1260d19905063540e560bda4924f09f1aff4bed5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-missing-lhs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1260d19905063540e560bda4924f09f1aff4bed5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-missing-lhs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-missing-lhs.c?ref=1260d19905063540e560bda4924f09f1aff4bed5", "patch": "@@ -0,0 +1,24 @@\n+/* This test is meant to verify that the gimple-folding does not\n+   occur when the LHS portion of an expression is missing.\n+   The intent of this test is to verify that we do not generate an ICE.\n+   This was noticed during debug of PR81317.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec\" } */\n+\n+#include <altivec.h>\n+\n+vector signed short\n+test1_nolhs (vector bool short x, vector signed short y)\n+{\n+  vec_add (x, y);\n+  return vec_add (x, y);\n+}\n+\n+vector signed short\n+test2_nolhs (vector signed short x, vector bool short y)\n+{\n+  vec_add (x, y);\n+  return vec_add (x, y);\n+}"}]}