{"sha": "99eb50e806f51a37f8188fd268a6abbb7d292927", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTllYjUwZTgwNmY1MWEzN2Y4MTg4ZmQyNjhhNmFiYmI3ZDI5MjkyNw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-12-19T10:26:04Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-12-19T10:26:04Z"}, "message": "re PR fortran/78545 (Possible correction to online LTIME documentation)\n\n2016-12-19  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/78545\n\t* intrinsic.texi: Minor documentation fixes for non-standard\n\ttime-related intrinsics. Add references to standard intrinsics and\n\tlinkify some existing references.\n\nFrom-SVN: r243794", "tree": {"sha": "9403e4b7be517b7915a960e87249b5c3e4a73149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9403e4b7be517b7915a960e87249b5c3e4a73149"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99eb50e806f51a37f8188fd268a6abbb7d292927", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99eb50e806f51a37f8188fd268a6abbb7d292927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99eb50e806f51a37f8188fd268a6abbb7d292927", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99eb50e806f51a37f8188fd268a6abbb7d292927/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad7ab32ed443d716f45ed315aa5349981954aa6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7ab32ed443d716f45ed315aa5349981954aa6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad7ab32ed443d716f45ed315aa5349981954aa6c"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "7b653ce61cd598b04b3398a543ccc1a63fcaacd4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99eb50e806f51a37f8188fd268a6abbb7d292927/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99eb50e806f51a37f8188fd268a6abbb7d292927/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=99eb50e806f51a37f8188fd268a6abbb7d292927", "patch": "@@ -1,3 +1,10 @@\n+2016-12-19  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/78545\n+\t* intrinsic.texi: Minor documentation fixes for non-standard\n+\ttime-related intrinsics. Add references to standard intrinsics and\n+\tlinkify some existing references.\n+\n 2016-12-18  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR fortran/78545"}, {"sha": "24920eb34986c6ad4e374dd2d80b1bf3bfcaea92", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99eb50e806f51a37f8188fd268a6abbb7d292927/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99eb50e806f51a37f8188fd268a6abbb7d292927/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=99eb50e806f51a37f8188fd268a6abbb7d292927", "patch": "@@ -4583,7 +4583,7 @@ end program test_cshift\n @table @asis\n @item @emph{Description}:\n @code{CTIME} converts a system time value, such as returned by\n-@code{TIME8}, to a string. The output will be of the form @samp{Sat\n+@ref{TIME8}, to a string. The output will be of the form @samp{Sat\n Aug 19 18:13:14 1995}.\n \n This intrinsic is provided in both subroutine and function forms; however,\n@@ -5843,7 +5843,7 @@ the dynamic type of A is an extension type of the dynamic type of MOLD.\n @table @asis\n @item @emph{Description}:\n @code{FDATE(DATE)} returns the current date (using the same format as\n-@code{CTIME}) in @var{DATE}. It is equivalent to @code{CALL CTIME(DATE,\n+@ref{CTIME}) in @var{DATE}. It is equivalent to @code{CALL CTIME(DATE,\n TIME())}.\n \n This intrinsic is provided in both subroutine and function forms; however,\n@@ -7157,7 +7157,7 @@ See @code{GETPID} for an example.\n \n @table @asis\n @item @emph{Description}:\n-Given a system time value @var{TIME} (as provided by the @code{TIME}\n+Given a system time value @var{TIME} (as provided by the @ref{TIME}\n intrinsic), fills @var{VALUES} with values extracted from it appropriate\n to the UTC time zone (Universal Coordinated Time, also known in some\n countries as GMT, Greenwich Mean Time), using @code{gmtime(3)}.\n@@ -7201,7 +7201,7 @@ effect, zero if not, and negative if the information is not available.\n @end enumerate\n \n @item @emph{See also}:\n-@ref{CTIME}, @ref{LTIME}, @ref{TIME}, @ref{TIME8}\n+@ref{DATE_AND_TIME}, @ref{CTIME}, @ref{LTIME}, @ref{TIME}, @ref{TIME8}\n \n @end table\n \n@@ -7879,8 +7879,10 @@ program test_idate\n   print *, tarray(3)\n end program test_idate\n @end smallexample\n-@end table\n \n+@item @emph{See also}:\n+@ref{DATE_AND_TIME}\n+@end table\n \n \n @node IEOR\n@@ -8699,6 +8701,9 @@ program test_itime\n   print *, tarray(3)\n end program test_itime\n @end smallexample\n+\n+@item @emph{See also}:\n+@ref{DATE_AND_TIME}\n @end table\n \n \n@@ -9650,7 +9655,7 @@ To stat an open file: @ref{FSTAT}, to stat a file: @ref{STAT}\n \n @table @asis\n @item @emph{Description}:\n-Given a system time value @var{TIME} (as provided by the @code{TIME}\n+Given a system time value @var{TIME} (as provided by the @ref{TIME}\n intrinsic), fills @var{VALUES} with values extracted from it appropriate\n to the local time zone using @code{localtime(3)}.\n \n@@ -9693,7 +9698,7 @@ effect, zero if not, and negative if the information is not available.\n @end enumerate\n \n @item @emph{See also}:\n-@ref{CTIME}, @ref{GMTIME}, @ref{TIME}, @ref{TIME8}\n+@ref{DATE_AND_TIME}, @ref{CTIME}, @ref{GMTIME}, @ref{TIME}, @ref{TIME8}\n \n @end table\n \n@@ -13885,7 +13890,7 @@ IF (THIS_IMAGE(HUGE(1)) /= THIS_IMAGE())\n @item @emph{Description}:\n Returns the current time encoded as an integer (in the manner of the\n function @code{time(3)} in the C standard library). This value is\n-suitable for passing to @code{CTIME}, @code{GMTIME}, and @code{LTIME}.\n+suitable for passing to @ref{CTIME}, @ref{GMTIME}, and @ref{LTIME}.\n \n This intrinsic is not fully portable, such as to systems with 32-bit\n @code{INTEGER} types but supporting times wider than 32 bits. Therefore,\n@@ -13910,7 +13915,7 @@ Function\n The return value is a scalar of type @code{INTEGER(4)}.\n \n @item @emph{See also}:\n-@ref{CTIME}, @ref{GMTIME}, @ref{LTIME}, @ref{MCLOCK}, @ref{TIME8}\n+@ref{DATE_AND_TIME}, @ref{CTIME}, @ref{GMTIME}, @ref{LTIME}, @ref{MCLOCK}, @ref{TIME8}\n \n @end table\n \n@@ -13926,7 +13931,7 @@ The return value is a scalar of type @code{INTEGER(4)}.\n @item @emph{Description}:\n Returns the current time encoded as an integer (in the manner of the\n function @code{time(3)} in the C standard library). This value is\n-suitable for passing to @code{CTIME}, @code{GMTIME}, and @code{LTIME}.\n+suitable for passing to @ref{CTIME}, @ref{GMTIME}, and @ref{LTIME}.\n \n @emph{Warning:} this intrinsic does not increase the range of the timing\n values over that returned by @code{time(3)}. On a system with a 32-bit\n@@ -13949,7 +13954,7 @@ Function\n The return value is a scalar of type @code{INTEGER(8)}.\n \n @item @emph{See also}:\n-@ref{CTIME}, @ref{GMTIME}, @ref{LTIME}, @ref{MCLOCK8}, @ref{TIME}\n+@ref{DATE_AND_TIME}, @ref{CTIME}, @ref{GMTIME}, @ref{LTIME}, @ref{MCLOCK8}, @ref{TIME}\n \n @end table\n "}]}