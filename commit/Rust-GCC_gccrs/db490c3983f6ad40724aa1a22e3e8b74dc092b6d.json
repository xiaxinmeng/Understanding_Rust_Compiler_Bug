{"sha": "db490c3983f6ad40724aa1a22e3e8b74dc092b6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI0OTBjMzk4M2Y2YWQ0MDcyNGFhMWEyMmUzZThiNzRkYzA5MmI2ZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-03-15T16:14:55Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-03-15T16:14:55Z"}, "message": "tree-ssa-dce.c (EXECUTE_IF_CONTROL_DEPENDENT): Make it an iterator-style macro.\n\n\t* tree-ssa-dce.c (EXECUTE_IF_CONTROL_DEPENDENT): Make it an\n\titerator-style macro.\n\t(mark_control_dependent_edges_necessary): Update the use of\n\tEXECUTE_IF_CONTROL_DEPENDENT.\n\nFrom-SVN: r112089", "tree": {"sha": "1453ddcea17581f5ff7d5632d9fce716fc3ee8f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1453ddcea17581f5ff7d5632d9fce716fc3ee8f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db490c3983f6ad40724aa1a22e3e8b74dc092b6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db490c3983f6ad40724aa1a22e3e8b74dc092b6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db490c3983f6ad40724aa1a22e3e8b74dc092b6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db490c3983f6ad40724aa1a22e3e8b74dc092b6d/comments", "author": null, "committer": null, "parents": [{"sha": "f705a9a07b93d6c311cb583c3abb6e21ad98e2cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f705a9a07b93d6c311cb583c3abb6e21ad98e2cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f705a9a07b93d6c311cb583c3abb6e21ad98e2cf"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "415ce1d7d1719a4cd6b02a1920afd3e44c5d00f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db490c3983f6ad40724aa1a22e3e8b74dc092b6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db490c3983f6ad40724aa1a22e3e8b74dc092b6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db490c3983f6ad40724aa1a22e3e8b74dc092b6d", "patch": "@@ -1,3 +1,10 @@\n+2006-03-15  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* tree-ssa-dce.c (EXECUTE_IF_CONTROL_DEPENDENT): Make it an\n+\titerator-style macro.\n+\t(mark_control_dependent_edges_necessary): Update the use of\n+\tEXECUTE_IF_CONTROL_DEPENDENT.\n+\n 2006-03-15  J\"orn Rennecke <joern.rennecke@st.com>\n \n \t* config/sh/predicates.md (cache_address_operand): Special."}, {"sha": "56f17ceeee10712e6cae2ff104340989f970782c", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db490c3983f6ad40724aa1a22e3e8b74dc092b6d/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db490c3983f6ad40724aa1a22e3e8b74dc092b6d/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=db490c3983f6ad40724aa1a22e3e8b74dc092b6d", "patch": "@@ -105,17 +105,12 @@ static sbitmap visited_control_parents;\n    to be recomputed.  */\n static bool cfg_altered;\n \n-/* Execute CODE for each edge (given number EDGE_NUMBER within the CODE)\n-   for which the block with index N is control dependent.  */\n-#define EXECUTE_IF_CONTROL_DEPENDENT(N, EDGE_NUMBER, CODE)\t\t      \\\n-  {\t\t\t\t\t\t\t\t\t      \\\n-    bitmap_iterator bi;\t\t\t\t\t\t\t      \\\n-\t\t\t\t\t\t\t\t\t      \\\n-    EXECUTE_IF_SET_IN_BITMAP (control_dependence_map[N], 0, EDGE_NUMBER, bi)  \\\n-      {\t\t\t\t\t\t\t\t\t      \\\n-\tCODE;\t\t\t\t\t\t\t\t      \\\n-      }\t\t\t\t\t\t\t\t\t      \\\n-  }\n+/* Execute code that follows the macro for each edge (given number\n+   EDGE_NUMBER within the CODE) for which the block with index N is\n+   control dependent.  */\n+#define EXECUTE_IF_CONTROL_DEPENDENT(BI, N, EDGE_NUMBER)\t\\\n+  EXECUTE_IF_SET_IN_BITMAP (control_dependence_map[(N)], 0,\t\\\n+\t\t\t    (EDGE_NUMBER), (BI))\n \n /* Local function prototypes.  */\n static inline void set_control_dependence_map_bit (basic_block, int);\n@@ -443,14 +438,15 @@ find_obviously_necessary_stmts (struct edge_list *el)\n static void\n mark_control_dependent_edges_necessary (basic_block bb, struct edge_list *el)\n {\n+  bitmap_iterator bi;\n   unsigned edge_number;\n \n   gcc_assert (bb != EXIT_BLOCK_PTR);\n \n   if (bb == ENTRY_BLOCK_PTR)\n     return;\n \n-  EXECUTE_IF_CONTROL_DEPENDENT (bb->index, edge_number,\n+  EXECUTE_IF_CONTROL_DEPENDENT (bi, bb->index, edge_number)\n     {\n       tree t;\n       basic_block cd_bb = INDEX_EDGE_PRED_BB (el, edge_number);\n@@ -462,7 +458,7 @@ mark_control_dependent_edges_necessary (basic_block bb, struct edge_list *el)\n       t = last_stmt (cd_bb);\n       if (t && is_ctrl_stmt (t))\n \tmark_stmt_necessary (t, true);\n-    });\n+    }\n }\n \f\n /* Propagate necessity using the operands of necessary statements.  Process"}]}