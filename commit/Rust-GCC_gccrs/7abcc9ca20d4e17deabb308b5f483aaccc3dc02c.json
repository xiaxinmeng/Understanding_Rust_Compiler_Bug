{"sha": "7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "node_id": "C_kwDOANBUbNoAKDdhYmNjOWNhMjBkNGUxN2RlYWJiMzA4YjVmNDgzYWFjY2MzZGMwMmM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-30T08:50:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-30T08:50:52Z"}, "message": "libcpp: Enable P1949R7 for C++11 and up as it was a DR [PR100977]\n\nJonathan mentioned on IRC that:\n\"Accept P1949R7 (C++ Identifier Syntax using Unicode Standard Annex 31) as\na Defect Report and apply the changes therein to the C++ working paper.\"\nwhile I've actually implemented it only for -std={gnu,c}++{23,2b}.\nAs the C++98 rules were significantly different, I'm not trying to change\nanything for C++98.\n\n2021-11-30  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/100977\n\t* init.c (lang_defaults): Enable cxx23_identifiers for\n\t-std={gnu,c}++{11,14,17,20} too.\n\n\t* c-c++-common/cpp/ucnid-2011-1-utf8.c: Expect errors in C++.\n\t* c-c++-common/cpp/ucnid-2011-1.c: Likewise.\n\t* g++.dg/cpp/ucnid-4-utf8.C: Add missing space to dg-options.\n\t* g++.dg/cpp23/normalize3.C: Enable for c++11 rather than just c++23.\n\t* g++.dg/cpp23/normalize4.C: Likewise.\n\t* g++.dg/cpp23/normalize5.C: Likewise.\n\t* g++.dg/cpp23/normalize7.C: Expect errors rather than just warnings\n\tfor c++11 and up rather than just c++23.\n\t* g++.dg/cpp23/ucnid-2-utf8.C: Expect errors even for c++11 .. c++20.", "tree": {"sha": "c21e63f7f6d56c10092fca7fbf157987f2c5ac43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c21e63f7f6d56c10092fca7fbf157987f2c5ac43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2af2f55a500adad73451f3b859cfaa8974920caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2af2f55a500adad73451f3b859cfaa8974920caf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2af2f55a500adad73451f3b859cfaa8974920caf"}], "stats": {"total": 56, "additions": 27, "deletions": 29}, "files": [{"sha": "970d53ecd55c39aa73576f84ef7ed54f82e34a8b", "filename": "gcc/testsuite/c-c++-common/cpp/ucnid-2011-1-utf8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fucnid-2011-1-utf8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fucnid-2011-1-utf8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fucnid-2011-1-utf8.c?ref=7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "patch": "@@ -2,7 +2,7 @@\n /* { dg-options \"-std=c11 -pedantic\" { target c } } */\n /* { dg-options \"-std=c++11 -pedantic\" { target c++ } } */\n \n-\u00a8\n+\u00a8 /* { dg-error \"is not valid in an identifier\" \"\" { target c++ } } */\n \n B\u0300\n \n@@ -11,5 +11,5 @@ B\u0300\n A\u0300 /* { dg-warning \"not in NFC\" } */\n \n \ud800\udc00\n-\ud83f\udffd\n-\udb44\ude34\n+\ud83f\udffd\t/* { dg-error \"is not valid in an identifier\" \"\" { target c++ } } */\n+\udb44\ude34\t/* { dg-error \"is not valid in an identifier\" \"\" { target c++ } } */"}, {"sha": "6babb4069b7dbfefea62ce2bc6ceedc8f86c967a", "filename": "gcc/testsuite/c-c++-common/cpp/ucnid-2011-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fucnid-2011-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fucnid-2011-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fucnid-2011-1.c?ref=7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "patch": "@@ -2,7 +2,7 @@\n /* { dg-options \"-std=c11 -pedantic\" { target c } } */\n /* { dg-options \"-std=c++11 -pedantic\" { target c++ } } */\n \n-\\u00A8\n+\\u00A8 /* { dg-error \"is not valid in an identifier\" \"\" { target c++ } } */\n \n B\\u0300\n \n@@ -11,5 +11,5 @@ B\\u0300\n A\\u0300 /* { dg-warning \"not in NFC\" } */\n \n \\U00010000\n-\\U0001FFFD\n-\\U000E1234\n+\\U0001FFFD\t/* { dg-error \"is not valid in an identifier\" \"\" { target c++ } } */\n+\\U000E1234\t/* { dg-error \"is not valid in an identifier\" \"\" { target c++ } } */"}, {"sha": "1e5e3fc99db62b1ab9a9b57dcc36b043f32409d5", "filename": "gcc/testsuite/g++.dg/cpp/ucnid-4-utf8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucnid-4-utf8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucnid-4-utf8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucnid-4-utf8.C?ref=7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=gnu++98\"} */\n+/* { dg-options \"-std=gnu++98\" } */\n \n \u00aa\n \u00ab /* { dg-error \"not valid in an identifier\" } */"}, {"sha": "1733d3845542d4a3da1ff933de5dfb8654aa822c", "filename": "gcc/testsuite/g++.dg/cpp23/normalize3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize3.C?ref=7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do preprocess { target { c++23 } } }\n+// { dg-do preprocess { target { c++11 } } }\n // { dg-options \"-pedantic-errors\" }\n \n \\u00AA"}, {"sha": "48e723103ca767ccb9adc0f7fcd3415358ed6650", "filename": "gcc/testsuite/g++.dg/cpp23/normalize4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize4.C?ref=7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do preprocess { target { c++23 } } }\n+// { dg-do preprocess { target { c++11 } } }\n // { dg-options \"\" }\n \n \\u00AA"}, {"sha": "cbeb13480bb30973f369a4563e68d1429eb8f735", "filename": "gcc/testsuite/g++.dg/cpp23/normalize5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize5.C?ref=7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do preprocess { target { c++23 } } }\n+// { dg-do preprocess { target { c++11 } } }\n // { dg-options \"-pedantic-errors\" }\n \n \\u00AA"}, {"sha": "a1c0a2f413a0c47e1a0d14a6ae4f917e36470fa6", "filename": "gcc/testsuite/g++.dg/cpp23/normalize7.C", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fnormalize7.C?ref=7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "patch": "@@ -3,10 +3,8 @@\n // { dg-options \"-pedantic-errors\" }\n \n constexpr int \u00c0 = 1; // U+00C0\n-constexpr int A\u0300 = 2; // U+0041 U+0300 { dg-warning \"is not in NFC\" \"\" { target { ! c++23 } } }\n-// { dg-error \"is not in NFC\" \"\" { target c++23 } .-1 }\n+constexpr int A\u0300 = 2; // U+0041 U+0300 { dg-error \"is not in NFC\" }\n constexpr int gv1 = \\u00c0;\n-constexpr int gv2 = A\\u0300; // { dg-warning \"is not in NFC\" \"\" { target { ! c++23 } } }\n-// { dg-error \"is not in NFC\" \"\" { target c++23 } .-1 }\n+constexpr int gv2 = A\\u0300; // { dg-error \"is not in NFC\" }\n static_assert(gv1 == 1, \"\");\n static_assert(gv2 == 2, \"\");"}, {"sha": "712785ccc202a36c18413d88f5fcb3f40d1e9672", "filename": "gcc/testsuite/g++.dg/cpp23/ucnid-2-utf8.C", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fucnid-2-utf8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fucnid-2-utf8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fucnid-2-utf8.C?ref=7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "patch": "@@ -2,17 +2,17 @@\n // { dg-do compile }\n // { dg-options \"-pedantic-errors\" }\n \n-bool \ud83d\udc77 = true;\t// { dg-error \"is not valid in an identifier\" \"\" { target { c++98_only || c++23 } } }\n+bool \ud83d\udc77 = true;\t// { dg-error \"is not valid in an identifier\" }\n bool \ud83d\udc77\u200d\u2640 = false;\t// { dg-error \"is not valid in an identifier\" }\n int \u23f0 = 0;\t// { dg-error \"is not valid in an identifier\" }\n-int \ud83d\udd50 = 0;\t// { dg-error \"is not valid in an identifier\" \"\" { target { c++98_only || c++23 } } }\n+int \ud83d\udd50 = 0;\t// { dg-error \"is not valid in an identifier\" }\n int \u2620 = 0;\t// { dg-error \"is not valid in an identifier\" }\n-int \ud83d\udc80 = 0;\t// { dg-error \"is not valid in an identifier\" \"\" { target { c++98_only || c++23 } } }\n+int \ud83d\udc80 = 0;\t// { dg-error \"is not valid in an identifier\" }\n int \u270b = 0;\t// { dg-error \"is not valid in an identifier\" }\n-int \ud83d\udc4a = 0;\t// { dg-error \"is not valid in an identifier\" \"\" { target { c++98_only || c++23 } } }\n+int \ud83d\udc4a = 0;\t// { dg-error \"is not valid in an identifier\" }\n int \u2708 = 0;\t// { dg-error \"is not valid in an identifier\" }\n-int \ud83d\ude80 = 0;\t// { dg-error \"is not valid in an identifier\" \"\" { target { c++98_only || c++23 } } }\n+int \ud83d\ude80 = 0;\t// { dg-error \"is not valid in an identifier\" }\n int \u2639 = 0;\t// { dg-error \"is not valid in an identifier\" }\n-int \ud83d\ude00 = 0;\t// { dg-error \"is not valid in an identifier\" \"\" { target { c++98_only || c++23 } } }\n+int \ud83d\ude00 = 0;\t// { dg-error \"is not valid in an identifier\" }\n struct E {};\n-class \ud83d\udca9 : public E {};\t// { dg-error \"is not valid in an identifier\" \"\" { target { c++98_only || c++23 } } }\n+class \ud83d\udca9 : public E {};\t// { dg-error \"is not valid in an identifier\" }"}, {"sha": "78719abfe204add7994f1668a34613f2f25bc343", "filename": "libcpp/init.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcc9ca20d4e17deabb308b5f483aaccc3dc02c/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=7abcc9ca20d4e17deabb308b5f483aaccc3dc02c", "patch": "@@ -114,14 +114,14 @@ static const struct lang_flags lang_defaults[] =\n   /* STDC2X   */  { 1,  0,  1,  1,  1,  0,    1,  1,   1,   0,   0,    1,     1,     1,   1,      0,   1,     1,   0,   1 },\n   /* GNUCXX   */  { 0,  1,  1,  1,  0,  0,    0,  1,   0,   0,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0 },\n   /* CXX98    */  { 0,  1,  0,  1,  0,  0,    1,  1,   0,   0,   0,    0,     0,     1,   0,      0,   1,     0,   0,   0 },\n-  /* GNUCXX11 */  { 1,  1,  1,  1,  1,  0,    0,  1,   1,   1,   1,    0,     0,     0,   0,      1,   1,     0,   0,   0 },\n-  /* CXX11    */  { 1,  1,  0,  1,  1,  0,    1,  1,   1,   1,   1,    0,     0,     1,   0,      0,   1,     0,   0,   0 },\n-  /* GNUCXX14 */  { 1,  1,  1,  1,  1,  0,    0,  1,   1,   1,   1,    1,     1,     0,   0,      1,   1,     0,   0,   0 },\n-  /* CXX14    */  { 1,  1,  0,  1,  1,  0,    1,  1,   1,   1,   1,    1,     1,     1,   0,      0,   1,     0,   0,   0 },\n-  /* GNUCXX17 */  { 1,  1,  1,  1,  1,  0,    0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0 },\n-  /* CXX17    */  { 1,  1,  1,  1,  1,  0,    1,  1,   1,   1,   1,    1,     1,     0,   1,      0,   1,     0,   0,   0 },\n-  /* GNUCXX20 */  { 1,  1,  1,  1,  1,  0,    0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0 },\n-  /* CXX20    */  { 1,  1,  1,  1,  1,  0,    1,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0 },\n+  /* GNUCXX11 */  { 1,  1,  1,  1,  1,  1,    0,  1,   1,   1,   1,    0,     0,     0,   0,      1,   1,     0,   0,   0 },\n+  /* CXX11    */  { 1,  1,  0,  1,  1,  1,    1,  1,   1,   1,   1,    0,     0,     1,   0,      0,   1,     0,   0,   0 },\n+  /* GNUCXX14 */  { 1,  1,  1,  1,  1,  1,    0,  1,   1,   1,   1,    1,     1,     0,   0,      1,   1,     0,   0,   0 },\n+  /* CXX14    */  { 1,  1,  0,  1,  1,  1,    1,  1,   1,   1,   1,    1,     1,     1,   0,      0,   1,     0,   0,   0 },\n+  /* GNUCXX17 */  { 1,  1,  1,  1,  1,  1,    0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0 },\n+  /* CXX17    */  { 1,  1,  1,  1,  1,  1,    1,  1,   1,   1,   1,    1,     1,     0,   1,      0,   1,     0,   0,   0 },\n+  /* GNUCXX20 */  { 1,  1,  1,  1,  1,  1,    0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0 },\n+  /* CXX20    */  { 1,  1,  1,  1,  1,  1,    1,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0 },\n   /* GNUCXX23 */  { 1,  1,  1,  1,  1,  1,    0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   1,   1 },\n   /* CXX23    */  { 1,  1,  1,  1,  1,  1,    1,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   1,   1 },\n   /* ASM      */  { 0,  0,  1,  0,  0,  0,    0,  0,   0,   0,   0,    0,     0,     0,   0,      0,   0,     0,   0,   0 }"}]}