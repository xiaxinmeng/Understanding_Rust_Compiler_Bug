{"sha": "dd39f7830a217efd7528ff0bfacb8163ebae7b9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzOWY3ODMwYTIxN2VmZDc1MjhmZjBiZmFjYjgxNjNlYmFlN2I5Zg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-09-12T09:49:04Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-09-12T09:49:04Z"}, "message": "trans-expr.c (gfc_conv_initializer): Fix expr == NULL check.\n\n2007-09-12  Tobias Burnus  <burnus@net-b.de>\n\n\t* trans-expr.c (gfc_conv_initializer): Fix expr == NULL check.\n\nFrom-SVN: r128422", "tree": {"sha": "eb592218cda9443ea02724ffb212736651761cd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb592218cda9443ea02724ffb212736651761cd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd39f7830a217efd7528ff0bfacb8163ebae7b9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd39f7830a217efd7528ff0bfacb8163ebae7b9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd39f7830a217efd7528ff0bfacb8163ebae7b9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd39f7830a217efd7528ff0bfacb8163ebae7b9f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "750975041d4c6d2f4e87018291fb82a2296e1fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750975041d4c6d2f4e87018291fb82a2296e1fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/750975041d4c6d2f4e87018291fb82a2296e1fb9"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "f16d66710df551c76af8ac8004c7e8be05a8e706", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd39f7830a217efd7528ff0bfacb8163ebae7b9f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd39f7830a217efd7528ff0bfacb8163ebae7b9f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=dd39f7830a217efd7528ff0bfacb8163ebae7b9f", "patch": "@@ -1,3 +1,7 @@\n+2007-09-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-expr.c (gfc_conv_initializer): Fix expr == NULL check.\n+\n 2007-09-12  Jan Hubicka  <jh@suse.cz>\n \n \t* f95-lang.c (LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION): Kill."}, {"sha": "b6eb33aa312d1b63d7a29fb833d878741e59f33d", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd39f7830a217efd7528ff0bfacb8163ebae7b9f/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd39f7830a217efd7528ff0bfacb8163ebae7b9f/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=dd39f7830a217efd7528ff0bfacb8163ebae7b9f", "patch": "@@ -2855,7 +2855,8 @@ gfc_conv_initializer (gfc_expr * expr, gfc_typespec * ts, tree type,\n      (these are the only two iso_c_binding derived types that can be\n      used as initialization expressions).  If so, we need to modify\n      the 'expr' to be that for a (void *).  */\n-  if (expr->ts.type == BT_DERIVED && expr->ts.is_iso_c && expr->ts.derived)\n+  if (expr != NULL && expr->ts.type == BT_DERIVED\n+      && expr->ts.is_iso_c && expr->ts.derived)\n     {\n       gfc_symbol *derived = expr->ts.derived;\n "}]}