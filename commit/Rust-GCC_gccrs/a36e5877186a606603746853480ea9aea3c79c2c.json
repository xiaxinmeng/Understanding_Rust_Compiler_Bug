{"sha": "a36e5877186a606603746853480ea9aea3c79c2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM2ZTU4NzcxODZhNjA2NjAzNzQ2ODUzNDgwZWE5YWVhM2M3OWMyYw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-21T14:01:37Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-21T14:01:37Z"}, "message": "define_bypass guard functions take a pair of rtx_insn\n\n2014-08-21  David Malcolm  <dmalcolm@redhat.com>\n\n\t* genautomata.c (output_internal_insn_latency_func): When writing\n\tthe function \"internal_insn_latency\" to insn-automata.c,\n\tstrengthen params \"insn\" and \"insn2\" from rtx to rtx_insn *, thus\n\tallowing the optional guard function of (define_bypass) clauses to\n\texpect a pair of rtx_insn *, rather than a pair of rtx.\n\t(output_insn_latency_func): When writing the function\n\t\"insn_latency\", add an \"uncast_\" prefix to params \"insn\" and\n\t\"insn2\", reintroducing \"insn\" and \"insn2\" as rtx_insn * locals\n\tusing checked casts from the params, thus enabling the above\n\tchange to the generated \"internal_insn_latency\" function.\n\nFrom-SVN: r214273", "tree": {"sha": "e7d21d772e5ef8546e4cf56644276991e2166af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7d21d772e5ef8546e4cf56644276991e2166af5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a36e5877186a606603746853480ea9aea3c79c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a36e5877186a606603746853480ea9aea3c79c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a36e5877186a606603746853480ea9aea3c79c2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a36e5877186a606603746853480ea9aea3c79c2c/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a336b719a34c07effb7e1ba9e72f8c270ea362ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a336b719a34c07effb7e1ba9e72f8c270ea362ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a336b719a34c07effb7e1ba9e72f8c270ea362ee"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "12ef5146eba98754a60cdf65f182887e2afd2473", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a36e5877186a606603746853480ea9aea3c79c2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a36e5877186a606603746853480ea9aea3c79c2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a36e5877186a606603746853480ea9aea3c79c2c", "patch": "@@ -1,3 +1,16 @@\n+2014-08-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* genautomata.c (output_internal_insn_latency_func): When writing\n+\tthe function \"internal_insn_latency\" to insn-automata.c,\n+\tstrengthen params \"insn\" and \"insn2\" from rtx to rtx_insn *, thus\n+\tallowing the optional guard function of (define_bypass) clauses to\n+\texpect a pair of rtx_insn *, rather than a pair of rtx.\n+\t(output_insn_latency_func): When writing the function\n+\t\"insn_latency\", add an \"uncast_\" prefix to params \"insn\" and\n+\t\"insn2\", reintroducing \"insn\" and \"insn2\" as rtx_insn * locals\n+\tusing checked casts from the params, thus enabling the above\n+\tchange to the generated \"internal_insn_latency\" function.\n+\n 2014-08-21  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR tree-optimization/62091"}, {"sha": "3cd4d3a50091433d163ccd8ddd49fba91b664f12", "filename": "gcc/genautomata.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a36e5877186a606603746853480ea9aea3c79c2c/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a36e5877186a606603746853480ea9aea3c79c2c/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=a36e5877186a606603746853480ea9aea3c79c2c", "patch": "@@ -8360,7 +8360,7 @@ output_internal_insn_latency_func (void)\n   decl_t decl;\n   struct bypass_decl *bypass;\n \n-  fprintf (output_file, \"static int\\n%s (int %s ATTRIBUTE_UNUSED,\\n\\tint %s ATTRIBUTE_UNUSED,\\n\\trtx %s ATTRIBUTE_UNUSED,\\n\\trtx %s ATTRIBUTE_UNUSED)\\n\",\n+  fprintf (output_file, \"static int\\n%s (int %s ATTRIBUTE_UNUSED,\\n\\tint %s ATTRIBUTE_UNUSED,\\n\\trtx_insn *%s ATTRIBUTE_UNUSED,\\n\\trtx_insn *%s ATTRIBUTE_UNUSED)\\n\",\n \t   INTERNAL_INSN_LATENCY_FUNC_NAME, INTERNAL_INSN_CODE_NAME,\n \t   INTERNAL_INSN2_CODE_NAME, INSN_PARAMETER_NAME,\n \t   INSN2_PARAMETER_NAME);\n@@ -8477,10 +8477,16 @@ output_internal_maximal_insn_latency_func (void)\n static void\n output_insn_latency_func (void)\n {\n-  fprintf (output_file, \"int\\n%s (rtx %s, rtx %s)\\n\",\n+  fprintf (output_file, \"int\\n%s (rtx uncast_%s, rtx uncast_%s)\\n\",\n \t   INSN_LATENCY_FUNC_NAME, INSN_PARAMETER_NAME, INSN2_PARAMETER_NAME);\n   fprintf (output_file, \"{\\n  int %s, %s;\\n\",\n \t   INTERNAL_INSN_CODE_NAME, INTERNAL_INSN2_CODE_NAME);\n+  fprintf (output_file,\n+\t   \"  rtx_insn *%s = safe_as_a <rtx_insn *> (uncast_%s);\\n\",\n+\t   INSN_PARAMETER_NAME, INSN_PARAMETER_NAME);\n+  fprintf (output_file,\n+\t   \"  rtx_insn *%s = safe_as_a <rtx_insn *> (uncast_%s);\\n\",\n+\t   INSN2_PARAMETER_NAME, INSN2_PARAMETER_NAME);\n   output_internal_insn_code_evaluation (INSN_PARAMETER_NAME,\n \t\t\t\t\tINTERNAL_INSN_CODE_NAME, 0);\n   output_internal_insn_code_evaluation (INSN2_PARAMETER_NAME,"}]}