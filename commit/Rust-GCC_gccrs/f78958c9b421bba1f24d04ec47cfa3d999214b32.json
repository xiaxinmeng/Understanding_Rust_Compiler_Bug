{"sha": "f78958c9b421bba1f24d04ec47cfa3d999214b32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc4OTU4YzliNDIxYmJhMWYyNGQwNGVjNDdjZmEzZDk5OTIxNGIzMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-09-20T16:34:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-09-20T16:34:42Z"}, "message": "Deprecate nested types in std::hash\n\n\t* include/bits/c++config (_GLIBCXX17_DEPRECATED): Define.\n\t* include/bits/functional_hash.h (__hash_base::result_type)\n\t(__hash_base::argument_type): Add _GLIBCXX17_DEPRECATED.\n\t* include/std/optional (hash<optional<T>>::result_type)\n\t(hash<optional<T>>::argument_type): Add deprecated attribute.\n\t(__is_fast_hash<hash<optional<T>>>): Add partial specialization.\n\t* include/std/variant (hash<variant<Types...>>::result_type)\n\t(hash<variant<Types...>>::argument_type): Add deprecated attribute.\n\t(__is_fast_hash<hash<variant<Types...>>>): Add partial specialization.\n\nFrom-SVN: r253017", "tree": {"sha": "fcf362ffffff7cacb075e905ab7d59f11241fb65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcf362ffffff7cacb075e905ab7d59f11241fb65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f78958c9b421bba1f24d04ec47cfa3d999214b32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78958c9b421bba1f24d04ec47cfa3d999214b32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78958c9b421bba1f24d04ec47cfa3d999214b32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78958c9b421bba1f24d04ec47cfa3d999214b32/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ba0b15a7e552a6458a54b460752fd19f423170d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ba0b15a7e552a6458a54b460752fd19f423170d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ba0b15a7e552a6458a54b460752fd19f423170d"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "023e7ae58cd0d03ef72c4d77960e574e163264bd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78958c9b421bba1f24d04ec47cfa3d999214b32/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78958c9b421bba1f24d04ec47cfa3d999214b32/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f78958c9b421bba1f24d04ec47cfa3d999214b32", "patch": "@@ -1,5 +1,15 @@\n 2017-09-20  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/c++config (_GLIBCXX17_DEPRECATED): Define.\n+\t* include/bits/functional_hash.h (__hash_base::result_type)\n+\t(__hash_base::argument_type): Add _GLIBCXX17_DEPRECATED.\n+\t* include/std/optional (hash<optional<T>>::result_type)\n+\t(hash<optional<T>>::argument_type): Add deprecated attribute.\n+\t(__is_fast_hash<hash<optional<T>>>): Add partial specialization.\n+\t* include/std/variant (hash<variant<Types...>>::result_type)\n+\t(hash<variant<Types...>>::argument_type): Add deprecated attribute.\n+\t(__is_fast_hash<hash<variant<Types...>>>): Add partial specialization.\n+\n \t* libsupc++/exception_ptr.h (copy_exception): Remove deprecated\n \tnon-standard function.\n "}, {"sha": "21e3fbb2741cbcb97d18595eacd46a64cc5c50e6", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78958c9b421bba1f24d04ec47cfa3d999214b32/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78958c9b421bba1f24d04ec47cfa3d999214b32/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=f78958c9b421bba1f24d04ec47cfa3d999214b32", "patch": "@@ -77,6 +77,7 @@\n // Macros for deprecated attributes.\n //   _GLIBCXX_USE_DEPRECATED\n //   _GLIBCXX_DEPRECATED\n+//   _GLIBCXX17_DEPRECATED\n #ifndef _GLIBCXX_USE_DEPRECATED\n # define _GLIBCXX_USE_DEPRECATED 1\n #endif\n@@ -87,6 +88,12 @@\n # define _GLIBCXX_DEPRECATED\n #endif\n \n+#if defined(__DEPRECATED) && (__cplusplus >= 201703L)\n+# define _GLIBCXX17_DEPRECATED [[__deprecated__]]\n+#else\n+# define _GLIBCXX17_DEPRECATED\n+#endif\n+\n // Macros for ABI tag attributes.\n #ifndef _GLIBCXX_ABI_TAG_CXX11\n # define _GLIBCXX_ABI_TAG_CXX11 __attribute ((__abi_tag__ (\"cxx11\")))"}, {"sha": "c0936843ac076c0372c59c0082f7f8ca515128bf", "filename": "libstdc++-v3/include/bits/functional_hash.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78958c9b421bba1f24d04ec47cfa3d999214b32/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctional_hash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78958c9b421bba1f24d04ec47cfa3d999214b32/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctional_hash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctional_hash.h?ref=f78958c9b421bba1f24d04ec47cfa3d999214b32", "patch": "@@ -49,8 +49,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Result, typename _Arg>\n     struct __hash_base\n     {\n-      typedef _Result     result_type;\n-      typedef _Arg      argument_type;\n+      typedef _Result     result_type _GLIBCXX17_DEPRECATED;\n+      typedef _Arg      argument_type _GLIBCXX17_DEPRECATED;\n     };\n \n   /// Primary class template hash."}, {"sha": "e017eedbde7115ddb929973bc68e22945fa9511a", "filename": "libstdc++-v3/include/std/optional", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78958c9b421bba1f24d04ec47cfa3d999214b32/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78958c9b421bba1f24d04ec47cfa3d999214b32/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional?ref=f78958c9b421bba1f24d04ec47cfa3d999214b32", "patch": "@@ -1028,10 +1028,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     : private __poison_hash<remove_const_t<_Tp>>,\n       public __optional_hash_call_base<_Tp>\n     {\n-      using result_type = size_t;\n-      using argument_type = optional<_Tp>;\n+      using result_type [[__deprecated__]] = size_t;\n+      using argument_type [[__deprecated__]] = optional<_Tp>;\n     };\n \n+  template<typename _Tp>\n+    struct __is_fast_hash<hash<optional<_Tp>>> : __is_fast_hash<hash<_Tp>>\n+    { };\n+\n   /// @}\n \n   template <typename _Tp> optional(_Tp) -> optional<_Tp>;"}, {"sha": "8f574f639243c2cc5fbbcd3f57a36132e6991124", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78958c9b421bba1f24d04ec47cfa3d999214b32/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78958c9b421bba1f24d04ec47cfa3d999214b32/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=f78958c9b421bba1f24d04ec47cfa3d999214b32", "patch": "@@ -1420,15 +1420,15 @@ namespace __variant\n \tvariant<_Types...>, std::index_sequence_for<_Types...>>,\n       public __variant_hash_call_base<_Types...>\n     {\n-      using result_type = size_t;\n-      using argument_type = variant<_Types...>;\n+      using result_type [[__deprecated__]] = size_t;\n+      using argument_type [[__deprecated__]] = variant<_Types...>;\n     };\n \n   template<>\n     struct hash<monostate>\n     {\n-      using result_type = size_t;\n-      using argument_type = monostate;\n+      using result_type [[__deprecated__]] = size_t;\n+      using argument_type [[__deprecated__]] = monostate;\n \n       size_t\n       operator()(const monostate& __t) const noexcept\n@@ -1438,6 +1438,11 @@ namespace __variant\n       }\n     };\n \n+  template<typename... _Types>\n+    struct __is_fast_hash<hash<variant<_Types...>>>\n+    : bool_constant<(__is_fast_hash<_Types>::value && ...)>\n+    { };\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n "}]}