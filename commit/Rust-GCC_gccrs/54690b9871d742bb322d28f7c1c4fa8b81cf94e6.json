{"sha": "54690b9871d742bb322d28f7c1c4fa8b81cf94e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ2OTBiOTg3MWQ3NDJiYjMyMmQyOGY3YzFjNGZhOGI4MWNmOTRlNg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-07-01T20:22:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-16T07:34:53Z"}, "message": "[Ada] Ada2020: parsing of qualified exprs with new agg syntax\n\ngcc/ada/\n\n\t* par-ch4.adb (P_Name): Allow Tok_Left_Bracket in two places to\n\tcall P_Qualified_Expression. We don't need to modify other\n\tplaces that call P_Qualified_Expression, because a\n\tqualified_expression is a name in Ada 2012 and higher, so P_Name\n\tis the right place.  The parser already parses aggregates with\n\tbrackets; we just need to allow that in qualified expressions.", "tree": {"sha": "ca9d4029e2f8759b3a5991696fd917ebb2170bdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca9d4029e2f8759b3a5991696fd917ebb2170bdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54690b9871d742bb322d28f7c1c4fa8b81cf94e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54690b9871d742bb322d28f7c1c4fa8b81cf94e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54690b9871d742bb322d28f7c1c4fa8b81cf94e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54690b9871d742bb322d28f7c1c4fa8b81cf94e6/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2357b2948db15d5e3529d2368e11b4f6caa2dca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2357b2948db15d5e3529d2368e11b4f6caa2dca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2357b2948db15d5e3529d2368e11b4f6caa2dca0"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "e4ce02fa3aff3074baf022041de99e315b451031", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54690b9871d742bb322d28f7c1c4fa8b81cf94e6/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54690b9871d742bb322d28f7c1c4fa8b81cf94e6/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=54690b9871d742bb322d28f7c1c4fa8b81cf94e6", "patch": "@@ -281,17 +281,20 @@ package body Ch4 is\n          goto Scan_Name_Extension;\n       end if;\n \n-      --  We have scanned out a qualified simple name, check for name extension\n-      --  Note that we know there is no dot here at this stage, so the only\n-      --  possible cases of name extension are apostrophe and left paren.\n+      --  We have scanned out a qualified simple name, check for name\n+      --  extension.  Note that we know there is no dot here at this stage,\n+      --  so the only possible cases of name extension are apostrophe followed\n+      --  by '(' or '['.\n \n       if Token = Tok_Apostrophe then\n          Save_Scan_State (Scan_State); -- at apostrophe\n          Scan; -- past apostrophe\n \n          --  Qualified expression in Ada 2012 mode (treated as a name)\n \n-         if Ada_Version >= Ada_2012 and then Token = Tok_Left_Paren then\n+         if Ada_Version >= Ada_2012\n+           and then Token in Tok_Left_Paren | Tok_Left_Bracket\n+         then\n             goto Scan_Name_Extension_Apostrophe;\n \n          --  If left paren not in Ada 2012, then it is not part of the name,\n@@ -445,7 +448,9 @@ package body Ch4 is\n          begin\n             --  Check for qualified expression case in Ada 2012 mode\n \n-            if Ada_Version >= Ada_2012 and then Token = Tok_Left_Paren then\n+            if Ada_Version >= Ada_2012\n+              and then Token in Tok_Left_Paren | Tok_Left_Bracket\n+            then\n                Name_Node := P_Qualified_Expression (Name_Node);\n                goto Scan_Name_Extension;\n "}]}