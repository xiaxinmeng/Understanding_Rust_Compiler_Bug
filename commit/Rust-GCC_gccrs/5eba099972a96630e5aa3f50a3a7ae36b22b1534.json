{"sha": "5eba099972a96630e5aa3f50a3a7ae36b22b1534", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWViYTA5OTk3MmE5NjYzMGU1YWEzZjUwYTNhN2FlMzZiMjJiMTUzNA==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-06-12T10:28:49Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-06-12T10:28:49Z"}, "message": "[AArch64] Remove from arm_neon.h functions not in the spec\n\n  \t* config/aarch64/arm_neon.h (vmlaq_n_f64, vmlsq_n_f64, vrsrtsq_f64,\n\tvcge_p8, vcgeq_p8, vcgez_p8, vcgez_u8, vcgez_u16, vcgez_u32, vcgez_u64,\n\tvcgezq_p8, vcgezq_u8, vcgezq_u16, vcgezq_u32, vcgezq_u64, vcgezd_u64,\n\tvcgt_p8, vcgtq_p8, vcgtz_p8, vcgtz_u8, vcgtz_u16, vcgtz_u32, vcgtz_u64,\n\tvcgtzq_p8, vcgtzq_u8, vcgtzq_u16, vcgtzq_u32, vcgtzq_u64, vcgtzd_u64,\n\tvcle_p8, vcleq_p8, vclez_p8, vclez_u64, vclezq_p8, vclezd_u64, vclt_p8,\n\tvcltq_p8, vcltz_p8, vcltzq_p8, vcltzd_u64): Remove functions as they are\n\tnot in the spec.\n\nFrom-SVN: r211503", "tree": {"sha": "81bafdf82ae5e4204c8b51f7e1c7c3ed2c167078", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81bafdf82ae5e4204c8b51f7e1c7c3ed2c167078"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5eba099972a96630e5aa3f50a3a7ae36b22b1534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eba099972a96630e5aa3f50a3a7ae36b22b1534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eba099972a96630e5aa3f50a3a7ae36b22b1534", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eba099972a96630e5aa3f50a3a7ae36b22b1534/comments", "author": null, "committer": null, "parents": [{"sha": "ad7d90cc4cf065413edfa1996dff98453652e66f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7d90cc4cf065413edfa1996dff98453652e66f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad7d90cc4cf065413edfa1996dff98453652e66f"}], "stats": {"total": 326, "additions": 11, "deletions": 315}, "files": [{"sha": "a42b94d3a1e6f34a9732b4cee9c88c60f8a35b4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eba099972a96630e5aa3f50a3a7ae36b22b1534/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eba099972a96630e5aa3f50a3a7ae36b22b1534/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5eba099972a96630e5aa3f50a3a7ae36b22b1534", "patch": "@@ -1,3 +1,14 @@\n+2014-06-12  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/arm_neon.h (vmlaq_n_f64, vmlsq_n_f64, vrsrtsq_f64,\n+\tvcge_p8, vcgeq_p8, vcgez_p8, vcgez_u8, vcgez_u16, vcgez_u32, vcgez_u64,\n+\tvcgezq_p8, vcgezq_u8, vcgezq_u16, vcgezq_u32, vcgezq_u64, vcgezd_u64,\n+\tvcgt_p8, vcgtq_p8, vcgtz_p8, vcgtz_u8, vcgtz_u16, vcgtz_u32, vcgtz_u64,\n+\tvcgtzq_p8, vcgtzq_u8, vcgtzq_u16, vcgtzq_u32, vcgtzq_u64, vcgtzd_u64,\n+\tvcle_p8, vcleq_p8, vclez_p8, vclez_u64, vclezq_p8, vclezd_u64, vclt_p8,\n+\tvcltq_p8, vcltz_p8, vcltzq_p8, vcltzd_u64): Remove functions as they are\n+\tnot in the spec.\n+\n 2014-06-10  Alan Lawrence  <alan.lawrence@arm.com>\n \n \tPR target/59843"}, {"sha": "b1b78f9d4b98ff3b2beef22a15618feb4636c03c", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 0, "deletions": 315, "changes": 315, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eba099972a96630e5aa3f50a3a7ae36b22b1534/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eba099972a96630e5aa3f50a3a7ae36b22b1534/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=5eba099972a96630e5aa3f50a3a7ae36b22b1534", "patch": "@@ -7164,18 +7164,6 @@ vmlaq_n_f32 (float32x4_t a, float32x4_t b, float32_t c)\n   return result;\n }\n \n-__extension__ static __inline float64x2_t __attribute__ ((__always_inline__))\n-vmlaq_n_f64 (float64x2_t a, float64x2_t b, float64_t c)\n-{\n-  float64x2_t result;\n-  float64x2_t t1;\n-  __asm__ (\"fmul %1.2d, %3.2d, %4.d[0]; fadd %0.2d, %0.2d, %1.2d\"\n-           : \"=w\"(result), \"=w\"(t1)\n-           : \"0\"(a), \"w\"(b), \"w\"(c)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vmlaq_n_s16 (int16x8_t a, int16x8_t b, int16_t c)\n {\n@@ -7864,18 +7852,6 @@ vmlsq_n_f32 (float32x4_t a, float32x4_t b, float32_t c)\n   return result;\n }\n \n-__extension__ static __inline float64x2_t __attribute__ ((__always_inline__))\n-vmlsq_n_f64 (float64x2_t a, float64x2_t b, float64_t c)\n-{\n-  float64x2_t result;\n-  float64x2_t t1;\n-  __asm__ (\"fmul %1.2d, %3.2d, %4.d[0]; fsub %0.2d, %0.2d, %1.2d\"\n-           : \"=w\"(result), \"=w\"(t1)\n-           : \"0\"(a), \"w\"(b), \"x\"(c)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vmlsq_n_s16 (int16x8_t a, int16x8_t b, int16_t c)\n {\n@@ -10854,17 +10830,6 @@ vrsqrtss_f32 (float32_t a, float32_t b)\n   return result;\n }\n \n-__extension__ static __inline float64x2_t __attribute__ ((__always_inline__))\n-vrsrtsq_f64 (float64x2_t a, float64x2_t b)\n-{\n-  float64x2_t result;\n-  __asm__ (\"frsqrts %0.2d,%1.2d,%2.2d\"\n-           : \"=w\"(result)\n-           : \"w\"(a), \"w\"(b)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vrsubhn_high_s16 (int8x8_t a, int16x8_t b, int16x8_t c)\n {\n@@ -14314,13 +14279,6 @@ vcge_f64 (float64x1_t __a, float64x1_t __b)\n   return __a >= __b ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vcge_p8 (poly8x8_t __a, poly8x8_t __b)\n-{\n-  return (uint8x8_t) __builtin_aarch64_cmgev8qi ((int8x8_t) __a,\n-\t\t\t\t\t\t (int8x8_t) __b);\n-}\n-\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vcge_s8 (int8x8_t __a, int8x8_t __b)\n {\n@@ -14384,13 +14342,6 @@ vcgeq_f64 (float64x2_t __a, float64x2_t __b)\n   return (uint64x2_t) __builtin_aarch64_cmgev2df (__a, __b);\n }\n \n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vcgeq_p8 (poly8x16_t __a, poly8x16_t __b)\n-{\n-  return (uint8x16_t) __builtin_aarch64_cmgev16qi ((int8x16_t) __a,\n-\t\t\t\t\t\t   (int8x16_t) __b);\n-}\n-\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vcgeq_s8 (int8x16_t __a, int8x16_t __b)\n {\n@@ -14484,14 +14435,6 @@ vcgez_f64 (float64x1_t __a)\n   return __a >= 0.0 ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vcgez_p8 (poly8x8_t __a)\n-{\n-  poly8x8_t __b = {0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x8_t) __builtin_aarch64_cmgev8qi ((int8x8_t) __a,\n-\t\t\t\t\t\t (int8x8_t) __b);\n-}\n-\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vcgez_s8 (int8x8_t __a)\n {\n@@ -14519,36 +14462,6 @@ vcgez_s64 (int64x1_t __a)\n   return __a >= 0ll ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vcgez_u8 (uint8x8_t __a)\n-{\n-  uint8x8_t __b = {0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x8_t) __builtin_aarch64_cmgeuv8qi ((int8x8_t) __a,\n-\t\t\t\t\t\t (int8x8_t) __b);\n-}\n-\n-__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n-vcgez_u16 (uint16x4_t __a)\n-{\n-  uint16x4_t __b = {0, 0, 0, 0};\n-  return (uint16x4_t) __builtin_aarch64_cmgeuv4hi ((int16x4_t) __a,\n-\t\t\t\t\t\t  (int16x4_t) __b);\n-}\n-\n-__extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n-vcgez_u32 (uint32x2_t __a)\n-{\n-  uint32x2_t __b = {0, 0};\n-  return (uint32x2_t) __builtin_aarch64_cmgeuv2si ((int32x2_t) __a,\n-\t\t\t\t\t\t  (int32x2_t) __b);\n-}\n-\n-__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n-vcgez_u64 (uint64x1_t __a)\n-{\n-  return __a >= 0ll ? -1ll : 0ll;\n-}\n-\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vcgezq_f32 (float32x4_t __a)\n {\n@@ -14563,15 +14476,6 @@ vcgezq_f64 (float64x2_t __a)\n   return (uint64x2_t) __builtin_aarch64_cmgev2df (__a, __b);\n }\n \n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vcgezq_p8 (poly8x16_t __a)\n-{\n-  poly8x16_t __b = {0, 0, 0, 0, 0, 0, 0, 0,\n-\t\t    0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x16_t) __builtin_aarch64_cmgev16qi ((int8x16_t) __a,\n-\t\t\t\t\t\t   (int8x16_t) __b);\n-}\n-\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vcgezq_s8 (int8x16_t __a)\n {\n@@ -14601,39 +14505,6 @@ vcgezq_s64 (int64x2_t __a)\n   return (uint64x2_t) __builtin_aarch64_cmgev2di (__a, __b);\n }\n \n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vcgezq_u8 (uint8x16_t __a)\n-{\n-  uint8x16_t __b = {0, 0, 0, 0, 0, 0, 0, 0,\n-\t\t    0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x16_t) __builtin_aarch64_cmgeuv16qi ((int8x16_t) __a,\n-\t\t\t\t\t\t   (int8x16_t) __b);\n-}\n-\n-__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n-vcgezq_u16 (uint16x8_t __a)\n-{\n-  uint16x8_t __b = {0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint16x8_t) __builtin_aarch64_cmgeuv8hi ((int16x8_t) __a,\n-\t\t\t\t\t\t  (int16x8_t) __b);\n-}\n-\n-__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n-vcgezq_u32 (uint32x4_t __a)\n-{\n-  uint32x4_t __b = {0, 0, 0, 0};\n-  return (uint32x4_t) __builtin_aarch64_cmgeuv4si ((int32x4_t) __a,\n-\t\t\t\t\t\t  (int32x4_t) __b);\n-}\n-\n-__extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n-vcgezq_u64 (uint64x2_t __a)\n-{\n-  uint64x2_t __b = {0, 0};\n-  return (uint64x2_t) __builtin_aarch64_cmgeuv2di ((int64x2_t) __a,\n-\t\t\t\t\t\t  (int64x2_t) __b);\n-}\n-\n /* vcgez - scalar.  */\n \n __extension__ static __inline uint32_t __attribute__ ((__always_inline__))\n@@ -14648,12 +14519,6 @@ vcgezd_s64 (int64x1_t __a)\n   return __a >= 0 ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n-vcgezd_u64 (int64x1_t __a)\n-{\n-  return __a >= 0 ? -1ll : 0ll;\n-}\n-\n __extension__ static __inline uint64_t __attribute__ ((__always_inline__))\n vcgezd_f64 (float64_t __a)\n {\n@@ -14674,13 +14539,6 @@ vcgt_f64 (float64x1_t __a, float64x1_t __b)\n   return __a > __b ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vcgt_p8 (poly8x8_t __a, poly8x8_t __b)\n-{\n-  return (uint8x8_t) __builtin_aarch64_cmgtv8qi ((int8x8_t) __a,\n-\t\t\t\t\t\t (int8x8_t) __b);\n-}\n-\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vcgt_s8 (int8x8_t __a, int8x8_t __b)\n {\n@@ -14744,13 +14602,6 @@ vcgtq_f64 (float64x2_t __a, float64x2_t __b)\n   return (uint64x2_t) __builtin_aarch64_cmgtv2df (__a, __b);\n }\n \n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vcgtq_p8 (poly8x16_t __a, poly8x16_t __b)\n-{\n-  return (uint8x16_t) __builtin_aarch64_cmgtv16qi ((int8x16_t) __a,\n-\t\t\t\t\t\t   (int8x16_t) __b);\n-}\n-\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vcgtq_s8 (int8x16_t __a, int8x16_t __b)\n {\n@@ -14844,14 +14695,6 @@ vcgtz_f64 (float64x1_t __a)\n   return __a > 0.0 ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vcgtz_p8 (poly8x8_t __a)\n-{\n-  poly8x8_t __b = {0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x8_t) __builtin_aarch64_cmgtv8qi ((int8x8_t) __a,\n-\t\t\t\t\t\t (int8x8_t) __b);\n-}\n-\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vcgtz_s8 (int8x8_t __a)\n {\n@@ -14879,36 +14722,6 @@ vcgtz_s64 (int64x1_t __a)\n   return __a > 0ll ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vcgtz_u8 (uint8x8_t __a)\n-{\n-  uint8x8_t __b = {0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x8_t) __builtin_aarch64_cmgtuv8qi ((int8x8_t) __a,\n-\t\t\t\t\t\t (int8x8_t) __b);\n-}\n-\n-__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n-vcgtz_u16 (uint16x4_t __a)\n-{\n-  uint16x4_t __b = {0, 0, 0, 0};\n-  return (uint16x4_t) __builtin_aarch64_cmgtuv4hi ((int16x4_t) __a,\n-\t\t\t\t\t\t  (int16x4_t) __b);\n-}\n-\n-__extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n-vcgtz_u32 (uint32x2_t __a)\n-{\n-  uint32x2_t __b = {0, 0};\n-  return (uint32x2_t) __builtin_aarch64_cmgtuv2si ((int32x2_t) __a,\n-\t\t\t\t\t\t  (int32x2_t) __b);\n-}\n-\n-__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n-vcgtz_u64 (uint64x1_t __a)\n-{\n-  return __a > 0ll ? -1ll : 0ll;\n-}\n-\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vcgtzq_f32 (float32x4_t __a)\n {\n@@ -14923,15 +14736,6 @@ vcgtzq_f64 (float64x2_t __a)\n   return (uint64x2_t) __builtin_aarch64_cmgtv2df (__a, __b);\n }\n \n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vcgtzq_p8 (poly8x16_t __a)\n-{\n-  poly8x16_t __b = {0, 0, 0, 0, 0, 0, 0, 0,\n-\t\t    0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x16_t) __builtin_aarch64_cmgtv16qi ((int8x16_t) __a,\n-\t\t\t\t\t\t   (int8x16_t) __b);\n-}\n-\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vcgtzq_s8 (int8x16_t __a)\n {\n@@ -14961,39 +14765,6 @@ vcgtzq_s64 (int64x2_t __a)\n   return (uint64x2_t) __builtin_aarch64_cmgtv2di (__a, __b);\n }\n \n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vcgtzq_u8 (uint8x16_t __a)\n-{\n-  uint8x16_t __b = {0, 0, 0, 0, 0, 0, 0, 0,\n-\t\t    0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x16_t) __builtin_aarch64_cmgtuv16qi ((int8x16_t) __a,\n-\t\t\t\t\t\t   (int8x16_t) __b);\n-}\n-\n-__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n-vcgtzq_u16 (uint16x8_t __a)\n-{\n-  uint16x8_t __b = {0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint16x8_t) __builtin_aarch64_cmgtuv8hi ((int16x8_t) __a,\n-\t\t\t\t\t\t  (int16x8_t) __b);\n-}\n-\n-__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n-vcgtzq_u32 (uint32x4_t __a)\n-{\n-  uint32x4_t __b = {0, 0, 0, 0};\n-  return (uint32x4_t) __builtin_aarch64_cmgtuv4si ((int32x4_t) __a,\n-\t\t\t\t\t\t  (int32x4_t) __b);\n-}\n-\n-__extension__ static __inline uint64x2_t __attribute__ ((__always_inline__))\n-vcgtzq_u64 (uint64x2_t __a)\n-{\n-  uint64x2_t __b = {0, 0};\n-  return (uint64x2_t) __builtin_aarch64_cmgtuv2di ((int64x2_t) __a,\n-\t\t\t\t\t\t  (int64x2_t) __b);\n-}\n-\n /* vcgtz - scalar.  */\n \n __extension__ static __inline uint32_t __attribute__ ((__always_inline__))\n@@ -15008,12 +14779,6 @@ vcgtzd_s64 (int64x1_t __a)\n   return __a > 0 ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n-vcgtzd_u64 (int64x1_t __a)\n-{\n-  return __a > 0 ? -1ll : 0ll;\n-}\n-\n __extension__ static __inline uint64_t __attribute__ ((__always_inline__))\n vcgtzd_f64 (float64_t __a)\n {\n@@ -15034,13 +14799,6 @@ vcle_f64 (float64x1_t __a, float64x1_t __b)\n   return __a <= __b ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vcle_p8 (poly8x8_t __a, poly8x8_t __b)\n-{\n-  return (uint8x8_t) __builtin_aarch64_cmgev8qi ((int8x8_t) __b,\n-\t\t\t\t\t\t (int8x8_t) __a);\n-}\n-\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vcle_s8 (int8x8_t __a, int8x8_t __b)\n {\n@@ -15104,13 +14862,6 @@ vcleq_f64 (float64x2_t __a, float64x2_t __b)\n   return (uint64x2_t) __builtin_aarch64_cmgev2df (__b, __a);\n }\n \n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vcleq_p8 (poly8x16_t __a, poly8x16_t __b)\n-{\n-  return (uint8x16_t) __builtin_aarch64_cmgev16qi ((int8x16_t) __b,\n-\t\t\t\t\t\t   (int8x16_t) __a);\n-}\n-\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vcleq_s8 (int8x16_t __a, int8x16_t __b)\n {\n@@ -15204,14 +14955,6 @@ vclez_f64 (float64x1_t __a)\n   return __a <= 0.0 ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vclez_p8 (poly8x8_t __a)\n-{\n-  poly8x8_t __b = {0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x8_t) __builtin_aarch64_cmlev8qi ((int8x8_t) __a,\n-\t\t\t\t\t\t (int8x8_t) __b);\n-}\n-\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vclez_s8 (int8x8_t __a)\n {\n@@ -15239,12 +14982,6 @@ vclez_s64 (int64x1_t __a)\n   return __a <= 0ll ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n-vclez_u64 (uint64x1_t __a)\n-{\n-  return __a <= 0ll ? -1ll : 0ll;\n-}\n-\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vclezq_f32 (float32x4_t __a)\n {\n@@ -15259,15 +14996,6 @@ vclezq_f64 (float64x2_t __a)\n   return (uint64x2_t) __builtin_aarch64_cmlev2df (__a, __b);\n }\n \n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vclezq_p8 (poly8x16_t __a)\n-{\n-  poly8x16_t __b = {0, 0, 0, 0, 0, 0, 0, 0,\n-\t\t    0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x16_t) __builtin_aarch64_cmlev16qi ((int8x16_t) __a,\n-\t\t\t\t\t\t   (int8x16_t) __b);\n-}\n-\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vclezq_s8 (int8x16_t __a)\n {\n@@ -15311,12 +15039,6 @@ vclezd_s64 (int64x1_t __a)\n   return __a <= 0 ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n-vclezd_u64 (int64x1_t __a)\n-{\n-  return __a <= 0 ? -1ll : 0ll;\n-}\n-\n __extension__ static __inline uint64_t __attribute__ ((__always_inline__))\n vclezd_f64 (float64_t __a)\n {\n@@ -15337,13 +15059,6 @@ vclt_f64 (float64x1_t __a, float64x1_t __b)\n   return __a < __b ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vclt_p8 (poly8x8_t __a, poly8x8_t __b)\n-{\n-  return (uint8x8_t) __builtin_aarch64_cmgtv8qi ((int8x8_t) __b,\n-\t\t\t\t\t\t (int8x8_t) __a);\n-}\n-\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vclt_s8 (int8x8_t __a, int8x8_t __b)\n {\n@@ -15407,13 +15122,6 @@ vcltq_f64 (float64x2_t __a, float64x2_t __b)\n   return (uint64x2_t) __builtin_aarch64_cmgtv2df (__b, __a);\n }\n \n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vcltq_p8 (poly8x16_t __a, poly8x16_t __b)\n-{\n-  return (uint8x16_t) __builtin_aarch64_cmgtv16qi ((int8x16_t) __b,\n-\t\t\t\t\t\t   (int8x16_t) __a);\n-}\n-\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vcltq_s8 (int8x16_t __a, int8x16_t __b)\n {\n@@ -15507,14 +15215,6 @@ vcltz_f64 (float64x1_t __a)\n   return __a < 0.0 ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vcltz_p8 (poly8x8_t __a)\n-{\n-  poly8x8_t __b = {0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x8_t) __builtin_aarch64_cmltv8qi ((int8x8_t) __a,\n-\t\t\t\t\t\t (int8x8_t) __b);\n-}\n-\n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vcltz_s8 (int8x8_t __a)\n {\n@@ -15556,15 +15256,6 @@ vcltzq_f64 (float64x2_t __a)\n   return (uint64x2_t) __builtin_aarch64_cmltv2df (__a, __b);\n }\n \n-__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n-vcltzq_p8 (poly8x16_t __a)\n-{\n-  poly8x16_t __b = {0, 0, 0, 0, 0, 0, 0, 0,\n-\t\t    0, 0, 0, 0, 0, 0, 0, 0};\n-  return (uint8x16_t) __builtin_aarch64_cmltv16qi ((int8x16_t) __a,\n-\t\t\t\t\t\t   (int8x16_t) __b);\n-}\n-\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vcltzq_s8 (int8x16_t __a)\n {\n@@ -15608,12 +15299,6 @@ vcltzd_s64 (int64x1_t __a)\n   return __a < 0 ? -1ll : 0ll;\n }\n \n-__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n-vcltzd_u64 (int64x1_t __a)\n-{\n-  return __a < 0 ? -1ll : 0ll;\n-}\n-\n __extension__ static __inline uint64_t __attribute__ ((__always_inline__))\n vcltzd_f64 (float64_t __a)\n {"}]}