{"sha": "7f27395d16254459d87430cfc00a02e2b276c396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YyNzM5NWQxNjI1NDQ1OWQ4NzQzMGNmYzAwYTAyZTJiMjc2YzM5Ng==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2003-10-07T09:36:34Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2003-10-07T09:36:34Z"}, "message": "cygming.h (READONLY_DATA_SECTION_ASM_OP): Define.\n\n\t* config/i386/cygming.h (READONLY_DATA_SECTION_ASM_OP): Define.\n\t(switch_to_section): Handle in_readonly_data.\n\t* config/i386/winnt.c (i386_pe_asm_named_section): Handle\n\treadonly data.\n\nFrom-SVN: r72189", "tree": {"sha": "7ff81f59d612249af80040a9a13753df03c49896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ff81f59d612249af80040a9a13753df03c49896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f27395d16254459d87430cfc00a02e2b276c396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f27395d16254459d87430cfc00a02e2b276c396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f27395d16254459d87430cfc00a02e2b276c396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f27395d16254459d87430cfc00a02e2b276c396/comments", "author": null, "committer": null, "parents": [{"sha": "f9b9980e6d45565807cb14ef53ab5d02b4338643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b9980e6d45565807cb14ef53ab5d02b4338643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9b9980e6d45565807cb14ef53ab5d02b4338643"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "b6836c2e8c823b48c652a4d288567618feb9561d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f27395d16254459d87430cfc00a02e2b276c396/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f27395d16254459d87430cfc00a02e2b276c396/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f27395d16254459d87430cfc00a02e2b276c396", "patch": "@@ -1,3 +1,10 @@\n+2003-10-07  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* config/i386/cygming.h (READONLY_DATA_SECTION_ASM_OP): Define.\n+\t(switch_to_section): Handle in_readonly_data.\n+\t* config/i386/winnt.c (i386_pe_asm_named_section): Handle\n+\treadonly data.\n+\n 2003-10-07  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.md (cmpsi2_addneg): New ARM pattern. Add peephole2 to generate"}, {"sha": "dfdb499492798d7606da629bec565e3768485f09", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f27395d16254459d87430cfc00a02e2b276c396/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f27395d16254459d87430cfc00a02e2b276c396/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=7f27395d16254459d87430cfc00a02e2b276c396", "patch": "@@ -132,6 +132,10 @@ drectve_section (void)\t\t\t\t\t\t\t\\\n }\n void drectve_section (void);\n \n+/* Older versions of gas don't handle 'r' as data.\n+   Explicitly set data flag with 'd'.  */  \n+#define READONLY_DATA_SECTION_ASM_OP \"\\t.section .rdata,\\\"dr\\\"\"\n+\n /* Switch to SECTION (an `enum in_section').\n \n    ??? This facility should be provided by GCC proper.\n@@ -147,6 +151,7 @@ switch_to_section (enum in_section section, tree decl)\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       case in_text: text_section (); break;\t\t\t\\\n       case in_data: data_section (); break;\t\t\t\\\n+      case in_readonly_data: readonly_data_section (); break;\t\\\n       case in_named: named_section (decl, NULL, 0); break;\t\\\n       case in_drectve: drectve_section (); break;\t\t\\\n       default: abort (); break;\t\t\t\t\\"}, {"sha": "c1c54956fdc755ec942d47ef1a0416cd152e2f80", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f27395d16254459d87430cfc00a02e2b276c396/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f27395d16254459d87430cfc00a02e2b276c396/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=7f27395d16254459d87430cfc00a02e2b276c396", "patch": "@@ -710,12 +710,22 @@ i386_pe_asm_named_section (const char *name, unsigned int flags)\n {\n   char flagchars[8], *f = flagchars;\n \n-  if (flags & SECTION_CODE)\n-    *f++ = 'x';\n-  if (flags & SECTION_WRITE)\n-    *f++ = 'w';\n-  if (flags & SECTION_PE_SHARED)\n-    *f++ = 's';\n+  if ((flags & (SECTION_CODE | SECTION_WRITE)) == 0)\n+    /* readonly data */\n+    {\n+      *f++ ='d';  /* This is necessary for older versions of gas.  */\n+      *f++ ='r';\n+    }\n+  else\t\n+  {\n+    if (flags & SECTION_CODE)\n+      *f++ = 'x';\n+    if (flags & SECTION_WRITE)\n+      *f++ = 'w';\n+    if (flags & SECTION_PE_SHARED)\n+      *f++ = 's';\n+  }\n+\n   *f = '\\0';\n \n   fprintf (asm_out_file, \"\\t.section\\t%s,\\\"%s\\\"\\n\", name, flagchars);"}]}