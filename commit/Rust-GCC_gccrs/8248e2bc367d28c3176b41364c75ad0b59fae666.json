{"sha": "8248e2bc367d28c3176b41364c75ad0b59fae666", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI0OGUyYmMzNjdkMjhjMzE3NmI0MTM2NGM3NWFkMGI1OWZhZTY2Ng==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-11T19:53:44Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-11T19:53:44Z"}, "message": "(TARGET_HARD_QUAD): New macro.\n\n(TARGET_SWITCHES): Add hard-quad-float, soft-quad-float.\n(TARGET_DEFAULT): Use parentheses.\n({ADDTF3,SUBTF3,MULTF3,DIVTF3,SQRTTF2,FLOATSITF2,FIX_TRUNCTFSI2,\nEXTENDSFTF2,TRUNCTFSF2,EXTENDDFTF2,TRUNCTFDF2,EQTF2,NETF2,GTTF2,\nGETF2,LTTF2,LETF2}_LIBCALL): New macros.\n\nFrom-SVN: r6751", "tree": {"sha": "1a8a3530444df7e4ecca98a5b4e13f597cbf356e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a8a3530444df7e4ecca98a5b4e13f597cbf356e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8248e2bc367d28c3176b41364c75ad0b59fae666", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8248e2bc367d28c3176b41364c75ad0b59fae666", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8248e2bc367d28c3176b41364c75ad0b59fae666", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8248e2bc367d28c3176b41364c75ad0b59fae666/comments", "author": null, "committer": null, "parents": [{"sha": "7c699529a5e9fd025827ae62952a4548749e4a06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c699529a5e9fd025827ae62952a4548749e4a06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c699529a5e9fd025827ae62952a4548749e4a06"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "ccac3b68e60f25fd73addfd3addc83903deb8ed8", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8248e2bc367d28c3176b41364c75ad0b59fae666/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8248e2bc367d28c3176b41364c75ad0b59fae666/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=8248e2bc367d28c3176b41364c75ad0b59fae666", "patch": "@@ -135,6 +135,11 @@ extern int target_flags;\n    application software.  This is the default.  */\n #define TARGET_APP_REGS (target_flags & 1024)\n \n+/*  Option to select how quad word floating point is implemented.\n+    When TARGET_HARD_QUAD is true, we use the hardware quad instructions.\n+    Otherwise, we use the SPARC ABI quad library functions.  */\n+#define TARGET_HARD_QUAD (target_flags & 2048)\n+\n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,\n    each pair being { \"NAME\", VALUE }\n@@ -168,10 +173,12 @@ extern int target_flags;\n     {\"f934\", 128},\t\t\\\n     {\"app-regs\", 1024},\t\t\\\n     {\"no-app-regs\", -1024},\t\\\n+    {\"hard-quad-float\", 2048},        \\\n+    {\"soft-quad-float\", -2048},       \\\n     SUBTARGET_SWITCHES\t\t\\\n     { \"\", TARGET_DEFAULT}}\n \n-#define TARGET_DEFAULT 1024+3\n+#define TARGET_DEFAULT (1024+3)\n \n /* This is meant to be redefined in the host dependent files */\n #define SUBTARGET_SWITCHES\n@@ -1486,6 +1493,26 @@ extern struct rtx_def *legitimize_pic_address ();\n /* .umul is a little faster than .mul.  */\n #define MULSI3_LIBCALL \"*.umul\"\n \n+/* Define library calls for quad FP operations.  These are all part of the\n+   SPARC ABI.  */\n+#define ADDTF3_LIBCALL \"*_Q_add\"\n+#define SUBTF3_LIBCALL \"*_Q_sub\"\n+#define MULTF3_LIBCALL \"*_Q_mul\"\n+#define DIVTF3_LIBCALL \"*_Q_div\"\n+#define SQRTTF2_LIBCALL \"*_Q_sqrt\"\n+#define FLOATSITF2_LIBCALL \"*_Q_itoq\"\n+#define FIX_TRUNCTFSI2_LIBCALL \"*_Q_qtoi\"\n+#define EXTENDSFTF2_LIBCALL \"*_Q_stoq\"\n+#define TRUNCTFSF2_LIBCALL \"*_Q_qtos\"\n+#define EXTENDDFTF2_LIBCALL \"*_Q_dtoq\"\n+#define TRUNCTFDF2_LIBCALL \"*_Q_qtod\"\n+#define EQTF2_LIBCALL \"*_Q_feq\"\n+#define NETF2_LIBCALL \"*_Q_fne\"\n+#define GTTF2_LIBCALL \"*_Q_fgt\"\n+#define GETF2_LIBCALL \"*_Q_fge\"\n+#define LTTF2_LIBCALL \"*_Q_flt\"\n+#define LETF2_LIBCALL \"*_Q_fle\"\n+\n /* Compute the cost of computing a constant rtl expression RTX\n    whose rtx-code is CODE.  The body of this macro is a portion\n    of a switch statement.  If the code is computed here,"}]}