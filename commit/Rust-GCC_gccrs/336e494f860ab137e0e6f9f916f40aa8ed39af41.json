{"sha": "336e494f860ab137e0e6f9f916f40aa8ed39af41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM2ZTQ5NGY4NjBhYjEzN2UwZTZmOWY5MTZmNDBhYThlZDM5YWY0MQ==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2007-08-15T17:44:51Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2007-08-15T17:44:51Z"}, "message": "target-supports.exp (check_effective_target_arm32): Use check_no_compiler_messages.\n\n\t* lib/target-supports.exp (check_effective_target_arm32): Use\n\tcheck_no_compiler_messages.\n\nFrom-SVN: r127522", "tree": {"sha": "5d7974c5cb115f25a397a01d7a1afe63b01606a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d7974c5cb115f25a397a01d7a1afe63b01606a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/336e494f860ab137e0e6f9f916f40aa8ed39af41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/336e494f860ab137e0e6f9f916f40aa8ed39af41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/336e494f860ab137e0e6f9f916f40aa8ed39af41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/336e494f860ab137e0e6f9f916f40aa8ed39af41/comments", "author": null, "committer": null, "parents": [{"sha": "bbe984fb21c228ea077bcb4bcde6376bb45a4899", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe984fb21c228ea077bcb4bcde6376bb45a4899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe984fb21c228ea077bcb4bcde6376bb45a4899"}], "stats": {"total": 43, "additions": 10, "deletions": 33}, "files": [{"sha": "5126a69c5bf68e6dc46d31db962a9cc2f981e873", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/336e494f860ab137e0e6f9f916f40aa8ed39af41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/336e494f860ab137e0e6f9f916f40aa8ed39af41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=336e494f860ab137e0e6f9f916f40aa8ed39af41", "patch": "@@ -1,3 +1,8 @@\n+2007-08-15  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_arm32): Use\n+\tcheck_no_compiler_messages.\n+\n 2007-08-15  Diego Novillo  <dnovillo@google.com>\n \n \tgcc.dg/tree-ssa/20070815.c: New test."}, {"sha": "c48138daa5dacbcbba222bc0313269c030b8f5ce", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 5, "deletions": 33, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/336e494f860ab137e0e6f9f916f40aa8ed39af41/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/336e494f860ab137e0e6f9f916f40aa8ed39af41/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=336e494f860ab137e0e6f9f916f40aa8ed39af41", "patch": "@@ -1413,39 +1413,11 @@ proc check_effective_target_vect_floatint_cvt { } {\n \n # Return 1 is this is an arm target using 32-bit instructions\n proc check_effective_target_arm32 { } {\n-    global et_arm32_saved\n-    global et_arm32_target_name\n-    global compiler_flags\n-\n-    if { ![info exists et_arm32_target_name] } {\n-\tset et_arm32_target_name \"\"\n-    }\n-\n-    # If the target has changed since we set the cached value, clear it.\n-    set current_target [current_target_name]\n-    if { $current_target != $et_arm32_target_name } {\n-\tverbose \"check_effective_target_arm32: `$et_arm32_target_name' `$current_target'\" 2\n-\tset et_arm32_target_name $current_target\n-\tif { [info exists et_arm32_saved] } {\n-\t    verbose \"check_effective_target_arm32: removing cached result\" 2\n-\t    unset et_arm32_saved\n-\t}\n-    }\n-\n-    if [info exists et_arm32_saved] {\n-\tverbose \"check-effective_target_arm32: using cached result\" 2\n-    } else {\n-\tset et_arm32_saved 0\n-\tif { [istarget arm-*-*]\n-\t      || [istarget strongarm*-*-*]\n-\t      || [istarget xscale-*-*] } {\n-\t    if ![string match \"*-mthumb *\" $compiler_flags] {\n-\t\tset et_arm32_saved 1\n-\t    }\n-\t}\n-    }\n-    verbose \"check_effective_target_arm32: returning $et_arm32_saved\" 2\n-    return $et_arm32_saved\n+    return [check_no_compiler_messages arm32 assembly {\n+\t#if !defined(__arm__) || (defined(__thumb__) && !defined(__thumb2__))\n+\t#error FOO\n+\t#endif\n+    }]\n }\n \n # Return 1 if this is an ARM target supporting -mfpu=vfp"}]}