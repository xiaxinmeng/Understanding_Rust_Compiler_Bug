{"sha": "c082d01fa9e02be5b1d849f3880c7564b4287652", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA4MmQwMWZhOWUwMmJlNWIxZDg0OWYzODgwYzc1NjRiNDI4NzY1Mg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-02-17T00:49:27Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-02-17T00:49:27Z"}, "message": "calls.c: New file.\n\n\t* libjava.jni/calls.c: New file.\n\t* libjava.jni/calls.out: New file.\n\t* libjava.jni/calls.java: New file.\n\nFrom-SVN: r32020", "tree": {"sha": "85ebd9196928caec43bebd60d7a34c1837c63759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85ebd9196928caec43bebd60d7a34c1837c63759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c082d01fa9e02be5b1d849f3880c7564b4287652", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c082d01fa9e02be5b1d849f3880c7564b4287652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c082d01fa9e02be5b1d849f3880c7564b4287652", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c082d01fa9e02be5b1d849f3880c7564b4287652/comments", "author": null, "committer": null, "parents": [{"sha": "980be18f769286a7a9908b4df48626fd6fee6926", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980be18f769286a7a9908b4df48626fd6fee6926", "html_url": "https://github.com/Rust-GCC/gccrs/commit/980be18f769286a7a9908b4df48626fd6fee6926"}], "stats": {"total": 140, "additions": 140, "deletions": 0}, "files": [{"sha": "16eb95a17725ac44264c023bd944792d58ec8a70", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c082d01fa9e02be5b1d849f3880c7564b4287652/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c082d01fa9e02be5b1d849f3880c7564b4287652/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=c082d01fa9e02be5b1d849f3880c7564b4287652", "patch": "@@ -1,5 +1,9 @@\n 2000-02-16  Tom Tromey  <tromey@cygnus.com>\n \n+\t* libjava.jni/calls.c: New file.\n+\t* libjava.jni/calls.out: New file.\n+\t* libjava.jni/calls.java: New file.\n+\n \t* libjava.jni/throwit.java: New file.\n \t* libjava.jni/throwit.c: New file.\n \t* libjava.jni/throwit.out: New file."}, {"sha": "c125941076a8079d0ced8a484a7c6fa294a8c68e", "filename": "libjava/testsuite/libjava.jni/calls.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c082d01fa9e02be5b1d849f3880c7564b4287652/libjava%2Ftestsuite%2Flibjava.jni%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c082d01fa9e02be5b1d849f3880c7564b4287652/libjava%2Ftestsuite%2Flibjava.jni%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fcalls.c?ref=c082d01fa9e02be5b1d849f3880c7564b4287652", "patch": "@@ -0,0 +1,69 @@\n+#include <stdio.h>\n+#include <calls.h>\n+\n+jint\n+Java_calls_docall (JNIEnv *env, jobject _this)\n+{\n+  jmethodID method;\n+  jclass klass, super;\n+\n+  jbyte b;\n+  jshort s;\n+  jchar c;\n+  jint i;\n+  jlong l;\n+  jfloat f;\n+  jdouble d;\n+\n+  jvalue val;\n+\n+  jint fails = 0;\n+\n+  klass = (*env)->GetObjectClass (env, _this);\n+  super = (*env)->GetSuperclass (env, klass);\n+\n+  method = (*env)->GetMethodID (env, klass, \"byte_f\", \"()B\");\n+  b = (*env)->CallByteMethod (env, _this, method);\n+  if (b != 23)\n+    ++fails;\n+\n+  method = (*env)->GetMethodID (env, klass, \"char_f\", \"(I)C\");\n+  val.i = 10;\n+  c = (*env)->CallCharMethodV (env, _this, method, &val);\n+  if (c != ('a' + 10))\n+    ++fails;\n+\n+  method = (*env)->GetMethodID (env, super, \"int_f\", \"()I\");\n+  i = (*env)->CallNonvirtualIntMethod (env, _this, super, method);\n+  if (i != 27)\n+    ++fails;\n+\n+  i = (*env)->CallIntMethod (env, _this, method);\n+  if (i != 1023)\n+    ++fails;\n+\n+  method = (*env)->GetStaticMethodID (env, klass, \"long_f\", \"(J)J\");\n+  l = (*env)->CallStaticLongMethod (env, klass, method, (jlong) 10);\n+  if (l != 2033)\n+    ++fails;\n+\n+  method = (*env)->GetMethodID (env, klass, \"void_f\", \"()V\");\n+  (*env)->CallVoidMethod (env, _this, method);\n+\n+  method = (*env)->GetStaticMethodID (env, klass, \"short_f\", \"()S\");\n+  s = (*env)->CallStaticShortMethod (env, klass, method);\n+  if (s != 2)\n+    ++fails;\n+\n+  method = (*env)->GetMethodID (env, klass, \"double_f\", \"()D\");\n+  d = (*env)->CallDoubleMethod (env, _this, method);\n+  if (d != -1.0)\n+    ++fails;\n+\n+  method = (*env)->GetMethodID (env, klass, \"float_f\", \"()F\");\n+  f = (*env)->CallFloatMethod (env, _this, method);\n+  if (f != 1.0)\n+    ++fails;\n+\n+  return fails;\n+}"}, {"sha": "b98017c0c13e5ee84cf38b88d2277aec63273413", "filename": "libjava/testsuite/libjava.jni/calls.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c082d01fa9e02be5b1d849f3880c7564b4287652/libjava%2Ftestsuite%2Flibjava.jni%2Fcalls.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c082d01fa9e02be5b1d849f3880c7564b4287652/libjava%2Ftestsuite%2Flibjava.jni%2Fcalls.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fcalls.java?ref=c082d01fa9e02be5b1d849f3880c7564b4287652", "patch": "@@ -0,0 +1,66 @@\n+// Test a bunch of different calls.\n+\n+class base\n+{\n+  public int int_f ()\n+  {\n+    return 27;\n+  }\n+}\n+\n+public class calls extends base\n+{\n+  static\n+  {\n+    System.loadLibrary (\"calls\");\n+  }\n+\n+  public native int docall ();\n+\n+  public byte byte_f ()\n+  {\n+    return 23;\n+  }\n+\n+  public char char_f (int z)\n+  {\n+    return (char) ('a' + z);\n+  }\n+\n+  public int int_f ()\n+  {\n+    return 1023;\n+  }\n+\n+  public static long long_f (long q)\n+  {\n+    return q + 2023;\n+  }\n+\n+  public void void_f ()\n+  {\n+    System.out.println (\"void\");\n+  }\n+\n+  public static short short_f ()\n+  {\n+    return 2;\n+  }\n+\n+  public double double_f ()\n+  {\n+    return -1.0;\n+  }\n+\n+  public float float_f ()\n+  {\n+    return (float) 1.0;\n+  }\n+\n+  public static void main (String[] args)\n+  {\n+    calls c = new calls ();\n+    if (c.docall () != 0)\n+      System.out.println (\"fail\");\n+  }\n+}"}, {"sha": "cbab1f6b63ae47fe97a6e6291b27ed5a03417ed7", "filename": "libjava/testsuite/libjava.jni/calls.out", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c082d01fa9e02be5b1d849f3880c7564b4287652/libjava%2Ftestsuite%2Flibjava.jni%2Fcalls.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c082d01fa9e02be5b1d849f3880c7564b4287652/libjava%2Ftestsuite%2Flibjava.jni%2Fcalls.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fcalls.out?ref=c082d01fa9e02be5b1d849f3880c7564b4287652", "patch": "@@ -0,0 +1 @@\n+void"}]}