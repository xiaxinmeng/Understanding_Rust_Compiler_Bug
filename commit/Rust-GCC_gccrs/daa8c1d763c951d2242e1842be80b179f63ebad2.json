{"sha": "daa8c1d763c951d2242e1842be80b179f63ebad2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFhOGMxZDc2M2M5NTFkMjI0MmUxODQyYmU4MGIxNzlmNjNlYmFkMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-02T12:48:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-02T12:48:42Z"}, "message": "omp-low.c (check_omp_nesting_restrictions): Allow cancel or cancellation point with taskgroup clause inside of taskloop.\n\n\t* omp-low.c (check_omp_nesting_restrictions): Allow cancel or\n\tcancellation point with taskgroup clause inside of taskloop.  Consider\n\ta taskloop construct without nogroup clause as implicit taskgroup for\n\tdiagnostics if cancel/cancellation point with taskgroup clause is\n\tclosely nested inside of taskgroup region.\n\n\t* c-c++-common/gomp/cancel-1.c (f2): Add various taskloop related\n\ttests.\n\n\t* testsuite/libgomp.c-c++-common/cancel-taskgroup-4.c: New test.\n\nFrom-SVN: r266722", "tree": {"sha": "2e3655327f79bb903789d11133c2be9edf5b3baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e3655327f79bb903789d11133c2be9edf5b3baa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daa8c1d763c951d2242e1842be80b179f63ebad2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa8c1d763c951d2242e1842be80b179f63ebad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daa8c1d763c951d2242e1842be80b179f63ebad2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa8c1d763c951d2242e1842be80b179f63ebad2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e80944753d325ef009acf58a5b3188936997d22b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80944753d325ef009acf58a5b3188936997d22b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e80944753d325ef009acf58a5b3188936997d22b"}], "stats": {"total": 157, "additions": 156, "deletions": 1}, "files": [{"sha": "a13d8a52ee864b7bba140d30b5e451f3add8924c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa8c1d763c951d2242e1842be80b179f63ebad2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa8c1d763c951d2242e1842be80b179f63ebad2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=daa8c1d763c951d2242e1842be80b179f63ebad2", "patch": "@@ -1,5 +1,11 @@\n 2018-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* omp-low.c (check_omp_nesting_restrictions): Allow cancel or\n+\tcancellation point with taskgroup clause inside of taskloop.  Consider\n+\ta taskloop construct without nogroup clause as implicit taskgroup for\n+\tdiagnostics if cancel/cancellation point with taskgroup clause is\n+\tclosely nested inside of taskgroup region.\n+\n \tPR sanitizer/88291\n \t* asan.c (asan_clear_shadow): Move assert that len is multiple of 4\n \tto the start of the function."}, {"sha": "b406ce781f6d209aba5de9c9782cd2340899498c", "filename": "gcc/omp-low.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa8c1d763c951d2242e1842be80b179f63ebad2/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa8c1d763c951d2242e1842be80b179f63ebad2/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=daa8c1d763c951d2242e1842be80b179f63ebad2", "patch": "@@ -2744,7 +2744,10 @@ check_omp_nesting_restrictions (gimple *stmt, omp_context *ctx)\n \t      kind = \"sections\";\n \t      break;\n \t    case 8:\n-\t      if (gimple_code (ctx->stmt) != GIMPLE_OMP_TASK)\n+\t      if (!is_task_ctx (ctx)\n+\t\t  && (!is_taskloop_ctx (ctx)\n+\t\t      || ctx->outer == NULL\n+\t\t      || !is_task_ctx (ctx->outer)))\n \t\tbad = \"#pragma omp task\";\n \t      else\n \t\t{\n@@ -2767,6 +2770,17 @@ check_omp_nesting_restrictions (gimple *stmt, omp_context *ctx)\n \t\t\t\t    \"nested inside of %<taskgroup%> region\",\n \t\t\t\t    construct);\n \t\t\t  return false;\n+\t\t\tcase GIMPLE_OMP_TASK:\n+\t\t\t  if (gimple_omp_task_taskloop_p (octx->stmt)\n+\t\t\t      && octx->outer\n+\t\t\t      && is_taskloop_ctx (octx->outer))\n+\t\t\t    {\n+\t\t\t      tree clauses\n+\t\t\t\t= gimple_omp_for_clauses (octx->outer->stmt);\n+\t\t\t      if (!omp_find_clause (clauses, OMP_CLAUSE_NOGROUP))\n+\t\t\t\tbreak;\n+\t\t\t    }\n+\t\t\t  continue;\n \t\t\tdefault:\n \t\t\t  continue;\n \t\t\t}"}, {"sha": "89dc430c1dc4db2eb348a29bb46f80f4213726df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa8c1d763c951d2242e1842be80b179f63ebad2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa8c1d763c951d2242e1842be80b179f63ebad2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=daa8c1d763c951d2242e1842be80b179f63ebad2", "patch": "@@ -1,5 +1,8 @@\n 2018-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* c-c++-common/gomp/cancel-1.c (f2): Add various taskloop related\n+\ttests.\n+\n \tPR sanitizer/88291\n \t* c-c++-common/asan/pr88291.c: New test.\n "}, {"sha": "03aedeb082250196b66dd4ec47848844f69cc931", "filename": "gcc/testsuite/c-c++-common/gomp/cancel-1.c", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa8c1d763c951d2242e1842be80b179f63ebad2/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fcancel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa8c1d763c951d2242e1842be80b179f63ebad2/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fcancel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fcancel-1.c?ref=daa8c1d763c951d2242e1842be80b179f63ebad2", "patch": "@@ -95,6 +95,40 @@ f2 (void)\n       #pragma omp cancellation point sections\t/* { dg-error \"not closely nested inside\" } */\n       #pragma omp cancellation point taskgroup\n     }\n+    #pragma omp taskloop\n+    for (i = 0; i < 10; i++)\n+      {\n+        #pragma omp cancel parallel\t\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancel for\t\t\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancel sections\t\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancel taskgroup\n+        #pragma omp cancellation point parallel\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancellation point for\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancellation point sections\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancellation point taskgroup\n+\t#pragma omp task\n+\t{\n+\t  #pragma omp cancellation point taskgroup\n+\t  #pragma omp cancel taskgroup\n+\t}\n+      }\n+    #pragma omp taskloop nogroup\n+    for (i = 0; i < 10; i++)\n+      {\n+        #pragma omp cancel parallel\t\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancel for\t\t\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancel sections\t\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancel taskgroup\t\t/* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+        #pragma omp cancellation point parallel\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancellation point for\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancellation point sections\t/* { dg-error \"not closely nested inside\" } */\n+        #pragma omp cancellation point taskgroup/* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t#pragma omp task\n+\t{\n+\t  #pragma omp cancellation point taskgroup/* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t  #pragma omp cancel taskgroup\t\t/* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t}\n+      }\n     #pragma omp taskgroup\n     {\n       #pragma omp task\n@@ -105,6 +139,17 @@ f2 (void)\n \t  #pragma omp cancel taskgroup\n \t}\n       }\n+      #pragma omp taskloop nogroup\n+      for (i = 0; i < 10; i++)\n+\t{\n+\t  #pragma omp task\n+\t  {\n+\t    #pragma omp cancellation point taskgroup\n+\t    #pragma omp cancel taskgroup\n+\t  }\n+\t  #pragma omp cancellation point taskgroup\n+\t  #pragma omp cancel taskgroup\n+\t}\n     }\n     #pragma omp taskgroup\n     {\n@@ -115,6 +160,18 @@ f2 (void)\n \t  #pragma omp cancel taskgroup\t\t/* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n \t  #pragma omp cancellation point taskgroup /* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n \t}\n+\t#pragma omp taskloop\n+\tfor (i = 0; i < 10; i++)\n+\t  {\n+\t    #pragma omp cancel taskgroup\n+\t    #pragma omp cancellation point taskgroup\n+\t  }\n+\t#pragma omp taskloop nogroup\n+\tfor (i = 0; i < 10; i++)\n+\t  {\n+\t    #pragma omp cancel taskgroup\t     /* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t    #pragma omp cancellation point taskgroup /* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t  }\n       }\n       #pragma omp target\n       {\n@@ -144,6 +201,45 @@ f2 (void)\n \t}\n       }\n     }\n+    #pragma omp taskloop\n+    for (i = 0; i < 10; i++)\n+      {\n+\t#pragma omp parallel\n+\t{\n+\t  #pragma omp task\n+\t  {\n+\t    #pragma omp cancel taskgroup\t     /* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t    #pragma omp cancellation point taskgroup /* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t  }\n+\t}\n+        #pragma omp target\n+\t{\n+\t  #pragma omp task\n+\t  {\n+\t    #pragma omp cancel taskgroup\t     /* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t    #pragma omp cancellation point taskgroup /* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t  }\n+\t}\n+\t#pragma omp target\n+\t#pragma omp teams\n+\t#pragma omp distribute\n+\tfor (j = 0; j < 10; j++)\n+\t  {\n+\t    #pragma omp task\n+\t    {\n+\t      #pragma omp cancel taskgroup\t/* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t      #pragma omp cancellation point taskgroup /* { dg-error \"construct not closely nested inside of .taskgroup. region\" } */\n+\t    }\n+\t  }\n+\t#pragma omp target data map(i)\n+\t{\n+\t  #pragma omp task\n+\t  {\n+\t    #pragma omp cancel taskgroup\n+\t    #pragma omp cancellation point taskgroup\n+\t  }\n+\t}\n+      }\n     #pragma omp for\n     for (i = 0; i < 10; i++)\n       {"}, {"sha": "9a6d9a3dd06a4496cab004df4cbab0c96987756b", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa8c1d763c951d2242e1842be80b179f63ebad2/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa8c1d763c951d2242e1842be80b179f63ebad2/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=daa8c1d763c951d2242e1842be80b179f63ebad2", "patch": "@@ -1,3 +1,7 @@\n+2018-12-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c-c++-common/cancel-taskgroup-4.c: New test.\n+\n 2018-11-30  Cesar Philippidis  <cesar@codesourcery.com>\n \n \tPR libgomp/88288"}, {"sha": "341bfb84ea8ef4b6037d5d35cda1ab57f08393be", "filename": "libgomp/testsuite/libgomp.c-c++-common/cancel-taskgroup-4.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa8c1d763c951d2242e1842be80b179f63ebad2/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fcancel-taskgroup-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa8c1d763c951d2242e1842be80b179f63ebad2/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fcancel-taskgroup-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fcancel-taskgroup-4.c?ref=daa8c1d763c951d2242e1842be80b179f63ebad2", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do run } */\n+/* { dg-set-target-env-var OMP_CANCELLATION \"true\" } */\n+\n+#include <stdlib.h>\n+#include <unistd.h>\n+#include <omp.h>\n+\n+int\n+main ()\n+{\n+  int i;\n+  #pragma omp parallel\n+  {\n+    int c = 0;\n+    #pragma omp barrier\n+    #pragma omp master taskloop num_tasks (25) firstprivate (c)\n+    for (i = 0; i < 50; i++)\n+      {\n+        if (c && omp_get_cancellation ())\n+\t  abort ();\n+\t#pragma omp cancellation point taskgroup\n+\tusleep (30);\n+\tif (i > 10)\n+\t  c = 1;\n+\t#pragma omp cancel taskgroup if (i > 10)\n+\tif (i > 10 && omp_get_cancellation ())\n+\t  abort ();\n+      }\n+    usleep (10);\n+  }\n+  return 0;\n+}"}]}