{"sha": "7eca317a0fc20ba4032dc77daad321700a855f82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VjYTMxN2EwZmMyMGJhNDAzMmRjNzdkYWFkMzIxNzAwYTg1NWY4Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-11-14T07:56:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-11-14T07:56:54Z"}, "message": "varasm.c (output_addressed_constants): Clear reloc if both operands contain local relocations.\n\n\t* varasm.c (output_addressed_constants) [MINUS_EXPR]: Clear reloc if\n\tboth operands contain local relocations.\n\t(categorize_decl_for_section): Don't use mergeable sections if\n\tinitializer has any relocations.\n\n\t* gcc.dg/20021029-1.c: New test.\n\t* gcc.dg/20021029-2.c: New test.\n\nFrom-SVN: r59097", "tree": {"sha": "93129dfbe6218445158cf46b67c5590976b31681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93129dfbe6218445158cf46b67c5590976b31681"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eca317a0fc20ba4032dc77daad321700a855f82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eca317a0fc20ba4032dc77daad321700a855f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eca317a0fc20ba4032dc77daad321700a855f82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eca317a0fc20ba4032dc77daad321700a855f82/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57751dd6cb0e941b9181e54edef85a795c108b8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57751dd6cb0e941b9181e54edef85a795c108b8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57751dd6cb0e941b9181e54edef85a795c108b8a"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "ae59f99ea5910be87f98846d81792e15d71bcb6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eca317a0fc20ba4032dc77daad321700a855f82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eca317a0fc20ba4032dc77daad321700a855f82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7eca317a0fc20ba4032dc77daad321700a855f82", "patch": "@@ -1,3 +1,10 @@\n+2002-11-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* varasm.c (output_addressed_constants) [MINUS_EXPR]: Clear reloc if\n+\tboth operands contain local relocations.\n+\t(categorize_decl_for_section): Don't use mergeable sections if\n+\tinitializer has any relocations.\n+\n 2002-11-14  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* gthr-vxworks.h: Fix formatting."}, {"sha": "968777c4c6e3f362f6d639bd21902c45ff05ca7a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eca317a0fc20ba4032dc77daad321700a855f82/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eca317a0fc20ba4032dc77daad321700a855f82/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7eca317a0fc20ba4032dc77daad321700a855f82", "patch": "@@ -1,3 +1,8 @@\n+2002-11-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/20021029-1.c: New test.\n+\t* gcc.dg/20021029-2.c: New test.\n+\n 2002-11-13  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* g++.dg/abi/vague1.C (dg-final): Return if target is hppa*-*-hpux*."}, {"sha": "468f9c055f45a37eb257ad0c5be17078f231aa71", "filename": "gcc/testsuite/gcc.dg/20021029-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eca317a0fc20ba4032dc77daad321700a855f82/gcc%2Ftestsuite%2Fgcc.dg%2F20021029-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eca317a0fc20ba4032dc77daad321700a855f82/gcc%2Ftestsuite%2Fgcc.dg%2F20021029-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20021029-1.c?ref=7eca317a0fc20ba4032dc77daad321700a855f82", "patch": "@@ -0,0 +1,16 @@\n+/* Test whether difference of local labels doesn't force\n+   variables into writable sections.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fpic\" } */\n+/* { dg-final { scan-assembler-not \".data.rel.ro.local\" } } */\n+\n+int foo (int a)\n+{\n+  static const int ar[] = { &&l1 - &&l1, &&l2 - &&l1 };\n+  void *p = &&l1 + ar[a];\n+  goto *p;\n+  l1:\n+    return 1;\n+  l2:\n+    return 2;\n+}"}, {"sha": "e99342478c56c7e01f2f49002550a50a8f58935b", "filename": "gcc/testsuite/gcc.dg/20021029-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eca317a0fc20ba4032dc77daad321700a855f82/gcc%2Ftestsuite%2Fgcc.dg%2F20021029-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eca317a0fc20ba4032dc77daad321700a855f82/gcc%2Ftestsuite%2Fgcc.dg%2F20021029-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20021029-2.c?ref=7eca317a0fc20ba4032dc77daad321700a855f82", "patch": "@@ -0,0 +1,14 @@\n+/* Test whether variables with relocations aren't put into\n+   mergeable sections even with -fmerge-all-constants.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fmerge-all-constants\" } */\n+/* { dg-final { scan-assembler-not \".rodata.cst\" } } */\n+\n+int foo (int a)\n+{\n+  static void * const ar[] = { &&l2 };\n+  void *p = ar[a];\n+  goto *p;\n+l2:\n+  return 2;\n+}"}, {"sha": "b158b92a9b980a9220c8b2d0dfe38f88325d17ad", "filename": "gcc/varasm.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eca317a0fc20ba4032dc77daad321700a855f82/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eca317a0fc20ba4032dc77daad321700a855f82/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=7eca317a0fc20ba4032dc77daad321700a855f82", "patch": "@@ -3679,7 +3679,7 @@ static int\n output_addressed_constants (exp)\n      tree exp;\n {\n-  int reloc = 0;\n+  int reloc = 0, reloc2;\n   tree tem;\n \n   /* Give the front-end a chance to convert VALUE to something that\n@@ -3708,11 +3708,20 @@ output_addressed_constants (exp)\n       break;\n \n     case PLUS_EXPR:\n-    case MINUS_EXPR:\n       reloc = output_addressed_constants (TREE_OPERAND (exp, 0));\n       reloc |= output_addressed_constants (TREE_OPERAND (exp, 1));\n       break;\n \n+    case MINUS_EXPR:\n+      reloc = output_addressed_constants (TREE_OPERAND (exp, 0));\n+      reloc2 = output_addressed_constants (TREE_OPERAND (exp, 1));\n+      /* The difference of two local labels is computable at link time.  */\n+      if (reloc == 1 && reloc2 == 1)\n+\treloc = 0;\n+      else\n+\treloc |= reloc2;\n+      break;\n+\n     case NOP_EXPR:\n     case CONVERT_EXPR:\n     case NON_LVALUE_EXPR:\n@@ -5076,7 +5085,7 @@ categorize_decl_for_section (decl, reloc, shlib)\n \tret = SECCAT_DATA_REL_RO;\n       else if (shlib && reloc)\n \tret = SECCAT_DATA_REL_RO_LOCAL;\n-      else if (flag_merge_constants < 2)\n+      else if (reloc || flag_merge_constants < 2)\n \t/* C and C++ don't allow different variables to share the same\n \t   location.  -fmerge-all-constants allows even that (at the\n \t   expense of not conforming).  */"}]}