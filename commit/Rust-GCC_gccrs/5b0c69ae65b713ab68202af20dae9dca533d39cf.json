{"sha": "5b0c69ae65b713ab68202af20dae9dca533d39cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIwYzY5YWU2NWI3MTNhYjY4MjAyYWYyMGRhZTlkY2E1MzNkMzljZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-12-12T08:50:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-12-12T08:50:31Z"}, "message": "re PR middle-end/81889 (bogus warnings with -Wmaybe-uninitialized -O3)\n\n2017-12-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/81889\n\t* tree-ssa-loop-niter.c (infer_loop_bounds_from_signedness): Use\n\trange info from the non-wrapping IV instead of just the range\n\tof the type.\n\n\t* gfortran.dg/pr81889.f90: New testcase.\n\t* gcc.dg/tree-ssa/pr64183.c: Adjust.\n\nFrom-SVN: r255573", "tree": {"sha": "3bb310f9df1511ec6309b70eb110224f29320ea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bb310f9df1511ec6309b70eb110224f29320ea1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b0c69ae65b713ab68202af20dae9dca533d39cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0c69ae65b713ab68202af20dae9dca533d39cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b0c69ae65b713ab68202af20dae9dca533d39cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0c69ae65b713ab68202af20dae9dca533d39cf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e157d4567738df5cb009a3304ca910501d77585f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e157d4567738df5cb009a3304ca910501d77585f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e157d4567738df5cb009a3304ca910501d77585f"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "6ab0e47c2d055c0c47dc87171187c1ed868be802", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c69ae65b713ab68202af20dae9dca533d39cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c69ae65b713ab68202af20dae9dca533d39cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b0c69ae65b713ab68202af20dae9dca533d39cf", "patch": "@@ -1,3 +1,10 @@\n+2017-12-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81889\n+\t* tree-ssa-loop-niter.c (infer_loop_bounds_from_signedness): Use\n+\trange info from the non-wrapping IV instead of just the range\n+\tof the type.\n+\n 2017-12-12  Julia Koval  <julia.koval@intel.com>\n \n \t* config.gcc: Add vaesintrin.h."}, {"sha": "dfc5ed854ca240f45aee199b76f5729723533921", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c69ae65b713ab68202af20dae9dca533d39cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c69ae65b713ab68202af20dae9dca533d39cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b0c69ae65b713ab68202af20dae9dca533d39cf", "patch": "@@ -1,3 +1,9 @@\n+2017-12-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81889\n+\t* gfortran.dg/pr81889.f90: New testcase.\n+\t* gcc.dg/tree-ssa/pr64183.c: Adjust.\n+\n 2017-12-12  Julia Koval  <julia.koval@intel.com>\n \n \t* gcc.target/i386/avx512-check.h: Handle bit_VAES."}, {"sha": "7a854fc7f3ffc7519b55f19a624ca7d85679ba7f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr64183.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c69ae65b713ab68202af20dae9dca533d39cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr64183.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c69ae65b713ab68202af20dae9dca533d39cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr64183.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr64183.c?ref=5b0c69ae65b713ab68202af20dae9dca533d39cf", "patch": "@@ -17,4 +17,4 @@ test ()\n    bits += 8;\n }\n \n-/* { dg-final { scan-tree-dump \"Loop 2 iterates at most 4 times\" \"cunroll\"} } */\n+/* { dg-final { scan-tree-dump \"Loop 2 iterates at most 3 times\" \"cunroll\"} } */"}, {"sha": "0516922ceb962bd1b7bebce23fbbd3c221276014", "filename": "gcc/testsuite/gfortran.dg/pr81889.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c69ae65b713ab68202af20dae9dca533d39cf/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr81889.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c69ae65b713ab68202af20dae9dca533d39cf/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr81889.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr81889.f90?ref=5b0c69ae65b713ab68202af20dae9dca533d39cf", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+! { dg-options \"-O3 -Wall\" }\n+\n+module m\n+\n+   type t\n+      integer, dimension(:), pointer :: list\n+   end type\n+\n+contains\n+\n+   subroutine s(n, p, Y)\n+      integer, intent(in) :: n\n+      type(t) :: p\n+      real, dimension(:) :: Y\n+\n+      real, dimension(1:16) :: xx\n+\n+      if (n > 3) then\n+         xx(1:n) = 0.\n+         print *, xx(1:n)\n+      else\n+         xx(1:n) = Y(p%list(1:n)) ! { dg-bogus \"uninitialized\" }\n+         print *, sum(xx(1:n))\n+      end if\n+\n+   end subroutine\n+\n+end module"}, {"sha": "b067a0d10859a8fdf9c3e1ce10c03cad12dd99d5", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c69ae65b713ab68202af20dae9dca533d39cf/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c69ae65b713ab68202af20dae9dca533d39cf/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=5b0c69ae65b713ab68202af20dae9dca533d39cf", "patch": "@@ -3510,6 +3510,12 @@ infer_loop_bounds_from_signedness (struct loop *loop, gimple *stmt)\n \n   low = lower_bound_in_type (type, type);\n   high = upper_bound_in_type (type, type);\n+  wide_int minv, maxv;\n+  if (get_range_info (def, &minv, &maxv) == VR_RANGE)\n+    {\n+      low = wide_int_to_tree (type, minv);\n+      high = wide_int_to_tree (type, maxv);\n+    }\n \n   record_nonwrapping_iv (loop, base, step, stmt, low, high, false, true);\n }"}]}