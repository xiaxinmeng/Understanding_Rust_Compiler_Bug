{"sha": "ca1a91d62595d43ef50c23000caf2fbd21cda30b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ExYTkxZDYyNTk1ZDQzZWY1MGMyMzAwMGNhZjJmYmQyMWNkYTMwYg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2012-02-08T19:53:56Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2012-02-08T19:53:56Z"}, "message": "re PR fortran/32380 (misaligned stores don't get vectorized)\n\n2012-02-08  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n        PR fortran/32380\n        * gfortran.dg/vect/pr32380.f90:  New test.\n\nFrom-SVN: r184017", "tree": {"sha": "f3979d9c83587b91b55943f5641bbf9c564ec79e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3979d9c83587b91b55943f5641bbf9c564ec79e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca1a91d62595d43ef50c23000caf2fbd21cda30b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca1a91d62595d43ef50c23000caf2fbd21cda30b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca1a91d62595d43ef50c23000caf2fbd21cda30b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca1a91d62595d43ef50c23000caf2fbd21cda30b/comments", "author": null, "committer": null, "parents": [{"sha": "5d24176e5ebb386a25b8412a2393d1517620e5e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d24176e5ebb386a25b8412a2393d1517620e5e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d24176e5ebb386a25b8412a2393d1517620e5e3"}], "stats": {"total": 268, "additions": 268, "deletions": 0}, "files": [{"sha": "a56acd89411c96059ff1cb98404ab706d148e639", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1a91d62595d43ef50c23000caf2fbd21cda30b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1a91d62595d43ef50c23000caf2fbd21cda30b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca1a91d62595d43ef50c23000caf2fbd21cda30b", "patch": "@@ -1,3 +1,8 @@\n+2012-02-08  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/32380\n+\t* gfortran.dg/vect/pr32380.f90:  New test.\n+\n 2012-02-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52151"}, {"sha": "97f334e1edf90f4dbdc02f9e362ba47dca8d094f", "filename": "gcc/testsuite/gfortran.dg/vect/pr32380.f", "status": "added", "additions": 263, "deletions": 0, "changes": 263, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1a91d62595d43ef50c23000caf2fbd21cda30b/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr32380.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1a91d62595d43ef50c23000caf2fbd21cda30b/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr32380.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr32380.f?ref=ca1a91d62595d43ef50c23000caf2fbd21cda30b", "patch": "@@ -0,0 +1,263 @@\n+! { dg-do compile }\n+! { dg-require-effective-target vect_float }\n+! { dg-options \"-O3 -fcray-pointer -ftree-vectorize -fdump-tree-vect-stats\" }\n+! PR 32380 - loops were not vectorized due to unaligned store.\n+      subroutine trnfbt(e,f,qs,mte,gm,ihgenf,hgener,lft,llt,sthick,\n+     .                  fibl,istupd,ies,hoff)\n+      parameter (nlq=96)\n+      integer nnlq\n+      common/newnlq/nnlq\n+c   ... implicit common ...\n+      integer imauto,iteopt,lauto,mthsol,ilimit,maxref,icnvrg,\n+     & igdiv,nwebuf,neql,neqt,imterm,imphas,nbfgs,\n+     & numupd,istif,itrlas,imerr,imdof,neqtgl,lsmtd,lsdir\n+      common/bki01i/imauto,iteopt,lauto,mthsol,ilimit,maxref,icnvrg,\n+     & igdiv,nwebuf,neql,neqt,imterm,imphas,nbfgs,\n+     & numupd,istif,itrlas,imerr,imdof,neqtgl,lsmtd,lsdir\n+      REAL dtimp,dtimp0,timeim,dtmnim,dtmxim,cvtl,ectl,rctl,\n+     & tolls,dnorm2,dtprnt,dtplot,dtiter,dtrefm\n+      common/bki01r/dtimp,dtimp0,timeim,dtmnim,dtmxim,cvtl,ectl,rctl,\n+     & tolls,dnorm2,dtprnt(2),dtplot(2),dtiter(2),dtrefm(2)\n+      REAL ascntl\n+      common/bki02r/ascntl(150)\n+      logical lsensw\n+      common/bki01l/lsensw(20)\n+      integer imip,isolvr,icwrb\n+      common/bki02i/imip(100),isolvr(200),icwrb(50)\n+c   ... implicit common ...\n+c\n+c\n+c\n+      integer lnodim,ndofpn,nnpke,melemt,imlft,imllt,is17loc\n+      common/bki03iloc/lnodim(nlq,16),ndofpn,nnpke,melemt,imlft,imllt,\n+     &                 is17loc\n+      real*4 ske\n+      common/bki03rloc/ske(nlq,1176)\n+      integer lmke\n+      common/bki04iloc/lmke(nlq,48)\n+c******************************************************************\n+c|  livermore software technology corporation  (lstc)             |\n+c|  ------------------------------------------------------------  |\n+c|  copyright 1987,1988,1989 john o. hallquist, lstc              |\n+c|  all rights reserved                                           |\n+c******************************************************************\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+c\n+      common/bk12loc/b12,b2,qhg,qhgm,qhgb,qhgw\n+      common/aux00loc/\n+     & sig1m(nlq),sig2m(nlq),sig4m(nlq),sig1n(nlq),sig2n(nlq),\n+     & sig4n(nlq),sig5n(nlq),sig6n(nlq),sig5l(nlq),sig6l(nlq),\n+     & str33(nlq),enginc(nlq)\n+      common/aux01loc/\n+     &ft11(nlq),ft12(nlq),ft13(nlq),ft21(nlq),ft22(nlq),ft23(nlq),\n+     &fm11(nlq),fm12(nlq),fm21(nlq),fm22(nlq),\n+     &fm31(nlq),fm32(nlq),fm41(nlq),fm42(nlq),\n+     &fmr11(nlq),fmr12(nlq),fmr21(nlq),fmr22(nlq),fmr31(nlq),\n+     &fmr32(nlq),fmr41(nlq),fmr42(nlq),sg5(nlq),sg6(nlq)\n+      common/aux7loc/\n+     1 vx1(nlq),vx2(nlq),vx3(nlq),vx4(nlq),\n+     2 vx5(nlq),vx6(nlq),vx7(nlq),vx8(nlq),\n+     3 vy1(nlq),vy2(nlq),vy3(nlq),vy4(nlq),\n+     4 vy5(nlq),vy6(nlq),vy7(nlq),vy8(nlq),\n+     5 vz1(nlq),vz2(nlq),vz3(nlq),vz4(nlq),\n+     6 vz5(nlq),vz6(nlq),vz7(nlq),vz8(nlq)\n+      common/aux10loc/area(nlq),\n+     1 px1(nlq),px2(nlq),px3(nlq),px4(nlq),\n+     & px5(nlq),px6(nlq),px7(nlq),px8(nlq),\n+     2 py1(nlq),py2(nlq),py3(nlq),py4(nlq),\n+     & py5(nlq),py6(nlq),py7(nlq),py8(nlq),\n+     3 pz1(nlq),pz2(nlq),pz3(nlq),pz4(nlq),\n+     & pz5(nlq),pz6(nlq),pz7(nlq),pz8(nlq),\n+     4 dx1(nlq),dx2(nlq),dx3(nlq),dx4(nlq),\n+     5 dx5(nlq),dx6(nlq),dx7(nlq),dx8(nlq),\n+     6 dy1(nlq),dy2(nlq),dy3(nlq),dy4(nlq),\n+     7 dy5(nlq),dy6(nlq),dy7(nlq),dy8(nlq),\n+     8 dz1(nlq),dz2(nlq),dz3(nlq),dz4(nlq),\n+     9 dz5(nlq),dz6(nlq),dz7(nlq),dz8(nlq)\n+      common/aux11loc/\n+     &ft31(nlq),ft32(nlq),ft33(nlq),ft41(nlq),ft42(nlq),ft43(nlq),\n+     &htx(nlq),hty(nlq),gm1(nlq),gm2(nlq),gm3(nlq),gm4(nlq),\n+     &bsum(nlq),qhx(nlq),qhy(nlq),qwz(nlq),qtx(nlq),qty(nlq)\n+      real*4 mx1,my1,mz1,mx2,my2,mz2,mx3,my3,mz3,mx4,my4,mz4\n+      common/aux13loc/\n+     &zeta(nlq),thick(nlq),fga(nlq),fgb(nlq),fgc(nlq),\n+     &gl11(nlq),gl12(nlq),gl13(nlq),gl21(nlq),gl22(nlq),gl23(nlq),\n+     &gl31(nlq),gl32(nlq),gl33(nlq),\n+     &x1(nlq),y1(nlq),z1(nlq),x2(nlq),y2(nlq),z2(nlq),\n+     &x3(nlq),y3(nlq),z3(nlq),x4(nlq),y4(nlq),z4(nlq),\n+     &fx1(nlq),fy1(nlq),fz1(nlq),fx2(nlq),fy2(nlq),fz2(nlq),\n+     &fx3(nlq),fy3(nlq),fz3(nlq),fx4(nlq),fy4(nlq),fz4(nlq),\n+     &mx1(nlq),my1(nlq),mz1(nlq),mx2(nlq),my2(nlq),mz2(nlq),\n+     &mx3(nlq),my3(nlq),mz3(nlq),mx4(nlq),my4(nlq),mz4(nlq)\n+      common/aux33loc/\n+     1 ix1(nlq),ix2(nlq),ix3(nlq),ix4(nlq),ixs(nlq,4),mxt(nlq)\n+      common/aux35loc/rhoa(nlq),cxx(nlq),fcl(nlq),fcq(nlq)\n+      common/hourgloc/ymod(nlq),gmod(nlq),ifsv(nlq)\n+      common/soundloc/sndspd(nlq),sndsp(nlq),diagm(nlq),sarea(nlq),\n+     . dxl(nlq)\n+      common/bel6loc/bm(nlq,3,8),bb(nlq,3,8),bs(nlq,2,12),bhg(nlq,4),\n+     1 ex(nlq,3,8),dp0(nlq,3,3),dp1(nlq,3,3),dp2(nlq,3,3),\n+     2 ds(nlq),dhg(nlq,5)\n+c\n+      common/shlioc/ioshl(60)\n+      common/failuloc/sieu(nlq),fail(nlq),ifaili(nlq)\n+      logical output,slnew\n+      common/csforc/ncs1,ncs2,ncs3,ncs4,ncs5,ncs6,ncs7,ncs8,ncs9,\n+     1 ncs10,ncs11,ncs12,ncs13,ncs14,ncs15,\n+     1 numcsd,csdinc,csdout,output,slnew,future(8)\n+      common/csfsavloc/savfrc(nlq,24),svfail(nlq),ndof,ifail\n+      common/sorterloc/nnc,lczc\n+      common/sorter/znnc,zlczc,\n+     & ns11,ns12,ns13,ns14,ns15,ns16,\n+     & nh11,nh12,nh13,nh14,nh15,nh16,\n+     & nt11,nt12,nt13,nt14,nt15,nt16,\n+     & nb11,nb12,nb13,nb14,nb15,nb16,\n+     & nu11,nu12,nu13,nu14,nu15,nu16,\n+     & nd11,nd12,nd13,nd14,nd15,nd16 \n+      common/subtssloc/dt1siz(nlq)\n+      common/matflr/mtfail(200)\n+      common/berwcmloc/xll(nlq),rigx(nlq),rigy(nlq)\n+      common /mem/ mp\n+      integer ia(1)\n+      pointer(mp,ia)\n+      real*4 mmode,ies\n+      dimension e(3,1),f(3,1),qs(9,1),gm(4,*),hgener(*)\n+      dimension qs1(nlq),qs2(nlq),qs3(nlq),qs4(nlq),qs5(nlq)\n+      dimension fibl(9,1),sthick(*),ies(*),hoff(*)\n+c\n+      ifail=0\n+      if (qhgb+qhgw+qhgm.gt.1.e-04) then\n+      tmode=qhgb*ymod(lft)/1920.0\n+      wmode=qhgw*gmod(lft)/120.00\n+      mmode=qhgm*ymod(lft)/80.000\n+c\n+      hgfac=rhoa(lft)*sndspd(lft)\n+c\n+      do i=lft,llt\n+      htxi  =area(i)*(x3(i)-x2(i)-x4(i))\n+      htyi  =area(i)*(y3(i)-y2(i)-y4(i))\n+      gm1(i)= 1.-px1(i)*htxi-py1(i)*htyi  \n+      gm2(i)=-1.-px2(i)*htxi-py2(i)*htyi  \n+      gm3(i)= 2.-gm1(i)\n+      gm4(i)=-2.-gm2(i)\n+      qhx(i)=gm2(i)*vx2(i)+gm3(i)*vx3(i)+gm4(i)*vx4(i)\n+      qhy(i)=gm2(i)*vy2(i)+gm3(i)*vy3(i)+gm4(i)*vy4(i)\n+      qwz(i)=gm2(i)*vz2(i)+gm3(i)*vz3(i)+gm4(i)*vz4(i)\n+      enddo\n+      do i=lft,llt\n+      c3=      sqrt(abs(sarea(i)))*thick(i)/(dt1siz(i)+1.e-16)\n+      c2=(hgfac*qhgw)*c3\n+      c1=(hgfac*qhgb*.01)*c3*thick(i)*thick(i)\n+      c3=(hgfac*qhgm)*c3\n+      qtx(i)=gm2(i)*vx6(i)+gm3(i)*vx7(i)+gm4(i)*vx8(i)\n+      qty(i)=gm2(i)*vy6(i)+gm3(i)*vy7(i)+gm4(i)*vy8(i)\n+      xll2  =2.*xll(i)\n+      qhxi  =qhx(i)+xll2*rigy(i)\n+      qhyi  =qhy(i)-xll2*rigx(i)\n+      qs1(i)=c3*qhxi\n+      qs2(i)=c3*qhyi\n+      qs3(i)=c2*qwz(i)\n+      qs4(i)=c1*qtx(i)\n+      qs5(i)=c1*qty(i)\n+      enddo\n+c\n+c\n+c\n+      if (isolvr(18).eq.0) then\n+c\n+      do i=lft,llt\n+      fm11(i)= fm11(i)+gm1(i)*qs4(i)\n+      fm12(i)= fm12(i)+gm1(i)*qs5(i)\n+      fm21(i)= fm21(i)+gm2(i)*qs4(i)\n+      fm22(i)= fm22(i)+gm2(i)*qs5(i)\n+      fm31(i)= fm31(i)+gm3(i)*qs4(i)\n+      fm32(i)= fm32(i)+gm3(i)*qs5(i)\n+      fm41(i)= fm41(i)+gm4(i)*qs4(i)\n+      fm42(i)= fm42(i)+gm4(i)*qs5(i)\n+      enddo\n+C\n+      else\n+c\n+      do 45 i=lft,llt\n+      ft31(i)=-ft11(i)+gm3(i)*qs1(i)\n+      ft32(i)=-ft12(i)+gm3(i)*qs2(i)\n+      ft33(i)=-ft13(i)+gm3(i)*qs3(i)\n+      ft41(i)=-ft21(i)+gm4(i)*qs1(i)\n+      ft42(i)=-ft22(i)+gm4(i)*qs2(i)\n+      ft43(i)=-ft23(i)+gm4(i)*qs3(i)\n+      ft11(i)= ft11(i)+gm1(i)*qs1(i)\n+      ft12(i)= ft12(i)+gm1(i)*qs2(i)\n+      ft13(i)= ft13(i)+gm1(i)*qs3(i)\n+      ft21(i)= ft21(i)+gm2(i)*qs1(i)\n+      ft22(i)= ft22(i)+gm2(i)*qs2(i)\n+      ft23(i)= ft23(i)+gm2(i)*qs3(i)\n+      fm11(i)= fm11(i)+gm1(i)*qs4(i)\n+      fm12(i)= fm12(i)+gm1(i)*qs5(i)\n+      fm21(i)= fm21(i)+gm2(i)*qs4(i)\n+      fm22(i)= fm22(i)+gm2(i)*qs5(i)\n+      fm31(i)= fm31(i)+gm3(i)*qs4(i)\n+      fm32(i)= fm32(i)+gm3(i)*qs5(i)\n+      fm41(i)= fm41(i)+gm4(i)*qs4(i)\n+      fm42(i)= fm42(i)+gm4(i)*qs5(i)\n+   45 continue\n+      endif\n+c\n+      else\n+c\n+      do 40 i=lft,llt\n+      ft31(i)=-ft11(i)\n+      ft32(i)=-ft12(i)\n+      ft33(i)=-ft13(i)\n+      ft41(i)=-ft21(i)\n+      ft42(i)=-ft22(i)\n+      ft43(i)=-ft23(i)\n+   40 continue\n+      endif\n+c\n+c\n+      do i=lft,llt\n+      mz1(i)=gl31(i)*fm11(i)+gl32(i)*fm12(i)\n+      mz2(i)=gl31(i)*fm21(i)+gl32(i)*fm22(i)\n+      fz1(i)=gl31(i)*ft11(i)+gl32(i)*ft12(i)+gl33(i)*ft13(i)\n+      fz2(i)=gl31(i)*ft21(i)+gl32(i)*ft22(i)+gl33(i)*ft23(i)\n+      mz3(i)=gl31(i)*fm31(i)+gl32(i)*fm32(i)\n+      mz4(i)=gl31(i)*fm41(i)+gl32(i)*fm42(i)\n+      fz3(i)=gl31(i)*ft31(i)+gl32(i)*ft32(i)+gl33(i)*ft33(i)\n+      fz4(i)=gl31(i)*ft41(i)+gl32(i)*ft42(i)+gl33(i)*ft43(i)\n+      enddo\n+   90 continue\n+c\n+      if (output) then\n+      do i=lft,llt\n+      savfrc(i, 1)= fx1(i)\n+      savfrc(i, 2)= fy1(i)\n+      enddo\n+c\n+      ndof=4\n+      if (ifail.eq.1) then\n+        do i=lft,llt\n+        svfail(i)=fail(i)\n+        enddo\n+      endif\n+      endif\n+c\n+      return\n+      end\n+\n+! { dg-final { scan-tree-dump-times \"vectorized 7 loops\" 1 \"vect\" } }\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}]}