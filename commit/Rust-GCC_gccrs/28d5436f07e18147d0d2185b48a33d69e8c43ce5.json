{"sha": "28d5436f07e18147d0d2185b48a33d69e8c43ce5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhkNTQzNmYwN2UxODE0N2QwZDIxODViNDhhMzNkNjllOGM0M2NlNQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-03-27T20:25:12Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-03-27T20:25:12Z"}, "message": "functional (mem_fn): Qualify to prevent ADL.\n\n\t* include/std/functional (mem_fn): Qualify to prevent ADL.\n\t* testsuite/20_util/function_objects/mem_fn/adl.cc: New.\n\nFrom-SVN: r185895", "tree": {"sha": "4c6ae0dab0d8cfdb62ecd5d97976b58d0293e3af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c6ae0dab0d8cfdb62ecd5d97976b58d0293e3af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28d5436f07e18147d0d2185b48a33d69e8c43ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28d5436f07e18147d0d2185b48a33d69e8c43ce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28d5436f07e18147d0d2185b48a33d69e8c43ce5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28d5436f07e18147d0d2185b48a33d69e8c43ce5/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c6d71c06b55848838ddc5303415908492bd6b72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6d71c06b55848838ddc5303415908492bd6b72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c6d71c06b55848838ddc5303415908492bd6b72"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "6003a00fdf0492dc989b46f47ce41bc3cc299561", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28d5436f07e18147d0d2185b48a33d69e8c43ce5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28d5436f07e18147d0d2185b48a33d69e8c43ce5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=28d5436f07e18147d0d2185b48a33d69e8c43ce5", "patch": "@@ -1,3 +1,8 @@\n+2012-03-27  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/std/functional (mem_fn): Qualify to prevent ADL.\n+\t* testsuite/20_util/function_objects/mem_fn/adl.cc: New.\n+\n 2012-03-27  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/std/type_traits (result_of): Fix handling of cv-quals."}, {"sha": "14785dd57b73664d6d87d87959424da642a1ca3e", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28d5436f07e18147d0d2185b48a33d69e8c43ce5/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28d5436f07e18147d0d2185b48a33d69e8c43ce5/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=28d5436f07e18147d0d2185b48a33d69e8c43ce5", "patch": "@@ -1,7 +1,7 @@\n // <functional> -*- C++ -*-\n \n // Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n-// 2011 Free Software Foundation, Inc.\n+// 2011, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -245,7 +245,7 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n            >::type\n     __invoke(_Functor& __f, _Args&&... __args)\n     {\n-      return mem_fn(__f)(std::forward<_Args>(__args)...);\n+      return std::mem_fn(__f)(std::forward<_Args>(__args)...);\n     }\n \n   // To pick up function references (that will become function pointers)\n@@ -1709,12 +1709,12 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n   template<typename _Member, typename _Class>\n     inline _Mem_fn<_Member _Class::*>\n     __callable_functor(_Member _Class::* &__p)\n-    { return mem_fn(__p); }\n+    { return std::mem_fn(__p); }\n \n   template<typename _Member, typename _Class>\n     inline _Mem_fn<_Member _Class::*>\n     __callable_functor(_Member _Class::* const &__p)\n-    { return mem_fn(__p); }\n+    { return std::mem_fn(__p); }\n \n   template<typename _Signature>\n     class function;\n@@ -1970,7 +1970,7 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n       static _Res\n       _M_invoke(const _Any_data& __functor, _ArgTypes... __args)\n       {\n-\treturn mem_fn(_Base::_M_get_pointer(__functor)->__value)(\n+\treturn std::mem_fn(_Base::_M_get_pointer(__functor)->__value)(\n \t    std::forward<_ArgTypes>(__args)...);\n       }\n     };\n@@ -2010,7 +2010,7 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n       static void\n       _M_invoke(const _Any_data& __functor, _ArgTypes... __args)\n       {\n-\tmem_fn(_Base::_M_get_pointer(__functor)->__value)(\n+\tstd::mem_fn(_Base::_M_get_pointer(__functor)->__value)(\n \t    std::forward<_ArgTypes>(__args)...);\n       }\n     };"}, {"sha": "907db848911f7ef35d8ce9c2656d989c628e7ea4", "filename": "libstdc++-v3/testsuite/20_util/function_objects/mem_fn/adl.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28d5436f07e18147d0d2185b48a33d69e8c43ce5/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fmem_fn%2Fadl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28d5436f07e18147d0d2185b48a33d69e8c43ce5/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fmem_fn%2Fadl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fmem_fn%2Fadl.cc?ref=28d5436f07e18147d0d2185b48a33d69e8c43ce5", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <functional>\n+\n+namespace n {\n+  struct X { int i; };\n+  void mem_fn(int X::*);\n+}\n+\n+using n::X;\n+\n+X x{};\n+int X::* p = &X::i;\n+\n+int test01()\n+{\n+  auto ref = std::ref(p);\n+  return ref(x);\n+}\n+\n+int test02()\n+{\n+  std::function<int(X)> fun(p);\n+  return fun(x);\n+}\n+"}]}