{"sha": "92ff302b2bbf33adfd6a37206e500d8202b28417", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJmZjMwMmIyYmJmMzNhZGZkNmEzNzIwNmU1MDBkODIwMmIyODQxNw==", "commit": {"author": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2002-07-11T04:43:15Z"}, "committer": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2002-07-11T04:43:15Z"}, "message": "stl_deque.h: Fix misspelling of `Create' as `Creats'.\n\n\t* include/bits/stl_deque.h: Fix misspelling of `Create' as `Creats'.\n\t* include/bits/stl_list.h: Likewise.\n\t* include/bits/stl_map.h: Likewise.\n\t* include/bits/stl_multimap.h: Likewise.\n\t* include/bits/stl_vector.h: Likewise.\n\nFrom-SVN: r55388", "tree": {"sha": "04115d3cb5b54ea34be410cf576ed70296c290e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04115d3cb5b54ea34be410cf576ed70296c290e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92ff302b2bbf33adfd6a37206e500d8202b28417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92ff302b2bbf33adfd6a37206e500d8202b28417", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92ff302b2bbf33adfd6a37206e500d8202b28417", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92ff302b2bbf33adfd6a37206e500d8202b28417/comments", "author": null, "committer": null, "parents": [{"sha": "0e603223a0b4409a82fe8da8771fc2b0a4e9b7c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e603223a0b4409a82fe8da8771fc2b0a4e9b7c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e603223a0b4409a82fe8da8771fc2b0a4e9b7c6"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c7fab2d4fb8eac1ce37bb700e9b35071f623ca3a", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92ff302b2bbf33adfd6a37206e500d8202b28417/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92ff302b2bbf33adfd6a37206e500d8202b28417/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=92ff302b2bbf33adfd6a37206e500d8202b28417", "patch": "@@ -729,7 +729,7 @@ template <typename _Tp, typename _Alloc = allocator<_Tp> >\n    *  @param  first  An input iterator.\n    *  @param  last  An input iterator.\n    * \n-   *  Creats a %deque consisting of copies of the elements from [first,last).\n+   *  Create a %deque consisting of copies of the elements from [first,last).\n    *\n    *  If the iterators are forward, bidirectional, or random-access, then\n    *  this will call the elements' copy constructor N times (where N is"}, {"sha": "cb12e01075a82fd59dcbe8dbfee285af47c76b32", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92ff302b2bbf33adfd6a37206e500d8202b28417/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92ff302b2bbf33adfd6a37206e500d8202b28417/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=92ff302b2bbf33adfd6a37206e500d8202b28417", "patch": "@@ -495,7 +495,7 @@ template<typename _Tp, typename _Alloc = allocator<_Tp> >\n    *  @param  first  An input iterator.\n    *  @param  last  An input iterator.\n    * \n-   *  Creats a %list consisting of copies of the elements from [first,last).\n+   *  Create a %list consisting of copies of the elements from [first,last).\n    *  This is linear in N (where N is distance(first,last)).\n    *\n    *  @if maint"}, {"sha": "26546d3fc959dc9d51df38733bbfd674811c3e41", "filename": "libstdc++-v3/include/bits/stl_map.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92ff302b2bbf33adfd6a37206e500d8202b28417/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92ff302b2bbf33adfd6a37206e500d8202b28417/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h?ref=92ff302b2bbf33adfd6a37206e500d8202b28417", "patch": "@@ -170,7 +170,7 @@ template <typename _Key, typename _Tp, typename _Compare = less<_Key>,\n    *  @param  first  An input iterator.\n    *  @param  last  An input iterator.\n    *\n-   *  Creats a %map consisting of copies of the elements from [first,last).\n+   *  Create a %map consisting of copies of the elements from [first,last).\n    *  This is linear in N if the range is already sorted, and NlogN\n    *  otherwise (where N is distance(first,last)).\n   */\n@@ -186,7 +186,7 @@ template <typename _Key, typename _Tp, typename _Compare = less<_Key>,\n    *  @param  comp  A comparison functor.\n    *  @param  a  An allocator object.\n    *\n-   *  Creats a %map consisting of copies of the elements from [first,last).\n+   *  Create a %map consisting of copies of the elements from [first,last).\n    *  This is linear in N if the range is already sorted, and NlogN\n    *  otherwise (where N is distance(first,last)).\n   */"}, {"sha": "d85c4fda510e08fe55ad3604a469750d75fc68f1", "filename": "libstdc++-v3/include/bits/stl_multimap.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92ff302b2bbf33adfd6a37206e500d8202b28417/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92ff302b2bbf33adfd6a37206e500d8202b28417/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h?ref=92ff302b2bbf33adfd6a37206e500d8202b28417", "patch": "@@ -183,7 +183,7 @@ template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>\n    *  @param  first  An input iterator.\n    *  @param  last  An input iterator.\n    *\n-   *  Creats a %multimap consisting of copies of the elements from\n+   *  Create a %multimap consisting of copies of the elements from\n    *  [first,last).  This is linear in N if the range is already sorted,\n    *  and NlogN otherwise (where N is distance(first,last)).\n   */\n@@ -199,7 +199,7 @@ template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>\n    *  @param  comp  A comparison functor.\n    *  @param  a  An allocator object.\n    *\n-   *  Creats a %multimap consisting of copies of the elements from [first,last).\n+   *  Create a %multimap consisting of copies of the elements from [first,last).\n    *  This is linear in N if the range is already sorted, and NlogN\n    *  otherwise (where N is distance(first,last)).\n   */"}, {"sha": "038aa0de84d743900c3ed244ca5802024dbfb048", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92ff302b2bbf33adfd6a37206e500d8202b28417/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92ff302b2bbf33adfd6a37206e500d8202b28417/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=92ff302b2bbf33adfd6a37206e500d8202b28417", "patch": "@@ -272,7 +272,7 @@ template <typename _Tp, typename _Alloc = allocator<_Tp> >\n    *  @param  first  An input iterator.\n    *  @param  last  An input iterator.\n    * \n-   *  Creats a %vector consisting of copies of the elements from [first,last).\n+   *  Create a %vector consisting of copies of the elements from [first,last).\n    *\n    *  If the iterators are forward, bidirectional, or random-access, then\n    *  this will call the elements' copy constructor N times (where N is"}]}