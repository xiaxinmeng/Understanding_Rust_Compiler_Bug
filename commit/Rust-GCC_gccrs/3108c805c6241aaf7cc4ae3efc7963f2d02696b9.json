{"sha": "3108c805c6241aaf7cc4ae3efc7963f2d02696b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEwOGM4MDVjNjI0MWFhZjdjYzRhZTNlZmM3OTYzZjJkMDI2OTZiOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1990-06-18T20:31:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1990-06-18T20:31:11Z"}, "message": "Initial revision\n\nFrom-SVN: r12", "tree": {"sha": "772267dd858d9c765e1836674ab7a9b5f0a30607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/772267dd858d9c765e1836674ab7a9b5f0a30607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3108c805c6241aaf7cc4ae3efc7963f2d02696b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3108c805c6241aaf7cc4ae3efc7963f2d02696b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3108c805c6241aaf7cc4ae3efc7963f2d02696b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3108c805c6241aaf7cc4ae3efc7963f2d02696b9/comments", "author": null, "committer": null, "parents": [{"sha": "53cb99ef987d643edccbf615ae582fe030fee2ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53cb99ef987d643edccbf615ae582fe030fee2ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53cb99ef987d643edccbf615ae582fe030fee2ad"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "4f14cf6efbdb270cd1f4d926ff24902b0bd639c5", "filename": "gcc/c-parse.gperf", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3108c805c6241aaf7cc4ae3efc7963f2d02696b9/gcc%2Fc-parse.gperf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3108c805c6241aaf7cc4ae3efc7963f2d02696b9/gcc%2Fc-parse.gperf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.gperf?ref=3108c805c6241aaf7cc4ae3efc7963f2d02696b9", "patch": "@@ -0,0 +1,58 @@\n+%{\n+/* Command-line: gperf -p -j1 -i 1 -g -o -t -N is_reserved_word -k1,3,$ c-parse.gperf  */ \n+%}\n+struct resword { char *name; short token; enum rid rid; };\n+%%\n+__alignof, ALIGNOF, NORID\n+__alignof__, ALIGNOF, NORID\n+__asm, ASM, NORID\n+__asm__, ASM, NORID\n+__attribute, ATTRIBUTE, NORID\n+__attribute__, ATTRIBUTE, NORID\n+__const, TYPE_QUAL, RID_CONST\n+__const__, TYPE_QUAL, RID_CONST\n+__extension__, EXTENSION, NORID\n+__inline, SCSPEC, RID_INLINE\n+__inline__, SCSPEC, RID_INLINE\n+__label__, LABEL, NORID\n+__signed, TYPESPEC, RID_SIGNED\n+__signed__, TYPESPEC, RID_SIGNED\n+__typeof, TYPEOF, NORID\n+__typeof__, TYPEOF, NORID\n+__volatile, TYPE_QUAL, RID_VOLATILE\n+__volatile__, TYPE_QUAL, RID_VOLATILE\n+asm, ASM, NORID\n+auto, SCSPEC, RID_AUTO\n+break, BREAK, NORID\n+case, CASE, NORID\n+char, TYPESPEC, RID_CHAR\n+const, TYPE_QUAL, RID_CONST\n+continue, CONTINUE, NORID\n+default, DEFAULT, NORID\n+do, DO, NORID\n+double, TYPESPEC, RID_DOUBLE\n+else, ELSE, NORID\n+enum, ENUM, NORID\n+extern, SCSPEC, RID_EXTERN\n+float, TYPESPEC, RID_FLOAT\n+for, FOR, NORID\n+goto, GOTO, NORID\n+if, IF, NORID\n+inline, SCSPEC, RID_INLINE\n+int, TYPESPEC, RID_INT\n+long, TYPESPEC, RID_LONG\n+register, SCSPEC, RID_REGISTER\n+return, RETURN, NORID\n+short, TYPESPEC, RID_SHORT\n+signed, TYPESPEC, RID_SIGNED\n+sizeof, SIZEOF, NORID\n+static, SCSPEC, RID_STATIC\n+struct, STRUCT, NORID\n+switch, SWITCH, NORID\n+typedef, SCSPEC, RID_TYPEDEF\n+typeof, TYPEOF, NORID\n+union, UNION, NORID\n+unsigned, TYPESPEC, RID_UNSIGNED\n+void, TYPESPEC, RID_VOID\n+volatile, TYPE_QUAL, RID_VOLATILE\n+while, WHILE, NORID"}]}