{"sha": "235e1fe81e089e2563c046260eca00144710cd67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM1ZTFmZTgxZTA4OWUyNTYzYzA0NjI2MGVjYTAwMTQ0NzEwY2Q2Nw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2009-04-01T12:22:14Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2009-04-01T12:22:14Z"}, "message": "m32c.h (LIBGCC2_UNITS_PER_WORD): Define if not already defined.\n\n        * config/m32c/m32c.h (LIBGCC2_UNITS_PER_WORD): Define if not\n        already defined.\n        * config/m32c/t-m32c (LIB2FUNCS_EXTRA): Add m32c-lib2-trapv.c.\n        * config/m32c/m32c-lib2.c: Remove unused typedefs.  Rename the\n        other typedefs to avoid conflicts with libgcc2.c.  Define labels\n        to gain 16-bit bit-manipulation functions from libgcc2.c and then\n        include it.\n        * config/m32c/m32c-lib2-trapv.c: New file.  Define labels\n        to gain 16-bit trapping arithmetic functions from libgcc2.c and\n        then include it.\n\nFrom-SVN: r145397", "tree": {"sha": "1d9f59f54ebe580d52f1cabbb41cc723f4a4ceaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d9f59f54ebe580d52f1cabbb41cc723f4a4ceaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/235e1fe81e089e2563c046260eca00144710cd67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/235e1fe81e089e2563c046260eca00144710cd67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/235e1fe81e089e2563c046260eca00144710cd67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/235e1fe81e089e2563c046260eca00144710cd67/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d6868399fb67b375e562d28d2f0dcf52cbf8d9d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6868399fb67b375e562d28d2f0dcf52cbf8d9d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6868399fb67b375e562d28d2f0dcf52cbf8d9d1"}], "stats": {"total": 88, "additions": 53, "deletions": 35}, "files": [{"sha": "327d33d2c82f643a1c6cacd6d77a3e757d67a2bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235e1fe81e089e2563c046260eca00144710cd67/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235e1fe81e089e2563c046260eca00144710cd67/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=235e1fe81e089e2563c046260eca00144710cd67", "patch": "@@ -1,3 +1,16 @@\n+2009-04-01  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/m32c/m32c.h (LIBGCC2_UNITS_PER_WORD): Define if not\n+\talready defined.\n+\t* config/m32c/t-m32c (LIB2FUNCS_EXTRA): Add m32c-lib2-trapv.c.\n+\t* config/m32c/m32c-lib2.c: Remove unused typedefs.  Rename the\n+\tother typedefs to avoid conflicts with libgcc2.c.  Define labels\n+\tto gain 16-bit bit-manipulation functions from libgcc2.c and then\n+\tinclude it.\n+\t* config/m32c/m32c-lib2-trapv.c: New file.  Define labels\n+\tto gain 16-bit trapping arithmetic functions from libgcc2.c and\n+\tthen include it.\n+\n 2009-04-01  Rafael Avila de Espindola  <espindola@google.com>\n \n        * varasm.c (default_function_rodata_section): Declare DOT as const char*."}, {"sha": "ff341e8d68c54772cbbfb096843c213b772373fd", "filename": "gcc/config/m32c/m32c-lib2.c", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235e1fe81e089e2563c046260eca00144710cd67/gcc%2Fconfig%2Fm32c%2Fm32c-lib2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235e1fe81e089e2563c046260eca00144710cd67/gcc%2Fconfig%2Fm32c%2Fm32c-lib2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c-lib2.c?ref=235e1fe81e089e2563c046260eca00144710cd67", "patch": "@@ -1,5 +1,5 @@\n /* libgcc routines for R8C/M16C/M32C\n-   Copyright (C) 2005\n+   Copyright (C) 2005, 2009\n    Free Software Foundation, Inc.\n    Contributed by Red Hat.\n \n@@ -29,24 +29,19 @@\n    Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n    02110-1301, USA.  */\n \n-typedef          int  HItype __attribute__ ((mode (HI)));\n-typedef unsigned int UHItype __attribute__ ((mode (HI)));\n-typedef          int  SItype __attribute__ ((mode (SI)));\n-typedef unsigned int USItype __attribute__ ((mode (SI)));\n+typedef          int  sint32_type   __attribute__ ((mode (SI)));\n+typedef unsigned int  uint32_type   __attribute__ ((mode (SI)));\n+typedef int           word_type     __attribute__ ((mode (__word__)));\n \n-typedef int word_type __attribute__ ((mode (__word__)));\n+uint32_type udivmodsi4 (uint32_type, uint32_type, word_type);\n+sint32_type __divsi3   (sint32_type, sint32_type);\n+sint32_type __modsi3   (sint32_type, sint32_type);\n \n-USItype udivmodsi4 (USItype num, USItype den, word_type modwanted);\n-SItype __divsi3 (SItype a, SItype b);\n-SItype __modsi3 (SItype a, SItype b);\n-SItype __udivsi3 (SItype a, SItype b);\n-SItype __umodsi3 (SItype a, SItype b);\n-\n-USItype\n-udivmodsi4 (USItype num, USItype den, word_type modwanted)\n+uint32_type\n+udivmodsi4 (uint32_type num, uint32_type den, word_type modwanted)\n {\n-  USItype bit = 1;\n-  USItype res = 0;\n+  uint32_type bit = 1;\n+  uint32_type res = 0;\n \n   while (den < num && bit && !(den & (1L << 31)))\n     {\n@@ -68,13 +63,11 @@ udivmodsi4 (USItype num, USItype den, word_type modwanted)\n   return res;\n }\n \n-\n-\n-SItype\n-__divsi3 (SItype a, SItype b)\n+sint32_type\n+__divsi3 (sint32_type a, sint32_type b)\n {\n   word_type neg = 0;\n-  SItype res;\n+  sint32_type res;\n \n   if (a < 0)\n     {\n@@ -96,13 +89,11 @@ __divsi3 (SItype a, SItype b)\n   return res;\n }\n \n-\n-\n-SItype\n-__modsi3 (SItype a, SItype b)\n+sint32_type\n+__modsi3 (sint32_type a, sint32_type b)\n {\n   word_type neg = 0;\n-  SItype res;\n+  sint32_type res;\n \n   if (a < 0)\n     {\n@@ -121,19 +112,28 @@ __modsi3 (SItype a, SItype b)\n   return res;\n }\n \n+/* See the comment by the definition of LIBGCC2_UNITS_PER_WORD in\n+   m32c.h for why we are creating extra versions of some of the\n+   functions defined in libgcc2.c.  */\n+\n+#define LIBGCC2_UNITS_PER_WORD 2\n \n+#define L_clzsi2\n+#define L_ctzsi2\n+#define L_ffssi2\n+#define L_paritysi2\n+#define L_popcountsi2\n \n+#include \"libgcc2.c\"\n \n-SItype\n-__udivsi3 (SItype a, SItype b)\n+uint32_type\n+__udivsi3 (uint32_type a, uint32_type b)\n {\n   return udivmodsi4 (a, b, 0);\n }\n \n-\n-\n-SItype\n-__umodsi3 (SItype a, SItype b)\n+uint32_type\n+__umoddi3 (uint32_type a, uint32_type b)\n {\n   return udivmodsi4 (a, b, 1);\n }"}, {"sha": "5021831662fcb17868b106f7654b40945e02ce44", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235e1fe81e089e2563c046260eca00144710cd67/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235e1fe81e089e2563c046260eca00144710cd67/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=235e1fe81e089e2563c046260eca00144710cd67", "patch": "@@ -2701,8 +2701,13 @@ m32c_print_operand_punct_valid_p (int c)\n void\n m32c_print_operand_address (FILE * stream, rtx address)\n {\n-  gcc_assert (GET_CODE (address) == MEM);\n-  m32c_print_operand (stream, XEXP (address, 0), 0);\n+  if (GET_CODE (address) == MEM)\n+    address = XEXP (address, 0);\n+  else\n+    /* cf: gcc.dg/asm-4.c.  */\n+    gcc_assert (GET_CODE (address) == REG);\n+\n+  m32c_print_operand (stream, address, 0);\n }\n \n /* Implements ASM_OUTPUT_REG_PUSH.  Control registers are pushed"}, {"sha": "33454fe3c3e326e1a9e68ef6bdf1ccb39afa96e2", "filename": "gcc/config/m32c/t-m32c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235e1fe81e089e2563c046260eca00144710cd67/gcc%2Fconfig%2Fm32c%2Ft-m32c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235e1fe81e089e2563c046260eca00144710cd67/gcc%2Fconfig%2Fm32c%2Ft-m32c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Ft-m32c?ref=235e1fe81e089e2563c046260eca00144710cd67", "patch": "@@ -29,7 +29,7 @@ LIB1ASMFUNCS = \\\n \t__m32c_ucmpsi2 \\\n \t__m32c_jsri16\n \n-LIB2FUNCS_EXTRA = $(srcdir)/config/m32c/m32c-lib2.c\n+LIB2FUNCS_EXTRA = $(srcdir)/config/m32c/m32c-lib2.c $(srcdir)/config/m32c/m32c-lib2-trapv.c\n \n # floating point emulation libraries\n "}]}