{"sha": "ef85d150b59637b6eb116947c1d29e97d562e7db", "node_id": "C_kwDOANBUbNoAKGVmODVkMTUwYjU5NjM3YjZlYjExNjk0N2MxZDI5ZTk3ZDU2MmU3ZGI", "commit": {"author": {"name": "Vineet Gupta", "email": "vineetg@rivosinc.com", "date": "2022-05-23T23:25:39Z"}, "committer": {"name": "Palmer Dabbelt", "email": "palmer@rivosinc.com", "date": "2022-05-23T23:32:10Z"}, "message": "RISC-V: Enable TARGET_SUPPORTS_WIDE_INT\n\nThis is at par with other major arches such as aarch64, i386, s390 ...\n\ngcc/ChangeLog\n\n\t* config/riscv/predicates.md (const_0_operand): Remove\n\tconst_double.\n\t* config/riscv/riscv.cc (riscv_rtx_costs): Add check for\n\tCONST_DOUBLE.\n\t* config/riscv/riscv.h (TARGET_SUPPORTS_WIDE_INT): New define.\n\nSigned-off-by: Vineet Gupta <vineetg@rivosinc.com>\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>", "tree": {"sha": "0f16e0a3f4f7c3c02479339c650f842e4c5c3df5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f16e0a3f4f7c3c02479339c650f842e4c5c3df5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef85d150b59637b6eb116947c1d29e97d562e7db", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEEAM520YNJYN/OiG3470yhUCzLq0EFAmKMGYMTHHBhbG1lckBk\nYWJiZWx0LmNvbQAKCRDvTKFQLMurQScwEACQ/X9gu/Gn64T7TSuVM20michJCAB+\npf0K9CjLEWrv2Ng9W2h4RQi9zl8cCZGQ++mBpjhTJsN8mEcCVBOxXVBkdt/aHzQP\n6wdqYHUDqw1RU2ComTOtslCXnUCuLh3oZBzeHHXvhgWIKelKdzmZk3AI4m/fQxmb\ncJ1OCvBhLbs7G5YAyOvaJNgkaWdKbzZyLOpCEm50nWoLIK3MTCq2/XjIeE9iQlOl\nWOijleo60atB/Qx3CGSKv9m8FJ9w33taxdJmpeDM/eZ5sxKd2h/9yXflVVM2Cgt9\np7JGqAykfgOl3Al1yWXnKKfzeAIx774zYQQnLwap0PqbeTLoZMeZ58gAf70Kuc8a\ntk6ZQI8rLGzZOZfnQ2eW5XcQQJeBsm0iSrgTAaEq7JTcLCJQJjA1thET+eH+3Nzc\nl3/MxeochHKe0pb9QUv2o6j7PuPkkBHn+rIP+ohxdM3ZwLoYSG3q7L+2zxJ3K9T2\nQVseg4hlHjqd8MTc2mjX8gPmBLfNdeH1FziSblHyerelsIoR2zKhTMnqnn81XfoI\nV4ylv20WjbWj6/jSOedCukmzvE68oWglYLXGnSY62lhX04AgzlEu/YnLML77t1bM\nMz/f1M1qA5mShEWaViOQXAZ22LREM6R0DXnbX89ssX1e80WYEUGo4nEGadZoEbdi\n5rITS6DVxh8jnw==\n=0Ruu\n-----END PGP SIGNATURE-----", "payload": "tree 0f16e0a3f4f7c3c02479339c650f842e4c5c3df5\nparent 8473ef7be60443c06c949571995f00e2793c2c5b\nauthor Vineet Gupta <vineetg@rivosinc.com> 1653348339 -0700\ncommitter Palmer Dabbelt <palmer@rivosinc.com> 1653348730 -0700\n\nRISC-V: Enable TARGET_SUPPORTS_WIDE_INT\n\nThis is at par with other major arches such as aarch64, i386, s390 ...\n\ngcc/ChangeLog\n\n\t* config/riscv/predicates.md (const_0_operand): Remove\n\tconst_double.\n\t* config/riscv/riscv.cc (riscv_rtx_costs): Add check for\n\tCONST_DOUBLE.\n\t* config/riscv/riscv.h (TARGET_SUPPORTS_WIDE_INT): New define.\n\nSigned-off-by: Vineet Gupta <vineetg@rivosinc.com>\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef85d150b59637b6eb116947c1d29e97d562e7db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef85d150b59637b6eb116947c1d29e97d562e7db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef85d150b59637b6eb116947c1d29e97d562e7db/comments", "author": null, "committer": {"login": "palmer-dabbelt", "id": 1383006, "node_id": "MDQ6VXNlcjEzODMwMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1383006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palmer-dabbelt", "html_url": "https://github.com/palmer-dabbelt", "followers_url": "https://api.github.com/users/palmer-dabbelt/followers", "following_url": "https://api.github.com/users/palmer-dabbelt/following{/other_user}", "gists_url": "https://api.github.com/users/palmer-dabbelt/gists{/gist_id}", "starred_url": "https://api.github.com/users/palmer-dabbelt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palmer-dabbelt/subscriptions", "organizations_url": "https://api.github.com/users/palmer-dabbelt/orgs", "repos_url": "https://api.github.com/users/palmer-dabbelt/repos", "events_url": "https://api.github.com/users/palmer-dabbelt/events{/privacy}", "received_events_url": "https://api.github.com/users/palmer-dabbelt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8473ef7be60443c06c949571995f00e2793c2c5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8473ef7be60443c06c949571995f00e2793c2c5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8473ef7be60443c06c949571995f00e2793c2c5b"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "40c1c720f1dac5bb7f4372c4d03d83f5ee12de5d", "filename": "gcc/config/riscv/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef85d150b59637b6eb116947c1d29e97d562e7db/gcc%2Fconfig%2Friscv%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef85d150b59637b6eb116947c1d29e97d562e7db/gcc%2Fconfig%2Friscv%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fpredicates.md?ref=ef85d150b59637b6eb116947c1d29e97d562e7db", "patch": "@@ -52,7 +52,7 @@\n        (match_test \"INTVAL (op) + 1 != 0\")))\n \n (define_predicate \"const_0_operand\"\n-  (and (match_code \"const_int,const_wide_int,const_double,const_vector\")\n+  (and (match_code \"const_int,const_wide_int,const_vector\")\n        (match_test \"op == CONST0_RTX (GET_MODE (op))\")))\n \n (define_predicate \"reg_or_0_operand\""}, {"sha": "fb6621464ea263760396fd7eb3b6eaff81c1a8f8", "filename": "gcc/config/riscv/riscv.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef85d150b59637b6eb116947c1d29e97d562e7db/gcc%2Fconfig%2Friscv%2Friscv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef85d150b59637b6eb116947c1d29e97d562e7db/gcc%2Fconfig%2Friscv%2Friscv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.cc?ref=ef85d150b59637b6eb116947c1d29e97d562e7db", "patch": "@@ -1797,6 +1797,12 @@ riscv_rtx_costs (rtx x, machine_mode mode, int outer_code, int opno ATTRIBUTE_UN\n     case SYMBOL_REF:\n     case LABEL_REF:\n     case CONST_DOUBLE:\n+      /* With TARGET_SUPPORTS_WIDE_INT const int can't be in CONST_DOUBLE\n+\t rtl object. Weird recheck due to switch-case fall through above.  */\n+      if (GET_CODE (x) == CONST_DOUBLE)\n+\tgcc_assert (GET_MODE (x) != VOIDmode);\n+      /* Fall through.  */\n+\n     case CONST:\n       if ((cost = riscv_const_insns (x)) > 0)\n \t{"}, {"sha": "5083a1c24b08233810dd3b2aa4278b3ef8a75791", "filename": "gcc/config/riscv/riscv.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef85d150b59637b6eb116947c1d29e97d562e7db/gcc%2Fconfig%2Friscv%2Friscv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef85d150b59637b6eb116947c1d29e97d562e7db/gcc%2Fconfig%2Friscv%2Friscv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.h?ref=ef85d150b59637b6eb116947c1d29e97d562e7db", "patch": "@@ -1009,4 +1009,6 @@ extern void riscv_remove_unneeded_save_restore_calls (void);\n #define CTZ_DEFINED_VALUE_AT_ZERO(MODE, VALUE) \\\n   ((VALUE) = GET_MODE_UNIT_BITSIZE (MODE), 2)\n \n+#define TARGET_SUPPORTS_WIDE_INT 1\n+\n #endif /* ! GCC_RISCV_H */"}]}