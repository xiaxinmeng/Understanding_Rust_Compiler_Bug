{"sha": "99cf6c77d0eee00479041711a73b8514c4ffe924", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTljZjZjNzdkMGVlZTAwNDc5MDQxNzExYTczYjg1MTRjNGZmZTkyNA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-04-08T06:52:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:52:20Z"}, "message": "sprint.adb (Write_Itype): Handle Itypes whose Parent field points to the declaration for some different...\n\n2008-04-08  Robert Dewar  <dewar@adacore.com>\n\n\t* sprint.adb (Write_Itype): Handle Itypes whose Parent field points to\n\tthe declaration for some different entity.\n\t(Sprint_Node_Actual, case N_Derived_Type_Definition): When an interface\n\tlist is precent (following the parent subtype indication), display\n\tappropriate \"and\" keyword.\n\n\t* itypes.adb: Remove unnecessary calls to Init_Size_Align and Init_Esize\n\tRemove unnecessary calls to Init_Size_Align and Init_Esize.\n\tAdd notes on use of Parent field of an Itype\n\nFrom-SVN: r134037", "tree": {"sha": "515e6f90b38a44f7dfc1af3edc330190b992bc3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/515e6f90b38a44f7dfc1af3edc330190b992bc3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99cf6c77d0eee00479041711a73b8514c4ffe924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99cf6c77d0eee00479041711a73b8514c4ffe924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99cf6c77d0eee00479041711a73b8514c4ffe924", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99cf6c77d0eee00479041711a73b8514c4ffe924/comments", "author": null, "committer": null, "parents": [{"sha": "64f7d845ef88a5e7e0fd80fd6cdeb8393d230291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64f7d845ef88a5e7e0fd80fd6cdeb8393d230291", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64f7d845ef88a5e7e0fd80fd6cdeb8393d230291"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "59155dc9d52834689a5f5ffaf41db7c0f606f60b", "filename": "gcc/ada/itypes.adb", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99cf6c77d0eee00479041711a73b8514c4ffe924/gcc%2Fada%2Fitypes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99cf6c77d0eee00479041711a73b8514c4ffe924/gcc%2Fada%2Fitypes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fitypes.adb?ref=99cf6c77d0eee00479041711a73b8514c4ffe924", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,6 +29,7 @@ with Sem;      use Sem;\n with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n with Targparm; use Targparm;\n+with Uintp;    use Uintp;\n \n package body Itypes is\n \n@@ -47,17 +48,24 @@ package body Itypes is\n       Typ : Entity_Id;\n \n    begin\n+      --  Should comment setting of Public_Status here ???\n+\n       if Related_Id = Empty then\n          Typ := New_Internal_Entity (Ekind, Scope_Id, Sloc (Related_Nod), 'T');\n          Set_Public_Status (Typ);\n \n       else\n-         Typ := New_External_Entity\n-           (Ekind, Scope_Id, Sloc (Related_Nod), Related_Id, Suffix,\n-               Suffix_Index, 'T');\n+         Typ :=\n+           New_External_Entity\n+             (Ekind, Scope_Id, Sloc (Related_Nod), Related_Id, Suffix,\n+              Suffix_Index, 'T');\n       end if;\n \n-      Init_Size_Align (Typ);\n+      --  Make sure Esize (Typ) was properly initialized, it should be since\n+      --  New_Internal_Entity/New_External_Entity call Init_Size_Align.\n+\n+      pragma Assert (Esize (Typ) = Uint_0);\n+\n       Set_Etype (Typ, Any_Type);\n       Set_Is_Itype (Typ);\n       Set_Associated_Node_For_Itype (Typ, Related_Nod);\n@@ -95,7 +103,6 @@ package body Itypes is\n \n       Set_Directly_Designated_Type (I_Typ, Directly_Designated_Type (T));\n       Set_Etype                    (I_Typ, T);\n-      Init_Size_Align              (I_Typ);\n       Set_Depends_On_Private       (I_Typ, Depends_On_Private (T));\n       Set_Is_Public                (I_Typ, Is_Public          (T));\n       Set_From_With_Type           (I_Typ, From_With_Type     (T));"}, {"sha": "c00eca4b29f2bd5d867f2b0e54715dff7f0cae71", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99cf6c77d0eee00479041711a73b8514c4ffe924/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99cf6c77d0eee00479041711a73b8514c4ffe924/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=99cf6c77d0eee00479041711a73b8514c4ffe924", "patch": "@@ -35,6 +35,7 @@ with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Output;   use Output;\n with Rtsfind;  use Rtsfind;\n+with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n with Sinput.D; use Sinput.D;\n@@ -1331,6 +1332,7 @@ package body Sprint is\n             Sprint_Node (Subtype_Indication (Node));\n \n             if Present (Interface_List (Node)) then\n+               Write_Str_With_Col_Check (\" and \");\n                Sprint_And_List (Interface_List (Node));\n                Write_Str_With_Col_Check (\" with \");\n             end if;\n@@ -3664,10 +3666,12 @@ package body Sprint is\n                Write_Char (' ');\n             end loop;\n \n-            --  If we have a constructed declaration, print it\n-\n-            if Present (P) and then Nkind (P) in N_Declaration then\n+            --  If we have a constructed declaration for the itype, print it\n \n+            if Present (P)\n+              and then Nkind (P) in N_Declaration\n+              and then Defining_Entity (P) = Typ\n+            then\n                --  We must set Itype_Printed true before the recursive call to\n                --  print the node, otherwise we get an infinite recursion!\n "}]}