{"sha": "973c37951e0ad993e5891563fd4c3b8edf5b2ef0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTczYzM3OTUxZTBhZDk5M2U1ODkxNTYzZmQ0YzNiOGVkZjViMmVmMA==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@spamcop.net", "date": "2010-11-12T20:52:33Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-11-12T20:52:33Z"}, "message": "re PR target/46435 (cris-elf --enable-werror-always build fails)\n\n\tPR target/46435\n\t* config/cris/cris.c (saved_regs_mentioned): Delete.\n\t(cris_reload_address_legitimized): Cast itype to enum reload_type.\n\tRemove unused variable op0p.\n\t(cris_rtx_costs): Cast argument 2 to rtx_cost to enum rtx_code.\n\t(cris_emit_movem_store): Use add_reg_note.\n\nFrom-SVN: r166673", "tree": {"sha": "024f2e3395d53c5010e402da14f1d92ee9c34fb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/024f2e3395d53c5010e402da14f1d92ee9c34fb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/973c37951e0ad993e5891563fd4c3b8edf5b2ef0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973c37951e0ad993e5891563fd4c3b8edf5b2ef0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/973c37951e0ad993e5891563fd4c3b8edf5b2ef0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973c37951e0ad993e5891563fd4c3b8edf5b2ef0/comments", "author": null, "committer": null, "parents": [{"sha": "046845defcda6dc1cc579be0a2ccf9931df3e6bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046845defcda6dc1cc579be0a2ccf9931df3e6bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/046845defcda6dc1cc579be0a2ccf9931df3e6bb"}], "stats": {"total": 75, "additions": 13, "deletions": 62}, "files": [{"sha": "8a1707b726b9261f548c3900d4c2f23968933ce5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/973c37951e0ad993e5891563fd4c3b8edf5b2ef0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/973c37951e0ad993e5891563fd4c3b8edf5b2ef0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=973c37951e0ad993e5891563fd4c3b8edf5b2ef0", "patch": "@@ -6,6 +6,13 @@\n \t(xtensa_function_arg_1): De-constify cum.\n \t(xtensa_expand_prologue): Use add_reg_note.\n \n+\tPR target/46435\n+\t* config/cris/cris.c (saved_regs_mentioned): Delete.\n+\t(cris_reload_address_legitimized): Cast itype to enum reload_type.\n+\tRemove unused variable op0p.\n+\t(cris_rtx_costs): Cast argument 2 to rtx_cost to enum rtx_code.\n+\t(cris_emit_movem_store): Use add_reg_note.\n+\n 2010-11-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* function.c (expand_function_end): Set the locator of the prologue on"}, {"sha": "f3bda2210207033ddcf052c047e01492855ca077", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 6, "deletions": 62, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/973c37951e0ad993e5891563fd4c3b8edf5b2ef0/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/973c37951e0ad993e5891563fd4c3b8edf5b2ef0/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=973c37951e0ad993e5891563fd4c3b8edf5b2ef0", "patch": "@@ -103,8 +103,6 @@ static void cris_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode,\n \n static int cris_initial_frame_pointer_offset (void);\n \n-static int saved_regs_mentioned (rtx);\n-\n static void cris_operand_lossage (const char *, rtx);\n \n static int cris_reg_saved_in_regsave_area  (unsigned int, bool);\n@@ -680,57 +678,6 @@ cris_reg_saved_in_regsave_area (unsigned int regno, bool got_really_used)\n \t    || regno == EH_RETURN_DATA_REGNO (3)));\n }\n \n-/* Return nonzero if there are regs mentioned in the insn that are not all\n-   in the call_used regs.  This is part of the decision whether an insn\n-   can be put in the epilogue.  */\n-\n-static int\n-saved_regs_mentioned (rtx x)\n-{\n-  int i;\n-  const char *fmt;\n-  RTX_CODE code;\n-\n-  /* Mainly stolen from refers_to_regno_p in rtlanal.c.  */\n-\n-  code = GET_CODE (x);\n-\n-  switch (code)\n-    {\n-    case REG:\n-      i = REGNO (x);\n-      return !call_used_regs[i];\n-\n-    case SUBREG:\n-      /* If this is a SUBREG of a hard reg, we can see exactly which\n-\t registers are being modified.  Otherwise, handle normally.  */\n-      i = REGNO (SUBREG_REG (x));\n-      return !call_used_regs[i];\n-\n-    default:\n-      ;\n-    }\n-\n-  fmt = GET_RTX_FORMAT (code);\n-  for (i = GET_RTX_LENGTH (code) - 1; i >= 0; i--)\n-    {\n-      if (fmt[i] == 'e')\n-\t{\n-\t  if (saved_regs_mentioned (XEXP (x, i)))\n-\t    return 1;\n-\t}\n-      else if (fmt[i] == 'E')\n-\t{\n-\t  int j;\n-\t  for (j = XVECLEN (x, i) - 1; j >=0; j--)\n-\t    if (saved_regs_mentioned (XEXP (x, i)))\n-\t      return 1;\n-\t}\n-    }\n-\n-  return 0;\n-}\n-\n /* The PRINT_OPERAND worker.  */\n \n static void\n@@ -1335,9 +1282,8 @@ cris_reload_address_legitimized (rtx x,\n \t\t\t\t int itype,\n \t\t\t\t int ind_levels ATTRIBUTE_UNUSED)\n {\n-  enum reload_type type = itype;\n+  enum reload_type type = (enum reload_type) itype;\n   rtx op0, op1;\n-  rtx *op0p;\n   rtx *op1p;\n \n   if (GET_CODE (x) != PLUS)\n@@ -1347,7 +1293,6 @@ cris_reload_address_legitimized (rtx x,\n     return false;\n \n   op0 = XEXP (x, 0);\n-  op0p = &XEXP (x, 0);\n   op1 = XEXP (x, 1);\n   op1p = &XEXP (x, 1);\n \n@@ -1946,8 +1891,9 @@ cris_rtx_costs (rtx x, int code, int outer_code, int *total,\n           && !CONST_INT_P (XEXP (x, 0))\n           && !CRIS_CONST_OK_FOR_LETTER_P (INTVAL (XEXP (x, 1)), 'I'))\n \t{\n-\t  *total = (rtx_cost (XEXP (x, 0), outer_code, speed) + 2\n-\t\t    + 2 * GET_MODE_NUNITS (GET_MODE (XEXP (x, 0))));\n+\t  *total\n+\t    = (rtx_cost (XEXP (x, 0), (enum rtx_code) outer_code, speed) + 2\n+\t       + 2 * GET_MODE_NUNITS (GET_MODE (XEXP (x, 0))));\n \t  return true;\n \t}\n       return false;\n@@ -1958,7 +1904,7 @@ cris_rtx_costs (rtx x, int code, int outer_code, int *total,\n       /* fall through */\n \n     case ZERO_EXTEND: case SIGN_EXTEND:\n-      *total = rtx_cost (XEXP (x, 0), outer_code, speed);\n+      *total = rtx_cost (XEXP (x, 0), (enum rtx_code) outer_code, speed);\n       return true;\n \n     default:\n@@ -3539,9 +3485,7 @@ cris_emit_movem_store (rtx dest, rtx nregs_rtx, int increment,\n \t    XVECEXP (seq, 0, i)\n \t      = copy_rtx (XVECEXP (PATTERN (insn), 0, i + 1));\n \t  XVECEXP (seq, 0, nregs) = copy_rtx (XVECEXP (PATTERN (insn), 0, 1));\n-\t  REG_NOTES (insn)\n-\t    = gen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR, seq,\n-\t\t\t\t REG_NOTES (insn));\n+\t  add_reg_note (insn, REG_FRAME_RELATED_EXPR, seq);\n \t}\n \n       RTX_FRAME_RELATED_P (insn) = 1;"}]}