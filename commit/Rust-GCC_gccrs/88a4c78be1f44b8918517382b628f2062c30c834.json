{"sha": "88a4c78be1f44b8918517382b628f2062c30c834", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhhNGM3OGJlMWY0NGI4OTE4NTE3MzgyYjYyOGYyMDYyYzMwYzgzNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-09-21T10:48:30Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-09-21T10:48:30Z"}, "message": "stl_algobase.h (max, min): Use conditional operator.\n\n2012-09-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/stl_algobase.h (max, min): Use conditional operator.\n\nFrom-SVN: r191608", "tree": {"sha": "4921a33b3ba95e8540d34823350cba724599f814", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4921a33b3ba95e8540d34823350cba724599f814"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88a4c78be1f44b8918517382b628f2062c30c834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a4c78be1f44b8918517382b628f2062c30c834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a4c78be1f44b8918517382b628f2062c30c834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a4c78be1f44b8918517382b628f2062c30c834/comments", "author": null, "committer": null, "parents": [{"sha": "a3e531ec34849e984c2208083ad4663d8632902e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3e531ec34849e984c2208083ad4663d8632902e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3e531ec34849e984c2208083ad4663d8632902e"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "82ac417aca3cc8e9305203a36aba3cdcac4de00e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a4c78be1f44b8918517382b628f2062c30c834/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a4c78be1f44b8918517382b628f2062c30c834/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=88a4c78be1f44b8918517382b628f2062c30c834", "patch": "@@ -1,3 +1,7 @@\n+2012-09-21  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/stl_algobase.h (max, min): Use conditional operator.\n+\n 2012-09-18  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/28811"}, {"sha": "3099d0d10f6c1a2272583b67d253878943b353e7", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88a4c78be1f44b8918517382b628f2062c30c834/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88a4c78be1f44b8918517382b628f2062c30c834/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=88a4c78be1f44b8918517382b628f2062c30c834", "patch": "@@ -195,10 +195,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       // concept requirements\n       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)\n-      //return __b < __a ? __b : __a;\n-      if (__b < __a)\n-\treturn __b;\n-      return __a;\n+\n+      return __b < __a ? __b : __a;\n     }\n \n   /**\n@@ -218,10 +216,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       // concept requirements\n       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)\n-      //return  __a < __b ? __b : __a;\n-      if (__a < __b)\n-\treturn __b;\n-      return __a;\n+\n+      return  __a < __b ? __b : __a;\n     }\n \n   /**\n@@ -238,12 +234,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Tp, typename _Compare>\n     inline const _Tp&\n     min(const _Tp& __a, const _Tp& __b, _Compare __comp)\n-    {\n-      //return __comp(__b, __a) ? __b : __a;\n-      if (__comp(__b, __a))\n-\treturn __b;\n-      return __a;\n-    }\n+    { return __comp(__b, __a) ? __b : __a; }\n \n   /**\n    *  @brief This does what you think it does.\n@@ -259,12 +250,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Tp, typename _Compare>\n     inline const _Tp&\n     max(const _Tp& __a, const _Tp& __b, _Compare __comp)\n-    {\n-      //return __comp(__a, __b) ? __b : __a;\n-      if (__comp(__a, __b))\n-\treturn __b;\n-      return __a;\n-    }\n+    { return __comp(__a, __b) ? __b : __a; }\n \n   // If _Iterator is a __normal_iterator return its base (a plain pointer,\n   // normally) otherwise return it untouched.  See copy, fill, ... "}]}