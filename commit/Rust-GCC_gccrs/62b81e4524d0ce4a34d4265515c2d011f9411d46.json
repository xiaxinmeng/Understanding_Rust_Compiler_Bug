{"sha": "62b81e4524d0ce4a34d4265515c2d011f9411d46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJiODFlNDUyNGQwY2U0YTM0ZDQyNjU1MTVjMmQwMTFmOTQxMWQ0Ng==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-10-06T07:56:16Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-10-06T07:56:16Z"}, "message": "re PR bootstrap/12512 (Pattern rule for %.dvi breaks make dvi in objc)\n\n\tPR bootstrap/12512\n\t* Makefile.in (info): Use double-colon rules.\n\t(dvi): Likewise.\n\t(generated-manpages): Likewise.\n\t* configure.in: Do not create lang.info, lang.dvi, or\n\tlang.generated-manpages hooks.\n\t* configure: Regenerated.\n\t* objc/Make-lang.in (objc.info): Remove.\n\t(objc.dvi): Remove.\n\t(objc.generated-manpages): Remove.\n\t* doc/sourcebuild.texi: Update description of info, dvi, and\n\tgenerated-manpages hooks.\n\n\t* Make-lang.in (ada.info): Replace with ...\n\t(info): ... this.\n\t(ada.dvi): Replace with ...\n\t(dvi): ... this.\n\n\t* Make-lang.in (c++.info): Remove.\n\t(c++.dvi): Remove.\n\t(c++.generated-manpages): Replace with ...\n\t(generated-manpages): ... this.\n\n\t* Make-lang.in (f77.info): Replace with ...\n\t(info): ... this.\n\t(f77.dvi): Replace with ...\n\t(dvi): ... this.\n\t(f77.generated-manpages): Replace with ...\n\t(generated-manpages): ... this.\n\n\t* Make-lang.in (java.info): Replace with ...\n\t(info): ... this.\n\t(java.dvi): Replace with ...\n\t(dvi): ... this.\n\t(java.generated-manpages): Replace with ...\n\n\t* Make-lang.in (treelang.info): Replace with ...\n\t(info): ... this.\n\t* Make-lang.in (treelang.dvi): Replace with ...\n\t(dvi): ... this.\n\nFrom-SVN: r72135", "tree": {"sha": "a6ed03e5d319bddddcfacd84da1a9b99744afbd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6ed03e5d319bddddcfacd84da1a9b99744afbd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62b81e4524d0ce4a34d4265515c2d011f9411d46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b81e4524d0ce4a34d4265515c2d011f9411d46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b81e4524d0ce4a34d4265515c2d011f9411d46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b81e4524d0ce4a34d4265515c2d011f9411d46/comments", "author": null, "committer": null, "parents": [{"sha": "1332e9512747ebcbc667d52dd5720fe9aaf483f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1332e9512747ebcbc667d52dd5720fe9aaf483f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1332e9512747ebcbc667d52dd5720fe9aaf483f7"}], "stats": {"total": 131, "additions": 87, "deletions": 44}, "files": [{"sha": "bd0f0053388af60583a7bed9e6e1fb4222ab21f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -1,3 +1,18 @@\n+2003-10-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR bootstrap/12512\n+\t* Makefile.in (info): Use double-colon rules.\n+\t(dvi): Likewise.\n+\t(generated-manpages): Likewise.\n+\t* configure.in: Do not create lang.info, lang.dvi, or\n+\tlang.generated-manpages hooks.\n+\t* configure: Regenerated.\n+\t* objc/Make-lang.in (objc.info): Remove.\n+\t(objc.dvi): Remove.\n+\t(objc.generated-manpages): Remove.\n+\t* doc/sourcebuild.texi: Update description of info, dvi, and\n+\tgenerated-manpages hooks.\n+\n 2003-10-06  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md: Merge mips16 lw/srl pattern with its splitter.\n@@ -57,6 +72,7 @@\n \t* config/mn10300/mn10300.md: Likewise.\n \t* config/sh/sh.h: Likewise.\n \n+>>>>>>> 2.1294\n 2003-10-05  Richard Henderson  <rth@redhat.com>\n \n \t* tree-inline.c (remap_type): New."}, {"sha": "bdd8dd6b9d7ab05111e6a0965788e3e87676ebbc", "filename": "gcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -912,15 +912,15 @@ LIB2_DIVMOD_FUNCS = _divdi3 _moddi3 _udivdi3 _umoddi3 _udiv_w_sdiv _udivmoddi4\n # The following targets define the interface between us and the languages.\n #\n # all.cross, start.encap, rest.encap,\n-# info, dvi,\n # install-normal, install-common, install-info, install-man,\n # uninstall,\n # mostlyclean, clean, distclean, extraclean, maintainer-clean,\n # stage1, stage2, stage3, stage4\n #\n-# Each language is linked in with a series of hooks (since we can't use `::'\n-# targets).  The name of each hooked is \"lang.${target_name}\" (eg: lang.info).\n-# Configure computes and adds these here.\n+# Each language is linked in with a series of hooks.  The name of each\n+# hooked is \"lang.${target_name}\" (eg: lang.info).  Configure computes\n+# and adds these here.  We use double-colon rules for some of the hooks;\n+# double-colon rules should be preferred for any new hooks.\n \n # language hooks, generated by configure\n @language_hooks@\n@@ -2593,7 +2593,7 @@ stmp-docobjdir:\n \t$(STAMP) stmp-docobjdir\n \n doc: $(BUILD_INFO) $(GENERATED_MANPAGES) gccbug\n-info: $(docobjdir)/cpp.info $(docobjdir)/gcc.info $(docobjdir)/gccint.info $(docobjdir)/gccinstall.info lang.info $(docobjdir)/cppinternals.info\n+info:: $(docobjdir)/cpp.info $(docobjdir)/gcc.info $(docobjdir)/gccint.info $(docobjdir)/gccinstall.info $(docobjdir)/cppinternals.info\n \n TEXI_CPP_FILES = $(docdir)/cpp.texi $(docdir)/include/fdl.texi \\\n   $(docdir)/cppenv.texi $(docdir)/cppopts.texi\n@@ -2637,7 +2637,7 @@ $(docobjdir)/%.info: $(docdir)/%.texi stmp-docobjdir\n \t$(MAKEINFO) $(MAKEINFOFLAGS) -I $(docdir) -I $(docdir)/include \\\n \t  -o $@ $<\n \n-dvi: gcc.dvi gccint.dvi gccinstall.dvi cpp.dvi lang.dvi cppinternals.dvi\n+dvi:: gcc.dvi gccint.dvi gccinstall.dvi cpp.dvi cppinternals.dvi\n \n %.dvi: $(docdir)/%.texi\n \t$(TEXI2DVI) -I $(docdir) -I $(docdir)/include $<\n@@ -2646,9 +2646,9 @@ gccinstall.dvi:\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(TEXI2DVI) -I $$s/doc -I $$s/doc/include -o $@ $$s/doc/install.texi\n \n-generated-manpages: $(docobjdir)/gcov.1 $(docobjdir)/cpp.1 $(docobjdir)/gcc.1 \\\n-\t$(docobjdir)/gfdl.7 $(docobjdir)/gpl.7 $(docobjdir)/fsf-funding.7 \\\n-\tlang.generated-manpages\n+generated-manpages:: $(docobjdir)/gcov.1 $(docobjdir)/cpp.1 \\\n+\t$(docobjdir)/gcc.1 $(docobjdir)/gfdl.7 $(docobjdir)/gpl.7 \\\n+\t$(docobjdir)/fsf-funding.7\n \n $(docobjdir)/gcov.1: $(docdir)/gcov.texi\n $(docobjdir)/cpp.1: $(docdir)/cpp.texi $(docdir)/cppenv.texi \\"}, {"sha": "746ab8acceba2e26a3a3bf6adbba71695dab72c6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -1,3 +1,10 @@\n+2003-10-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Make-lang.in (ada.info): Replace with ...\n+\t(info): ... this.\n+\t(ada.dvi): Replace with ...\n+\t(dvi): ... this.\n+\n 2003-09-29  Zack Weinberg  <zack@codesourcery.com>\n \n \t* trans.c (gigi): Use REAL_ARITHMETIC, not REAL_VALUE_ATOF, to"}, {"sha": "955eda6c0f8c69b2d090d311009f5a2ef22c11b2", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -23,7 +23,6 @@\n # Each language makefile fragment must provide the following targets:\n #\n # foo.all.cross, foo.start.encap, foo.rest.encap,\n-# foo.info, foo.dvi,\n # foo.install-normal, foo.install-common, foo.install-info, foo.install-man,\n # foo.uninstall, foo.mostlyclean, foo.clean, foo.distclean, foo.extraclean,\n # foo.maintainer-clean, foo.stage1, foo.stage2, foo.stage3, foo.stage4\n@@ -394,7 +393,7 @@ $(srcdir)/ada/gnat-style.info : $(srcdir)/ada/gnat-style.texi \\\n \t$(srcdir)/doc/include/fdl.texi\n \tcd $(srcdir) && $(MAKEINFO) -I doc/include -I ada -o ada/gnat-style.info ada/gnat-style.texi\n \n-ada.info: $(srcdir)/ada/gnat_ug_vms.info $(srcdir)/ada/gnat_ug_wnt.info \\\n+info:: $(srcdir)/ada/gnat_ug_vms.info $(srcdir)/ada/gnat_ug_wnt.info \\\n \t$(srcdir)/ada/gnat_ug_unx.info $(srcdir)/ada/gnat_ug_vxw.info \\\n \t$(srcdir)/ada/gnat_rm.info $(srcdir)/ada/gnat-style.info\n \n@@ -455,11 +454,10 @@ ada/gnat-style.dvi : $(srcdir)/ada/gnat-style.texi \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; \\\n \tcd ada && $(TEXI2DVI) -c -I $$s/doc/include -o gnat-style.dvi $$s/ada/gnat-style.texi\n \n-ada.dvi: ada/gnat_ug_vms.dvi ada/gnat_ug_wnt.dvi \\\n+dvi:: ada/gnat_ug_vms.dvi ada/gnat_ug_wnt.dvi \\\n \tada/gnat_ug_unx.dvi ada/gnat_ug_vxw.dvi \\\n \tada/gnat_rm.dvi ada/gnat-style.dvi\n \n-ada.generated-manpages:\n \f\n # Install hooks:\n # gnat1 is installed elsewhere as part of $(COMPILERS)."}, {"sha": "7277cbcde05ad4e1b9a9d1a4e4eccd319be28b57", "filename": "gcc/configure", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -2375,7 +2375,7 @@ fi\n \n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -7730,13 +7730,12 @@ do\n \t\tcheck_languages=\"$check_languages check-$language\"\n done\n \n-# Since we can't use `::' targets, we link each language in\n-# with a set of hooks, reached indirectly via lang.${target}.\n+# We link each language in with a set of hooks, reached indirectly via\n+# lang.${target}.\n \n rm -f Make-hooks\n touch Make-hooks\n target_list=\"all.build all.cross start.encap rest.encap tags \\\n-\tinfo dvi generated-manpages \\\n \tinstall-normal install-common install-info install-man \\\n \tuninstall \\\n \tmostlyclean clean distclean extraclean maintainer-clean \\"}, {"sha": "6b72a05340f558bc5edba99c5f0de0b4bf7d22c6", "filename": "gcc/configure.in", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -2820,13 +2820,12 @@ do\n \t\tcheck_languages=\"$check_languages check-$language\"\n done\n \n-# Since we can't use `::' targets, we link each language in\n-# with a set of hooks, reached indirectly via lang.${target}.\n+# We link each language in with a set of hooks, reached indirectly via\n+# lang.${target}.\n \n rm -f Make-hooks\n touch Make-hooks\n target_list=\"all.build all.cross start.encap rest.encap tags \\\n-\tinfo dvi generated-manpages \\\n \tinstall-normal install-common install-info install-man \\\n \tuninstall \\\n \tmostlyclean clean distclean extraclean maintainer-clean \\"}, {"sha": "2895c0e6434382f8737eb53fbc2f085c995dc41c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -1,3 +1,10 @@\n+2003-10-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Make-lang.in (c++.info): Remove.\n+\t(c++.dvi): Remove.\n+\t(c++.generated-manpages): Replace with ...\n+\t(generated-manpages): ... this.\n+\n 2003-10-03  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* decl.c (struct cp_binding_level): Move to name-lookup.h"}, {"sha": "a975273a4dce225807ca93cbe82cd8f616f1a8c0", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -23,7 +23,6 @@\n # Each language makefile fragment must provide the following targets:\n #\n # foo.all.build, foo.all.cross, foo.start.encap, foo.rest.encap,\n-# foo.info, foo.dvi,\n # foo.install-normal, foo.install-common, foo.install-info, foo.install-man,\n # foo.uninstall,\n # foo.mostlyclean, foo.clean, foo.distclean, foo.extraclean,\n@@ -117,9 +116,7 @@ c++.rest.encap:\n c++.tags: force\n \tcd $(srcdir)/cp; etags *.c *.h\n \n-c++.info: \n-c++.dvi:\n-c++.generated-manpages: cp/g++.1\n+generated-manpages:: cp/g++.1\n \n #\f\n # Install hooks:"}, {"sha": "e4a1bae2ad144e758caa92b58a85ce20424388ae", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -548,7 +548,10 @@ setting of @code{language} in @file{config-lang.in}) for the following\n values of @code{@var{hook}}, and any other Makefile rules required to\n build those targets (which may if necessary use other Makefiles\n specified in @code{outputs} in @file{config-lang.in}, although this is\n-deprecated).\n+deprecated).  Some hooks are defined by using a double-colon rule for\n+@code{@var{hook}}, rather than by using a target of form\n+@code{@var{lang}.@var{hook}}.  These hooks are called ``double-colon\n+hooks'' below.\n \n @table @code\n @item all.build\n@@ -563,17 +566,20 @@ in the source tree.\n Build info documentation for the front end, in the source directory.\n This target is only called by @samp{make bootstrap} if a suitable\n version of @command{makeinfo} is available, so does not need to check\n-for this, and should fail if an error occurs.\n+for this, and should fail if an error occurs.  This hook is a\n+double-colon hook.\n @item dvi\n Build DVI documentation for the front end, in the build directory.\n This should be done using @code{$(TEXI2DVI)}, with appropriate\n @option{-I} arguments pointing to directories of included files.\n+This hook is a double-colon hook.\n @item generated-manpages\n Build generated man pages for the front end from Texinfo manuals\n (@pxref{Man Page Generation}), in the source directory.  This target\n is only called if the necessary tools are available, but should ignore\n errors so as not to stop the build if errors occur; man pages are\n optional and the tools involved may be installed in a broken way.\n+This hook is a double-colon hook.\n @item install-normal\n FIXME: what is this target for?\n @item install-common"}, {"sha": "281e997dd040c15c8f06b0eadbb5be83c5c7e1c0", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -1,3 +1,12 @@\n+2003-10-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Make-lang.in (f77.info): Replace with ...\n+\t(info): ... this.\n+\t(f77.dvi): Replace with ...\n+\t(dvi): ... this.\n+\t(f77.generated-manpages): Replace with ...\n+\t(generated-manpages): ... this.\n+\n 2003-09-29  Zack Weinberg  <zack@codesourcery.com>\n \n \t* target.c (FFETARGET_ATOF_): Delete."}, {"sha": "f6e7d0269bfbe79da655e6ec022c4770b96e0692", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -22,7 +22,6 @@\n # Each language makefile fragment must provide the following targets:\n #\n # foo.all.build, foo.all.cross, foo.start.encap, foo.rest.encap,\n-# foo.info, foo.dvi,\n # foo.install-normal, foo.install-common, foo.install-info, foo.install-man,\n # foo.uninstall,\n # foo.mostlyclean, foo.clean, foo.distclean, foo.extraclean,\n@@ -149,9 +148,9 @@ f77.rest.encap:\n f77.tags: force\n \tcd $(srcdir)/f; etags *.c *.h\n \n-f77.info: $(srcdir)/f/g77.info\n-f77.dvi: f/g77.dvi\n-f77.generated-manpages: $(srcdir)/f/g77.1\n+info:: $(srcdir)/f/g77.info\n+dvi:: f/g77.dvi\n+generated-manpages:: $(srcdir)/f/g77.1\n \n # g77 documentation.\n $(srcdir)/f/g77.info: $(srcdir)/f/g77.texi $(srcdir)/f/bugs.texi \\"}, {"sha": "25e70c2578b82296f6b4fed98c5cd5aa89fc96f7", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -1,3 +1,11 @@\n+2003-10-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Make-lang.in (java.info): Replace with ...\n+\t(info): ... this.\n+\t(java.dvi): Replace with ...\n+\t(dvi): ... this.\n+\t(java.generated-manpages): Replace with ...\n+\n 2003-10-03  Kelley Cook  <kelleycook@wideopenwest.com>\n \n \t* builtins.c, jcf.h, jvspec.c: Remove PARAMS macros."}, {"sha": "aa785521155a38952ddf468e89f73c98c29ed0db", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -27,7 +27,6 @@\n # Each language makefile fragment must provide the following targets:\n #\n # foo.all.build, foo.all.cross, foo.start.encap, foo.rest.encap,\n-# foo.info, foo.dvi,\n # foo.install-normal, foo.install-common, foo.install-info, foo.install-man,\n # foo.uninstall,\n # foo.mostlyclean, foo.clean, foo.distclean, foo.extraclean,\n@@ -161,9 +160,9 @@ java.rest.encap:\n java.tags: force\n \tcd $(srcdir)/java; etags *.y *.c *.h --language=none --regex='/DEFTREECODE [(]\\([A-Z_]+\\)/\\1/' java-tree.def\n \n-java.info: $(srcdir)/java/gcj.info\n-java.dvi: java/gcj.dvi\n-java.generated-manpages: $(srcdir)/java/gcj.1 $(srcdir)/java/gcjh.1 \\\n+info:: $(srcdir)/java/gcj.info\n+dvi:: java/gcj.dvi\n+generated-manpages:: $(srcdir)/java/gcj.1 $(srcdir)/java/gcjh.1 \\\n \t$(srcdir)/java/jv-scan.1 $(srcdir)/java/jcf-dump.1 \\\n \t$(srcdir)/java/gij.1 $(srcdir)/java/jv-convert.1 \\\n \t$(srcdir)/java/rmic.1 $(srcdir)/java/rmiregistry.1"}, {"sha": "46df231d2403ae32e3ea4245f39031368dec1c99", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -23,7 +23,6 @@\n # Each language makefile fragment must provide the following targets:\n #\n # foo.all.build, foo.all.cross, foo.start.encap, foo.rest.encap,\n-# foo.info, foo.dvi,\n # foo.install-normal, foo.install-common, foo.install-info, foo.install-man,\n # foo.uninstall,\n # foo.mostlyclean, foo.clean, foo.distclean, foo.extraclean,\n@@ -105,10 +104,6 @@ objc.rest.encap:\n objc.tags: force\n \tcd $(srcdir)/objc; etags *.y *.c *.h\n \n-objc.info:\n-objc.dvi:\n-objc.generated-manpages:\n-\n #\f\n # Install hooks:\n # cc1obj is installed elsewhere as part of $(COMPILERS)."}, {"sha": "371336deaed2e496e6fb60a7842b695350821c3f", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -1,3 +1,10 @@\n+2003-10-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Make-lang.in (treelang.info): Replace with ...\n+\t(info): ... this.\n+\t* Make-lang.in (treelang.dvi): Replace with ...\n+\t(dvi): ... this.\n+\n 2003-09-21  Richard Henderson  <rth@redhat.com>\n \n \t* treetree.c: Revert."}, {"sha": "8974dddf9b5c17b94771eb9f0348fdd64ec0dc63", "filename": "gcc/treelang/Make-lang.in", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Ftreelang%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b81e4524d0ce4a34d4265515c2d011f9411d46/gcc%2Ftreelang%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FMake-lang.in?ref=62b81e4524d0ce4a34d4265515c2d011f9411d46", "patch": "@@ -24,7 +24,6 @@\n # Each language makefile fragment must provide the following targets:\n #\n # foo.all.build, foo.all.cross, foo.start.encap, foo.rest.encap,\n-# foo.info, foo.dvi,\n # foo.install-normal, foo.install-common, foo.install-info, foo.install-man,\n # foo.uninstall, foo.distdir,\n # foo.mostlyclean, foo.clean, foo.distclean, foo.extraclean,\n@@ -145,7 +144,7 @@ treelang.tags: force\n \tcd $(srcdir)/treelang; etags *.y *.l *.c *.h\n \n .phony:treelang.info\n-treelang.info: $(srcdir)/treelang/treelang.info\n+info:: $(srcdir)/treelang/treelang.info\n \n $(srcdir)/treelang/treelang.info: $(srcdir)/treelang/treelang.texi \\\n \t $(srcdir)/doc/include/gcc-common.texi \\\n@@ -155,16 +154,14 @@ $(srcdir)/treelang/treelang.info: $(srcdir)/treelang/treelang.texi \\\n \tcd $(srcdir) && $(MAKEINFO) $(MAKEINFOFLAGS) -Idoc/include \\\n \t-o treelang/treelang.info treelang/treelang.texi\n \n-treelang.dvi: $(srcdir)/treelang/treelang.texi \\\n+dvi:: $(srcdir)/treelang/treelang.texi \\\n \t $(srcdir)/doc/include/gcc-common.texi \\\n \t $(srcdir)/doc/include/gpl.texi \\\n \t $(srcdir)/doc/include/fdl.texi \\\n \t $(srcdir)/doc/include/funding.texi\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tcd treelang && $(TEXI2DVI) -I $$s/doc/include $$s/treelang/treelang.texi\n \n-treelang.generated-manpages:\n-\n #\f\n # Install hooks:\n "}]}