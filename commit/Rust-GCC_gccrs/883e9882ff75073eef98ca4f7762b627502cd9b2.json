{"sha": "883e9882ff75073eef98ca4f7762b627502cd9b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgzZTk4ODJmZjc1MDczZWVmOThjYTRmNzc2MmI2Mjc1MDJjZDliMg==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@redhat.com", "date": "2001-03-28T19:22:05Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-03-28T19:22:05Z"}, "message": "re PR java/2066 (Source parser segfault in resolve_package)\n\n2001-03-21  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* parse.y (qualify_ambiguous_name): Broaden `length'\n\trecognition. Help MODIFY_EXPR be resolved as expression names.\n\tFixes PR java/2066. Fixes PR java/2400.\n\n(http://gcc.gnu.org/ml/gcc-patches/2001-03/msg01935.html)\n\nFrom-SVN: r40938", "tree": {"sha": "f9d7e07fcb132575fa3d5c3c97c2974472bee646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9d7e07fcb132575fa3d5c3c97c2974472bee646"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/883e9882ff75073eef98ca4f7762b627502cd9b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883e9882ff75073eef98ca4f7762b627502cd9b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/883e9882ff75073eef98ca4f7762b627502cd9b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883e9882ff75073eef98ca4f7762b627502cd9b2/comments", "author": null, "committer": null, "parents": [{"sha": "0f5c1ee4098e4fbd96432dd0b481a6b589229c6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f5c1ee4098e4fbd96432dd0b481a6b589229c6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f5c1ee4098e4fbd96432dd0b481a6b589229c6e"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "abfc48236096ba9ba61720743c10cc8d5be09e68", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883e9882ff75073eef98ca4f7762b627502cd9b2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883e9882ff75073eef98ca4f7762b627502cd9b2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=883e9882ff75073eef98ca4f7762b627502cd9b2", "patch": "@@ -1,3 +1,9 @@\n+2001-03-21  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* parse.y (qualify_ambiguous_name): Broaden `length'\n+\trecognition. Help MODIFY_EXPR be resolved as expression names.\n+\tFixes PR java/2066. Fixes PR java/2400.\n+\n 2001-03-28  Jeffrey Oldham  <oldham@codesourcery.com>\n \n \t* jvgenmain.c (do_mangle_classname): End string constant with '\\0'."}, {"sha": "04c9e90de72bb3d03f7e803cdac1a23b61997dab", "filename": "gcc/java/parse.y", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883e9882ff75073eef98ca4f7762b627502cd9b2/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883e9882ff75073eef98ca4f7762b627502cd9b2/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=883e9882ff75073eef98ca4f7762b627502cd9b2", "patch": "@@ -10891,7 +10891,7 @@ qualify_ambiguous_name (id)\n      expression name. If we saw a NEW_ARRAY_EXPR before and want to\n      address length, it is OK. */\n   else if ((decl = lookup_field_wrapper (ptr_type, name))\n-\t   || (new_array_found && name == length_identifier_node))\n+\t   || name == length_identifier_node)\n     {\n       RESOLVE_EXPRESSION_NAME_P (qual_wfl) = 1;\n       QUAL_RESOLUTION (qual) = (new_array_found ? NULL_TREE : decl);\n@@ -10916,7 +10916,8 @@ qualify_ambiguous_name (id)\n   /* Method call, array references and cast are expression name */\n   else if (TREE_CODE (QUAL_WFL (qual)) == CALL_EXPR\n \t   || TREE_CODE (QUAL_WFL (qual)) == ARRAY_REF\n-\t   || TREE_CODE (QUAL_WFL (qual)) == CONVERT_EXPR)\n+\t   || TREE_CODE (QUAL_WFL (qual)) == CONVERT_EXPR\n+\t   || TREE_CODE (QUAL_WFL (qual)) == MODIFY_EXPR)\n     RESOLVE_EXPRESSION_NAME_P (qual_wfl) = 1;\n \n   /* Check here that NAME isn't declared by more than one"}]}