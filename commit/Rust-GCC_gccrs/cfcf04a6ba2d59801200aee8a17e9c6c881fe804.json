{"sha": "cfcf04a6ba2d59801200aee8a17e9c6c881fe804", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZjZjA0YTZiYTJkNTk4MDEyMDBhZWU4YTE3ZTljNmM4ODFmZTgwNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-19T23:24:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-19T23:24:27Z"}, "message": "(find_reg): Add comment about nonlocal labels.\n\nFrom-SVN: r3284", "tree": {"sha": "602aef1fa2aefedc1ad48f0b398316529f9da629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/602aef1fa2aefedc1ad48f0b398316529f9da629"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfcf04a6ba2d59801200aee8a17e9c6c881fe804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfcf04a6ba2d59801200aee8a17e9c6c881fe804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfcf04a6ba2d59801200aee8a17e9c6c881fe804", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfcf04a6ba2d59801200aee8a17e9c6c881fe804/comments", "author": null, "committer": null, "parents": [{"sha": "e19f519283e51a3fa1ef8b29008c7b4ad297e99b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19f519283e51a3fa1ef8b29008c7b4ad297e99b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e19f519283e51a3fa1ef8b29008c7b4ad297e99b"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "967526e3c30ae4a04b282a2abf50408190e20e9a", "filename": "gcc/global.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcf04a6ba2d59801200aee8a17e9c6c881fe804/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcf04a6ba2d59801200aee8a17e9c6c881fe804/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=cfcf04a6ba2d59801200aee8a17e9c6c881fe804", "patch": "@@ -1040,7 +1040,11 @@ find_reg (allocno, losers, alt_regs_p, accept_call_clobbered, retrying)\n     }\n  no_prefs:\n \n-  /* If we haven't succeeded yet, try with caller-saves.  */\n+  /* If we haven't succeeded yet, try with caller-saves. \n+     We need not check to see if the current function has nonlocal\n+     labels because we don't put any pseudos that are live over calls in\n+     registers in that case.  */\n+\n   if (flag_caller_saves && best_reg < 0)\n     {\n       /* Did not find a register.  If it would be profitable to"}]}