{"sha": "37bd08f8df0003521d3da3b37a25235fd421bce6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdiZDA4ZjhkZjAwMDM1MjFkM2RhM2IzN2EyNTIzNWZkNDIxYmNlNg==", "commit": {"author": {"name": "Hartmut Penner", "email": "hpenner@de.ibm.com", "date": "2003-03-11T09:17:38Z"}, "committer": {"name": "Hartmut Penner", "email": "hpenner@gcc.gnu.org", "date": "2003-03-11T09:17:38Z"}, "message": "df.c (read_modify_subreg_p): Change from static to global.\n\n        * df.c (read_modify_subreg_p): Change from static to global.\n        * df.h (read_modify_subreg_p): Add prototype.\n        * sched-deps.c (sched_analyze_1): Generate true dependency for\n        strict_low_part, certain subregs and zero/sign_extract.\n\nFrom-SVN: r64164", "tree": {"sha": "99c6c896b78762f0154b920cb1e21308b46f43d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99c6c896b78762f0154b920cb1e21308b46f43d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37bd08f8df0003521d3da3b37a25235fd421bce6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37bd08f8df0003521d3da3b37a25235fd421bce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37bd08f8df0003521d3da3b37a25235fd421bce6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37bd08f8df0003521d3da3b37a25235fd421bce6/comments", "author": null, "committer": null, "parents": [{"sha": "b0649028b4627e6e5e2eb9fd999be8a67da65566", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0649028b4627e6e5e2eb9fd999be8a67da65566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0649028b4627e6e5e2eb9fd999be8a67da65566"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "5c57777d974d33bc632521806bb8040d23d26ca9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37bd08f8df0003521d3da3b37a25235fd421bce6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37bd08f8df0003521d3da3b37a25235fd421bce6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37bd08f8df0003521d3da3b37a25235fd421bce6", "patch": "@@ -1,3 +1,10 @@\n+2003-03-11  Hartmut Penner  <hpenner@de.ibm.com>\n+\n+\t* df.c (read_modify_subreg_p): Change from static to global.\n+\t* df.h (read_modify_subreg_p): Add prototype.\n+\t* sched-deps.c (sched_analyze_1): Generate true dependency for\n+\tstrict_low_part, certain subregs and zero/sign_extract. \n+\n 2003-03-11  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* Makefile.in: Update."}, {"sha": "4c9598566e6d7579ef4ca2ed0a1fc618f921f83b", "filename": "gcc/df.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37bd08f8df0003521d3da3b37a25235fd421bce6/gcc%2Fdf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37bd08f8df0003521d3da3b37a25235fd421bce6/gcc%2Fdf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.c?ref=37bd08f8df0003521d3da3b37a25235fd421bce6", "patch": "@@ -307,7 +307,6 @@ static void hybrid_search_sbitmap PARAMS ((basic_block, sbitmap *, sbitmap *,\n \t\t\t\t\t   enum df_confluence_op,\n \t\t\t\t\t   transfer_function_sbitmap,\n \t\t\t\t\t   sbitmap, sbitmap, void *));\n-static inline bool read_modify_subreg_p PARAMS ((rtx));\n \n \f\n /* Local memory allocation/deallocation routines.  */\n@@ -885,7 +884,7 @@ df_ref_record (df, reg, loc, insn, ref_type, ref_flags)\n \n /* Return non-zero if writes to paradoxical SUBREGs, or SUBREGs which\n    are too narrow, are read-modify-write.  */\n-static inline bool\n+bool\n read_modify_subreg_p (x)\n      rtx x;\n {"}, {"sha": "2191ab5e9ddb6507f52ca6a0dd9686d210838967", "filename": "gcc/df.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37bd08f8df0003521d3da3b37a25235fd421bce6/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37bd08f8df0003521d3da3b37a25235fd421bce6/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=37bd08f8df0003521d3da3b37a25235fd421bce6", "patch": "@@ -353,3 +353,4 @@ extern void iterative_dataflow_bitmap PARAMS ((bitmap *, bitmap *, bitmap *,\n \t\t\t\t\t       enum df_confluence_op, \n \t\t\t\t\t       transfer_function_bitmap, \n \t\t\t\t\t       int *, void *));\n+extern bool read_modify_subreg_p PARAMS ((rtx));"}, {"sha": "874ebc26c7a9b85d7afd0eb622305adc8958e573", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37bd08f8df0003521d3da3b37a25235fd421bce6/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37bd08f8df0003521d3da3b37a25235fd421bce6/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=37bd08f8df0003521d3da3b37a25235fd421bce6", "patch": "@@ -42,6 +42,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"sched-int.h\"\n #include \"params.h\"\n #include \"cselib.h\"\n+#include \"df.h\"\n \n extern char *reg_known_equiv_p;\n extern rtx *reg_known_value;\n@@ -468,6 +469,19 @@ sched_analyze_1 (deps, x, insn)\n   while (GET_CODE (dest) == STRICT_LOW_PART || GET_CODE (dest) == SUBREG\n \t || GET_CODE (dest) == ZERO_EXTRACT || GET_CODE (dest) == SIGN_EXTRACT)\n     {\n+      if (GET_CODE (dest) == STRICT_LOW_PART\n+\t || GET_CODE (dest) == ZERO_EXTRACT\n+\t || GET_CODE (dest) == SIGN_EXTRACT\n+\t || read_modify_subreg_p (dest))\n+        {\n+\t  /* These both read and modify the result.  We must handle \n+             them as writes to get proper dependencies for following\n+             instructions.  We must handle them as reads to get proper\n+             dependencies from this to previous instructions.\n+             Thus we need to call sched_analyze_2. */\n+\n+\t  sched_analyze_2 (deps, XEXP (dest, 0), insn);  \n+\t}\n       if (GET_CODE (dest) == ZERO_EXTRACT || GET_CODE (dest) == SIGN_EXTRACT)\n \t{\n \t  /* The second and third arguments are values read by this insn.  */"}]}