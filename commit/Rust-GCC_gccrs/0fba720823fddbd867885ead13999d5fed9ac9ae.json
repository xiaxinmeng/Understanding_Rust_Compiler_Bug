{"sha": "0fba720823fddbd867885ead13999d5fed9ac9ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZiYTcyMDgyM2ZkZGJkODY3ODg1ZWFkMTM5OTlkNWZlZDlhYzlhZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-10-11T10:04:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-10-11T10:04:03Z"}, "message": "tree.c (get_narrower): Don't look at precision of field if not laid out yet.\n\n\t* tree.c (get_narrower): Don't look at precision of field if\n\tnot laid out yet.\n\nFrom-SVN: r36837", "tree": {"sha": "4f21a8f7157e841a82606063245e3c5d8dd5c496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f21a8f7157e841a82606063245e3c5d8dd5c496"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fba720823fddbd867885ead13999d5fed9ac9ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fba720823fddbd867885ead13999d5fed9ac9ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fba720823fddbd867885ead13999d5fed9ac9ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fba720823fddbd867885ead13999d5fed9ac9ae/comments", "author": null, "committer": null, "parents": [{"sha": "18a61d1cb2beda914a91ca0740b3715f1e51ff74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a61d1cb2beda914a91ca0740b3715f1e51ff74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a61d1cb2beda914a91ca0740b3715f1e51ff74"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "52e180f1c4d9b6a260b3e8e114d8eb96dc6569b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fba720823fddbd867885ead13999d5fed9ac9ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fba720823fddbd867885ead13999d5fed9ac9ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fba720823fddbd867885ead13999d5fed9ac9ae", "patch": "@@ -1,3 +1,8 @@\n+Wed Oct 11 06:15:41 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* tree.c (get_narrower): Don't look at precision of field if\n+\tnot laid out yet.\n+\n Tue Oct 10 23:14:33 2000  Denis Chertykov  <denisc@overta.ru>\n \n \t* config/avr/avr.c (valid_machine_decl_attribute): Allow `extern'"}, {"sha": "fab3d1de0c9c0eb76dbd677c4c99645e61c1541b", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fba720823fddbd867885ead13999d5fed9ac9ae/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fba720823fddbd867885ead13999d5fed9ac9ae/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=0fba720823fddbd867885ead13999d5fed9ac9ae", "patch": "@@ -5052,11 +5052,12 @@ get_narrower (op, unsignedp_ptr)\n \n   if (TREE_CODE (op) == COMPONENT_REF\n       /* Since type_for_size always gives an integer type.  */\n-      && TREE_CODE (TREE_TYPE (op)) != REAL_TYPE)\n+      && TREE_CODE (TREE_TYPE (op)) != REAL_TYPE\n+      /* Ensure field is laid out already.  */\n+      && DECL_SIZE (TREE_OPERAND (op, 1)) != 0)\n     {\n-      unsigned int innerprec\n-\t= TREE_INT_CST_LOW (DECL_SIZE (TREE_OPERAND (op, 1)));\n-\n+      unsigned HOST_WIDE_INT innerprec\n+\t= tree_low_cst (DECL_SIZE (TREE_OPERAND (op, 1)), 1);\n       tree type = type_for_size (innerprec, TREE_UNSIGNED (op));\n \n       /* We can get this structure field in a narrower type that fits it,"}]}