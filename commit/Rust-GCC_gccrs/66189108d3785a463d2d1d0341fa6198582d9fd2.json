{"sha": "66189108d3785a463d2d1d0341fa6198582d9fd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYxODkxMDhkMzc4NWE0NjNkMmQxZDAzNDFmYTYxOTg1ODJkOWZkMg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-12-07T17:52:23Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-12-07T17:52:23Z"}, "message": "re PR c/68668 (bogus error: invalid use of array with unspecified bounds)\n\n\tPR c/68668\n\t* c-decl.c (grokdeclarator): If ORIG_QUAL_INDIRECT is indirect, use\n\tTREE_TYPE of ORIG_QUAL_TYPE, otherwise decrement ORIG_QUAL_INDIRECT.\n\n\t* gcc.dg/pr68668.c: New test.\n\nFrom-SVN: r231374", "tree": {"sha": "2f2cc1a708c2ce1bf995969f8634445e436baab6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f2cc1a708c2ce1bf995969f8634445e436baab6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66189108d3785a463d2d1d0341fa6198582d9fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66189108d3785a463d2d1d0341fa6198582d9fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66189108d3785a463d2d1d0341fa6198582d9fd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66189108d3785a463d2d1d0341fa6198582d9fd2/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "71e546870c4afb3c3ff993bd354a98637bcccdc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e546870c4afb3c3ff993bd354a98637bcccdc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71e546870c4afb3c3ff993bd354a98637bcccdc7"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "0b3351ce960216d0f6dff745814ff644307c477e", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66189108d3785a463d2d1d0341fa6198582d9fd2/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66189108d3785a463d2d1d0341fa6198582d9fd2/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=66189108d3785a463d2d1d0341fa6198582d9fd2", "patch": "@@ -1,3 +1,9 @@\n+2015-12-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/68668\n+\t* c-decl.c (grokdeclarator): If ORIG_QUAL_INDIRECT is indirect, use\n+\tTREE_TYPE of ORIG_QUAL_TYPE, otherwise decrement ORIG_QUAL_INDIRECT.\n+\n 2015-12-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-tree.h (c_build_va_arg): Adjust prototype."}, {"sha": "2da84f264631f8112b0529bb385601eb4e3cf01a", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66189108d3785a463d2d1d0341fa6198582d9fd2/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66189108d3785a463d2d1d0341fa6198582d9fd2/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=66189108d3785a463d2d1d0341fa6198582d9fd2", "patch": "@@ -6417,6 +6417,13 @@ grokdeclarator (const struct c_declarator *declarator,\n \t  {\n \t    /* Transfer const-ness of array into that of type pointed to.  */\n \t    type = TREE_TYPE (type);\n+\t    if (orig_qual_type != NULL_TREE)\n+\t      {\n+\t\tif (orig_qual_indirect == 0)\n+\t\t  orig_qual_type = TREE_TYPE (orig_qual_type);\n+\t\telse\n+\t\t  orig_qual_indirect--;\n+\t      }\n \t    if (type_quals)\n \t      type = c_build_qualified_type (type, type_quals, orig_qual_type,\n \t\t\t\t\t     orig_qual_indirect);"}, {"sha": "baff32f2c7fb7a556f343e43f4a6e61b58156d64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66189108d3785a463d2d1d0341fa6198582d9fd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66189108d3785a463d2d1d0341fa6198582d9fd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66189108d3785a463d2d1d0341fa6198582d9fd2", "patch": "@@ -1,3 +1,8 @@\n+2015-12-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/68668\n+\t* gcc.dg/pr68668.c: New test.\n+\n 2015-12-07  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* gcc.target/i386/pr68349.c (strlen): Rename to my_strlen."}, {"sha": "d013aa92cef996bbd9ba7503cd8f5ffd766d5bda", "filename": "gcc/testsuite/gcc.dg/pr68668.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66189108d3785a463d2d1d0341fa6198582d9fd2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68668.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66189108d3785a463d2d1d0341fa6198582d9fd2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68668.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68668.c?ref=66189108d3785a463d2d1d0341fa6198582d9fd2", "patch": "@@ -0,0 +1,53 @@\n+/* PR c/68668 */\n+/* { dg-do compile } */\n+\n+typedef const int T[];\n+typedef const int U[1];\n+\n+int\n+fn1 (T p)\n+{\n+  return p[0];\n+}\n+\n+int\n+fn2 (U p[2])\n+{\n+  return p[0][0];\n+}\n+\n+int\n+fn3 (U p[2][3])\n+{\n+  return p[0][0][0];\n+}\n+\n+int\n+fn4 (U *p)\n+{\n+  return p[0][0];\n+}\n+\n+int\n+fn5 (U (*p)[1])\n+{\n+  return (*p)[0][0];\n+}\n+\n+int\n+fn6 (U (*p)[1][2])\n+{\n+  return (*p)[0][0][0];\n+}\n+\n+int\n+fn7 (U **p)\n+{\n+  return p[0][0][0];\n+}\n+\n+int\n+fn8 (U (**p)[1])\n+{\n+  return (*p)[0][0][0];\n+}"}]}