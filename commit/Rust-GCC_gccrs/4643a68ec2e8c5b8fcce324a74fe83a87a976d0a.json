{"sha": "4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY0M2E2OGVjMmU4YzViOGZjY2UzMjRhNzRmZTgzYTg3YTk3NmQwYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-01-12T17:27:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-01-12T17:27:07Z"}, "message": "re PR c++/48051 (sorry, unimplemented: mangling overload)\n\n\tPR c++/48051\n\t* mangle.c (write_expression): Mangle BASELINK scope if\n\tBASELINK_QUALIFIED_P.\n\t* search.c (adjust_result_of_qualified_name_lookup): Set\n\tBASELINK_QUALIFIED_P.\n\t* tree.c (cp_tree_equal) [BASELINK]: Compare BASELINK_QUALIFIED_P.\n\t* parser.c (cp_parser_postfix_dot_deref_expression): Don't call\n\tadjust_result_of_qualified_name_lookup for non-qualified names.\n\nFrom-SVN: r183133", "tree": {"sha": "e022c1411935ef78bc54c9da036fa7beb4902383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e022c1411935ef78bc54c9da036fa7beb4902383"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca5333f22c94c1ad873265bde286cf9b96df5ff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5333f22c94c1ad873265bde286cf9b96df5ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5333f22c94c1ad873265bde286cf9b96df5ff2"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "6047df3a2ed0ad625d0b771abab74f8beb30cb07", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "patch": "@@ -1,5 +1,14 @@\n 2012-01-12  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48051\n+\t* mangle.c (write_expression): Mangle BASELINK scope if\n+\tBASELINK_QUALIFIED_P.\n+\t* search.c (adjust_result_of_qualified_name_lookup): Set\n+\tBASELINK_QUALIFIED_P.\n+\t* tree.c (cp_tree_equal) [BASELINK]: Compare BASELINK_QUALIFIED_P.\n+\t* parser.c (cp_parser_postfix_dot_deref_expression): Don't call\n+\tadjust_result_of_qualified_name_lookup for non-qualified names.\n+\n \tPR c++/51403\n \t* pt.c (unify): Handle error_mark_node.\n "}, {"sha": "5f2fa157a9c5f6510db760c27dc2fb652cf0f7a2", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "patch": "@@ -2500,7 +2500,9 @@ write_expression (tree expr)\n       code = TREE_CODE (expr);\n     }\n \n-  if (code == BASELINK)\n+  if (code == BASELINK\n+      && (!type_unknown_p (expr)\n+\t  || !BASELINK_QUALIFIED_P (expr)))\n     {\n       expr = BASELINK_FUNCTIONS (expr);\n       code = TREE_CODE (expr);\n@@ -2583,10 +2585,20 @@ write_expression (tree expr)\n       write_string (\"at\");\n       write_type (TREE_OPERAND (expr, 0));\n     }\n-  else if (TREE_CODE (expr) == SCOPE_REF)\n+  else if (code == SCOPE_REF\n+\t   || code == BASELINK)\n     {\n-      tree scope = TREE_OPERAND (expr, 0);\n-      tree member = TREE_OPERAND (expr, 1);\n+      tree scope, member;\n+      if (code == SCOPE_REF)\n+\t{\n+\t  scope = TREE_OPERAND (expr, 0);\n+\t  member = TREE_OPERAND (expr, 1);\n+\t}\n+      else\n+\t{\n+\t  scope = BINFO_TYPE (BASELINK_ACCESS_BINFO (expr));\n+\t  member = BASELINK_FUNCTIONS (expr);\n+\t}\n \n       if (!abi_version_at_least (2) && DECL_P (member))\n \t{"}, {"sha": "4c853552f4f4e67d2dea621e9d4b72d953b73540", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "patch": "@@ -6045,9 +6045,9 @@ cp_parser_postfix_dot_deref_expression (cp_parser *parser,\n \t      parser->qualifying_scope = NULL_TREE;\n \t      parser->object_scope = NULL_TREE;\n \t    }\n-\t  if (scope && name && BASELINK_P (name))\n+\t  if (parser->scope && name && BASELINK_P (name))\n \t    adjust_result_of_qualified_name_lookup\n-\t      (name, BINFO_TYPE (BASELINK_ACCESS_BINFO (name)), scope);\n+\t      (name, parser->scope, scope);\n \t  postfix_expression\n \t    = finish_class_member_access_expr (postfix_expression, name,\n \t\t\t\t\t       template_p, "}, {"sha": "e48dcec05890c739c0163313fd18f98d57773662", "filename": "gcc/cp/search.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "patch": "@@ -1550,6 +1550,9 @@ adjust_result_of_qualified_name_lookup (tree decl,\n \t}\n     }\n \n+  if (BASELINK_P (decl))\n+    BASELINK_QUALIFIED_P (decl) = true;\n+\n   return decl;\n }\n "}, {"sha": "bf8bc05fff2fe224222fbbbb78f356efa8ea8461", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "patch": "@@ -2320,6 +2320,7 @@ cp_tree_equal (tree t1, tree t2)\n     case BASELINK:\n       return (BASELINK_BINFO (t1) == BASELINK_BINFO (t2)\n \t      && BASELINK_ACCESS_BINFO (t1) == BASELINK_ACCESS_BINFO (t2)\n+\t      && BASELINK_QUALIFIED_P (t1) == BASELINK_QUALIFIED_P (t2)\n \t      && cp_tree_equal (BASELINK_FUNCTIONS (t1),\n \t\t\t\tBASELINK_FUNCTIONS (t2)));\n "}, {"sha": "224f98f0e709a782cdbe64c806b6d1511c69722d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "patch": "@@ -1,5 +1,9 @@\n 2012-01-12  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48051\n+\t* g++.dg/abi/mangle48.C: Test qualified-names, too.\n+\t* g++.dg/abi/mangle58.C: Likewise.\n+\n \tPR c++/51403\n \t* g++.dg/template/arg8.C: New.\n "}, {"sha": "6c0e99c8de89c1908594d40665b6c016ef16e970", "filename": "gcc/testsuite/g++.dg/abi/mangle48.C", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle48.C?ref=4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "patch": "@@ -13,11 +13,17 @@ struct A\n   template <class U> auto f() -> decltype (b.f<U>());\n   // { dg-final { scan-assembler \"_ZN1A1gIiEEDTcldtptfpT1b1fIT_EEEv\" } }\n   template <class U> auto g() -> decltype (this->b.f<U>());\n+  // { dg-final { scan-assembler \"_ZN1A1hIiEEDTcldtdtdefpT1bsr1B1fIT_EEEv\" } }\n+  template <class U> auto h() -> decltype (b.B::f<U>());\n+  // { dg-final { scan-assembler \"_ZN1A1iIiEEDTcldtptfpT1bsr1B1fIT_EEEv\" } }\n+  template <class U> auto i() -> decltype (this->b.B::f<U>());\n };\n \n int main()\n {\n   A a;\n   a.f<int>();\n   a.g<int>();\n+  a.h<int>();\n+  a.i<int>();\n }"}, {"sha": "54b16f25699dea94b71871806c05ebbd3690d8b5", "filename": "gcc/testsuite/g++.dg/abi/mangle58.C", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4643a68ec2e8c5b8fcce324a74fe83a87a976d0a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle58.C?ref=4643a68ec2e8c5b8fcce324a74fe83a87a976d0a", "patch": "@@ -6,14 +6,20 @@ struct B {\n   static int cmp2(char a, char b);\n   // { dg-final { scan-assembler \"_ZN1B1fIcEEvR1AIT_X4cmp1EE\" } }\n   template <typename T> static void f (A<T,cmp1> &);\n+  // { dg-final { scan-assembler \"_ZN1B1gIcEEvR1AIT_XsrS_4cmp1EE\" } }\n+  template <typename T> static void g (A<T,B::cmp1> &);\n   // { dg-final { scan-assembler \"_ZN1B1fIcEEvR1AIT_L_ZNS_4cmp2EccEE\" } }\n   template <typename T> static void f (A<T,cmp2> &);\n+  // { dg-final { scan-assembler \"_ZN1B1gIcEEvR1AIT_L_ZNS_4cmp2EccEE\" } }\n+  template <typename T> static void g (A<T,B::cmp2> &);\n };\n \n void g()\n {\n   A<char,B::cmp1> a;\n   B::f(a);\n+  B::g(a);\n   A<char,B::cmp2> a2;\n   B::f(a2);\n+  B::g(a2);\n }"}]}