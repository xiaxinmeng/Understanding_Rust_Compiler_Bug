{"sha": "4e25ca6b3001f31fe48671c3d8c5f17cb7984288", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUyNWNhNmIzMDAxZjMxZmU0ODY3MWMzZDhjNWYxN2NiNzk4NDI4OA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-12-14T18:27:58Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-12-14T18:27:58Z"}, "message": "cfgexpand.c (expand_debug_expr): Remove overzealous assertion and useless code.\n\n\t* cfgexpand.c (expand_debug_expr) <INDIRECT_REF>: Remove overzealous\n\tassertion and useless code.\n\t<TARGET_MEM_REF>: Likewise.\n\nFrom-SVN: r155229", "tree": {"sha": "4878ec19a12cf3d4d25af300d804f7e8bafcdb19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4878ec19a12cf3d4d25af300d804f7e8bafcdb19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e25ca6b3001f31fe48671c3d8c5f17cb7984288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e25ca6b3001f31fe48671c3d8c5f17cb7984288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e25ca6b3001f31fe48671c3d8c5f17cb7984288", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e25ca6b3001f31fe48671c3d8c5f17cb7984288/comments", "author": null, "committer": null, "parents": [{"sha": "3c0c50279beaa7857d301a864ff89e8a07bf09ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0c50279beaa7857d301a864ff89e8a07bf09ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c0c50279beaa7857d301a864ff89e8a07bf09ed"}], "stats": {"total": 35, "additions": 15, "deletions": 20}, "files": [{"sha": "779dfe8ed379d7baf483da49edfae383b6a28e07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e25ca6b3001f31fe48671c3d8c5f17cb7984288/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e25ca6b3001f31fe48671c3d8c5f17cb7984288/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e25ca6b3001f31fe48671c3d8c5f17cb7984288", "patch": "@@ -1,3 +1,9 @@\n+2009-12-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* cfgexpand.c (expand_debug_expr) <INDIRECT_REF>: Remove overzealous\n+\tassertion and useless code.\n+\t<TARGET_MEM_REF>: Likewise.\n+\n 2009-12-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/41473"}, {"sha": "08b211e52440899f944692eb071202f8944c0e8d", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e25ca6b3001f31fe48671c3d8c5f17cb7984288/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e25ca6b3001f31fe48671c3d8c5f17cb7984288/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=4e25ca6b3001f31fe48671c3d8c5f17cb7984288", "patch": "@@ -2186,7 +2186,6 @@ expand_debug_expr (tree exp)\n   int unsignedp = TYPE_UNSIGNED (TREE_TYPE (exp));\n   addr_space_t as;\n   enum machine_mode address_mode;\n-  enum machine_mode pointer_mode;\n \n   switch (TREE_CODE_CLASS (TREE_CODE (exp)))\n     {\n@@ -2382,17 +2381,15 @@ expand_debug_expr (tree exp)\n \treturn NULL;\n \n       if (POINTER_TYPE_P (TREE_TYPE (exp)))\n-\tas = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (exp)));\n+\t{\n+\t  as = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (exp)));\n+\t  address_mode = targetm.addr_space.address_mode (as);\n+\t}\n       else\n-\tas = ADDR_SPACE_GENERIC;\n-\n-      address_mode = targetm.addr_space.address_mode (as);\n-      pointer_mode = targetm.addr_space.pointer_mode (as);\n-\n-      gcc_assert (GET_MODE (op0) == address_mode\n-\t\t  || GET_MODE (op0) == pointer_mode\n-\t\t  || GET_CODE (op0) == CONST_INT\n-\t\t  || GET_CODE (op0) == CONST_DOUBLE);\n+\t{\n+\t  as = ADDR_SPACE_GENERIC;\n+\t  address_mode = Pmode;\n+\t}\n \n       if (TREE_CODE (exp) == ALIGN_INDIRECT_REF)\n \t{\n@@ -2412,19 +2409,11 @@ expand_debug_expr (tree exp)\n \treturn NULL;\n \n       op0 = expand_debug_expr\n-\t(tree_mem_ref_addr (build_pointer_type (TREE_TYPE (exp)),\n-\t\t\t    exp));\n+\t    (tree_mem_ref_addr (build_pointer_type (TREE_TYPE (exp)), exp));\n       if (!op0)\n \treturn NULL;\n \n       as = TYPE_ADDR_SPACE (TREE_TYPE (exp));\n-      address_mode = targetm.addr_space.address_mode (as);\n-      pointer_mode = targetm.addr_space.pointer_mode (as);\n-\n-      gcc_assert (GET_MODE (op0) == address_mode\n-\t\t  || GET_MODE (op0) == pointer_mode\n-\t\t  || GET_CODE (op0) == CONST_INT\n-\t\t  || GET_CODE (op0) == CONST_DOUBLE);\n \n       op0 = gen_rtx_MEM (mode, op0);\n "}]}