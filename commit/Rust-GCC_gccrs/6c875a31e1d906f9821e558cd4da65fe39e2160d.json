{"sha": "6c875a31e1d906f9821e558cd4da65fe39e2160d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM4NzVhMzFlMWQ5MDZmOTgyMWU1NThjZDRkYTY1ZmUzOWUyMTYwZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2004-05-13T22:46:19Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-05-13T22:46:19Z"}, "message": "tree-into-ssa.c (compute_global_livein): Use EXECUTE_IF_SET_IN_BITMAP rather than iterating through the blocks testing...\n\n        * tree-into-ssa.c (compute_global_livein): Use EXECUTE_IF_SET_IN_BITMAP\n        rather than iterating through the blocks testing each bit in\n        livein to initialize the worklist.\n        (mark_def_sites): Remove useless checks of KILLS for virtual\n        operands.\n\nFrom-SVN: r81811", "tree": {"sha": "c4a9b4fc3ac9a69884b6447141f369dbdcc17011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4a9b4fc3ac9a69884b6447141f369dbdcc17011"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c875a31e1d906f9821e558cd4da65fe39e2160d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c875a31e1d906f9821e558cd4da65fe39e2160d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c875a31e1d906f9821e558cd4da65fe39e2160d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c875a31e1d906f9821e558cd4da65fe39e2160d/comments", "author": null, "committer": null, "parents": [{"sha": "0e7b565cbf161851bc77eb48d5618dff3434d497", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e7b565cbf161851bc77eb48d5618dff3434d497", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e7b565cbf161851bc77eb48d5618dff3434d497"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "ee5c4dd46270fd894841192392c99b8b0bc8e6fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c875a31e1d906f9821e558cd4da65fe39e2160d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c875a31e1d906f9821e558cd4da65fe39e2160d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c875a31e1d906f9821e558cd4da65fe39e2160d", "patch": "@@ -13,6 +13,12 @@\n \n 2004-05-13  Jeff Law  <law@redhat.com>\n \n+\t* tree-into-ssa.c (compute_global_livein): Use EXECUTE_IF_SET_IN_BITMAP\n+\trather than iterating through the blocks testing each bit in\n+\tlivein to initialize the worklist.\n+\t(mark_def_sites): Remove useless checks of KILLS for virtual\n+\toperands.\n+\n \t* tree-ssa-forwprop.c (record_single_argument_cond_exprs): Accept\n \tnew parameters for the statement and variable worklist as well\n \tas a bitmap of interesting SSA_NAMEs.  Walk over the statement"}, {"sha": "4e19142afd0f6bcdaa4eac84421a9289cc478290", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c875a31e1d906f9821e558cd4da65fe39e2160d/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c875a31e1d906f9821e558cd4da65fe39e2160d/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=6c875a31e1d906f9821e558cd4da65fe39e2160d", "patch": "@@ -136,16 +136,15 @@ static void\n compute_global_livein (bitmap livein, bitmap def_blocks)\n {\n   basic_block bb, *worklist, *tos;\n+  int i;\n \n   tos = worklist\n     = (basic_block *) xmalloc (sizeof (basic_block) * (last_basic_block + 1));\n \n-  /* Initialize the worklist.  */\n-  FOR_EACH_BB (bb)\n+  EXECUTE_IF_SET_IN_BITMAP (livein, 0, i,\n     {\n-      if (bitmap_bit_p (livein, bb->index))\n-\t*tos++ = bb;\n-    }\n+\t*tos++ = BASIC_BLOCK (i);\n+    });\n \n   /* Iterate until the worklist is empty.  */\n   while (tos != worklist)\n@@ -244,8 +243,7 @@ mark_def_sites (struct dom_walk_data *walk_data,\n     {\n       tree *use_p = VUSE_OP_PTR (vuses, i);\n \n-      if (prepare_operand_for_rename (use_p, &uid)\n-\t  && !TEST_BIT (kills, uid))\n+      if (prepare_operand_for_rename (use_p, &uid))\n \tset_livein_block (*use_p, bb);\n     }\n \n@@ -264,8 +262,7 @@ mark_def_sites (struct dom_walk_data *walk_data,\n \t{\n \t  VDEF_RESULT (vdefs, i) = VDEF_OP (vdefs, i);\n \n-\t  if (!TEST_BIT (kills, uid))\n-\t    set_livein_block (VDEF_OP (vdefs, i), bb);\n+\t  set_livein_block (VDEF_OP (vdefs, i), bb);\n \t  set_def_block (VDEF_RESULT (vdefs, i), bb);\n \t}\n     }"}]}