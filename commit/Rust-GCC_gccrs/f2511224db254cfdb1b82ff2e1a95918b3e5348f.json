{"sha": "f2511224db254cfdb1b82ff2e1a95918b3e5348f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI1MTEyMjRkYjI1NGNmZGIxYjgyZmYyZTFhOTU5MThiM2U1MzQ4Zg==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-08-27T15:28:39Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-08-27T15:28:39Z"}, "message": "Refactor completely_scalarize_var\n\n\t* tree-sra.c (completely_scalarize_var): Rename to...\n\t(create_total_scalarization_access): ... Here. Drop call to\n\tcompletely_scalarize_record.\n\n\t(analyze_all_variable_accesses): Replace completely_scalarize_var\n\twith create_total_scalarization_access and completely_scalarize_record.\n\nFrom-SVN: r227264", "tree": {"sha": "6cbd7499bcb59727920933496beb61a85f19abf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cbd7499bcb59727920933496beb61a85f19abf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2511224db254cfdb1b82ff2e1a95918b3e5348f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2511224db254cfdb1b82ff2e1a95918b3e5348f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2511224db254cfdb1b82ff2e1a95918b3e5348f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2511224db254cfdb1b82ff2e1a95918b3e5348f/comments", "author": null, "committer": null, "parents": [{"sha": "dfa37515566f34fac10204218d44f44413657080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfa37515566f34fac10204218d44f44413657080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfa37515566f34fac10204218d44f44413657080"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "d29d8e0cc5814c1c459834b6867423b2d93ae659", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2511224db254cfdb1b82ff2e1a95918b3e5348f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2511224db254cfdb1b82ff2e1a95918b3e5348f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2511224db254cfdb1b82ff2e1a95918b3e5348f", "patch": "@@ -1,3 +1,12 @@\n+2015-08-27  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* tree-sra.c (completely_scalarize_var): Rename to...\n+\t(create_total_scalarization_access): ... Here. Drop call to\n+\tcompletely_scalarize_record.\n+\n+\t(analyze_all_variable_accesses): Replace completely_scalarize_var\n+\twith create_total_scalarization_access and completely_scalarize_record.\n+\n 2015-08-27  Alan Modra  <amodra@gmail.com>\n \n \tPR target/67356"}, {"sha": "8b3a0adf7cce76ed6962b608481f6cf0550dabfa", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2511224db254cfdb1b82ff2e1a95918b3e5348f/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2511224db254cfdb1b82ff2e1a95918b3e5348f/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=f2511224db254cfdb1b82ff2e1a95918b3e5348f", "patch": "@@ -980,12 +980,11 @@ completely_scalarize_record (tree base, tree decl, HOST_WIDE_INT offset,\n       }\n }\n \n-/* Create total_scalarization accesses for all scalar type fields in VAR and\n-   for VAR as a whole.  VAR must be of a RECORD_TYPE conforming to\n-   type_consists_of_records_p.   */\n+/* Create a total_scalarization access for VAR as a whole.  VAR must be of a\n+   RECORD_TYPE conforming to type_consists_of_records_p.  */\n \n static void\n-completely_scalarize_var (tree var)\n+create_total_scalarization_access (tree var)\n {\n   HOST_WIDE_INT size = tree_to_uhwi (DECL_SIZE (var));\n   struct access *access;\n@@ -994,8 +993,6 @@ completely_scalarize_var (tree var)\n   access->expr = var;\n   access->type = TREE_TYPE (var);\n   access->grp_total_scalarization = 1;\n-\n-  completely_scalarize_record (var, var, 0, var);\n }\n \n /* Return true if REF has an VIEW_CONVERT_EXPR somewhere in it.  */\n@@ -2529,7 +2526,8 @@ analyze_all_variable_accesses (void)\n \t    if (tree_to_uhwi (TYPE_SIZE (TREE_TYPE (var)))\n \t\t<= max_scalarization_size)\n \t      {\n-\t\tcompletely_scalarize_var (var);\n+\t\tcreate_total_scalarization_access (var);\n+\t\tcompletely_scalarize_record (var, var, 0, var);\n \t\tif (dump_file && (dump_flags & TDF_DETAILS))\n \t\t  {\n \t\t    fprintf (dump_file, \"Will attempt to totally scalarize \");"}]}