{"sha": "aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFkOTdiOWJkZGQzYmE4OWU2YjM5ZjhjMjhjNGZlNzE0ZjY1ZmQ1Mg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-06-19T06:32:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-19T06:32:31Z"}, "message": "re PR tree-optimization/22116 (PRE of COMPLEX_EXPR causes ICE)\n\n        PR tree-opt/22116\n        * tree-ssa-pre.c (create_expression_by_pieces): Set\n        DECL_COMPLEX_GIMPLE_REG_P.\n        (insert_into_preds_of_block): Likewise.\n\nFrom-SVN: r101177", "tree": {"sha": "aace88511c766aed127001b3380bf080e98f0a29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aace88511c766aed127001b3380bf080e98f0a29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52/comments", "author": null, "committer": null, "parents": [{"sha": "0f3a219b31a193df1a7690d319b4a1a3c8760c9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3a219b31a193df1a7690d319b4a1a3c8760c9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f3a219b31a193df1a7690d319b4a1a3c8760c9c"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "293b0a541fcf11de9656a82502cfcc425a96992c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52", "patch": "@@ -1,3 +1,10 @@\n+2005-06-18  Richard Henderson  <rth@redhat.com>\n+\n+\tPR tree-opt/22116\n+\t* tree-ssa-pre.c (create_expression_by_pieces): Set\n+\tDECL_COMPLEX_GIMPLE_REG_P.\n+\t(insert_into_preds_of_block): Likewise.\n+\n 2005-06-18  Steven Bosscher  <stevenb@suse.de>\n \n \t* Makefile.in: Fix tree-cfgcleanup.c dependencies."}, {"sha": "f12a8f9da4ae175c685eb2eab260c76931a5022a", "filename": "gcc/testsuite/gcc.c-torture/compile/complex-3.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcomplex-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcomplex-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcomplex-3.c?ref=aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52", "patch": "@@ -0,0 +1,17 @@\n+/* PR 22116 */\n+\n+void g(_Complex float);\n+_Complex float f(int data, _Complex float x, _Complex float y)\n+{\n+  _Complex float i, t;\n+  if (data) \n+  {\n+    i = x +  __imag__ y;\n+    g(i);\n+  }\n+  else\n+    i = 5;\n+  t = x + __imag__ y;\n+  g(t);\n+  return t * i;\n+}"}, {"sha": "a46c367d34b6f1467e5fbf553833fa17dd79bfe3", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=aad97b9bddd3ba89e6b39f8c28c4fe714f65fd52", "patch": "@@ -1593,6 +1593,8 @@ create_expression_by_pieces (basic_block block, tree expr, tree stmts)\n      that we will return.  */\n   temp = create_tmp_var (TREE_TYPE (expr), \"pretmp\");\n   add_referenced_tmp_var (temp);\n+  if (TREE_CODE (TREE_TYPE (expr)) == COMPLEX_TYPE)\n+    DECL_COMPLEX_GIMPLE_REG_P (temp) = 1;\n   newexpr = build (MODIFY_EXPR, TREE_TYPE (expr), temp, newexpr);\n   name = make_ssa_name (temp, newexpr);\n   TREE_OPERAND (newexpr, 0) = name;\n@@ -1699,6 +1701,8 @@ insert_into_preds_of_block (basic_block block, value_set_node_t node,\n   /* Now build a phi for the new variable.  */\n   temp = create_tmp_var (type, tmpname);\n   add_referenced_tmp_var (temp);\n+  if (TREE_CODE (type) == COMPLEX_TYPE)\n+    DECL_COMPLEX_GIMPLE_REG_P (temp) = 1;\n   temp = create_phi_node (temp, block);\n   NECESSARY (temp) = 0; \n   VEC_safe_push (tree, heap, inserted_exprs, temp);"}]}