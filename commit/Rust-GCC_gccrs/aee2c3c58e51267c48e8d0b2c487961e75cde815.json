{"sha": "aee2c3c58e51267c48e8d0b2c487961e75cde815", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVlMmMzYzU4ZTUxMjY3YzQ4ZThkMGIyYzQ4Nzk2MWU3NWNkZTgxNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-04-21T19:49:26Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-04-21T19:49:26Z"}, "message": "(sparc_type_code): Don't put more than 30 bits of info\ninto the variable qualifiers.\n\nFrom-SVN: r7123", "tree": {"sha": "ff464ca4d990c38181ab102193fedd270d972155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff464ca4d990c38181ab102193fedd270d972155"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aee2c3c58e51267c48e8d0b2c487961e75cde815", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee2c3c58e51267c48e8d0b2c487961e75cde815", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aee2c3c58e51267c48e8d0b2c487961e75cde815", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee2c3c58e51267c48e8d0b2c487961e75cde815/comments", "author": null, "committer": null, "parents": [{"sha": "c1da1f33b7a47a10d89010fdd0d00f00d66e8512", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1da1f33b7a47a10d89010fdd0d00f00d66e8512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1da1f33b7a47a10d89010fdd0d00f00d66e8512"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "4b8c1621757642caee32c24afb6942f8ecffc579", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee2c3c58e51267c48e8d0b2c487961e75cde815/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee2c3c58e51267c48e8d0b2c487961e75cde815/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=aee2c3c58e51267c48e8d0b2c487961e75cde815", "patch": "@@ -2886,6 +2886,11 @@ sparc_type_code (type)\n   register unsigned long qualifiers = 0;\n   register unsigned shift = 6;\n \n+  /* Only the first 30 bits of the qualifer are valid.  We must refrain from\n+     setting more, since some assemblers will give an error for this.  Also,\n+     we must be careful to avoid shifts of 32 bits or more to avoid getting\n+     unpredictable results.  */\n+\n   for (;;)\n     {\n       switch (TREE_CODE (type))\n@@ -2894,22 +2899,25 @@ sparc_type_code (type)\n \t  return qualifiers;\n   \n \tcase ARRAY_TYPE:\n-\t  qualifiers |= (3 << shift);\n+\t  if (shift < 30)\n+\t    qualifiers |= (3 << shift);\n \t  shift += 2;\n \t  type = TREE_TYPE (type);\n \t  break;\n \n \tcase FUNCTION_TYPE:\n \tcase METHOD_TYPE:\n-\t  qualifiers |= (2 << shift);\n+\t  if (shift < 30)\n+\t    qualifiers |= (2 << shift);\n \t  shift += 2;\n \t  type = TREE_TYPE (type);\n \t  break;\n \n \tcase POINTER_TYPE:\n \tcase REFERENCE_TYPE:\n \tcase OFFSET_TYPE:\n-\t  qualifiers |= (1 << shift);\n+\t  if (shift < 30)\n+\t    qualifiers |= (1 << shift);\n \t  shift += 2;\n \t  type = TREE_TYPE (type);\n \t  break;"}]}