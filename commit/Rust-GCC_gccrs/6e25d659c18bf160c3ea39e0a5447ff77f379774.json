{"sha": "6e25d659c18bf160c3ea39e0a5447ff77f379774", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyNWQ2NTljMThiZjE2MGMzZWEzOWUwYTU0NDdmZjc3ZjM3OTc3NA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-11-07T02:22:40Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-11-07T02:22:40Z"}, "message": "Get rid of sparc's UNSPEC_SHORT_LOAD.\n\n\t* config/sparc/sparc.md (UNSPEC_SHORT_LOAD): Delete.\n\t(zero_extend_v8qi_vis, zero_extend_v4hi_vis,\n\t*zero_extend_v8qi_<P:mode>_insn,\n\t*zero_extend_v4hi_<P:mode>_insn): Express using vec_merge\n\tand vec_duplicate instead of using an UNSPEC.\n\nFrom-SVN: r181063", "tree": {"sha": "6fb6c8d3bac06402d4e030988344a6260bc71128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fb6c8d3bac06402d4e030988344a6260bc71128"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e25d659c18bf160c3ea39e0a5447ff77f379774", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e25d659c18bf160c3ea39e0a5447ff77f379774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e25d659c18bf160c3ea39e0a5447ff77f379774", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e25d659c18bf160c3ea39e0a5447ff77f379774/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2805cc271bd7072f92f36a08cefcb153dc2024c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2805cc271bd7072f92f36a08cefcb153dc2024c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2805cc271bd7072f92f36a08cefcb153dc2024c5"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "59c4ffc32199deeb0384a68ade1a6ea54b79d726", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e25d659c18bf160c3ea39e0a5447ff77f379774/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e25d659c18bf160c3ea39e0a5447ff77f379774/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e25d659c18bf160c3ea39e0a5447ff77f379774", "patch": "@@ -1,3 +1,11 @@\n+2011-11-06  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.md (UNSPEC_SHORT_LOAD): Delete.\n+\t(zero_extend_v8qi_vis, zero_extend_v4hi_vis,\n+\t*zero_extend_v8qi_<P:mode>_insn,\n+\t*zero_extend_v4hi_<P:mode>_insn): Express using vec_merge\n+\tand vec_duplicate instead of using an UNSPEC.\n+\n 2011-11-07  Alan Modra  <amodra@gmail.com>\n \n \tPR target/30282"}, {"sha": "56f4dc06804f82fa5d022eae064f2a6fa036499c", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e25d659c18bf160c3ea39e0a5447ff77f379774/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e25d659c18bf160c3ea39e0a5447ff77f379774/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=6e25d659c18bf160c3ea39e0a5447ff77f379774", "patch": "@@ -92,7 +92,6 @@\n    (UNSPEC_MUL8\t\t\t86)\n    (UNSPEC_MUL8SU\t\t87)\n    (UNSPEC_MULDSU\t\t88)\n-   (UNSPEC_SHORT_LOAD\t\t89)\n   ])\n \n (define_constants\n@@ -7833,43 +7832,55 @@\n \n (define_expand \"zero_extend_v8qi_vis\"\n   [(set (match_operand:V8QI 0 \"register_operand\" \"\")\n-        (unspec:V8QI [(match_operand:QI 1 \"memory_operand\" \"\")]\n-                     UNSPEC_SHORT_LOAD))]\n+        (vec_merge:V8QI\n+          (vec_duplicate:V8QI\n+            (match_operand:QI 1 \"memory_operand\" \"\"))\n+          (match_dup 2)\n+          (const_int 254)))]\n   \"TARGET_VIS\"\n {\n   if (! REG_P (XEXP (operands[1], 0)))\n     {\n       rtx addr = force_reg (Pmode, XEXP (operands[1], 0));\n       operands[1] = replace_equiv_address (operands[1], addr);\n     }\n+  operands[2] = CONST0_RTX (V8QImode);\n })\n \n (define_expand \"zero_extend_v4hi_vis\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"\")\n-        (unspec:V4HI [(match_operand:HI 1 \"memory_operand\" \"\")]\n-                     UNSPEC_SHORT_LOAD))]\n+        (vec_merge:V4HI\n+          (vec_duplicate:V4HI\n+            (match_operand:HI 1 \"memory_operand\" \"\"))\n+          (match_dup 2)\n+          (const_int 14)))]\n   \"TARGET_VIS\"\n {\n   if (! REG_P (XEXP (operands[1], 0)))\n     {\n       rtx addr = force_reg (Pmode, XEXP (operands[1], 0));\n       operands[1] = replace_equiv_address (operands[1], addr);\n     }\n+  operands[2] = CONST0_RTX (V4HImode);\n })\n \n (define_insn \"*zero_extend_v8qi_<P:mode>_insn\"\n   [(set (match_operand:V8QI 0 \"register_operand\" \"=e\")\n-        (unspec:V8QI [(mem:QI\n-                       (match_operand:P 1 \"register_operand\" \"r\"))]\n-                     UNSPEC_SHORT_LOAD))]\n+        (vec_merge:V8QI\n+          (vec_duplicate:V8QI\n+            (mem:QI (match_operand:P 1 \"register_operand\" \"r\")))\n+          (match_operand:V8QI 2 \"const_zero_operand\" \"Y\")\n+          (const_int 254)))]\n   \"TARGET_VIS\"\n   \"ldda\\t[%1] 0xd0, %0\")\n \n (define_insn \"*zero_extend_v4hi_<P:mode>_insn\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")\n-        (unspec:V4HI [(mem:HI\n-                       (match_operand:P 1 \"register_operand\" \"r\"))]\n-                     UNSPEC_SHORT_LOAD))]\n+        (vec_merge:V4HI\n+          (vec_duplicate:V4HI\n+            (mem:HI (match_operand:P 1 \"register_operand\" \"r\")))\n+          (match_operand:V4HI 2 \"const_zero_operand\" \"Y\")\n+          (const_int 14)))]\n   \"TARGET_VIS\"\n   \"ldda\\t[%1] 0xd2, %0\")\n "}]}