{"sha": "3253eafbda8e4af9522ecb9316bd8a2b1c853888", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI1M2VhZmJkYThlNGFmOTUyMmVjYjkzMTZiZDhhMmIxYzg1Mzg4OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-01-18T09:11:57Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-01-18T09:11:57Z"}, "message": "tree-ssa-ccp.c (ccp_finalize): Return if something changed.\n\n\t* tree-ssa-ccp.c (ccp_finalize): Return if something changed.\n\t(execute_ssa_ccp): Return flags conditionally.\n\t* tree-ssa-propagate.c (substitue_and_fold): Return if something was\n\tchanged.\n\t* tree-ssa-propagate.h (substitute_and_fold): Update prototype.\n\nFrom-SVN: r120894", "tree": {"sha": "83538444d7fbc9ef0738dcdc51ef7f037ae7288b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83538444d7fbc9ef0738dcdc51ef7f037ae7288b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3253eafbda8e4af9522ecb9316bd8a2b1c853888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3253eafbda8e4af9522ecb9316bd8a2b1c853888", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3253eafbda8e4af9522ecb9316bd8a2b1c853888", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3253eafbda8e4af9522ecb9316bd8a2b1c853888/comments", "author": null, "committer": null, "parents": [{"sha": "aeceeb06a15d71d55fcc41c0ff3b3b9be01c79a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeceeb06a15d71d55fcc41c0ff3b3b9be01c79a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeceeb06a15d71d55fcc41c0ff3b3b9be01c79a1"}], "stats": {"total": 62, "additions": 35, "deletions": 27}, "files": [{"sha": "6539a7e7e1d8d63f8ba9fc7a75018c16fbfc515c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3253eafbda8e4af9522ecb9316bd8a2b1c853888/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3253eafbda8e4af9522ecb9316bd8a2b1c853888/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3253eafbda8e4af9522ecb9316bd8a2b1c853888", "patch": "@@ -1,3 +1,11 @@\n+18-01-2007  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-ssa-ccp.c (ccp_finalize): Return if something changed.\n+\t(execute_ssa_ccp): Return flags conditionally.\n+\t* tree-ssa-propagate.c (substitue_and_fold): Return if something was\n+\tchanged.\n+\t* tree-ssa-propagate.h (substitute_and_fold): Update prototype.\n+\n 18-01-2007  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* cfgcleanup.c (cleanup_cfg): Detect cfglayout mode and set"}, {"sha": "f2f09ed0d47b569be69037a24f6dc114bdcf0f12", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 18, "deletions": 23, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3253eafbda8e4af9522ecb9316bd8a2b1c853888/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3253eafbda8e4af9522ecb9316bd8a2b1c853888/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=3253eafbda8e4af9522ecb9316bd8a2b1c853888", "patch": "@@ -665,15 +665,18 @@ ccp_initialize (void)\n \n \n /* Do final substitution of propagated values, cleanup the flowgraph and\n-   free allocated storage.  */\n+   free allocated storage.  \n \n-static void\n+   Return TRUE when something was optimized.  */\n+\n+static bool\n ccp_finalize (void)\n {\n   /* Perform substitutions based on the known constant values.  */\n-  substitute_and_fold (const_val, false);\n+  bool something_changed = substitute_and_fold (const_val, false);\n \n   free (const_val);\n+  return something_changed;;\n }\n \n \n@@ -1397,21 +1400,24 @@ ccp_visit_stmt (tree stmt, edge *taken_edge_p, tree *output_p)\n \n /* Main entry point for SSA Conditional Constant Propagation.  */\n \n-static void\n+static unsigned int\n execute_ssa_ccp (bool store_ccp)\n {\n   do_store_ccp = store_ccp;\n   ccp_initialize ();\n   ssa_propagate (ccp_visit_stmt, ccp_visit_phi_node);\n-  ccp_finalize ();\n+  if (ccp_finalize ())\n+    return (TODO_cleanup_cfg | TODO_update_ssa | TODO_update_smt_usage\n+\t    | TODO_remove_unused_locals);\n+  else\n+    return 0;\n }\n \n \n static unsigned int\n do_ssa_ccp (void)\n {\n-  execute_ssa_ccp (false);\n-  return 0;\n+  return execute_ssa_ccp (false);\n }\n \n \n@@ -1435,13 +1441,8 @@ struct tree_opt_pass pass_ccp =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_cleanup_cfg\n-    | TODO_dump_func\n-    | TODO_update_ssa\n-    | TODO_ggc_collect\n-    | TODO_verify_ssa\n-    | TODO_verify_stmts\n-    | TODO_update_smt_usage,\t\t/* todo_flags_finish */\n+  TODO_dump_func | TODO_verify_ssa\n+  | TODO_verify_stmts | TODO_ggc_collect,/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };\n \n@@ -1450,8 +1451,7 @@ static unsigned int\n do_ssa_store_ccp (void)\n {\n   /* If STORE-CCP is not enabled, we just run regular CCP.  */\n-  execute_ssa_ccp (flag_tree_store_ccp != 0);\n-  return 0;\n+  return execute_ssa_ccp (flag_tree_store_ccp != 0);\n }\n \n static bool\n@@ -1477,13 +1477,8 @@ struct tree_opt_pass pass_store_ccp =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_dump_func\n-    | TODO_update_ssa\n-    | TODO_ggc_collect\n-    | TODO_verify_ssa\n-    | TODO_cleanup_cfg\n-    | TODO_verify_stmts\n-    | TODO_update_smt_usage,\t\t/* todo_flags_finish */\n+  TODO_dump_func | TODO_verify_ssa\n+  | TODO_verify_stmts | TODO_ggc_collect,/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };\n "}, {"sha": "040d972cf4f2542b8563d9e528a4ba33bc83c3c5", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3253eafbda8e4af9522ecb9316bd8a2b1c853888/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3253eafbda8e4af9522ecb9316bd8a2b1c853888/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=3253eafbda8e4af9522ecb9316bd8a2b1c853888", "patch": "@@ -1137,15 +1137,18 @@ fold_predicate_in (tree stmt)\n    expressions are evaluated with a call to vrp_evaluate_conditional.\n    This will only give meaningful results when called from tree-vrp.c\n    (the information used by vrp_evaluate_conditional is built by the\n-   VRP pass).  */\n+   VRP pass).  \n \n-void\n+   Return TRUE when something changed.  */\n+\n+bool\n substitute_and_fold (prop_value_t *prop_value, bool use_ranges_p)\n {\n   basic_block bb;\n+  bool something_changed = false;\n \n   if (prop_value == NULL && !use_ranges_p)\n-    return;\n+    return false;\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     fprintf (dump_file, \"\\nSubstituing values and folding statements\\n\\n\");\n@@ -1234,6 +1237,7 @@ substitute_and_fold (prop_value_t *prop_value, bool use_ranges_p)\n \n \t      /* Determine what needs to be done to update the SSA form.  */\n \t      pop_stmt_changes (bsi_stmt_ptr (i));\n+\t      something_changed = true;\n \t    }\n \t  else\n \t    {\n@@ -1261,6 +1265,7 @@ substitute_and_fold (prop_value_t *prop_value, bool use_ranges_p)\n       fprintf (dump_file, \"Predicates folded:    %6ld\\n\",\n \t       prop_stats.num_pred_folded);\n     }\n+  return something_changed;\n }\n \n #include \"gt-tree-ssa-propagate.h\""}, {"sha": "0994c8ac57648a5ecfa18c287fd1bc0c12779a3e", "filename": "gcc/tree-ssa-propagate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3253eafbda8e4af9522ecb9316bd8a2b1c853888/gcc%2Ftree-ssa-propagate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3253eafbda8e4af9522ecb9316bd8a2b1c853888/gcc%2Ftree-ssa-propagate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.h?ref=3253eafbda8e4af9522ecb9316bd8a2b1c853888", "patch": "@@ -120,6 +120,6 @@ bool stmt_makes_single_load (tree);\n bool stmt_makes_single_store (tree);\n prop_value_t *get_value_loaded_by (tree, prop_value_t *);\n bool replace_uses_in (tree, bool *, prop_value_t *);\n-void substitute_and_fold (prop_value_t *, bool);\n+bool substitute_and_fold (prop_value_t *, bool);\n \n #endif /* _TREE_SSA_PROPAGATE_H  */"}]}