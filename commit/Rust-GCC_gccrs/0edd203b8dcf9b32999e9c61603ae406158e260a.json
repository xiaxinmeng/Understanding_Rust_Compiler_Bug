{"sha": "0edd203b8dcf9b32999e9c61603ae406158e260a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVkZDIwM2I4ZGNmOWIzMjk5OWU5YzYxNjAzYWU0MDYxNThlMjYwYQ==", "commit": {"author": {"name": "Jason Eckhardt", "email": "jle@cygnus.com", "date": "2000-03-14T21:21:18Z"}, "committer": {"name": "Jason Eckhardt", "email": "jle@gcc.gnu.org", "date": "2000-03-14T21:21:18Z"}, "message": "flow.c (reorder_basic_blocks): Account for barriers when writing over NEXT_INSN (last_bb->end).\n\n\t* flow.c (reorder_basic_blocks): Account for barriers when writing\n\tover NEXT_INSN (last_bb->end).\n\t(verify_flow_info): Add check for missing barriers.\n\nFrom-SVN: r32545", "tree": {"sha": "630aa681d583c59f3190fff04006a712bfab0e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/630aa681d583c59f3190fff04006a712bfab0e69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0edd203b8dcf9b32999e9c61603ae406158e260a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0edd203b8dcf9b32999e9c61603ae406158e260a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0edd203b8dcf9b32999e9c61603ae406158e260a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0edd203b8dcf9b32999e9c61603ae406158e260a/comments", "author": null, "committer": null, "parents": [{"sha": "24dc027c9a77539deb4e2f4cf5d6878bc2a0aef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24dc027c9a77539deb4e2f4cf5d6878bc2a0aef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24dc027c9a77539deb4e2f4cf5d6878bc2a0aef7"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "8c5ac0b611474492c09e147b61405f8976878e2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0edd203b8dcf9b32999e9c61603ae406158e260a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0edd203b8dcf9b32999e9c61603ae406158e260a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0edd203b8dcf9b32999e9c61603ae406158e260a", "patch": "@@ -1,3 +1,9 @@\n+\n+2000-03-14  Jason Eckhardt  <jle@cygnus.com>\n+\t* flow.c (reorder_basic_blocks): Account for barriers when writing\n+\tover NEXT_INSN (last_bb->end).\n+\t(verify_flow_info): Add check for missing barriers.\n+\n 2000-03-14  Greg McGary  <gkm@gnu.org>\n \n \t* c-lex.h (enum rid): Add RID_BOUNDED & RID_UNBOUNDED."}, {"sha": "fe221cae63181943d469eaf9bb5935fb4a8096c2", "filename": "gcc/flow.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0edd203b8dcf9b32999e9c61603ae406158e260a/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0edd203b8dcf9b32999e9c61603ae406158e260a/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=0edd203b8dcf9b32999e9c61603ae406158e260a", "patch": "@@ -5785,6 +5785,7 @@ set_block_num (insn, bb)\n      and NOTE_INSN_BASIC_BLOCK\n    - check that all insns are in the basic blocks \n    (except the switch handling code, barriers and notes)\n+   - check that all returns are followed by barriers\n \n    In future it can be extended check a lot of other stuff as well\n    (reachability of basic blocks, life information, etc. etc.).  */\n@@ -5988,6 +5989,12 @@ verify_flow_info ()\n \t    }\n \t}\n \n+      if (GET_RTX_CLASS (GET_CODE (x)) == 'i'\n+\t  && GET_CODE (x) == JUMP_INSN\n+\t  && returnjump_p (x)\n+\t  && ! (NEXT_INSN (x) && GET_CODE (NEXT_INSN (x)) == BARRIER))\n+\t    fatal_insn (\"Return not followed by barrier\", x);\n+\n       x = NEXT_INSN (x);\n     }\n \n@@ -7758,8 +7765,19 @@ reorder_basic_blocks ()\n \t  BASIC_BLOCK (j) = tempbb;\n \t}\n     }\n-      \n-  NEXT_INSN (BASIC_BLOCK (n_basic_blocks - 1)->end) = last_insn;\n+     \n+    {\n+      rtx xafter = skip_insns_between_block (BASIC_BLOCK (n_basic_blocks - 1),\n+\t\t\t\t\t     REORDER_SKIP_AFTER);\n+      if (xafter)\n+\tNEXT_INSN (xafter) = last_insn;\n+      else\n+\tabort();\n+    }\n+\n+#ifdef ENABLE_CHECKING\n+  verify_flow_info ();\n+#endif\n \n   for (i = 0; i < n_basic_blocks - 1; i++)\n     {"}]}