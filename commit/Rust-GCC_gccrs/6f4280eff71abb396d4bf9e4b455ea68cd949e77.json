{"sha": "6f4280eff71abb396d4bf9e4b455ea68cd949e77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY0MjgwZWZmNzFhYmIzOTZkNGJmOWU0YjQ1NWVhNjhjZDk0OWU3Nw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-07-24T21:49:34Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-07-24T21:49:34Z"}, "message": "cppexp.c: Warn about unary + if -Wtraditional.\n\n\t* cppexp.c: Warn about unary + if -Wtraditional.\n\t* cpplex.c (lex_line): Always set BOL on the first token of a line.\n\nFrom-SVN: r35239", "tree": {"sha": "cad67533cd08c325707ca5aac9c99844289bff1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cad67533cd08c325707ca5aac9c99844289bff1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f4280eff71abb396d4bf9e4b455ea68cd949e77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4280eff71abb396d4bf9e4b455ea68cd949e77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f4280eff71abb396d4bf9e4b455ea68cd949e77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4280eff71abb396d4bf9e4b455ea68cd949e77/comments", "author": null, "committer": null, "parents": [{"sha": "4e81ae98cad81aa779f539d440d9b0f2c3f4fdff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e81ae98cad81aa779f539d440d9b0f2c3f4fdff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e81ae98cad81aa779f539d440d9b0f2c3f4fdff"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "d69e2324a13ada74ab8ac5ac3741b75bbd500de2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4280eff71abb396d4bf9e4b455ea68cd949e77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4280eff71abb396d4bf9e4b455ea68cd949e77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f4280eff71abb396d4bf9e4b455ea68cd949e77", "patch": "@@ -1,3 +1,8 @@\n+2000-07-24  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* cppexp.c: Warn about unary + if -Wtraditional.\n+\t* cpplex.c (lex_line): Always set BOL on the first token of a line.\n+\n 2000-07-24  Michael Meissner  <meissner@redhat.com>\n \n \t* d30v.h (FUNCTION_ARG_KEEP_AS_REFERENCE): Delete references to"}, {"sha": "b3442470e361a9ab0a57773c03d90d650cde6a22", "filename": "gcc/cppexp.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4280eff71abb396d4bf9e4b455ea68cd949e77/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4280eff71abb396d4bf9e4b455ea68cd949e77/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=6f4280eff71abb396d4bf9e4b455ea68cd949e77", "patch": "@@ -849,6 +849,10 @@ _cpp_parse_expr (pfile)\n \t\t  top->value = v2;\n \t\t  top->unsignedp = unsigned2;\n \t\t  top->flags |= HAVE_VALUE;\n+\n+\t\t  if (CPP_WTRADITIONAL (pfile))\n+\t\t    cpp_warning (pfile,\n+\t\t\t\"traditional C rejects the unary plus operator\");\n \t\t}\n \t      else\n \t\t{"}, {"sha": "bbe6f355b77f218f7560f4156b0df31befc961ab", "filename": "gcc/cpplex.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4280eff71abb396d4bf9e4b455ea68cd949e77/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4280eff71abb396d4bf9e4b455ea68cd949e77/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=6f4280eff71abb396d4bf9e4b455ea68cd949e77", "patch": "@@ -1881,10 +1881,8 @@ lex_line (pfile, list)\n       cur_token++->type = CPP_EOF;\n     }\n \n-  /* Directives, known or not, always start a new line.  */\n-  if (first_token == 0 || list->tokens[first_token].type == CPP_HASH)\n-    first->flags |= BOL;\n-  else\n+  first->flags |= BOL;\n+  if (first_token != 0)\n     /* 6.10.3.10: Within the sequence of preprocessing tokens making\n        up the invocation of a function-like macro, new line is\n        considered a normal white-space character.  */"}]}