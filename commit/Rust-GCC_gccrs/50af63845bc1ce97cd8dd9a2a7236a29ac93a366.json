{"sha": "50af63845bc1ce97cd8dd9a2a7236a29ac93a366", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBhZjYzODQ1YmMxY2U5N2NkOGRkOWEyYTcyMzZhMjlhYzkzYTM2Ng==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2006-03-13T12:16:40Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2006-03-13T12:16:40Z"}, "message": "jump.c (follow_jumps): Do not check for loop notes.\n\n\t* jump.c (follow_jumps): Do not check for loop notes.  Move check for\n\tflag_test_coverage out of loop.\n\nFrom-SVN: r111996", "tree": {"sha": "c2d4322ca61db735bc9e783b41bb0575e108cccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2d4322ca61db735bc9e783b41bb0575e108cccc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50af63845bc1ce97cd8dd9a2a7236a29ac93a366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50af63845bc1ce97cd8dd9a2a7236a29ac93a366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50af63845bc1ce97cd8dd9a2a7236a29ac93a366", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50af63845bc1ce97cd8dd9a2a7236a29ac93a366/comments", "author": null, "committer": null, "parents": [{"sha": "8083853174ebacc8775d52e58a142639d8aa2180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8083853174ebacc8775d52e58a142639d8aa2180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8083853174ebacc8775d52e58a142639d8aa2180"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "257cb9aae8a1dd64ccb06c3b8eada5ff6349cf59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50af63845bc1ce97cd8dd9a2a7236a29ac93a366/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50af63845bc1ce97cd8dd9a2a7236a29ac93a366/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50af63845bc1ce97cd8dd9a2a7236a29ac93a366", "patch": "@@ -1,3 +1,8 @@\n+2006-03-13  Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\t* jump.c (follow_jumps): Do not check for loop notes.  Move check for\n+\tflag_test_coverage out of loop.\n+\n 2006-03-13  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* final.c (shorten_branches): Remove outdated comment, and turn"}, {"sha": "79a21b4d1aeb885e5f24d210a8bbd4211e49c77b", "filename": "gcc/jump.c", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50af63845bc1ce97cd8dd9a2a7236a29ac93a366/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50af63845bc1ce97cd8dd9a2a7236a29ac93a366/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=50af63845bc1ce97cd8dd9a2a7236a29ac93a366", "patch": "@@ -1041,8 +1041,7 @@ sets_cc0_p (rtx x)\n    If the chain loops or we can't find end, return LABEL,\n    since that tells caller to avoid changing the insn.\n \n-   If RELOAD_COMPLETED is 0, we do not chain across a NOTE_INSN_LOOP_BEG or\n-   a USE or CLOBBER.  */\n+   If RELOAD_COMPLETED is 0, we do not chain across a USE or CLOBBER.  */\n \n rtx\n follow_jumps (rtx label)\n@@ -1063,19 +1062,15 @@ follow_jumps (rtx label)\n \t&& BARRIER_P (next));\n        depth++)\n     {\n-      /* Don't chain through the insn that jumps into a loop\n-\t from outside the loop,\n-\t since that would create multiple loop entry jumps\n-\t and prevent loop optimization.  */\n       rtx tem;\n-      if (!reload_completed)\n-\tfor (tem = value; tem != insn; tem = NEXT_INSN (tem))\n-\t  if (NOTE_P (tem)\n-\t      && (NOTE_LINE_NUMBER (tem) == NOTE_INSN_LOOP_BEG\n-\t\t  /* ??? Optional.  Disables some optimizations, but makes\n-\t\t     gcov output more accurate with -O.  */\n-\t\t  || (flag_test_coverage && NOTE_LINE_NUMBER (tem) > 0)))\n-\t    return value;\n+      if (!reload_completed && flag_test_coverage)\n+\t{\n+\t  /* ??? Optional.  Disables some optimizations, but makes\n+\t     gcov output more accurate with -O.  */\n+\t  for (tem = value; tem != insn; tem = NEXT_INSN (tem))\n+\t    if (NOTE_P (tem) && NOTE_LINE_NUMBER (tem) > 0)\n+\t      return value;\n+\t}\n \n       /* If we have found a cycle, make the insn jump to itself.  */\n       if (JUMP_LABEL (insn) == label)"}]}