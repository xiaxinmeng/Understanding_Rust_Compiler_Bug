{"sha": "9e8265851df1859e0dfc447cb9ac44088bb8cb1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU4MjY1ODUxZGYxODU5ZTBkZmM0NDdjYjlhYzQ0MDg4YmI4Y2IxYw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2006-10-04T16:41:55Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2006-10-04T16:41:55Z"}, "message": "Fix bug in constraint-check generator, reported by Rask Ingemann Lambertsen:\n\n\tFix bug in constraint-check generator, reported by Rask Ingemann\n\tLambertsen:\n\t* genpreds.c (add_constraint): Don't remove anything from the\n\texpression here.\n\t(write_tm_constrs_h): Detect whether \"op\" argument is used, and\n\tmark it ARG_UNUSED if it isn't.\n\t(write_insn_const_int_ok_for_constraint): Skip the part of the\n\texpression that would test whether \"op\" (which is not available\n\there) is a CONST_INT.\n\nFrom-SVN: r117433", "tree": {"sha": "20a2dfcb81e007f92b06951185a8557d56dfb9bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20a2dfcb81e007f92b06951185a8557d56dfb9bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e8265851df1859e0dfc447cb9ac44088bb8cb1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e8265851df1859e0dfc447cb9ac44088bb8cb1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e8265851df1859e0dfc447cb9ac44088bb8cb1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e8265851df1859e0dfc447cb9ac44088bb8cb1c/comments", "author": null, "committer": null, "parents": [{"sha": "2e38371e01e1944f79f4cdec3ead6fae8d31950d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e38371e01e1944f79f4cdec3ead6fae8d31950d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e38371e01e1944f79f4cdec3ead6fae8d31950d"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "209ab0d63d9ee9a3e90f151ee62e630953621ca4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e8265851df1859e0dfc447cb9ac44088bb8cb1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e8265851df1859e0dfc447cb9ac44088bb8cb1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e8265851df1859e0dfc447cb9ac44088bb8cb1c", "patch": "@@ -1,3 +1,15 @@\n+2006-10-04  Zack Weinberg  <zackw@panix.com>\n+\n+\tFix bug in constraint-check generator, reported by Rask Ingemann\n+\tLambertsen:\n+\t* genpreds.c (add_constraint): Don't remove anything from the\n+\texpression here.\n+\t(write_tm_constrs_h): Detect whether \"op\" argument is used, and\n+\tmark it ARG_UNUSED if it isn't.\n+\t(write_insn_const_int_ok_for_constraint): Skip the part of the\n+\texpression that would test whether \"op\" (which is not available\n+\there) is a CONST_INT.\n+\n 2006-10-04  Ryan Mansfield  <rmansfield@qnx.com>\n \n \tPR c++/28448\n@@ -42,7 +54,7 @@\n 2006-10-01  Ryan Mansfield  <rmansfield@qnx.com>\n \n \tPR c/20533\n-\t* doc/extend.texi: Add used variable attribute description. \n+\t* doc/extend.texi: Add used variable attribute description.\n \n 2006-09-30  Joseph S. Myers  <joseph@codesourcery.com>\n \n@@ -4040,7 +4052,7 @@\n \trange of a REG_DEAD register.\n \n 2006-18-05  Joerg Wunsch <j.gnu@uriah.heep.sax.de>\n-            Anatoly Sokolov <aesok@post.ru>\n+\t    Anatoly Sokolov <aesok@post.ru>\n \n \t* config/avr/avr.c (avr_mcu_types): Add support for attiny261,\n \tattiny461, attiny861, attiny25, attiny45, attiny85, attiny24,\n@@ -4157,7 +4169,7 @@\n \t* config/pa/pa-linux.h (STRING_ASM_OP): Prepend and append a tab.\n \n 2006-05-19  Daniel Berlin  <dberlin@dberlin.org>\n-            Kenneth Zadeck <zadeck@naturalbridge.com>\n+\t    Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \tPR rtl-optimization/26855\n \n@@ -6555,7 +6567,7 @@\n 2006-04-04  Matthias Klose  <doko@debian.org>\n \n \t* Makefile.in (unprotoize.o): Same dependencies as for protoize.o.\n-\t\n+\n \tPR bootstrap/26764\n \tPR bootstrap/27334\n \t* Makefile.in (s-macro_list): Conform to POSIX rules in single quoted"}, {"sha": "535c9ddde772b9a516b0dffb91c7ef682a539645", "filename": "gcc/genpreds.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e8265851df1859e0dfc447cb9ac44088bb8cb1c/gcc%2Fgenpreds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e8265851df1859e0dfc447cb9ac44088bb8cb1c/gcc%2Fgenpreds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpreds.c?ref=9e8265851df1859e0dfc447cb9ac44088bb8cb1c", "patch": "@@ -891,10 +891,6 @@ add_constraint (const char *name, const char *regclass,\n \t  have_error = 1;\n \t  return;\n \t}\n-\n-      /* Remove the redundant (and (match_code \"const_(int|double)\")\n-\t from the expression.  */\n-      exp = XEXP (exp, 1);\n     }\n \n   \n@@ -1078,10 +1074,13 @@ write_tm_constrs_h (void)\n \tbool needs_rval = needs_variable (c->exp, \"rval\");\n \tbool needs_mode = (needs_variable (c->exp, \"mode\")\n \t\t\t   || needs_hval || needs_lval || needs_rval);\n+\tbool needs_op = (needs_variable (c->exp, \"op\")\n+\t\t\t || needs_ival || needs_mode);\n \n \tprintf (\"static inline bool\\n\"\n-\t\t\"satisfies_constraint_%s (rtx op)\\n\"\n-\t\t\"{\\n\", c->c_name);\n+\t\t\"satisfies_constraint_%s (rtx %s)\\n\"\n+\t\t\"{\\n\", c->c_name,\n+\t\tneeds_op ? \"op\" : \"ARG_UNUSED (op)\");\n \tif (needs_mode)\n \t  puts (\"enum machine_mode mode = GET_MODE (op);\");\n \tif (needs_ival)\n@@ -1157,7 +1156,10 @@ write_insn_const_int_ok_for_constraint (void)\n     if (c->is_const_int)\n       {\n \tprintf (\"    case CONSTRAINT_%s:\\n      return \", c->c_name);\n-\twrite_predicate_expr (c->exp);\n+\t/* c->exp is guaranteed to be (and (match_code \"const_int\") (...));\n+\t   we know at this point that we have a const_int, so we need not\n+\t   bother with that part of the test.  */\n+\twrite_predicate_expr (XEXP (c->exp, 1));\n \tfputs (\";\\n\\n\", stdout);\n       }\n "}]}