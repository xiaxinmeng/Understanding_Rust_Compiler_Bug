{"sha": "859174c82493971bd1e408231e24a7724953042f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU5MTc0YzgyNDkzOTcxYmQxZTQwODIzMWUyNGE3NzI0OTUzMDQyZg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-11-24T19:16:23Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-11-24T19:16:23Z"}, "message": "Fix EOF handling for arrays.\n\n2019-11-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\tHarald Anlauf <anlauf@gmx.de>\n\n\tPR fortran/92569\n\t* io/transfer.c (transfer_array_inner):  If position is\n\tat AFTER_ENDFILE in current unit, return from data loop.\n\n2019-11-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\tHarald Anlauf <anlauf@gmx.de>\n\n\tPR fortran/92569\n\t* gfortran.dg/eof_6.f90: New test.\n\n\nCo-Authored-By: Harald Anlauf <anlauf@gmx.de>\n\nFrom-SVN: r278659", "tree": {"sha": "21b49de0efcc442137d20845c6e5444df0a575a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21b49de0efcc442137d20845c6e5444df0a575a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/859174c82493971bd1e408231e24a7724953042f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859174c82493971bd1e408231e24a7724953042f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/859174c82493971bd1e408231e24a7724953042f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859174c82493971bd1e408231e24a7724953042f/comments", "author": null, "committer": null, "parents": [{"sha": "af4e8d4d5aa3a13bc9e2a8aa50341043e8ad6c61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af4e8d4d5aa3a13bc9e2a8aa50341043e8ad6c61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af4e8d4d5aa3a13bc9e2a8aa50341043e8ad6c61"}], "stats": {"total": 102, "additions": 87, "deletions": 15}, "files": [{"sha": "9ff8a951623ed3bfc69f225708e3c56d529bcf2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859174c82493971bd1e408231e24a7724953042f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859174c82493971bd1e408231e24a7724953042f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=859174c82493971bd1e408231e24a7724953042f", "patch": "@@ -1,3 +1,9 @@\n+2019-11-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\tHarald Anlauf <anlauf@gmx.de>\n+\n+\tPR fortran/92569\n+\t* gfortran.dg/eof_6.f90: New test.\n+\n 2019-11-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/92422"}, {"sha": "1c155576b77e87f7a7d72e603d3aec1c3bccbc17", "filename": "gcc/testsuite/gfortran.dg/eof_6.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859174c82493971bd1e408231e24a7724953042f/gcc%2Ftestsuite%2Fgfortran.dg%2Feof_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859174c82493971bd1e408231e24a7724953042f/gcc%2Ftestsuite%2Fgfortran.dg%2Feof_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Feof_6.f90?ref=859174c82493971bd1e408231e24a7724953042f", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run }\n+! { dg-options \"-ffrontend-optimize\" }\n+! PR 92569 - the EOF condition was not recognized with\n+! -ffrontend-optimize.  Originjal test case by Bill Lipa.\n+program main\n+  implicit none\n+  real(kind=8) ::  tdat(1000,10)\n+  real(kind=8) :: res (10, 3)\n+  integer :: i, j, k, np\n+\n+  open (unit=20, status=\"scratch\")\n+  res = reshape([(real(i),i=1,30)], shape(res))\n+  write (20,'(10G12.5)') res\n+  rewind 20\n+  do  j = 1,1000\n+     read (20,*,end=1)(tdat(j,k),k=1,10)\n+  end do\n+      \n+1 continue\n+  np = j-1\n+  if (np /= 3) stop 1\n+  if (any(transpose(res) /= tdat(1:np,:))) stop 2\n+end program main"}, {"sha": "46b96f25f1699e42e86cc9f95947f82966cde514", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859174c82493971bd1e408231e24a7724953042f/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859174c82493971bd1e408231e24a7724953042f/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=859174c82493971bd1e408231e24a7724953042f", "patch": "@@ -1,3 +1,10 @@\n+2019-11-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\tHarald Anlauf <anlauf@gmx.de>\n+\n+\tPR fortran/92569\n+\t* io/transfer.c (transfer_array_inner):  If position is\n+\tat AFTER_ENDFILE in current unit, return from data loop.\n+\n 2019-11-18  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* Makefile.in: Regenerate."}, {"sha": "89f0abe9938920b385a8f5c03cfaa70b3938f467", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 51, "deletions": 15, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859174c82493971bd1e408231e24a7724953042f/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859174c82493971bd1e408231e24a7724953042f/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=859174c82493971bd1e408231e24a7724953042f", "patch": "@@ -2542,26 +2542,62 @@ transfer_array_inner (st_parameter_dt *dtp, gfc_array_char *desc, int kind,\n \n   data = GFC_DESCRIPTOR_DATA (desc);\n \n-  while (data)\n+  /* When reading, we need to check endfile conditions so we do not miss\n+     an END=label.  Make this separate so we do not have an extra test\n+     in a tight loop when it is not needed.  */\n+\n+  if (dtp->u.p.current_unit && dtp->u.p.mode == READING)\n     {\n-      dtp->u.p.transfer (dtp, iotype, data, kind, size, tsize);\n-      data += stride0 * tsize;\n-      count[0] += tsize;\n-      n = 0;\n-      while (count[n] == extent[n])\n+      while (data)\n \t{\n-\t  count[n] = 0;\n-\t  data -= stride[n] * extent[n];\n-\t  n++;\n-\t  if (n == rank)\n+\t  if (unlikely (dtp->u.p.current_unit->endfile == AFTER_ENDFILE))\n+\t    return;\n+\n+\t  dtp->u.p.transfer (dtp, iotype, data, kind, size, tsize);\n+\t  data += stride0 * tsize;\n+\t  count[0] += tsize;\n+\t  n = 0;\n+\t  while (count[n] == extent[n])\n \t    {\n-\t      data = NULL;\n-\t      break;\n+\t      count[n] = 0;\n+\t      data -= stride[n] * extent[n];\n+\t      n++;\n+\t      if (n == rank)\n+\t\t{\n+\t\t  data = NULL;\n+\t\t  break;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  count[n]++;\n+\t\t  data += stride[n];\n+\t\t}\n \t    }\n-\t  else\n+\t}\n+    }\n+  else\n+    {\n+      while (data)\n+\t{\n+\t  dtp->u.p.transfer (dtp, iotype, data, kind, size, tsize);\n+\t  data += stride0 * tsize;\n+\t  count[0] += tsize;\n+\t  n = 0;\n+\t  while (count[n] == extent[n])\n \t    {\n-\t      count[n]++;\n-\t      data += stride[n];\n+\t      count[n] = 0;\n+\t      data -= stride[n] * extent[n];\n+\t      n++;\n+\t      if (n == rank)\n+\t\t{\n+\t\t  data = NULL;\n+\t\t  break;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  count[n]++;\n+\t\t  data += stride[n];\n+\t\t}\n \t    }\n \t}\n     }"}]}