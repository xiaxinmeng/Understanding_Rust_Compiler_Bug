{"sha": "f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg1YzE0ZWVkMTNmZTA5ODVhYzQ5MWU4OWNjZDBmZjhiZDRiOGExZQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-01-13T01:07:32Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-01-13T01:07:32Z"}, "message": "fix-header.c (read_scan_file): Use cpp_get_callbacks and cpp_get_options rather than dereferencing pfile and...\n\n        * fix-header.c (read_scan_file): Use cpp_get_callbacks and\n        cpp_get_options rather than dereferencing pfile and using\n        CPP_OPTION.\n        * scan-decls.c (scan_decls): Use return value of\n        cpp_pop_buffer rather than CPP_BUFFER.\n\nFrom-SVN: r38972", "tree": {"sha": "a7922a725bb54929e724a801edbcfd3a1f73d998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7922a725bb54929e724a801edbcfd3a1f73d998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e/comments", "author": null, "committer": null, "parents": [{"sha": "7e96d768fe4e8fa821372cc7c7cd707efb917a3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e96d768fe4e8fa821372cc7c7cd707efb917a3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e96d768fe4e8fa821372cc7c7cd707efb917a3b"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "fe1a7463266651f291adf320b9cf077adca6a818", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e", "patch": "@@ -1,3 +1,11 @@\n+2001-01-13  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * fix-header.c (read_scan_file): Use cpp_get_callbacks and\n+        cpp_get_options rather than dereferencing pfile and using\n+        CPP_OPTION.\n+        * scan-decls.c (scan_decls): Use return value of\n+        cpp_pop_buffer rather than CPP_BUFFER.\n+\t\n 2001-01-13  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * cppinit.c (cpp_handle_option): help_only is now part of the"}, {"sha": "522434f6ce3b22668f83be83934d4f5a992e1df0", "filename": "gcc/fix-header.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e", "patch": "@@ -613,19 +613,24 @@ read_scan_file (in_fname, argc, argv)\n      char **argv;\n {\n   cpp_reader* scan_in;\n+  cpp_callbacks *cb;\n+  cpp_options *options;\n   struct fn_decl *fn;\n   int i;\n   register struct symbol_list *cur_symbols;\n \n   obstack_init (&scan_file_obstack); \n \n   scan_in = cpp_create_reader (CLK_GNUC89);\n-  scan_in->cb.file_change = cb_file_change;\n+  cb = cpp_get_callbacks (scan_in);\n+  cb->file_change = cb_file_change;\n \n   /* We are going to be scanning a header file out of its proper context,\n      so ignore warnings and errors.  */\n-  CPP_OPTION (scan_in, inhibit_warnings) = 1;\n-  CPP_OPTION (scan_in, inhibit_errors) = 1;\n+  options = cpp_get_options (pfile);\n+  options->inhibit_warnings = 1;\n+  options->inhibit_errors = 1;\n+\n   i = cpp_handle_options (scan_in, argc, argv);\n   if (i < argc && ! CPP_FATAL_ERRORS (scan_in))\n     cpp_fatal (scan_in, \"Invalid option `%s'\", argv[i]);"}, {"sha": "55f10abb8d6e3a4296d87292ecbe45a0d40ca938", "filename": "gcc/scan-decls.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e/gcc%2Fscan-decls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e/gcc%2Fscan-decls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan-decls.c?ref=f85c14eed13fe0985ac491e89ccd0ff8bd4b8a1e", "patch": "@@ -113,8 +113,7 @@ scan_decls (pfile, argc, argv)\n     }\n   if (token.type == CPP_EOF)\n     {\n-      cpp_pop_buffer (pfile);\n-      if (CPP_BUFFER (pfile) == NULL)\n+      if (cpp_pop_buffer (pfile) == 0)\n \treturn 0;\n \n       goto new_statement;\n@@ -149,8 +148,7 @@ scan_decls (pfile, argc, argv)\n \t  goto new_statement;\n \t  \n \tcase CPP_EOF:\n-\t  cpp_pop_buffer (pfile);\n-\t  if (CPP_BUFFER (pfile) == NULL)\n+\t  if (cpp_pop_buffer (pfile) == 0)\n \t    return 0;\n \t  break;\n "}]}