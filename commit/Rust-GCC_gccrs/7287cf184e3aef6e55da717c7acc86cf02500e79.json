{"sha": "7287cf184e3aef6e55da717c7acc86cf02500e79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI4N2NmMTg0ZTNhZWY2ZTU1ZGE3MTdjN2FjYzg2Y2YwMjUwMGU3OQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-10-13T13:19:51Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-10-13T13:19:51Z"}, "message": "lto-wrapper: Use nontemp filename with -save-temps\n\ngcc/ChangeLog:\n\n\t* lto-wrapper.c (find_crtoffloadtable): With -save-temps,\n\tuse non-temp file name utilizing the dump prefix.\n\t(run_gcc): Update call.", "tree": {"sha": "97b3615bea7ded42fcfbb4356c63ea1af2e8a6de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97b3615bea7ded42fcfbb4356c63ea1af2e8a6de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7287cf184e3aef6e55da717c7acc86cf02500e79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7287cf184e3aef6e55da717c7acc86cf02500e79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7287cf184e3aef6e55da717c7acc86cf02500e79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7287cf184e3aef6e55da717c7acc86cf02500e79/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a673744dee7a80e6525fb0da87d053c8ccab6275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a673744dee7a80e6525fb0da87d053c8ccab6275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a673744dee7a80e6525fb0da87d053c8ccab6275"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "4d3cd7a56f20863fe697ea3259284624fcf7c77b", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7287cf184e3aef6e55da717c7acc86cf02500e79/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7287cf184e3aef6e55da717c7acc86cf02500e79/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=7287cf184e3aef6e55da717c7acc86cf02500e79", "patch": "@@ -1026,7 +1026,7 @@ copy_file (const char *dest, const char *src)\n    the copy to the linker.  */\n \n static void\n-find_crtoffloadtable (void)\n+find_crtoffloadtable (int save_temps, const char *dumppfx)\n {\n   char **paths = NULL;\n   const char *library_path = getenv (\"LIBRARY_PATH\");\n@@ -1039,7 +1039,11 @@ find_crtoffloadtable (void)\n     if (access_check (paths[i], R_OK) == 0)\n       {\n \t/* The linker will delete the filename we give it, so make a copy.  */\n-\tchar *crtoffloadtable = make_temp_file (\".crtoffloadtable.o\");\n+\tchar *crtoffloadtable;\n+\tif (!save_temps)\n+\t  crtoffloadtable = make_temp_file (\".crtoffloadtable.o\");\n+\telse\n+\t  crtoffloadtable = concat (dumppfx, \"crtoffloadtable.o\");\n \tcopy_file (crtoffloadtable, paths[i]);\n \tprintf (\"%s\\n\", crtoffloadtable);\n \tXDELETEVEC (crtoffloadtable);\n@@ -1698,7 +1702,7 @@ run_gcc (unsigned argc, char *argv[])\n \n       if (offload_names)\n \t{\n-\t  find_crtoffloadtable ();\n+\t  find_crtoffloadtable (save_temps, dumppfx);\n \t  for (i = 0; offload_names[i]; i++)\n \t    printf (\"%s\\n\", offload_names[i]);\n \t  free_array_of_ptrs ((void **) offload_names, i);"}]}