{"sha": "cd5336897ef7e5c7ec137838308ccdcac458b8c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q1MzM2ODk3ZWY3ZTVjN2VjMTM3ODM4MzA4Y2NkY2FjNDU4YjhjMw==", "commit": {"author": {"name": "Paul Pluzhnikov", "email": "ppluzhnikov@google.com", "date": "2009-05-01T00:19:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-05-01T00:19:24Z"}, "message": "configure.ac (HAVE_LD_BUILDID): New check for ld --build-id support.\n\n\t* configure.ac (HAVE_LD_BUILDID): New check for ld --build-id\n\tsupport.\n\t(ENABLE_LD_BUILDID): New configuration option.\n\t* gcc.c [HAVE_LD_BUILDID and ENABLE_LD_BUILDID]\n\t(LINK_BUILDID_SPEC): New macro.\n\t(init_spec): If defined, prepend it between LINK_EH_SPEC and\n\tlink_spec.\n\t* doc/install.texi: Document --enable-linker-build-id option.\n\t* configure: Rebuild.\n\t* config.in: Rebuild.\n\nCo-Authored-By: Roland McGrath <roland@redhat.com>\n\nFrom-SVN: r147029", "tree": {"sha": "bc6a0299750d5af207ceb8cfc2dd5ed3e2f0d9dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc6a0299750d5af207ceb8cfc2dd5ed3e2f0d9dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd5336897ef7e5c7ec137838308ccdcac458b8c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5336897ef7e5c7ec137838308ccdcac458b8c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd5336897ef7e5c7ec137838308ccdcac458b8c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5336897ef7e5c7ec137838308ccdcac458b8c3/comments", "author": {"login": "EmployedRussian", "id": 39165328, "node_id": "MDQ6VXNlcjM5MTY1MzI4", "avatar_url": "https://avatars.githubusercontent.com/u/39165328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EmployedRussian", "html_url": "https://github.com/EmployedRussian", "followers_url": "https://api.github.com/users/EmployedRussian/followers", "following_url": "https://api.github.com/users/EmployedRussian/following{/other_user}", "gists_url": "https://api.github.com/users/EmployedRussian/gists{/gist_id}", "starred_url": "https://api.github.com/users/EmployedRussian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EmployedRussian/subscriptions", "organizations_url": "https://api.github.com/users/EmployedRussian/orgs", "repos_url": "https://api.github.com/users/EmployedRussian/repos", "events_url": "https://api.github.com/users/EmployedRussian/events{/privacy}", "received_events_url": "https://api.github.com/users/EmployedRussian/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76547252330a60b9a97c1afa84effc701a0ec6db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76547252330a60b9a97c1afa84effc701a0ec6db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76547252330a60b9a97c1afa84effc701a0ec6db"}], "stats": {"total": 157, "additions": 142, "deletions": 15}, "files": [{"sha": "4df38d7ce64a14afee6c3d1e3f1e0a8410df78a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5336897ef7e5c7ec137838308ccdcac458b8c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5336897ef7e5c7ec137838308ccdcac458b8c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd5336897ef7e5c7ec137838308ccdcac458b8c3", "patch": "@@ -1,3 +1,17 @@\n+2009-04-30  Paul Pluzhnikov  <ppluzhnikov@google.com>\n+\t    Roland McGrath <roland@redhat.com>\n+\n+\t* configure.ac (HAVE_LD_BUILDID): New check for ld --build-id\n+\tsupport.\n+\t(ENABLE_LD_BUILDID): New configuration option.\n+\t* gcc.c [HAVE_LD_BUILDID and ENABLE_LD_BUILDID]\n+\t(LINK_BUILDID_SPEC): New macro.\n+\t(init_spec): If defined, prepend it between LINK_EH_SPEC and\n+\tlink_spec.\n+\t* doc/install.texi: Document --enable-linker-build-id option.\n+\t* configure: Rebuild.\n+\t* config.in: Rebuild.\n+\n 2009-04-30  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* config/mips/mips.h (FRAME_GROWS_DOWNWARD,"}, {"sha": "76a7810f3d42b06d7bae49008f5b294d5f2e2bf3", "filename": "gcc/config.in", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5336897ef7e5c7ec137838308ccdcac458b8c3/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5336897ef7e5c7ec137838308ccdcac458b8c3/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=cd5336897ef7e5c7ec137838308ccdcac458b8c3", "patch": "@@ -101,6 +101,12 @@\n #endif\n \n \n+/* Define if gcc should always pass --build-id to linker. */\n+#ifndef USED_FOR_TARGET\n+#undef ENABLE_LD_BUILDID\n+#endif\n+\n+\n /* Define to 1 if translation of program messages to the user's native\n    language is requested. */\n #ifndef USED_FOR_TARGET\n@@ -1025,6 +1031,12 @@\n #endif\n \n \n+/* Define if your linker supports --build-id. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_LD_BUILDID\n+#endif\n+\n+\n /* Define if your linker supports --demangle option. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_LD_DEMANGLE"}, {"sha": "fd03ec5f6638afe6ea29042f2f63b344c3b5e092", "filename": "gcc/configure", "status": "modified", "additions": 66, "deletions": 14, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5336897ef7e5c7ec137838308ccdcac458b8c3/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5336897ef7e5c7ec137838308ccdcac458b8c3/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=cd5336897ef7e5c7ec137838308ccdcac458b8c3", "patch": "@@ -1078,6 +1078,8 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n+  --enable-linker-build-id\n+                          compiler will always pass --build-id to linker\n   --enable-maintainer-mode\n                           enable make rules and dependencies not useful\n                           (and sometimes confusing) to the casual installer\n@@ -14383,13 +14385,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:14386: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14388: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:14389: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14391: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:14392: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14394: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -15546,7 +15548,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 15549 \"configure\"' > conftest.$ac_ext\n+  echo '#line 15551 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -16845,11 +16847,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16848: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16850: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:16852: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16854: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -17184,11 +17186,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17187: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17189: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:17191: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17193: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -17289,11 +17291,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17292: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17294: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:17296: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17298: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17344,11 +17346,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17347: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17349: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:17351: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17353: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -20156,7 +20158,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 20159 \"configure\"\n+#line 20161 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -20252,7 +20254,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 20255 \"configure\"\n+#line 20257 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -24117,6 +24119,56 @@ _ACEOF\n     ;;\n esac\n \n+echo \"$as_me:$LINENO: checking linker --build-id support\" >&5\n+echo $ECHO_N \"checking linker --build-id support... $ECHO_C\" >&6\n+if test \"${gcc_cv_ld_buildid+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_ld_buildid=no\n+  if test $in_tree_ld = yes ; then\n+    if test \"$gcc_cv_gld_major_version\" -eq 2 -a \\\n+       \"$gcc_cv_gld_minor_version\" -ge 18 -o \\\n+       \"$gcc_cv_gld_major_version\" -gt 2 \\\n+       && test $in_tree_ld_is_elf = yes; then\n+      gcc_cv_ld_buildid=yes\n+    fi\n+  elif test x$gcc_cv_ld != x; then\n+    if $gcc_cv_ld --help 2>/dev/null | grep build-id > /dev/null; then\n+      gcc_cv_ld_buildid=yes\n+    fi\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_ld_buildid\" >&5\n+echo \"${ECHO_T}$gcc_cv_ld_buildid\" >&6\n+if test x\"$gcc_cv_ld_buildid\" = xyes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_LD_BUILDID 1\n+_ACEOF\n+\n+fi\n+\n+# Check whether --enable-linker-build-id or --disable-linker-build-id was given.\n+if test \"${enable_linker_build_id+set}\" = set; then\n+  enableval=\"$enable_linker_build_id\"\n+\n+else\n+  enable_linker_build_id=no\n+fi;\n+\n+if test x\"$enable_linker_build_id\" = xyes; then\n+  if test x\"$gcc_cv_ld_buildid\" = xyes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define ENABLE_LD_BUILDID 1\n+_ACEOF\n+\n+  else\n+    { echo \"$as_me:$LINENO: WARNING: --build-id is not supported by your linker; --enable-linker-build-id ignored\" >&5\n+echo \"$as_me: WARNING: --build-id is not supported by your linker; --enable-linker-build-id ignored\" >&2;}\n+  fi\n+fi\n+\n echo \"$as_me:$LINENO: checking linker --sysroot support\" >&5\n echo $ECHO_N \"checking linker --sysroot support... $ECHO_C\" >&6\n if test \"${gcc_cv_ld_sysroot+set}\" = set; then"}, {"sha": "fbdc166c6ef182f97e405ac0d453073c072a6581", "filename": "gcc/configure.ac", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5336897ef7e5c7ec137838308ccdcac458b8c3/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5336897ef7e5c7ec137838308ccdcac458b8c3/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=cd5336897ef7e5c7ec137838308ccdcac458b8c3", "patch": "@@ -3510,6 +3510,41 @@ EOF\n     ;;\n esac\n \n+AC_CACHE_CHECK(linker --build-id support,\n+  gcc_cv_ld_buildid,\n+  [gcc_cv_ld_buildid=no\n+  if test $in_tree_ld = yes ; then\n+    if test \"$gcc_cv_gld_major_version\" -eq 2 -a \\\n+       \"$gcc_cv_gld_minor_version\" -ge 18 -o \\\n+       \"$gcc_cv_gld_major_version\" -gt 2 \\\n+       && test $in_tree_ld_is_elf = yes; then\n+      gcc_cv_ld_buildid=yes\n+    fi\n+  elif test x$gcc_cv_ld != x; then\n+    if $gcc_cv_ld --help 2>/dev/null | grep build-id > /dev/null; then\n+      gcc_cv_ld_buildid=yes\n+    fi\n+  fi])\n+if test x\"$gcc_cv_ld_buildid\" = xyes; then\n+  AC_DEFINE(HAVE_LD_BUILDID, 1,\n+  [Define if your linker supports --build-id.])\n+fi\n+\n+AC_ARG_ENABLE(linker-build-id,\n+[  --enable-linker-build-id\n+                          compiler will always pass --build-id to linker],\n+[],\n+enable_linker_build_id=no)\n+\n+if test x\"$enable_linker_build_id\" = xyes; then\n+  if test x\"$gcc_cv_ld_buildid\" = xyes; then\n+    AC_DEFINE(ENABLE_LD_BUILDID, 1,\n+    [Define if gcc should always pass --build-id to linker.])\n+  else\n+    AC_MSG_WARN(--build-id is not supported by your linker; --enable-linker-build-id ignored)\n+  fi\n+fi\n+\n AC_CACHE_CHECK(linker --sysroot support,\n   gcc_cv_ld_sysroot,\n   [gcc_cv_ld_sysroot=no"}, {"sha": "e89f3994adce0b5b11cc9829fdd77c8299610d13", "filename": "gcc/gcc.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5336897ef7e5c7ec137838308ccdcac458b8c3/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5336897ef7e5c7ec137838308ccdcac458b8c3/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=cd5336897ef7e5c7ec137838308ccdcac458b8c3", "patch": "@@ -730,6 +730,13 @@ proper position among the other output files.  */\n #endif\n #endif\n \n+#ifndef LINK_BUILDID_SPEC\n+# if defined(HAVE_LD_BUILDID) && defined(ENABLE_LD_BUILDID)\n+#  define LINK_BUILDID_SPEC \"%{!r:--build-id} \"\n+# endif\n+#endif\n+\n+\n /* -u* was put back because both BSD and SysV seem to support it.  */\n /* %{static:} simply prevents an error message if the target machine\n    doesn't handle -static.  */\n@@ -1844,9 +1851,16 @@ init_spec (void)\n     asm_spec = XOBFINISH (&obstack, const char *);\n   }\n #endif\n-#ifdef LINK_EH_SPEC\n+\n+#if defined LINK_EH_SPEC || defined LINK_BUILDID_SPEC\n+# ifdef LINK_BUILDID_SPEC\n+  /* Prepend LINK_BUILDID_SPEC to whatever link_spec we had before.  */\n+  obstack_grow (&obstack, LINK_BUILDID_SPEC, sizeof(LINK_BUILDID_SPEC) - 1);\n+# endif\n+# ifdef LINK_EH_SPEC\n   /* Prepend LINK_EH_SPEC to whatever link_spec we had before.  */\n   obstack_grow (&obstack, LINK_EH_SPEC, sizeof(LINK_EH_SPEC) - 1);\n+# endif\n   obstack_grow0 (&obstack, link_spec, strlen (link_spec));\n   link_spec = XOBFINISH (&obstack, const char *);\n #endif"}]}