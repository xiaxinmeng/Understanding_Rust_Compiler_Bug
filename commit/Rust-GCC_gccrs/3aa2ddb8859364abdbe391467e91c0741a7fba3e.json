{"sha": "3aa2ddb8859364abdbe391467e91c0741a7fba3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FhMmRkYjg4NTkzNjRhYmRiZTM5MTQ2N2U5MWMwNzQxYTdmYmEzZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-01-17T09:57:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-01-17T09:57:56Z"}, "message": "re PR c/25682 (ICE when using old sytle offsetof (with non zero start) as array size)\n\n\tPR c/25682\n\t* c-typeck.c (build_unary_op): Fold offsetof-like expressions\n\teven when the pointer is not NULL.\ncp/\n\t* decl.c (compute_array_index_type): After issuing not an integral\n\tconstant-expression error, set size to 1 to avoid ICEs later on.\ntestsuite/\n\t* gcc.dg/pr25682.c: New test.\n\t* g++.dg/parse/array-size2.C: New test.\n\nFrom-SVN: r109812", "tree": {"sha": "199ee3e668600a1058b2f24948647c8931113c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/199ee3e668600a1058b2f24948647c8931113c50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3aa2ddb8859364abdbe391467e91c0741a7fba3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa2ddb8859364abdbe391467e91c0741a7fba3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aa2ddb8859364abdbe391467e91c0741a7fba3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa2ddb8859364abdbe391467e91c0741a7fba3e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "474eccc60315960b14fb0af4b7da9c6795ac4f0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474eccc60315960b14fb0af4b7da9c6795ac4f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/474eccc60315960b14fb0af4b7da9c6795ac4f0e"}], "stats": {"total": 74, "additions": 72, "deletions": 2}, "files": [{"sha": "ca2c55534c9dc8376a5484249f89567167831741", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3aa2ddb8859364abdbe391467e91c0741a7fba3e", "patch": "@@ -1,3 +1,9 @@\n+2006-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/25682\n+\t* c-typeck.c (build_unary_op): Fold offsetof-like expressions\n+\teven when the pointer is not NULL.\n+\n 2006-01-16  Ian Lance Taylor  <ian@airs.com>\n \n \t* common.opt (ftoplevel-reorder): New option."}, {"sha": "e4428485dfeb8c3d26f3c56c0083593ad0bd5092", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=3aa2ddb8859364abdbe391467e91c0741a7fba3e", "patch": "@@ -3003,8 +3003,13 @@ build_unary_op (enum tree_code code, tree xarg, int flag)\n \t when we have proper support for integer constant expressions.  */\n       val = get_base_address (arg);\n       if (val && TREE_CODE (val) == INDIRECT_REF\n-\t  && integer_zerop (TREE_OPERAND (val, 0)))\n-\treturn fold_convert (argtype, fold_offsetof (arg));\n+          && TREE_CONSTANT (TREE_OPERAND (val, 0)))\n+\t{\n+\t  tree op0 = fold_convert (argtype, fold_offsetof (arg)), op1;\n+\n+\t  op1 = fold_convert (argtype, TREE_OPERAND (val, 0));\n+\t  return fold_build2 (PLUS_EXPR, argtype, op0, op1);\n+\t}\n \n       val = build1 (ADDR_EXPR, argtype, arg);\n "}, {"sha": "77bb00b61ccd8541309e9d701844022418610ae3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3aa2ddb8859364abdbe391467e91c0741a7fba3e", "patch": "@@ -1,3 +1,9 @@\n+2006-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/25682\n+\t* decl.c (compute_array_index_type): After issuing not an integral\n+\tconstant-expression error, set size to 1 to avoid ICEs later on.\n+\n 2006-01-16  Ian Lance Taylor  <ian@airs.com>\n \n \t* parser.c: Include \"cgraph.h\"."}, {"sha": "48e985c5f42a1218c913a910b98922c4ded1e693", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3aa2ddb8859364abdbe391467e91c0741a7fba3e", "patch": "@@ -6343,6 +6343,7 @@ compute_array_index_type (tree name, tree size)\n \t       name);\n       else\n \terror (\"size of array is not an integral constant-expression\");\n+      size = integer_one_node;\n     }\n   else if (pedantic)\n     {"}, {"sha": "89b1693d060c5f8f052f1c124508ff08fe9489ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3aa2ddb8859364abdbe391467e91c0741a7fba3e", "patch": "@@ -1,3 +1,9 @@\n+2006-01-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/25682\n+\t* gcc.dg/pr25682.c: New test.\n+\t* g++.dg/parse/array-size2.C: New test.\n+\n 2006-01-16  Ian Lance Taylor  <ian@airs.com>\n \n \t* consistency.vlad: Remove entire directory, 1652 files."}, {"sha": "22a57b2dc0bcebd325f9e85fdc7d9ccebf3d3b9e", "filename": "gcc/testsuite/g++.dg/parse/array-size2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Farray-size2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Farray-size2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Farray-size2.C?ref=3aa2ddb8859364abdbe391467e91c0741a7fba3e", "patch": "@@ -0,0 +1,19 @@\n+// PR c/25682\n+// { dg-do compile }\n+// Test whether we don't ICE on invalid array sizes.\n+\n+struct S\n+{\n+  char a[4];\n+  int b;\n+};\n+\n+extern void bar (char *, char *);\n+\n+void\n+foo (void)\n+{\n+  char g[(char *) &((struct S *) 0)->b - (char *) 0];\t// { dg-error \"not an integral constant-expression\" }\n+  char h[(__SIZE_TYPE__) &((struct S *) 8)->b];\t\t// { dg-error \"not an integral constant-expression\" }\n+  bar (g, h);\n+}"}, {"sha": "3a1d7c2ba598778f3e3bf214e4b8431e3106eec5", "filename": "gcc/testsuite/gcc.dg/pr25682.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25682.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aa2ddb8859364abdbe391467e91c0741a7fba3e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25682.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25682.c?ref=3aa2ddb8859364abdbe391467e91c0741a7fba3e", "patch": "@@ -0,0 +1,27 @@\n+/* PR c/25682 */\n+/* { dg-do compile } */\n+/* Test whether we don't ICE on questionable constructs where offsetof\n+   should have been used instead.  */\n+\n+struct S\n+{\n+  char a[4];\n+  int b;\n+};\n+\n+char c[(char *) &((struct S *) 0)->b - (char *) 0];\n+char d[(__SIZE_TYPE__) &((struct S *) 8)->b];\n+char e[sizeof (c) == __builtin_offsetof (struct S, b) ? 1 : -1];\n+char f[sizeof (d) == __builtin_offsetof (struct S, b) + 8 ? 1 : -1];\n+\n+extern void bar (char *, char *);\n+\n+void\n+foo (void)\n+{\n+  char g[(char *) &((struct S *) 0)->b - (char *) 0];\n+  char h[(__SIZE_TYPE__) &((struct S *) 8)->b];\n+  char i[sizeof (g) == __builtin_offsetof (struct S, b) ? 1 : -1];\n+  char j[sizeof (h) == __builtin_offsetof (struct S, b) + 8 ? 1 : -1];\n+  bar (g, h);\n+}"}]}