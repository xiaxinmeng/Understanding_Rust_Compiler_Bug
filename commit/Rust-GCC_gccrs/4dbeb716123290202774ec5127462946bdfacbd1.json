{"sha": "4dbeb716123290202774ec5127462946bdfacbd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRiZWI3MTYxMjMyOTAyMDI3NzRlYzUxMjc0NjI5NDZiZGZhY2JkMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-11-07T20:51:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-11-07T20:51:05Z"}, "message": "re PR c++/82835 (ICE on valid code with -fopenmp)\n\n\tPR c++/82835\n\t* cp-gimplify.c (cxx_omp_clause_apply_fn): For methods pass i - 1 to\n\tconvert_default_arg instead of i.\n\n\t* testsuite/libgomp.c++/pr82835.C: New test.\n\nFrom-SVN: r254511", "tree": {"sha": "58f678236f303012b63383c3d2287adcd26473e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58f678236f303012b63383c3d2287adcd26473e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dbeb716123290202774ec5127462946bdfacbd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dbeb716123290202774ec5127462946bdfacbd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dbeb716123290202774ec5127462946bdfacbd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dbeb716123290202774ec5127462946bdfacbd1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "acd377795f259233d3b9c5cd81a9156c1c3081f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd377795f259233d3b9c5cd81a9156c1c3081f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd377795f259233d3b9c5cd81a9156c1c3081f9"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "52cd542bb9731844e076731e30b51554139287e8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dbeb716123290202774ec5127462946bdfacbd1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dbeb716123290202774ec5127462946bdfacbd1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4dbeb716123290202774ec5127462946bdfacbd1", "patch": "@@ -1,3 +1,9 @@\n+2017-11-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/82835\n+\t* cp-gimplify.c (cxx_omp_clause_apply_fn): For methods pass i - 1 to\n+\tconvert_default_arg instead of i.\n+\n 2017-11-06  Jason Merrill  <jason@redhat.com>\n \n \tP0704R1 - fixing const-qualified pointers to members"}, {"sha": "7c7c0409af8378769a6fd8420a70e23e1e63ee60", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dbeb716123290202774ec5127462946bdfacbd1/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dbeb716123290202774ec5127462946bdfacbd1/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=4dbeb716123290202774ec5127462946bdfacbd1", "patch": "@@ -1717,6 +1717,7 @@ cxx_omp_clause_apply_fn (tree fn, tree arg1, tree arg2)\n   if (arg2)\n     defparm = TREE_CHAIN (defparm);\n \n+  bool is_method = TREE_CODE (TREE_TYPE (fn)) == METHOD_TYPE;\n   if (TREE_CODE (TREE_TYPE (arg1)) == ARRAY_TYPE)\n     {\n       tree inner_type = TREE_TYPE (arg1);\n@@ -1765,8 +1766,8 @@ cxx_omp_clause_apply_fn (tree fn, tree arg1, tree arg2)\n       for (parm = defparm; parm && parm != void_list_node;\n \t   parm = TREE_CHAIN (parm), i++)\n \targarray[i] = convert_default_arg (TREE_VALUE (parm),\n-\t\t\t\t\t   TREE_PURPOSE (parm), fn, i,\n-\t\t\t\t\t   tf_warning_or_error);\n+\t\t\t\t\t   TREE_PURPOSE (parm), fn,\n+\t\t\t\t\t   i - is_method, tf_warning_or_error);\n       t = build_call_a (fn, i, argarray);\n       t = fold_convert (void_type_node, t);\n       t = fold_build_cleanup_point_expr (TREE_TYPE (t), t);\n@@ -1798,8 +1799,8 @@ cxx_omp_clause_apply_fn (tree fn, tree arg1, tree arg2)\n       for (parm = defparm; parm && parm != void_list_node;\n \t   parm = TREE_CHAIN (parm), i++)\n \targarray[i] = convert_default_arg (TREE_VALUE (parm),\n-\t\t\t\t\t   TREE_PURPOSE (parm),\n-\t\t\t\t\t   fn, i, tf_warning_or_error);\n+\t\t\t\t\t   TREE_PURPOSE (parm), fn,\n+\t\t\t\t\t   i - is_method, tf_warning_or_error);\n       t = build_call_a (fn, i, argarray);\n       t = fold_convert (void_type_node, t);\n       return fold_build_cleanup_point_expr (TREE_TYPE (t), t);"}, {"sha": "19966bd0947646e135680d307382880d65349a9f", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dbeb716123290202774ec5127462946bdfacbd1/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dbeb716123290202774ec5127462946bdfacbd1/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=4dbeb716123290202774ec5127462946bdfacbd1", "patch": "@@ -1,3 +1,8 @@\n+2017-11-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/82835\n+\t* testsuite/libgomp.c++/pr82835.C: New test.\n+\n 2017-11-06  Martin Liska  <mliska@suse.cz>\n \n \t* testsuite/libgomp.c++/loop-2.C: Return a value"}, {"sha": "df64ecfb1cf1feb61889c761ea7a3e7e84245e14", "filename": "libgomp/testsuite/libgomp.c++/pr82835.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dbeb716123290202774ec5127462946bdfacbd1/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr82835.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dbeb716123290202774ec5127462946bdfacbd1/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr82835.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr82835.C?ref=4dbeb716123290202774ec5127462946bdfacbd1", "patch": "@@ -0,0 +1,34 @@\n+// PR c++/82835\n+// { dg-do run }\n+\n+int a, b;\n+\n+template <class>\n+struct C {\n+  C (int x = a) : c (5) { if (x != 137) __builtin_abort (); }\n+  int c;\n+};\n+\n+struct D {\n+  void foo ();\n+  int d;\n+};\n+\n+void\n+D::foo ()\n+{\n+  C<int> c;\n+#pragma omp for private (c)\n+  for (b = 0; b < d; b++)\n+    c.c++;\n+}\n+\n+int\n+main ()\n+{\n+  a = 137;\n+  D d;\n+  d.d = 16;\n+  d.foo ();\n+  return 0;\n+}"}]}