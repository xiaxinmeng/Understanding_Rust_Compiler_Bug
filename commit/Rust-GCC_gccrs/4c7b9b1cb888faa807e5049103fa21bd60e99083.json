{"sha": "4c7b9b1cb888faa807e5049103fa21bd60e99083", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM3YjliMWNiODg4ZmFhODA3ZTUwNDkxMDNmYTIxYmQ2MGU5OTA4Mw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-10-27T14:03:10Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-10-27T14:03:10Z"}, "message": "re PR target/55034 (avr.c:2877:7: error: variable \u2018regno_dest\u2019 set but not used)\n\n\tPR target/55034\n\t* config/avr/avr.c (avr_out_lpm): Remove unused regno_dest.\n\nFrom-SVN: r192878", "tree": {"sha": "a30ff10f0d27bc965212149ba802eb42422f0b94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a30ff10f0d27bc965212149ba802eb42422f0b94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c7b9b1cb888faa807e5049103fa21bd60e99083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7b9b1cb888faa807e5049103fa21bd60e99083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c7b9b1cb888faa807e5049103fa21bd60e99083", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7b9b1cb888faa807e5049103fa21bd60e99083/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6af1a779f79bda60d6ea6eab1fc02804d3cf79bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6af1a779f79bda60d6ea6eab1fc02804d3cf79bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6af1a779f79bda60d6ea6eab1fc02804d3cf79bf"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "f9a4bee960671717b88b9dd3db1beea17a7a16c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7b9b1cb888faa807e5049103fa21bd60e99083/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7b9b1cb888faa807e5049103fa21bd60e99083/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c7b9b1cb888faa807e5049103fa21bd60e99083", "patch": "@@ -1,3 +1,8 @@\n+2012-10-27  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/55034\n+\t* config/avr/avr.c (avr_out_lpm): Remove unused regno_dest.\n+\n 2012-10-27  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/55042"}, {"sha": "3d1a599265f74643f304c65671c3bad444301222", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c7b9b1cb888faa807e5049103fa21bd60e99083/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c7b9b1cb888faa807e5049103fa21bd60e99083/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=4c7b9b1cb888faa807e5049103fa21bd60e99083", "patch": "@@ -2874,7 +2874,6 @@ avr_out_lpm (rtx insn, rtx *op, int *plen)\n   rtx src = SET_SRC (single_set (insn));\n   rtx addr;\n   int n_bytes = GET_MODE_SIZE (GET_MODE (dest));\n-  int regno_dest;\n   int segment;\n   RTX_CODE code;\n   addr_space_t as = MEM_ADDR_SPACE (src);\n@@ -2903,8 +2902,6 @@ avr_out_lpm (rtx insn, rtx *op, int *plen)\n   xop[5] = tmp_reg_rtx;\n   xop[6] = XEXP (rampz_rtx, 0);\n \n-  regno_dest = REGNO (dest);\n-\n   segment = avr_addrspace[as].segment;\n \n   /* Set RAMPZ as needed.  */"}]}