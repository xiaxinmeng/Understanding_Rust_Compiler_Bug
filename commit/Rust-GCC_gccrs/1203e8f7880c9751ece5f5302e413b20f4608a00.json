{"sha": "1203e8f7880c9751ece5f5302e413b20f4608a00", "node_id": "C_kwDOANBUbNoAKDEyMDNlOGY3ODgwYzk3NTFlY2U1ZjUzMDJlNDEzYjIwZjQ2MDhhMDA", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-03-29T00:40:16Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-03-29T00:40:16Z"}, "message": "analyzer: fix ICE with incorrect lookup of cgraph node [PR105074]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/105074\n\t* region.cc (ipa_ref_requires_tracking): Drop \"context_fndecl\",\n\tinstead using the ref->referring to get the cgraph node of the\n\tcaller.\n\t(symnode_requires_tracking_p): Likewise.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/105074\n\t* gcc.dg/analyzer/pr105074.c: New test.\n\t* gcc.dg/analyzer/untracked-1.c (extern_fn_char_ptr): New decl.\n\t(test_13): New.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "dda0f9c6c414928c4011092f48a2f29ab9c6d5af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dda0f9c6c414928c4011092f48a2f29ab9c6d5af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1203e8f7880c9751ece5f5302e413b20f4608a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1203e8f7880c9751ece5f5302e413b20f4608a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1203e8f7880c9751ece5f5302e413b20f4608a00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1203e8f7880c9751ece5f5302e413b20f4608a00/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aab0127dae4e7d6069fa6963e9f4c5b013a48b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aab0127dae4e7d6069fa6963e9f4c5b013a48b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aab0127dae4e7d6069fa6963e9f4c5b013a48b66"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "749e6182b06fe31cc9a0f69e75ea3b65171431eb", "filename": "gcc/analyzer/region.cc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1203e8f7880c9751ece5f5302e413b20f4608a00/gcc%2Fanalyzer%2Fregion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1203e8f7880c9751ece5f5302e413b20f4608a00/gcc%2Fanalyzer%2Fregion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion.cc?ref=1203e8f7880c9751ece5f5302e413b20f4608a00", "patch": "@@ -1168,11 +1168,10 @@ decl_region::get_svalue_for_initializer (region_model_manager *mgr) const\n }\n \n /* Subroutine of symnode_requires_tracking_p; return true if REF\n-   within CONTEXT_FNDECL might imply that we should be tracking the\n-   value of a decl.  */\n+   might imply that we should be tracking the value of its decl.  */\n \n static bool\n-ipa_ref_requires_tracking (const ipa_ref *ref, tree context_fndecl)\n+ipa_ref_requires_tracking (ipa_ref *ref)\n {\n   /* If we have a load/store/alias of the symbol, then we'll track\n      the decl's value.  */\n@@ -1188,8 +1187,10 @@ ipa_ref_requires_tracking (const ipa_ref *ref, tree context_fndecl)\n       return true;\n     case GIMPLE_CALL:\n       {\n-\tcgraph_node *context_cnode = cgraph_node::get (context_fndecl);\n-\tcgraph_edge *edge = context_cnode->get_edge (ref->stmt);\n+\tcgraph_node *caller_cnode = dyn_cast <cgraph_node *> (ref->referring);\n+\tif (caller_cnode == NULL)\n+\t  return true;\n+\tcgraph_edge *edge = caller_cnode->get_edge (ref->stmt);\n \tif (!edge)\n \t  return true;\n \tif (edge->callee == NULL)\n@@ -1232,7 +1233,7 @@ symnode_requires_tracking_p (symtab_node *symnode)\n   if (TREE_CODE (context_fndecl) != FUNCTION_DECL)\n     return true;\n   for (auto ref : symnode->ref_list.referring)\n-    if (ipa_ref_requires_tracking (ref, context_fndecl))\n+    if (ipa_ref_requires_tracking (ref))\n       return true;\n \n   /* If we get here, then we don't have uses of this decl that require"}, {"sha": "2735854d79afd635741508c79a9daaa75fb14a3d", "filename": "gcc/testsuite/gcc.dg/analyzer/pr105074.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1203e8f7880c9751ece5f5302e413b20f4608a00/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr105074.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1203e8f7880c9751ece5f5302e413b20f4608a00/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr105074.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr105074.c?ref=1203e8f7880c9751ece5f5302e413b20f4608a00", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-additional-options \"-O2 -fdump-analyzer-untracked\" } */\n+\n+void _gnutls_log(const char *);\n+static void _gnutls_ocsp_verify_mandatory_stapling(void) {\n+  _gnutls_log(__func__); /* { dg-warning \"track '__func__': no\" } */\n+}\n+void check_ocsp_response_gnutls_x509_cert_verify_peers(void) {\n+  _gnutls_ocsp_verify_mandatory_stapling();\n+}"}, {"sha": "d07c2975670932f0fc463e6eebbc1e9dd1553f96", "filename": "gcc/testsuite/gcc.dg/analyzer/untracked-1.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1203e8f7880c9751ece5f5302e413b20f4608a00/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Funtracked-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1203e8f7880c9751ece5f5302e413b20f4608a00/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Funtracked-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Funtracked-1.c?ref=1203e8f7880c9751ece5f5302e413b20f4608a00", "patch": "@@ -11,6 +11,7 @@ typedef struct boxed_int { int value; } boxed_int;\n extern void extern_fn (struct st *);\n static void __attribute__((noinline)) internal_fn (struct st *) {}\n extern int extern_get_int (void);\n+extern void extern_fn_char_ptr (const char *);\n \n void test_0 (void)\n {\n@@ -97,3 +98,8 @@ int test_12 (void (*fnptr) (struct st *))\n   static struct st s12 = { __FILE__, __LINE__ }; /* { dg-warning \"track 's12': yes\" } */\n   fnptr (&s12);\n }\n+\n+void test_13 (void)\n+{\n+  extern_fn_char_ptr (__func__); /* { dg-warning \"track '__func__': no\" } */\n+}"}]}