{"sha": "a73f34c2d256fc23d41864193274e88d7d7b28cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTczZjM0YzJkMjU2ZmMyM2Q0MTg2NDE5MzI3NGU4OGQ3ZDdiMjhjYw==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2016-08-06T21:11:26Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2016-08-06T21:11:26Z"}, "message": "data-streamer-in.c (streamer_read_wide_int): New.\n\ngcc/ChangeLog:\n\n2016-08-07  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* data-streamer-in.c (streamer_read_wide_int): New.\n\t(streamer_read_widest_int): Renamed function.\n\t* data-streamer-out.c (streamer_write_wide_int): New\n\t(streamer_write_widest_int): Renamed function.\n\t* lto-streamer-in.c (streamer_read_wi): Renamed and moved to\n\tdata-stream-in.c.\n\t(input_cfg): Call renamed function.\n\t* lto-streamer-out.c (streamer_write_wi): Renamed and moved to\n\tdata-stream-out.c.\n\t(output_cfg): Call renamed function.\n\t* data-streamer.h: Add declarations.\n\nFrom-SVN: r239213", "tree": {"sha": "a3a6c8db1277081e35d533447806110021f36f5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3a6c8db1277081e35d533447806110021f36f5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a73f34c2d256fc23d41864193274e88d7d7b28cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73f34c2d256fc23d41864193274e88d7d7b28cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a73f34c2d256fc23d41864193274e88d7d7b28cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73f34c2d256fc23d41864193274e88d7d7b28cc/comments", "author": null, "committer": null, "parents": [{"sha": "19278b02d711d178cce78033a5a95ffeccbae42d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19278b02d711d178cce78033a5a95ffeccbae42d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19278b02d711d178cce78033a5a95ffeccbae42d"}], "stats": {"total": 117, "additions": 82, "deletions": 35}, "files": [{"sha": "2193fda0f818e05ba62b7efd9e69658549607439", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a73f34c2d256fc23d41864193274e88d7d7b28cc", "patch": "@@ -1,3 +1,17 @@\n+2016-08-07  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* data-streamer-in.c (streamer_read_wide_int): New.\n+\t(streamer_read_widest_int): Renamed function.\n+\t* data-streamer-out.c (streamer_write_wide_int): New\n+\t(streamer_write_widest_int): Renamed function.\n+\t* lto-streamer-in.c (streamer_read_wi): Renamed and moved to\n+\tdata-stream-in.c.\n+\t(input_cfg): Call renamed function.\n+\t* lto-streamer-out.c (streamer_write_wi): Renamed and moved to\n+\tdata-stream-out.c.\n+\t(output_cfg): Call renamed function.\n+\t* data-streamer.h: Add declarations.\n+\n 2016-08-08  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* tree-ssa-ccp.c (extend_mask): New param sgn."}, {"sha": "2a49fe2aaa3141fd3cf92920f1d2edeb64f7637d", "filename": "gcc/data-streamer-in.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2Fdata-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2Fdata-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdata-streamer-in.c?ref=a73f34c2d256fc23d41864193274e88d7d7b28cc", "patch": "@@ -184,3 +184,34 @@ streamer_read_gcov_count (struct lto_input_block *ib)\n   gcc_assert (ret >= 0);\n   return ret;\n }\n+\n+/* Read the physical representation of a wide_int val from\n+   input block IB.  */\n+\n+wide_int\n+streamer_read_wide_int (struct lto_input_block *ib)\n+{\n+  HOST_WIDE_INT a[WIDE_INT_MAX_ELTS];\n+  int i;\n+  int prec = streamer_read_uhwi (ib);\n+  int len = streamer_read_uhwi (ib);\n+  for (i = 0; i < len; i++)\n+    a[i] = streamer_read_hwi (ib);\n+  return wide_int::from_array (a, len, prec);\n+}\n+\n+/* Read the physical representation of a widest_int val from\n+   input block IB.  */\n+\n+widest_int\n+streamer_read_widest_int (struct lto_input_block *ib)\n+{\n+  HOST_WIDE_INT a[WIDE_INT_MAX_ELTS];\n+  int i;\n+  int prec ATTRIBUTE_UNUSED = streamer_read_uhwi (ib);\n+  int len = streamer_read_uhwi (ib);\n+  for (i = 0; i < len; i++)\n+    a[i] = streamer_read_hwi (ib);\n+  return widest_int::from_array (a, len);\n+}\n+"}, {"sha": "3dd423bd59cce8b8c30fe13a50146e08fe311d75", "filename": "gcc/data-streamer-out.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2Fdata-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2Fdata-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdata-streamer-out.c?ref=a73f34c2d256fc23d41864193274e88d7d7b28cc", "patch": "@@ -375,3 +375,30 @@ streamer_write_data_stream (struct lto_output_stream *obs, const void *data,\n     }\n }\n \n+/* Emit the physical representation of wide_int VAL to output block OB.  */\n+\n+void\n+streamer_write_wide_int (struct output_block *ob, const wide_int &val)\n+{\n+  int len = val.get_len ();\n+\n+  streamer_write_uhwi (ob, val.get_precision ());\n+  streamer_write_uhwi (ob, len);\n+  for (int i = 0; i < len; i++)\n+    streamer_write_hwi (ob, val.elt (i));\n+}\n+\n+/* Emit the physical representation of widest_int W to output block OB.  */\n+\n+void\n+streamer_write_widest_int (struct output_block *ob,\n+\t\t\t   const widest_int &w)\n+{\n+  int len = w.get_len ();\n+\n+  streamer_write_uhwi (ob, w.get_precision ());\n+  streamer_write_uhwi (ob, len);\n+  for (int i = 0; i < len; i++)\n+    streamer_write_hwi (ob, w.elt (i));\n+}\n+"}, {"sha": "ff479a661c203b37ecb5cccd259da8df173f3eeb", "filename": "gcc/data-streamer.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2Fdata-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2Fdata-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdata-streamer.h?ref=a73f34c2d256fc23d41864193274e88d7d7b28cc", "patch": "@@ -69,6 +69,8 @@ void streamer_write_hwi_stream (struct lto_output_stream *, HOST_WIDE_INT);\n void streamer_write_gcov_count_stream (struct lto_output_stream *, gcov_type);\n void streamer_write_data_stream (struct lto_output_stream *, const void *,\n \t\t\t\t size_t);\n+void streamer_write_wide_int (struct output_block *, const wide_int &);\n+void streamer_write_widest_int (struct output_block *, const widest_int &);\n \n /* In data-streamer-in.c  */\n const char *streamer_read_string (struct data_in *, struct lto_input_block *);\n@@ -81,6 +83,8 @@ const char *bp_unpack_string (struct data_in *, struct bitpack_d *);\n unsigned HOST_WIDE_INT streamer_read_uhwi (struct lto_input_block *);\n HOST_WIDE_INT streamer_read_hwi (struct lto_input_block *);\n gcov_type streamer_read_gcov_count (struct lto_input_block *);\n+wide_int streamer_read_wide_int (struct lto_input_block *);\n+widest_int streamer_read_widest_int (struct lto_input_block *);\n \n /* Returns a new bit-packing context for bit-packing into S.  */\n static inline struct bitpack_d"}, {"sha": "5075b5672724276549dd1a0e9f0afdfc13b90ba7", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=a73f34c2d256fc23d41864193274e88d7d7b28cc", "patch": "@@ -710,21 +710,6 @@ make_new_block (struct function *fn, unsigned int index)\n }\n \n \n-/* Read a wide-int.  */\n-\n-static widest_int\n-streamer_read_wi (struct lto_input_block *ib)\n-{\n-  HOST_WIDE_INT a[WIDE_INT_MAX_ELTS];\n-  int i;\n-  int prec ATTRIBUTE_UNUSED = streamer_read_uhwi (ib);\n-  int len = streamer_read_uhwi (ib);\n-  for (i = 0; i < len; i++)\n-    a[i] = streamer_read_hwi (ib);\n-  return widest_int::from_array (a, len);\n-}\n-\n-\n /* Read the CFG for function FN from input block IB.  */\n \n static void\n@@ -834,13 +819,13 @@ input_cfg (struct lto_input_block *ib, struct data_in *data_in,\n       loop->estimate_state = streamer_read_enum (ib, loop_estimation, EST_LAST);\n       loop->any_upper_bound = streamer_read_hwi (ib);\n       if (loop->any_upper_bound)\n-\tloop->nb_iterations_upper_bound = streamer_read_wi (ib);\n+\tloop->nb_iterations_upper_bound = streamer_read_widest_int (ib);\n       loop->any_likely_upper_bound = streamer_read_hwi (ib);\n       if (loop->any_likely_upper_bound)\n-\tloop->nb_iterations_likely_upper_bound = streamer_read_wi (ib);\n+\tloop->nb_iterations_likely_upper_bound = streamer_read_widest_int (ib);\n       loop->any_estimate = streamer_read_hwi (ib);\n       if (loop->any_estimate)\n-\tloop->nb_iterations_estimate = streamer_read_wi (ib);\n+\tloop->nb_iterations_estimate = streamer_read_widest_int (ib);\n \n       /* Read OMP SIMD related info.  */\n       loop->safelen = streamer_read_hwi (ib);"}, {"sha": "bc45721f0777655004e867556725a174afdd7c7c", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73f34c2d256fc23d41864193274e88d7d7b28cc/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=a73f34c2d256fc23d41864193274e88d7d7b28cc", "patch": "@@ -1828,20 +1828,6 @@ output_ssa_names (struct output_block *ob, struct function *fn)\n }\n \n \n-/* Output a wide-int.  */\n-\n-static void\n-streamer_write_wi (struct output_block *ob,\n-\t\t   const widest_int &w)\n-{\n-  int len = w.get_len ();\n-\n-  streamer_write_uhwi (ob, w.get_precision ());\n-  streamer_write_uhwi (ob, len);\n-  for (int i = 0; i < len; i++)\n-    streamer_write_hwi (ob, w.elt (i));\n-}\n-\n \n /* Output the cfg.  */\n \n@@ -1915,13 +1901,13 @@ output_cfg (struct output_block *ob, struct function *fn)\n \t\t\t   loop_estimation, EST_LAST, loop->estimate_state);\n       streamer_write_hwi (ob, loop->any_upper_bound);\n       if (loop->any_upper_bound)\n-\tstreamer_write_wi (ob, loop->nb_iterations_upper_bound);\n+\tstreamer_write_widest_int (ob, loop->nb_iterations_upper_bound);\n       streamer_write_hwi (ob, loop->any_likely_upper_bound);\n       if (loop->any_likely_upper_bound)\n-\tstreamer_write_wi (ob, loop->nb_iterations_likely_upper_bound);\n+\tstreamer_write_widest_int (ob, loop->nb_iterations_likely_upper_bound);\n       streamer_write_hwi (ob, loop->any_estimate);\n       if (loop->any_estimate)\n-\tstreamer_write_wi (ob, loop->nb_iterations_estimate);\n+\tstreamer_write_widest_int (ob, loop->nb_iterations_estimate);\n \n       /* Write OMP SIMD related info.  */\n       streamer_write_hwi (ob, loop->safelen);"}]}