{"sha": "d6b605f6ae91ad83e2c7cae9c420f05a572c973d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZiNjA1ZjZhZTkxYWQ4M2UyYzdjYWU5YzQyMGYwNWE1NzJjOTczZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-10-10T20:42:45Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-10-10T20:42:45Z"}, "message": "[C++ PATCH] Kill unneeded hash specialization\n\nhttps://gcc.gnu.org/ml/gcc-patches/2017-10/msg00621.html\n\t* cp-tree.h (default_hash_traits <lang_identifier *>): Delete\n\tspecialization.\n\nFrom-SVN: r253620", "tree": {"sha": "d71383654d28f92898da18646ee290aed835ee19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d71383654d28f92898da18646ee290aed835ee19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6b605f6ae91ad83e2c7cae9c420f05a572c973d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b605f6ae91ad83e2c7cae9c420f05a572c973d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6b605f6ae91ad83e2c7cae9c420f05a572c973d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b605f6ae91ad83e2c7cae9c420f05a572c973d/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92395f1c2473db7898ca06fa9b17f144564554df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92395f1c2473db7898ca06fa9b17f144564554df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92395f1c2473db7898ca06fa9b17f144564554df"}], "stats": {"total": 27, "additions": 3, "deletions": 24}, "files": [{"sha": "25083eb757aaa2feef5918ef9ca91b6e2c0338ec", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6b605f6ae91ad83e2c7cae9c420f05a572c973d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6b605f6ae91ad83e2c7cae9c420f05a572c973d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d6b605f6ae91ad83e2c7cae9c420f05a572c973d", "patch": "@@ -1,5 +1,8 @@\n 2017-10-10  Nathan Sidwell  <nathan@acm.org>\n \n+\t* cp-tree.h (default_hash_traits <lang_identifier *>): Delete\n+\tspecialization.\n+\n \t* decl2.c (struct mangled_decl_hash): New hash traits.\n \t(mangled_decls): Make hash_table<mangled_decl_hash>.\n \t(generate_mangling_alias, record_mangling): Adjust."}, {"sha": "4fb2dc8e7c7fbba44b910d68cec0b78c84bfc76f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6b605f6ae91ad83e2c7cae9c420f05a572c973d/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6b605f6ae91ad83e2c7cae9c420f05a572c973d/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=d6b605f6ae91ad83e2c7cae9c420f05a572c973d", "patch": "@@ -572,30 +572,6 @@ identifier_p (tree t)\n   return NULL;\n }\n \n-/* Hash trait specialization for lang_identifiers.  This allows\n-   PCH-safe maps keyed by DECL_NAME.  If it wasn't for PCH, we could\n-   just use a regular tree key.  */\n-\n-template <>\n-struct default_hash_traits <lang_identifier *>\n-  : pointer_hash <tree_node>\n-{\n-  /* Use a regular tree as the type, to make using the hash table\n-     simpler.  We'll get dynamic type checking with the hash function\n-     itself.  */\n-  GTY((skip)) typedef tree value_type;\n-  GTY((skip)) typedef tree compare_type;\n-\n-  static hashval_t hash (const value_type id)\n-  {\n-    return IDENTIFIER_HASH_VALUE (id);\n-  }\n-\n-  /* Nothing is deletable.  Everything is insertable.  */\n-  static bool is_deleted (value_type) { return false; }\n-  static void remove (value_type) { gcc_unreachable (); }\n-};\n-\n #define LANG_IDENTIFIER_CAST(NODE) \\\n \t((struct lang_identifier*)IDENTIFIER_NODE_CHECK (NODE))\n "}]}