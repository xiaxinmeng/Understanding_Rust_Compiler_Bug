{"sha": "3fbab5492684265b58f60d6b6a89cb1eb6773e34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZiYWI1NDkyNjg0MjY1YjU4ZjYwZDZiNmE4OWNiMWViNjc3M2UzNA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-03-15T07:03:20Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-03-15T07:03:20Z"}, "message": "re PR fortran/19101 (missing & in character continuation not caught)\n\n2006-03-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/19101\n\t* gfortran.h: Add warn_ampersand.\n\t* invoke.texi: Add documentation for new option.\n\t* lang.opt: Add Wampersand.\n\t* options.c (gfc_init_options): Initialize warn_ampersand.\n\t(gfc_post_options): Set the warn if pedantic.\n\t(set_Wall): Set warn_ampersand.\n\t(gfc_handle_option: Add Wampersand for itself, -std=f95, and -std=f2003.\n\t* scanner.c (gfc_next_char_literal): Add test for missing '&' in\n\tcontinued character constant and give warning if missing.\n\nFrom-SVN: r112078", "tree": {"sha": "f0438c5e38002a3e8f61d3718b731d9ba71ee0b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0438c5e38002a3e8f61d3718b731d9ba71ee0b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fbab5492684265b58f60d6b6a89cb1eb6773e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fbab5492684265b58f60d6b6a89cb1eb6773e34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fbab5492684265b58f60d6b6a89cb1eb6773e34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fbab5492684265b58f60d6b6a89cb1eb6773e34/comments", "author": null, "committer": null, "parents": [{"sha": "8a03ad9e3419fe3cc0289bd50b1cbdbc2225e984", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a03ad9e3419fe3cc0289bd50b1cbdbc2225e984", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a03ad9e3419fe3cc0289bd50b1cbdbc2225e984"}], "stats": {"total": 61, "additions": 54, "deletions": 7}, "files": [{"sha": "b09d32e3801dfba5955c034243563368d58e6029", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3fbab5492684265b58f60d6b6a89cb1eb6773e34", "patch": "@@ -1,3 +1,16 @@\n+2006-03-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/19101\n+\t* gfortran.h: Add warn_ampersand.\n+\t* invoke.texi: Add documentation for new option.\n+\t* lang.opt: Add Wampersand.\n+\t* options.c (gfc_init_options): Initialize warn_ampersand.\n+\t(gfc_post_options): Set the warn if pedantic.\n+\t(set_Wall): Set warn_ampersand.\n+\t(gfc_handle_option: Add Wampersand for itself, -std=f95, and -std=f2003.\n+\t* scanner.c (gfc_next_char_literal): Add test for missing '&' in\n+\tcontinued character constant and give warning if missing.\n+\n 2006-03-14  Steven G. Kargl  <kargls@comcast.net>\n \n \tPR 18537"}, {"sha": "2a5d01c344e59be8482426a98426093ef15ce249", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=3fbab5492684265b58f60d6b6a89cb1eb6773e34", "patch": "@@ -1602,6 +1602,7 @@ typedef struct\n   int verbose;\n \n   int warn_aliasing;\n+  int warn_ampersand;\n   int warn_conversion;\n   int warn_implicit_interface;\n   int warn_line_truncation;"}, {"sha": "627d7782fcb0d3ef4850147f6de7c628a36233a5", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=3fbab5492684265b58f60d6b6a89cb1eb6773e34", "patch": "@@ -128,7 +128,7 @@ by type.  Explanations are in the following sections.\n @xref{Warning Options,,Options to Request or Suppress Warnings}.\n @gccoptlist{\n -fsyntax-only  -pedantic  -pedantic-errors @gol\n--w  -Wall  -Waliasing  -Wconversion -Wimplicit-interface @gol\n+-w  -Wall  -Waliasing -Wampersand -Wconversion -Wimplicit-interface @gol\n -Wtabs -Wnonstd-intrinsics -Wsurprising -Wunderflow @gol\n -Wunused-labels -Wline-truncation -W}\n \n@@ -375,11 +375,11 @@ Inhibit all warning messages.\n @item -Wall\n @cindex all warnings\n @cindex warnings, all\n-Enables commonly used warning options that which pertain to usage that\n-we recommend avoiding and that we believe is easy to avoid.\n+Enables commonly used warning options pertaining to usage that\n+we recommend avoiding and that we believe are easy to avoid.\n This currently includes @option{-Wunused-labels}, @option{-Waliasing},\n-@option{-Wsurprising}, @option{-Wnonstd-intrinsic},  @option{-Wno-tabs},\n-and @option{-Wline-truncation}.\n+@option{-Wampersand}, @option{-Wsurprising}, @option{-Wnonstd-intrinsic},\n+@option{-Wno-tabs}, and @option{-Wline-truncation}.\n \n \n @cindex -Waliasing option\n@@ -405,6 +405,17 @@ The following example will trigger the warning.\n @end smallexample\n \n \n+@cindex -Wampersand option\n+@cindex options, -Wampersand\n+@item -Wampersand\n+@cindex ampersand\n+Warn about missing ampersand in continued character constants. The warning is\n+given with @option{-Wampersand}, @option{-pedantic}, @option{-std=f95}, and\n+@option{-std=f2003}. Note: With no ampersand given in a continued character\n+constant, gfortran assumes continuation at the first non-comment,\n+non-whitespace character after the ampersand that initiated the continuation.\n+\n+\n @cindex -Wconversion option\n @cindex options, -Wconversion\n @item -Wconversion\n@@ -445,6 +456,7 @@ lower value is greater than its upper value.\n A LOGICAL SELECT construct has three CASE statements.\n @end itemize\n \n+\n @cindex -Wtabs\n @cindex options, -Wtabs\n @item -Wtabs\n@@ -454,6 +466,7 @@ of the Fortran Character Set.  @option{-Wno-tabs} will cause a warning\n to be issued if a tab is encountered. Note, @option{-Wno-tabs} is active\n for @option{-pedantic}, @option{-std=f95}, and @option{-Wall}.\n \n+\n @cindex -Wunderflow\n @cindex options, -Wunderflow\n @item -Wunderflow"}, {"sha": "7f38e109a0a351c04a9014def38ce51d94307bd1", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=3fbab5492684265b58f60d6b6a89cb1eb6773e34", "patch": "@@ -41,6 +41,10 @@ Waliasing\n Fortran\n Warn about possible aliasing of dummy arguments\n \n+Wampersand\n+Fortran\n+Warn about missing ampersand in continued character constants\n+\n Wconversion\n Fortran\n Warn about implicit conversion"}, {"sha": "ddab37ed3ad33ec98f7d67fb83498cbe319ce31e", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=3fbab5492684265b58f60d6b6a89cb1eb6773e34", "patch": "@@ -52,6 +52,7 @@ gfc_init_options (unsigned int argc ATTRIBUTE_UNUSED,\n   gfc_option.verbose = 0;\n \n   gfc_option.warn_aliasing = 0;\n+  gfc_option.warn_ampersand = 0;\n   gfc_option.warn_conversion = 0;\n   gfc_option.warn_implicit_interface = 0;\n   gfc_option.warn_line_truncation = 0;\n@@ -271,6 +272,9 @@ gfc_post_options (const char **pfilename)\n   /* Implement -fno-automatic as -fmax-stack-var-size=0.  */\n   if (!gfc_option.flag_automatic)\n     gfc_option.flag_max_stack_var_size = 0;\n+  \n+  if (pedantic)\n+    gfc_option.warn_ampersand = 1;\n \n   return false;\n }\n@@ -283,6 +287,7 @@ set_Wall (void)\n {\n \n   gfc_option.warn_aliasing = 1;\n+  gfc_option.warn_ampersand = 1;\n   gfc_option.warn_line_truncation = 1;\n   gfc_option.warn_nonstd_intrinsics = 1;\n   gfc_option.warn_surprising = 1;\n@@ -385,6 +390,10 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.warn_aliasing = value;\n       break;\n \n+    case OPT_Wampersand:\n+      gfc_option.warn_ampersand = value;\n+      break;\n+\n     case OPT_Wconversion:\n       gfc_option.warn_conversion = value;\n       break;\n@@ -553,6 +562,7 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.allow_std = GFC_STD_F95_OBS | GFC_STD_F95 | GFC_STD_F77;\n       gfc_option.warn_std = GFC_STD_F95_OBS;\n       gfc_option.max_identifier_length = 31;\n+      gfc_option.warn_ampersand = 1;\n       gfc_option.warn_tabs = 0;\n       break;\n \n@@ -561,6 +571,7 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n \t| GFC_STD_F2003 | GFC_STD_F95;\n       gfc_option.warn_std = GFC_STD_F95_OBS;\n       gfc_option.max_identifier_length = 63;\n+      gfc_option.warn_ampersand = 1;\n       break;\n \n     case OPT_std_gnu:"}, {"sha": "d05d6034ebf8d2356020fd489baefdbbae9a2ab4", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fbab5492684265b58f60d6b6a89cb1eb6773e34/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=3fbab5492684265b58f60d6b6a89cb1eb6773e34", "patch": "@@ -680,7 +680,12 @@ gfc_next_char_literal (int in_string)\n \t}\n \n       if (c != '&')\n-\tgfc_current_locus = old_loc;\n+\t{\n+\t  if (in_string && gfc_option.warn_ampersand)\n+\t    gfc_warning (\"Missing '&' in continued character constant at %C\");\n+\n+\t  gfc_current_locus.nextc--;\n+\t}\n     }\n   else\n     {\n@@ -978,7 +983,7 @@ load_line (FILE * input, char **pbuf, int *pbuflen)\n \t  if (i >= buflen)\n \t    {\n \t      /* Reallocate line buffer to double size to hold the\n-\t         overlong line.  */\n+\t\toverlong line.  */\n \t      buflen = buflen * 2;\n \t      *pbuf = xrealloc (*pbuf, buflen + 1);\n \t      buffer = (*pbuf)+i;"}]}