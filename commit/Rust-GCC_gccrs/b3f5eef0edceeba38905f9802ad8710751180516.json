{"sha": "b3f5eef0edceeba38905f9802ad8710751180516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNmNWVlZjBlZGNlZWJhMzg5MDVmOTgwMmFkODcxMDc1MTE4MDUxNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T15:09:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T15:09:05Z"}, "message": "[multiple changes]\n\n2014-07-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* lib-writ.ads: document format change.\n\n2014-07-30  Pascal Obry  <obry@adacore.com>\n\n\t* prj-util.adb (For_Interface_Sources): Do not\n\tinclude sources from withed externally built projects.\n\n2014-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* lib.adb: Minor reformatting.\n\t* prj-util.adb: Minor reformatting.\n\n2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_aggr.adb (Build_Record_Aggr_Code): For an array component\n\tthat depends on discriminants, and which is given by an others\n\tclause, create an explicit subtype with the discriminant values\n\tof the enclosing aggregate, because the backend cannot otherwise\n\tretrieve the actual bounds of the array.\n\n2014-07-30  Fedor Rybin  <frybin@adacore.com>\n\n\t* gnat_ugn.texi: Improve gnattest documentation.\n\n2014-07-30  Pascal Obry  <obry@adacore.com>\n\n\t* makeutl.adb (Insert_Project_Sources): Properly handle sources\n\tthat are aggregated. We want to include sources not only part\n\tof libraries but also if part of an aggregated project from an\n\taggregate library.\n\t* prj.adb (For_Project_And_Aggregated_Context): Properly check\n\tstate of root project.\n\nFrom-SVN: r213296", "tree": {"sha": "0793d1aef4d21a630cfedc99313709cb537ad6b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0793d1aef4d21a630cfedc99313709cb537ad6b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3f5eef0edceeba38905f9802ad8710751180516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f5eef0edceeba38905f9802ad8710751180516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3f5eef0edceeba38905f9802ad8710751180516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f5eef0edceeba38905f9802ad8710751180516/comments", "author": null, "committer": null, "parents": [{"sha": "9e5a6ee7c81968a13169634a16aef746e540c679", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e5a6ee7c81968a13169634a16aef746e540c679", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e5a6ee7c81968a13169634a16aef746e540c679"}], "stats": {"total": 197, "additions": 142, "deletions": 55}, "files": [{"sha": "e884ff2a8be9b5ba5ebf7a1a2599b512c7f78ca7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b3f5eef0edceeba38905f9802ad8710751180516", "patch": "@@ -1,3 +1,38 @@\n+2014-07-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* lib-writ.ads: document format change.\n+\n+2014-07-30  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-util.adb (For_Interface_Sources): Do not\n+\tinclude sources from withed externally built projects.\n+\n+2014-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* lib.adb: Minor reformatting.\n+\t* prj-util.adb: Minor reformatting.\n+\n+2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb (Build_Record_Aggr_Code): For an array component\n+\tthat depends on discriminants, and which is given by an others\n+\tclause, create an explicit subtype with the discriminant values\n+\tof the enclosing aggregate, because the backend cannot otherwise\n+\tretrieve the actual bounds of the array.\n+\n+2014-07-30  Fedor Rybin  <frybin@adacore.com>\n+\n+\t* gnat_ugn.texi: Improve gnattest documentation.\n+\n+2014-07-30  Pascal Obry  <obry@adacore.com>\n+\n+\t* makeutl.adb (Insert_Project_Sources): Properly handle sources\n+\tthat are aggregated. We want to include sources not only part\n+\tof libraries but also if part of an aggregated project from an\n+\taggregate library.\n+\t* prj.adb (For_Project_And_Aggregated_Context): Properly check\n+\tstate of root project.\n+\n 2014-07-30  Thomas Quinot  <quinot@adacore.com>\n \n \t* lib-load.ads: Minor reformatting."}, {"sha": "a43be855183036b19e96c1844fbcb5cf28c1f7c7", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=b3f5eef0edceeba38905f9802ad8710751180516", "patch": "@@ -2220,6 +2220,7 @@ package body Exp_Aggr is\n                 Prefix        => New_Copy_Tree (Lhs),\n                 Selector_Name => Make_Identifier (Loc, Chars (Expr))));\n          end if;\n+\n          return OK;\n       end Rewrite_Discriminant;\n \n@@ -2834,6 +2835,39 @@ package body Exp_Aggr is\n             else\n                if Has_Discriminants (Typ) then\n                   Replace_Discriminants (Expr_Q);\n+\n+                  --  If the component is an array type that depends on\n+                  --  discriminants, and the expression is a single Others\n+                  --  clause, create an explicit subtype for it because the\n+                  --  backend has troubles recovering the actual bounds.\n+\n+                  if Nkind (Expr_Q) = N_Aggregate\n+                    and then Is_Array_Type (Comp_Type)\n+                    and then Present (Component_Associations (Expr_Q))\n+                  then\n+                     declare\n+                        Assoc : constant Node_Id :=\n+                           First (Component_Associations (Expr_Q));\n+                        Decl  : Node_Id;\n+\n+                     begin\n+                        if\n+                          Nkind (First (Choices (Assoc))) = N_Others_Choice\n+                        then\n+                           Decl :=\n+                             Build_Actual_Subtype_Of_Component\n+                               (Comp_Type, Comp_Expr);\n+\n+                           --  If the component type does not in fact depend on\n+                           --  discriminants, the subtype declaration is empty.\n+\n+                           if Present (Decl) then\n+                              Append_To (L, Decl);\n+                              Set_Etype (Comp_Expr, Defining_Entity (Decl));\n+                           end if;\n+                        end if;\n+                     end;\n+                  end if;\n                end if;\n \n                Instr :="}, {"sha": "dbdfb5059a9f904e7d0b128ea48f378fd556d8ce", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b3f5eef0edceeba38905f9802ad8710751180516", "patch": "@@ -19856,9 +19856,9 @@ doesn't exist already. By default, those separate test files are located in a\n \"gnattest/tests\" directory that is created in the object directory of\n corresponding project file. For example, if a source file my_unit.ads in\n directory src contains a visible subprogram Proc, then the corresponding unit\n-test will be found in file src/tests/my_unit-test_data-tests-proc_<code>.adb.\n-<code> is a signature encoding used to differentiate test names in case of\n-overloading.\n+test will be found in file src/tests/my_unit-test_data-tests.adb and will be\n+called Test_Proc_<code>. <code> is a signature encoding used to differentiate\n+test names in case of overloading.\n \n Note that if the project already has both my_unit.ads and my_unit-test_data.ads,\n this will cause a name conflict with the generated test package.\n@@ -19969,6 +19969,11 @@ separates. Note that if separate test routines had any manually added with\n clauses they will be moved to the test package body as is and have to be moved\n by hand.\n \n+@item --omit-sloc\n+@cindex @option{--omit-sloc} (@command{gnattest})\n+Supresses comment line containing file name and line number of corresponding\n+subprograms in test skeletons.\n+\n @end table\n \n @option{--tests_root}, @option{--subdir} and @option{--tests-dir} switches are\n@@ -20339,6 +20344,20 @@ gnatmake -Pmixing/test_driver.gpr\n mixing/test_runner\n @end smallexample\n \n+@node Putting tests under veesion control\n+@section Putting tests under veesion control\n+\n+@noindent\n+As has been stated earlier, @command{gnattest} generates two different types\n+of code, test skeletons and harness. The harness is generated completely\n+automatically each time, does not require manual changes and therefore should\n+not be put under version control.\n+It makes sense to put under version control files containing test data packages,\n+both specs and bodies, and files containing bodies of test packages. Note that\n+test package specs are also generated automatically each time and should not be\n+put under version control.\n+Option @option{--omit-sloc} may be usefull when putting test packages under VCS.\n+\n @ifclear vms\n @node Support for other platforms/run-times\n @section Support for other platforms/run-times\n@@ -20370,7 +20389,7 @@ powerpc-elf-gnattest -Psimple.gpr -XPLATFORM=powerpc-elf -XRUNTIME=zfp\n The tool currently does not support following features:\n \n @itemize @bullet\n-@item generic tests for generic packages and package instantiations\n+@item generic tests for nested generic packages and their instantiations\n @item tests for protected subprograms and entries\n \n @end itemize"}, {"sha": "f0e8d9c86b005a6a6b942046b1c9f50dc09316c3", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=b3f5eef0edceeba38905f9802ad8710751180516", "patch": "@@ -724,7 +724,10 @@ package Lib.Writ is\n    --        T  pragma Title\n    --        S  pragma Subtitle\n \n-   --      <sloc> is the source location of the pragma in line:col format\n+   --      <sloc> is the source location of the pragma in line:col[:filename]\n+   --      format. The file name is omitted if it is the same as the current\n+   --      unit (it therefore appears explicitly in the case of pragmas\n+   --      occurring in subunits, which do not have U sections of their own).\n \n    --      Successive entries record the pragma_argument_associations.\n "}, {"sha": "53b611d983ad213c3e08d2f565cada325c766b5b", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=b3f5eef0edceeba38905f9802ad8710751180516", "patch": "@@ -1047,6 +1047,7 @@ package body Lib is\n \n    procedure Store_Note (N : Node_Id) is\n       Sfile : constant Source_File_Index := Get_Source_File_Index (Sloc (N));\n+\n    begin\n       --  Notes for a generic are emitted when processing the template, never\n       --  in instances."}, {"sha": "76111062b5f89e5dac81043ce82340783ef2c48d", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 41, "deletions": 47, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=b3f5eef0edceeba38905f9802ad8710751180516", "patch": "@@ -2910,13 +2910,21 @@ package body Makeutl is\n          All_Projects   : Boolean;\n          Unique_Compile : Boolean)\n       is\n-         procedure Do_Insert (Project : Project_Id; Tree : Project_Tree_Ref);\n+\n+         procedure Do_Insert\n+           (Project    : Project_Id;\n+            Tree       : Project_Tree_Ref;\n+            Context    : Project_Context);\n \n          ---------------\n          -- Do_Insert --\n          ---------------\n \n-         procedure Do_Insert (Project : Project_Id; Tree : Project_Tree_Ref) is\n+         procedure Do_Insert\n+           (Project    : Project_Id;\n+            Tree       : Project_Tree_Ref;\n+            Context    : Project_Context)\n+         is\n             Unit_Based : constant Boolean :=\n                            Unique_Compile\n                              or else not Builder_Data (Tree).Closure_Needed;\n@@ -2970,60 +2978,45 @@ package body Makeutl is\n                      if (Unit_Based\n                           or else Source.Unit = No_Unit_Index\n                           or else Source.Project.Library\n+                          or else Context.In_Aggregate_Lib\n                           or else Project.Qualifier = Aggregate_Library)\n                        and then not Is_Subunit (Source)\n                      then\n                         OK := True;\n                         Closure := False;\n \n-                        declare\n-                           SAL_Project : Project_Id := No_Project;\n-\n-                        begin\n-                           if Project.Qualifier = Aggregate_Library\n-                             and then Project.Standalone_Library /= No\n-                           then\n-                              if Source.Unit /= No_Unit_Index then\n-                                 SAL_Project := Project;\n-                              end if;\n-\n-                           elsif Source.Unit /= No_Unit_Index\n-                             and then Source.Project.Library\n-                             and then Source.Project.Standalone_Library /= No\n-                           then\n-                              SAL_Project := Source.Project;\n-                           end if;\n-\n-                           if SAL_Project /= No_Project then\n+                        if Source.Unit /= No_Unit_Index\n+                          and then\n+                            (Source.Project.Library\n+                             or else Project.Qualifier = Aggregate_Library\n+                             or else Context.In_Aggregate_Lib)\n+                          and then Source.Project.Standalone_Library /= No\n+                        then\n+                           --  Check if the unit is in the interface\n+                           OK := False;\n \n-                              --  Check if the unit is in the interface\n+                           declare\n+                              List : String_List_Id :=\n+                                Source.Project.Lib_Interface_ALIs;\n+                              Element : String_Element;\n \n-                              OK := False;\n+                           begin\n+                              while List /= Nil_String loop\n+                                 Element :=\n+                                   Project_Tree.Shared.String_Elements.Table\n+                                     (List);\n \n-                              declare\n-                                 List    : String_List_Id :=\n-                                             SAL_Project.Lib_Interface_ALIs;\n-                                 Element : String_Element;\n+                                 if Element.Value = Name_Id (Source.Dep_Name)\n+                                 then\n+                                    OK := True;\n+                                    Closure := True;\n+                                    exit;\n+                                 end if;\n \n-                              begin\n-                                 while List /= Nil_String loop\n-                                    Element :=\n-                                      Project_Tree.Shared.String_Elements.Table\n-                                        (List);\n-\n-                                    if Element.Value =\n-                                         Name_Id (Source.Dep_Name)\n-                                    then\n-                                       OK := True;\n-                                       Closure := True;\n-                                       exit;\n-                                    end if;\n-\n-                                    List := Element.Next;\n-                                 end loop;\n-                              end;\n-                           end if;\n-                        end;\n+                                 List := Element.Next;\n+                              end loop;\n+                           end;\n+                        end if;\n \n                         if OK then\n                            Queue.Insert\n@@ -3040,7 +3033,8 @@ package body Makeutl is\n             end loop;\n          end Do_Insert;\n \n-         procedure Insert_All is new For_Project_And_Aggregated (Do_Insert);\n+         procedure Insert_All is\n+           new For_Project_And_Aggregated_Context (Do_Insert);\n \n       begin\n          Insert_All (Project, Project_Tree);"}, {"sha": "447818daf349b4221f88c3f8337fa7d457bd0ca1", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=b3f5eef0edceeba38905f9802ad8710751180516", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -467,7 +467,8 @@ package body Prj.Util is\n          --  the interface for standalone libraries.\n \n          if Sid.Kind = Spec\n-           and then not Sid.Project.Externally_Built\n+           and then (not Sid.Project.Externally_Built\n+                      or else Sid.Project = Project)\n            and then not Sid.Locally_Removed\n            and then (Project.Standalone_Library = No\n                       or else Sid.Declared_In_Interfaces)"}, {"sha": "73b77099baa9c1a9cb7a34712272123082ff44bf", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f5eef0edceeba38905f9802ad8710751180516/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=b3f5eef0edceeba38905f9802ad8710751180516", "patch": "@@ -2101,7 +2101,7 @@ package body Prj is\n \n          if Project.Qualifier in Aggregate_Project then\n             Ctx :=\n-              (In_Aggregate_Lib      => True,\n+              (In_Aggregate_Lib      => Project.Qualifier = Aggregate_Library,\n                From_Encapsulated_Lib =>\n                  Context.From_Encapsulated_Lib\n                    or else Project.Standalone_Library = Encapsulated);"}]}