{"sha": "845306e9be80514cfb6f544639582ec695319820", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ1MzA2ZTliZTgwNTE0Y2ZiNmY1NDQ2Mzk1ODJlYzY5NTMxOTgyMA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-10-06T08:38:03Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-10-06T08:38:03Z"}, "message": "20080924_0.c: Fix defaulting to int.\n\n\t* gcc.dg/lto/20080924_0.c: Fix defaulting to int.\n\t* gcc.dg/lto/20090213_0.c: Likewise.\n\t* gcc.dg/lto/20090706-2_0.c: Likewise.\n\t* gcc.dg/lto/attr-weakref-1_1.c: Likewise.\n\t* gcc.dg/lto/attr-weakref-1_2.c: Likewise.\n\t* gcc.dg/lto/ipareference2_0.c: Likewise.\n\t* gcc.dg/lto/ipareference_0.c: Likewise.\n\t* gcc.dg/lto/ipareference_1.c: Likewise.\n\t* gcc.dg/lto/pr55703_0.c: Likewise.\n\t* gcc.dg/lto/resolutions_0.c: Likewise.\n\t* gcc.dg/lto/trans-mem-3_1.c: Likewise.\n\t* gcc.dg/lto/20081115_0.c: Fix defaulting to int.  Fix implicit\n\tdeclarations.  Mark function as gnu_inline.\n\t* gcc.dg/lto/20081118_0.c: Likewise.\n\t* gcc.dg/lto/20081201-1_0.c: Likewise.\n\t* gcc.dg/lto/20081115_1.c: Mark function as gnu_inline.\n\t* gcc.dg/lto/20081118_1.c: Likewise.\n\t* gcc.dg/lto/20081120-1_1.c: Likewise.\n\t* gcc.dg/lto/20081201-1_1.c: Likewise.\n\t* gcc.dg/lto/20081210-1_0.c: Likewise.\n\t* gcc.dg/lto/20090218-1_0.c: Likewise.\n\t* gcc.dg/lto/20091006-1_0.c: Likewise.\n\t* gcc.dg/lto/20090218-1_1.c: Use -fgnu89-inline.\n\t* gcc.dg/lto/20090218-2_1.c: Likewise.\n\t* gcc.dg/lto/materialize-1_0.c: Likewise.\n\t* gcc.dg/lto/20090218-2_0.c: Fix implicit declarations.\n\t* gcc.dg/lto/20091013-1_1.c: Likewise.\n\t* gcc.dg/lto/20091013-1_2.c: Likewise.\n\t* gcc.dg/lto/20091015-1_2.c: Likewise.\n\t* gcc.dg/lto/20091027-1_1.c: Likewise.\n\t* gcc.dg/lto/pr48622_0.c: Likewise.\n\t* gcc.dg/lto/attr-weakref-1_0.c: Fix implicit declarations. Fix\n\tdefaulting to int.\n\t* gcc.dg/lto/pr47924_0.c: Return 0 instead of nothing.\n\nFrom-SVN: r215918", "tree": {"sha": "cc9fb8078395ccf58e16e77c3bba8984e632e724", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc9fb8078395ccf58e16e77c3bba8984e632e724"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/845306e9be80514cfb6f544639582ec695319820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845306e9be80514cfb6f544639582ec695319820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845306e9be80514cfb6f544639582ec695319820", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845306e9be80514cfb6f544639582ec695319820/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d728155946d2a7c8060b09bf39db5ae9eb4f3ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d728155946d2a7c8060b09bf39db5ae9eb4f3ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d728155946d2a7c8060b09bf39db5ae9eb4f3ae"}], "stats": {"total": 98, "additions": 84, "deletions": 14}, "files": [{"sha": "6093b34bf3d34672373da5ba39f2e50aa97aedc8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,3 +1,40 @@\n+2014-10-06  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.dg/lto/20080924_0.c: Fix defaulting to int.\n+\t* gcc.dg/lto/20090213_0.c: Likewise.\n+\t* gcc.dg/lto/20090706-2_0.c: Likewise.\n+\t* gcc.dg/lto/attr-weakref-1_1.c: Likewise.\n+\t* gcc.dg/lto/attr-weakref-1_2.c: Likewise.\n+\t* gcc.dg/lto/ipareference2_0.c: Likewise.\n+\t* gcc.dg/lto/ipareference_0.c: Likewise.\n+\t* gcc.dg/lto/ipareference_1.c: Likewise.\n+\t* gcc.dg/lto/pr55703_0.c: Likewise.\n+\t* gcc.dg/lto/resolutions_0.c: Likewise.\n+\t* gcc.dg/lto/trans-mem-3_1.c: Likewise.\n+\t* gcc.dg/lto/20081115_0.c: Fix defaulting to int.  Fix implicit\n+\tdeclarations.  Mark function as gnu_inline.\n+\t* gcc.dg/lto/20081118_0.c: Likewise.\n+\t* gcc.dg/lto/20081201-1_0.c: Likewise.\n+\t* gcc.dg/lto/20081115_1.c: Mark function as gnu_inline.\n+\t* gcc.dg/lto/20081118_1.c: Likewise.\n+\t* gcc.dg/lto/20081120-1_1.c: Likewise.\n+\t* gcc.dg/lto/20081201-1_1.c: Likewise.\n+\t* gcc.dg/lto/20081210-1_0.c: Likewise.\n+\t* gcc.dg/lto/20090218-1_0.c: Likewise.\n+\t* gcc.dg/lto/20091006-1_0.c: Likewise.\n+\t* gcc.dg/lto/20090218-1_1.c: Use -fgnu89-inline.\n+\t* gcc.dg/lto/20090218-2_1.c: Likewise.\n+\t* gcc.dg/lto/materialize-1_0.c: Likewise.\n+\t* gcc.dg/lto/20090218-2_0.c: Fix implicit declarations.\n+\t* gcc.dg/lto/20091013-1_1.c: Likewise.\n+\t* gcc.dg/lto/20091013-1_2.c: Likewise.\n+\t* gcc.dg/lto/20091015-1_2.c: Likewise.\n+\t* gcc.dg/lto/20091027-1_1.c: Likewise.\n+\t* gcc.dg/lto/pr48622_0.c: Likewise.\n+\t* gcc.dg/lto/attr-weakref-1_0.c: Fix implicit declarations. Fix\n+\tdefaulting to int.\n+\t* gcc.dg/lto/pr47924_0.c: Return 0 instead of nothing.\n+\n 2014-10-06  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/implicit_14.f90: New."}, {"sha": "86e22f0c8dcb7f8dee462940cf58c5d543c23edf", "filename": "gcc/testsuite/gcc.dg/lto/20080924_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20080924_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20080924_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20080924_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do assemble }  */\n /* { dg-lto-options {{-O2 -flto -funsigned-char}} }  */ \n typedef unsigned int size_t;\n+void\n foo (const char *src, unsigned char *dst, size_t size)\n {\n   int ch;"}, {"sha": "2174cbb0b48a95948055d169a880a3af6bd579e2", "filename": "gcc/testsuite/gcc.dg/lto/20081115_0.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081115_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081115_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081115_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,13 +1,14 @@\n /* { dg-lto-options {{-O2 -DOPTIMIZE -flto -flto-partition=1to1} {-O0 -flto -flto-partition=1to1}} } */\n \n extern void abort (void);\n+extern int foo (void);\n \n int f (void)\n {\n   return 1;\n }\n \n-extern inline int\n+extern inline int __attribute__ ((gnu_inline))\n e_inline_baz (void)\n {\n   return 1 + f();\n@@ -19,6 +20,7 @@ bar (void)\n   return e_inline_baz ();\n }\n \n+int\n main ()\n {\n #ifdef OPTIMIZE"}, {"sha": "bbde9abf68493682c58ada7a9358afdd91e8990b", "filename": "gcc/testsuite/gcc.dg/lto/20081115_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081115_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081115_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081115_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,4 +1,4 @@\n-extern inline int\n+extern inline int __attribute__ ((gnu_inline))\n e_inline_baz (void)\n {\n   return 2 + 1;"}, {"sha": "58e0dfdbcea81d6a152bbe75d72266cf72fb2446", "filename": "gcc/testsuite/gcc.dg/lto/20081118_0.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081118_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081118_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081118_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -2,8 +2,9 @@\n \n extern void abort (void);\n extern int f (void);\n+extern int foo (void);\n \n-extern inline int\n+extern inline int __attribute__ ((gnu_inline))\n e_inline_baz (void)\n {\n  return 1 + f();\n@@ -15,6 +16,7 @@ bar (void)\n  return e_inline_baz ();\n }\n \n+int\n main ()\n {\n #ifdef OPTIMIZE"}, {"sha": "509c290ee74f07ddeab882d2eac56a55dbcbc37c", "filename": "gcc/testsuite/gcc.dg/lto/20081118_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081118_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081118_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081118_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,6 +1,6 @@\n extern int f (void);\n \n-extern inline int\n+extern inline int __attribute__ ((gnu_inline))\n e_inline_baz (void)\n {\n  return 2 + f ();"}, {"sha": "f55eb48a14c5d3ec593803b6fb4dfa9c3abe9049", "filename": "gcc/testsuite/gcc.dg/lto/20081120-1_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-1_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,3 +1,3 @@\n extern int stat(void) __asm__(\"\" \"stat64\");\n-extern inline int stat(void) { }\n+extern inline __attribute__((gnu_inline)) int stat(void) { }\n static void foo(void) { stat(); }"}, {"sha": "bd3e2513478d628e6c4183aa01338577dac1beb8", "filename": "gcc/testsuite/gcc.dg/lto/20081201-1_0.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-1_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,14 +1,15 @@\n /* { dg-lto-options {{-O2 -DOPTIMIZE -flto -flto-partition=1to1} {-O0 -flto -flto-partition=1to1}} } */\n \n extern void abort (void);\n+extern int foo (void);\n \n int\n f (void)\n {\n  return 1;\n }\n \n-extern inline int\n+extern inline int __attribute__((gnu_inline))\n e_inline_baz (void)\n {\n  return 1 + f();\n@@ -20,6 +21,7 @@ bar (void)\n  return e_inline_baz ();\n }\n \n+int\n main ()\n {\n #ifdef OPTIMIZE"}, {"sha": "509c290ee74f07ddeab882d2eac56a55dbcbc37c", "filename": "gcc/testsuite/gcc.dg/lto/20081201-1_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-1_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,6 +1,6 @@\n extern int f (void);\n \n-extern inline int\n+extern inline int __attribute__ ((gnu_inline))\n e_inline_baz (void)\n {\n  return 2 + f ();"}, {"sha": "80a1e9a2c030ad9d50326894bcbae0d75faaa4e9", "filename": "gcc/testsuite/gcc.dg/lto/20081210-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081210-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081210-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081210-1_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -8,7 +8,7 @@ typedef unsigned int uintptr_t;\n \n extern void srand (uintptr_t);\n \n-inline void\n+inline void __attribute__ ((gnu_inline))\n foo (uintptr_t seed)\n {\n  srand (seed * seed);"}, {"sha": "f36c890aec51aa94f9b136dcba5e8aaec036d219", "filename": "gcc/testsuite/gcc.dg/lto/20090213_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090213_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090213_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090213_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -3,6 +3,7 @@\n \n extern int foo (int);\n \n+int\n main()\n {\n   int x = foo (10);"}, {"sha": "ca98a49205557ea8c285a3a84d3aaba244b5e0da", "filename": "gcc/testsuite/gcc.dg/lto/20090218-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-1_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,4 +1,4 @@\n-void inline set_mem_alias_set ()  __attribute__ ((always_inline));\n+void inline set_mem_alias_set ()  __attribute__ ((always_inline, gnu_inline));\n void emit_push_insn () {\n   set_mem_alias_set ();\n }"}, {"sha": "7520cd3dc6c660d5ee9b4b3f9625baf6810e945d", "filename": "gcc/testsuite/gcc.dg/lto/20090218-1_1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-1_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n int main(void)\n {\n   return 0;"}, {"sha": "3351c4ad96f229cc942b54005b6a91de6c9be484", "filename": "gcc/testsuite/gcc.dg/lto/20090218-2_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-2_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,3 +1,4 @@\n+void set_mem_alias_set ();\n void emit_push_insn () {\n   set_mem_alias_set ();\n }"}, {"sha": "f7cdb4253a67cc795dedb4117bcec3cda35dd9cb", "filename": "gcc/testsuite/gcc.dg/lto/20090218-2_1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-2_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-2_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090218-2_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options { -fgnu89-inline } } */\n typedef struct {\n } mem_attrs;\n int main(void)"}, {"sha": "ce1ff7980f08fb6a35fa4e43dbee516b60bd6751", "filename": "gcc/testsuite/gcc.dg/lto/20090706-2_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090706-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090706-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090706-2_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -7,6 +7,7 @@ int foo (int size)\n   return a[size - 10] + size;\n }\n \n+int\n main()\n {\n   int x = foo (20);"}, {"sha": "3d11f0ce65a2170fb77c8612b0b932749208e39f", "filename": "gcc/testsuite/gcc.dg/lto/20091006-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091006-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091006-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091006-1_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -2,7 +2,7 @@\n \n typedef void (*fnt) (void);\n void __attribute__((noinline)) bar (void) {}\n-extern inline void check3 (void)\n+extern inline void __attribute__((gnu_inline)) check3 (void)\n {\n     bar ();\n }"}, {"sha": "b75d0959cc37f171ddf685806d75f2ec5ae4b375", "filename": "gcc/testsuite/gcc.dg/lto/20091013-1_1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091013-1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091013-1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091013-1_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -54,6 +54,8 @@ static struct __wine_debug_channel __wine_dbch_font = { ~0, \"font\" };\n static struct __wine_debug_channel * const __wine_dbch___default = &__wine_dbch_font;\n \n static void* FONT_SelectObject( void* handle, void* hdc );\n+int TranslateCharsetInfo( void *, CHARSETINFO *, int );\n+unsigned int GetACP (void);\n \n static const struct gdi_obj_funcs font_funcs =\n {"}, {"sha": "c8560413567afe4b8a85885db5fced366bbbf31b", "filename": "gcc/testsuite/gcc.dg/lto/20091013-1_2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091013-1_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091013-1_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091013-1_2.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -3,6 +3,7 @@ typedef struct HDC__ { int unused; } *HDC;\n typedef struct HFONT__ { int unused; } *HFONT;\n \n void* HeapAlloc(void*,unsigned int,unsigned long);\n+extern int memcmp (const void *, const void *, __SIZE_TYPE__);\n \n typedef struct tagLOGFONTW\n {\n@@ -72,6 +73,7 @@ static int get_glyph_index_linked(GdiFont *font, unsigned int c, GdiFont **linke\n static long load_VDMX(GdiFont*, long);\n \n extern int f1(void*,int);\n+extern int strcmpiW (const void*,const void*);\n \n static FT_Face OpenFontFace(GdiFont *font, void *face, long width, long height)\n {\n@@ -207,6 +209,8 @@ static int get_glyph_index_linked(GdiFont *font, unsigned int c, GdiFont **linke\n     return 0;\n }\n \n+void load_sfnt_table ();\n+\n unsigned int WineEngGetFontData(GdiFont *font, unsigned int table, unsigned int offset, void* buf,\n     unsigned int cbData)\n {"}, {"sha": "0bc940bc1b19dd7c38bd1285e8ebcc98fe445183", "filename": "gcc/testsuite/gcc.dg/lto/20091015-1_2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091015-1_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091015-1_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091015-1_2.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,5 +1,6 @@\n #include \"20091015-1_a.h\"\n #include \"20091015-1_b.h\"\n+void foo ();\n void debug_optab_libfuncs (void) {\n foo (stderr,       4         );\n }"}, {"sha": "f869bdd2d9cf7218a71a19888676356acf01ec5f", "filename": "gcc/testsuite/gcc.dg/lto/20091027-1_1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -2,6 +2,7 @@ typedef struct _xmlDict xmlDict;\n struct _xmlDoc {\n   struct _xmlDict *dict;\n };\n+void xmlHashCreateDict (int, xmlDict *);\n void xmlAddEntity(struct _xmlDoc *a) {\n   xmlDict * dict = a->dict;\n   xmlHashCreateDict(0, dict);"}, {"sha": "84911cb211f3d84b0b1ccfae983f86dda8831fe4", "filename": "gcc/testsuite/gcc.dg/lto/attr-weakref-1_0.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fattr-weakref-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fattr-weakref-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fattr-weakref-1_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,6 +1,8 @@\n /* { dg-lto-do run } */\n int first = 0;\n void abort (void);\n+void c (void);\n+void b (void);\n int second = 0;\n void callmealias (void)\n {\n@@ -21,6 +23,7 @@ void callmesecond (void)\n     abort();\n   second = 1;\n }\n+int\n main()\n {\n   c();"}, {"sha": "ae7bd8cbaaab8b5526efbeffc753b1ee9505fce9", "filename": "gcc/testsuite/gcc.dg/lto/attr-weakref-1_1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fattr-weakref-1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fattr-weakref-1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fattr-weakref-1_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,6 +1,7 @@\n extern void callmesecond();\n static void callmealias() __attribute__((weakref (\"callmesecond\")));\n \n+void\n b()\n {\n   callmealias();"}, {"sha": "fad47c6258b92af0f9ecb471a9ae309c607d2c5c", "filename": "gcc/testsuite/gcc.dg/lto/attr-weakref-1_2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fattr-weakref-1_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fattr-weakref-1_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fattr-weakref-1_2.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,6 +1,7 @@\n extern void callmefirst();\n static void callmealias() __attribute__((weakref (\"callmefirst\")));\n \n+void\n c()\n {\n   callmealias();"}, {"sha": "db183dcd19b205ab22d16c1a4dce003c8781c669", "filename": "gcc/testsuite/gcc.dg/lto/ipareference2_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference2_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -7,6 +7,7 @@ void abort (void);\n int b,c,d,e,f;\n int *a[5]={&b,&c,&c,&e};\n void other_ltrans (void);\n+int\n main()\n {\n   other_ltrans ();"}, {"sha": "f8270d5d9fc52e303cbaf406c0672f3ccbc82fd8", "filename": "gcc/testsuite/gcc.dg/lto/ipareference_0.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -5,8 +5,9 @@\n    modify anything.  This needs streaming cross file boundary summaries.  */\n extern int get_val (void);\n extern int set_val (void);\n-extern do_nothing (void);\n+extern void do_nothing (void);\n void abort (void);\n+int\n main()\n {\n   int a;"}, {"sha": "c363b2bb65213d010b836c1aed2e0febbba4e85e", "filename": "gcc/testsuite/gcc.dg/lto/ipareference_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -7,7 +7,7 @@ int get_val (void)\n {\n   return val;\n }\n-__attribute__ ((__noinline__))\n+__attribute__ ((__noinline__)) void\n do_nothing ()\n {\n   asm volatile (\"\":::\"memory\");"}, {"sha": "8c0577b5408f8b09e534a9bc7a5e15b8fd7e40cb", "filename": "gcc/testsuite/gcc.dg/lto/materialize-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmaterialize-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmaterialize-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmaterialize-1_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{ -O3 -flto -flto-partition=1to1}} } */\n+/* { dg-lto-options {{ -O3 -flto -flto-partition=1to1 -fgnu89-inline }} } */\n /* { dg-lto-do run } */\n extern void clone_me (int, int);\n int a=15;"}, {"sha": "1cecc3e8714dee765eaa60d18ebd7fb57392b541", "filename": "gcc/testsuite/gcc.dg/lto/pr47924_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr47924_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr47924_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr47924_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -8,7 +8,7 @@ int i __attribute__((used));\n int main()\n {\n   if (i == 0)\n-    return;\n+    return 0;\n \n   *p = 0;\n "}, {"sha": "c12f98c494d56a0ac0d368195555bacaf06310cd", "filename": "gcc/testsuite/gcc.dg/lto/pr48622_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr48622_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr48622_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr48622_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -5,6 +5,7 @@ void abort(void);\n void exit(int);\n \n typedef unsigned int u8 __attribute__ ((mode (QI)));\n+u8 ashift_qi_1 (u8);\n \n u8\n ashift_qi_0 (u8 n)"}, {"sha": "9ab3e977e931d45e3bc907cd9ae7585a66fcbb20", "filename": "gcc/testsuite/gcc.dg/lto/pr55703_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr55703_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr55703_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr55703_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -47,6 +47,7 @@ int try (int num) {\n   return -1;\n }\n \n+int\n main()\n {\n   int i;"}, {"sha": "5274c8c07755fea3d1ab8880747d53006b8c62e3", "filename": "gcc/testsuite/gcc.dg/lto/resolutions_0.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fresolutions_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fresolutions_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fresolutions_0.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -1,9 +1,11 @@\n /* { dg-require-linker-plugin \"\" } */\n /* { dg-extra-ld-options \"-fuse-linker-plugin -O1\" } */\n \n+void\n link_error()\n {\n }\n+int\n main()\n {\n   return 0;"}, {"sha": "c323ac47ee2e1ee0018fdeca65ace4ca50a8568e", "filename": "gcc/testsuite/gcc.dg/lto/trans-mem-3_1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845306e9be80514cfb6f544639582ec695319820/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_1.c?ref=845306e9be80514cfb6f544639582ec695319820", "patch": "@@ -4,6 +4,7 @@\n \n extern int i;\n \n+int\n main()\n {\n   __transaction_atomic { i = 0; }"}]}