{"sha": "2e6a83a7924e9079240b7a60206c39806c46b32d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU2YTgzYTc5MjRlOTA3OTI0MGI3YTYwMjA2YzM5ODA2YzQ2YjMyZA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2007-01-26T23:36:11Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2007-01-26T23:36:11Z"}, "message": "Steven G.\n\n2007-01-26  Steven Bosscher  <stevenb.gcc@gmail.com>\n\t        Steven G. Kargl  <kargl@gcc.gnu,org>\n\n\t* testsuite/gfortran.dg/backslash_3.f: New test.\n\n\t* fortran/io.c (next_char): Deal with backslash escaped characters.\n\tIssue warnings in non -std=gnu cases.\n\t* fortran/primary.c (next_string_char): Issue warnings in non\n\nFrom-SVN: r121218", "tree": {"sha": "7a682d1aa6f6a5cbec61cb18bd4059b652ab736e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a682d1aa6f6a5cbec61cb18bd4059b652ab736e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e6a83a7924e9079240b7a60206c39806c46b32d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e6a83a7924e9079240b7a60206c39806c46b32d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e6a83a7924e9079240b7a60206c39806c46b32d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e6a83a7924e9079240b7a60206c39806c46b32d/comments", "author": null, "committer": null, "parents": [{"sha": "d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "641d50dca5dbdb3a72585ffa462020a9240b0ddc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e6a83a7924e9079240b7a60206c39806c46b32d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e6a83a7924e9079240b7a60206c39806c46b32d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2e6a83a7924e9079240b7a60206c39806c46b32d", "patch": "@@ -1,3 +1,10 @@\n+2007-01-26  Steven Bosscher  <stevenb.gcc@gmail.com>\n+\t    Steven G. Kargl <kargl@gcc.gnu.org>\n+\n+\t* fortran/io.c (next_char): Deal with backslash escaped characters.\n+\tIssue warnings in non -std=gnu cases.\n+\t* fortran/primary.c (next_string_char): Issue warnings in non\n+\n 2007-01-26  Tobias Burnus  <burnus@net-b.de>\n \n \t* lang-specs.h: Add support for .f03 and .F03 extensions."}, {"sha": "8c17b3a8584beb3a19137a2322cccdc6dd6f6a93", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e6a83a7924e9079240b7a60206c39806c46b32d/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e6a83a7924e9079240b7a60206c39806c46b32d/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=2e6a83a7924e9079240b7a60206c39806c46b32d", "patch": "@@ -137,11 +137,52 @@ next_char (int in_string)\n       c = gfc_next_char_literal (in_string);\n       if (c == '\\n')\n \tc = '\\0';\n+    }\n+\n+  if (gfc_option.flag_backslash && c == '\\\\')\n+    {\n+      locus old_locus = gfc_current_locus;\n \n-      if (mode == MODE_COPY)\n-\t*format_string++ = c;\n+      switch (gfc_next_char_literal (1))\n+\t{\n+\tcase 'a':\n+\t  c = '\\a';\n+\t  break;\n+\tcase 'b':\n+\t  c = '\\b';\n+\t  break;\n+\tcase 't':\n+\t  c = '\\t';\n+\t  break;\n+\tcase 'f':\n+\t  c = '\\f';\n+\t  break;\n+\tcase 'n':\n+\t  c = '\\n';\n+\t  break;\n+\tcase 'r':\n+\t  c = '\\r';\n+\t  break;\n+\tcase 'v':\n+\t  c = '\\v';\n+\t  break;\n+\tcase '\\\\':\n+\t  c = '\\\\';\n+\t  break;\n+\n+\tdefault:\n+\t  /* Unknown backslash codes are simply not expanded.  */\n+\t  gfc_current_locus = old_locus;\n+\t  break;\n+\t}\n+\n+      if (!(gfc_option.allow_std & GFC_STD_GNU) && !inhibit_warnings)\n+\tgfc_warning (\"Extension: backslash character at %C\");\n     }\n \n+  if (mode == MODE_COPY)\n+    *format_string++ = c;\n+\n   c = TOUPPER (c);\n   return c;\n }"}, {"sha": "64cc5e44f8de165d386c4f687e80fc6d1728114d", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e6a83a7924e9079240b7a60206c39806c46b32d/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e6a83a7924e9079240b7a60206c39806c46b32d/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=2e6a83a7924e9079240b7a60206c39806c46b32d", "patch": "@@ -764,6 +764,9 @@ next_string_char (char delimiter)\n \t  gfc_current_locus = old_locus;\n \t  break;\n \t}\n+\n+      if (!(gfc_option.allow_std & GFC_STD_GNU) && !inhibit_warnings)\n+\tgfc_warning (\"Extension: backslash character at %C\");\n     }\n \n   if (c != delimiter)"}, {"sha": "536b038c6b3ce660029b7e075ef770b643f6aa1f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e6a83a7924e9079240b7a60206c39806c46b32d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e6a83a7924e9079240b7a60206c39806c46b32d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e6a83a7924e9079240b7a60206c39806c46b32d", "patch": "@@ -1,3 +1,7 @@\n+2007-01-26  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* gfortran.dg/backslash_3.f: New test.\n+\n 2007-01-26  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/pr23382.c: Fix typo."}, {"sha": "08c86f36d62a5a53b2bd7ae7b17ff050fe11a77f", "filename": "gcc/testsuite/gfortran.dg/backslash_3.f", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e6a83a7924e9079240b7a60206c39806c46b32d/gcc%2Ftestsuite%2Fgfortran.dg%2Fbackslash_3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e6a83a7924e9079240b7a60206c39806c46b32d/gcc%2Ftestsuite%2Fgfortran.dg%2Fbackslash_3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbackslash_3.f?ref=2e6a83a7924e9079240b7a60206c39806c46b32d", "patch": "@@ -0,0 +1,25 @@\n+C { dg-do run }\n+C PR fortran/30278\n+      program a\n+      character(len=1), parameter  :: c1 = char(8), c2 = char(92)\n+      character(len=35) str1, str2\n+      character(len=37) :: str4, str3\n+\n+      open(10, status='scratch')\n+      write(10, 100)\n+      rewind(10)\n+      read(10,'(A34)') str1\n+      str2 = 'Does ' // c1 // 'ackslash result in ' // c1 // 'ackslash'\n+      if (str1 .ne. str2) call abort\n+\n+      rewind(10)\n+      write (10, 200)\n+      rewind(10)\n+      read(10,'(A37)') str3\n+      str4 = 'Does ' //c2// 'backslash result in ' //c2// 'backslash'\n+      if (str3 .ne. str4) call abort\n+\n+      stop\n+ 100  format ('Does \\backslash result in \\backslash')\n+ 200  format ('Does \\\\backslash result in \\\\backslash')\n+      end"}]}