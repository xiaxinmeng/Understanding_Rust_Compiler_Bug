{"sha": "1886c9d8361f7ba8931501dd8658026f5b3afcdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg4NmM5ZDgzNjFmN2JhODkzMTUwMWRkODY1ODAyNmY1YjNhZmNkZA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1998-12-03T17:53:02Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1998-12-03T17:53:02Z"}, "message": "java-tree.h (java_layout_seen_class_methods): New function prototype.\n\nThu Dec  3 17:11:12 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* java-tree.h (java_layout_seen_class_methods): New function\n \tprototype.\n\t(LAYOUT_SEEN_CLASS_METHODS): Macro removed.\n\t* jcf-parse.c (parse_class_file): Call java_layout_seen_class_methods.\n\t* parse.h (PROMOTE_RECORD_IF_COMPLETE): New macro.\n\t* parse.y (method_declarator:): Defined action.\n\t(issue_warning_error_from_context): input_filename saved, set to\n \tthe appropriate value and restored after java_error is called.\n\t(build_unresolved_array_type): Fixed comment.\n\t(register_fields): Use PROMOTE_RECORD_IF_COMPLETE.\n\t(method_header): Deal with return type the same way type are\n \thandled for fields and method's parameters and local variables\n \ttypes are handled.\n\t(check_method_redefinition): Removed extra CR.\n\t(declare_local_variables): Use PROMOTE_RECORD_IF_COMPLETE.\n\t(java_layout_seen_class_methods): New function.\n\t(java_layout_classes): Call java_layout_seen_class_methods.\nHandles an obsolete way of declaring methods returning an array. Does\na better job at laying out class methods before code generation.\n\nFrom-SVN: r24077", "tree": {"sha": "6d202291abbf1bce63f1d1a56ad31396e3086b50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d202291abbf1bce63f1d1a56ad31396e3086b50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1886c9d8361f7ba8931501dd8658026f5b3afcdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1886c9d8361f7ba8931501dd8658026f5b3afcdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1886c9d8361f7ba8931501dd8658026f5b3afcdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1886c9d8361f7ba8931501dd8658026f5b3afcdd/comments", "author": null, "committer": null, "parents": [{"sha": "2036a15c6d3583a413934700c527ae626be01075", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2036a15c6d3583a413934700c527ae626be01075", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2036a15c6d3583a413934700c527ae626be01075"}], "stats": {"total": 876, "additions": 471, "deletions": 405}, "files": [{"sha": "3cea6e46de64b8de9c9c682ce26137a44e031701", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1886c9d8361f7ba8931501dd8658026f5b3afcdd", "patch": "@@ -1,3 +1,23 @@\n+Thu Dec  3 17:11:12 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* java-tree.h (java_layout_seen_class_methods): New function\n+ \tprototype.\n+\t(LAYOUT_SEEN_CLASS_METHODS): Macro removed.\n+\t* jcf-parse.c (parse_class_file): Call java_layout_seen_class_methods.\n+\t* parse.h (PROMOTE_RECORD_IF_COMPLETE): New macro.\n+\t* parse.y (method_declarator:): Defined action.\n+\t(issue_warning_error_from_context): input_filename saved, set to\n+ \tthe appropriate value and restored after java_error is called.\n+\t(build_unresolved_array_type): Fixed comment.\n+\t(register_fields): Use PROMOTE_RECORD_IF_COMPLETE.\n+\t(method_header): Deal with return type the same way type are\n+ \thandled for fields and method's parameters and local variables\n+ \ttypes are handled.\n+\t(check_method_redefinition): Removed extra CR.\n+\t(declare_local_variables): Use PROMOTE_RECORD_IF_COMPLETE.\n+\t(java_layout_seen_class_methods): New function.\n+\t(java_layout_classes): Call java_layout_seen_class_methods.\n+\t\n Thu Dec  3 15:56:50 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* parse,y (patch_synchronized_statement):  Set CAN_COMPLETE_NORMALLY."}, {"sha": "4e6552535b0d0e3a409d98c01ee9cc9660b8c005", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=1886c9d8361f7ba8931501dd8658026f5b3afcdd", "patch": "@@ -562,6 +562,7 @@ extern void parse_error_context VPROTO ((tree cl, char *msg, ...));\n extern tree build_primtype_type_ref PROTO ((char *));\n extern tree java_get_real_method_name PROTO ((tree));\n extern void finish_class PROTO ((tree));\n+extern void java_layout_seen_class_methods PROTO (());\n \n /* Access flags etc for a method (a FUNCTION_DECL): */\n \n@@ -843,10 +844,3 @@ extern tree *type_map;\n      if (java_error_count)\t\t\t\t\t\t\\\n        return;\t\t\t\t\t\t\t\t\\\n    }\n-\n-#define LAYOUT_SEEN_CLASS_METHODS()\t\t\t\t\t    \\\n-  {\t\t\t\t\t\t\t\t\t    \\\n-    tree current;\t\t\t\t\t\t\t    \\\n-    for (current = all_class_list; current; current = TREE_CHAIN (current)) \\\n-      layout_class_methods (TREE_TYPE (TREE_VALUE (current)));\t\t    \\\n-  }"}, {"sha": "ef3ea47a09810f361051a38c013335ae58eef1ed", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=1886c9d8361f7ba8931501dd8658026f5b3afcdd", "patch": "@@ -635,7 +635,7 @@ parse_class_file ()\n   char *save_input_filename = input_filename;\n   int save_lineno = lineno;\n \n-  LAYOUT_SEEN_CLASS_METHODS ();\n+  java_layout_seen_class_methods ();\n \n   input_filename = DECL_SOURCE_FILE (TYPE_NAME (current_class));\n   lineno = 0;"}, {"sha": "bb1ee9403d5ed09a9363726369b799ae3914585b", "filename": "gcc/java/parse.c", "status": "modified", "additions": 388, "deletions": 364, "changes": 752, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=1886c9d8361f7ba8931501dd8658026f5b3afcdd", "patch": "@@ -669,45 +669,45 @@ static const short yyrline[] = { 0,\n    718,   719,   723,   725,   726,   728,   733,   736,   746,   749,\n    751,   755,   758,   765,   771,   779,   781,   783,   785,   787,\n    791,   793,   798,   805,   806,   810,   813,   815,   817,   819,\n-   821,   823,   825,   827,   834,   837,   839,   844,   846,   850,\n-   855,   860,   864,   869,   871,   873,   880,   882,   884,   888,\n-   891,   893,   897,   899,   900,   905,   910,   916,   924,   931,\n-   934,   937,   941,   944,   948,   957,   959,   961,   966,   973,\n-   981,   983,   987,   995,  1006,  1010,  1013,  1016,  1019,  1022,\n-  1025,  1028,  1031,  1033,  1037,  1043,  1048,  1050,  1054,  1057,\n-  1061,  1063,  1066,  1068,  1069,  1071,  1075,  1079,  1085,  1090,\n-  1095,  1099,  1103,  1109,  1111,  1112,  1117,  1120,  1124,  1129,\n-  1137,  1139,  1142,  1144,  1146,  1150,  1154,  1157,  1161,  1163,\n-  1164,  1165,  1166,  1167,  1177,  1179,  1180,  1181,  1182,  1185,\n-  1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,  1196,\n-  1199,  1204,  1215,  1222,  1226,  1237,  1247,  1253,  1259,  1265,\n-  1267,  1273,  1275,  1281,  1283,  1285,  1287,  1289,  1293,  1295,\n-  1296,  1297,  1298,  1299,  1300,  1303,  1306,  1308,  1310,  1314,\n-  1319,  1324,  1330,  1339,  1345,  1347,  1349,  1353,  1355,  1356,\n-  1357,  1360,  1362,  1365,  1369,  1371,  1374,  1381,  1387,  1389,\n-  1391,  1395,  1403,  1406,  1408,  1410,  1414,  1419,  1428,  1433,\n-  1436,  1443,  1445,  1447,  1451,  1454,  1463,  1470,  1472,  1476,\n-  1489,  1491,  1497,  1503,  1507,  1509,  1513,  1516,  1518,  1522,\n-  1525,  1527,  1529,  1533,  1536,  1538,  1540,  1544,  1547,  1549,\n-  1551,  1555,  1561,  1563,  1567,  1574,  1576,  1578,  1580,  1584,\n-  1592,  1595,  1597,  1599,  1603,  1605,  1612,  1620,  1637,  1639,\n-  1641,  1645,  1651,  1656,  1658,  1661,  1663,  1665,  1667,  1668,\n-  1669,  1670,  1674,  1676,  1678,  1683,  1685,  1687,  1689,  1691,\n-  1695,  1698,  1703,  1705,  1710,  1711,  1712,  1713,  1714,  1716,\n-  1718,  1720,  1722,  1724,  1728,  1730,  1733,  1739,  1744,  1748,\n-  1751,  1753,  1755,  1759,  1761,  1763,  1765,  1769,  1772,  1776,\n-  1782,  1784,  1792,  1795,  1797,  1801,  1806,  1814,  1818,  1821,\n-  1823,  1834,  1845,  1850,  1859,  1861,  1865,  1868,  1870,  1875,\n-  1880,  1885,  1892,  1894,  1895,  1896,  1899,  1904,  1909,  1911,\n-  1912,  1914,  1916,  1917,  1919,  1923,  1926,  1930,  1933,  1937,\n-  1939,  1941,  1943,  1944,  1946,  1950,  1958,  1960,  1962,  1974,\n-  1976,  1982,  1984,  1986,  1990,  1992,  1997,  2002,  2007,  2009,\n-  2011,  2015,  2017,  2022,  2027,  2029,  2033,  2035,  2040,  2045,\n-  2050,  2052,  2054,  2058,  2060,  2065,  2070,  2075,  2080,  2082,\n-  2084,  2086,  2088,  2090,  2094,  2096,  2101,  2106,  2108,  2112,\n-  2114,  2119,  2123,  2125,  2130,  2134,  2136,  2141,  2145,  2147,\n-  2152,  2156,  2158,  2163,  2167,  2169,  2174,  2180,  2182,  2186,\n-  2188,  2191,  2194,  2202,  2204,  2205,  2208,  2210,  2213,  2217\n+   821,   823,   825,   827,   834,   837,   839,   848,   850,   854,\n+   859,   864,   868,   873,   875,   877,   884,   886,   888,   892,\n+   895,   897,   901,   903,   904,   909,   914,   920,   928,   935,\n+   938,   941,   945,   948,   952,   961,   963,   965,   970,   977,\n+   985,   987,   991,   999,  1010,  1014,  1017,  1020,  1023,  1026,\n+  1029,  1032,  1035,  1037,  1041,  1047,  1052,  1054,  1058,  1061,\n+  1065,  1067,  1070,  1072,  1073,  1075,  1079,  1083,  1089,  1094,\n+  1099,  1103,  1107,  1113,  1115,  1116,  1121,  1124,  1128,  1133,\n+  1141,  1143,  1146,  1148,  1150,  1154,  1158,  1161,  1165,  1167,\n+  1168,  1169,  1170,  1171,  1181,  1183,  1184,  1185,  1186,  1189,\n+  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,  1199,  1200,\n+  1203,  1208,  1219,  1226,  1230,  1241,  1251,  1257,  1263,  1269,\n+  1271,  1277,  1279,  1285,  1287,  1289,  1291,  1293,  1297,  1299,\n+  1300,  1301,  1302,  1303,  1304,  1307,  1310,  1312,  1314,  1318,\n+  1323,  1328,  1334,  1343,  1349,  1351,  1353,  1357,  1359,  1360,\n+  1361,  1364,  1366,  1369,  1373,  1375,  1378,  1385,  1391,  1393,\n+  1395,  1399,  1407,  1410,  1412,  1414,  1418,  1423,  1432,  1437,\n+  1440,  1447,  1449,  1451,  1455,  1458,  1467,  1474,  1476,  1480,\n+  1493,  1495,  1501,  1507,  1511,  1513,  1517,  1520,  1522,  1526,\n+  1529,  1531,  1533,  1537,  1540,  1542,  1544,  1548,  1551,  1553,\n+  1555,  1559,  1565,  1567,  1571,  1578,  1580,  1582,  1584,  1588,\n+  1596,  1599,  1601,  1603,  1607,  1609,  1616,  1624,  1641,  1643,\n+  1645,  1649,  1655,  1660,  1662,  1665,  1667,  1669,  1671,  1672,\n+  1673,  1674,  1678,  1680,  1682,  1687,  1689,  1691,  1693,  1695,\n+  1699,  1702,  1707,  1709,  1714,  1715,  1716,  1717,  1718,  1720,\n+  1722,  1724,  1726,  1728,  1732,  1734,  1737,  1743,  1748,  1752,\n+  1755,  1757,  1759,  1763,  1765,  1767,  1769,  1773,  1776,  1780,\n+  1786,  1788,  1796,  1799,  1801,  1805,  1810,  1818,  1822,  1825,\n+  1827,  1838,  1849,  1854,  1863,  1865,  1869,  1872,  1874,  1879,\n+  1884,  1889,  1896,  1898,  1899,  1900,  1903,  1908,  1913,  1915,\n+  1916,  1918,  1920,  1921,  1923,  1927,  1930,  1934,  1937,  1941,\n+  1943,  1945,  1947,  1948,  1950,  1954,  1962,  1964,  1966,  1978,\n+  1980,  1986,  1988,  1990,  1994,  1996,  2001,  2006,  2011,  2013,\n+  2015,  2019,  2021,  2026,  2031,  2033,  2037,  2039,  2044,  2049,\n+  2054,  2056,  2058,  2062,  2064,  2069,  2074,  2079,  2084,  2086,\n+  2088,  2090,  2092,  2094,  2098,  2100,  2105,  2110,  2112,  2116,\n+  2118,  2123,  2127,  2129,  2134,  2138,  2140,  2145,  2149,  2151,\n+  2156,  2160,  2162,  2167,  2171,  2173,  2178,  2184,  2186,  2190,\n+  2192,  2195,  2198,  2206,  2208,  2209,  2212,  2214,  2217,  2221\n };\n #endif\n \n@@ -3113,174 +3113,178 @@ case 116:\n case 117:\n #line 840 \"./parse.y\"\n {\n-\t\t  /* Issue a warning here: obsolete declaration. FIXME */\n-\t\t  yyval.node = NULL;\t/* FIXME */\n+\t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n+\t\t  TREE_PURPOSE (yyvsp[-2].node) = \n+\t\t    build_unresolved_array_type (TREE_PURPOSE (yyvsp[-2].node));\n+\t\t  parse_warning_context \n+\t\t    (wfl_operator, \n+\t\t     \"Discouraged form of returned type specification\");\n \t\t;\n     break;}\n case 118:\n-#line 845 \"./parse.y\"\n+#line 849 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 119:\n-#line 847 \"./parse.y\"\n+#line 851 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 120:\n-#line 852 \"./parse.y\"\n+#line 856 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 121:\n-#line 856 \"./parse.y\"\n+#line 860 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 122:\n-#line 861 \"./parse.y\"\n+#line 865 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 123:\n-#line 866 \"./parse.y\"\n+#line 870 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 124:\n-#line 870 \"./parse.y\"\n+#line 874 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 125:\n-#line 872 \"./parse.y\"\n+#line 876 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 126:\n-#line 874 \"./parse.y\"\n+#line 878 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 127:\n-#line 881 \"./parse.y\"\n+#line 885 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 128:\n-#line 883 \"./parse.y\"\n+#line 887 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 129:\n-#line 885 \"./parse.y\"\n+#line 889 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 130:\n-#line 890 \"./parse.y\"\n+#line 894 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 131:\n-#line 892 \"./parse.y\"\n+#line 896 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 132:\n-#line 894 \"./parse.y\"\n+#line 898 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 135:\n-#line 901 \"./parse.y\"\n+#line 905 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 136:\n-#line 907 \"./parse.y\"\n+#line 911 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 137:\n-#line 911 \"./parse.y\"\n+#line 915 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 138:\n-#line 918 \"./parse.y\"\n+#line 922 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 139:\n-#line 926 \"./parse.y\"\n+#line 930 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 140:\n-#line 931 \"./parse.y\"\n+#line 935 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 141:\n-#line 936 \"./parse.y\"\n+#line 940 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 938 \"./parse.y\"\n+#line 942 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 943 \"./parse.y\"\n+#line 947 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 144:\n-#line 945 \"./parse.y\"\n+#line 949 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 145:\n-#line 953 \"./parse.y\"\n+#line 957 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 146:\n-#line 958 \"./parse.y\"\n+#line 962 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 147:\n-#line 960 \"./parse.y\"\n+#line 964 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 962 \"./parse.y\"\n+#line 966 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 968 \"./parse.y\"\n+#line 972 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 150:\n-#line 974 \"./parse.y\"\n+#line 978 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 982 \"./parse.y\"\n+#line 986 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 152:\n-#line 984 \"./parse.y\"\n+#line 988 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 989 \"./parse.y\"\n+#line 993 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node, \n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3289,7 +3293,7 @@ case 153:\n \t\t;\n     break;}\n case 154:\n-#line 996 \"./parse.y\"\n+#line 1000 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node,\n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3298,167 +3302,167 @@ case 154:\n \t\t;\n     break;}\n case 155:\n-#line 1008 \"./parse.y\"\n+#line 1012 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 156:\n-#line 1010 \"./parse.y\"\n+#line 1014 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 157:\n-#line 1014 \"./parse.y\"\n+#line 1018 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 158:\n-#line 1016 \"./parse.y\"\n+#line 1020 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 159:\n-#line 1020 \"./parse.y\"\n+#line 1024 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 160:\n-#line 1022 \"./parse.y\"\n+#line 1026 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 161:\n-#line 1026 \"./parse.y\"\n+#line 1030 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 162:\n-#line 1028 \"./parse.y\"\n+#line 1032 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 163:\n-#line 1032 \"./parse.y\"\n+#line 1036 \"./parse.y\"\n {yyerror (\"(here)'{' expected\"); RECOVER;;\n     break;}\n case 164:\n-#line 1034 \"./parse.y\"\n+#line 1038 \"./parse.y\"\n {yyerror (\"(there)'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1039 \"./parse.y\"\n+#line 1043 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 166:\n-#line 1044 \"./parse.y\"\n+#line 1048 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 167:\n-#line 1049 \"./parse.y\"\n+#line 1053 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 168:\n-#line 1051 \"./parse.y\"\n+#line 1055 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 169:\n-#line 1056 \"./parse.y\"\n+#line 1060 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 170:\n-#line 1058 \"./parse.y\"\n+#line 1062 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 175:\n-#line 1070 \"./parse.y\"\n+#line 1074 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 176:\n-#line 1072 \"./parse.y\"\n+#line 1076 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 178:\n-#line 1081 \"./parse.y\"\n+#line 1085 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 179:\n-#line 1086 \"./parse.y\"\n+#line 1090 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 180:\n-#line 1092 \"./parse.y\"\n+#line 1096 \"./parse.y\"\n {\n \t\t  RULE (\"ARRAY_INITIALIZER (empty)\");\n \t\t;\n     break;}\n case 181:\n-#line 1096 \"./parse.y\"\n+#line 1100 \"./parse.y\"\n {\n \t\t  RULE (\"ARRAY_INITIALIZER (variable)\");\n \t\t;\n     break;}\n case 182:\n-#line 1100 \"./parse.y\"\n+#line 1104 \"./parse.y\"\n {\n \t\t  RULE (\"ARRAY_INITIALIZER (,)\");\n \t\t;\n     break;}\n case 183:\n-#line 1104 \"./parse.y\"\n+#line 1108 \"./parse.y\"\n {\n \t\t  RULE (\"ARRAY_INITIALIZER (variable, ,)\");\n \t\t;\n     break;}\n case 186:\n-#line 1113 \"./parse.y\"\n+#line 1117 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 187:\n-#line 1119 \"./parse.y\"\n+#line 1123 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 188:\n-#line 1121 \"./parse.y\"\n+#line 1125 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 189:\n-#line 1126 \"./parse.y\"\n+#line 1130 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 190:\n-#line 1131 \"./parse.y\"\n+#line 1135 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 194:\n-#line 1145 \"./parse.y\"\n+#line 1149 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 195:\n-#line 1147 \"./parse.y\"\n+#line 1151 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 197:\n-#line 1156 \"./parse.y\"\n+#line 1160 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 198:\n-#line 1158 \"./parse.y\"\n+#line 1162 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 204:\n-#line 1168 \"./parse.y\"\n+#line 1172 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3468,11 +3472,11 @@ case 204:\n \t\t;\n     break;}\n case 221:\n-#line 1201 \"./parse.y\"\n+#line 1205 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 222:\n-#line 1206 \"./parse.y\"\n+#line 1210 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3482,27 +3486,27 @@ case 222:\n \t\t;\n     break;}\n case 223:\n-#line 1217 \"./parse.y\"\n+#line 1221 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 224:\n-#line 1223 \"./parse.y\"\n+#line 1227 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 225:\n-#line 1228 \"./parse.y\"\n+#line 1232 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 226:\n-#line 1239 \"./parse.y\"\n+#line 1243 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3513,105 +3517,105 @@ case 226:\n \t\t;\n     break;}\n case 227:\n-#line 1248 \"./parse.y\"\n+#line 1252 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1254 \"./parse.y\"\n+#line 1258 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1260 \"./parse.y\"\n+#line 1264 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1266 \"./parse.y\"\n+#line 1270 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 231:\n-#line 1268 \"./parse.y\"\n+#line 1272 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 232:\n-#line 1274 \"./parse.y\"\n+#line 1278 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1276 \"./parse.y\"\n+#line 1280 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1282 \"./parse.y\"\n+#line 1286 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1284 \"./parse.y\"\n+#line 1288 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1286 \"./parse.y\"\n+#line 1290 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1288 \"./parse.y\"\n+#line 1292 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1290 \"./parse.y\"\n+#line 1294 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 246:\n-#line 1305 \"./parse.y\"\n+#line 1309 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 247:\n-#line 1307 \"./parse.y\"\n+#line 1311 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1309 \"./parse.y\"\n+#line 1313 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 249:\n-#line 1311 \"./parse.y\"\n+#line 1315 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1316 \"./parse.y\"\n+#line 1320 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1321 \"./parse.y\"\n+#line 1325 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 252:\n-#line 1326 \"./parse.y\"\n+#line 1330 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 253:\n-#line 1330 \"./parse.y\"\n+#line 1334 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own COMPOUND_EXPR. */\n@@ -3621,96 +3625,96 @@ case 253:\n \t\t;\n     break;}\n case 254:\n-#line 1341 \"./parse.y\"\n+#line 1345 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 255:\n-#line 1346 \"./parse.y\"\n+#line 1350 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 256:\n-#line 1348 \"./parse.y\"\n+#line 1352 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 257:\n-#line 1350 \"./parse.y\"\n+#line 1354 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 267:\n-#line 1376 \"./parse.y\"\n+#line 1380 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1382 \"./parse.y\"\n+#line 1386 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 269:\n-#line 1388 \"./parse.y\"\n+#line 1392 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 270:\n-#line 1390 \"./parse.y\"\n+#line 1394 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1392 \"./parse.y\"\n+#line 1396 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 272:\n-#line 1397 \"./parse.y\"\n+#line 1401 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 273:\n-#line 1405 \"./parse.y\"\n+#line 1409 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 274:\n-#line 1407 \"./parse.y\"\n+#line 1411 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1409 \"./parse.y\"\n+#line 1413 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1411 \"./parse.y\"\n+#line 1415 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1416 \"./parse.y\"\n+#line 1420 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 278:\n-#line 1421 \"./parse.y\"\n+#line 1425 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 279:\n-#line 1430 \"./parse.y\"\n+#line 1434 \"./parse.y\"\n { yyval.node = complete_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 280:\n-#line 1435 \"./parse.y\"\n+#line 1439 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 281:\n-#line 1437 \"./parse.y\"\n+#line 1441 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3719,23 +3723,23 @@ case 281:\n \t\t;\n     break;}\n case 282:\n-#line 1444 \"./parse.y\"\n+#line 1448 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1446 \"./parse.y\"\n+#line 1450 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1448 \"./parse.y\"\n+#line 1452 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1453 \"./parse.y\"\n+#line 1457 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 286:\n-#line 1455 \"./parse.y\"\n+#line 1459 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3744,23 +3748,23 @@ case 286:\n \t\t;\n     break;}\n case 287:\n-#line 1465 \"./parse.y\"\n+#line 1469 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 288:\n-#line 1471 \"./parse.y\"\n+#line 1475 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 289:\n-#line 1473 \"./parse.y\"\n+#line 1477 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 290:\n-#line 1478 \"./parse.y\"\n+#line 1482 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3773,176 +3777,176 @@ case 290:\n \t\t;\n     break;}\n case 291:\n-#line 1490 \"./parse.y\"\n+#line 1494 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 292:\n-#line 1492 \"./parse.y\"\n+#line 1496 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 293:\n-#line 1498 \"./parse.y\"\n+#line 1502 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 294:\n-#line 1504 \"./parse.y\"\n+#line 1508 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 295:\n-#line 1508 \"./parse.y\"\n+#line 1512 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 296:\n-#line 1510 \"./parse.y\"\n+#line 1514 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1515 \"./parse.y\"\n+#line 1519 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1517 \"./parse.y\"\n+#line 1521 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1519 \"./parse.y\"\n+#line 1523 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 300:\n-#line 1524 \"./parse.y\"\n+#line 1528 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 301:\n-#line 1526 \"./parse.y\"\n+#line 1530 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 302:\n-#line 1528 \"./parse.y\"\n+#line 1532 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 303:\n-#line 1530 \"./parse.y\"\n+#line 1534 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 304:\n-#line 1535 \"./parse.y\"\n+#line 1539 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 305:\n-#line 1537 \"./parse.y\"\n+#line 1541 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 306:\n-#line 1539 \"./parse.y\"\n+#line 1543 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 307:\n-#line 1541 \"./parse.y\"\n+#line 1545 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 308:\n-#line 1546 \"./parse.y\"\n+#line 1550 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 309:\n-#line 1548 \"./parse.y\"\n+#line 1552 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 310:\n-#line 1550 \"./parse.y\"\n+#line 1554 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 311:\n-#line 1552 \"./parse.y\"\n+#line 1556 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 312:\n-#line 1557 \"./parse.y\"\n+#line 1561 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 313:\n-#line 1562 \"./parse.y\"\n+#line 1566 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 314:\n-#line 1564 \"./parse.y\"\n+#line 1568 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 315:\n-#line 1569 \"./parse.y\"\n+#line 1573 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 316:\n-#line 1575 \"./parse.y\"\n+#line 1579 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1577 \"./parse.y\"\n+#line 1581 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 318:\n-#line 1579 \"./parse.y\"\n+#line 1583 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1581 \"./parse.y\"\n+#line 1585 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 320:\n-#line 1586 \"./parse.y\"\n+#line 1590 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 321:\n-#line 1594 \"./parse.y\"\n+#line 1598 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 322:\n-#line 1596 \"./parse.y\"\n+#line 1600 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1598 \"./parse.y\"\n+#line 1602 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 324:\n-#line 1600 \"./parse.y\"\n+#line 1604 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 326:\n-#line 1606 \"./parse.y\"\n+#line 1610 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 327:\n-#line 1614 \"./parse.y\"\n+#line 1618 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 328:\n-#line 1622 \"./parse.y\"\n+#line 1626 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -3960,203 +3964,203 @@ case 328:\n \t\t;\n     break;}\n case 329:\n-#line 1638 \"./parse.y\"\n+#line 1642 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 330:\n-#line 1640 \"./parse.y\"\n+#line 1644 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 331:\n-#line 1642 \"./parse.y\"\n+#line 1646 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 332:\n-#line 1647 \"./parse.y\"\n+#line 1651 \"./parse.y\"\n { \n \t\t  yyval.node = build (FINALLY_EXPR, NULL_TREE,\n \t\t\t      create_label_decl (generate_name ()), yyvsp[0].node);\n \t\t;\n     break;}\n case 333:\n-#line 1652 \"./parse.y\"\n+#line 1656 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 337:\n-#line 1664 \"./parse.y\"\n+#line 1668 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 338:\n-#line 1666 \"./parse.y\"\n+#line 1670 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 343:\n-#line 1675 \"./parse.y\"\n+#line 1679 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 344:\n-#line 1677 \"./parse.y\"\n+#line 1681 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 345:\n-#line 1679 \"./parse.y\"\n+#line 1683 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 346:\n-#line 1684 \"./parse.y\"\n+#line 1688 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 347:\n-#line 1686 \"./parse.y\"\n+#line 1690 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 348:\n-#line 1688 \"./parse.y\"\n+#line 1692 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1690 \"./parse.y\"\n+#line 1694 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1692 \"./parse.y\"\n+#line 1696 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1697 \"./parse.y\"\n+#line 1701 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 352:\n-#line 1699 \"./parse.y\"\n+#line 1703 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 353:\n-#line 1704 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 354:\n-#line 1706 \"./parse.y\"\n+#line 1710 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 359:\n-#line 1715 \"./parse.y\"\n+#line 1719 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 360:\n-#line 1717 \"./parse.y\"\n+#line 1721 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1719 \"./parse.y\"\n+#line 1723 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1721 \"./parse.y\"\n+#line 1725 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1723 \"./parse.y\"\n+#line 1727 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1725 \"./parse.y\"\n+#line 1729 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 367:\n-#line 1735 \"./parse.y\"\n+#line 1739 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 368:\n-#line 1740 \"./parse.y\"\n+#line 1744 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 369:\n-#line 1745 \"./parse.y\"\n+#line 1749 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 370:\n-#line 1750 \"./parse.y\"\n+#line 1754 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1752 \"./parse.y\"\n+#line 1756 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 372:\n-#line 1754 \"./parse.y\"\n+#line 1758 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n     break;}\n case 373:\n-#line 1756 \"./parse.y\"\n+#line 1760 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n     break;}\n case 374:\n-#line 1760 \"./parse.y\"\n+#line 1764 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1762 \"./parse.y\"\n+#line 1766 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 376:\n-#line 1764 \"./parse.y\"\n+#line 1768 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 377:\n-#line 1766 \"./parse.y\"\n+#line 1770 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 378:\n-#line 1771 \"./parse.y\"\n+#line 1775 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 379:\n-#line 1773 \"./parse.y\"\n+#line 1777 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 380:\n-#line 1778 \"./parse.y\"\n+#line 1782 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 381:\n-#line 1783 \"./parse.y\"\n+#line 1787 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 382:\n-#line 1785 \"./parse.y\"\n+#line 1789 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 383:\n-#line 1794 \"./parse.y\"\n+#line 1798 \"./parse.y\"\n { ctxp->osb_number = 1; ;\n     break;}\n case 384:\n-#line 1796 \"./parse.y\"\n+#line 1800 \"./parse.y\"\n { ctxp->osb_number++; ;\n     break;}\n case 385:\n-#line 1798 \"./parse.y\"\n+#line 1802 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 386:\n-#line 1803 \"./parse.y\"\n+#line 1807 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 387:\n-#line 1807 \"./parse.y\"\n+#line 1811 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node, \n@@ -4166,19 +4170,19 @@ case 387:\n \t\t;\n     break;}\n case 388:\n-#line 1815 \"./parse.y\"\n+#line 1819 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 389:\n-#line 1820 \"./parse.y\"\n+#line 1824 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 390:\n-#line 1822 \"./parse.y\"\n+#line 1826 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 391:\n-#line 1824 \"./parse.y\"\n+#line 1828 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4191,7 +4195,7 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1835 \"./parse.y\"\n+#line 1839 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4204,121 +4208,121 @@ case 392:\n \t\t;\n     break;}\n case 393:\n-#line 1846 \"./parse.y\"\n+#line 1850 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1851 \"./parse.y\"\n+#line 1855 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 395:\n-#line 1860 \"./parse.y\"\n+#line 1864 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1862 \"./parse.y\"\n+#line 1866 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 397:\n-#line 1867 \"./parse.y\"\n+#line 1871 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1869 \"./parse.y\"\n+#line 1873 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 399:\n-#line 1871 \"./parse.y\"\n+#line 1875 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1876 \"./parse.y\"\n+#line 1880 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1881 \"./parse.y\"\n+#line 1885 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1886 \"./parse.y\"\n+#line 1890 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 407:\n-#line 1901 \"./parse.y\"\n+#line 1905 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 408:\n-#line 1906 \"./parse.y\"\n+#line 1910 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 411:\n-#line 1913 \"./parse.y\"\n+#line 1917 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 412:\n-#line 1915 \"./parse.y\"\n+#line 1919 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 1918 \"./parse.y\"\n+#line 1922 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1920 \"./parse.y\"\n+#line 1924 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 416:\n-#line 1925 \"./parse.y\"\n+#line 1929 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 417:\n-#line 1927 \"./parse.y\"\n+#line 1931 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 1932 \"./parse.y\"\n+#line 1936 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 1934 \"./parse.y\"\n+#line 1938 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 421:\n-#line 1940 \"./parse.y\"\n+#line 1944 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 422:\n-#line 1942 \"./parse.y\"\n+#line 1946 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 1945 \"./parse.y\"\n+#line 1949 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 1947 \"./parse.y\"\n+#line 1951 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 426:\n-#line 1952 \"./parse.y\"\n+#line 1956 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (ctxp->osb_number--)\n@@ -4327,15 +4331,15 @@ case 426:\n \t\t;\n     break;}\n case 427:\n-#line 1959 \"./parse.y\"\n+#line 1963 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 1961 \"./parse.y\"\n+#line 1965 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 429:\n-#line 1963 \"./parse.y\"\n+#line 1967 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (ctxp->osb_number--)\n@@ -4349,275 +4353,275 @@ case 429:\n \t\t;\n     break;}\n case 430:\n-#line 1975 \"./parse.y\"\n+#line 1979 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 431:\n-#line 1977 \"./parse.y\"\n+#line 1981 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 432:\n-#line 1983 \"./parse.y\"\n+#line 1987 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 1985 \"./parse.y\"\n+#line 1989 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 434:\n-#line 1987 \"./parse.y\"\n+#line 1991 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 1993 \"./parse.y\"\n+#line 1997 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 437:\n-#line 1998 \"./parse.y\"\n+#line 2002 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2003 \"./parse.y\"\n+#line 2007 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 439:\n-#line 2008 \"./parse.y\"\n+#line 2012 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2010 \"./parse.y\"\n+#line 2014 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 441:\n-#line 2012 \"./parse.y\"\n+#line 2016 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2018 \"./parse.y\"\n+#line 2022 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2023 \"./parse.y\"\n+#line 2027 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 445:\n-#line 2028 \"./parse.y\"\n+#line 2032 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 446:\n-#line 2030 \"./parse.y\"\n+#line 2034 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2036 \"./parse.y\"\n+#line 2040 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2041 \"./parse.y\"\n+#line 2045 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2046 \"./parse.y\"\n+#line 2050 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2051 \"./parse.y\"\n+#line 2055 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2053 \"./parse.y\"\n+#line 2057 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 453:\n-#line 2055 \"./parse.y\"\n+#line 2059 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2061 \"./parse.y\"\n+#line 2065 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2066 \"./parse.y\"\n+#line 2070 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2071 \"./parse.y\"\n+#line 2075 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2076 \"./parse.y\"\n+#line 2080 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2081 \"./parse.y\"\n+#line 2085 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 460:\n-#line 2083 \"./parse.y\"\n+#line 2087 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2085 \"./parse.y\"\n+#line 2089 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2087 \"./parse.y\"\n+#line 2091 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2089 \"./parse.y\"\n+#line 2093 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2091 \"./parse.y\"\n+#line 2095 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 466:\n-#line 2097 \"./parse.y\"\n+#line 2101 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2102 \"./parse.y\"\n+#line 2106 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 468:\n-#line 2107 \"./parse.y\"\n+#line 2111 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 469:\n-#line 2109 \"./parse.y\"\n+#line 2113 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2115 \"./parse.y\"\n+#line 2119 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 472:\n-#line 2120 \"./parse.y\"\n+#line 2124 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 474:\n-#line 2126 \"./parse.y\"\n+#line 2130 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 475:\n-#line 2131 \"./parse.y\"\n+#line 2135 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 477:\n-#line 2137 \"./parse.y\"\n+#line 2141 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 478:\n-#line 2142 \"./parse.y\"\n+#line 2146 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 480:\n-#line 2148 \"./parse.y\"\n+#line 2152 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 481:\n-#line 2153 \"./parse.y\"\n+#line 2157 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 483:\n-#line 2159 \"./parse.y\"\n+#line 2163 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 484:\n-#line 2164 \"./parse.y\"\n+#line 2168 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 486:\n-#line 2170 \"./parse.y\"\n+#line 2174 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 487:\n-#line 2175 \"./parse.y\"\n+#line 2179 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 488:\n-#line 2181 \"./parse.y\"\n+#line 2185 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 489:\n-#line 2183 \"./parse.y\"\n+#line 2187 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 492:\n-#line 2193 \"./parse.y\"\n+#line 2197 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 493:\n-#line 2195 \"./parse.y\"\n+#line 2199 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4822,7 +4826,7 @@ case 493:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2221 \"./parse.y\"\n+#line 2225 \"./parse.y\"\n \n \f\n \n@@ -5013,7 +5017,7 @@ issue_warning_error_from_context (cl, msg, ap)\n      char *msg;\n      va_list ap;\n {\n-  char *saved;\n+  char *saved, *saved_input_filename;\n   char buffer [4096];\n   vsprintf (buffer, msg, ap);\n   force_error = 1;\n@@ -5026,9 +5030,12 @@ issue_warning_error_from_context (cl, msg, ap)\n   saved = ctxp->filename;\n   if (TREE_CODE (cl) == EXPR_WITH_FILE_LOCATION && EXPR_WFL_FILENAME_NODE (cl))\n     ctxp->filename = EXPR_WFL_FILENAME (cl);\n+  saved_input_filename = input_filename;\n+  input_filename = ctxp->filename;\n   java_error (NULL);\n   java_error (buffer);\n   ctxp->filename = saved;\n+  input_filename = saved_input_filename;\n   force_error = 0;\n }\n \n@@ -5277,7 +5284,7 @@ build_unresolved_array_type (type_or_wfl)\n {\n   char *ptr;\n \n-  /* TYPE_OR_WFL might be an array on a primitive type. In this case,\n+  /* TYPE_OR_WFL might be an array on a resolved type. In this case,\n      just create a array type */\n   if (TREE_CODE (type_or_wfl) == RECORD_TYPE)\n     {\n@@ -5666,8 +5673,7 @@ register_fields (flags, type, variable_list)\n   SET_TYPE_FOR_RESOLUTION (type, wfl, must_chain);\n \n   /* If TYPE is fully resolved and we don't have a reference, make one */\n-  if (!must_chain && TREE_CODE (type) == RECORD_TYPE)\n-    type = promote_type (type);\n+  PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n \n   for (current = variable_list, saved_type = type; current; \n        current = TREE_CHAIN (current), type = saved_type)\n@@ -5687,8 +5693,7 @@ register_fields (flags, type, variable_list)\n \t change the name if we have an init. */\n       if (type != saved_type)\n \t{\n-\t  if (!must_chain && (TREE_CODE (type) == RECORD_TYPE))\n-\t    type = promote_type (type);\n+\t  PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n \t  if (init)\n \t    EXPR_WFL_NODE (TREE_OPERAND (init, 0)) = current_name;\n \t}\n@@ -5837,9 +5842,10 @@ method_header (flags, type, mdecl, throws)\n   tree meth = TREE_VALUE (mdecl);\n   tree id = TREE_PURPOSE (mdecl);\n   tree this_class = TREE_TYPE (ctxp->current_parsed_class);\n-  tree meth_name, returned_type, current, orig_arg;\n+  tree type_wfl = NULL_TREE;\n+  tree meth_name, current, orig_arg, saved_type;\n   int saved_lineno;\n-  int constructor_ok = 0;\n+  int constructor_ok = 0, must_chain;\n   \n   check_modifiers_consistency (flags);\n   \n@@ -5916,24 +5922,22 @@ method_header (flags, type, mdecl, throws)\n   else\n     meth_name = EXPR_WFL_NODE (id);\n \n-  if (unresolved_type_p (type, &returned_type))\n+  /* Do the returned type resolution and registration if necessary */\n+  SET_TYPE_FOR_RESOLUTION (type, type_wfl, must_chain);\n+\n+  saved_type = type;\n+  type = build_array_from_name (type, type_wfl, meth_name, &meth_name);\n+  EXPR_WFL_NODE (id) = meth_name;\n+  PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n+\n+  if (must_chain)\n     {\n-      if (returned_type)\n-\tTREE_TYPE (meth) = returned_type;\n-      else \n-\t{\n-\t  tree itype;\n-\t  patch_stage = JDEP_METHOD_RETURN;\n-\t  itype = register_incomplete_type (patch_stage, type, id, NULL_TREE);\n-\t  TREE_TYPE (meth) = GET_REAL_TYPE (itype);\n-\t}\n+      patch_stage = JDEP_METHOD_RETURN;\n+      register_incomplete_type (patch_stage, type_wfl, id, type);\n+      TREE_TYPE (meth) = GET_REAL_TYPE (type);\n     }\n   else\n-    {\n-      if (TREE_CODE (type) == RECORD_TYPE)\n-\ttype = promote_type (type);\n-      TREE_TYPE (meth) = type;\n-    }\n+    TREE_TYPE (meth) = type;\n \n   saved_lineno = lineno;\n   /* When defining an abstract or interface method, the curly\n@@ -6980,7 +6984,6 @@ check_method_redefinition (class, method)\n     return 0;\n \n   name = DECL_NAME (method);\n-  \n   for (redef = TYPE_METHODS (class); redef; redef = TREE_CHAIN (redef))\n     {\n       if (redef == method)\n@@ -7798,8 +7801,7 @@ declare_local_variables (modifier, type, vlist)\n   SET_TYPE_FOR_RESOLUTION (type, type_wfl, must_chain);\n \n   /* If TYPE is fully resolved and we don't have a reference, make one */\n-  if (!must_chain && TREE_CODE (type) == RECORD_TYPE)\n-    type = promote_type (type);\n+  PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n \n   /* Go through all the declared variables */\n   for (current = vlist, saved_type = type; current;\n@@ -7824,9 +7826,7 @@ declare_local_variables (modifier, type, vlist)\n       /* Type adjustment. We may have just readjusted TYPE because\n \t the variable specified more dimensions. Make sure we have\n \t a reference if we can and don't have one already. */\n-      if (type != saved_type && !must_chain \n-\t  && (TREE_CODE (type) == RECORD_TYPE))\n-\ttype = promote_type (type);\n+      PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n \n       real_type = GET_REAL_TYPE (type);\n       /* Never layout this decl. This will be done when its scope\n@@ -8067,6 +8067,28 @@ add_stmt_to_compound (existing, type, stmt)\n /* Hold THIS for the scope of the current public method decl.  */\n static tree current_this;\n \n+void java_layout_seen_class_methods ()\n+{\n+  tree previous_list = all_class_list;\n+  tree end = NULL_TREE;\n+  tree current;\n+\n+  while (1)\n+    {\n+      for (current = previous_list; \n+\t   current != end; current = TREE_CHAIN (current))\n+\tlayout_class_methods (TREE_TYPE (TREE_VALUE (current)));\n+      \n+      if (previous_list != all_class_list)\n+\t{\n+\t  end = previous_list;\n+\t  previous_list = all_class_list;\n+\t}\n+      else\n+\tbreak;\n+    }\n+}\n+\n /* Layout the methods of all classes loaded in one way on an\n    other. Check methods of source parsed classes. Then reorder the\n    fields and layout the classes or the type of all source parsed\n@@ -8078,7 +8100,7 @@ java_layout_classes ()\n   tree current;\n \n   /* Layout the methods of all classes seen so far */\n-  LAYOUT_SEEN_CLASS_METHODS ();\n+  java_layout_seen_class_methods ();\n   java_parse_abort_on_error ();\n   all_class_list = NULL_TREE;\n \n@@ -8130,7 +8152,7 @@ java_layout_classes ()\n   /* We might have reloaded classes durign the process of laying out\n      classes for code generation. We must layout the methods of those\n      late additions, as constructor checks might use them */\n-  LAYOUT_SEEN_CLASS_METHODS ();\n+  java_layout_seen_class_methods ();\n   java_parse_abort_on_error ();\n }\n \n@@ -13152,7 +13174,9 @@ patch_synchronized_statement (node, wfl_op1)\n   catch_all = build1 (CATCH_EXPR, void_type_node, catch_all);\n \n   /* TRY-CATCH statement */\n-  return build (TRY_EXPR, void_type_node, try_block, catch_all, NULL_TREE);\n+  compound = build (TRY_EXPR, void_type_node, try_block, catch_all, NULL_TREE);\n+  CAN_COMPLETE_NORMALLY (compound) = CAN_COMPLETE_NORMALLY (block);\n+  return compound;\n }\n \n /* 14.16 The throw Statement */"}, {"sha": "79c6c78b7a4051602f449885d2ae8b875dc37af6", "filename": "gcc/java/parse.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=1886c9d8361f7ba8931501dd8658026f5b3afcdd", "patch": "@@ -444,6 +444,12 @@ static jdeplist *reverse_jdep_list ();\n \t  }\t\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n   }\n+/* Promote a type if it won't be registered as a patch */\n+#define PROMOTE_RECORD_IF_COMPLETE(TYPE, IS_INCOMPLETE)\t\t\\\n+  {\t\t\t\t\t\t\t\t\\\n+    if (!(IS_INCOMPLETE) && TREE_CODE (TYPE) == RECORD_TYPE)\t\\\n+      (TYPE) = promote_type (TYPE);\t\t\t\t\\\n+  }\n \n /* Insert a DECL in the current block */\n #define BLOCK_CHAIN_DECL(NODE)\t\t\t\t\t\t    \\"}, {"sha": "a9789f0a77230ce3d7d764591cc7965dff5081f0", "filename": "gcc/java/parse.y", "status": "modified", "additions": 55, "deletions": 33, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1886c9d8361f7ba8931501dd8658026f5b3afcdd/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=1886c9d8361f7ba8931501dd8658026f5b3afcdd", "patch": "@@ -838,8 +838,12 @@ method_declarator:\n \t\t{ $$ = method_declarator ($1, $3); }\n |\tmethod_declarator OSB_TK CSB_TK\n \t\t{\n-\t\t  /* Issue a warning here: obsolete declaration. FIXME */\n-\t\t  $$ = NULL;\t/* FIXME */\n+\t\t  EXPR_WFL_LINECOL (wfl_operator) = $2.location;\n+\t\t  TREE_PURPOSE ($1) = \n+\t\t    build_unresolved_array_type (TREE_PURPOSE ($1));\n+\t\t  parse_warning_context \n+\t\t    (wfl_operator, \n+\t\t     \"Discouraged form of returned type specification\");\n \t\t}\n |\tidentifier OP_TK error\n \t\t{yyerror (\"')' expected\"); DRECOVER(method_declarator);}\n@@ -2408,7 +2412,7 @@ issue_warning_error_from_context (cl, msg, ap)\n      char *msg;\n      va_list ap;\n {\n-  char *saved;\n+  char *saved, *saved_input_filename;\n   char buffer [4096];\n   vsprintf (buffer, msg, ap);\n   force_error = 1;\n@@ -2421,9 +2425,12 @@ issue_warning_error_from_context (cl, msg, ap)\n   saved = ctxp->filename;\n   if (TREE_CODE (cl) == EXPR_WITH_FILE_LOCATION && EXPR_WFL_FILENAME_NODE (cl))\n     ctxp->filename = EXPR_WFL_FILENAME (cl);\n+  saved_input_filename = input_filename;\n+  input_filename = ctxp->filename;\n   java_error (NULL);\n   java_error (buffer);\n   ctxp->filename = saved;\n+  input_filename = saved_input_filename;\n   force_error = 0;\n }\n \n@@ -2672,7 +2679,7 @@ build_unresolved_array_type (type_or_wfl)\n {\n   char *ptr;\n \n-  /* TYPE_OR_WFL might be an array on a primitive type. In this case,\n+  /* TYPE_OR_WFL might be an array on a resolved type. In this case,\n      just create a array type */\n   if (TREE_CODE (type_or_wfl) == RECORD_TYPE)\n     {\n@@ -3061,8 +3068,7 @@ register_fields (flags, type, variable_list)\n   SET_TYPE_FOR_RESOLUTION (type, wfl, must_chain);\n \n   /* If TYPE is fully resolved and we don't have a reference, make one */\n-  if (!must_chain && TREE_CODE (type) == RECORD_TYPE)\n-    type = promote_type (type);\n+  PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n \n   for (current = variable_list, saved_type = type; current; \n        current = TREE_CHAIN (current), type = saved_type)\n@@ -3082,8 +3088,7 @@ register_fields (flags, type, variable_list)\n \t change the name if we have an init. */\n       if (type != saved_type)\n \t{\n-\t  if (!must_chain && (TREE_CODE (type) == RECORD_TYPE))\n-\t    type = promote_type (type);\n+\t  PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n \t  if (init)\n \t    EXPR_WFL_NODE (TREE_OPERAND (init, 0)) = current_name;\n \t}\n@@ -3232,9 +3237,10 @@ method_header (flags, type, mdecl, throws)\n   tree meth = TREE_VALUE (mdecl);\n   tree id = TREE_PURPOSE (mdecl);\n   tree this_class = TREE_TYPE (ctxp->current_parsed_class);\n-  tree meth_name, returned_type, current, orig_arg;\n+  tree type_wfl = NULL_TREE;\n+  tree meth_name, current, orig_arg, saved_type;\n   int saved_lineno;\n-  int constructor_ok = 0;\n+  int constructor_ok = 0, must_chain;\n   \n   check_modifiers_consistency (flags);\n   \n@@ -3311,24 +3317,22 @@ method_header (flags, type, mdecl, throws)\n   else\n     meth_name = EXPR_WFL_NODE (id);\n \n-  if (unresolved_type_p (type, &returned_type))\n+  /* Do the returned type resolution and registration if necessary */\n+  SET_TYPE_FOR_RESOLUTION (type, type_wfl, must_chain);\n+\n+  saved_type = type;\n+  type = build_array_from_name (type, type_wfl, meth_name, &meth_name);\n+  EXPR_WFL_NODE (id) = meth_name;\n+  PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n+\n+  if (must_chain)\n     {\n-      if (returned_type)\n-\tTREE_TYPE (meth) = returned_type;\n-      else \n-\t{\n-\t  tree itype;\n-\t  patch_stage = JDEP_METHOD_RETURN;\n-\t  itype = register_incomplete_type (patch_stage, type, id, NULL_TREE);\n-\t  TREE_TYPE (meth) = GET_REAL_TYPE (itype);\n-\t}\n+      patch_stage = JDEP_METHOD_RETURN;\n+      register_incomplete_type (patch_stage, type_wfl, id, type);\n+      TREE_TYPE (meth) = GET_REAL_TYPE (type);\n     }\n   else\n-    {\n-      if (TREE_CODE (type) == RECORD_TYPE)\n-\ttype = promote_type (type);\n-      TREE_TYPE (meth) = type;\n-    }\n+    TREE_TYPE (meth) = type;\n \n   saved_lineno = lineno;\n   /* When defining an abstract or interface method, the curly\n@@ -4375,7 +4379,6 @@ check_method_redefinition (class, method)\n     return 0;\n \n   name = DECL_NAME (method);\n-  \n   for (redef = TYPE_METHODS (class); redef; redef = TREE_CHAIN (redef))\n     {\n       if (redef == method)\n@@ -5193,8 +5196,7 @@ declare_local_variables (modifier, type, vlist)\n   SET_TYPE_FOR_RESOLUTION (type, type_wfl, must_chain);\n \n   /* If TYPE is fully resolved and we don't have a reference, make one */\n-  if (!must_chain && TREE_CODE (type) == RECORD_TYPE)\n-    type = promote_type (type);\n+  PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n \n   /* Go through all the declared variables */\n   for (current = vlist, saved_type = type; current;\n@@ -5219,9 +5221,7 @@ declare_local_variables (modifier, type, vlist)\n       /* Type adjustment. We may have just readjusted TYPE because\n \t the variable specified more dimensions. Make sure we have\n \t a reference if we can and don't have one already. */\n-      if (type != saved_type && !must_chain \n-\t  && (TREE_CODE (type) == RECORD_TYPE))\n-\ttype = promote_type (type);\n+      PROMOTE_RECORD_IF_COMPLETE (type, must_chain);\n \n       real_type = GET_REAL_TYPE (type);\n       /* Never layout this decl. This will be done when its scope\n@@ -5462,6 +5462,28 @@ add_stmt_to_compound (existing, type, stmt)\n /* Hold THIS for the scope of the current public method decl.  */\n static tree current_this;\n \n+void java_layout_seen_class_methods ()\n+{\n+  tree previous_list = all_class_list;\n+  tree end = NULL_TREE;\n+  tree current;\n+\n+  while (1)\n+    {\n+      for (current = previous_list; \n+\t   current != end; current = TREE_CHAIN (current))\n+\tlayout_class_methods (TREE_TYPE (TREE_VALUE (current)));\n+      \n+      if (previous_list != all_class_list)\n+\t{\n+\t  end = previous_list;\n+\t  previous_list = all_class_list;\n+\t}\n+      else\n+\tbreak;\n+    }\n+}\n+\n /* Layout the methods of all classes loaded in one way on an\n    other. Check methods of source parsed classes. Then reorder the\n    fields and layout the classes or the type of all source parsed\n@@ -5473,7 +5495,7 @@ java_layout_classes ()\n   tree current;\n \n   /* Layout the methods of all classes seen so far */\n-  LAYOUT_SEEN_CLASS_METHODS ();\n+  java_layout_seen_class_methods ();\n   java_parse_abort_on_error ();\n   all_class_list = NULL_TREE;\n \n@@ -5525,7 +5547,7 @@ java_layout_classes ()\n   /* We might have reloaded classes durign the process of laying out\n      classes for code generation. We must layout the methods of those\n      late additions, as constructor checks might use them */\n-  LAYOUT_SEEN_CLASS_METHODS ();\n+  java_layout_seen_class_methods ();\n   java_parse_abort_on_error ();\n }\n "}]}