{"sha": "20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBiNWYwYjNlNmNmZGFhY2FjYjAwNTliYjQzYjkzY2I3NWRlMDYzNw==", "commit": {"author": {"name": "Edward Smith-Rowland", "email": "3dw4rd@verizon.net", "date": "2015-09-04T11:13:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-09-04T11:13:34Z"}, "message": "Add C++11 header <cuchar>.\n\n2015-09-04  Edward Smith-Rowland  <3dw4rd@verizon.net>\n\t    Jonathan Wakely  <jwakely@redhat.com>\n\n\t* acinclude.m4 (GLIBCXX_CHECK_UCHAR_H): Define.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Check for <uchar.h>.\n\t* include/Makefile.am: Add new headers.\n\t* include/Makefile.in: Regenerate.\n\t* include/c/cuchar: New.\n\t* include/c_compatibility/uchar.h: New.\n\t* include/c_global/cuchar: New.\n\t* include/c_std/cuchar: New.\n\t* include/precompiled/stdc++.h: Include <cuchar>.\n\t* testsuite/17_intro/headers/c++200x/stdc++.cc: Include <uchar.h>.\n\t* testsuite/17_intro/headers/c++200x/stdc++_multiple_inclusion.cc:\n\tInclude <uchar.h>.\n\nCo-Authored-By: Jonathan Wakely <jwakely@redhat.com>\n\nFrom-SVN: r227488", "tree": {"sha": "543c967eadc67a81024d62c14fb129147c039cb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/543c967eadc67a81024d62c14fb129147c039cb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/comments", "author": {"login": "emsr", "id": 1936479, "node_id": "MDQ6VXNlcjE5MzY0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1936479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emsr", "html_url": "https://github.com/emsr", "followers_url": "https://api.github.com/users/emsr/followers", "following_url": "https://api.github.com/users/emsr/following{/other_user}", "gists_url": "https://api.github.com/users/emsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/emsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emsr/subscriptions", "organizations_url": "https://api.github.com/users/emsr/orgs", "repos_url": "https://api.github.com/users/emsr/repos", "events_url": "https://api.github.com/users/emsr/events{/privacy}", "received_events_url": "https://api.github.com/users/emsr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57003677cf4f7422afdbd2845f15a71303e414e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57003677cf4f7422afdbd2845f15a71303e414e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57003677cf4f7422afdbd2845f15a71303e414e1"}], "stats": {"total": 414, "additions": 414, "deletions": 0}, "files": [{"sha": "03fd3be590de0142f66a8eb859d7b560456ce698", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -1,3 +1,22 @@\n+2015-09-04  Edward Smith-Rowland  <3dw4rd@verizon.net>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tAdd C++11 header <cuchar>.\n+\t* acinclude.m4 (GLIBCXX_CHECK_UCHAR_H): Define.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Check for <uchar.h>.\n+\t* include/Makefile.am: Add new headers.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/c/cuchar: New.\n+\t* include/c_compatibility/uchar.h: New.\n+\t* include/c_global/cuchar: New.\n+\t* include/c_std/cuchar: New.\n+\t* include/precompiled/stdc++.h: Include <cuchar>.\n+\t* testsuite/17_intro/headers/c++200x/stdc++.cc: Include <uchar.h>.\n+\t* testsuite/17_intro/headers/c++200x/stdc++_multiple_inclusion.cc:\n+\tInclude <uchar.h>.\n+\n 2015-09-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/65473"}, {"sha": "64c9b7e32cf9901d4f61e72a09cc29bd43db31e7", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -1808,6 +1808,52 @@ AC_DEFUN([GLIBCXX_CHECK_C99_TR1], [\n   AC_LANG_RESTORE\n ])\n \n+dnl\n+dnl Check for uchar.h and usability.\n+dnl\n+AC_DEFUN([GLIBCXX_CHECK_UCHAR_H], [\n+\n+  # Test uchar.h.\n+  AC_CHECK_HEADERS(uchar.h, ac_has_uchar_h=yes, ac_has_uchar_h=no)\n+\n+  AC_LANG_SAVE\n+  AC_LANG_CPLUSPLUS\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$CXXFLAGS -std=c++11\"\n+\n+  if test x\"$ac_has_uchar_h\" = x\"yes\"; then\n+    AC_MSG_CHECKING([for ISO C11 support for <uchar.h>])\n+    AC_TRY_COMPILE([#include <uchar.h>\n+\t\t    #ifdef __STDC_UTF_16__\n+\t\t    long i = __STDC_UTF_16__;\n+\t\t    #endif\n+\t\t    #ifdef __STDC_UTF_32__\n+\t\t    long j = __STDC_UTF_32__;\n+\t\t    #endif\n+\t\t    namespace test\n+\t\t    {\n+\t\t      using ::c16rtomb;\n+\t\t      using ::c32rtomb;\n+\t\t      using ::mbrtoc16;\n+\t\t      using ::mbrtoc32;\n+\t\t    }\n+\t\t   ],\n+\t\t   [], [ac_c11_uchar_cxx11=yes], [ac_c11_uchar_cxx11=no])\n+  else\n+    ac_c11_uchar_cxx11=no\n+  fi\n+  AC_MSG_RESULT($ac_c11_uchar_cxx11)\n+  if test x\"$ac_c11_uchar_cxx11\" = x\"yes\"; then\n+    AC_DEFINE(_GLIBCXX_USE_C11_UCHAR_CXX11, 1,\n+\t      [Define if C11 functions in <uchar.h> should be imported into\n+\t      namespace std in <cuchar>.])\n+  fi\n+\n+  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+  AC_LANG_RESTORE\n+])\n+\n+\n dnl\n dnl Check whether \"/dev/random\" and \"/dev/urandom\" are available for the\n dnl random_device of \"TR1\" (Chapter 5.1, \"Random number generation\")."}, {"sha": "cc7a21e820c7cc6c7f1e3a03f6517427122ccd65", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -454,6 +454,9 @@\n /* Define to 1 if the target supports thread-local storage. */\n #undef HAVE_TLS\n \n+/* Define to 1 if you have the <uchar.h> header file. */\n+#undef HAVE_UCHAR_H\n+\n /* Define to 1 if you have the <unistd.h> header file. */\n #undef HAVE_UNISTD_H\n \n@@ -780,6 +783,10 @@\n /* Define to use Sun versioning in the shared library. */\n #undef _GLIBCXX_SYMVER_SUN\n \n+/* Define if C11 functions in <uchar.h> should be imported into namespace std\n+   in <cuchar>. */\n+#undef _GLIBCXX_USE_C11_UCHAR_CXX11\n+\n /* Define if C99 functions or macros from <wchar.h>, <math.h>, <complex.h>,\n    <stdio.h>, and <stdlib.h> can be used or exposed. */\n #undef _GLIBCXX_USE_C99"}, {"sha": "6d35f30a18ad2bbbc770dc63b1fb726667769954", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -18149,6 +18149,87 @@ fi\n \n \n \n+\n+  # Test uchar.h.\n+  for ac_header in uchar.h\n+do :\n+  ac_fn_c_check_header_mongrel \"$LINENO\" \"uchar.h\" \"ac_cv_header_uchar_h\" \"$ac_includes_default\"\n+if test \"x$ac_cv_header_uchar_h\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_UCHAR_H 1\n+_ACEOF\n+ ac_has_uchar_h=yes\n+else\n+  ac_has_uchar_h=no\n+fi\n+\n+done\n+\n+\n+\n+  ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$CXXFLAGS -std=c++11\"\n+\n+  if test x\"$ac_has_uchar_h\" = x\"yes\"; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ISO C11 support for <uchar.h>\" >&5\n+$as_echo_n \"checking for ISO C11 support for <uchar.h>... \" >&6; }\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <uchar.h>\n+\t\t    #ifdef __STDC_UTF_16__\n+\t\t    long i = __STDC_UTF_16__;\n+\t\t    #endif\n+\t\t    #ifdef __STDC_UTF_32__\n+\t\t    long j = __STDC_UTF_32__;\n+\t\t    #endif\n+\t\t    namespace test\n+\t\t    {\n+\t\t      using ::c16rtomb;\n+\t\t      using ::c32rtomb;\n+\t\t      using ::mbrtoc16;\n+\t\t      using ::mbrtoc32;\n+\t\t    }\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  ac_c11_uchar_cxx11=yes\n+else\n+  ac_c11_uchar_cxx11=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  else\n+    ac_c11_uchar_cxx11=no\n+  fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_c11_uchar_cxx11\" >&5\n+$as_echo \"$ac_c11_uchar_cxx11\" >&6; }\n+  if test x\"$ac_c11_uchar_cxx11\" = x\"yes\"; then\n+\n+$as_echo \"#define _GLIBCXX_USE_C11_UCHAR_CXX11 1\" >>confdefs.h\n+\n+  fi\n+\n+  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+  ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+\n # For the streamoff typedef.\n \n "}, {"sha": "34563480634a37b97716c55d37d2ea43738f2b13", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -181,6 +181,7 @@ GLIBCXX_ENABLE_VTABLE_VERIFY([no])\n # Checks for operating systems support that doesn't require linking.\n GLIBCXX_CHECK_STDIO_PROTO\n GLIBCXX_CHECK_SYSTEM_ERROR\n+GLIBCXX_CHECK_UCHAR_H\n \n # For the streamoff typedef.\n GLIBCXX_CHECK_INT64_T"}, {"sha": "e579b22f1b1a1c4153a5c7a131d6fdecd5a49693", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -710,6 +710,7 @@ c_base_headers = \\\n \t${c_base_srcdir}/cstring \\\n \t${c_base_srcdir}/ctgmath \\\n \t${c_base_srcdir}/ctime \\\n+\t${c_base_srcdir}/cuchar \\\n \t${c_base_srcdir}/cwchar \\\n \t${c_base_srcdir}/cwctype\n \n@@ -752,6 +753,7 @@ c_compatibility_headers = \\\n \t${c_compatibility_srcdir}/string.h \\\n \t${c_compatibility_srcdir}/tgmath.h \\\n \t${c_compatibility_srcdir}/time.h \\\n+\t${c_compatibility_srcdir}/uchar.h \\\n \t${c_compatibility_srcdir}/wchar.h \\\n \t${c_compatibility_srcdir}/wctype.h\n endif"}, {"sha": "47066705d23c17eca9b4c074f8831ac48ffb4bc8", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -997,6 +997,7 @@ c_base_headers = \\\n \t${c_base_srcdir}/cstring \\\n \t${c_base_srcdir}/ctgmath \\\n \t${c_base_srcdir}/ctime \\\n+\t${c_base_srcdir}/cuchar \\\n \t${c_base_srcdir}/cwchar \\\n \t${c_base_srcdir}/cwctype\n \n@@ -1033,6 +1034,7 @@ c_compatibility_builddir = .\n @GLIBCXX_C_HEADERS_C_TRUE@\t${c_compatibility_srcdir}/string.h \\\n @GLIBCXX_C_HEADERS_C_TRUE@\t${c_compatibility_srcdir}/tgmath.h \\\n @GLIBCXX_C_HEADERS_C_TRUE@\t${c_compatibility_srcdir}/time.h \\\n+@GLIBCXX_C_HEADERS_C_TRUE@\t${c_compatibility_srcdir}/uchar.h \\\n @GLIBCXX_C_HEADERS_C_TRUE@\t${c_compatibility_srcdir}/wchar.h \\\n @GLIBCXX_C_HEADERS_C_TRUE@\t${c_compatibility_srcdir}/wctype.h\n "}, {"sha": "dd50c47bbe087e2b7ee3741d82149813a2efdcf6", "filename": "libstdc++-v3/include/c/cuchar", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2Fc%2Fcuchar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2Fc%2Fcuchar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc%2Fcuchar?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -0,0 +1,47 @@\n+// -*- C++ -*- forwarding header.\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+//\n+// ISO C++ 14882:2011 21.8\n+//\n+\n+#ifndef _GLIBCXX_CUCHAR\n+#define _GLIBCXX_CUCHAR 1\n+\n+#pragma GCC system_header\n+\n+#if __cplusplus < 201103L\n+# include <bits/c++0x_warning.h>\n+#else\n+\n+#include <bits/c++config.h>\n+#include <cwchar>\n+\n+#if _GLIBCXX_USE_C11_UCHAR_CXX11\n+# include_next <uchar.h>\n+#endif\n+\n+#endif // C++11\n+\n+#endif // _GLIBCXX_CUCHAR"}, {"sha": "746f4afb33920b1736fcdb3c695669c4a20ce817", "filename": "libstdc++-v3/include/c_compatibility/uchar.h", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fuchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fuchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fuchar.h?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -0,0 +1,45 @@\n+// -*- C++ -*- compatibility header.\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file uchar.h\n+ *  This is a Standard C++ Library header.\n+ */\n+\n+#include <cuchar>\n+\n+#ifndef _GLIBCXX_UCHAR_H\n+#define _GLIBCXX_UCHAR_H 1\n+\n+#ifdef _GLIBCXX_NAMESPACE_C\n+\n+#if _GLIBCXX_USE_C11_UCHAR_CXX11\n+using std::mbrtoc16;\n+using std::c16rtomb;\n+using std::mbrtoc32;\n+using std::c32rtomb;\n+#endif // _GLIBCXX_USE_C11_UCHAR_CXX11\n+\n+#endif // _GLIBCXX_NAMESPACE_C\n+\n+#endif // _GLIBCXX_UCHAR_H"}, {"sha": "3b30c6a9b4b6f4471781ba0c9f9753086c60a4f0", "filename": "libstdc++-v3/include/c_global/cuchar", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcuchar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcuchar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcuchar?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -0,0 +1,77 @@\n+// -*- C++ -*- forwarding header.\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file include/cuchar\n+ *  This is a Standard C++ Library file.  You should @c \\#include this file\n+ *  in your programs, rather than any of the @a *.h implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c uchar.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std (except for names which are defined\n+ *  as macros in C).\n+ */\n+\n+//\n+// ISO C++ 14882:2011 21.8\n+//\n+\n+#ifndef _GLIBCXX_CUCHAR\n+#define _GLIBCXX_CUCHAR 1\n+\n+#pragma GCC system_header\n+\n+#if __cplusplus < 201103L\n+# include <bits/c++0x_warning.h>\n+#else\n+\n+#include <bits/c++config.h>\n+#include <cwchar>\n+\n+#if _GLIBCXX_USE_C11_UCHAR_CXX11\n+\n+#include <uchar.h>\n+\n+// Get rid of those macros defined in <uchar.h> in lieu of real functions.\n+#undef mbrtoc16\n+#undef c16rtomb\n+#undef mbrtoc32\n+#undef c32rtomb\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  using ::mbrtoc16;\n+  using ::c16rtomb;\n+  using ::mbrtoc32;\n+  using ::c32rtomb;\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace std\n+\n+#endif // _GLIBCXX_USE_C11_UCHAR_CXX11\n+\n+#endif // C++11\n+\n+#endif // _GLIBCXX_CUCHAR"}, {"sha": "7d5eedbc63b50b958efd2960f0cf8cd5f0d6e3fe", "filename": "libstdc++-v3/include/c_std/cuchar", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcuchar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcuchar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcuchar?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -0,0 +1,77 @@\n+// -*- C++ -*- forwarding header.\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file include/cuchar\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the @a *.h implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c uchar.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std (except for names which are defined\n+ *  as macros in C).\n+ */\n+\n+//\n+// ISO C++ 14882:2011 21.8\n+//\n+\n+#ifndef _GLIBCXX_CUCHAR\n+#define _GLIBCXX_CUCHAR 1\n+\n+#pragma GCC system_header\n+\n+#if __cplusplus < 201103L\n+# include <bits/c++0x_warning.h>\n+#else\n+\n+#include <bits/c++config.h>\n+#include <cwchar>\n+\n+#if _GLIBCXX_USE_C11_UCHAR_CXX11\n+\n+#include <uchar.h>\n+\n+// Get rid of those macros defined in <uchar.h> in lieu of real functions.\n+#undef mbrtoc16\n+#undef c16rtomb\n+#undef mbrtoc32\n+#undef c32rtomb\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  using ::mbrtoc16;\n+  using ::c16rtomb;\n+  using ::mbrtoc32;\n+  using ::c32rtomb;\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace std\n+\n+#endif // _GLIBCXX_USE_C11_UCHAR_CXX11\n+\n+#endif // C++11\n+\n+#endif // _GLIBCXX_CUCHAR"}, {"sha": "ab119fecd2f46ca282059ebe21023f91fb005c55", "filename": "libstdc++-v3/include/precompiled/stdc++.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdc%2B%2B.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdc%2B%2B.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdc%2B%2B.h?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -56,6 +56,7 @@\n #include <cstdbool>\n #include <cstdint>\n #include <ctgmath>\n+#include <cuchar>\n #include <cwchar>\n #include <cwctype>\n #endif"}, {"sha": "d1c64b190a8a9dc4a6f8c834215dfb937a1cba0e", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/stdc++.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fstdc%2B%2B.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fstdc%2B%2B.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fstdc%2B%2B.cc?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -59,6 +59,9 @@\n #include <tgmath.h>\n #endif\n #include <time.h>\n+#if __has_include(<uchar.h>)\n+#include <uchar.h>\n+#endif\n #ifdef _GLIBCXX_HAVE_WCHAR_H\n #include <wchar.h>\n #endif"}, {"sha": "e51bdee70f6e175ef4930cb219cc542c268cd979", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/stdc++_multiple_inclusion.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fstdc%2B%2B_multiple_inclusion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b5f0b3e6cfdaacacb0059bb43b93cb75de0637/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fstdc%2B%2B_multiple_inclusion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fstdc%2B%2B_multiple_inclusion.cc?ref=20b5f0b3e6cfdaacacb0059bb43b93cb75de0637", "patch": "@@ -59,6 +59,9 @@\n #include <tgmath.h>\n #endif\n #include <time.h>\n+#if __has_include(<uchar.h>)\n+#include <uchar.h>\n+#endif\n #ifdef _GLIBCXX_HAVE_WCHAR_H\n #include <wchar.h>\n #endif\n@@ -103,6 +106,9 @@\n #include <tgmath.h>\n #endif\n #include <time.h>\n+#if __has_include(<uchar.h>)\n+#include <uchar.h>\n+#endif\n #ifdef _GLIBCXX_HAVE_WCHAR_H\n #include <wchar.h>\n #endif"}]}