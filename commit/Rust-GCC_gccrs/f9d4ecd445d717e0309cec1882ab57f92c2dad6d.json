{"sha": "f9d4ecd445d717e0309cec1882ab57f92c2dad6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlkNGVjZDQ0NWQ3MTdlMDMwOWNlYzE4ODJhYjU3ZjkyYzJkYWQ2ZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-10-26T06:41:33Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-10-26T06:41:33Z"}, "message": "lra-constraints.c (process_address): Tighten arguments to base_reg_class.\n\ngcc/\n\t* lra-constraints.c (process_address): Tighten arguments to\n\tbase_reg_class.  Use simplify_gen_binary to generate PLUS rtxes.\n\nFrom-SVN: r192836", "tree": {"sha": "47e64177fb2f355e150767c105759155138ccc21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47e64177fb2f355e150767c105759155138ccc21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9d4ecd445d717e0309cec1882ab57f92c2dad6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9d4ecd445d717e0309cec1882ab57f92c2dad6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9d4ecd445d717e0309cec1882ab57f92c2dad6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9d4ecd445d717e0309cec1882ab57f92c2dad6d/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02ea4bf41e3f4ee1d19f231e1770d7ced2b3f257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ea4bf41e3f4ee1d19f231e1770d7ced2b3f257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ea4bf41e3f4ee1d19f231e1770d7ced2b3f257"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "be75b81aab5ef5d172fad69eecb412be11572b52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9d4ecd445d717e0309cec1882ab57f92c2dad6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9d4ecd445d717e0309cec1882ab57f92c2dad6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9d4ecd445d717e0309cec1882ab57f92c2dad6d", "patch": "@@ -1,3 +1,8 @@\n+2012-10-26  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* lra-constraints.c (process_address): Tighten arguments to\n+\tbase_reg_class.  Use simplify_gen_binary to generate PLUS rtxes.\n+\n 2012-10-26  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* lra-constraints.c (get_index_scale, can_add_disp_p): New functions."}, {"sha": "ffc067b36346466e7a13d01ea7299662eddf4d60", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9d4ecd445d717e0309cec1882ab57f92c2dad6d/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9d4ecd445d717e0309cec1882ab57f92c2dad6d/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=f9d4ecd445d717e0309cec1882ab57f92c2dad6d", "patch": "@@ -2722,15 +2722,14 @@ process_address (int nop, rtx *before, rtx *after)\n \t{\n \t  /* index * scale + disp => new base + index * scale,\n \t     case (1) above.  */\n-\t  enum reg_class cl = base_reg_class (mode, as, SCRATCH, SCRATCH);\n+\t  enum reg_class cl = base_reg_class (mode, as, PLUS,\n+\t\t\t\t\t      GET_CODE (*ad.index_loc));\n \n \t  lra_assert (INDEX_REG_CLASS != NO_REGS);\n \t  new_reg = lra_create_new_reg (Pmode, NULL_RTX, cl, \"disp\");\n-\t  lra_assert (GET_CODE (*addr_loc) == PLUS);\n \t  lra_emit_move (new_reg, *ad.disp_loc);\n-\t  if (CONSTANT_P (XEXP (*addr_loc, 1)))\n-\t    XEXP (*addr_loc, 1) = XEXP (*addr_loc, 0);\n-\t  XEXP (*addr_loc, 0) = new_reg;\n+\t  *addr_loc = simplify_gen_binary (PLUS, GET_MODE (new_reg),\n+\t\t\t\t\t   new_reg, *ad.index_loc);\n \t}\n     }\n   else if (ad.index_reg_loc == NULL)\n@@ -2749,7 +2748,8 @@ process_address (int nop, rtx *before, rtx *after)\n       /* base + scale * index + disp => new base + scale * index,\n \t case (1) above.  */\n       new_reg = base_plus_disp_to_reg (mode, as, &ad);\n-      *addr_loc = gen_rtx_PLUS (Pmode, new_reg, *ad.index_loc);\n+      *addr_loc = simplify_gen_binary (PLUS, GET_MODE (new_reg),\n+\t\t\t\t       new_reg, *ad.index_loc);\n     }\n   *before = get_insns ();\n   end_sequence ();"}]}