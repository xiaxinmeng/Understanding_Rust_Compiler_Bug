{"sha": "fa967f341ce38053b0baf106454139e29786d061", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5NjdmMzQxY2UzODA1M2IwYmFmMTA2NDU0MTM5ZTI5Nzg2ZDA2MQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-12-02T15:43:16Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-12-02T15:43:16Z"}, "message": "function.h (struct rtl_data): Remove epilogue_delay_list.\n\n\t* function.h (struct rtl_data): Remove epilogue_delay_list.\n\t* reorg.c (find_end_label): Simplify always-true test.\n\t(optimize_skip): Likewise.\n\t* final.c (leaf_function_p): Don't loop over epilogue_delay_list.\n\t(leaf_renumber_regs): Likewise.\n\t* varasm.c (mark_constant_pool): Likewise.\n\t* except.c (set_nothrow_function_flags): Likewise.\n\t* cfgrtl.c (print_rtl_with_bb): Likewise.\n\nFrom-SVN: r194053", "tree": {"sha": "40704ce2247e1f60996a197b9440d8b19311886f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40704ce2247e1f60996a197b9440d8b19311886f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa967f341ce38053b0baf106454139e29786d061", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa967f341ce38053b0baf106454139e29786d061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa967f341ce38053b0baf106454139e29786d061", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa967f341ce38053b0baf106454139e29786d061/comments", "author": null, "committer": null, "parents": [{"sha": "474d486a73cc9fb511c489e902b5cea51f1ae640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474d486a73cc9fb511c489e902b5cea51f1ae640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/474d486a73cc9fb511c489e902b5cea51f1ae640"}], "stats": {"total": 73, "additions": 14, "deletions": 59}, "files": [{"sha": "4b6c703b8488cd289db6d2169c57eb6eb8eec6ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa967f341ce38053b0baf106454139e29786d061/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa967f341ce38053b0baf106454139e29786d061/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa967f341ce38053b0baf106454139e29786d061", "patch": "@@ -1,3 +1,14 @@\n+2012-12-02  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* function.h (struct rtl_data): Remove epilogue_delay_list.\n+\t* reorg.c (find_end_label): Simplify always-true test.\n+\t(optimize_skip): Likewise.\n+\t* final.c (leaf_function_p): Don't loop over epilogue_delay_list.\n+\t(leaf_renumber_regs): Likewise.\n+\t* varasm.c (mark_constant_pool): Likewise.\n+\t* except.c (set_nothrow_function_flags): Likewise.\n+\t* cfgrtl.c (print_rtl_with_bb): Likewise.\n+\n 2012-12-02  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/mmix.c (mmix_function_value): Set the mode of the"}, {"sha": "386dedefd4b192f894f69a057a910258c85bf475", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa967f341ce38053b0baf106454139e29786d061/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa967f341ce38053b0baf106454139e29786d061/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=fa967f341ce38053b0baf106454139e29786d061", "patch": "@@ -2015,14 +2015,6 @@ print_rtl_with_bb (FILE *outf, const_rtx rtx_first, int flags)\n       free (end);\n       free (in_bb_p);\n     }\n-\n-  if (crtl->epilogue_delay_list != 0)\n-    {\n-      fprintf (outf, \"\\n;; Insns in epilogue delay list:\\n\\n\");\n-      for (tmp_rtx = crtl->epilogue_delay_list; tmp_rtx != 0;\n-\t   tmp_rtx = XEXP (tmp_rtx, 1))\n-\tprint_rtl_single (outf, XEXP (tmp_rtx, 0));\n-    }\n }\n \f\n /* Update the branch probability of BB if a REG_BR_PROB is present.  */"}, {"sha": "1f7b7f3f7fbb64461c90905aea356e157e27de20", "filename": "gcc/except.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa967f341ce38053b0baf106454139e29786d061/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa967f341ce38053b0baf106454139e29786d061/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=fa967f341ce38053b0baf106454139e29786d061", "patch": "@@ -1884,18 +1884,6 @@ set_nothrow_function_flags (void)\n \t  }\n       }\n \n-  for (insn = crtl->epilogue_delay_list; insn;\n-       insn = XEXP (insn, 1))\n-    if (can_throw_external (insn))\n-      {\n-        crtl->nothrow = 0;\n-\n-\tif (!CALL_P (insn) || !SIBLING_CALL_P (insn))\n-\t  {\n-\t    crtl->all_throwers_are_sibcalls = 0;\n-\t    return 0;\n-\t  }\n-      }\n   if (crtl->nothrow\n       && (cgraph_function_body_availability (cgraph_get_node\n \t\t\t\t\t     (current_function_decl))"}, {"sha": "234376d40f60728bfdf679f49dec9b7edf24065b", "filename": "gcc/final.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa967f341ce38053b0baf106454139e29786d061/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa967f341ce38053b0baf106454139e29786d061/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=fa967f341ce38053b0baf106454139e29786d061", "patch": "@@ -4083,7 +4083,6 @@ int\n leaf_function_p (void)\n {\n   rtx insn;\n-  rtx link;\n \n   if (crtl->profile || profile_arc_flag)\n     return 0;\n@@ -4099,21 +4098,6 @@ leaf_function_p (void)\n \t  && ! SIBLING_CALL_P (XVECEXP (PATTERN (insn), 0, 0)))\n \treturn 0;\n     }\n-  for (link = crtl->epilogue_delay_list;\n-       link;\n-       link = XEXP (link, 1))\n-    {\n-      insn = XEXP (link, 0);\n-\n-      if (CALL_P (insn)\n-\t  && ! SIBLING_CALL_P (insn))\n-\treturn 0;\n-      if (NONJUMP_INSN_P (insn)\n-\t  && GET_CODE (PATTERN (insn)) == SEQUENCE\n-\t  && CALL_P (XVECEXP (PATTERN (insn), 0, 0))\n-\t  && ! SIBLING_CALL_P (XVECEXP (PATTERN (insn), 0, 0)))\n-\treturn 0;\n-    }\n \n   return 1;\n }\n@@ -4183,11 +4167,6 @@ leaf_renumber_regs (rtx first)\n   for (insn = first; insn; insn = NEXT_INSN (insn))\n     if (INSN_P (insn))\n       leaf_renumber_regs_insn (PATTERN (insn));\n-  for (insn = crtl->epilogue_delay_list;\n-       insn;\n-       insn = XEXP (insn, 1))\n-    if (INSN_P (XEXP (insn, 0)))\n-      leaf_renumber_regs_insn (PATTERN (XEXP (insn, 0)));\n }\n \n /* Scan IN_RTX and its subexpressions, and renumber all regs into those"}, {"sha": "dd7f099e8a5e6f6b3aa2a35b3d2e1fdfd71db253", "filename": "gcc/function.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa967f341ce38053b0baf106454139e29786d061/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa967f341ce38053b0baf106454139e29786d061/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=fa967f341ce38053b0baf106454139e29786d061", "patch": "@@ -341,10 +341,6 @@ struct GTY(()) rtl_data {\n \n   /* For reorg.  */\n \n-  /* If some insns can be deferred to the delay slots of the epilogue, the\n-     delay list for them is recorded here.  */\n-  rtx epilogue_delay_list;\n-\n   /* Nonzero if function being compiled called builtin_return_addr or\n      builtin_frame_address with nonzero count.  */\n   bool accesses_prior_frames;"}, {"sha": "f92998ed4a83d8c854f401a8565f872065a48ec5", "filename": "gcc/reorg.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa967f341ce38053b0baf106454139e29786d061/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa967f341ce38053b0baf106454139e29786d061/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=fa967f341ce38053b0baf106454139e29786d061", "patch": "@@ -435,12 +435,7 @@ find_end_label (rtx kind)\n \t     if needed.  */\n \t  emit_label (label);\n #ifdef HAVE_return\n-\t  /* We don't bother trying to create a return insn if the\n-\t     epilogue has filled delay-slots; we would have to try and\n-\t     move the delay-slot fillers to the delay-slots for the new\n-\t     return insn or in front of the new return insn.  */\n-\t  if (crtl->epilogue_delay_list == NULL\n-\t      && HAVE_return)\n+\t  if (HAVE_return)\n \t    {\n \t      /* The return we make may have delay slots too.  */\n \t      rtx insn = gen_return ();\n@@ -804,8 +799,7 @@ optimize_skip (rtx insn)\n      we have one insn followed by a branch to the same label we branch to.\n      In both of these cases, inverting the jump and annulling the delay\n      slot give the same effect in fewer insns.  */\n-  if ((next_trial == next_active_insn (JUMP_LABEL (insn))\n-       && ! (next_trial == 0 && crtl->epilogue_delay_list != 0))\n+  if (next_trial == next_active_insn (JUMP_LABEL (insn))\n       || (next_trial != 0\n \t  && simplejump_or_return_p (next_trial)\n \t  && JUMP_LABEL (insn) == JUMP_LABEL (next_trial)))"}, {"sha": "ee42afc8cbdcec0fd98024408672e8966af2cc57", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa967f341ce38053b0baf106454139e29786d061/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa967f341ce38053b0baf106454139e29786d061/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=fa967f341ce38053b0baf106454139e29786d061", "patch": "@@ -3822,18 +3822,13 @@ mark_constants (rtx insn)\n static void\n mark_constant_pool (void)\n {\n-  rtx insn, link;\n+  rtx insn;\n \n   if (!crtl->uses_const_pool && n_deferred_constants == 0)\n     return;\n \n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n     mark_constants (insn);\n-\n-  for (link = crtl->epilogue_delay_list;\n-       link;\n-       link = XEXP (link, 1))\n-    mark_constants (XEXP (link, 0));\n }\n \n /* Write all the constants in POOL.  */"}]}