{"sha": "83b4db6df5f0717e6537bc6ab63406a2acc340e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNiNGRiNmRmNWYwNzE3ZTY1MzdiYzZhYjYzNDA2YTJhY2MzNDBlMw==", "commit": {"author": {"name": "Andris Pavenis", "email": "andris.pavenis@iki.fi", "date": "2015-11-16T21:13:37Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-11-16T21:13:37Z"}, "message": "lto-streamer-out.c (write_global_references): Adjust integer type.\n\n\t* lto-streamer-out.c (write_global_references): Adjust integer type.\n\t(lto_output_decl_state_refs): Likewise.\n\nFrom-SVN: r230436", "tree": {"sha": "231f7091c40a9ac5aef1eb03c2ea9fc8ef062e04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/231f7091c40a9ac5aef1eb03c2ea9fc8ef062e04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83b4db6df5f0717e6537bc6ab63406a2acc340e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83b4db6df5f0717e6537bc6ab63406a2acc340e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83b4db6df5f0717e6537bc6ab63406a2acc340e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83b4db6df5f0717e6537bc6ab63406a2acc340e3/comments", "author": {"login": "apavenis", "id": 33935463, "node_id": "MDQ6VXNlcjMzOTM1NDYz", "avatar_url": "https://avatars.githubusercontent.com/u/33935463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apavenis", "html_url": "https://github.com/apavenis", "followers_url": "https://api.github.com/users/apavenis/followers", "following_url": "https://api.github.com/users/apavenis/following{/other_user}", "gists_url": "https://api.github.com/users/apavenis/gists{/gist_id}", "starred_url": "https://api.github.com/users/apavenis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apavenis/subscriptions", "organizations_url": "https://api.github.com/users/apavenis/orgs", "repos_url": "https://api.github.com/users/apavenis/repos", "events_url": "https://api.github.com/users/apavenis/events{/privacy}", "received_events_url": "https://api.github.com/users/apavenis/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f62c7a0cc5b2da41f98c338185dbf036ad468ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f62c7a0cc5b2da41f98c338185dbf036ad468ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f62c7a0cc5b2da41f98c338185dbf036ad468ff"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "5d6213f4462442b7ffa10067780edaacc6c87859", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b4db6df5f0717e6537bc6ab63406a2acc340e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b4db6df5f0717e6537bc6ab63406a2acc340e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83b4db6df5f0717e6537bc6ab63406a2acc340e3", "patch": "@@ -1,3 +1,8 @@\n+2015-11-16 Andris Pavenis <andris.pavenis@iki.fi>\n+\n+\t* lto-streamer-out.c (write_global_references): Adjust integer type.\n+\t(lto_output_decl_state_refs): Likewise.\n+\n 2015-11-16  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/arm/arm-cores.def (cortex-a35): New."}, {"sha": "0d610f166bc006134c4788bfa943f6482f189eeb", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b4db6df5f0717e6537bc6ab63406a2acc340e3/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b4db6df5f0717e6537bc6ab63406a2acc340e3/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=83b4db6df5f0717e6537bc6ab63406a2acc340e3", "patch": "@@ -2387,7 +2387,7 @@ write_global_references (struct output_block *ob,\n \n   for (index = 0; index < size; index++)\n     {\n-      uint32_t slot_num;\n+      unsigned slot_num;\n \n       t = lto_tree_ref_encoder_get_tree (encoder, index);\n       streamer_tree_cache_lookup (ob->writer_cache, t, &slot_num);\n@@ -2422,7 +2422,7 @@ lto_output_decl_state_refs (struct output_block *ob,\n \t\t\t    struct lto_out_decl_state *state)\n {\n   unsigned i;\n-  uint32_t ref;\n+  unsigned ref;\n   tree decl;\n \n   /* Write reference to FUNCTION_DECL.  If there is not function,"}]}