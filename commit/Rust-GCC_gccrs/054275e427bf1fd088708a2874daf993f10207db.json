{"sha": "054275e427bf1fd088708a2874daf993f10207db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU0Mjc1ZTQyN2JmMWZkMDg4NzA4YTI4NzRkYWY5OTNmMTAyMDdkYg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2009-04-17T13:40:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T13:40:20Z"}, "message": "sem_ch3.adb (Build_Derived_Enumeration_Type): Diagnose properly illegal constraints on type derived from formal discrete types.\n\n2009-04-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Build_Derived_Enumeration_Type): Diagnose properly\n\tillegal constraints on type derived from formal discrete types.\n\nFrom-SVN: r146268", "tree": {"sha": "42f1c27662323a3881c354473fa61ab1836f4416", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42f1c27662323a3881c354473fa61ab1836f4416"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/054275e427bf1fd088708a2874daf993f10207db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/054275e427bf1fd088708a2874daf993f10207db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/054275e427bf1fd088708a2874daf993f10207db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/054275e427bf1fd088708a2874daf993f10207db/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aed6fda81baff76d645be701b8bff8c458498745", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aed6fda81baff76d645be701b8bff8c458498745", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aed6fda81baff76d645be701b8bff8c458498745"}], "stats": {"total": 55, "additions": 39, "deletions": 16}, "files": [{"sha": "f13a1f07300de4ea958afff1a5e3ec8f2e27d18c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/054275e427bf1fd088708a2874daf993f10207db/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/054275e427bf1fd088708a2874daf993f10207db/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=054275e427bf1fd088708a2874daf993f10207db", "patch": "@@ -1,3 +1,8 @@\n+2009-04-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Enumeration_Type): Diagnose properly\n+\tillegal constraints on type derived from formal discrete types.\n+\n 2009-04-17  Thomas Quinot  <quinot@adacore.com>\n \n \tPR ada/35953"}, {"sha": "7374b9766cccbb0bc19fafb7fcbaacb966f5a0a7", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 34, "deletions": 16, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/054275e427bf1fd088708a2874daf993f10207db/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/054275e427bf1fd088708a2874daf993f10207db/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=054275e427bf1fd088708a2874daf993f10207db", "patch": "@@ -4033,8 +4033,12 @@ package body Sem_Ch3 is\n          --  pre-allocate a freeze node, and set the proper link to the first\n          --  subtype. Freeze_Entity will use this preallocated freeze node when\n          --  it freezes the entity.\n+         --  This does not apply if the base type is a generic type, whose\n+         --  declaration is independent of the current derived definition.\n \n-         if B /= T then\n+         if B /= T\n+           and then not Is_Generic_Type (B)\n+         then\n             Ensure_Freeze_Node (B);\n             Set_First_Subtype_Link (Freeze_Node (B), T);\n          end if;\n@@ -5055,22 +5059,36 @@ package body Sem_Ch3 is\n             Hi : Node_Id;\n \n          begin\n-            Lo :=\n-               Make_Attribute_Reference (Loc,\n-                 Attribute_Name => Name_First,\n-                 Prefix => New_Reference_To (Derived_Type, Loc));\n-            Set_Etype (Lo, Derived_Type);\n+            if Nkind (Indic) /= N_Subtype_Indication then\n+               Lo :=\n+                  Make_Attribute_Reference (Loc,\n+                    Attribute_Name => Name_First,\n+                    Prefix => New_Reference_To (Derived_Type, Loc));\n+               Set_Etype (Lo, Derived_Type);\n+\n+               Hi :=\n+                  Make_Attribute_Reference (Loc,\n+                    Attribute_Name => Name_Last,\n+                    Prefix => New_Reference_To (Derived_Type, Loc));\n+               Set_Etype (Hi, Derived_Type);\n+\n+               Set_Scalar_Range (Derived_Type,\n+                  Make_Range (Loc,\n+                    Low_Bound => Lo,\n+                    High_Bound => Hi));\n+            else\n \n-            Hi :=\n-               Make_Attribute_Reference (Loc,\n-                 Attribute_Name => Name_Last,\n-                 Prefix => New_Reference_To (Derived_Type, Loc));\n-            Set_Etype (Hi, Derived_Type);\n-\n-            Set_Scalar_Range (Derived_Type,\n-               Make_Range (Loc,\n-                 Low_Bound => Lo,\n-                 High_Bound => Hi));\n+               --   Analyze subtype indication and verify compatibility\n+               --   with parent type.\n+\n+               if\n+                  Base_Type\n+                    (Process_Subtype (Indic, N)) /= Base_Type (Parent_Type)\n+               then\n+                  Error_Msg_N\n+                    (\"illegal constraint for formal discrete type\", N);\n+               end if;\n+            end if;\n          end;\n \n       else"}]}