{"sha": "0c169c01dec8c89179f271a478389a18958e2f26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMxNjljMDFkZWM4Yzg5MTc5ZjI3MWE0NzgzODlhMTg5NThlMmYyNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-12-10T21:54:38Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-12-10T21:54:38Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r255533", "tree": {"sha": "31e75d1ffd270631d703fd21b42187478e7b9e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31e75d1ffd270631d703fd21b42187478e7b9e78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c169c01dec8c89179f271a478389a18958e2f26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c169c01dec8c89179f271a478389a18958e2f26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c169c01dec8c89179f271a478389a18958e2f26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c169c01dec8c89179f271a478389a18958e2f26/comments", "author": null, "committer": null, "parents": [{"sha": "9845246060ebc7f29b765d67746e481b90bc1f45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9845246060ebc7f29b765d67746e481b90bc1f45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9845246060ebc7f29b765d67746e481b90bc1f45"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "b7523a1c5033bc0e06fbfa9ba973d17689e382a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c169c01dec8c89179f271a478389a18958e2f26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c169c01dec8c89179f271a478389a18958e2f26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c169c01dec8c89179f271a478389a18958e2f26", "patch": "@@ -5,8 +5,8 @@\n 2017-12-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/83337\n-\t* gimple-loop-interchange.cc (compute_access_stride): Handle bitfield DRs\n-\tproperly.\n+\t* gimple-loop-interchange.cc (compute_access_stride): Handle\n+\tbitfield DRs properly.\n \n 2017-12-09  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -540,9 +540,11 @@\n 2017-12-07  Julia Koval  <julia.koval@intel.com>\n \n \t* config.gcc: Add vaesintrin.h.\n-\t* config/i386/i386-builtin-types.def (V64QI_FTYPE_V64QI_V64QI): New type.\n+\t* config/i386/i386-builtin-types.def (V64QI_FTYPE_V64QI_V64QI):\n+\tNew type.\n \t* config/i386/i386-builtin.def (__builtin_ia32_vaesdec_v16qi,\n-\t__builtin_ia32_vaesdec_v32qi, __builtin_ia32_vaesdec_v64qi): New builtins.\n+\t__builtin_ia32_vaesdec_v32qi, __builtin_ia32_vaesdec_v64qi):\n+\tNew builtins.\n \t* config/i386/i386.c (ix86_expand_args_builtin): Handle new type.\n \t* config/i386/immintrin.h: Include vaesintrin.h.\n \t* config/i386/sse.md (vaesdec_<mode>): New pattern.\n@@ -660,8 +662,7 @@\n \n 2017-12-05  Richard Biener   <rguenther@suse.de>\n \n-\t* timevar.def (TV_TREE_RECIP, TV_TREE_SINCOS, TV_TREE_WIDEN_MUL):\n-\tAdd.\n+\t* timevar.def (TV_TREE_RECIP, TV_TREE_SINCOS, TV_TREE_WIDEN_MUL): Add.\n \t* tree-ssa-math-opts.c (pass_data_cse_reciprocal): Use TV_TREE_RECIP.\n \t(pass_data_cse_sincos): Use TV_TREE_SINCOS.\n \t(pass_data_optimize_widening_mul): Use TV_TREE_WIDEN_MUL.\n@@ -1396,9 +1397,9 @@\n \ttype.\n \n 2017-11-28  Julia Koval  <julia.koval@intel.com>\n-            Sebastian Peryt  <sebastian.peryt@intel.com>\n+\t    Sebastian Peryt  <sebastian.peryt@intel.com>\n \n-\t* Makefile.in (cilkplus.def, cilk-builtins.def, c-family/cilk.o, \n+\t* Makefile.in (cilkplus.def, cilk-builtins.def, c-family/cilk.o,\n \tc-family/c-cilkplus.o, c-family/array-notation-common.o,\n \tcilk-common.o, cilk.h, cilk-common.c): Remove.\n \t* builtin-types.def\n@@ -1479,8 +1480,7 @@\n 2017-11-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/83158\n-\t* tree-vrp.c (intersect_ranges): Prefer ~[0, 0] in a few more\n-\tcases.\n+\t* tree-vrp.c (intersect_ranges): Prefer ~[0, 0] in a few more cases.\n \n 2017-11-28  Segher Boessenkool  <segher@kernel.crashing.org>\n \n@@ -1777,8 +1777,7 @@\n \t(arm_cortex_m7_tune): Likewise.\n \t(arm_v6m_tune): Likewise.\n \t(arm_fa726te_tune): Likewise.\n-\t(arm_mem_costs): Use table lookup to calculate cost of addressing\n-\tmode.\n+\t(arm_mem_costs): Use table lookup to calculate cost of addressing mode.\n \n 2017-11-23  Charles Baylis  <charles.baylis@linaro.org>\n \n@@ -1795,7 +1794,7 @@\n \tand pass generation to output_rnglists.\n \n 2017-11-23  Mike Stump  <mikestump@comcast.net>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/generic.texi (ANNOTATE_EXPR): Document 3rd operand.\n \t* cfgloop.h (struct loop): Add unroll field.\n@@ -1815,7 +1814,7 @@\n \t* lto-streamer-in.c (input_cfg): Read loop->unroll.\n \t* lto-streamer-out.c (output_cfg): Write loop->unroll.\n \t* tree-cfg.c (replace_loop_annotate_in_block) <annot_expr_unroll_kind>:\n-        New case.\n+\tNew case.\n \t(replace_loop_annotate) <annot_expr_unroll_kind>: Likewise.\n \t(print_loop): Print loop->unroll if set.\n \t* tree-core.h (enum annot_expr_kind): Add annot_expr_unroll_kind.\n@@ -2016,11 +2015,11 @@\n \n 2017-11-22  Olivier Hainque  <hainque@adacore.com>\n \n-       * config/vxworks.c (vxworks_override_options): Pick default\n+\t* config/vxworks.c (vxworks_override_options): Pick default\n \tdwarf version from macro value, VXWORKS_DWARF_VERSION_DEFAULT.\n-       * config/vxworks.h: Define VXWORKS_DWARF_VERSION_DEFAULT and\n-       DWARF_GNAT_ENCODINGS_DEFAULT.\n-       * config/vxworksae.h: Likewise.\n+\t* config/vxworks.h: Define VXWORKS_DWARF_VERSION_DEFAULT and\n+\tDWARF_GNAT_ENCODINGS_DEFAULT.\n+\t* config/vxworksae.h: Likewise.\n \n 2017-11-22  Marc Glisse  <marc.glisse@inria.fr>\n \n@@ -2057,7 +2056,8 @@\n \tinstead of int_size_in_bytes.\n \t* expr.c (copy_blkmode_to_reg): Likewise.\n \t* function.c (aggregate_value_p): Return 0 for empty types.\n-\t(assign_parm_find_entry_rtl): Call warn_parameter_passing_abi target hook.\n+\t(assign_parm_find_entry_rtl): Call warn_parameter_passing_abi\n+\ttarget hook.\n \t(locate_and_pad_parm): Call arg size_in_bytes instead\n \tsize_in_bytes.\n \t* lto-streamer-out.c (hash_tree): Hash TYPE_EMPTY_P and DECL_PADDING_P.\n@@ -19982,6 +19982,7 @@\n \taltivec_vmulosw): New patterns.\n \t* config/rs6000/rs6000-builtin.def (VMLEUW, VMULESW, VMULOUW,\n \tVMULOSW): Add definitions.\n+\n 2017-07-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/alpha.c: Include predict.h."}, {"sha": "4795a1d21eb20af0cca8b4984f076a3da3006627", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c169c01dec8c89179f271a478389a18958e2f26/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c169c01dec8c89179f271a478389a18958e2f26/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c169c01dec8c89179f271a478389a18958e2f26", "patch": "@@ -697,7 +697,7 @@\n \tconst from do_test_{u,v}*.\n \n 2017-11-28  Julia Koval  <julia.koval@intel.com>\n-            Sebastian Peryt  <sebastian.peryt@intel.com>\n+\t    Sebastian Peryt  <sebastian.peryt@intel.com>\n \n \t* c-c++-common/attr-simd-3.c: Delete.\n \t* c-c++-common/cilk-plus/AN/an-if.c: Delete.\n@@ -12610,7 +12610,7 @@\n \tPR tree-optimization/77644\n \t* gcc.dg/tree-ssa/pr77644.c: New test-case.\n \n-2017-05-10  Alexandre Oliva <aoliva@redhat.com>\n+2017-05-10  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gcc.dg/guality/inline-params-2.c: New.\n \n@@ -17317,7 +17317,7 @@\n \tPR tree-optimization/79267\n \t* g++.dg/opt/pr79267.C: New test.\n \n-2017-01-30  Alexandre Oliva <aoliva@redhat.com>\n+2017-01-30  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/63238\n \t* gcc.dg/debug/dwarf2/align-1.c: New."}]}