{"sha": "868f97d5fa2ed609a9b76cda188e5f7c10c1e10f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY4Zjk3ZDVmYTJlZDYwOWE5Yjc2Y2RhMTg4ZTVmN2MxMGMxZTEwZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-01-02T20:14:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-02T20:14:53Z"}, "message": "c-compat.exp (compat-use-alt-compiler): Remove -fno-diagnostics-show-caret from TEST_ALWAYS_FLAGS if needed.\n\n\t* lib/c-compat.exp (compat-use-alt-compiler): Remove\n\t-fno-diagnostics-show-caret from TEST_ALWAYS_FLAGS if needed.\n\t(compat-use-tst-compiler): Restore TEST_ALWAYS_FLAGS.\n\t(compat_setup_dfp): Initialize compat_alt_caret and\n\tcompat_save_TEST_ALWAYS_FLAGS.\n\nFrom-SVN: r194817", "tree": {"sha": "bc72ccd47d4cfe2bad6dbef53ca773de36563117", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc72ccd47d4cfe2bad6dbef53ca773de36563117"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/868f97d5fa2ed609a9b76cda188e5f7c10c1e10f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868f97d5fa2ed609a9b76cda188e5f7c10c1e10f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/868f97d5fa2ed609a9b76cda188e5f7c10c1e10f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868f97d5fa2ed609a9b76cda188e5f7c10c1e10f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f94242299859d125a38a89fa4291efe18b9180e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f94242299859d125a38a89fa4291efe18b9180e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f94242299859d125a38a89fa4291efe18b9180e"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "cbfe10f7ec3187fe67f507b2ca47dfada1cf36e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/868f97d5fa2ed609a9b76cda188e5f7c10c1e10f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/868f97d5fa2ed609a9b76cda188e5f7c10c1e10f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=868f97d5fa2ed609a9b76cda188e5f7c10c1e10f", "patch": "@@ -1,3 +1,11 @@\n+2013-01-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lib/c-compat.exp (compat-use-alt-compiler): Remove\n+\t-fno-diagnostics-show-caret from TEST_ALWAYS_FLAGS if needed.\n+\t(compat-use-tst-compiler): Restore TEST_ALWAYS_FLAGS.\n+\t(compat_setup_dfp): Initialize compat_alt_caret and\n+\tcompat_save_TEST_ALWAYS_FLAGS.\n+\n 2013-01-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.dg/torture/tls/tls-reload-1.c: New test."}, {"sha": "bb928c2969dd2f06e86ab01010a858c82bc8becd", "filename": "gcc/testsuite/lib/c-compat.exp", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/868f97d5fa2ed609a9b76cda188e5f7c10c1e10f/gcc%2Ftestsuite%2Flib%2Fc-compat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/868f97d5fa2ed609a9b76cda188e5f7c10c1e10f/gcc%2Ftestsuite%2Flib%2Fc-compat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fc-compat.exp?ref=868f97d5fa2ed609a9b76cda188e5f7c10c1e10f", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2002, 2003, 2005, 2006, 2007, 2008\n+# Copyright (C) 2002, 2003, 2005, 2006, 2007, 2008, 2013\n # Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -35,12 +35,16 @@ load_lib target-supports.exp\n # \n proc compat-use-alt-compiler { } {\n     global GCC_UNDER_TEST ALT_CC_UNDER_TEST\n-    global compat_same_alt\n+    global compat_same_alt compat_alt_caret\n+    global TEST_ALWAYS_FLAGS\n \n     # We don't need to do this if the alternate compiler is actually\n     # the same as the compiler under test.\n     if { $compat_same_alt == 0 } then {\n \tset GCC_UNDER_TEST $ALT_CC_UNDER_TEST\n+\tif { $compat_alt_caret == 0 } then {\n+\t    regsub -- \"-fno-diagnostics-show-caret\" $TEST_ALWAYS_FLAGS \"\" TEST_ALWAYS_FLAGS\n+\t}\n     }\n }\n \n@@ -50,12 +54,14 @@ proc compat-use-alt-compiler { } {\n proc compat-use-tst-compiler { } {\n     global GCC_UNDER_TEST compat_save_gcc_under_test\n     global compat_same_alt\n+    global TEST_ALWAYS_FLAGS compat_save_TEST_ALWAYS_FLAGS\n \n     # We don't need to do this if the alternate compiler is actually\n     # the same as the compiler under test.\n \n     if { $compat_same_alt == 0 } then {\n \tset GCC_UNDER_TEST $compat_save_gcc_under_test\n+\tset TEST_ALWAYS_FLAGS $compat_save_TEST_ALWAYS_FLAGS\n     }\n }\n \n@@ -64,6 +70,11 @@ proc compat_setup_dfp { } {\n     global compat_use_alt\n     global compat_same_alt\n     global compat_have_dfp\n+    global compat_alt_caret\n+    global TEST_ALWAYS_FLAGS compat_save_TEST_ALWAYS_FLAGS\n+\n+    set compat_alt_caret 0\n+    set compat_save_TEST_ALWAYS_FLAGS $TEST_ALWAYS_FLAGS\n \n     verbose \"compat_setup_dfp: $compat_use_alt $compat_same_alt\" 2\n \n@@ -72,6 +83,15 @@ proc compat_setup_dfp { } {\n     set compat_have_dfp [check_effective_target_dfprt_nocache]\n     verbose \"compat_have_dfp for tst compiler: $compat_have_dfp\" 2\n \n+    if { $compat_use_alt == 1 && $compat_same_alt == 0 } {\n+\tcompat-use-alt-compiler\n+\tif { [check_no_compiler_messages_nocache compat_alt_has_caret object {\n+\t\tint dummy; } \"-fno-diagnostics-show-caret\"] != 0 } {\n+\t    set compat_alt_caret 1\n+\t}\n+\tcompat-use-tst-compiler\n+    }\n+\n     # If there is an alternate compiler, does it support decimal float types?\n     if { $compat_have_dfp == 1 && $compat_use_alt == 1 && $compat_same_alt == 0 } {\n \tcompat-use-alt-compiler"}]}