{"sha": "54e22276286b0e646f91fc52920332a56219b6be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRlMjIyNzYyODZiMGU2NDZmOTFmYzUyOTIwMzMyYTU2MjE5YjZiZQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2008-08-26T21:39:49Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2008-08-26T21:39:49Z"}, "message": "altivec-macros.c: Fix dg-message directives.\n\n\t* gcc.target/powerpc/altivec-macros.c: Fix dg-message directives.\n\t* gcc.target/powerpc/ppu-intrinsics.c: Ignore some warnings.\n\t* gcc.target/powerpc/darwin-save-world-1.c: Require AltiVec hardware.\n\t* gcc.target/powerpc/altivec-types-1.c: Expect some notes.\n\t* gcc.dg/Wstrict-aliasing-bogus-ref-all-2.c: Ignore a warning.\n\t* g++.dg/ext/altivec-2.C: Initialize a local variable.\n\t* g++.dg/ext/altivec-3.C: Move AltiVec code out of main.\n\nFrom-SVN: r139610", "tree": {"sha": "183f2fb3a19d6187d14c3f7b1756587ece9d768d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/183f2fb3a19d6187d14c3f7b1756587ece9d768d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54e22276286b0e646f91fc52920332a56219b6be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e22276286b0e646f91fc52920332a56219b6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e22276286b0e646f91fc52920332a56219b6be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e22276286b0e646f91fc52920332a56219b6be/comments", "author": null, "committer": null, "parents": [{"sha": "160027a5dd99abb10e2b770580254b76da88013e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160027a5dd99abb10e2b770580254b76da88013e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/160027a5dd99abb10e2b770580254b76da88013e"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "7f2b4b9db0e395daf56dcc37c989c931bf82cbc2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=54e22276286b0e646f91fc52920332a56219b6be", "patch": "@@ -1,7 +1,15 @@\n 2008-08-26  Janis Johnson  <janis187@us.ibm.com>\n \n-\tgcc.dg/torture/type-generic-1.c: Don't use IBM 128-bit long double.\n-\tg++.dg/torture/type-generic-1.C: Ditto.\n+\t* gcc.target/powerpc/altivec-macros.c: Fix dg-message directives.\n+\t* gcc.target/powerpc/ppu-intrinsics.c: Ignore some warnings.\n+\t* gcc.target/powerpc/darwin-save-world-1.c: Require AltiVec hardware.\n+\t* gcc.target/powerpc/altivec-types-1.c: Expect some notes.\n+\t* gcc.dg/Wstrict-aliasing-bogus-ref-all-2.c: Ignore a warning.\n+\t* g++.dg/ext/altivec-2.C: Initialize a local variable.\n+\t* g++.dg/ext/altivec-3.C: Move AltiVec code out of main.\n+\n+\t* gcc.dg/torture/type-generic-1.c: Don't use IBM 128-bit long double.\n+\t* g++.dg/torture/type-generic-1.C: Ditto.\n \n 2008-08-26  Victor Kaplansky  <victork@il.ibm.com>\n "}, {"sha": "268ff9989464dca3eb91b365e11ecf5950bddd6d", "filename": "gcc/testsuite/g++.dg/ext/altivec-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-2.C?ref=54e22276286b0e646f91fc52920332a56219b6be", "patch": "@@ -10,7 +10,7 @@\n \n int main (int argc, const char * argv[])\n {\n-  int i;\n+  int i = 0;\n   const float cf = 1.0;\n   vector float v;\n   const vector float cv = (vector float){1.0, 2.0, 3.0, 4.0};"}, {"sha": "d42303d8140d79ca5ad9297a2cc0b3eb5f72e239", "filename": "gcc/testsuite/g++.dg/ext/altivec-3.C", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-3.C?ref=54e22276286b0e646f91fc52920332a56219b6be", "patch": "@@ -120,16 +120,19 @@ void baz2 (int i, ... )\n     CHECK_INVARIANT (vec_all_eq (vxi.v, vx_g.v));\n }\n \n-int main(void)\n+void main1(void)\n {\n     CHECK_INVARIANT (sizeof(struct foo) == 8 && sizeof(struct vfoo) == 48);\n \n-    altivec_check();\n-\n     bar(i_1, x_g, (short)i_2, (float)d_2, ld_1, (char)i_1, d_3);\n     baz(i_1, v_g, i_1, vx_g, i_1, v2_g, i_1, vx2_g); \n     quux(i_1, v_g, v_g);\n     baz2(i_1, vx_g);\n-    \n+}\n+\n+int main(void)\n+{\n+    altivec_check();\n+    main1();\n     return 0;\n }"}, {"sha": "29b1e98ba8efed19f22067bd6863d9d8f9b78fdd", "filename": "gcc/testsuite/gcc.dg/Wstrict-aliasing-bogus-ref-all-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-aliasing-bogus-ref-all-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-aliasing-bogus-ref-all-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-aliasing-bogus-ref-all-2.c?ref=54e22276286b0e646f91fc52920332a56219b6be", "patch": "@@ -22,3 +22,5 @@ __m128i get_vec(void)\n   return ret;\n }\n \n+/* Ignore a warning that is irrelevant to the purpose of this test.  */\n+/* { dg-prune-output \".*GCC vector returned by reference.*\" } */"}, {"sha": "8ea8df241dbb04b9f7ff55a43a0bb4af10d7096a", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-macros.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-macros.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-macros.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-macros.c?ref=54e22276286b0e646f91fc52920332a56219b6be", "patch": "@@ -55,9 +55,9 @@ _Pragma (\"__vector\")\n /* { dg-warning \"redefined\" \"pixel redefined\"     { target *-*-* } 48 } */\n /* { dg-warning \"redefined\" \"bool redefined\"      { target *-*-* } 49 } */\n \n-/* { dg-message \"note: previous\"  \"prev __vector defn\"  { target *-*-* } 24 } */\n-/* { dg-message \"note: previous\"  \"prev __pixel defn\"   { target *-*-* } 27 } */\n-/* { dg-message \"note: previous\"  \"prev __bool defn\"    { target *-*-* } 30 } */\n-/* { dg-message \"note: previous\"  \"prev vector defn\"    { target *-*-* } 33 } */\n-/* { dg-message \"note: previous\"  \"prev pixel defn\"     { target *-*-* } 36 } */\n-/* { dg-message \"note: previous\"  \"prev bool defn\"      { target *-*-* } 39 } */\n+/* { dg-message \"location of the previous\"  \"prev __vector defn\"  { target *-*-* } 24 } */\n+/* { dg-message \"location of the previous\"  \"prev __pixel defn\"   { target *-*-* } 27 } */\n+/* { dg-message \"location of the previous\"  \"prev __bool defn\"    { target *-*-* } 30 } */\n+/* { dg-message \"location of the previous\"  \"prev vector defn\"    { target *-*-* } 33 } */\n+/* { dg-message \"location of the previous\"  \"prev pixel defn\"     { target *-*-* } 36 } */\n+/* { dg-message \"location of the previous\"  \"prev bool defn\"      { target *-*-* } 39 } */"}, {"sha": "d293042d64fbf284b738af8dcd104b780eaac648", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-types-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-1.c?ref=54e22276286b0e646f91fc52920332a56219b6be", "patch": "@@ -86,3 +86,6 @@ __vector __bool float vbf;\t\t/* { dg-error \"\" \"\" } */\n __vector __bool double vbd;\t\t/* { dg-error \"\" \"\" } */\n __vector __bool short float blf;\t/* { dg-error \"\" \"\" } */\n __vector __bool short double vlbd;\t/* { dg-error \"\" \"\" } */\n+\n+/* { dg-message \"note: previous\" \"prev vsf\" { target *-*-* } 79 } */\n+/* { dg-message \"note: previous\" \"prev vsd\" { target *-*-* } 82 } */"}, {"sha": "c45a90f0f5ca7cc3a88b12871ed78cf3598c339d", "filename": "gcc/testsuite/gcc.target/powerpc/darwin-save-world-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-save-world-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-save-world-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-save-world-1.c?ref=54e22276286b0e646f91fc52920332a56219b6be", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run { target powerpc*-*-* } } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-skip-if \"need to be able to execute AltiVec\" { ! { powerpc_altivec_ok && vmx_hw } } } */\n /* { dg-options \"-maltivec\" } */\n \n /* With altivec turned on, Darwin wants to save the world but we did not mark lr as being saved any more"}, {"sha": "3d9afb25aa7a4f24b3b3b7e2bf81a33eb8a8ef3b", "filename": "gcc/testsuite/gcc.target/powerpc/ppu-intrinsics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppu-intrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e22276286b0e646f91fc52920332a56219b6be/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppu-intrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppu-intrinsics.c?ref=54e22276286b0e646f91fc52920332a56219b6be", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link { target { *-*-linux* && powerpc_fprs } } } */\n-/* { dg-options \"-W -Wall -mcpu=cell\" } */\n+/* { dg-options \"-W -Wall -Wno-uninitialized -mcpu=cell\" } */\n /* Test some PPU intrinsics from <ppu_intrinsics.h>.  */\n \n #include <ppu_intrinsics.h>"}]}