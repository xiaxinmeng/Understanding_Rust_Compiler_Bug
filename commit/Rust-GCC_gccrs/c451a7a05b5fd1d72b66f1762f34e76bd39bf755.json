{"sha": "c451a7a05b5fd1d72b66f1762f34e76bd39bf755", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ1MWE3YTA1YjVmZDFkNzJiNjZmMTc2MmYzNGU3NmJkMzliZjc1NQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1994-08-11T20:41:05Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1994-08-11T20:41:05Z"}, "message": "* tree.c (stabilize_reference):  Handle COMPOUND_EXPR.\n\nFrom-SVN: r7895", "tree": {"sha": "8b67232b194d6967dd79fd699be20e9af7097c07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b67232b194d6967dd79fd699be20e9af7097c07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c451a7a05b5fd1d72b66f1762f34e76bd39bf755", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c451a7a05b5fd1d72b66f1762f34e76bd39bf755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c451a7a05b5fd1d72b66f1762f34e76bd39bf755", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c451a7a05b5fd1d72b66f1762f34e76bd39bf755/comments", "author": null, "committer": null, "parents": [{"sha": "b4e21e27a37c1e9b0821016fab019fcd08c8a840", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e21e27a37c1e9b0821016fab019fcd08c8a840", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e21e27a37c1e9b0821016fab019fcd08c8a840"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "068f2b73d040a34d712425e27972c20ff2f02156", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c451a7a05b5fd1d72b66f1762f34e76bd39bf755/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c451a7a05b5fd1d72b66f1762f34e76bd39bf755/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=c451a7a05b5fd1d72b66f1762f34e76bd39bf755", "patch": "@@ -2356,6 +2356,13 @@ stabilize_reference (ref)\n \t\t\t stabilize_reference_1 (TREE_OPERAND (ref, 1)));\n       break;\n \n+    case COMPOUND_EXPR:\n+      result = build_nt (COMPOUND_EXPR,\n+\t\t\t stabilize_reference_1 (TREE_OPERAND (ref, 0)),\n+\t\t\t stabilize_reference (TREE_OPERAND (ref, 1)));\n+      break;\n+\n+\n       /* If arg isn't a kind of lvalue we recognize, make no change.\n \t Caller should recognize the error for an invalid lvalue.  */\n     default:"}]}