{"sha": "4f197ff9a82986bea40e6075c55b45348e4495ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYxOTdmZjlhODI5ODZiZWE0MGU2MDc1YzU1YjQ1MzQ4ZTQ0OTVlZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-01-17T15:11:00Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-01-17T15:11:00Z"}, "message": "Fix wrong assumption in contains_type_p (PR ipa/71207).\n\n2017-01-17  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/71207\n\t* g++.dg/ipa/pr71207.C: New test.\n2017-01-17  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/71207\n\t* ipa-polymorphic-call.c (contains_type_p): Fix wrong\n\tassumption and add comment.\n\nFrom-SVN: r244530", "tree": {"sha": "aa831e6b8e4dbe3d5b87f14a88d0c7462426950d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa831e6b8e4dbe3d5b87f14a88d0c7462426950d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f197ff9a82986bea40e6075c55b45348e4495ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f197ff9a82986bea40e6075c55b45348e4495ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f197ff9a82986bea40e6075c55b45348e4495ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f197ff9a82986bea40e6075c55b45348e4495ef/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "408de159d47ec1da831ec7c8fa752c68fad618c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/408de159d47ec1da831ec7c8fa752c68fad618c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/408de159d47ec1da831ec7c8fa752c68fad618c8"}], "stats": {"total": 65, "additions": 59, "deletions": 6}, "files": [{"sha": "282d1c90d590bed7ecd888823488d009ddc7ddb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f197ff9a82986bea40e6075c55b45348e4495ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f197ff9a82986bea40e6075c55b45348e4495ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f197ff9a82986bea40e6075c55b45348e4495ef", "patch": "@@ -1,3 +1,9 @@\n+2017-01-17  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/71207\n+\t* ipa-polymorphic-call.c (contains_type_p): Fix wrong\n+\tassumption and add comment.\n+\n 2017-01-17  Nathan Sidwell  <nathan@acm.org>\n \n \t* ipa-visibility.c (localize_node): New function, broken out of ..."}, {"sha": "e690d05158d1d8fd4326da1b5763a6632c7c6670", "filename": "gcc/ipa-polymorphic-call.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f197ff9a82986bea40e6075c55b45348e4495ef/gcc%2Fipa-polymorphic-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f197ff9a82986bea40e6075c55b45348e4495ef/gcc%2Fipa-polymorphic-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-polymorphic-call.c?ref=4f197ff9a82986bea40e6075c55b45348e4495ef", "patch": "@@ -463,12 +463,12 @@ contains_type_p (tree outer_type, HOST_WIDE_INT offset,\n   /* Check that type is within range.  */\n   if (offset < 0)\n     return false;\n-  if (TYPE_SIZE (outer_type) && TYPE_SIZE (otr_type)\n-      && TREE_CODE (TYPE_SIZE (outer_type)) == INTEGER_CST\n-      && TREE_CODE (TYPE_SIZE (otr_type)) == INTEGER_CST\n-      && wi::ltu_p (wi::to_offset (TYPE_SIZE (outer_type)),\n-\t\t    (wi::to_offset (TYPE_SIZE (otr_type)) + offset)))\n-    return false;\n+\n+  /* PR ipa/71207\n+     As OUTER_TYPE can be a type which has a diamond virtual inheritance,\n+     it's not necessary that INNER_TYPE will fit within OUTER_TYPE with\n+     a given offset.  It can happen that INNER_TYPE also contains a base object,\n+     however it would point to the same instance in the OUTER_TYPE.  */\n \n   context.offset = offset;\n   context.outer_type = TYPE_MAIN_VARIANT (outer_type);"}, {"sha": "f7d4fa27832de573ba570096dab2d0bc000271bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f197ff9a82986bea40e6075c55b45348e4495ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f197ff9a82986bea40e6075c55b45348e4495ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f197ff9a82986bea40e6075c55b45348e4495ef", "patch": "@@ -1,3 +1,8 @@\n+2017-01-17  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/71207\n+\t* g++.dg/ipa/pr71207.C: New test.\n+\n 2017-01-17  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR middle-end/77445"}, {"sha": "19a03998460449808d3cb12634d6d697821f4913", "filename": "gcc/testsuite/g++.dg/ipa/pr71207.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f197ff9a82986bea40e6075c55b45348e4495ef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr71207.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f197ff9a82986bea40e6075c55b45348e4495ef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr71207.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr71207.C?ref=4f197ff9a82986bea40e6075c55b45348e4495ef", "patch": "@@ -0,0 +1,42 @@\n+/* PR ipa/71207 */\n+/* { dg-do run } */\n+\n+class Class1\n+{\n+public:\n+  Class1() {};\n+  virtual ~Class1() {};\n+\n+protected:\n+  unsigned Field1;\n+};\n+\n+class Class2 : public virtual Class1\n+{\n+};\n+\n+class Class3 : public virtual Class1\n+{\n+public:\n+  virtual void Method1() = 0;\n+\n+  void Method2()\n+  {\n+    Method1();\n+  }\n+};\n+\n+class Class4 : public Class2, public virtual Class3\n+{\n+public:\n+  Class4() {};\n+  virtual void Method1() {};\n+};\n+\n+int main()\n+{\n+  Class4 var1;\n+  var1.Method2();\n+\n+  return 0;\n+}"}]}