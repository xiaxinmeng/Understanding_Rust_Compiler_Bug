{"sha": "1d98337c6bebf41743dd3d1cc36222aa30e8f382", "node_id": "C_kwDOANBUbNoAKDFkOTgzMzdjNmJlYmY0MTc0M2RkM2QxY2MzNjIyMmFhMzBlOGYzODI", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-02-20T23:06:16Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-02-20T23:12:01Z"}, "message": "d: Remove handling of deleting GC allocated classes.\n\nNow that the `delete' keyword has been removed from the front-end, only\ncompiler-generated uses of DeleteExp reach the code generator via the\nauto-destruction of `scope class' variables.\n\nThe run-time library helpers that previously were used to delete GC\nclass objects can now be removed from the compiler.\n\ngcc/d/ChangeLog:\n\n\t* expr.cc (ExprVisitor::visit (DeleteExp *)): Remove handling of\n\tdeleting GC allocated classes.\n\t* runtime.def (DELCLASS): Remove.\n\t(DELINTERFACE): Remove.", "tree": {"sha": "9b1d528c247a528c812fec2a88fe3251d1cbab9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b1d528c247a528c812fec2a88fe3251d1cbab9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d98337c6bebf41743dd3d1cc36222aa30e8f382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d98337c6bebf41743dd3d1cc36222aa30e8f382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d98337c6bebf41743dd3d1cc36222aa30e8f382", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d98337c6bebf41743dd3d1cc36222aa30e8f382/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6384eff56dba1fac071c1b525f7e49cf03f2737f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6384eff56dba1fac071c1b525f7e49cf03f2737f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6384eff56dba1fac071c1b525f7e49cf03f2737f"}], "stats": {"total": 30, "additions": 7, "deletions": 23}, "files": [{"sha": "2a7fb690862ac785560502bcabc7312344e63469", "filename": "gcc/d/expr.cc", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d98337c6bebf41743dd3d1cc36222aa30e8f382/gcc%2Fd%2Fexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d98337c6bebf41743dd3d1cc36222aa30e8f382/gcc%2Fd%2Fexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fexpr.cc?ref=1d98337c6bebf41743dd3d1cc36222aa30e8f382", "patch": "@@ -1438,28 +1438,16 @@ class ExprVisitor : public Visitor\n       {\n \t/* For class object references, if there is a destructor for that class,\n \t   the destructor is called for the object instance.  */\n-\tlibcall_fn libcall;\n+\tgcc_assert (e->e1->op == EXP::variable);\n \n-\tif (e->e1->op == EXP::variable)\n-\t  {\n-\t    VarDeclaration *v = e->e1->isVarExp ()->var->isVarDeclaration ();\n-\t    if (v && v->onstack)\n-\t      {\n-\t\tlibcall = tb1->isClassHandle ()->isInterfaceDeclaration ()\n-\t\t  ? LIBCALL_CALLINTERFACEFINALIZER : LIBCALL_CALLFINALIZER;\n+\tVarDeclaration *v = e->e1->isVarExp ()->var->isVarDeclaration ();\n+\tgcc_assert (v && v->onstack);\n \n-\t\tthis->result_ = build_libcall (libcall, Type::tvoid, 1, t1);\n-\t\treturn;\n-\t      }\n-\t  }\n+\tlibcall_fn libcall = tb1->isClassHandle ()->isInterfaceDeclaration ()\n+\t  ? LIBCALL_CALLINTERFACEFINALIZER : LIBCALL_CALLFINALIZER;\n \n-\t/* Otherwise, the garbage collector is called to immediately free the\n-\t   memory allocated for the class instance.  */\n-\tlibcall = tb1->isClassHandle ()->isInterfaceDeclaration ()\n-\t  ? LIBCALL_DELINTERFACE : LIBCALL_DELCLASS;\n-\n-\tt1 = build_address (t1);\n \tthis->result_ = build_libcall (libcall, Type::tvoid, 1, t1);\n+\treturn;\n       }\n     else\n       {"}, {"sha": "534f8661b3eddba22daafb8c2b0bf884849a3a0b", "filename": "gcc/d/runtime.def", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d98337c6bebf41743dd3d1cc36222aa30e8f382/gcc%2Fd%2Fruntime.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d98337c6bebf41743dd3d1cc36222aa30e8f382/gcc%2Fd%2Fruntime.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fruntime.def?ref=1d98337c6bebf41743dd3d1cc36222aa30e8f382", "patch": "@@ -63,11 +63,7 @@ DEF_D_RUNTIME (ARRAYBOUNDS_INDEXP, \"_d_arraybounds_indexp\", RT(VOID),\n DEF_D_RUNTIME (NEWCLASS, \"_d_newclass\", RT(OBJECT), P1(CONST_CLASSINFO), 0)\n DEF_D_RUNTIME (NEWTHROW, \"_d_newThrowable\", RT(OBJECT), P1(CONST_CLASSINFO), 0)\n \n-/* Used when calling delete on a class or interface.  */\n-DEF_D_RUNTIME (DELCLASS, \"_d_delclass\", RT(VOID), P1(VOIDPTR), 0)\n-DEF_D_RUNTIME (DELINTERFACE, \"_d_delinterface\", RT(VOID), P1(VOIDPTR), 0)\n-\n-/* Same as deleting a class, but used for stack-allocated classes.  */\n+/* Used when calling delete on a stack-allocated class or interface.  */\n DEF_D_RUNTIME (CALLFINALIZER, \"_d_callfinalizer\", RT(VOID), P1(VOIDPTR), 0)\n DEF_D_RUNTIME (CALLINTERFACEFINALIZER, \"_d_callinterfacefinalizer\", RT(VOID),\n \t       P1(VOIDPTR), 0)"}]}