{"sha": "d481d13786cb84f6294833538133dbd6f39d2e55", "node_id": "C_kwDOANBUbNoAKGQ0ODFkMTM3ODZjYjg0ZjYyOTQ4MzM1MzgxMzNkYmQ2ZjM5ZDJlNTU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-12T07:19:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-12T07:19:11Z"}, "message": "i386: Fix ICE caused by ix86_emit_i387_log1p [PR105214]\n\nThe following testcase ICEs, because ix86_emit_i387_log1p attempts to\nemit something like\n  if (cond)\n    some_code1;\n  else\n    some_code2;\nand emits a conditional jump using emit_jump_insn (standard way in\nthe file) and an unconditional jump using emit_jump.\nThe problem with that is that if there is pending stack adjustment,\nit isn't emitted before the conditional jump, but is before the\nunconditional jump and therefore stack is adjusted only conditionally\n(at the end of some_code1 above), which makes dwarf2 pass unhappy about it\nbut is a serious wrong-code even if it doesn't ICE.\n\nThis can be fixed either by emitting pending stack adjust before the\nconditional jump as the following patch does, or by not using\n  emit_jump (label2);\nand instead hand inlining what that function does except for the\npending stack adjustment, like:\n  emit_jump_insn (targetm.gen_jump (label2));\n  emit_barrier ();\nIn that case there will be no stack adjustment in the sequence and\nit will be done later on somewhere else.\n\n2022-04-12  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/105214\n\t* config/i386/i386-expand.cc (ix86_emit_i387_log1p): Call\n\tdo_pending_stack_adjust.\n\n\t* gcc.dg/asan/pr105214.c: New test.", "tree": {"sha": "b511366a18b9349f529bf70969be3795e1cec7d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b511366a18b9349f529bf70969be3795e1cec7d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d481d13786cb84f6294833538133dbd6f39d2e55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d481d13786cb84f6294833538133dbd6f39d2e55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d481d13786cb84f6294833538133dbd6f39d2e55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d481d13786cb84f6294833538133dbd6f39d2e55/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91a38e8a848c61b2e23ee277306dc8cd194d135b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91a38e8a848c61b2e23ee277306dc8cd194d135b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91a38e8a848c61b2e23ee277306dc8cd194d135b"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "f6f2c1ea4e326ed3fe8fc9b4babe4b77d023720f", "filename": "gcc/config/i386/i386-expand.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d481d13786cb84f6294833538133dbd6f39d2e55/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d481d13786cb84f6294833538133dbd6f39d2e55/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.cc?ref=d481d13786cb84f6294833538133dbd6f39d2e55", "patch": "@@ -17291,6 +17291,11 @@ void ix86_emit_i387_log1p (rtx op0, rtx op1)\n   rtx cst, cstln2, cst1;\n   rtx_insn *insn;\n \n+  /* The emit_jump call emits pending stack adjust, make sure it is emitted\n+     before the conditional jump, otherwise the stack adjustment will be\n+     only conditional.  */\n+  do_pending_stack_adjust ();\n+\n   cst = const_double_from_real_value\n     (REAL_VALUE_ATOF (\"0.29289321881345247561810596348408353\", XFmode), XFmode);\n   cstln2 = force_reg (XFmode, standard_80387_constant_rtx (4)); /* fldln2 */"}, {"sha": "a755336c7d8b50a182b0e456d6ec37fd34e24585", "filename": "gcc/testsuite/gcc.dg/asan/pr105214.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d481d13786cb84f6294833538133dbd6f39d2e55/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr105214.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d481d13786cb84f6294833538133dbd6f39d2e55/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr105214.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr105214.c?ref=d481d13786cb84f6294833538133dbd6f39d2e55", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/105214 */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O2\" } } */\n+/* { dg-options \"-Ofast -fnon-call-exceptions -fexceptions -fstack-check=generic -fsanitize=address -fno-finite-math-only -fsignaling-nans -fno-associative-math\" } */\n+\n+float f;\n+void bar (int *);\n+\n+void\n+foo (void)\n+{\n+  int a[1600], b[1];\n+  f += __builtin_log1pf (f);\n+  bar (a);\n+  bar (b);\n+}"}]}