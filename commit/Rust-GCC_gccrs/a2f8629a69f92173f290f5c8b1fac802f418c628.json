{"sha": "a2f8629a69f92173f290f5c8b1fac802f418c628", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJmODYyOWE2OWY5MjE3M2YyOTBmNWM4YjFmYWM4MDJmNDE4YzYyOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-06-18T21:41:10Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-06-18T21:41:10Z"}, "message": "toplev.c (rest_of_handle_sched): Hide the entire function if INSN_SCHEDULING is not defined.\n\n\t* toplev.c (rest_of_handle_sched): Hide the entire function if\n\tINSN_SCHEDULING is not defined.\n\t(rest_of_compilation): Call rest_of_handle_sched() only when\n\tINSN_SCHEDULING is defined.\n\nFrom-SVN: r68166", "tree": {"sha": "01daecd9b354d601e79fe86bac207d66f5ce6265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01daecd9b354d601e79fe86bac207d66f5ce6265"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2f8629a69f92173f290f5c8b1fac802f418c628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f8629a69f92173f290f5c8b1fac802f418c628", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2f8629a69f92173f290f5c8b1fac802f418c628", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f8629a69f92173f290f5c8b1fac802f418c628/comments", "author": null, "committer": null, "parents": [{"sha": "fe3ad57221f647b880567025bf825dcca9b7174a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3ad57221f647b880567025bf825dcca9b7174a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe3ad57221f647b880567025bf825dcca9b7174a"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "1e942f6d2a982519a64e196931d8d4c754b69f5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2f8629a69f92173f290f5c8b1fac802f418c628/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2f8629a69f92173f290f5c8b1fac802f418c628/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2f8629a69f92173f290f5c8b1fac802f418c628", "patch": "@@ -1,3 +1,10 @@\n+2003-06-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* toplev.c (rest_of_handle_sched): Hide the entire function if\n+\tINSN_SCHEDULING is not defined.\n+\t(rest_of_compilation): Call rest_of_handle_sched() only when\n+\tINSN_SCHEDULING is defined.\n+\n 2003-06-18  Stephen Clarke <stephen.clarke@superh.com>\n             J\"orn Rennecke <joern.rennecke@superh.com>\n "}, {"sha": "259765f8e865bf874be24787896a9531f5ce55fb", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2f8629a69f92173f290f5c8b1fac802f418c628/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2f8629a69f92173f290f5c8b1fac802f418c628/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=a2f8629a69f92173f290f5c8b1fac802f418c628", "patch": "@@ -148,8 +148,8 @@ static void rest_of_handle_if_after_combine (tree, rtx);\n static void rest_of_handle_tracer (tree, rtx);\n static void rest_of_handle_combine (tree, rtx);\n static void rest_of_handle_regmove (tree, rtx);\n-static void rest_of_handle_sched (tree, rtx);\n #ifdef INSN_SCHEDULING\n+static void rest_of_handle_sched (tree, rtx);\n static void rest_of_handle_sched2 (tree, rtx);\n #endif\n static bool rest_of_handle_new_regalloc (tree, rtx, int *);\n@@ -2647,12 +2647,12 @@ rest_of_handle_reorder_blocks (tree decl, rtx insns)\n   timevar_pop (TV_REORDER_BLOCKS);\n }\n \n+#ifdef INSN_SCHEDULING\n /* Run instruction scheduler.  */\n static void\n rest_of_handle_sched (tree decl, rtx insns)\n {\n   timevar_push (TV_SCHED);\n-#ifdef INSN_SCHEDULING\n \n   /* Print function header into sched dump now\n      because doing the sched analysis makes some of the dump.  */\n@@ -2667,13 +2667,11 @@ rest_of_handle_sched (tree decl, rtx insns)\n \n       close_dump_file (DFI_sched, print_rtl_with_bb, insns);\n     }\n-#endif\n   timevar_pop (TV_SCHED);\n \n   ggc_collect ();\n }\n \n-#ifdef INSN_SCHEDULING\n /* Run second scheduling pass after reload.  */\n static void\n rest_of_handle_sched2 (tree decl, rtx insns)\n@@ -3713,7 +3711,9 @@ rest_of_compilation (tree decl)\n      (see handling of reg_known_equiv in init_alias_analysis).  */\n   recompute_reg_usage (insns, !optimize_size);\n \n+#ifdef INSN_SCHEDULING\n   rest_of_handle_sched (decl, insns);\n+#endif\n \n   /* Determine if the current function is a leaf before running reload\n      since this can impact optimizations done by the prologue and"}]}