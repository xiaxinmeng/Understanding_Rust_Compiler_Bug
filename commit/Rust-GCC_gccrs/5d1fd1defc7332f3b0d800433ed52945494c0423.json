{"sha": "5d1fd1defc7332f3b0d800433ed52945494c0423", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQxZmQxZGVmYzczMzJmM2IwZDgwMDQzM2VkNTI5NDU0OTRjMDQyMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-12-18T21:07:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-12-18T21:07:12Z"}, "message": "re PR tree-optimization/46969 (-fcompare-debug failure with -O -ftree-vectorize -ftree-parallelize-loops=2)\n\n\tPR tree-optimization/46969\n\t* tree-parloops.c (struct reduction_info): Add reduc_version.\n\t(reduction_info_hash): Return reduc_version field.\n\t(reduction_phi): Set reduc_version to gimple_uid (phi).\n\t(build_new_reduction): Set reduc_version to SSA_NAME_VERSION of\n\tphi result.\n\t(set_reduc_phi_uids): New function.\n\t(gather_scalar_reductions): Call it at the end through htab_traverse.\n\n\t* gcc.dg/autopar/pr46969.c: New test.\n\nFrom-SVN: r168034", "tree": {"sha": "be64ce84d19d87c5c15515ae89d671b262de9cd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be64ce84d19d87c5c15515ae89d671b262de9cd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d1fd1defc7332f3b0d800433ed52945494c0423", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1fd1defc7332f3b0d800433ed52945494c0423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d1fd1defc7332f3b0d800433ed52945494c0423", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1fd1defc7332f3b0d800433ed52945494c0423/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46270f141bec8186f01faf7ec216c57fd81e1463", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46270f141bec8186f01faf7ec216c57fd81e1463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46270f141bec8186f01faf7ec216c57fd81e1463"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "0450bfd37e6cc32552d5e5c2ba44929f1d522662", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1fd1defc7332f3b0d800433ed52945494c0423/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1fd1defc7332f3b0d800433ed52945494c0423/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d1fd1defc7332f3b0d800433ed52945494c0423", "patch": "@@ -1,3 +1,14 @@\n+2010-12-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/46969\n+\t* tree-parloops.c (struct reduction_info): Add reduc_version.\n+\t(reduction_info_hash): Return reduc_version field.\n+\t(reduction_phi): Set reduc_version to gimple_uid (phi).\n+\t(build_new_reduction): Set reduc_version to SSA_NAME_VERSION of\n+\tphi result.\n+\t(set_reduc_phi_uids): New function.\n+\t(gather_scalar_reductions): Call it at the end through htab_traverse.\n+\n 2010-12-18  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* c-parser.c (c_parser_objc_try_catch_finally_statement): Call"}, {"sha": "d3bb0def1ce7073c5b3304c742e80abddd237e15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1fd1defc7332f3b0d800433ed52945494c0423/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1fd1defc7332f3b0d800433ed52945494c0423/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d1fd1defc7332f3b0d800433ed52945494c0423", "patch": "@@ -1,3 +1,8 @@\n+2010-12-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/46969\n+\t* gcc.dg/autopar/pr46969.c: New test.\n+\n 2010-12-18  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/fobjc-exceptions-1.m: Updated."}, {"sha": "807ce4f9293c28b9bdb086b1cc551eeb0bb83a82", "filename": "gcc/testsuite/gcc.dg/autopar/pr46969.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1fd1defc7332f3b0d800433ed52945494c0423/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr46969.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1fd1defc7332f3b0d800433ed52945494c0423/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr46969.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr46969.c?ref=5d1fd1defc7332f3b0d800433ed52945494c0423", "patch": "@@ -0,0 +1,31 @@\n+/* PR tree-optimization/46969 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -ftree-parallelize-loops=2 -fcompare-debug\" } */\n+\n+extern void abort (void);\n+#define F(name) \\\n+int\t\t\t\t\t\t\t\t\\\n+name (unsigned char *x)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\t\\\n+  unsigned int c, d, e;\t\t\t\t\t\t\\\n+  if (x != 0)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      for (i = 0, d = 0, e = 0xFFFFFFFF;\t\t\t\\\n+\t   i < 64;\t\t\t\t\t\t\\\n+\t   i += (int) sizeof(unsigned int))\t\t\t\\\n+        {\t\t\t\t\t\t\t\\\n+          c = *((unsigned int *)(&x[i]));\t\t\t\\\n+          d = d | c;\t\t\t\t\t\t\\\n+          e = e & c;\t\t\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\\\n+      if (!((d == e) && ((d >> 8) == (e & 0x00FFFFFF))))\t\\\n+        abort ();\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  return 0;\t\t\t\t\t\t\t\\\n+}\n+F (foo0) F (foo1)\n+F (foo2) F (foo3)\n+F (foo4) F (foo5)\n+F (foo6) F (foo7)\n+F (foo8) F (foo9)"}, {"sha": "ea1911a81fa421bcdc4e93e01ddd0b67a6eeed07", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1fd1defc7332f3b0d800433ed52945494c0423/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1fd1defc7332f3b0d800433ed52945494c0423/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=5d1fd1defc7332f3b0d800433ed52945494c0423", "patch": "@@ -168,6 +168,8 @@ struct reduction_info\n   gimple reduc_stmt;\t\t/* reduction statement.  */\n   gimple reduc_phi;\t\t/* The phi node defining the reduction.  */\n   enum tree_code reduction_code;/* code for the reduction operation.  */\n+  unsigned reduc_version;\t/* SSA_NAME_VERSION of original reduc_phi\n+\t\t\t\t   result.  */\n   gimple keep_res;\t\t/* The PHI_RESULT of this phi is the resulting value\n \t\t\t\t   of the reduction variable when existing the loop. */\n   tree initial_value;\t\t/* The initial value of the reduction var before entering the loop.  */\n@@ -195,7 +197,7 @@ reduction_info_hash (const void *aa)\n {\n   const struct reduction_info *a = (const struct reduction_info *) aa;\n \n-  return htab_hash_pointer (a->reduc_phi);\n+  return a->reduc_version;\n }\n \n static struct reduction_info *\n@@ -207,6 +209,7 @@ reduction_phi (htab_t reduction_list, gimple phi)\n     return NULL;\n \n   tmpred.reduc_phi = phi;\n+  tmpred.reduc_version = gimple_uid (phi);\n   red = (struct reduction_info *) htab_find (reduction_list, &tmpred);\n \n   return red;\n@@ -1774,11 +1777,22 @@ build_new_reduction (htab_t reduction_list, gimple reduc_stmt, gimple phi)\n \n   new_reduction->reduc_stmt = reduc_stmt;\n   new_reduction->reduc_phi = phi;\n+  new_reduction->reduc_version = SSA_NAME_VERSION (gimple_phi_result (phi));\n   new_reduction->reduction_code = gimple_assign_rhs_code (reduc_stmt);\n   slot = htab_find_slot (reduction_list, new_reduction, INSERT);\n   *slot = new_reduction;\n }\n \n+/* Callback for htab_traverse.  Sets gimple_uid of reduc_phi stmts.  */\n+\n+static int\n+set_reduc_phi_uids (void **slot, void *data ATTRIBUTE_UNUSED)\n+{\n+  struct reduction_info *const red = (struct reduction_info *) *slot;\n+  gimple_set_uid (red->reduc_phi, red->reduc_version);\n+  return 1;\n+}\n+\n /* Detect all reductions in the LOOP, insert them into REDUCTION_LIST.  */\n \n static void\n@@ -1810,7 +1824,12 @@ gather_scalar_reductions (loop_p loop, htab_t reduction_list)\n               build_new_reduction (reduction_list, reduc_stmt, phi);\n         }\n     }\n-    destroy_loop_vec_info (simple_loop_info, true);\n+  destroy_loop_vec_info (simple_loop_info, true);\n+\n+  /* As gimple_uid is used by the vectorizer in between vect_analyze_loop_form\n+     and destroy_loop_vec_info, we can set gimple_uid of reduc_phi stmts\n+     only now.  */\n+  htab_traverse (reduction_list, set_reduc_phi_uids, NULL);\n }\n \n /* Try to initialize NITER for code generation part.  */"}]}