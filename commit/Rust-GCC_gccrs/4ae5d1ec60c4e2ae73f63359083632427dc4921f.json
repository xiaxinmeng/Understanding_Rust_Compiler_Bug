{"sha": "4ae5d1ec60c4e2ae73f63359083632427dc4921f", "node_id": "C_kwDOANBUbNoAKDRhZTVkMWVjNjBjNGUyYWU3M2Y2MzM1OTA4MzYzMjQyN2RjNDkyMWY", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-13T13:41:28Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-13T13:47:05Z"}, "message": "Merge commit '50335ddd301404e9053786b26a23a924471b4d09' into HEAD\n\nIn #1847 \"Merge upstream, last commit before 2023-01-31 GCC/Rust upstreaming\"\nwe merged commit 9e56306f4d7c15e7667d8ac0b62ae6efb93ba756 from upstream GCC\nmaster branch.\n\nThis one now merges the 2023-01-31 GCC/Rust upstreaming, commits\n9e56306f4d7c15e7667d8ac0b62ae6efb93ba756..50335ddd301404e9053786b26a23a924471b4d09:\n\n      - 5be4c2687a89 gccrs: session-manager: Add ast-pretty-expanded dump\n      - e66fec8e6ba3 gccrs: const folding port\n      - ff8a56950776 gccrs: Desugar double borrows into two HIR:BorrowExpr's\n      - 86743891a6e9 gccrs: backend: Expose Bvariable class through rust-gcc header\n      - 41547275c5e9 gccrs: builtins: Add add_overflow builtin and refactor class\n      - 9c87dc0afe05 gccrs: backend: Add overflow checks to every arithmetic operation\n      - 3a3a352091b7 gccrs: rustc_attrs: Allow `rustc_inherit_overflow_checks` as a builtin..\n      - 938facc5e93a gccrs: lint: Do not emit unused warnings for public items\n      - f7014b28b81f gccrs: parser: Parse RangeFullExpr without erroring out\n      - 1fed030c1651 gccrs: macros: Handle matchers properly in repetitions\n      - 252216dd0c59 gccrs: transcriber: Do not infinite loop if the current parsed node is an error\n      - 7dc41901213d gccrs: dump: Add AST debugging using the AST::Dump class\n      - 55fb35c51b2e gccrs: ast: Only expand expressions and types if the kind is right\n      - 3663d7ef6662 gccrs: ast: Add better assertion on AST fragments\n      - 245ce6f26a16 gccrs: Add guards against getting data from an empty vector\n      - af22b54af53c gccrs: Add missing location info to coercions\n      - 7ad24d802e59 gccrs: Refactor unify to hit a unify_site\n      - 1eabeb5aecc9 gccrs: Remove param_use_canonical_types checks ported from c++ front-end\n      - ffa16a4590ad gccrs: Create canonical process of compiling constant items\n      - 43cb42a3d82d gccrs: Add extra debugging for method call expressions\n      - e641158a5f5c gccrs: Add new check for contains_associated_types\n      - 0fffc0e772d6 gccrs: Unit structs are not concrete when they need substitutions\n      - 689a5c6711b8 gccrs: bugfix: initialize slice from array in const context\n      - b0ff1647cbe6 gccrs: add testcase to test component_ref and constructor codes in eval_constant_expression()\n      - e6a3886a833a gccrs: backend: correctly formulate the exit condition ...\n      - dd9d6656e9a4 gccrs: add testcase with struct to test component_ref and constructor codes..\n      - 0d5adf093566 gccrs: testsuite: add loop condition execution test\n      - 288b6298a6ae gccrs: const generics: Make sure const generic types are visited properly\n      - ff9d7741d4b9 gccrs: const generics: Forbid default values in Functions, Traits and Impls\n      - 739d0509ed55 gccrs: attributes: Add #[macro_use] as builtin\n      - 3736647947b6 gccrs: module lowering: Do not append null pointers as items\n      - 70fc174b78a2 gccrs: Static Items must be const evaluated\n      - 408ab8a6e412 gccrs: Statics are a coercion site\n      - a0c2ea3ee6e4 gccrs: remove bad assertion\n      - f92f8ee75bf0 gccrs: Add testcase for const-eval issue from rust-blog\n      - 9d6b434e1fda gccrs: rust: Add -frust-compile-until option\n      - e88ce5cc6847 gccrs: expand: eager evaluate macros inside builtin macros\n      - c6c4342273a7 gccrs: testsuite/rust: add a testcase for testing ...\n      - e1beb624ff5a gccrs: Cleanup formatting of backend expression visitor\n      - 9c60f0e1e5cd gccrs: Make constexpr constructors type-checking more permissive\n      - 11a37f895040 gccrs: Fix duplicated function generation on higher ranked trait bounds\n      - 104cc285533e gccrs: Refactor TypeResolution to be a simple query based system\n      - d9d7b6ccd45a gccrs: Add testcase to show forward declared items work\n      - 50335ddd3014 gccrs: Add testcase to show forward declared items work via TypeAlias\n\nThis merge is done with 'git merge --strategy=ours', so effectively doesn't\nmerge any changes.  Rationale: those commits are taken from GCC/Rust master\nbranch, and any remaining changes we'd either like to persist, or assess\nindividually, later.", "tree": {"sha": "c08811d678831a0dcb1d957694f52c3bc9318b3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c08811d678831a0dcb1d957694f52c3bc9318b3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ae5d1ec60c4e2ae73f63359083632427dc4921f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae5d1ec60c4e2ae73f63359083632427dc4921f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ae5d1ec60c4e2ae73f63359083632427dc4921f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae5d1ec60c4e2ae73f63359083632427dc4921f/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73e6dac17f3fb27a10f805faacc61875c66f35c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e6dac17f3fb27a10f805faacc61875c66f35c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73e6dac17f3fb27a10f805faacc61875c66f35c4"}, {"sha": "50335ddd301404e9053786b26a23a924471b4d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50335ddd301404e9053786b26a23a924471b4d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50335ddd301404e9053786b26a23a924471b4d09"}], "stats": {"total": 0, "additions": 0, "deletions": 0}, "files": []}