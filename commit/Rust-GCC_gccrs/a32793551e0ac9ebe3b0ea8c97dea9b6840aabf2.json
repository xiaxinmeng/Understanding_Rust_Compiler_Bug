{"sha": "a32793551e0ac9ebe3b0ea8c97dea9b6840aabf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMyNzkzNTUxZTBhYzllYmUzYjBlYThjOTdkZWE5YjY4NDBhYWJmMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-23T10:55:07Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-23T10:55:07Z"}, "message": "(fold...\n\n(fold, case REALPART_EXPR, IMAGPART_EXPR): Avoid using\nbuild_{unary,binary}_op since the calling sequences depend on the\nfront-end.\n\nFrom-SVN: r4194", "tree": {"sha": "1c2fdcfb5838892063b150fe4bab5db72c261e01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c2fdcfb5838892063b150fe4bab5db72c261e01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a32793551e0ac9ebe3b0ea8c97dea9b6840aabf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32793551e0ac9ebe3b0ea8c97dea9b6840aabf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a32793551e0ac9ebe3b0ea8c97dea9b6840aabf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32793551e0ac9ebe3b0ea8c97dea9b6840aabf2/comments", "author": null, "committer": null, "parents": [{"sha": "550707f7e4c85d11b03510293626303d3395ebd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550707f7e4c85d11b03510293626303d3395ebd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/550707f7e4c85d11b03510293626303d3395ebd4"}], "stats": {"total": 26, "additions": 10, "deletions": 16}, "files": [{"sha": "84e89c86b6ea4add21a251d32207905f13413b1b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32793551e0ac9ebe3b0ea8c97dea9b6840aabf2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32793551e0ac9ebe3b0ea8c97dea9b6840aabf2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=a32793551e0ac9ebe3b0ea8c97dea9b6840aabf2", "patch": "@@ -4440,14 +4440,11 @@ fold (expr)\n       else if (TREE_CODE (arg0) == COMPLEX_CST)\n \treturn TREE_REALPART (arg0);\n       else if (TREE_CODE (arg0) == PLUS_EXPR || TREE_CODE (arg0) == MINUS_EXPR)\n-\treturn build_binary_op (TREE_CODE (arg0), type,\n-\t\t\t\tbuild_unary_op (REALPART_EXPR,\n-\t\t\t\t\t\tTREE_OPERAND (arg0, 0),\n-\t\t\t\t\t\t1),\n-\t\t\t\tbuild_unary_op (REALPART_EXPR,\n-\t\t\t\t\t\tTREE_OPERAND (arg0, 1),\n-\t\t\t\t\t\t1),\n-\t\t\t\t0);\n+\treturn fold (build (TREE_CODE (arg0), type,\n+\t\t\t    fold (build1 (REALPART_EXPR, type,\n+\t\t\t\t\t  TREE_OPERAND (arg0, 0))),\n+\t\t\t    fold (build1 (REALPART_EXPR,\n+\t\t\t\t\t  type, TREE_OPERAND (arg0, 1)))));\n       return t;\n \n     case IMAGPART_EXPR:\n@@ -4459,14 +4456,11 @@ fold (expr)\n       else if (TREE_CODE (arg0) == COMPLEX_CST)\n \treturn TREE_IMAGPART (arg0);\n       else if (TREE_CODE (arg0) == PLUS_EXPR || TREE_CODE (arg0) == MINUS_EXPR)\n-\treturn build_binary_op (TREE_CODE (arg0), type,\n-\t\t\t\tbuild_unary_op (IMAGPART_EXPR,\n-\t\t\t\t\t\tTREE_OPERAND (arg0, 0),\n-\t\t\t\t\t\t1),\n-\t\t\t\tbuild_unary_op (IMAGPART_EXPR,\n-\t\t\t\t\t\tTREE_OPERAND (arg0, 1),\n-\t\t\t\t\t\t1),\n-\t\t\t\t0);\n+\treturn fold (build (TREE_CODE (arg0), type,\n+\t\t\t    fold (build1 (IMAGPART_EXPR, type,\n+\t\t\t\t\t  TREE_OPERAND (arg0, 0))),\n+\t\t\t    fold (build1 (IMAGPART_EXPR, type,\n+\t\t\t\t\t  TREE_OPERAND (arg0, 1)))));\n       return t;\n \n     default:"}]}