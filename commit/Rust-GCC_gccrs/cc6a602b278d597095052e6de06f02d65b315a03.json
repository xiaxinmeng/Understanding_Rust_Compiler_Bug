{"sha": "cc6a602b278d597095052e6de06f02d65b315a03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M2YTYwMmIyNzhkNTk3MDk1MDUyZTZkZTA2ZjAyZDY1YjMxNWEwMw==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2003-06-03T06:56:42Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2003-06-03T06:56:42Z"}, "message": "* doc/md.texi (Processor pipeline description): Improve wording.\n\nFrom-SVN: r67355", "tree": {"sha": "d7e2c41c1b442184d5953a374c8752c3bf58f573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7e2c41c1b442184d5953a374c8752c3bf58f573"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc6a602b278d597095052e6de06f02d65b315a03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6a602b278d597095052e6de06f02d65b315a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc6a602b278d597095052e6de06f02d65b315a03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6a602b278d597095052e6de06f02d65b315a03/comments", "author": null, "committer": null, "parents": [{"sha": "f75d3e11d3fbc92458b33c06374c3fb1a121bcd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f75d3e11d3fbc92458b33c06374c3fb1a121bcd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f75d3e11d3fbc92458b33c06374c3fb1a121bcd4"}], "stats": {"total": 38, "additions": 21, "deletions": 17}, "files": [{"sha": "b1bf7f437e460366e033e57b2f97e5bede43dd8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6a602b278d597095052e6de06f02d65b315a03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6a602b278d597095052e6de06f02d65b315a03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc6a602b278d597095052e6de06f02d65b315a03", "patch": "@@ -1,3 +1,7 @@\n+2003-06-03  Ben Elliston  <bje@wasabisystems.com>\n+\n+\t* doc/md.texi (Processor pipeline description): Improve wording.\n+\n 2003-06-03  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* c-opts.c (c_common_handle_option): New, pulled out of\n@@ -24,7 +28,7 @@\n \t(FUNCTION_ARG_1): Break out of:\n \t(FUNCTION_ARG).  Use OLD_ARG_MODE.\n \n-2003-04-16  Kazuhiro Inaoka  <inaoka.kazuhiro@renesas.com>\n+2003-06-02  Kazuhiro Inaoka  <inaoka.kazuhiro@renesas.com>\n \n         * gcc/config.gcc Add support multilib parts for m32rx processor.\n "}, {"sha": "9b1599182018c8d0db9649c5464e5b9ea7f01800", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6a602b278d597095052e6de06f02d65b315a03/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6a602b278d597095052e6de06f02d65b315a03/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=cc6a602b278d597095052e6de06f02d65b315a03", "patch": "@@ -5448,18 +5448,18 @@ generated from the old description.  Furthermore, its speed is not dependent\n on processor complexity.  The instruction issue is possible if there is\n a transition from one automaton state to another one.\n \n-You can use any model to describe processor pipeline characteristics\n-or even a mix of them.  You could use the old description for some\n-processor submodels and the @acronym{DFA}-based one for the rest\n+You can use either model to describe processor pipeline\n+characteristics or even mix them.  You could use the old description\n+for some processor submodels and the @acronym{DFA}-based one for other\n processor submodels.\n \n-In general, the usage of the automaton based description is more\n-preferable.  Its model is more rich.  It permits to describe more\n-accurately pipeline characteristics of processors which results in\n-improving code quality (although sometimes only on several percent\n-fractions).  It will be also used as an infrastructure to implement\n-sophisticated and practical insn scheduling which will try many\n-instruction sequences to choose the best one.\n+In general, using the automaton based description is preferred.  Its\n+model is richer and makes it possible to more accurately describe\n+pipeline characteristics of processors, which results in improved\n+code quality (although sometimes only marginally).  It will also be\n+used as an infrastructure to implement sophisticated and practical\n+instruction scheduling which will try many instruction sequences to\n+choose the best one.\n \n \n @menu\n@@ -5687,7 +5687,7 @@ is negative, the cost is considered to be zero).  You can always\n change the default costs for any description by using the target hook\n @code{TARGET_SCHED_ADJUST_COST} (@pxref{Scheduling}).\n \n-@var{insn-names} is a string giving the internal name of the insn.  The\n+@var{insn-name} is a string giving the internal name of the insn.  The\n internal names are used in constructions @code{define_bypass} and in\n the automaton description file generated for debugging.  The internal\n name has nothing in common with the names in @code{define_insn}.  It is a\n@@ -5773,7 +5773,7 @@ the common part by the following construction\n @var{reservation-name} is a string giving name of @var{regexp}.\n Functional unit names and reservation names are in the same name\n space.  So the reservation names should be different from the\n-functional unit names and can not be reserved name @samp{nothing}.\n+functional unit names and can not be the reserved name @samp{nothing}.\n \n @findex define_bypass\n @cindex instruction latency time\n@@ -5805,10 +5805,10 @@ of insn @samp{store} (not a stored value).\n @findex final_absence_set\n @cindex VLIW\n @cindex RISC\n-Usually the following three constructions are used to describe\n-@acronym{VLIW} processors (more correctly to describe a placement of\n-small insns into @acronym{VLIW} insn slots).  Although they can be\n-used for @acronym{RISC} processors too.\n+The following five constructions are usually used to describe\n+@acronym{VLIW} processors, or more precisely, to describe a placement\n+of small instructions into @acronym{VLIW} instruction slots.  They\n+can be used for @acronym{RISC} processors, too.\n \n @smallexample\n (exclusion_set @var{unit-names} @var{unit-names})"}]}