{"sha": "6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzMWY1NDRkZGY2NDU3MWI1ZDgzYzU5YTliYWM2YTVmYzNkMDE4Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T12:37:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T12:37:35Z"}, "message": "[multiple changes]\n\n2015-10-23  Steve Baird  <baird@adacore.com>\n\n\t* a-cbdlli.ads, a-cbhama.ads, a-cbhase.ads, a-cbmutr.ads,\n\ta-cborma.ads, a-cborse.ads, a-cbprqu.ads, a-cbsyqu.ads,\n\ta-cdlili.ads, a-cfdlli.ads, a-cfhama.ads, a-cfhase.ads,\n\ta-cfinve.ads, a-cforma.ads, a-cforse.ads, a-cidlli.ads,\n\ta-cihama.ads, a-cihase.ads, a-cimutr.ads, a-ciorma.ads,\n\ta-ciormu.ads, a-ciorse.ads, a-coboho.ads, a-cobove.ads,\n\ta-cofove.ads, a-cohama.ads, a-cohase.ads, a-coinho.ads,\n\ta-coinho-shared.ads, a-coinve.ads, a-comutr.ads, a-conhel.ads,\n\ta-convec.ads, a-coorma.ads, a-coormu.ads, a-coorse.ads,\n\ta-cuprqu.ads, a-cusyqu.ads, a-rbtgbo.ads: Add spec Annotate\n\tpragmas.\n\t* a-cbdlli.adb, a-cbhama.adb, a-cbhase.adb, a-cbmutr.adb,\n\ta-cborma.adb, a-cborse.adb, a-cbprqu.adb, a-cbsyqu.adb,\n\ta-cdlili.adb, a-cfdlli.adb, a-cfhama.adb, a-cfhase.adb,\n\ta-cfinve.adb, a-cforma.adb, a-cforse.adb, a-cidlli.adb,\n\ta-cihama.adb, a-cihase.adb, a-cimutr.adb, a-ciorma.adb,\n\ta-ciormu.adb, a-ciorse.adb, a-coboho.adb, a-cobove.adb,\n\ta-cofove.adb, a-cohama.adb, a-cohase.adb, a-coinho.adb,\n\ta-coinho-shared.adb, a-coinve.adb, a-comutr.adb, a-conhel.adb,\n\ta-convec.adb, a-coorma.adb, a-coormu.adb, a-coorse.adb,\n\ta-cuprqu.adb, a-cusyqu.adb, a-rbtgbo.adb: Remove body Annotate\n\tpragmas.\n\n2015-10-23  Vincent Celier  <celier@adacore.com>\n\n\t* gnatname.adb: When gnatname is invoked with a project file,\n\tspecified with switch -P, if gprname is available, gnatname will\n\tinvoke gprname, with the target if it is a cross gnatname.\n\n2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n\n\t* exp_ch4.adb: Fix typo.\n\t* exp_ch6.adb: Update comment.\n\t* exp_attr.adb (Expand_Min_Max_Attribute): Simplify expansion.\n\t* exp_aggr.adb (Convert_To_Positional): Only convert to\n\tpositional when generating C in case of an object declaration.\n\t(In_Object_Declaration): New.\n\t(Late_Expansion): Adapt to trees generated by Modify_Tree_For_C.\n\t* sinfo.ads: Update documentation.\n\n2015-10-23  Joel Brobecker  <brobecker@adacore.com brobecker>\n\n\t* sigtramp.h (struct sigcontext, struct ucontext): Remove declarations,\n\tand replace them by include of corresponding header file.\n\nFrom-SVN: r229243", "tree": {"sha": "7d9c8ad8c8c46bff64f35a97a9bdc70d1ff72429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d9c8ad8c8c46bff64f35a97a9bdc70d1ff72429"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/comments", "author": null, "committer": null, "parents": [{"sha": "d742bfc0094db87c2c8c4f061d649ff4816b56bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d742bfc0094db87c2c8c4f061d649ff4816b56bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d742bfc0094db87c2c8c4f061d649ff4816b56bc"}], "stats": {"total": 370, "additions": 222, "deletions": 148}, "files": [{"sha": "7d6f607ec1f3d76722dcec0908bdd00b692a3e1a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -1,3 +1,50 @@\n+2015-10-23  Steve Baird  <baird@adacore.com>\n+\n+\t* a-cbdlli.ads, a-cbhama.ads, a-cbhase.ads, a-cbmutr.ads,\n+\ta-cborma.ads, a-cborse.ads, a-cbprqu.ads, a-cbsyqu.ads,\n+\ta-cdlili.ads, a-cfdlli.ads, a-cfhama.ads, a-cfhase.ads,\n+\ta-cfinve.ads, a-cforma.ads, a-cforse.ads, a-cidlli.ads,\n+\ta-cihama.ads, a-cihase.ads, a-cimutr.ads, a-ciorma.ads,\n+\ta-ciormu.ads, a-ciorse.ads, a-coboho.ads, a-cobove.ads,\n+\ta-cofove.ads, a-cohama.ads, a-cohase.ads, a-coinho.ads,\n+\ta-coinho-shared.ads, a-coinve.ads, a-comutr.ads, a-conhel.ads,\n+\ta-convec.ads, a-coorma.ads, a-coormu.ads, a-coorse.ads,\n+\ta-cuprqu.ads, a-cusyqu.ads, a-rbtgbo.ads: Add spec Annotate\n+\tpragmas.\n+\t* a-cbdlli.adb, a-cbhama.adb, a-cbhase.adb, a-cbmutr.adb,\n+\ta-cborma.adb, a-cborse.adb, a-cbprqu.adb, a-cbsyqu.adb,\n+\ta-cdlili.adb, a-cfdlli.adb, a-cfhama.adb, a-cfhase.adb,\n+\ta-cfinve.adb, a-cforma.adb, a-cforse.adb, a-cidlli.adb,\n+\ta-cihama.adb, a-cihase.adb, a-cimutr.adb, a-ciorma.adb,\n+\ta-ciormu.adb, a-ciorse.adb, a-coboho.adb, a-cobove.adb,\n+\ta-cofove.adb, a-cohama.adb, a-cohase.adb, a-coinho.adb,\n+\ta-coinho-shared.adb, a-coinve.adb, a-comutr.adb, a-conhel.adb,\n+\ta-convec.adb, a-coorma.adb, a-coormu.adb, a-coorse.adb,\n+\ta-cuprqu.adb, a-cusyqu.adb, a-rbtgbo.adb: Remove body Annotate\n+\tpragmas.\n+\n+2015-10-23  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatname.adb: When gnatname is invoked with a project file,\n+\tspecified with switch -P, if gprname is available, gnatname will\n+\tinvoke gprname, with the target if it is a cross gnatname.\n+\n+2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_ch4.adb: Fix typo.\n+\t* exp_ch6.adb: Update comment.\n+\t* exp_attr.adb (Expand_Min_Max_Attribute): Simplify expansion.\n+\t* exp_aggr.adb (Convert_To_Positional): Only convert to\n+\tpositional when generating C in case of an object declaration.\n+\t(In_Object_Declaration): New.\n+\t(Late_Expansion): Adapt to trees generated by Modify_Tree_For_C.\n+\t* sinfo.ads: Update documentation.\n+\n+2015-10-23  Joel Brobecker  <brobecker@adacore.com brobecker>\n+\n+\t* sigtramp.h (struct sigcontext, struct ucontext): Remove declarations,\n+\tand replace them by include of corresponding header file.\n+\n 2015-10-23  Bob Duff  <duff@adacore.com>\n \n \t* a-convec.adb (Copy): Make sure C is initialized"}, {"sha": "c279943605325f37df81ef156e697497a9ffd606", "filename": "gcc/ada/a-cbdlli.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbdlli.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -31,8 +31,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Doubly_Linked_Lists is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "8489153917a6d73451a6c4616f208a5ff7810309", "filename": "gcc/ada/a-cbdlli.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbdlli.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -44,6 +44,7 @@ generic\n       return Boolean is <>;\n \n package Ada.Containers.Bounded_Doubly_Linked_Lists is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Pure;\n    pragma Remote_Types;\n "}, {"sha": "86c57e737ad0787a22cf22599d95521215c163e0", "filename": "gcc/ada/a-cbhama.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhama.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -41,8 +41,6 @@ with System;  use type System.Address;\n \n package body Ada.Containers.Bounded_Hashed_Maps is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "0bab22e13b6adff733999720742963a370b5c3f3", "filename": "gcc/ada/a-cbhama.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhama.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -46,6 +46,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Bounded_Hashed_Maps is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Pure;\n    pragma Remote_Types;\n "}, {"sha": "59b0bdb99de30230ca0b4f9cf6923f70486fe666", "filename": "gcc/ada/a-cbhase.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhase.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -41,8 +41,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Hashed_Sets is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "1023fc5046446375474f2503dee2498dfb71a584", "filename": "gcc/ada/a-cbhase.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhase.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -49,6 +49,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Bounded_Hashed_Sets is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Pure;\n    pragma Remote_Types;\n "}, {"sha": "3fe986d1c9ae2ff8d23352b7949f0d73ba2326b1", "filename": "gcc/ada/a-cbmutr.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbmutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbmutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbmutr.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -32,8 +32,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Multiway_Trees is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "660019760319014d970dc56aa119511bf7394ef0", "filename": "gcc/ada/a-cbmutr.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbmutr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbmutr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbmutr.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -42,6 +42,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Bounded_Multiway_Trees is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Pure;\n    pragma Remote_Types;\n "}, {"sha": "611e8953e1687b4f50cc3627d0c9ccb16453ef75", "filename": "gcc/ada/a-cborma.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cborma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cborma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborma.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -41,8 +41,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Ordered_Maps is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "7aa6e6c4ef687957f94fa5f7d02d76a25054556d", "filename": "gcc/ada/a-cborma.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cborma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cborma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborma.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -45,6 +45,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Bounded_Ordered_Maps is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Pure;\n    pragma Remote_Types;\n "}, {"sha": "85d65666cdc632dcba1b89a226984f50f25ed9c3", "filename": "gcc/ada/a-cborse.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cborse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cborse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborse.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -44,8 +44,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Ordered_Sets is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "f342ab81b9affda55eaea15f968a62c7a98b9c98", "filename": "gcc/ada/a-cborse.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cborse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cborse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborse.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -45,6 +45,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Bounded_Ordered_Sets is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Pure;\n    pragma Remote_Types;\n "}, {"sha": "8256d8621156f1608aba9ccc28017072c382b86d", "filename": "gcc/ada/a-cbprqu.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbprqu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbprqu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbprqu.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2011-2014, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2011-2015, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,8 +29,6 @@\n \n package body Ada.Containers.Bounded_Priority_Queues is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    package body Implementation is\n \n       -------------"}, {"sha": "932e607a90a9b7822a839b4341c7c88bb2b4edfc", "filename": "gcc/ada/a-cbprqu.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbprqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbprqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbprqu.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -52,6 +52,7 @@ generic\n    Default_Ceiling  : System.Any_Priority := System.Priority'Last;\n \n package Ada.Containers.Bounded_Priority_Queues is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n \n    package Implementation is"}, {"sha": "0f29d9f8115c1a643895dcb68a21b70dc8cf1093", "filename": "gcc/ada/a-cbsyqu.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbsyqu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbsyqu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbsyqu.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2011-2014, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2011-2015, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,8 +29,6 @@\n \n package body Ada.Containers.Bounded_Synchronized_Queues is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    package body Implementation is\n \n       -------------"}, {"sha": "e22e0823de3251c6be24b56771ee7b1a60486a6d", "filename": "gcc/ada/a-cbsyqu.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbsyqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cbsyqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbsyqu.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -42,6 +42,7 @@ generic\n    Default_Ceiling  : System.Any_Priority := System.Priority'Last;\n \n package Ada.Containers.Bounded_Synchronized_Queues is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n \n    package Implementation is"}, {"sha": "011c395073097c18a70bff29188b13fa8c587162", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -33,8 +33,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Doubly_Linked_Lists is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "a1bc17cb020fff59cbc2fdd89cb450285948957e", "filename": "gcc/ada/a-cdlili.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cdlili.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cdlili.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -44,6 +44,7 @@ generic\n       return Boolean is <>;\n \n package Ada.Containers.Doubly_Linked_Lists is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "6fed4cce00d00920fcf4a443ff9e8c0d61da00c9", "filename": "gcc/ada/a-cfdlli.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -30,7 +30,6 @@ with System;  use type System.Address;\n package body Ada.Containers.Formal_Doubly_Linked_Lists with\n   SPARK_Mode => Off\n is\n-   pragma Annotate (CodePeer, Skip_Analysis);\n \n    -----------------------\n    -- Local Subprograms --"}, {"sha": "36e1869ebd825158ad01fca06bbd617aebba9c47", "filename": "gcc/ada/a-cfdlli.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -66,6 +66,7 @@ package Ada.Containers.Formal_Doubly_Linked_Lists with\n   SPARK_Mode\n is\n    pragma Annotate (GNATprove, External_Axiomatization);\n+   pragma Annotate (CodePeer, Skip_Analysis);\n \n    type List (Capacity : Count_Type) is private with\n      Iterable => (First       => First,"}, {"sha": "7fd9b7f7bb4cad75aa35a006a59df0a3bf810d39", "filename": "gcc/ada/a-cfhama.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhama.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,6 @@ with System; use type System.Address;\n package body Ada.Containers.Formal_Hashed_Maps with\n   SPARK_Mode => Off\n is\n-   pragma Annotate (CodePeer, Skip_Analysis);\n \n    -----------------------\n    -- Local Subprograms --"}, {"sha": "8d6e96a3c58907c7cf671b952ab832ef93c4d9af", "filename": "gcc/ada/a-cfhama.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhama.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -70,6 +70,7 @@ package Ada.Containers.Formal_Hashed_Maps with\n   SPARK_Mode\n is\n    pragma Annotate (GNATprove, External_Axiomatization);\n+   pragma Annotate (CodePeer, Skip_Analysis);\n \n    type Map (Capacity : Count_Type; Modulus : Hash_Type) is private with\n      Iterable => (First       => First,"}, {"sha": "cc900f356aaefd77c405431c5f551b17e64f645a", "filename": "gcc/ada/a-cfhase.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -38,7 +38,6 @@ with System; use type System.Address;\n package body Ada.Containers.Formal_Hashed_Sets with\n   SPARK_Mode => Off\n is\n-   pragma Annotate (CodePeer, Skip_Analysis);\n \n    -----------------------\n    -- Local Subprograms --"}, {"sha": "7ab161168ef33c62733b4e471a08f16fd815f0c3", "filename": "gcc/ada/a-cfhase.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -72,6 +72,7 @@ package Ada.Containers.Formal_Hashed_Sets with\n   SPARK_Mode\n is\n    pragma Annotate (GNATprove, External_Axiomatization);\n+   pragma Annotate (CodePeer, Skip_Analysis);\n \n    type Set (Capacity : Count_Type; Modulus : Hash_Type) is private with\n      Iterable => (First       => First,"}, {"sha": "b520d65f020975be743fcf526e34914e752f718d", "filename": "gcc/ada/a-cfinve.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfinve.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -28,7 +28,6 @@\n package body Ada.Containers.Formal_Indefinite_Vectors with\n   SPARK_Mode => Off\n is\n-   pragma Annotate (CodePeer, Skip_Analysis);\n \n    function H (New_Item : Element_Type) return Holder renames To_Holder;\n    function E (Container : Holder) return Element_Type renames Get;"}, {"sha": "e76ae8d89268b774f5f00e4675cb1a200dcd3183", "filename": "gcc/ada/a-cfinve.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cfinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfinve.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -59,6 +59,7 @@ package Ada.Containers.Formal_Indefinite_Vectors with\n   SPARK_Mode => On\n is\n    pragma Annotate (GNATprove, External_Axiomatization);\n+   pragma Annotate (CodePeer, Skip_Analysis);\n \n    subtype Extended_Index is Index_Type'Base\n    range Index_Type'First - 1 .."}, {"sha": "4bf302ded63a9b8dc7274b26f08d64de25fafe88", "filename": "gcc/ada/a-cforma.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cforma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cforma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforma.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,6 @@ with System; use type System.Address;\n package body Ada.Containers.Formal_Ordered_Maps with\n   SPARK_Mode => Off\n is\n-   pragma Annotate (CodePeer, Skip_Analysis);\n \n    -----------------------------\n    -- Node Access Subprograms --"}, {"sha": "018a21bd6df35053afdb082dd4baba21c48b152a", "filename": "gcc/ada/a-cforma.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cforma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cforma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforma.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -71,6 +71,7 @@ package Ada.Containers.Formal_Ordered_Maps with\n   SPARK_Mode\n is\n    pragma Annotate (GNATprove, External_Axiomatization);\n+   pragma Annotate (CodePeer, Skip_Analysis);\n \n    function Equivalent_Keys (Left, Right : Key_Type) return Boolean with\n      Global => null;"}, {"sha": "42a8503f8a81a43bb07ec134fc0b990e5443a883", "filename": "gcc/ada/a-cforse.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cforse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cforse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -41,7 +41,6 @@ with System; use type System.Address;\n package body Ada.Containers.Formal_Ordered_Sets with\n   SPARK_Mode => Off\n is\n-   pragma Annotate (CodePeer, Skip_Analysis);\n \n    ------------------------------\n    -- Access to Fields of Node --"}, {"sha": "f7f03ca4f5f814647030a2ae7735d1065d4bf03d", "filename": "gcc/ada/a-cforse.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cforse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cforse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -69,6 +69,7 @@ package Ada.Containers.Formal_Ordered_Sets with\n   SPARK_Mode\n is\n    pragma Annotate (GNATprove, External_Axiomatization);\n+   pragma Annotate (CodePeer, Skip_Analysis);\n \n    function Equivalent_Elements (Left, Right : Element_Type) return Boolean\n    with"}, {"sha": "58c1e938ebfc6088778903ff46daa7921108e6d4", "filename": "gcc/ada/a-cidlli.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -33,8 +33,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "44dc32d98ca66469dab5d9a470af633a73405081", "filename": "gcc/ada/a-cidlli.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cidlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cidlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -44,6 +44,7 @@ generic\n       return Boolean is <>;\n \n package Ada.Containers.Indefinite_Doubly_Linked_Lists is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "f81bfc8a7d7df14bdbad6af75813900678d3441d", "filename": "gcc/ada/a-cihama.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -41,8 +41,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Hashed_Maps is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "5ad65886c144fae653a83a72b21e92664c2ed734", "filename": "gcc/ada/a-cihama.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cihama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cihama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -46,6 +46,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Hashed_Maps is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "ea7ee2211b427b8aef7ac8d954ebf8a8d1b5184f", "filename": "gcc/ada/a-cihase.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cihase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cihase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -43,8 +43,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Hashed_Sets is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "2eae9d22d2f8826a14ef62b440f9b868dcfd8b76", "filename": "gcc/ada/a-cihase.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cihase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cihase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -49,6 +49,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Hashed_Sets is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "756b512c99096c1083c10a15081bd4c297ecc914", "filename": "gcc/ada/a-cimutr.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cimutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cimutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cimutr.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -33,8 +33,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Multiway_Trees is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "7edb0d13ab07684af8ecb7df82170a33fc0ff8a8", "filename": "gcc/ada/a-cimutr.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cimutr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cimutr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cimutr.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -43,6 +43,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Multiway_Trees is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "5d07151271d746e207be801b73aabf311674caa8", "filename": "gcc/ada/a-ciorma.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -40,7 +40,6 @@ pragma Elaborate_All (Ada.Containers.Red_Black_Trees.Generic_Keys);\n with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Ordered_Maps is\n-   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Suppress (All_Checks);\n \n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");"}, {"sha": "fa657552a1a62d2d997e22d0d36b1f8eb1032587", "filename": "gcc/ada/a-ciorma.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -45,6 +45,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Ordered_Maps is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "4bf00c61cbdba21836b29693baddfdcb4daff62e", "filename": "gcc/ada/a-ciormu.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -42,8 +42,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Ordered_Multisets is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "4eab5b1dd499cd7dbf586706cf952b1b3dc42be9", "filename": "gcc/ada/a-ciormu.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -44,6 +44,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Ordered_Multisets is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "6ebc1432162a9b0958efcf094519cdca1fa05e52", "filename": "gcc/ada/a-ciorse.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -44,8 +44,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Ordered_Sets is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "2e1c018e188a97b417633fb9110123bd1d64df17", "filename": "gcc/ada/a-ciorse.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-ciorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -45,6 +45,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Ordered_Sets is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "75fc638759f89c90b8f99ad74aaa515c40e7af2f", "filename": "gcc/ada/a-coboho.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coboho.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coboho.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coboho.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -29,8 +29,6 @@ with Unchecked_Conversion;\n \n package body Ada.Containers.Bounded_Holders is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    function Size_In_Storage_Elements (Element : Element_Type) return Natural;\n    --  This returns the size of Element in storage units. It raises an\n    --  exception if the size is not a multiple of Storage_Unit, or if the size"}, {"sha": "67b27f25d6d29bc6a30ad711902ac25bb40e47e4", "filename": "gcc/ada/a-coboho.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coboho.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coboho.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coboho.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -38,6 +38,8 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Bounded_Holders is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n+\n    --  This package is patterned after Ada.Containers.Indefinite_Holders. It is\n    --  used to treat indefinite subtypes as definite, but without using heap\n    --  allocation. For example, you might like to say:"}, {"sha": "59d6c27350a34b810d270323ed39ec7042022d36", "filename": "gcc/ada/a-cobove.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cobove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cobove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cobove.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -33,8 +33,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Vectors is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "c31570293444d714e09df2657bf40ef44d779e7b", "filename": "gcc/ada/a-cobove.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cobove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cobove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cobove.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -44,6 +44,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Bounded_Vectors is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Pure;\n    pragma Remote_Types;\n "}, {"sha": "ac8208593b62d446b67014664277d54fc87956c8", "filename": "gcc/ada/a-cofove.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cofove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cofove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -33,7 +33,6 @@ with System; use type System.Address;\n package body Ada.Containers.Formal_Vectors with\n   SPARK_Mode => Off\n is\n-   pragma Annotate (CodePeer, Skip_Analysis);\n \n    Growth_Factor : constant := 2;\n    --  When growing a container, multiply current capacity by this. Doubling"}, {"sha": "e8a3c9463181252c07446429faf27f4218457a2f", "filename": "gcc/ada/a-cofove.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cofove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cofove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -50,6 +50,7 @@ package Ada.Containers.Formal_Vectors with\n   SPARK_Mode\n is\n    pragma Annotate (GNATprove, External_Axiomatization);\n+   pragma Annotate (CodePeer, Skip_Analysis);\n \n    subtype Extended_Index is Index_Type'Base\n    range Index_Type'First - 1 .."}, {"sha": "20a48b6d6c20c6cf301a9b469ef2a13379826d50", "filename": "gcc/ada/a-cohama.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cohama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cohama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -41,8 +41,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Hashed_Maps is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "7443b545e8653847846232f61b129fa8e4ad68dc", "filename": "gcc/ada/a-cohama.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cohama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cohama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -46,6 +46,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Hashed_Maps is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "5f31e58f38fee48078d6ae4f37c234db361200da", "filename": "gcc/ada/a-cohase.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cohase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cohase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -43,8 +43,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Hashed_Sets is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "681087a2913b5c63d27c22f210e9f47539421c60", "filename": "gcc/ada/a-cohase.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -49,6 +49,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Hashed_Sets is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "81732b9f5510194bdd6563ebf9b5176454ea0f97", "filename": "gcc/ada/a-coinho-shared.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinho-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinho-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -36,8 +36,6 @@ with Ada.Unchecked_Deallocation;\n \n package body Ada.Containers.Indefinite_Holders is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    procedure Free is\n      new Ada.Unchecked_Deallocation (Element_Type, Element_Access);\n "}, {"sha": "e5dfb54325696bc9274e067235e4fee04bc220c5", "filename": "gcc/ada/a-coinho-shared.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinho-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinho-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -42,6 +42,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Holders is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate (Indefinite_Holders);\n    pragma Remote_Types (Indefinite_Holders);\n "}, {"sha": "e9f40aca2071e4314984dc746ab57086915be238", "filename": "gcc/ada/a-coinho.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinho.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinho.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2012-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2012-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,8 +29,6 @@ with Ada.Unchecked_Deallocation;\n \n package body Ada.Containers.Indefinite_Holders is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    procedure Free is\n      new Ada.Unchecked_Deallocation (Element_Type, Element_Access);\n "}, {"sha": "7cfd193ca3c60e51527f7529922fa0eca12b1814", "filename": "gcc/ada/a-coinho.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinho.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinho.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -37,6 +37,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Holders is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate (Indefinite_Holders);\n    pragma Remote_Types (Indefinite_Holders);\n "}, {"sha": "7843b5e1348ee72fd1415e785595b73d6aeb70cf", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -34,8 +34,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Vectors is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "8be2121dee1462588ac7da506b508ae1b4b2202e", "filename": "gcc/ada/a-coinve.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -44,6 +44,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Vectors is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "68d49aa4abda26e591262e189a7270dd9a2a2882", "filename": "gcc/ada/a-comutr.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-comutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-comutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comutr.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -34,8 +34,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Multiway_Trees is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "ef556969883ee8457af6933c8d6e5e62afcdf66a", "filename": "gcc/ada/a-comutr.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-comutr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-comutr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comutr.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -43,6 +43,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Multiway_Trees is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "f433250000abecbc2f55ba5c9bf374cfe1c599cb", "filename": "gcc/ada/a-conhel.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-conhel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-conhel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-conhel.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -29,8 +29,6 @@ package body Ada.Containers.Helpers is\n \n    package body Generic_Implementation is\n \n-      pragma Annotate (CodePeer, Skip_Analysis);\n-\n       use type SAC.Atomic_Unsigned;\n \n       ------------"}, {"sha": "74e51518fb08e913a3cd9f19b4008ec05620968f", "filename": "gcc/ada/a-conhel.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-conhel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-conhel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-conhel.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -29,6 +29,7 @@ with Ada.Finalization;\n with System.Atomic_Counters;\n \n package Ada.Containers.Helpers is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Pure;\n \n    --  Miscellaneous helpers shared among various containers"}, {"sha": "380a10b6a120fa4a5e329decb900fbaca66b2454", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -34,8 +34,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Vectors is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "5e0de79c227dc2ea544e464e03d61aa03a5f179e", "filename": "gcc/ada/a-convec.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-convec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-convec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -44,6 +44,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Vectors is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "6083b4cf45b7000759e2170a7fd3d5f57176f5d7", "filename": "gcc/ada/a-coorma.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -41,8 +41,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Ordered_Maps is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "3034a2ec8501d8b8a8f022b87f34f37f84db9c4a", "filename": "gcc/ada/a-coorma.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -45,6 +45,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Ordered_Maps is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "75969d0596b9ca5581eb19f3527ba63f410d93ff", "filename": "gcc/ada/a-coormu.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -42,8 +42,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Ordered_Multisets is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "5fd8a81edd22d08ed9478728f662bfd5dd5b7e29", "filename": "gcc/ada/a-coormu.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -43,6 +43,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Ordered_Multisets is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "78345c9ac813ebf3071dc5ce00f5e506129af0f0", "filename": "gcc/ada/a-coorse.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -44,8 +44,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Ordered_Sets is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "1260fba05ccf6af14c7feccefad2419bdb1916cc", "filename": "gcc/ada/a-coorse.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-coorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -45,6 +45,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Ordered_Sets is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n    pragma Remote_Types;\n "}, {"sha": "e6947862a203228f9e61c8bb873ecb1d05c74a8a", "filename": "gcc/ada/a-cuprqu.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cuprqu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cuprqu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cuprqu.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2011-2014, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2011-2015, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,8 +31,6 @@ with Ada.Unchecked_Deallocation;\n \n package body Ada.Containers.Unbounded_Priority_Queues is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    package body Implementation is\n \n       -----------------------"}, {"sha": "4cc000df60e51c09fb3e1ae678669732f987e710", "filename": "gcc/ada/a-cuprqu.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cuprqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cuprqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cuprqu.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -50,6 +50,7 @@ generic\n    Default_Ceiling : System.Any_Priority := System.Priority'Last;\n \n package Ada.Containers.Unbounded_Priority_Queues is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n \n    package Implementation is"}, {"sha": "4183dcba1fee35f8b36862917f6e81662fb5d61d", "filename": "gcc/ada/a-cusyqu.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cusyqu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cusyqu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cusyqu.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2011-2014, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2011-2015, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,8 +31,6 @@ with Ada.Unchecked_Deallocation;\n \n package body Ada.Containers.Unbounded_Synchronized_Queues is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    package body Implementation is\n \n       -----------------------"}, {"sha": "7efdbf4b2a3ba6245a776d840ef0a8fefb468410", "filename": "gcc/ada/a-cusyqu.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cusyqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-cusyqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cusyqu.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -42,6 +42,7 @@ generic\n    Default_Ceiling : System.Any_Priority := System.Priority'Last;\n \n package Ada.Containers.Unbounded_Synchronized_Queues is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Preelaborate;\n \n    package Implementation is"}, {"sha": "acf2ccb01c05db03e1edc4543cc6013109196238", "filename": "gcc/ada/a-rbtgbo.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-rbtgbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-rbtgbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgbo.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -39,8 +39,6 @@ with System;  use type System.Address;\n \n package body Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n \n-   pragma Annotate (CodePeer, Skip_Analysis);\n-\n    pragma Warnings (Off, \"variable \"\"Busy*\"\" is not referenced\");\n    pragma Warnings (Off, \"variable \"\"Lock*\"\" is not referenced\");\n    --  See comment in Ada.Containers.Helpers"}, {"sha": "4045182343a569ae4deb5a96094c5ad37ab62ad6", "filename": "gcc/ada/a-rbtgbo.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-rbtgbo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fa-rbtgbo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgbo.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -61,6 +61,7 @@ generic\n       Color : Color_Type) is <>;\n \n package Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n+   pragma Annotate (CodePeer, Skip_Analysis);\n    pragma Pure;\n \n    function Min (Tree : Tree_Type'Class; Node : Count_Type) return Count_Type;"}, {"sha": "4864fbfbb222122fbf9ca8bac249483c1e1a1f10", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -88,6 +88,9 @@ package body Exp_Aggr is\n    --  N is an aggregate (record or array). Checks the presence of default\n    --  initialization (<>) in any component (Ada 2005: AI-287).\n \n+   function In_Object_Declaration (N : Node_Id) return Boolean;\n+   --  Return True if N is part of an object declaration, False otherwise\n+\n    function Is_Static_Dispatch_Table_Aggregate (N : Node_Id) return Boolean;\n    --  Returns true if N is an aggregate used to initialize the components\n    --  of a statically allocated dispatch table.\n@@ -3897,6 +3900,14 @@ package body Exp_Aggr is\n    --  Start of processing for Convert_To_Positional\n \n    begin\n+      --  Only convert to positional when generating C in case of an\n+      --  object declaration, this is the only case where aggregates are\n+      --  supported in C.\n+\n+      if Modify_Tree_For_C and then not In_Object_Declaration (N) then\n+         return;\n+      end if;\n+\n       --  Ada 2005 (AI-287): Do not convert in case of default initialized\n       --  components because in this case will need to call the corresponding\n       --  IP procedure.\n@@ -6038,6 +6049,12 @@ package body Exp_Aggr is\n       elsif Type_May_Have_Bit_Aligned_Components (Typ) then\n          Convert_To_Assignments (N, Typ);\n \n+      --  When generating C, only generate an aggregate when declaring objects\n+      --  since C does not support aggregates in e.g. assignment statements.\n+\n+      elsif Modify_Tree_For_C and then not In_Object_Declaration (N) then\n+         Convert_To_Assignments (N, Typ);\n+\n       --  In all other cases, build a proper aggregate to be handled by gigi\n \n       else\n@@ -6408,6 +6425,24 @@ package body Exp_Aggr is\n       end if;\n    end Is_Delayed_Aggregate;\n \n+   ---------------------------\n+   -- In_Object_Declaration --\n+   ---------------------------\n+\n+   function In_Object_Declaration (N : Node_Id) return Boolean is\n+      P : Node_Id := Parent (N);\n+   begin\n+      while Present (P) loop\n+         if Nkind (P) = N_Object_Declaration then\n+            return True;\n+         end if;\n+\n+         P := Parent (P);\n+      end loop;\n+\n+      return False;\n+   end In_Object_Declaration;\n+\n    ----------------------------------------\n    -- Is_Static_Dispatch_Table_Aggregate --\n    ----------------------------------------\n@@ -6465,10 +6500,7 @@ package body Exp_Aggr is\n       Aggr_Code : List_Id;\n \n    begin\n-      if Is_Record_Type (Etype (N)) then\n-         Aggr_Code := Build_Record_Aggr_Code (N, Typ, Target);\n-\n-      else pragma Assert (Is_Array_Type (Etype (N)));\n+      if Is_Array_Type (Etype (N)) then\n          Aggr_Code :=\n            Build_Array_Aggr_Code\n              (N           => N,\n@@ -6477,6 +6509,10 @@ package body Exp_Aggr is\n               Into        => Target,\n               Scalar_Comp => Is_Scalar_Type (Component_Type (Typ)),\n               Indexes     => No_List);\n+      else\n+         --  Directly or indirectly (e.g. access protected procedure) a record\n+\n+         Aggr_Code := Build_Record_Aggr_Code (N, Typ, Target);\n       end if;\n \n       --  Save the last assignment statement associated with the aggregate"}, {"sha": "e602b4ba12bb81d0199fab11aa5c878e6e27492f", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 20, "deletions": 43, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -1458,68 +1458,45 @@ package body Exp_Attr is\n                      Duplicate_Subexpr_No_Checks (Left),\n                      Duplicate_Subexpr_No_Checks (Right))));\n \n-            --  Otherwise we generate declarations to capture the values. We\n-            --  can't put these declarations inside the if expression, since\n-            --  we could end up with an N_Expression_With_Actions which has\n-            --  declarations in the actions, forbidden for Modify_Tree_For_C.\n+            --  Otherwise we generate declarations to capture the values.\n \n             --  The translation is\n \n-            --    T1 : styp;    --  inserted high up in tree\n-            --    T2 : styp;    --  inserted high up in tree\n-\n             --    do\n-            --      T1 := styp!(Left);\n-            --      T2 := styp!(Right);\n+            --      T1 : constant typ := Left;\n+            --      T2 : constant typ := Right;\n             --    in\n-            --      (if T1 >=|<= T2 then typ!(T1) else typ!(T2))\n+            --      (if T1 >=|<= T2 then T1 else T2)\n             --    end;\n \n-            --  We insert the T1,T2 declarations with Insert_Declaration which\n-            --  inserts these declarations high up in the tree unconditionally.\n-            --  This is safe since no code is associated with the declarations.\n-            --  Here styp is a standard type whose Esize matches the size of\n-            --  our type. We do this because the actual type may be a result of\n-            --  some local declaration which would not be visible at the point\n-            --  where we insert the declarations of T1 and T2.\n-\n             else\n                declare\n-                  T1   : constant Entity_Id := Make_Temporary (Loc, 'T', Left);\n-                  T2   : constant Entity_Id := Make_Temporary (Loc, 'T', Left);\n-                  Styp : constant Entity_Id := Matching_Standard_Type (Typ);\n-\n+                  T1 : constant Entity_Id := Make_Temporary (Loc, 'T', Left);\n+                  T2 : constant Entity_Id := Make_Temporary (Loc, 'T', Right);\n                begin\n-                  Insert_Declaration (N,\n-                    Make_Object_Declaration (Loc,\n-                      Defining_Identifier => T1,\n-                      Object_Definition   => New_Occurrence_Of (Styp, Loc)));\n-\n-                  Insert_Declaration (N,\n-                    Make_Object_Declaration (Loc,\n-                      Defining_Identifier => T2,\n-                      Object_Definition   => New_Occurrence_Of (Styp, Loc)));\n-\n                   Rewrite (N,\n                     Make_Expression_With_Actions (Loc,\n                       Actions => New_List (\n-                        Make_Assignment_Statement (Loc,\n-                          Name       => New_Occurrence_Of (T1, Loc),\n-                          Expression => Unchecked_Convert_To (Styp, Left)),\n-                        Make_Assignment_Statement (Loc,\n-                          Name       => New_Occurrence_Of (T2, Loc),\n-                          Expression => Unchecked_Convert_To (Styp, Right))),\n-\n+                        Make_Object_Declaration (Loc,\n+                          Defining_Identifier => T1,\n+                          Object_Definition   =>\n+                            New_Occurrence_Of (Etype (Left), Loc),\n+                          Constant_Present    => True,\n+                          Expression          => Relocate_Node (Left)),\n+                        Make_Object_Declaration (Loc,\n+                          Defining_Identifier => T2,\n+                          Object_Definition   =>\n+                            New_Occurrence_Of (Etype (Right), Loc),\n+                          Constant_Present    => True,\n+                          Expression          => Relocate_Node (Right))),\n                       Expression =>\n                         Make_If_Expression (Loc,\n                           Expressions => New_List (\n                             Make_Compare\n                               (New_Occurrence_Of (T1, Loc),\n                                New_Occurrence_Of (T2, Loc)),\n-                            Unchecked_Convert_To (Typ,\n-                              New_Occurrence_Of (T1, Loc)),\n-                            Unchecked_Convert_To (Typ,\n-                              New_Occurrence_Of (T2, Loc))))));\n+                               New_Occurrence_Of (T1, Loc),\n+                               New_Occurrence_Of (T2, Loc)))));\n                end;\n             end if;\n "}, {"sha": "fa263b57ac0165a24b14fed5743a0ca6741d623f", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -5165,7 +5165,7 @@ package body Exp_Ch4 is\n       elsif Is_Boolean_Type (Etype (Expression (N))) then\n          Force_Boolean_Evaluation (Expression (N));\n \n-      --  The expression of an expression_with_actions node may not necessarely\n+      --  The expression of an expression_with_actions node may not necessarily\n       --  be Boolean when the node appears in an if expression. In this case do\n       --  the usual forced evaluation to encapsulate potential aliasing.\n "}, {"sha": "c385a2567f5b469dc3e02842fb9c5c0e69a3fb21", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -1990,10 +1990,6 @@ package body Exp_Ch6 is\n                --       Tnnn;\n                --    end;\n \n-               --  Note: this won't do in Modify_Tree_For_C mode, but we\n-               --  will deal with that later (it will require creating a\n-               --  declaration for Temp, using Insert_Declaration) ???\n-\n                declare\n                   Tnnn  : constant Entity_Id := Make_Temporary (Loc, 'T');\n                   FRTyp : constant Entity_Id := Etype (N);"}, {"sha": "5af5d537227df832c2cec7b3b45354012374e108", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -609,6 +609,62 @@ begin\n       Usage;\n    end if;\n \n+   if Create_Project then\n+      declare\n+         Gnatname : constant String_Access :=\n+                      Program_Name (\"gnatname\", \"gnatname\");\n+         Target   : String_Access := null;\n+         Arg_Len  : Positive := Argument_Count;\n+\n+      begin\n+         --  Find the target, if any\n+\n+         if Gnatname.all /= \"gnatname\" then\n+            Target := new String'(Gnatname\n+                                  (Gnatname'First .. Gnatname'Last - 9));\n+            Arg_Len := Arg_Len + 1;\n+         end if;\n+\n+         declare\n+            Gprname : String_Access :=\n+                         Locate_Exec_On_Path (Exec_Name => \"gprname\");\n+            Args : Argument_List (1 .. Arg_Len);\n+            Success : Boolean;\n+\n+         begin\n+            if Gprname /= null then\n+               for J in 1 .. Argument_Count loop\n+                  Args (J) := new String'(Argument (J));\n+               end loop;\n+\n+               --  Add the target if there is one\n+\n+               if Target /= null then\n+                  Args (Args'Last) :=\n+                    new String'(\"--target=\" & Target.all);\n+               end if;\n+\n+               Spawn (Gprname.all, Args, Success);\n+\n+               Free (Gprname);\n+\n+               if Success then\n+                  Exit_Program (E_Success);\n+               end if;\n+            end if;\n+         end;\n+      end;\n+   end if;\n+\n+   if Create_Project then\n+      --  This only happens if gprname is not found or if the invocation of\n+      --  gprname did not succeed.\n+\n+      Write_Line\n+           (\"warning: gnatname -P is obsolete and will not be available \"\n+            & \"in the next release; use gprname instead\");\n+   end if;\n+\n    --  If no Ada or foreign pattern was specified, print the usage and return\n \n    if Patterns.Last (Arguments.Table (Arguments.Last).Name_Patterns) = 0"}, {"sha": "7af6be3466c243ef26902632457da4ec0e37e51e", "filename": "gcc/ada/sigtramp.h", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fsigtramp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fsigtramp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp.h?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -43,19 +43,7 @@ extern \"C\" {\n \n #ifdef __ANDROID__\n #include <stdlib.h>\n-#include <asm/signal.h>\n-#include <asm/sigcontext.h>\n-\n-/* Android SDK doesn't define these structs */\n-typedef struct sigcontext mcontext_t;\n-\n-typedef struct ucontext\n-  {\n-    unsigned long uc_flags;\n-    struct ucontext *uc_link;\n-    stack_t uc_stack;\n-    mcontext_t uc_mcontext;\n-} ucontext_t;\n+#include <sys/ucontext.h>\n #endif\n \n   /* This typedef signature sometimes conflicts with the sighandler_t from"}, {"sha": "218f4bcd3c89576c2a3e969158114d308e51ac53", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6031f544ddf64571b5d83c59a9bac6a5fc3d0182/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=6031f544ddf64571b5d83c59a9bac6a5fc3d0182", "patch": "@@ -728,8 +728,12 @@ package Sinfo is\n    --    Mod for signed integer types is expanded into equivalent expressions\n    --    using Rem (which is % in C) and other C-available operators.\n \n-   --    The Actions list of an Expression_With_Actions node does not contain\n-   --    any declarations,(so that DO X, .. Y IN Z becomes (X, .. Y, Z) in C).\n+   --    Functions returning bounded arrays are transformed into procedures\n+   --    with an extra out parameter, and the calls updated accordingly.\n+\n+   --    Aggregates are only kept unexpanded for object declarations, otherwise\n+   --    they are systematically expanded into loops (for arrays) and\n+   --    individual assignments (for records).\n \n    ------------------------------------\n    -- Description of Semantic Fields --"}]}