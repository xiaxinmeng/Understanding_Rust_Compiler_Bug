{"sha": "9e6f9ad62c66546ac8b475521e840c9661b6fa78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU2ZjlhZDYyYzY2NTQ2YWM4YjQ3NTUyMWU4NDBjOTY2MWI2ZmE3OA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2014-01-16T20:51:24Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-01-16T20:51:24Z"}, "message": "014-01-16  Bernd Schmidt  <bernds@codesourcery.com>\n\n        PR middle-end/56791\n        * reload.c (find_reloads_address_1): Do not use RELOAD_OTHER\n        * when\n        pushing a reload for an autoinc when we had previously reloaded an\n        inner part of the address.\n\nFrom-SVN: r206688", "tree": {"sha": "4e44333489f70b7533424fd42699fe0106d7a26a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e44333489f70b7533424fd42699fe0106d7a26a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e6f9ad62c66546ac8b475521e840c9661b6fa78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6f9ad62c66546ac8b475521e840c9661b6fa78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e6f9ad62c66546ac8b475521e840c9661b6fa78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6f9ad62c66546ac8b475521e840c9661b6fa78/comments", "author": null, "committer": null, "parents": [{"sha": "d1417442bf533b6a06246ef8f1627b196ff7c825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1417442bf533b6a06246ef8f1627b196ff7c825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1417442bf533b6a06246ef8f1627b196ff7c825"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "e07d1aeefe7de9f91251bd2c3f0fbc68b093af20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6f9ad62c66546ac8b475521e840c9661b6fa78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6f9ad62c66546ac8b475521e840c9661b6fa78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e6f9ad62c66546ac8b475521e840c9661b6fa78", "patch": "@@ -1,3 +1,10 @@\n+2014-01-16  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\tPR middle-end/56791\n+\t* reload.c (find_reloads_address_1): Do not use RELOAD_OTHER when\n+\tpushing a reload for an autoinc when we had previously reloaded an\n+\tinner part of the address.\n+\n 2014-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-vectorizer.h (struct _loop_vec_info): Add no_data_dependencies"}, {"sha": "851daf30f291a06f3e0926935d420ddfbe28e437", "filename": "gcc/reload.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6f9ad62c66546ac8b475521e840c9661b6fa78/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6f9ad62c66546ac8b475521e840c9661b6fa78/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=9e6f9ad62c66546ac8b475521e840c9661b6fa78", "patch": "@@ -5563,6 +5563,7 @@ find_reloads_address_1 (enum machine_mode mode, addr_space_t as,\n \n   enum reg_class context_reg_class;\n   RTX_CODE code = GET_CODE (x);\n+  bool reloaded_inner_of_autoinc = false;\n \n   if (context == 1)\n     context_reg_class = INDEX_REG_CLASS;\n@@ -5850,6 +5851,7 @@ find_reloads_address_1 (enum machine_mode mode, addr_space_t as,\n \t\t  find_reloads_address (GET_MODE (tem), &tem, XEXP (tem, 0),\n \t\t\t\t\t&XEXP (tem, 0), opnum, type,\n \t\t\t\t\tind_levels, insn);\n+\t\t  reloaded_inner_of_autoinc = true;\n \t\t  if (!rtx_equal_p (tem, orig))\n \t\t    push_reg_equiv_alt_mem (regno, tem);\n \t\t  /* Put this inside a new increment-expression.  */\n@@ -5898,7 +5900,10 @@ find_reloads_address_1 (enum machine_mode mode, addr_space_t as,\n #endif\n \t\t  && ! (icode != CODE_FOR_nothing\n \t\t\t&& insn_operand_matches (icode, 0, equiv)\n-\t\t\t&& insn_operand_matches (icode, 1, equiv)))\n+\t\t\t&& insn_operand_matches (icode, 1, equiv))\n+\t\t  /* Using RELOAD_OTHER means we emit this and the reload we\n+\t\t     made earlier in the wrong order.  */\n+\t\t  && !reloaded_inner_of_autoinc)\n \t\t{\n \t\t  /* We use the original pseudo for loc, so that\n \t\t     emit_reload_insns() knows which pseudo this"}]}