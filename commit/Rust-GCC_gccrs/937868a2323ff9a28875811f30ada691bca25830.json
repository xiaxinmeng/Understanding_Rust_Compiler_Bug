{"sha": "937868a2323ff9a28875811f30ada691bca25830", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM3ODY4YTIzMjNmZjlhMjg4NzU4MTFmMzBhZGE2OTFiY2EyNTgzMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-12T22:50:59Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-12T22:50:59Z"}, "message": "(alpha_builtin_savregs): Correctly compute ARGSIZE and NREGS.\n\nFrom-SVN: r2867", "tree": {"sha": "d4f76e25175d7a0ca0fd631d1d1de76b66980588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4f76e25175d7a0ca0fd631d1d1de76b66980588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/937868a2323ff9a28875811f30ada691bca25830", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937868a2323ff9a28875811f30ada691bca25830", "html_url": "https://github.com/Rust-GCC/gccrs/commit/937868a2323ff9a28875811f30ada691bca25830", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937868a2323ff9a28875811f30ada691bca25830/comments", "author": null, "committer": null, "parents": [{"sha": "aca49971b61151ad6c0057c2e2087e99d19a1121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca49971b61151ad6c0057c2e2087e99d19a1121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aca49971b61151ad6c0057c2e2087e99d19a1121"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "ca027ec4da4cea8ef3c1088ab5e0d13501101546", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/937868a2323ff9a28875811f30ada691bca25830/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/937868a2323ff9a28875811f30ada691bca25830/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=937868a2323ff9a28875811f30ada691bca25830", "patch": "@@ -1013,7 +1013,7 @@ print_operand (file, x, code)\n }\n \f\n /* Do what is necessary for `va_start'.  The argument is ignored;\n-   We look at the current function to determine if stdargs or varargs\n+   We look at the current function to determine if stdarg or varargs\n    is used and fill in an initial va_list.  A pointer to this constructor\n    is returned.  */\n \n@@ -1023,9 +1023,9 @@ alpha_builtin_saveregs (arglist)\n {\n   rtx block, addr, argsize;\n   tree fntype = TREE_TYPE (current_function_decl);\n-  int stdargs = (TYPE_ARG_TYPES (fntype) != 0\n-\t\t && (TREE_VALUE (tree_last (TYPE_ARG_TYPES (fntype)))\n-\t\t     != void_type_node));\n+  int stdarg = (TYPE_ARG_TYPES (fntype) != 0\n+\t\t&& (TREE_VALUE (tree_last (TYPE_ARG_TYPES (fntype)))\n+\t\t    != void_type_node));\n   int nregs = current_function_args_info;\n \n   /* If we have a variable-sized argument already, we will have used all\n@@ -1034,27 +1034,22 @@ alpha_builtin_saveregs (arglist)\n   if (GET_CODE (current_function_arg_offset_rtx) != CONST_INT)\n     {\n       argsize = plus_constant (current_function_arg_offset_rtx,\n-\t\t\t       ((6 - stdargs) * UNITS_PER_WORD\n-\t\t\t\t+ UNITS_PER_WORD - 1));\n+\t\t\t       (6 * UNITS_PER_WORD + UNITS_PER_WORD - 1));\n       argsize = expand_shift (RSHIFT_EXPR, Pmode, argsize,\n \t\t\t      build_int_2 (3, 0), argsize, 0);\n     }\n   else\n     {\n-      /* If we are using memory, deduct the stdarg adjustment from it,\n-\t otherwise from the number of registers.  Then compute the current\n-\t argument number.  */\n-\n+      /* Compute the number of args in memory and number of arguments already\n+\t processed.  Then adjust the number of registers if this is stdarg.  */\n       int memargs = ((INTVAL (current_function_arg_offset_rtx)\n \t\t      + UNITS_PER_WORD - 1)\n \t\t     / UNITS_PER_WORD);\n \n-      if (memargs)\n-\tmemargs -= stdargs;\n-      else\n-\tnregs -= stdargs;\n-\n       argsize = GEN_INT (MIN (nregs, 6) + memargs);\n+\n+      if (nregs <= 6)\n+\tnregs -= stdarg;\n     }\n \n   /* Allocate the va_list constructor */"}]}