{"sha": "0db78d0a5e95572841a98754dca6c3513a3a334d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRiNzhkMGE1ZTk1NTcyODQxYTk4NzU0ZGNhNmMzNTEzYTNhMzM0ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-10-31T12:29:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-10-31T12:29:02Z"}, "message": "PR libstdc++/87822 fix layout change for nested std::pair\n\nThe introduction of the empty __pair_base base class for PR 86751\nchanged the layout of std::pair<std::pair<...>, ...>. The outer pair and\nits first member both have a base class of the same type, which cannot\nexist at the same address. This causes the first member to be at a\nnon-zero offset.\n\nThe solution is to make the base class depend on the template\nparameters, so that each pair type has a different base class type,\nwhich allows the base classes of the outer pair and its first member to\nhave the same address.\n\n\tPR libstdc++/87822\n\t* include/bits/stl_pair.h (__pair_base): Change to class template.\n\t(pair): Make base class type depend on template parameters.\n\t* testsuite/20_util/pair/87822.cc: New test.\n\nFrom-SVN: r265678", "tree": {"sha": "4f471c309277f6fc04dbe8187e6a65c5c91687f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f471c309277f6fc04dbe8187e6a65c5c91687f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0db78d0a5e95572841a98754dca6c3513a3a334d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db78d0a5e95572841a98754dca6c3513a3a334d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0db78d0a5e95572841a98754dca6c3513a3a334d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db78d0a5e95572841a98754dca6c3513a3a334d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef976be1a23a5171082cf1a569d00573013a175c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef976be1a23a5171082cf1a569d00573013a175c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef976be1a23a5171082cf1a569d00573013a175c"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "ac4df1ad515ed5caad6dfbacebd60966cd0f8660", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db78d0a5e95572841a98754dca6c3513a3a334d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db78d0a5e95572841a98754dca6c3513a3a334d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0db78d0a5e95572841a98754dca6c3513a3a334d", "patch": "@@ -1,3 +1,10 @@\n+2018-10-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/87822\n+\t* include/bits/stl_pair.h (__pair_base): Change to class template.\n+\t(pair): Make base class type depend on template parameters.\n+\t* testsuite/20_util/pair/87822.cc: New test.\n+\n 2018-10-30  Marek Polacek  <polacek@redhat.com>\n \n \tImplement P0892R2, explicit(bool)."}, {"sha": "48af2b02ef975913017d85294cf97a5319e51062", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db78d0a5e95572841a98754dca6c3513a3a334d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db78d0a5e95572841a98754dca6c3513a3a334d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=0db78d0a5e95572841a98754dca6c3513a3a334d", "patch": "@@ -187,7 +187,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   };\n #endif // C++11\n \n-  class __pair_base\n+  template<typename _U1, typename _U2> class __pair_base\n   {\n #if __cplusplus >= 201103L\n     template<typename _T1, typename _T2> friend struct pair;\n@@ -206,7 +206,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _T1, typename _T2>\n     struct pair\n-    : private __pair_base\n+    : private __pair_base<_T1, _T2>\n     {\n       typedef _T1 first_type;    /// @c first_type is the first bound type\n       typedef _T2 second_type;   /// @c second_type is the second bound type"}, {"sha": "cd099d6f9f9fe0674a570ed851e2990f1733fde5", "filename": "libstdc++-v3/testsuite/20_util/pair/87822.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db78d0a5e95572841a98754dca6c3513a3a334d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F87822.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db78d0a5e95572841a98754dca6c3513a3a334d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F87822.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F87822.cc?ref=0db78d0a5e95572841a98754dca6c3513a3a334d", "patch": "@@ -0,0 +1,47 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <utility>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::pair<std::pair<int, int>, int> p;\n+#if __cplusplus >= 201103L\n+  static_assert(sizeof(p) == (3 * sizeof(int)), \"PR libstdc++/87822\");\n+#endif\n+  VERIFY( (void*)&p == (void*)&p.first );\n+}\n+\n+struct empty { };\n+\n+void\n+test02()\n+{\n+  std::pair<std::pair<empty, empty>, empty> p;\n+#if __cplusplus >= 201103L\n+  static_assert(sizeof(p) == (3 * sizeof(empty)), \"PR libstdc++/87822\");\n+#endif\n+  VERIFY( (void*)&p == (void*)&p.first );\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+}"}]}