{"sha": "9f724b6ae48e21f50e0b00461ba30b8c20b43d5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY3MjRiNmFlNDhlMjFmNTBlMGIwMDQ2MWJhMzBiOGMyMGI0M2Q1YQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-01-18T09:39:13Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-01-18T09:39:13Z"}, "message": "decl.c (finish_destructor_body): Convert to vbase pointer here.\n\ncp:\n\t* decl.c (finish_destructor_body): Convert to vbase pointer here.\ntestsuite:\n\t* g++.old-deja/g++.abi/vbase1.C: New test.\n\nFrom-SVN: r39114", "tree": {"sha": "29a0df5076c898f0202634ee73aed7b8e52ac616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29a0df5076c898f0202634ee73aed7b8e52ac616"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a/comments", "author": null, "committer": null, "parents": [{"sha": "522d6614c50ecd386854d7e46010d1b74672f42d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522d6614c50ecd386854d7e46010d1b74672f42d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522d6614c50ecd386854d7e46010d1b74672f42d"}], "stats": {"total": 148, "additions": 140, "deletions": 8}, "files": [{"sha": "56b84835a42ea8e578a590c62b337b0a1fd1762a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9f724b6ae48e21f50e0b00461ba30b8c20b43d5a", "patch": "@@ -1,3 +1,7 @@\n+2001-01-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* decl.c (finish_destructor_body): Convert to vbase pointer here.\n+\n 2001-01-18  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* semantics.c (begin_class_definition): Check we're not inside a"}, {"sha": "e5fd61e73dca2e3b72d57534fbdfa97ca221dc9d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=9f724b6ae48e21f50e0b00461ba30b8c20b43d5a", "patch": "@@ -13862,16 +13862,26 @@ finish_destructor_body ()\n \t       vbases = TREE_CHAIN (vbases))\n \t    {\n \t      tree vbase = TREE_VALUE (vbases);\n+\t      tree base_type = BINFO_TYPE (vbase);\n \n-\t      if (TYPE_HAS_NONTRIVIAL_DESTRUCTOR (BINFO_TYPE (vbase)))\n+\t      if (TYPE_HAS_NONTRIVIAL_DESTRUCTOR (base_type))\n \t\t{\n-\t\t  tree vb = get_vbase\n-\t\t    (BINFO_TYPE (vbase),\n-\t\t     TYPE_BINFO (current_class_type));\n-\t\t  finish_expr_stmt\n-\t\t    (build_scoped_method_call\n-\t\t     (current_class_ref, vb, base_dtor_identifier,\n-\t\t      NULL_TREE));\n+                  tree base_ptr_type = build_pointer_type (base_type);\n+\t          tree expr = current_class_ptr;\n+\t          \n+\t          /* Convert to the basetype here, as we know the layout is\n+                     fixed. What is more, if we let build_method_call do it,\n+                     it will use the vtable, which may have been clobbered\n+                     by the deletion of our primary base.  */\n+                  \n+                  expr = build1 (NOP_EXPR, base_ptr_type, expr);\n+\t          expr = build (PLUS_EXPR, base_ptr_type, expr,\n+\t                        BINFO_OFFSET (vbase));\n+\t          expr = build_indirect_ref (expr, NULL);\n+\t          expr = build_method_call (expr, base_dtor_identifier,\n+\t                                    NULL_TREE, vbase,\n+\t                                    LOOKUP_NORMAL);\n+\t\t  finish_expr_stmt (expr);\n \t\t}\n \t    }\n "}, {"sha": "30643601bffd5a8370a0132fe7213705b62dafc2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f724b6ae48e21f50e0b00461ba30b8c20b43d5a", "patch": "@@ -1,3 +1,7 @@\n+2001-01-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.abi/vbase1.C: New test.\n+\n 2001-01-18  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.pt/crash65.C: New test."}, {"sha": "a85e00d7b508e63d2cbc4005d25e42eb3fb1b5a1", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vbase1.C", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvbase1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f724b6ae48e21f50e0b00461ba30b8c20b43d5a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvbase1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvbase1.C?ref=9f724b6ae48e21f50e0b00461ba30b8c20b43d5a", "patch": "@@ -0,0 +1,114 @@\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 16 Jan 2001 <nathan@codesourcery.com>\n+\n+// Bug 1611. Under the new ABI, the vtable can be clobered during dtoring our\n+// primary vbase. We mustn't use the vtable after that to locate our vbases.\n+\n+#if defined (__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+int *ctorVBase = 0;\n+int *dtorVBase = 0;\n+int *ctorVDerived = 0;\n+int *dtorVDerived = 0;\n+int *ctorB = 0;\n+int *dtorB = 0;\n+\n+struct VBase\n+{\n+  int member;\n+  VBase ()\n+    {\n+      if (ctorVBase) exit (1);\n+      ctorVBase = &member;\n+    }\n+  virtual ~VBase ()\n+    {\n+      if (dtorVBase) exit (2);\n+      dtorVBase = &member;\n+      if (dtorVBase != ctorVBase) exit (3);\n+    }\n+  void Offset () const\n+  {\n+    printf (\"VBase\\n\");\n+    printf (\"  VBase::member %d\\n\", &this->VBase::member - (int *)this);\n+  }\n+};\n+\n+struct VDerived : virtual VBase\n+{\n+  int member;\n+  \n+  VDerived ()\n+    {\n+      if (ctorVDerived) exit (4);\n+      ctorVDerived = &member;\n+    }\n+  virtual ~VDerived ()\n+    {\n+      if (dtorVDerived) exit (5);\n+      dtorVDerived = &member;\n+      if (dtorVDerived != ctorVDerived) exit (6);\n+    }\n+  void Offset () const\n+  {\n+    printf (\"VDerived\\n\");\n+    printf (\"  VBase::member %d\\n\", &this->VBase::member - (int *)this);\n+    printf (\"  VDerived::member %d\\n\", &this->VDerived::member - (int *)this);\n+  }\n+};\n+struct B : virtual VBase\n+{\n+  int member;\n+  void Offset () const\n+  {\n+    printf (\"B\\n\");\n+    printf (\"  VBase::member %d\\n\", &this->VBase::member - (int *)this);\n+    printf (\"  B::member %d\\n\", &this->B::member - (int *)this);\n+  }\n+};\n+struct MostDerived : B, virtual VDerived\n+{\n+  int member;\n+  void Offset () const\n+  {\n+    printf (\"MostDerived\\n\");\n+    printf (\"  VBase::member %d\\n\", &this->VBase::member - (int *)this);\n+    printf (\"  B::member %d\\n\", &this->B::member - (int *)this);\n+    printf (\"  VDerived::member %d\\n\", &this->VDerived::member - (int *)this);\n+    printf (\"  MostDerived::member %d\\n\", &this->MostDerived::member - (int *)this);\n+  }\n+};\n+\n+\n+int main ()\n+{\n+  {\n+    MostDerived dum;\n+    \n+    int *this_ = (int *)&dum;\n+    \n+    if (ctorVBase != &dum.VBase::member)\n+      return 23;\n+    if (ctorVDerived != &dum.VDerived::member)\n+      return 24;\n+    \n+    printf (\"  VBase::member %d\\n\", &dum.VBase::member - this_);\n+    printf (\"  B::member %d\\n\", &dum.B::member - this_);\n+    printf (\"  VDerived::member %d\\n\", &dum.VDerived::member - this_);\n+    printf (\"  MostDerived::member %d\\n\", &dum.MostDerived::member - this_);\n+    dum.MostDerived::Offset ();\n+    dum.B::Offset ();\n+    dum.VDerived::Offset ();\n+    dum.VBase::Offset ();\n+  }\n+  return 0;\n+}\n+#else /* !(defined (__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100) */\n+\n+int main () \n+{\n+}\n+\n+#endif /* !(defined (__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100) */"}]}