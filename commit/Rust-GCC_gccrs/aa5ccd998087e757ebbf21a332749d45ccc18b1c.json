{"sha": "aa5ccd998087e757ebbf21a332749d45ccc18b1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE1Y2NkOTk4MDg3ZTc1N2ViYmYyMWEzMzI3NDlkNDVjY2MxOGIxYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-01-22T15:19:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-01-22T15:19:40Z"}, "message": "stl_algobase.h (__fill_aux(unsigned char*, unsigned char*, const unsigned char&), [...]): Take the character by value.\n\n2007-01-22  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_algobase.h (__fill_aux(unsigned char*,\n\tunsigned char*, const unsigned char&), __fill_aux(signed char*,\n\tsigned char*, const signed char&), __fill_aux(char*, char*,\n\tconst char&), __fill_aux(wchar_t*, wchar_t*, const wchar_t&)):\n\tTake the character by value.\n\t(__fill_n_aux): Likewise.\n\nFrom-SVN: r121056", "tree": {"sha": "36c3335a2466a5a969bf3f681acc5f47da51010d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36c3335a2466a5a969bf3f681acc5f47da51010d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa5ccd998087e757ebbf21a332749d45ccc18b1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5ccd998087e757ebbf21a332749d45ccc18b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5ccd998087e757ebbf21a332749d45ccc18b1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5ccd998087e757ebbf21a332749d45ccc18b1c/comments", "author": null, "committer": null, "parents": [{"sha": "4d8f018e30914defc592def752dbf00af463611e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d8f018e30914defc592def752dbf00af463611e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d8f018e30914defc592def752dbf00af463611e"}], "stats": {"total": 47, "additions": 21, "deletions": 26}, "files": [{"sha": "8cf4f9287a8628c1c2d58437a23d788913df3f6c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5ccd998087e757ebbf21a332749d45ccc18b1c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5ccd998087e757ebbf21a332749d45ccc18b1c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=aa5ccd998087e757ebbf21a332749d45ccc18b1c", "patch": "@@ -1,3 +1,12 @@\n+2007-01-22  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_algobase.h (__fill_aux(unsigned char*,\n+\tunsigned char*, const unsigned char&), __fill_aux(signed char*,\n+\tsigned char*, const signed char&), __fill_aux(char*, char*,\n+\tconst char&), __fill_aux(wchar_t*, wchar_t*, const wchar_t&)):\n+\tTake the character by value.\n+\t(__fill_n_aux): Likewise.\n+\n 2007-01-21  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/30449 (fill, fill_n)"}, {"sha": "c24a4f8d839d3eab9de86ac790d4b7af02d704d7", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 12, "deletions": 26, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5ccd998087e757ebbf21a332749d45ccc18b1c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5ccd998087e757ebbf21a332749d45ccc18b1c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=aa5ccd998087e757ebbf21a332749d45ccc18b1c", "patch": "@@ -580,35 +580,21 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   // Specialization: for char types we can use memset (wmemset).\n   inline void\n-  __fill_aux(unsigned char* __first, unsigned char* __last,\n-\t     const unsigned char& __c)\n-  {\n-    const unsigned char __tmp = __c;\n-    std::memset(__first, __tmp, __last - __first);\n-  }\n+  __fill_aux(unsigned char* __first, unsigned char* __last, unsigned char __c)\n+  { std::memset(__first, __c, __last - __first); }\n \n   inline void\n-  __fill_aux(signed char* __first, signed char* __last,\n-\t     const signed char& __c)\n-  {\n-    const signed char __tmp = __c;\n-    std::memset(__first, static_cast<unsigned char>(__tmp), __last - __first);\n-  }\n+  __fill_aux(signed char* __first, signed char* __last, signed char __c)\n+  { std::memset(__first, static_cast<unsigned char>(__c), __last - __first); }\n \n   inline void\n-  __fill_aux(char* __first, char* __last, const char& __c)\n-  {\n-    const char __tmp = __c;\n-    std::memset(__first, static_cast<unsigned char>(__tmp), __last - __first);\n-  }\n+  __fill_aux(char* __first, char* __last, char __c)\n+  { std::memset(__first, static_cast<unsigned char>(__c), __last - __first); }\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n   inline void\n-  __fill_aux(wchar_t* __first, wchar_t* __last, const wchar_t& __c)\n-  {\n-    const wchar_t __tmp = __c;\n-    std::wmemset(__first, __tmp, __last - __first);\n-  }\n+  __fill_aux(wchar_t* __first, wchar_t* __last, wchar_t __c)\n+  { std::wmemset(__first, __c, __last - __first); }\n #endif\n \n   template<bool>\n@@ -693,23 +679,23 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   template<typename _Size>\n     inline unsigned char*\n-    __fill_n_aux(unsigned char* __first, _Size __n, const unsigned char& __c)\n+    __fill_n_aux(unsigned char* __first, _Size __n, unsigned char __c)\n     {\n       std::__fill_aux(__first, __first + __n, __c);\n       return __first + __n;\n     }\n \n   template<typename _Size>\n     inline signed char*\n-    __fill_n_aux(signed char* __first, _Size __n, const signed char& __c)\n+    __fill_n_aux(signed char* __first, _Size __n, signed char __c)\n     {\n       std::__fill_aux(__first, __first + __n, __c);\n       return __first + __n;\n     }\n \n   template<typename _Size>\n     inline char*\n-    __fill_n_aux(char* __first, _Size __n, const char& __c)\n+    __fill_n_aux(char* __first, _Size __n, char __c)\n     {\n       std::__fill_aux(__first, __first + __n, __c);\n       return __first + __n;\n@@ -718,7 +704,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n #ifdef _GLIBCXX_USE_WCHAR_T\n   template<typename _Size>\n     inline wchar_t*\n-    __fill_n_aux(wchar_t* __first, _Size __n, const wchar_t& __c)\n+    __fill_n_aux(wchar_t* __first, _Size __n, wchar_t __c)\n     {\n       std::__fill_aux(__first, __first + __n, __c);\n       return __first + __n;"}]}