{"sha": "654b60732e6a604471862085f0037fd05df86887", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU0YjYwNzMyZTZhNjA0NDcxODYyMDg1ZjAwMzdmZDA1ZGY4Njg4Nw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-12T20:19:59Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-12T20:19:59Z"}, "message": "re PR fortran/31629 (option to make module entities PRIVATE by default)\n\n\tPR fortran/31629\n\n\t* lang.opt (-fmodule-private): New option.\n\t* gfortran.h (gfc_option_t): Add flag_module_private member.\n\t* invoke.texi (-fmodule-private): Document the new option.\n\t* module.c (gfc_check_access): Allow the -fmodule-private option\n\tto modify the default behaviour.\n\t* options.c (gfc_init_options): Initialize flag_module_private.\n\t(gfc_handle_option): Handle -fmodule-private.\n\n\t* gfortran.dg/module_private_1.f90: New test.\n\nFrom-SVN: r127381", "tree": {"sha": "412c4a82e24e651226e265eae27b203315512a79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/412c4a82e24e651226e265eae27b203315512a79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/654b60732e6a604471862085f0037fd05df86887", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/654b60732e6a604471862085f0037fd05df86887", "html_url": "https://github.com/Rust-GCC/gccrs/commit/654b60732e6a604471862085f0037fd05df86887", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/654b60732e6a604471862085f0037fd05df86887/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cda5098057c002cf332708f0e5b53bb35d49d76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cda5098057c002cf332708f0e5b53bb35d49d76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cda5098057c002cf332708f0e5b53bb35d49d76"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "9e82b0f52c38fd18b5182d0867e19a35e4371c65", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=654b60732e6a604471862085f0037fd05df86887", "patch": "@@ -1,3 +1,14 @@\n+2007-08-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/31629\n+\t* lang.opt (-fmodule-private): New option.\n+\t* gfortran.h (gfc_option_t): Add flag_module_private member.\n+\t* invoke.texi (-fmodule-private): Document the new option.\n+\t* module.c (gfc_check_access): Allow the -fmodule-private option\n+\tto modify the default behaviour.\n+\t* options.c (gfc_init_options): Initialize flag_module_private.\n+\t(gfc_handle_option): Handle -fmodule-private.\n+\n 2007-08-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/29600"}, {"sha": "704ff7e6b3f150a8284218bf174e143cfa09e04e", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=654b60732e6a604471862085f0037fd05df86887", "patch": "@@ -1865,6 +1865,7 @@ typedef struct\n   int flag_d_lines;\n   int flag_openmp;\n   int flag_sign_zero;\n+  int flag_module_private;\n \n   int fpe;\n "}, {"sha": "3f275284b653741b6c8d244bd72fe94692eb54a2", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=654b60732e6a604471862085f0037fd05df86887", "patch": "@@ -121,7 +121,7 @@ by type.  Explanations are in the following sections.\n -ffixed-line-length-@var{n}  -ffixed-line-length-none @gol\n -ffree-line-length-@var{n}  -ffree-line-length-none @gol\n -fdefault-double-8  -fdefault-integer-8  -fdefault-real-8 @gol\n--fcray-pointer  -fopenmp  -frange-check -fno-backslash }\n+-fcray-pointer  -fopenmp  -frange-check -fno-backslash -fmodule-private}\n \n @item Error and Warning Options\n @xref{Error and Warning Options,,Options to request or suppress errors\n@@ -238,6 +238,14 @@ Allow @samp{$} as a valid character in a symbol name.\n Change the interpretation of backslashes in string literals from\n ``C-style'' escape characters to a single backslash character.\n \n+@item -fmodule-private\n+@opindex @code{fmodule-private}\n+@cindex module entities\n+@cindex private\n+Set the default accessibility of module entities to @code{PRIVATE}.\n+Use-associated entities will not be accessible unless they are explicitly\n+declared as @code{PUBLIC}.\n+\n @item -ffixed-line-length-@var{n}\n @opindex @code{ffixed-line-length-}@var{n}\n @cindex file format, fixed"}, {"sha": "3072051a1f4a5007214d065e60be96e2a96d23c7", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=654b60732e6a604471862085f0037fd05df86887", "patch": "@@ -212,6 +212,10 @@ fmax-stack-var-size=\n Fortran RejectNegative Joined UInteger\n -fmax-stack-var-size=<n>\tSize in bytes of the largest array that will be put on the stack\n \n+fmodule-private\n+Fortran\n+Set default accessibility of module entities to PRIVATE.\n+\n fopenmp\n Fortran\n Enable OpenMP"}, {"sha": "9ef0f409de7fb86741d1c8cbd68dc37c306fffb5", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=654b60732e6a604471862085f0037fd05df86887", "patch": "@@ -3714,7 +3714,10 @@ gfc_check_access (gfc_access specific_access, gfc_access default_access)\n   if (specific_access == ACCESS_PRIVATE)\n     return FALSE;\n \n-  return default_access != ACCESS_PRIVATE;\n+  if (gfc_option.flag_module_private)\n+    return default_access == ACCESS_PUBLIC;\n+  else\n+    return default_access != ACCESS_PRIVATE;\n }\n \n "}, {"sha": "0bea67d7eeac8c4887e4184faa1ed600721111e8", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654b60732e6a604471862085f0037fd05df86887/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=654b60732e6a604471862085f0037fd05df86887", "patch": "@@ -93,6 +93,7 @@ gfc_init_options (unsigned int argc ATTRIBUTE_UNUSED,\n   gfc_option.flag_preprocessed = 0;\n   gfc_option.flag_automatic = 1;\n   gfc_option.flag_backslash = 1;\n+  gfc_option.flag_module_private = 0;\n   gfc_option.flag_backtrace = 0;\n   gfc_option.flag_allow_leading_underscore = 0;\n   gfc_option.flag_dump_core = 0;\n@@ -575,6 +576,10 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.flag_max_stack_var_size = value;\n       break;\n \n+    case OPT_fmodule_private:\n+      gfc_option.flag_module_private = value;\n+      break;\n+      \n     case OPT_frange_check:\n       gfc_option.flag_range_check = value;\n       break;"}, {"sha": "33fb738e28ab5ba28cf59833c85cc584f33170bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654b60732e6a604471862085f0037fd05df86887/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654b60732e6a604471862085f0037fd05df86887/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=654b60732e6a604471862085f0037fd05df86887", "patch": "@@ -1,3 +1,8 @@\n+2007-08-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/31629\n+\t* gcc/testsuite/gfortran.dg/module_private_1.f90: New test.\n+\n 2007-08-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/29600"}, {"sha": "66bc56405b08c2ee6f7c8846a9e0c6411f83d1d8", "filename": "gcc/testsuite/gfortran.dg/module_private_1.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654b60732e6a604471862085f0037fd05df86887/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_private_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654b60732e6a604471862085f0037fd05df86887/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_private_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_private_1.f90?ref=654b60732e6a604471862085f0037fd05df86887", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+! { dg-options \"-fmodule-private\" }\n+module bar\n+  implicit none\n+  public :: i\n+  integer :: i\n+end module bar\n+\n+module foo\n+  implicit none\n+  integer :: j\n+end module foo\n+\n+program main\n+  use bar, only : i\n+  use foo, only : j ! { dg-error \"not found in module\" }\n+  i = 1\n+  j = 1\n+  print *, i, j\n+end program main"}]}