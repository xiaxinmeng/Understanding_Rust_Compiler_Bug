{"sha": "71653180cfbab88d037392402436b4ab0356151e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE2NTMxODBjZmJhYjg4ZDAzNzM5MjQwMjQzNmI0YWIwMzU2MTUxZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-06-05T13:16:14Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-06-05T13:16:14Z"}, "message": "tree.h (VOID_TYPE_P): New macro.\n\n\t* tree.h (VOID_TYPE_P): New macro.\n\t(COMPLETE_OR_VOID_TYPE_P): Use VOID_TYPE_P.\n\t* c-decl.c (grokdeclarator): Use VOID_TYPE_P.\n\t(get_parm_info): Likewise.\n\t(store_parm_decls): Likewise.\n\t(combine_parm_decls): Likewise.\n\t(finish_function): Likewise.\n\t* c-typeck.c (build_function_call): Likewise.\n\t(build_binary_op): Likewise.\n\t(build_conditional_expr): Likewise.\n\t(internal_build_compound_expr): Likewise.\n\t(convert_for_assignment): Likewise.\n\t* stmt.c (expend_expr_stmt): Likewise.\n\t(warn_if_unused_value): Likewise.\n\t(expand_return): Likewise.\n\t* c-parse.in (primary): Likewise.\n\t* c-parse.y, c-parse.c, c-parse.h: Regenerate.\n\t* objc/objc-parse.y, objc/objc-parse.c: Regenerate.\n\nFrom-SVN: r34402", "tree": {"sha": "64fbc708396980bce2d2ce05f2b8e5d26f192e02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64fbc708396980bce2d2ce05f2b8e5d26f192e02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71653180cfbab88d037392402436b4ab0356151e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71653180cfbab88d037392402436b4ab0356151e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71653180cfbab88d037392402436b4ab0356151e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71653180cfbab88d037392402436b4ab0356151e/comments", "author": null, "committer": null, "parents": [{"sha": "19331b539d817eef4190b78ee779a445acf046c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19331b539d817eef4190b78ee779a445acf046c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19331b539d817eef4190b78ee779a445acf046c7"}], "stats": {"total": 1522, "additions": 768, "deletions": 754}, "files": [{"sha": "23391b3bf89936a1252b67e2076aa0f6888bbb8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71653180cfbab88d037392402436b4ab0356151e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71653180cfbab88d037392402436b4ab0356151e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71653180cfbab88d037392402436b4ab0356151e", "patch": "@@ -1,3 +1,24 @@\n+2000-06-05  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* tree.h (VOID_TYPE_P): New macro.\n+\t(COMPLETE_OR_VOID_TYPE_P): Use VOID_TYPE_P.\n+\t* c-decl.c (grokdeclarator): Use VOID_TYPE_P.\n+\t(get_parm_info): Likewise.\n+\t(store_parm_decls): Likewise.\n+\t(combine_parm_decls): Likewise.\n+\t(finish_function): Likewise.\n+\t* c-typeck.c (build_function_call): Likewise.\n+\t(build_binary_op): Likewise.\n+\t(build_conditional_expr): Likewise.\n+\t(internal_build_compound_expr): Likewise.\n+\t(convert_for_assignment): Likewise.\n+\t* stmt.c (expend_expr_stmt): Likewise.\n+\t(warn_if_unused_value): Likewise.\n+\t(expand_return): Likewise.\n+\t* c-parse.in (primary): Likewise.\n+\t* c-parse.y, c-parse.c, c-parse.h: Regenerate.\n+\t* objc/objc-parse.y, objc/objc-parse.c: Regenerate.\n+\n Mon Jun  5 06:46:28 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* alias.c (get_alias_set): If compnent is addressable, use alias"}, {"sha": "3c57f66983eda8397fe9e07de7981d8cf86aa12b", "filename": "gcc/c-decl.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=71653180cfbab88d037392402436b4ab0356151e", "patch": "@@ -4290,7 +4290,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \n \t  /* Check for some types that there cannot be arrays of.  */\n \n-\t  if (TYPE_MAIN_VARIANT (type) == void_type_node)\n+\t  if (VOID_TYPE_P (type))\n \t    {\n \t      error (\"declaration of `%s' as array of voids\", name);\n \t      type = error_mark_node;\n@@ -4598,7 +4598,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n      We don't complain about parms either, but that is because\n      a better error message can be made later.  */\n \n-  if (TYPE_MAIN_VARIANT (type) == void_type_node && decl_context != PARM\n+  if (VOID_TYPE_P (type) && decl_context != PARM\n       && ! ((decl_context != FIELD && TREE_CODE (type) != FUNCTION_TYPE)\n \t    && ((specbits & (1 << (int) RID_EXTERN))\n \t\t|| (current_binding_level == global_binding_level\n@@ -4725,15 +4725,15 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \t  pedwarn (\"ANSI C forbids qualified function types\");\n \n \tif (pedantic\n-\t    && TYPE_MAIN_VARIANT (TREE_TYPE (TREE_TYPE (decl))) == void_type_node\n+\t    && VOID_TYPE_P (TREE_TYPE (TREE_TYPE (decl)))\n \t    && TYPE_QUALS (TREE_TYPE (TREE_TYPE (decl)))\n \t    && ! DECL_IN_SYSTEM_HEADER (decl))\n \t  pedwarn (\"ANSI C forbids qualified void function return type\");\n \n \t/* GNU C interprets a `volatile void' return type to indicate\n \t   that the function does not return.  */\n \tif ((type_quals & TYPE_QUAL_VOLATILE)\n-\t    && TREE_TYPE (TREE_TYPE (decl)) != void_type_node)\n+\t    && !VOID_TYPE_P (TREE_TYPE (TREE_TYPE (decl))))\n \t  warning (\"`noreturn' function returns non-void value\");\n \n \tif (extern_ref)\n@@ -4948,7 +4948,7 @@ get_parm_info (void_at_end)\n   /* Just `void' (and no ellipsis) is special.  There are really no parms.  */\n   if (void_at_end && parms != 0\n       && TREE_CHAIN (parms) == 0\n-      && TYPE_MAIN_VARIANT (TREE_TYPE (parms)) == void_type_node\n+      && VOID_TYPE_P (TREE_TYPE (parms))\n       && DECL_NAME (parms) == 0)\n     {\n       parms = NULL_TREE;\n@@ -5009,7 +5009,7 @@ get_parm_info (void_at_end)\n \t  DECL_ARG_TYPE (decl) = integer_type_node;\n \n \ttypes = tree_cons (NULL_TREE, TREE_TYPE (decl), types);\n-\tif (TYPE_MAIN_VARIANT (TREE_VALUE (types)) == void_type_node && ! erred\n+\tif (VOID_TYPE_P (TREE_VALUE (types)) && ! erred\n \t    && DECL_NAME (decl) == 0)\n \t  {\n \t    error (\"`void' in parameter list must be the entire list\");\n@@ -5993,8 +5993,7 @@ store_parm_decls ()\n \t      if (DECL_NAME (parm) == 0)\n \t\terror_with_decl (parm, \"parameter name omitted\");\n \t      else if (TREE_CODE (TREE_TYPE (parm)) != ERROR_MARK\n-\t\t       && (TYPE_MAIN_VARIANT (TREE_TYPE (parm))\n-\t\t\t   == void_type_node))\n+\t\t       && VOID_TYPE_P (TREE_TYPE (parm)))\n \t\t{\n \t\t  error_with_decl (parm, \"parameter `%s' declared void\");\n \t\t  /* Change the type to error_mark_node so this parameter\n@@ -6097,7 +6096,7 @@ store_parm_decls ()\n \t    }\n \n \t  /* If the declaration says \"void\", complain and ignore it.  */\n-\t  if (found && TYPE_MAIN_VARIANT (TREE_TYPE (found)) == void_type_node)\n+\t  if (found && VOID_TYPE_P (TREE_TYPE (found)))\n \t    {\n \t      error_with_decl (found, \"parameter `%s' declared void\");\n \t      TREE_TYPE (found) = integer_type_node;\n@@ -6395,7 +6394,7 @@ combine_parm_decls (specparms, parmlist, void_at_end)\n \t}\n \n       /* If the declaration says \"void\", complain and ignore it.  */\n-      if (found && TYPE_MAIN_VARIANT (TREE_TYPE (found)) == void_type_node)\n+      if (found && VOID_TYPE_P (TREE_TYPE (found)))\n \t{\n \t  error_with_decl (found, \"parameter `%s' declared void\");\n \t  TREE_TYPE (found) = integer_type_node;\n@@ -6567,7 +6566,7 @@ finish_function (nested)\n   if (TREE_THIS_VOLATILE (fndecl) && current_function_returns_null)\n     warning (\"`noreturn' function does return\");\n   else if (warn_return_type && can_reach_end\n-\t   && TYPE_MAIN_VARIANT (TREE_TYPE (TREE_TYPE (fndecl))) != void_type_node)\n+\t   && !VOID_TYPE_P (TREE_TYPE (TREE_TYPE (fndecl))))\n     /* If this function returns non-void and control can drop through,\n        complain.  */\n     warning (\"control reaches end of non-void function\");"}, {"sha": "cd51c2429da529a4fae56581310dfc6a6714e17b", "filename": "gcc/c-parse.c", "status": "modified", "additions": 293, "deletions": 294, "changes": 587, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=71653180cfbab88d037392402436b4ab0356151e", "patch": "@@ -391,39 +391,39 @@ static const short yyrline[] = { 0,\n    439,   442,   445,   448,   450,   452,   456,   460,   464,   466,\n    469,   473,   500,   502,   504,   506,   508,   510,   512,   514,\n    516,   518,   520,   522,   524,   526,   530,   532,   536,   538,\n-   541,   545,   547,   554,   557,   565,   576,   675,   676,   678,\n-   684,   686,   709,   718,   720,   722,   726,   732,   734,   739,\n-   741,   749,   751,   752,   762,   767,   769,   770,   771,   778,\n-   783,   787,   790,   798,   803,   805,   806,   807,   814,   824,\n-   828,   833,   837,   841,   845,   847,   849,   858,   861,   865,\n-   867,   869,   874,   878,   881,   885,   888,   890,   902,   905,\n-   907,   909,   913,   917,   919,   922,   935,   938,   942,   944,\n-   952,   953,   954,   958,   960,   966,   967,   968,   971,   973,\n-   976,   978,   981,   984,   990,   997,   999,  1006,  1013,  1016,\n-  1023,  1026,  1030,  1033,  1037,  1042,  1045,  1049,  1052,  1054,\n-  1056,  1058,  1065,  1067,  1068,  1069,  1074,  1076,  1078,  1080,\n-  1085,  1089,  1092,  1094,  1099,  1101,  1102,  1105,  1105,  1108,\n-  1111,  1113,  1115,  1118,  1120,  1123,  1129,  1131,  1135,  1149,\n-  1157,  1161,  1175,  1183,  1190,  1192,  1197,  1200,  1205,  1207,\n-  1209,  1216,  1218,  1226,  1232,  1237,  1239,  1241,  1248,  1250,\n-  1256,  1262,  1264,  1266,  1271,  1273,  1280,  1282,  1285,  1288,\n-  1292,  1295,  1299,  1302,  1306,  1311,  1313,  1317,  1319,  1321,\n-  1323,  1327,  1329,  1331,  1334,  1336,  1339,  1343,  1345,  1348,\n-  1350,  1355,  1358,  1363,  1365,  1367,  1381,  1387,  1400,  1405,\n-  1410,  1412,  1417,  1419,  1423,  1427,  1431,  1441,  1443,  1448,\n-  1453,  1456,  1460,  1463,  1467,  1470,  1473,  1476,  1480,  1483,\n-  1487,  1491,  1493,  1495,  1497,  1499,  1501,  1503,  1505,  1509,\n-  1517,  1525,  1527,  1529,  1533,  1535,  1538,  1541,  1551,  1553,\n-  1558,  1560,  1563,  1577,  1580,  1583,  1585,  1587,  1591,  1595,\n-  1601,  1619,  1624,  1629,  1632,  1646,  1655,  1659,  1663,  1667,\n-  1673,  1677,  1682,  1685,  1690,  1693,  1694,  1710,  1715,  1718,\n-  1730,  1732,  1742,  1752,  1753,  1760,  1762,  1774,  1778,  1792,\n-  1798,  1804,  1805,  1810,  1815,  1819,  1823,  1834,  1841,  1848,\n-  1855,  1866,  1872,  1875,  1880,  1903,  1933,  1964,  1995,  2010,\n-  2024,  2028,  2032,  2035,  2040,  2042,  2045,  2047,  2051,  2056,\n-  2059,  2065,  2070,  2075,  2077,  2086,  2087,  2093,  2095,  2105,\n-  2107,  2111,  2114,  2120,  2129,  2137,  2145,  2154,  2167,  2172,\n-  2177,  2179,  2188,  2191,  2196,  2199,  2203\n+   541,   545,   547,   554,   557,   565,   576,   674,   675,   677,\n+   683,   685,   708,   717,   719,   721,   725,   731,   733,   738,\n+   740,   748,   750,   751,   761,   766,   768,   769,   770,   777,\n+   782,   786,   789,   797,   802,   804,   805,   806,   813,   823,\n+   827,   832,   836,   840,   844,   846,   848,   857,   860,   864,\n+   866,   868,   873,   877,   880,   884,   887,   889,   901,   904,\n+   906,   908,   912,   916,   918,   921,   934,   937,   941,   943,\n+   951,   952,   953,   957,   959,   965,   966,   967,   970,   972,\n+   975,   977,   980,   983,   989,   996,   998,  1005,  1012,  1015,\n+  1022,  1025,  1029,  1032,  1036,  1041,  1044,  1048,  1051,  1053,\n+  1055,  1057,  1064,  1066,  1067,  1068,  1073,  1075,  1077,  1079,\n+  1084,  1088,  1091,  1093,  1098,  1100,  1101,  1104,  1104,  1107,\n+  1110,  1112,  1114,  1117,  1119,  1122,  1128,  1130,  1134,  1148,\n+  1156,  1160,  1174,  1182,  1189,  1191,  1196,  1199,  1204,  1206,\n+  1208,  1215,  1217,  1225,  1231,  1236,  1238,  1240,  1247,  1249,\n+  1255,  1261,  1263,  1265,  1270,  1272,  1279,  1281,  1284,  1287,\n+  1291,  1294,  1298,  1301,  1305,  1310,  1312,  1316,  1318,  1320,\n+  1322,  1326,  1328,  1330,  1333,  1335,  1338,  1342,  1344,  1347,\n+  1349,  1354,  1357,  1362,  1364,  1366,  1380,  1386,  1399,  1404,\n+  1409,  1411,  1416,  1418,  1422,  1426,  1430,  1440,  1442,  1447,\n+  1452,  1455,  1459,  1462,  1466,  1469,  1472,  1475,  1479,  1482,\n+  1486,  1490,  1492,  1494,  1496,  1498,  1500,  1502,  1504,  1508,\n+  1516,  1524,  1526,  1528,  1532,  1534,  1537,  1540,  1550,  1552,\n+  1557,  1559,  1562,  1576,  1579,  1582,  1584,  1586,  1590,  1594,\n+  1600,  1618,  1623,  1628,  1631,  1645,  1654,  1658,  1662,  1666,\n+  1672,  1676,  1681,  1684,  1689,  1692,  1693,  1709,  1714,  1717,\n+  1729,  1731,  1741,  1751,  1752,  1759,  1761,  1773,  1777,  1791,\n+  1797,  1803,  1804,  1809,  1814,  1818,  1822,  1833,  1840,  1847,\n+  1854,  1865,  1871,  1874,  1879,  1902,  1932,  1963,  1994,  2009,\n+  2023,  2027,  2031,  2034,  2039,  2041,  2044,  2046,  2050,  2055,\n+  2058,  2064,  2069,  2074,  2076,  2085,  2086,  2092,  2094,  2104,\n+  2106,  2110,  2113,  2119,  2128,  2136,  2144,  2153,  2166,  2171,\n+  2176,  2178,  2187,  2190,  2195,  2198,  2202\n };\n #endif\n \n@@ -1274,7 +1274,7 @@ static const short yycheck[] = {    38,\n     48,    49,    50,    51,    52,    53,    54,    55,    56,    57\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/misc/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n /* This file comes from bison-1.28.  */\n \n /* Skeleton output parser for bison,\n@@ -1488,7 +1488,7 @@ __yy_memcpy (char *to, char *from, unsigned int count)\n #endif\n #endif\n \f\n-#line 217 \"/usr/share/misc/bison.simple\"\n+#line 217 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2301,8 +2301,7 @@ case 87:\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME (yyval.ttype)));\n \t\t\t  else if ((TYPE_MODE (TREE_TYPE (TREE_TYPE (yyval.ttype)))\n \t\t\t\t    != TYPE_MODE (integer_type_node))\n-\t\t\t\t   && (TREE_TYPE (TREE_TYPE (yyval.ttype))\n-\t\t\t\t       != void_type_node))\n+\t\t\t\t   && !VOID_TYPE_P (TREE_TYPE (TREE_TYPE (yyval.ttype))))\n \t\t\t    pedwarn (\"type mismatch in implicit declaration for built-in function `%s'\",\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME (yyval.ttype)));\n \t\t\t  /* If it really returns void, change that to int.  */\n@@ -2336,23 +2335,23 @@ case 87:\n \t\t;\n     break;}\n case 89:\n-#line 677 \"c-parse.y\"\n+#line 676 \"c-parse.y\"\n { yyval.ttype = combine_strings (yyvsp[0].ttype); ;\n     break;}\n case 90:\n-#line 679 \"c-parse.y\"\n+#line 678 \"c-parse.y\"\n { char class = TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype));\n \t\t  if (class == 'e' || class == '1'\n \t\t      || class == '2' || class == '<')\n \t\t    C_SET_EXP_ORIGINAL_CODE (yyvsp[-1].ttype, ERROR_MARK);\n \t\t  yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 91:\n-#line 685 \"c-parse.y\"\n+#line 684 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 92:\n-#line 687 \"c-parse.y\"\n+#line 686 \"c-parse.y\"\n { tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n@@ -2377,7 +2376,7 @@ case 92:\n \t\t;\n     break;}\n case 93:\n-#line 710 \"c-parse.y\"\n+#line 709 \"c-parse.y\"\n {\n \t\t  /* Make sure we call expand_end_stmt_expr.  Otherwise\n \t\t     we are likely to lose sequences and crash later.  */\n@@ -2388,79 +2387,79 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 719 \"c-parse.y\"\n+#line 718 \"c-parse.y\"\n { yyval.ttype = build_function_call (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 95:\n-#line 721 \"c-parse.y\"\n+#line 720 \"c-parse.y\"\n { yyval.ttype = build_array_ref (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 96:\n-#line 723 \"c-parse.y\"\n+#line 722 \"c-parse.y\"\n {\n \t\t    yyval.ttype = build_component_ref (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 97:\n-#line 727 \"c-parse.y\"\n+#line 726 \"c-parse.y\"\n {\n                   tree expr = build_indirect_ref (yyvsp[-2].ttype, \"->\");\n \n                     yyval.ttype = build_component_ref (expr, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 98:\n-#line 733 \"c-parse.y\"\n+#line 732 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTINCREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 99:\n-#line 735 \"c-parse.y\"\n+#line 734 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTDECREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 101:\n-#line 742 \"c-parse.y\"\n+#line 741 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  if (warn_traditional && !in_system_header)\n \t\t    warning (\"Use of ANSI string concatenation\");\n \t\t;\n     break;}\n case 104:\n-#line 754 \"c-parse.y\"\n+#line 753 \"c-parse.y\"\n { c_mark_varargs ();\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); ;\n     break;}\n case 105:\n-#line 764 \"c-parse.y\"\n+#line 763 \"c-parse.y\"\n { ;\n     break;}\n case 110:\n-#line 780 \"c-parse.y\"\n+#line 779 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 111:\n-#line 784 \"c-parse.y\"\n+#line 783 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\t\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 112:\n-#line 788 \"c-parse.y\"\n+#line 787 \"c-parse.y\"\n { shadow_tag_warned (yyvsp[-1].ttype, 1);\n \t\t  pedwarn (\"empty declaration\"); ;\n     break;}\n case 113:\n-#line 791 \"c-parse.y\"\n+#line 790 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 114:\n-#line 800 \"c-parse.y\"\n+#line 799 \"c-parse.y\"\n { ;\n     break;}\n case 119:\n-#line 815 \"c-parse.y\"\n+#line 814 \"c-parse.y\"\n { pending_xref_error ();\n \t\t  declspec_stack = tree_cons (prefix_attributes,\n \t\t\t\t\t      current_declspecs,\n@@ -2469,304 +2468,304 @@ case 119:\n \t\t\t\t     &current_declspecs, &prefix_attributes); ;\n     break;}\n case 120:\n-#line 825 \"c-parse.y\"\n+#line 824 \"c-parse.y\"\n { prefix_attributes = chainon (prefix_attributes, yyvsp[0].ttype); ;\n     break;}\n case 121:\n-#line 830 \"c-parse.y\"\n+#line 829 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 122:\n-#line 834 \"c-parse.y\"\n+#line 833 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 123:\n-#line 838 \"c-parse.y\"\n+#line 837 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 124:\n-#line 842 \"c-parse.y\"\n+#line 841 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 125:\n-#line 846 \"c-parse.y\"\n+#line 845 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 126:\n-#line 848 \"c-parse.y\"\n+#line 847 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 127:\n-#line 850 \"c-parse.y\"\n+#line 849 \"c-parse.y\"\n { RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 128:\n-#line 860 \"c-parse.y\"\n+#line 859 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 129:\n-#line 862 \"c-parse.y\"\n+#line 861 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 130:\n-#line 866 \"c-parse.y\"\n+#line 865 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 131:\n-#line 868 \"c-parse.y\"\n+#line 867 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 132:\n-#line 870 \"c-parse.y\"\n+#line 869 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 133:\n-#line 875 \"c-parse.y\"\n+#line 874 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 134:\n-#line 880 \"c-parse.y\"\n+#line 879 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 135:\n-#line 882 \"c-parse.y\"\n+#line 881 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 136:\n-#line 887 \"c-parse.y\"\n+#line 886 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 137:\n-#line 889 \"c-parse.y\"\n+#line 888 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 138:\n-#line 891 \"c-parse.y\"\n+#line 890 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 139:\n-#line 904 \"c-parse.y\"\n+#line 903 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 140:\n-#line 906 \"c-parse.y\"\n+#line 905 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 141:\n-#line 908 \"c-parse.y\"\n+#line 907 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 142:\n-#line 910 \"c-parse.y\"\n+#line 909 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 143:\n-#line 915 \"c-parse.y\"\n+#line 914 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 144:\n-#line 918 \"c-parse.y\"\n+#line 917 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 145:\n-#line 920 \"c-parse.y\"\n+#line 919 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 146:\n-#line 923 \"c-parse.y\"\n+#line 922 \"c-parse.y\"\n { if (extra_warnings && TREE_STATIC (yyvsp[-1].ttype))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = TREE_STATIC (yyvsp[-1].ttype); ;\n     break;}\n case 147:\n-#line 937 \"c-parse.y\"\n+#line 936 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 148:\n-#line 939 \"c-parse.y\"\n+#line 938 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 149:\n-#line 943 \"c-parse.y\"\n+#line 942 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 150:\n-#line 945 \"c-parse.y\"\n+#line 944 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 153:\n-#line 955 \"c-parse.y\"\n+#line 954 \"c-parse.y\"\n { /* For a typedef name, record the meaning, not the name.\n \t\t     In case of `foo foo, bar;'.  */\n \t\t  yyval.ttype = lookup_name (yyvsp[0].ttype); ;\n     break;}\n case 154:\n-#line 959 \"c-parse.y\"\n+#line 958 \"c-parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[-1].ttype); ;\n     break;}\n case 155:\n-#line 961 \"c-parse.y\"\n+#line 960 \"c-parse.y\"\n { yyval.ttype = groktypename (yyvsp[-1].ttype); ;\n     break;}\n case 163:\n-#line 983 \"c-parse.y\"\n+#line 982 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 164:\n-#line 985 \"c-parse.y\"\n+#line 984 \"c-parse.y\"\n { if (TREE_CHAIN (yyvsp[-1].ttype)) yyvsp[-1].ttype = combine_strings (yyvsp[-1].ttype);\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 165:\n-#line 992 \"c-parse.y\"\n+#line 991 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 166:\n-#line 997 \"c-parse.y\"\n+#line 996 \"c-parse.y\"\n { finish_init ();\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 167:\n-#line 1000 \"c-parse.y\"\n+#line 999 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); \n                 ;\n     break;}\n case 168:\n-#line 1008 \"c-parse.y\"\n+#line 1007 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 169:\n-#line 1013 \"c-parse.y\"\n+#line 1012 \"c-parse.y\"\n { finish_init ();\n \t\t  decl_attributes (yyvsp[-1].ttype, yyvsp[-3].ttype, prefix_attributes);\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 170:\n-#line 1017 \"c-parse.y\"\n+#line 1016 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 171:\n-#line 1025 \"c-parse.y\"\n+#line 1024 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 172:\n-#line 1027 \"c-parse.y\"\n+#line 1026 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 173:\n-#line 1032 \"c-parse.y\"\n+#line 1031 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 174:\n-#line 1034 \"c-parse.y\"\n+#line 1033 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 175:\n-#line 1039 \"c-parse.y\"\n+#line 1038 \"c-parse.y\"\n { yyval.ttype = yyvsp[-2].ttype; ;\n     break;}\n case 176:\n-#line 1044 \"c-parse.y\"\n+#line 1043 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 177:\n-#line 1046 \"c-parse.y\"\n+#line 1045 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 178:\n-#line 1051 \"c-parse.y\"\n+#line 1050 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 179:\n-#line 1053 \"c-parse.y\"\n+#line 1052 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 180:\n-#line 1055 \"c-parse.y\"\n+#line 1054 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, build_tree_list (NULL_TREE, yyvsp[-1].ttype)); ;\n     break;}\n case 181:\n-#line 1057 \"c-parse.y\"\n+#line 1056 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-5].ttype, tree_cons (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype)); ;\n     break;}\n case 182:\n-#line 1059 \"c-parse.y\"\n+#line 1058 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 188:\n-#line 1077 \"c-parse.y\"\n+#line 1076 \"c-parse.y\"\n { really_start_incremental_init (NULL_TREE); ;\n     break;}\n case 189:\n-#line 1079 \"c-parse.y\"\n+#line 1078 \"c-parse.y\"\n { yyval.ttype = pop_init_level (0); ;\n     break;}\n case 190:\n-#line 1081 \"c-parse.y\"\n+#line 1080 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 191:\n-#line 1087 \"c-parse.y\"\n+#line 1086 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); ;\n     break;}\n case 197:\n-#line 1103 \"c-parse.y\"\n+#line 1102 \"c-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 200:\n-#line 1110 \"c-parse.y\"\n+#line 1109 \"c-parse.y\"\n { push_init_level (0); ;\n     break;}\n case 201:\n-#line 1112 \"c-parse.y\"\n+#line 1111 \"c-parse.y\"\n { process_init_element (pop_init_level (0)); ;\n     break;}\n case 202:\n-#line 1114 \"c-parse.y\"\n+#line 1113 \"c-parse.y\"\n { process_init_element (yyvsp[0].ttype); ;\n     break;}\n case 206:\n-#line 1125 \"c-parse.y\"\n+#line 1124 \"c-parse.y\"\n { set_init_label (yyvsp[0].ttype); ;\n     break;}\n case 207:\n-#line 1130 \"c-parse.y\"\n+#line 1129 \"c-parse.y\"\n { set_init_index (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 208:\n-#line 1132 \"c-parse.y\"\n+#line 1131 \"c-parse.y\"\n { set_init_index (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 209:\n-#line 1137 \"c-parse.y\"\n+#line 1136 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -2780,16 +2779,16 @@ case 209:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 210:\n-#line 1149 \"c-parse.y\"\n+#line 1148 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 211:\n-#line 1157 \"c-parse.y\"\n+#line 1156 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 212:\n-#line 1163 \"c-parse.y\"\n+#line 1162 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -2803,216 +2802,216 @@ case 212:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 213:\n-#line 1175 \"c-parse.y\"\n+#line 1174 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 214:\n-#line 1183 \"c-parse.y\"\n+#line 1182 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 217:\n-#line 1199 \"c-parse.y\"\n+#line 1198 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 218:\n-#line 1201 \"c-parse.y\"\n+#line 1200 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 219:\n-#line 1206 \"c-parse.y\"\n+#line 1205 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 220:\n-#line 1208 \"c-parse.y\"\n+#line 1207 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 221:\n-#line 1210 \"c-parse.y\"\n+#line 1209 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 222:\n-#line 1217 \"c-parse.y\"\n+#line 1216 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 224:\n-#line 1228 \"c-parse.y\"\n+#line 1227 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 225:\n-#line 1233 \"c-parse.y\"\n+#line 1232 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc99)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 99\");\n \t\t;\n     break;}\n case 226:\n-#line 1238 \"c-parse.y\"\n+#line 1237 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 227:\n-#line 1240 \"c-parse.y\"\n+#line 1239 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 228:\n-#line 1242 \"c-parse.y\"\n+#line 1241 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 229:\n-#line 1249 \"c-parse.y\"\n+#line 1248 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 231:\n-#line 1258 \"c-parse.y\"\n+#line 1257 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 232:\n-#line 1263 \"c-parse.y\"\n+#line 1262 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 233:\n-#line 1265 \"c-parse.y\"\n+#line 1264 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 234:\n-#line 1267 \"c-parse.y\"\n+#line 1266 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc99)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 99\");\n \t\t;\n     break;}\n case 235:\n-#line 1272 \"c-parse.y\"\n+#line 1271 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 236:\n-#line 1274 \"c-parse.y\"\n+#line 1273 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 237:\n-#line 1281 \"c-parse.y\"\n+#line 1280 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 239:\n-#line 1287 \"c-parse.y\"\n+#line 1286 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 240:\n-#line 1289 \"c-parse.y\"\n+#line 1288 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 241:\n-#line 1294 \"c-parse.y\"\n+#line 1293 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 242:\n-#line 1296 \"c-parse.y\"\n+#line 1295 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 243:\n-#line 1301 \"c-parse.y\"\n+#line 1300 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 244:\n-#line 1303 \"c-parse.y\"\n+#line 1302 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 245:\n-#line 1308 \"c-parse.y\"\n+#line 1307 \"c-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 246:\n-#line 1312 \"c-parse.y\"\n+#line 1311 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 247:\n-#line 1314 \"c-parse.y\"\n+#line 1313 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 248:\n-#line 1318 \"c-parse.y\"\n+#line 1317 \"c-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 249:\n-#line 1320 \"c-parse.y\"\n+#line 1319 \"c-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 250:\n-#line 1322 \"c-parse.y\"\n+#line 1321 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 251:\n-#line 1324 \"c-parse.y\"\n+#line 1323 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 252:\n-#line 1328 \"c-parse.y\"\n+#line 1327 \"c-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 253:\n-#line 1330 \"c-parse.y\"\n+#line 1329 \"c-parse.y\"\n { yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 254:\n-#line 1332 \"c-parse.y\"\n+#line 1331 \"c-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype),\n \t\t\t\t    chainon (yyvsp[-7].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 255:\n-#line 1335 \"c-parse.y\"\n+#line 1334 \"c-parse.y\"\n { yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 256:\n-#line 1337 \"c-parse.y\"\n+#line 1336 \"c-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype),\n \t\t\t\t    chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 257:\n-#line 1340 \"c-parse.y\"\n+#line 1339 \"c-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 261:\n-#line 1351 \"c-parse.y\"\n+#line 1350 \"c-parse.y\"\n { if (pedantic && ! flag_isoc99)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 262:\n-#line 1357 \"c-parse.y\"\n+#line 1356 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 263:\n-#line 1359 \"c-parse.y\"\n+#line 1358 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 264:\n-#line 1364 \"c-parse.y\"\n+#line 1363 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 265:\n-#line 1366 \"c-parse.y\"\n+#line 1365 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 266:\n-#line 1368 \"c-parse.y\"\n+#line 1367 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 267:\n-#line 1383 \"c-parse.y\"\n+#line 1382 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 268:\n-#line 1388 \"c-parse.y\"\n+#line 1387 \"c-parse.y\"\n {\n \t\t  /* Support for unnamed structs or unions as members of \n \t\t     structs or unions (which is [a] useful and [b] supports \n@@ -3027,164 +3026,164 @@ case 268:\n \t\t;\n     break;}\n case 269:\n-#line 1401 \"c-parse.y\"\n+#line 1400 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 270:\n-#line 1406 \"c-parse.y\"\n+#line 1405 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 271:\n-#line 1411 \"c-parse.y\"\n+#line 1410 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 272:\n-#line 1413 \"c-parse.y\"\n+#line 1412 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 274:\n-#line 1420 \"c-parse.y\"\n+#line 1419 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 275:\n-#line 1425 \"c-parse.y\"\n+#line 1424 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 276:\n-#line 1429 \"c-parse.y\"\n+#line 1428 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 277:\n-#line 1432 \"c-parse.y\"\n+#line 1431 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 279:\n-#line 1444 \"c-parse.y\"\n+#line 1443 \"c-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 280:\n-#line 1449 \"c-parse.y\"\n+#line 1448 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 281:\n-#line 1455 \"c-parse.y\"\n+#line 1454 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 282:\n-#line 1457 \"c-parse.y\"\n+#line 1456 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 283:\n-#line 1462 \"c-parse.y\"\n+#line 1461 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 284:\n-#line 1464 \"c-parse.y\"\n+#line 1463 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 285:\n-#line 1469 \"c-parse.y\"\n+#line 1468 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 287:\n-#line 1475 \"c-parse.y\"\n+#line 1474 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 288:\n-#line 1477 \"c-parse.y\"\n+#line 1476 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 289:\n-#line 1482 \"c-parse.y\"\n+#line 1481 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 290:\n-#line 1484 \"c-parse.y\"\n+#line 1483 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 291:\n-#line 1489 \"c-parse.y\"\n+#line 1488 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 292:\n-#line 1492 \"c-parse.y\"\n+#line 1491 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 293:\n-#line 1494 \"c-parse.y\"\n+#line 1493 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 294:\n-#line 1496 \"c-parse.y\"\n+#line 1495 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 295:\n-#line 1498 \"c-parse.y\"\n+#line 1497 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 296:\n-#line 1500 \"c-parse.y\"\n+#line 1499 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 297:\n-#line 1502 \"c-parse.y\"\n+#line 1501 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 298:\n-#line 1504 \"c-parse.y\"\n+#line 1503 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 299:\n-#line 1506 \"c-parse.y\"\n+#line 1505 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1510 \"c-parse.y\"\n+#line 1509 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 301:\n-#line 1519 \"c-parse.y\"\n+#line 1518 \"c-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 303:\n-#line 1528 \"c-parse.y\"\n+#line 1527 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 304:\n-#line 1530 \"c-parse.y\"\n+#line 1529 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 308:\n-#line 1542 \"c-parse.y\"\n+#line 1541 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n \t\t  expand_start_bindings (0);\n \t\t;\n     break;}\n case 310:\n-#line 1554 \"c-parse.y\"\n+#line 1553 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 313:\n-#line 1565 \"c-parse.y\"\n+#line 1564 \"c-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3195,37 +3194,37 @@ case 313:\n \t\t;\n     break;}\n case 314:\n-#line 1579 \"c-parse.y\"\n+#line 1578 \"c-parse.y\"\n {;\n     break;}\n case 316:\n-#line 1583 \"c-parse.y\"\n+#line 1582 \"c-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 317:\n-#line 1586 \"c-parse.y\"\n+#line 1585 \"c-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 318:\n-#line 1588 \"c-parse.y\"\n+#line 1587 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0); ;\n     break;}\n case 319:\n-#line 1592 \"c-parse.y\"\n+#line 1591 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0); ;\n     break;}\n case 320:\n-#line 1596 \"c-parse.y\"\n+#line 1595 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0); ;\n     break;}\n case 321:\n-#line 1603 \"c-parse.y\"\n+#line 1602 \"c-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -3243,11 +3242,11 @@ case 321:\n \t\t;\n     break;}\n case 322:\n-#line 1620 \"c-parse.y\"\n+#line 1619 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 325:\n-#line 1634 \"c-parse.y\"\n+#line 1633 \"c-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3257,7 +3256,7 @@ case 325:\n \t\t  position_after_white_space (); ;\n     break;}\n case 326:\n-#line 1648 \"c-parse.y\"\n+#line 1647 \"c-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3267,43 +3266,43 @@ case 326:\n \t\t  position_after_white_space (); ;\n     break;}\n case 327:\n-#line 1656 \"c-parse.y\"\n+#line 1655 \"c-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 328:\n-#line 1660 \"c-parse.y\"\n+#line 1659 \"c-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 329:\n-#line 1664 \"c-parse.y\"\n+#line 1663 \"c-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 330:\n-#line 1669 \"c-parse.y\"\n+#line 1668 \"c-parse.y\"\n { ;\n     break;}\n case 331:\n-#line 1674 \"c-parse.y\"\n+#line 1673 \"c-parse.y\"\n { ;\n     break;}\n case 332:\n-#line 1679 \"c-parse.y\"\n+#line 1678 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 333:\n-#line 1684 \"c-parse.y\"\n+#line 1683 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 334:\n-#line 1686 \"c-parse.y\"\n+#line 1685 \"c-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 335:\n-#line 1692 \"c-parse.y\"\n+#line 1691 \"c-parse.y\"\n { stmt_count++; ;\n     break;}\n case 337:\n-#line 1695 \"c-parse.y\"\n+#line 1694 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3321,19 +3320,19 @@ case 337:\n \t\t  iterator_expand (yyvsp[-1].ttype); ;\n     break;}\n case 338:\n-#line 1711 \"c-parse.y\"\n+#line 1710 \"c-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 339:\n-#line 1715 \"c-parse.y\"\n+#line 1714 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 340:\n-#line 1719 \"c-parse.y\"\n+#line 1718 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3344,11 +3343,11 @@ case 340:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 341:\n-#line 1731 \"c-parse.y\"\n+#line 1730 \"c-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 342:\n-#line 1733 \"c-parse.y\"\n+#line 1732 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3360,7 +3359,7 @@ case 342:\n \t\t  emit_nop (); ;\n     break;}\n case 343:\n-#line 1743 \"c-parse.y\"\n+#line 1742 \"c-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3371,22 +3370,22 @@ case 343:\n \t\t  position_after_white_space (); ;\n     break;}\n case 344:\n-#line 1752 \"c-parse.y\"\n+#line 1751 \"c-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 345:\n-#line 1755 \"c-parse.y\"\n+#line 1754 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop (); ;\n     break;}\n case 346:\n-#line 1761 \"c-parse.y\"\n+#line 1760 \"c-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 347:\n-#line 1764 \"c-parse.y\"\n+#line 1763 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3399,12 +3398,12 @@ case 347:\n \t\t;\n     break;}\n case 348:\n-#line 1776 \"c-parse.y\"\n+#line 1775 \"c-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 349:\n-#line 1779 \"c-parse.y\"\n+#line 1778 \"c-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -3419,7 +3418,7 @@ case 349:\n \t\t  position_after_white_space (); ;\n     break;}\n case 350:\n-#line 1792 \"c-parse.y\"\n+#line 1791 \"c-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -3428,44 +3427,44 @@ case 350:\n \t\t  expand_end_loop (); ;\n     break;}\n case 351:\n-#line 1799 \"c-parse.y\"\n+#line 1798 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n \t\t  position_after_white_space (); ;\n     break;}\n case 352:\n-#line 1804 \"c-parse.y\"\n+#line 1803 \"c-parse.y\"\n { expand_end_case (yyvsp[-3].ttype); ;\n     break;}\n case 353:\n-#line 1806 \"c-parse.y\"\n+#line 1805 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 354:\n-#line 1811 \"c-parse.y\"\n+#line 1810 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 355:\n-#line 1816 \"c-parse.y\"\n+#line 1815 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 356:\n-#line 1820 \"c-parse.y\"\n+#line 1819 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 357:\n-#line 1824 \"c-parse.y\"\n+#line 1823 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -3477,31 +3476,31 @@ case 357:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 358:\n-#line 1835 \"c-parse.y\"\n+#line 1834 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 359:\n-#line 1842 \"c-parse.y\"\n+#line 1841 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 360:\n-#line 1850 \"c-parse.y\"\n+#line 1849 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 361:\n-#line 1856 \"c-parse.y\"\n+#line 1855 \"c-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -3514,15 +3513,15 @@ case 361:\n \t\t;\n     break;}\n case 362:\n-#line 1867 \"c-parse.y\"\n+#line 1866 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 365:\n-#line 1882 \"c-parse.y\"\n+#line 1881 \"c-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -3545,14 +3544,14 @@ case 365:\n \t  ;\n     break;}\n case 366:\n-#line 1903 \"c-parse.y\"\n+#line 1902 \"c-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 367:\n-#line 1934 \"c-parse.y\"\n+#line 1933 \"c-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -3585,7 +3584,7 @@ case 367:\n \t\t  position_after_white_space (); ;\n     break;}\n case 368:\n-#line 1965 \"c-parse.y\"\n+#line 1964 \"c-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -3618,7 +3617,7 @@ case 368:\n \t\t  position_after_white_space (); ;\n     break;}\n case 369:\n-#line 1996 \"c-parse.y\"\n+#line 1995 \"c-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -3635,7 +3634,7 @@ case 369:\n \t\t  position_after_white_space (); ;\n     break;}\n case 370:\n-#line 2011 \"c-parse.y\"\n+#line 2010 \"c-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-2].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -3647,52 +3646,52 @@ case 370:\n \t\t  position_after_white_space (); ;\n     break;}\n case 371:\n-#line 2026 \"c-parse.y\"\n+#line 2025 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 372:\n-#line 2029 \"c-parse.y\"\n+#line 2028 \"c-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 373:\n-#line 2034 \"c-parse.y\"\n+#line 2033 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 375:\n-#line 2041 \"c-parse.y\"\n+#line 2040 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 378:\n-#line 2048 \"c-parse.y\"\n+#line 2047 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 379:\n-#line 2053 \"c-parse.y\"\n+#line 2052 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 380:\n-#line 2058 \"c-parse.y\"\n+#line 2057 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 381:\n-#line 2060 \"c-parse.y\"\n+#line 2059 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 382:\n-#line 2066 \"c-parse.y\"\n+#line 2065 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 383:\n-#line 2070 \"c-parse.y\"\n+#line 2069 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 385:\n-#line 2078 \"c-parse.y\"\n+#line 2077 \"c-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -3702,19 +3701,19 @@ case 385:\n \t\t  clear_parm_order (); ;\n     break;}\n case 386:\n-#line 2086 \"c-parse.y\"\n+#line 2085 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 387:\n-#line 2088 \"c-parse.y\"\n+#line 2087 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 388:\n-#line 2094 \"c-parse.y\"\n+#line 2093 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 389:\n-#line 2096 \"c-parse.y\"\n+#line 2095 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -3726,23 +3725,23 @@ case 389:\n \t\t;\n     break;}\n case 390:\n-#line 2106 \"c-parse.y\"\n+#line 2105 \"c-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 391:\n-#line 2108 \"c-parse.y\"\n+#line 2107 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 392:\n-#line 2113 \"c-parse.y\"\n+#line 2112 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 393:\n-#line 2115 \"c-parse.y\"\n+#line 2114 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 394:\n-#line 2122 \"c-parse.y\"\n+#line 2121 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3752,7 +3751,7 @@ case 394:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 395:\n-#line 2130 \"c-parse.y\"\n+#line 2129 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3762,7 +3761,7 @@ case 395:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 396:\n-#line 2138 \"c-parse.y\"\n+#line 2137 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3772,7 +3771,7 @@ case 396:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 397:\n-#line 2146 \"c-parse.y\"\n+#line 2145 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3782,7 +3781,7 @@ case 397:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 398:\n-#line 2155 \"c-parse.y\"\n+#line 2154 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3792,50 +3791,50 @@ case 398:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 399:\n-#line 2168 \"c-parse.y\"\n+#line 2167 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 400:\n-#line 2172 \"c-parse.y\"\n+#line 2171 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 402:\n-#line 2180 \"c-parse.y\"\n+#line 2179 \"c-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 403:\n-#line 2190 \"c-parse.y\"\n+#line 2189 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 404:\n-#line 2192 \"c-parse.y\"\n+#line 2191 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 405:\n-#line 2198 \"c-parse.y\"\n+#line 2197 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 406:\n-#line 2200 \"c-parse.y\"\n+#line 2199 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 407:\n-#line 2205 \"c-parse.y\"\n+#line 2204 \"c-parse.y\"\n { yyval.ttype = SAVE_WARN_FLAGS();\n \t\t  pedantic = 0;\n \t\t  warn_pointer_arith = 0; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 543 \"/usr/share/misc/bison.simple\"\n+#line 543 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4055,5 +4054,5 @@ case 407:\n     }\n   return 1;\n }\n-#line 2210 \"c-parse.y\"\n+#line 2209 \"c-parse.y\"\n "}, {"sha": "aa547511cfb18f97b6d7e9c8a71224182293e653", "filename": "gcc/c-parse.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=71653180cfbab88d037392402436b4ab0356151e", "patch": "@@ -733,8 +733,7 @@ end ifobjc\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME ($$)));\n \t\t\t  else if ((TYPE_MODE (TREE_TYPE (TREE_TYPE ($$)))\n \t\t\t\t    != TYPE_MODE (integer_type_node))\n-\t\t\t\t   && (TREE_TYPE (TREE_TYPE ($$))\n-\t\t\t\t       != void_type_node))\n+\t\t\t\t   && !VOID_TYPE_P (TREE_TYPE (TREE_TYPE ($$))))\n \t\t\t    pedwarn (\"type mismatch in implicit declaration for built-in function `%s'\",\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME ($$)));\n \t\t\t  /* If it really returns void, change that to int.  */"}, {"sha": "e86cbda0c3d3466a8c879193f2da469bc3e8a170", "filename": "gcc/c-parse.y", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=71653180cfbab88d037392402436b4ab0356151e", "patch": "@@ -639,8 +639,7 @@ primary:\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME ($$)));\n \t\t\t  else if ((TYPE_MODE (TREE_TYPE (TREE_TYPE ($$)))\n \t\t\t\t    != TYPE_MODE (integer_type_node))\n-\t\t\t\t   && (TREE_TYPE (TREE_TYPE ($$))\n-\t\t\t\t       != void_type_node))\n+\t\t\t\t   && !VOID_TYPE_P (TREE_TYPE (TREE_TYPE ($$))))\n \t\t\t    pedwarn (\"type mismatch in implicit declaration for built-in function `%s'\",\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME ($$)));\n \t\t\t  /* If it really returns void, change that to int.  */"}, {"sha": "f58845692ac93447c568cabdefc9a4e26d4f26d1", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=71653180cfbab88d037392402436b4ab0356151e", "patch": "@@ -1467,7 +1467,7 @@ build_function_call (function, params)\n \t\t  function, coerced_params, NULL_TREE);\n \n   TREE_SIDE_EFFECTS (result) = 1;\n-  if (TREE_TYPE (result) == void_type_node)\n+  if (VOID_TYPE_P (TREE_TYPE (result)))\n     return result;\n   return require_complete_type (result);\n }\n@@ -2099,15 +2099,15 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n \t     and both must be object or both incomplete.  */\n \t  if (comp_target_types (type0, type1))\n \t    result_type = common_type (type0, type1);\n-\t  else if (TYPE_MAIN_VARIANT (tt0) == void_type_node)\n+\t  else if (VOID_TYPE_P (tt0))\n \t    {\n \t      /* op0 != orig_op0 detects the case of something\n \t\t whose value is 0 but which isn't a valid null ptr const.  */\n \t      if (pedantic && (!integer_zerop (op0) || op0 != orig_op0)\n \t\t  && TREE_CODE (tt1) == FUNCTION_TYPE)\n \t\tpedwarn (\"ANSI C forbids comparison of `void *' with function pointer\");\n \t    }\n-\t  else if (TYPE_MAIN_VARIANT (tt1) == void_type_node)\n+\t  else if (VOID_TYPE_P (tt1))\n \t    {\n \t      if (pedantic && (!integer_zerop (op1) || op1 != orig_op1)\n \t\t  && TREE_CODE (tt0) == FUNCTION_TYPE)\n@@ -3408,13 +3408,13 @@ build_conditional_expr (ifexp, op1, op2)\n       else if (integer_zerop (op2) && TREE_TYPE (type2) == void_type_node\n \t       && TREE_CODE (orig_op2) != NOP_EXPR)\n \tresult_type = qualify_type (type1, type2);\n-      else if (TYPE_MAIN_VARIANT (TREE_TYPE (type1)) == void_type_node)\n+      else if (VOID_TYPE_P (TREE_TYPE (type1)))\n \t{\n \t  if (pedantic && TREE_CODE (TREE_TYPE (type2)) == FUNCTION_TYPE)\n \t    pedwarn (\"ANSI C forbids conditional expr between `void *' and function pointer\");\n \t  result_type = qualify_type (type1, type2);\n \t}\n-      else if (TYPE_MAIN_VARIANT (TREE_TYPE (type2)) == void_type_node)\n+      else if (VOID_TYPE_P (TREE_TYPE (type2)))\n \t{\n \t  if (pedantic && TREE_CODE (TREE_TYPE (type1)) == FUNCTION_TYPE)\n \t    pedwarn (\"ANSI C forbids conditional expr between `void *' and function pointer\");\n@@ -3533,7 +3533,7 @@ internal_build_compound_expr (list, first_p)\n \t any side-effects, unless it was explicitly cast to (void).  */\n       if ((extra_warnings || warn_unused_value)\n            && ! (TREE_CODE (TREE_VALUE (list)) == CONVERT_EXPR\n-                && TREE_TYPE (TREE_VALUE (list)) == void_type_node))\n+                && VOID_TYPE_P (TREE_TYPE (TREE_VALUE (list)))))\n         warning (\"left-hand operand of comma expression has no effect\");\n \n       /* When pedantic, a compound expression can be neither an lvalue\n@@ -4010,8 +4010,7 @@ convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)\n \t\t and vice versa; otherwise, targets must be the same.\n \t\t Meanwhile, the lhs target must have all the qualifiers of\n \t\t the rhs.  */\n-\t      if (TYPE_MAIN_VARIANT (ttl) == void_type_node\n-\t\t  || TYPE_MAIN_VARIANT (ttr) == void_type_node\n+\t      if (VOID_TYPE_P (ttl) || VOID_TYPE_P (ttr)\n \t\t  || comp_target_types (memb_type, rhstype))\n \t\t{\n \t\t  /* If this type won't generate any warnings, use it.  */\n@@ -4086,17 +4085,15 @@ convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)\n       /* Any non-function converts to a [const][volatile] void *\n \t and vice versa; otherwise, targets must be the same.\n \t Meanwhile, the lhs target must have all the qualifiers of the rhs.  */\n-      if (TYPE_MAIN_VARIANT (ttl) == void_type_node\n-\t  || TYPE_MAIN_VARIANT (ttr) == void_type_node\n+      if (VOID_TYPE_P (ttl) || VOID_TYPE_P (ttr)\n \t  || comp_target_types (type, rhstype)\n \t  || (unsigned_type (TYPE_MAIN_VARIANT (ttl))\n \t      == unsigned_type (TYPE_MAIN_VARIANT (ttr))))\n \t{\n \t  if (pedantic\n-\t      && ((TYPE_MAIN_VARIANT (ttl) == void_type_node\n-\t\t   && TREE_CODE (ttr) == FUNCTION_TYPE)\n+\t      && ((VOID_TYPE_P (ttl) && TREE_CODE (ttr) == FUNCTION_TYPE)\n \t\t  ||\n-\t\t  (TYPE_MAIN_VARIANT (ttr) == void_type_node\n+\t\t  (VOID_TYPE_P (ttr)\n \t\t   /* Check TREE_CODE to catch cases like (void *) (char *) 0\n \t\t      which are not ANSI null ptr constants.  */\n \t\t   && (!integer_zerop (rhs) || TREE_CODE (rhs) == NOP_EXPR)\n@@ -4113,8 +4110,7 @@ convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)\n \t\t\t\t     errtype, funname, parmnum);\n \t      /* If this is not a case of ignoring a mismatch in signedness,\n \t\t no warning.  */\n-\t      else if (TYPE_MAIN_VARIANT (ttl) == void_type_node\n-\t\t       || TYPE_MAIN_VARIANT (ttr) == void_type_node\n+\t      else if (VOID_TYPE_P (ttl) || VOID_TYPE_P (ttr)\n \t\t       || comp_target_types (type, rhstype))\n \t\t;\n \t      /* If there is a mismatch, do warn.  */"}, {"sha": "d8c1d25f44f125f1d3f23a62441850a4494c8bc5", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 422, "deletions": 423, "changes": 845, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=71653180cfbab88d037392402436b4ab0356151e", "patch": "@@ -471,54 +471,54 @@ static const short yyrline[] = { 0,\n    491,   495,   497,   500,   504,   531,   533,   535,   537,   539,\n    541,   543,   545,   547,   549,   551,   553,   555,   557,   561,\n    563,   567,   569,   572,   576,   578,   585,   588,   596,   607,\n-   767,   768,   770,   776,   778,   801,   810,   812,   814,   826,\n-   840,   842,   844,   846,   848,   850,   852,   857,   859,   866,\n-   868,   872,   874,   875,   885,   890,   892,   893,   894,   901,\n-   906,   910,   913,   921,   926,   928,   929,   930,   937,   947,\n-   951,   956,   960,   964,   968,   970,   972,   981,   984,   988,\n-   990,   992,   997,  1001,  1004,  1008,  1011,  1013,  1025,  1028,\n-  1030,  1032,  1036,  1040,  1042,  1045,  1058,  1061,  1065,  1067,\n-  1075,  1076,  1077,  1081,  1083,  1088,  1090,  1092,  1098,  1099,\n-  1100,  1103,  1105,  1108,  1110,  1113,  1116,  1122,  1129,  1131,\n-  1138,  1145,  1148,  1155,  1158,  1162,  1165,  1169,  1174,  1177,\n-  1181,  1184,  1186,  1188,  1190,  1197,  1199,  1200,  1201,  1206,\n-  1208,  1210,  1212,  1217,  1221,  1224,  1226,  1231,  1233,  1234,\n-  1237,  1237,  1240,  1243,  1245,  1247,  1250,  1252,  1255,  1263,\n-  1277,  1285,  1289,  1303,  1311,  1318,  1320,  1325,  1328,  1333,\n-  1335,  1337,  1344,  1346,  1347,  1355,  1361,  1363,  1365,  1372,\n-  1374,  1380,  1386,  1388,  1390,  1392,  1399,  1401,  1404,  1407,\n-  1411,  1414,  1418,  1421,  1425,  1430,  1432,  1436,  1438,  1440,\n-  1442,  1446,  1448,  1450,  1453,  1455,  1458,  1462,  1464,  1467,\n-  1469,  1474,  1477,  1482,  1484,  1486,  1490,  1514,  1520,  1533,\n-  1538,  1543,  1545,  1550,  1552,  1556,  1560,  1564,  1574,  1576,\n-  1581,  1586,  1589,  1593,  1596,  1600,  1603,  1606,  1609,  1613,\n-  1616,  1620,  1624,  1626,  1628,  1630,  1632,  1634,  1636,  1638,\n-  1642,  1650,  1658,  1660,  1662,  1666,  1668,  1671,  1674,  1686,\n-  1688,  1693,  1695,  1698,  1712,  1715,  1718,  1720,  1722,  1726,\n-  1730,  1736,  1754,  1759,  1764,  1767,  1781,  1790,  1794,  1798,\n-  1802,  1808,  1812,  1817,  1820,  1825,  1828,  1829,  1845,  1850,\n-  1853,  1865,  1867,  1877,  1887,  1888,  1895,  1897,  1909,  1913,\n-  1927,  1933,  1939,  1940,  1945,  1950,  1954,  1958,  1969,  1976,\n-  1983,  1990,  2001,  2007,  2010,  2015,  2038,  2068,  2099,  2130,\n-  2145,  2159,  2163,  2167,  2170,  2175,  2177,  2180,  2182,  2186,\n-  2191,  2194,  2200,  2205,  2210,  2212,  2221,  2222,  2228,  2230,\n-  2240,  2242,  2246,  2249,  2255,  2264,  2272,  2280,  2289,  2302,\n-  2307,  2312,  2314,  2323,  2326,  2331,  2334,  2338,  2347,  2349,\n-  2350,  2351,  2352,  2353,  2367,  2370,  2374,  2380,  2386,  2393,\n-  2398,  2404,  2411,  2417,  2423,  2428,  2434,  2441,  2447,  2453,\n-  2459,  2467,  2473,  2479,  2487,  2494,  2500,  2509,  2516,  2524,\n-  2529,  2532,  2542,  2544,  2547,  2549,  2550,  2553,  2558,  2559,\n-  2576,  2582,  2587,  2591,  2594,  2595,  2598,  2606,  2612,  2621,\n-  2631,  2638,  2642,  2647,  2656,  2663,  2667,  2677,  2679,  2680,\n-  2682,  2684,  2685,  2686,  2687,  2689,  2691,  2694,  2702,  2709,\n-  2709,  2716,  2722,  2724,  2730,  2735,  2740,  2749,  2751,  2757,\n-  2759,  2762,  2764,  2765,  2766,  2769,  2774,  2776,  2780,  2783,\n-  2790,  2796,  2801,  2808,  2813,  2818,  2823,  2830,  2834,  2837,\n-  2843,  2845,  2846,  2847,  2850,  2852,  2853,  2854,  2855,  2856,\n-  2857,  2858,  2859,  2860,  2861,  2862,  2863,  2864,  2865,  2866,\n-  2867,  2868,  2869,  2870,  2870,  2873,  2879,  2884,  2889,  2895,\n-  2897,  2900,  2902,  2909,  2921,  2926,  2932,  2934,  2940,  2944,\n-  2945,  2951,  2953,  2956,  2958,  2964,  2969,  2975,  2982,  2991\n+   766,   767,   769,   775,   777,   800,   809,   811,   813,   825,\n+   839,   841,   843,   845,   847,   849,   851,   856,   858,   865,\n+   867,   871,   873,   874,   884,   889,   891,   892,   893,   900,\n+   905,   909,   912,   920,   925,   927,   928,   929,   936,   946,\n+   950,   955,   959,   963,   967,   969,   971,   980,   983,   987,\n+   989,   991,   996,  1000,  1003,  1007,  1010,  1012,  1024,  1027,\n+  1029,  1031,  1035,  1039,  1041,  1044,  1057,  1060,  1064,  1066,\n+  1074,  1075,  1076,  1080,  1082,  1087,  1089,  1091,  1097,  1098,\n+  1099,  1102,  1104,  1107,  1109,  1112,  1115,  1121,  1128,  1130,\n+  1137,  1144,  1147,  1154,  1157,  1161,  1164,  1168,  1173,  1176,\n+  1180,  1183,  1185,  1187,  1189,  1196,  1198,  1199,  1200,  1205,\n+  1207,  1209,  1211,  1216,  1220,  1223,  1225,  1230,  1232,  1233,\n+  1236,  1236,  1239,  1242,  1244,  1246,  1249,  1251,  1254,  1262,\n+  1276,  1284,  1288,  1302,  1310,  1317,  1319,  1324,  1327,  1332,\n+  1334,  1336,  1343,  1345,  1346,  1354,  1360,  1362,  1364,  1371,\n+  1373,  1379,  1385,  1387,  1389,  1391,  1398,  1400,  1403,  1406,\n+  1410,  1413,  1417,  1420,  1424,  1429,  1431,  1435,  1437,  1439,\n+  1441,  1445,  1447,  1449,  1452,  1454,  1457,  1461,  1463,  1466,\n+  1468,  1473,  1476,  1481,  1483,  1485,  1489,  1513,  1519,  1532,\n+  1537,  1542,  1544,  1549,  1551,  1555,  1559,  1563,  1573,  1575,\n+  1580,  1585,  1588,  1592,  1595,  1599,  1602,  1605,  1608,  1612,\n+  1615,  1619,  1623,  1625,  1627,  1629,  1631,  1633,  1635,  1637,\n+  1641,  1649,  1657,  1659,  1661,  1665,  1667,  1670,  1673,  1685,\n+  1687,  1692,  1694,  1697,  1711,  1714,  1717,  1719,  1721,  1725,\n+  1729,  1735,  1753,  1758,  1763,  1766,  1780,  1789,  1793,  1797,\n+  1801,  1807,  1811,  1816,  1819,  1824,  1827,  1828,  1844,  1849,\n+  1852,  1864,  1866,  1876,  1886,  1887,  1894,  1896,  1908,  1912,\n+  1926,  1932,  1938,  1939,  1944,  1949,  1953,  1957,  1968,  1975,\n+  1982,  1989,  2000,  2006,  2009,  2014,  2037,  2067,  2098,  2129,\n+  2144,  2158,  2162,  2166,  2169,  2174,  2176,  2179,  2181,  2185,\n+  2190,  2193,  2199,  2204,  2209,  2211,  2220,  2221,  2227,  2229,\n+  2239,  2241,  2245,  2248,  2254,  2263,  2271,  2279,  2288,  2301,\n+  2306,  2311,  2313,  2322,  2325,  2330,  2333,  2337,  2346,  2348,\n+  2349,  2350,  2351,  2352,  2366,  2369,  2373,  2379,  2385,  2392,\n+  2397,  2403,  2410,  2416,  2422,  2427,  2433,  2440,  2446,  2452,\n+  2458,  2466,  2472,  2478,  2486,  2493,  2499,  2508,  2515,  2523,\n+  2528,  2531,  2541,  2543,  2546,  2548,  2549,  2552,  2557,  2558,\n+  2575,  2581,  2586,  2590,  2593,  2594,  2597,  2605,  2611,  2620,\n+  2630,  2637,  2641,  2646,  2655,  2662,  2666,  2676,  2678,  2679,\n+  2681,  2683,  2684,  2685,  2686,  2688,  2690,  2693,  2701,  2708,\n+  2708,  2715,  2721,  2723,  2729,  2734,  2739,  2748,  2750,  2756,\n+  2758,  2761,  2763,  2764,  2765,  2768,  2773,  2775,  2779,  2782,\n+  2789,  2795,  2800,  2807,  2812,  2817,  2822,  2829,  2833,  2836,\n+  2842,  2844,  2845,  2846,  2849,  2851,  2852,  2853,  2854,  2855,\n+  2856,  2857,  2858,  2859,  2860,  2861,  2862,  2863,  2864,  2865,\n+  2866,  2867,  2868,  2869,  2869,  2872,  2878,  2883,  2888,  2894,\n+  2896,  2899,  2901,  2908,  2920,  2925,  2931,  2933,  2939,  2943,\n+  2944,  2950,  2952,  2955,  2957,  2963,  2968,  2974,  2981,  2990\n };\n #endif\n \n@@ -1758,7 +1758,7 @@ static const short yycheck[] = {    56,\n     50,    51,    52,    53,    54,    55,    56,    57\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/misc/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n /* This file comes from bison-1.28.  */\n \n /* Skeleton output parser for bison,\n@@ -1972,7 +1972,7 @@ __yy_memcpy (char *to, char *from, unsigned int count)\n #endif\n #endif\n \f\n-#line 217 \"/usr/share/misc/bison.simple\"\n+#line 217 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2821,8 +2821,7 @@ case 90:\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME (yyval.ttype)));\n \t\t\t  else if ((TYPE_MODE (TREE_TYPE (TREE_TYPE (yyval.ttype)))\n \t\t\t\t    != TYPE_MODE (integer_type_node))\n-\t\t\t\t   && (TREE_TYPE (TREE_TYPE (yyval.ttype))\n-\t\t\t\t       != void_type_node))\n+\t\t\t\t   && !VOID_TYPE_P (TREE_TYPE (TREE_TYPE (yyval.ttype))))\n \t\t\t    pedwarn (\"type mismatch in implicit declaration for built-in function `%s'\",\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME (yyval.ttype)));\n \t\t\t  /* If it really returns void, change that to int.  */\n@@ -2881,23 +2880,23 @@ case 90:\n \t\t;\n     break;}\n case 92:\n-#line 769 \"objc-parse.y\"\n+#line 768 \"objc-parse.y\"\n { yyval.ttype = combine_strings (yyvsp[0].ttype); ;\n     break;}\n case 93:\n-#line 771 \"objc-parse.y\"\n+#line 770 \"objc-parse.y\"\n { char class = TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype));\n \t\t  if (class == 'e' || class == '1'\n \t\t      || class == '2' || class == '<')\n \t\t    C_SET_EXP_ORIGINAL_CODE (yyvsp[-1].ttype, ERROR_MARK);\n \t\t  yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 94:\n-#line 777 \"objc-parse.y\"\n+#line 776 \"objc-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 95:\n-#line 779 \"objc-parse.y\"\n+#line 778 \"objc-parse.y\"\n { tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n@@ -2922,7 +2921,7 @@ case 95:\n \t\t;\n     break;}\n case 96:\n-#line 802 \"objc-parse.y\"\n+#line 801 \"objc-parse.y\"\n {\n \t\t  /* Make sure we call expand_end_stmt_expr.  Otherwise\n \t\t     we are likely to lose sequences and crash later.  */\n@@ -2933,15 +2932,15 @@ case 96:\n \t\t;\n     break;}\n case 97:\n-#line 811 \"objc-parse.y\"\n+#line 810 \"objc-parse.y\"\n { yyval.ttype = build_function_call (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 98:\n-#line 813 \"objc-parse.y\"\n+#line 812 \"objc-parse.y\"\n { yyval.ttype = build_array_ref (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 99:\n-#line 815 \"objc-parse.y\"\n+#line 814 \"objc-parse.y\"\n {\n                   if (doing_objc_thang)\n                     {\n@@ -2955,7 +2954,7 @@ case 99:\n \t\t;\n     break;}\n case 100:\n-#line 827 \"objc-parse.y\"\n+#line 826 \"objc-parse.y\"\n {\n                   tree expr = build_indirect_ref (yyvsp[-2].ttype, \"->\");\n \n@@ -2971,79 +2970,79 @@ case 100:\n \t\t;\n     break;}\n case 101:\n-#line 841 \"objc-parse.y\"\n+#line 840 \"objc-parse.y\"\n { yyval.ttype = build_unary_op (POSTINCREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 102:\n-#line 843 \"objc-parse.y\"\n+#line 842 \"objc-parse.y\"\n { yyval.ttype = build_unary_op (POSTDECREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 103:\n-#line 845 \"objc-parse.y\"\n+#line 844 \"objc-parse.y\"\n { yyval.ttype = build_message_expr (yyvsp[0].ttype); ;\n     break;}\n case 104:\n-#line 847 \"objc-parse.y\"\n+#line 846 \"objc-parse.y\"\n { yyval.ttype = build_selector_expr (yyvsp[0].ttype); ;\n     break;}\n case 105:\n-#line 849 \"objc-parse.y\"\n+#line 848 \"objc-parse.y\"\n { yyval.ttype = build_protocol_expr (yyvsp[0].ttype); ;\n     break;}\n case 106:\n-#line 851 \"objc-parse.y\"\n+#line 850 \"objc-parse.y\"\n { yyval.ttype = build_encode_expr (yyvsp[0].ttype); ;\n     break;}\n case 107:\n-#line 853 \"objc-parse.y\"\n+#line 852 \"objc-parse.y\"\n { yyval.ttype = build_objc_string_object (yyvsp[0].ttype); ;\n     break;}\n case 109:\n-#line 860 \"objc-parse.y\"\n+#line 859 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 111:\n-#line 869 \"objc-parse.y\"\n+#line 868 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 114:\n-#line 877 \"objc-parse.y\"\n+#line 876 \"objc-parse.y\"\n { c_mark_varargs ();\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); ;\n     break;}\n case 115:\n-#line 887 \"objc-parse.y\"\n+#line 886 \"objc-parse.y\"\n { ;\n     break;}\n case 120:\n-#line 903 \"objc-parse.y\"\n+#line 902 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 121:\n-#line 907 \"objc-parse.y\"\n+#line 906 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\t\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 122:\n-#line 911 \"objc-parse.y\"\n+#line 910 \"objc-parse.y\"\n { shadow_tag_warned (yyvsp[-1].ttype, 1);\n \t\t  pedwarn (\"empty declaration\"); ;\n     break;}\n case 123:\n-#line 914 \"objc-parse.y\"\n+#line 913 \"objc-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 124:\n-#line 923 \"objc-parse.y\"\n+#line 922 \"objc-parse.y\"\n { ;\n     break;}\n case 129:\n-#line 938 \"objc-parse.y\"\n+#line 937 \"objc-parse.y\"\n { pending_xref_error ();\n \t\t  declspec_stack = tree_cons (prefix_attributes,\n \t\t\t\t\t      current_declspecs,\n@@ -3052,308 +3051,308 @@ case 129:\n \t\t\t\t     &current_declspecs, &prefix_attributes); ;\n     break;}\n case 130:\n-#line 948 \"objc-parse.y\"\n+#line 947 \"objc-parse.y\"\n { prefix_attributes = chainon (prefix_attributes, yyvsp[0].ttype); ;\n     break;}\n case 131:\n-#line 953 \"objc-parse.y\"\n+#line 952 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 132:\n-#line 957 \"objc-parse.y\"\n+#line 956 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 133:\n-#line 961 \"objc-parse.y\"\n+#line 960 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 134:\n-#line 965 \"objc-parse.y\"\n+#line 964 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 135:\n-#line 969 \"objc-parse.y\"\n+#line 968 \"objc-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 136:\n-#line 971 \"objc-parse.y\"\n+#line 970 \"objc-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 137:\n-#line 973 \"objc-parse.y\"\n+#line 972 \"objc-parse.y\"\n { RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 138:\n-#line 983 \"objc-parse.y\"\n+#line 982 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 139:\n-#line 985 \"objc-parse.y\"\n+#line 984 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 140:\n-#line 989 \"objc-parse.y\"\n+#line 988 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 141:\n-#line 991 \"objc-parse.y\"\n+#line 990 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 142:\n-#line 993 \"objc-parse.y\"\n+#line 992 \"objc-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 143:\n-#line 998 \"objc-parse.y\"\n+#line 997 \"objc-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 144:\n-#line 1003 \"objc-parse.y\"\n+#line 1002 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 145:\n-#line 1005 \"objc-parse.y\"\n+#line 1004 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 146:\n-#line 1010 \"objc-parse.y\"\n+#line 1009 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 147:\n-#line 1012 \"objc-parse.y\"\n+#line 1011 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 148:\n-#line 1014 \"objc-parse.y\"\n+#line 1013 \"objc-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 149:\n-#line 1027 \"objc-parse.y\"\n+#line 1026 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 150:\n-#line 1029 \"objc-parse.y\"\n+#line 1028 \"objc-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 151:\n-#line 1031 \"objc-parse.y\"\n+#line 1030 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 152:\n-#line 1033 \"objc-parse.y\"\n+#line 1032 \"objc-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 153:\n-#line 1038 \"objc-parse.y\"\n+#line 1037 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 154:\n-#line 1041 \"objc-parse.y\"\n+#line 1040 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 155:\n-#line 1043 \"objc-parse.y\"\n+#line 1042 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 156:\n-#line 1046 \"objc-parse.y\"\n+#line 1045 \"objc-parse.y\"\n { if (extra_warnings && TREE_STATIC (yyvsp[-1].ttype))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = TREE_STATIC (yyvsp[-1].ttype); ;\n     break;}\n case 157:\n-#line 1060 \"objc-parse.y\"\n+#line 1059 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 158:\n-#line 1062 \"objc-parse.y\"\n+#line 1061 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 159:\n-#line 1066 \"objc-parse.y\"\n+#line 1065 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 160:\n-#line 1068 \"objc-parse.y\"\n+#line 1067 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 163:\n-#line 1078 \"objc-parse.y\"\n+#line 1077 \"objc-parse.y\"\n { /* For a typedef name, record the meaning, not the name.\n \t\t     In case of `foo foo, bar;'.  */\n \t\t  yyval.ttype = lookup_name (yyvsp[0].ttype); ;\n     break;}\n case 164:\n-#line 1082 \"objc-parse.y\"\n+#line 1081 \"objc-parse.y\"\n { yyval.ttype = get_static_reference (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 165:\n-#line 1084 \"objc-parse.y\"\n+#line 1083 \"objc-parse.y\"\n { yyval.ttype = get_object_reference (yyvsp[0].ttype); ;\n     break;}\n case 166:\n-#line 1089 \"objc-parse.y\"\n+#line 1088 \"objc-parse.y\"\n { yyval.ttype = get_object_reference (yyvsp[0].ttype); ;\n     break;}\n case 167:\n-#line 1091 \"objc-parse.y\"\n+#line 1090 \"objc-parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[-1].ttype); ;\n     break;}\n case 168:\n-#line 1093 \"objc-parse.y\"\n+#line 1092 \"objc-parse.y\"\n { yyval.ttype = groktypename (yyvsp[-1].ttype); ;\n     break;}\n case 176:\n-#line 1115 \"objc-parse.y\"\n+#line 1114 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 177:\n-#line 1117 \"objc-parse.y\"\n+#line 1116 \"objc-parse.y\"\n { if (TREE_CHAIN (yyvsp[-1].ttype)) yyvsp[-1].ttype = combine_strings (yyvsp[-1].ttype);\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 178:\n-#line 1124 \"objc-parse.y\"\n+#line 1123 \"objc-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 179:\n-#line 1129 \"objc-parse.y\"\n+#line 1128 \"objc-parse.y\"\n { finish_init ();\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 180:\n-#line 1132 \"objc-parse.y\"\n+#line 1131 \"objc-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); \n                 ;\n     break;}\n case 181:\n-#line 1140 \"objc-parse.y\"\n+#line 1139 \"objc-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 182:\n-#line 1145 \"objc-parse.y\"\n+#line 1144 \"objc-parse.y\"\n { finish_init ();\n \t\t  decl_attributes (yyvsp[-1].ttype, yyvsp[-3].ttype, prefix_attributes);\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 183:\n-#line 1149 \"objc-parse.y\"\n+#line 1148 \"objc-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 184:\n-#line 1157 \"objc-parse.y\"\n+#line 1156 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 185:\n-#line 1159 \"objc-parse.y\"\n+#line 1158 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 186:\n-#line 1164 \"objc-parse.y\"\n+#line 1163 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 187:\n-#line 1166 \"objc-parse.y\"\n+#line 1165 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 188:\n-#line 1171 \"objc-parse.y\"\n+#line 1170 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-2].ttype; ;\n     break;}\n case 189:\n-#line 1176 \"objc-parse.y\"\n+#line 1175 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 190:\n-#line 1178 \"objc-parse.y\"\n+#line 1177 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 191:\n-#line 1183 \"objc-parse.y\"\n+#line 1182 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 192:\n-#line 1185 \"objc-parse.y\"\n+#line 1184 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 193:\n-#line 1187 \"objc-parse.y\"\n+#line 1186 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, build_tree_list (NULL_TREE, yyvsp[-1].ttype)); ;\n     break;}\n case 194:\n-#line 1189 \"objc-parse.y\"\n+#line 1188 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-5].ttype, tree_cons (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype)); ;\n     break;}\n case 195:\n-#line 1191 \"objc-parse.y\"\n+#line 1190 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 201:\n-#line 1209 \"objc-parse.y\"\n+#line 1208 \"objc-parse.y\"\n { really_start_incremental_init (NULL_TREE); ;\n     break;}\n case 202:\n-#line 1211 \"objc-parse.y\"\n+#line 1210 \"objc-parse.y\"\n { yyval.ttype = pop_init_level (0); ;\n     break;}\n case 203:\n-#line 1213 \"objc-parse.y\"\n+#line 1212 \"objc-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 204:\n-#line 1219 \"objc-parse.y\"\n+#line 1218 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); ;\n     break;}\n case 210:\n-#line 1235 \"objc-parse.y\"\n+#line 1234 \"objc-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 213:\n-#line 1242 \"objc-parse.y\"\n+#line 1241 \"objc-parse.y\"\n { push_init_level (0); ;\n     break;}\n case 214:\n-#line 1244 \"objc-parse.y\"\n+#line 1243 \"objc-parse.y\"\n { process_init_element (pop_init_level (0)); ;\n     break;}\n case 215:\n-#line 1246 \"objc-parse.y\"\n+#line 1245 \"objc-parse.y\"\n { process_init_element (yyvsp[0].ttype); ;\n     break;}\n case 219:\n-#line 1257 \"objc-parse.y\"\n+#line 1256 \"objc-parse.y\"\n { set_init_label (yyvsp[0].ttype); ;\n     break;}\n case 220:\n-#line 1265 \"objc-parse.y\"\n+#line 1264 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -3367,16 +3366,16 @@ case 220:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 221:\n-#line 1277 \"objc-parse.y\"\n+#line 1276 \"objc-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 222:\n-#line 1285 \"objc-parse.y\"\n+#line 1284 \"objc-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 223:\n-#line 1291 \"objc-parse.y\"\n+#line 1290 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -3390,195 +3389,195 @@ case 223:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 224:\n-#line 1303 \"objc-parse.y\"\n+#line 1302 \"objc-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 225:\n-#line 1311 \"objc-parse.y\"\n+#line 1310 \"objc-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 228:\n-#line 1327 \"objc-parse.y\"\n+#line 1326 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 229:\n-#line 1329 \"objc-parse.y\"\n+#line 1328 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 230:\n-#line 1334 \"objc-parse.y\"\n+#line 1333 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 231:\n-#line 1336 \"objc-parse.y\"\n+#line 1335 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 232:\n-#line 1338 \"objc-parse.y\"\n+#line 1337 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 233:\n-#line 1345 \"objc-parse.y\"\n+#line 1344 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 236:\n-#line 1357 \"objc-parse.y\"\n+#line 1356 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 237:\n-#line 1362 \"objc-parse.y\"\n+#line 1361 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 238:\n-#line 1364 \"objc-parse.y\"\n+#line 1363 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 239:\n-#line 1366 \"objc-parse.y\"\n+#line 1365 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 240:\n-#line 1373 \"objc-parse.y\"\n+#line 1372 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 242:\n-#line 1382 \"objc-parse.y\"\n+#line 1381 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 243:\n-#line 1387 \"objc-parse.y\"\n+#line 1386 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 244:\n-#line 1389 \"objc-parse.y\"\n+#line 1388 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 245:\n-#line 1391 \"objc-parse.y\"\n+#line 1390 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 246:\n-#line 1393 \"objc-parse.y\"\n+#line 1392 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 247:\n-#line 1400 \"objc-parse.y\"\n+#line 1399 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 249:\n-#line 1406 \"objc-parse.y\"\n+#line 1405 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 250:\n-#line 1408 \"objc-parse.y\"\n+#line 1407 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 251:\n-#line 1413 \"objc-parse.y\"\n+#line 1412 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 252:\n-#line 1415 \"objc-parse.y\"\n+#line 1414 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 253:\n-#line 1420 \"objc-parse.y\"\n+#line 1419 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 254:\n-#line 1422 \"objc-parse.y\"\n+#line 1421 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 255:\n-#line 1427 \"objc-parse.y\"\n+#line 1426 \"objc-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 256:\n-#line 1431 \"objc-parse.y\"\n+#line 1430 \"objc-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 257:\n-#line 1433 \"objc-parse.y\"\n+#line 1432 \"objc-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 258:\n-#line 1437 \"objc-parse.y\"\n+#line 1436 \"objc-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 259:\n-#line 1439 \"objc-parse.y\"\n+#line 1438 \"objc-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 260:\n-#line 1441 \"objc-parse.y\"\n+#line 1440 \"objc-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 261:\n-#line 1443 \"objc-parse.y\"\n+#line 1442 \"objc-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 262:\n-#line 1447 \"objc-parse.y\"\n+#line 1446 \"objc-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 263:\n-#line 1449 \"objc-parse.y\"\n+#line 1448 \"objc-parse.y\"\n { yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 264:\n-#line 1451 \"objc-parse.y\"\n+#line 1450 \"objc-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype),\n \t\t\t\t    chainon (yyvsp[-7].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 265:\n-#line 1454 \"objc-parse.y\"\n+#line 1453 \"objc-parse.y\"\n { yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 266:\n-#line 1456 \"objc-parse.y\"\n+#line 1455 \"objc-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype),\n \t\t\t\t    chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 267:\n-#line 1459 \"objc-parse.y\"\n+#line 1458 \"objc-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 271:\n-#line 1470 \"objc-parse.y\"\n+#line 1469 \"objc-parse.y\"\n { if (pedantic && ! flag_isoc99)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 272:\n-#line 1476 \"objc-parse.y\"\n+#line 1475 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 273:\n-#line 1478 \"objc-parse.y\"\n+#line 1477 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 274:\n-#line 1483 \"objc-parse.y\"\n+#line 1482 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 275:\n-#line 1485 \"objc-parse.y\"\n+#line 1484 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 276:\n-#line 1487 \"objc-parse.y\"\n+#line 1486 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 277:\n-#line 1491 \"objc-parse.y\"\n+#line 1490 \"objc-parse.y\"\n {\n \t\t  tree interface = lookup_interface (yyvsp[-1].ttype);\n \n@@ -3593,14 +3592,14 @@ case 277:\n \t\t;\n     break;}\n case 278:\n-#line 1516 \"objc-parse.y\"\n+#line 1515 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 279:\n-#line 1521 \"objc-parse.y\"\n+#line 1520 \"objc-parse.y\"\n {\n \t\t  /* Support for unnamed structs or unions as members of \n \t\t     structs or unions (which is [a] useful and [b] supports \n@@ -3615,151 +3614,151 @@ case 279:\n \t\t;\n     break;}\n case 280:\n-#line 1534 \"objc-parse.y\"\n+#line 1533 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 281:\n-#line 1539 \"objc-parse.y\"\n+#line 1538 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 282:\n-#line 1544 \"objc-parse.y\"\n+#line 1543 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 283:\n-#line 1546 \"objc-parse.y\"\n+#line 1545 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  RESTORE_WARN_FLAGS (yyvsp[-1].ttype); ;\n     break;}\n case 285:\n-#line 1553 \"objc-parse.y\"\n+#line 1552 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 286:\n-#line 1558 \"objc-parse.y\"\n+#line 1557 \"objc-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 287:\n-#line 1562 \"objc-parse.y\"\n+#line 1561 \"objc-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 288:\n-#line 1565 \"objc-parse.y\"\n+#line 1564 \"objc-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 290:\n-#line 1577 \"objc-parse.y\"\n+#line 1576 \"objc-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 291:\n-#line 1582 \"objc-parse.y\"\n+#line 1581 \"objc-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 292:\n-#line 1588 \"objc-parse.y\"\n+#line 1587 \"objc-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 293:\n-#line 1590 \"objc-parse.y\"\n+#line 1589 \"objc-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 294:\n-#line 1595 \"objc-parse.y\"\n+#line 1594 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 295:\n-#line 1597 \"objc-parse.y\"\n+#line 1596 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 296:\n-#line 1602 \"objc-parse.y\"\n+#line 1601 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 298:\n-#line 1608 \"objc-parse.y\"\n+#line 1607 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 299:\n-#line 1610 \"objc-parse.y\"\n+#line 1609 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 300:\n-#line 1615 \"objc-parse.y\"\n+#line 1614 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 301:\n-#line 1617 \"objc-parse.y\"\n+#line 1616 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 302:\n-#line 1622 \"objc-parse.y\"\n+#line 1621 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 303:\n-#line 1625 \"objc-parse.y\"\n+#line 1624 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 304:\n-#line 1627 \"objc-parse.y\"\n+#line 1626 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 305:\n-#line 1629 \"objc-parse.y\"\n+#line 1628 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 306:\n-#line 1631 \"objc-parse.y\"\n+#line 1630 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 307:\n-#line 1633 \"objc-parse.y\"\n+#line 1632 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1635 \"objc-parse.y\"\n+#line 1634 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 309:\n-#line 1637 \"objc-parse.y\"\n+#line 1636 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 310:\n-#line 1639 \"objc-parse.y\"\n+#line 1638 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 311:\n-#line 1643 \"objc-parse.y\"\n+#line 1642 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 312:\n-#line 1652 \"objc-parse.y\"\n+#line 1651 \"objc-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 314:\n-#line 1661 \"objc-parse.y\"\n+#line 1660 \"objc-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 315:\n-#line 1663 \"objc-parse.y\"\n+#line 1662 \"objc-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 319:\n-#line 1675 \"objc-parse.y\"\n+#line 1674 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n@@ -3769,12 +3768,12 @@ case 319:\n \t\t;\n     break;}\n case 321:\n-#line 1689 \"objc-parse.y\"\n+#line 1688 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 324:\n-#line 1700 \"objc-parse.y\"\n+#line 1699 \"objc-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3785,37 +3784,37 @@ case 324:\n \t\t;\n     break;}\n case 325:\n-#line 1714 \"objc-parse.y\"\n+#line 1713 \"objc-parse.y\"\n {;\n     break;}\n case 327:\n-#line 1718 \"objc-parse.y\"\n+#line 1717 \"objc-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 328:\n-#line 1721 \"objc-parse.y\"\n+#line 1720 \"objc-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 329:\n-#line 1723 \"objc-parse.y\"\n+#line 1722 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0); ;\n     break;}\n case 330:\n-#line 1727 \"objc-parse.y\"\n+#line 1726 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0); ;\n     break;}\n case 331:\n-#line 1731 \"objc-parse.y\"\n+#line 1730 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0); ;\n     break;}\n case 332:\n-#line 1738 \"objc-parse.y\"\n+#line 1737 \"objc-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -3833,11 +3832,11 @@ case 332:\n \t\t;\n     break;}\n case 333:\n-#line 1755 \"objc-parse.y\"\n+#line 1754 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 336:\n-#line 1769 \"objc-parse.y\"\n+#line 1768 \"objc-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3847,7 +3846,7 @@ case 336:\n \t\t  position_after_white_space (); ;\n     break;}\n case 337:\n-#line 1783 \"objc-parse.y\"\n+#line 1782 \"objc-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3857,43 +3856,43 @@ case 337:\n \t\t  position_after_white_space (); ;\n     break;}\n case 338:\n-#line 1791 \"objc-parse.y\"\n+#line 1790 \"objc-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 339:\n-#line 1795 \"objc-parse.y\"\n+#line 1794 \"objc-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 340:\n-#line 1799 \"objc-parse.y\"\n+#line 1798 \"objc-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 341:\n-#line 1804 \"objc-parse.y\"\n+#line 1803 \"objc-parse.y\"\n { ;\n     break;}\n case 342:\n-#line 1809 \"objc-parse.y\"\n+#line 1808 \"objc-parse.y\"\n { ;\n     break;}\n case 343:\n-#line 1814 \"objc-parse.y\"\n+#line 1813 \"objc-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 344:\n-#line 1819 \"objc-parse.y\"\n+#line 1818 \"objc-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 345:\n-#line 1821 \"objc-parse.y\"\n+#line 1820 \"objc-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 346:\n-#line 1827 \"objc-parse.y\"\n+#line 1826 \"objc-parse.y\"\n { stmt_count++; ;\n     break;}\n case 348:\n-#line 1830 \"objc-parse.y\"\n+#line 1829 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3911,19 +3910,19 @@ case 348:\n \t\t  iterator_expand (yyvsp[-1].ttype); ;\n     break;}\n case 349:\n-#line 1846 \"objc-parse.y\"\n+#line 1845 \"objc-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 350:\n-#line 1850 \"objc-parse.y\"\n+#line 1849 \"objc-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 351:\n-#line 1854 \"objc-parse.y\"\n+#line 1853 \"objc-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3934,11 +3933,11 @@ case 351:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 352:\n-#line 1866 \"objc-parse.y\"\n+#line 1865 \"objc-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 353:\n-#line 1868 \"objc-parse.y\"\n+#line 1867 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3950,7 +3949,7 @@ case 353:\n \t\t  emit_nop (); ;\n     break;}\n case 354:\n-#line 1878 \"objc-parse.y\"\n+#line 1877 \"objc-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3961,22 +3960,22 @@ case 354:\n \t\t  position_after_white_space (); ;\n     break;}\n case 355:\n-#line 1887 \"objc-parse.y\"\n+#line 1886 \"objc-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 356:\n-#line 1890 \"objc-parse.y\"\n+#line 1889 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop (); ;\n     break;}\n case 357:\n-#line 1896 \"objc-parse.y\"\n+#line 1895 \"objc-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 358:\n-#line 1899 \"objc-parse.y\"\n+#line 1898 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3989,12 +3988,12 @@ case 358:\n \t\t;\n     break;}\n case 359:\n-#line 1911 \"objc-parse.y\"\n+#line 1910 \"objc-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 360:\n-#line 1914 \"objc-parse.y\"\n+#line 1913 \"objc-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -4009,7 +4008,7 @@ case 360:\n \t\t  position_after_white_space (); ;\n     break;}\n case 361:\n-#line 1927 \"objc-parse.y\"\n+#line 1926 \"objc-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -4018,44 +4017,44 @@ case 361:\n \t\t  expand_end_loop (); ;\n     break;}\n case 362:\n-#line 1934 \"objc-parse.y\"\n+#line 1933 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n \t\t  position_after_white_space (); ;\n     break;}\n case 363:\n-#line 1939 \"objc-parse.y\"\n+#line 1938 \"objc-parse.y\"\n { expand_end_case (yyvsp[-3].ttype); ;\n     break;}\n case 364:\n-#line 1941 \"objc-parse.y\"\n+#line 1940 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 365:\n-#line 1946 \"objc-parse.y\"\n+#line 1945 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 366:\n-#line 1951 \"objc-parse.y\"\n+#line 1950 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 367:\n-#line 1955 \"objc-parse.y\"\n+#line 1954 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 368:\n-#line 1959 \"objc-parse.y\"\n+#line 1958 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -4067,31 +4066,31 @@ case 368:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 369:\n-#line 1970 \"objc-parse.y\"\n+#line 1969 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 370:\n-#line 1977 \"objc-parse.y\"\n+#line 1976 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 371:\n-#line 1985 \"objc-parse.y\"\n+#line 1984 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 372:\n-#line 1991 \"objc-parse.y\"\n+#line 1990 \"objc-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -4104,15 +4103,15 @@ case 372:\n \t\t;\n     break;}\n case 373:\n-#line 2002 \"objc-parse.y\"\n+#line 2001 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 376:\n-#line 2017 \"objc-parse.y\"\n+#line 2016 \"objc-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -4135,14 +4134,14 @@ case 376:\n \t  ;\n     break;}\n case 377:\n-#line 2038 \"objc-parse.y\"\n+#line 2037 \"objc-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 378:\n-#line 2069 \"objc-parse.y\"\n+#line 2068 \"objc-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -4175,7 +4174,7 @@ case 378:\n \t\t  position_after_white_space (); ;\n     break;}\n case 379:\n-#line 2100 \"objc-parse.y\"\n+#line 2099 \"objc-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -4208,7 +4207,7 @@ case 379:\n \t\t  position_after_white_space (); ;\n     break;}\n case 380:\n-#line 2131 \"objc-parse.y\"\n+#line 2130 \"objc-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -4225,7 +4224,7 @@ case 380:\n \t\t  position_after_white_space (); ;\n     break;}\n case 381:\n-#line 2146 \"objc-parse.y\"\n+#line 2145 \"objc-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-2].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -4237,52 +4236,52 @@ case 381:\n \t\t  position_after_white_space (); ;\n     break;}\n case 382:\n-#line 2161 \"objc-parse.y\"\n+#line 2160 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 383:\n-#line 2164 \"objc-parse.y\"\n+#line 2163 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 384:\n-#line 2169 \"objc-parse.y\"\n+#line 2168 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 386:\n-#line 2176 \"objc-parse.y\"\n+#line 2175 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 389:\n-#line 2183 \"objc-parse.y\"\n+#line 2182 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 390:\n-#line 2188 \"objc-parse.y\"\n+#line 2187 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 391:\n-#line 2193 \"objc-parse.y\"\n+#line 2192 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 392:\n-#line 2195 \"objc-parse.y\"\n+#line 2194 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 393:\n-#line 2201 \"objc-parse.y\"\n+#line 2200 \"objc-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 394:\n-#line 2205 \"objc-parse.y\"\n+#line 2204 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 396:\n-#line 2213 \"objc-parse.y\"\n+#line 2212 \"objc-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -4292,19 +4291,19 @@ case 396:\n \t\t  clear_parm_order (); ;\n     break;}\n case 397:\n-#line 2221 \"objc-parse.y\"\n+#line 2220 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 398:\n-#line 2223 \"objc-parse.y\"\n+#line 2222 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 399:\n-#line 2229 \"objc-parse.y\"\n+#line 2228 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 400:\n-#line 2231 \"objc-parse.y\"\n+#line 2230 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -4316,23 +4315,23 @@ case 400:\n \t\t;\n     break;}\n case 401:\n-#line 2241 \"objc-parse.y\"\n+#line 2240 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 402:\n-#line 2243 \"objc-parse.y\"\n+#line 2242 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 403:\n-#line 2248 \"objc-parse.y\"\n+#line 2247 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 404:\n-#line 2250 \"objc-parse.y\"\n+#line 2249 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 405:\n-#line 2257 \"objc-parse.y\"\n+#line 2256 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4342,7 +4341,7 @@ case 405:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 406:\n-#line 2265 \"objc-parse.y\"\n+#line 2264 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4352,7 +4351,7 @@ case 406:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 407:\n-#line 2273 \"objc-parse.y\"\n+#line 2272 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4362,7 +4361,7 @@ case 407:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 408:\n-#line 2281 \"objc-parse.y\"\n+#line 2280 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4372,7 +4371,7 @@ case 408:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 409:\n-#line 2290 \"objc-parse.y\"\n+#line 2289 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4382,49 +4381,49 @@ case 409:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 410:\n-#line 2303 \"objc-parse.y\"\n+#line 2302 \"objc-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 411:\n-#line 2307 \"objc-parse.y\"\n+#line 2306 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 413:\n-#line 2315 \"objc-parse.y\"\n+#line 2314 \"objc-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 414:\n-#line 2325 \"objc-parse.y\"\n+#line 2324 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 415:\n-#line 2327 \"objc-parse.y\"\n+#line 2326 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 416:\n-#line 2333 \"objc-parse.y\"\n+#line 2332 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 417:\n-#line 2335 \"objc-parse.y\"\n+#line 2334 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 418:\n-#line 2340 \"objc-parse.y\"\n+#line 2339 \"objc-parse.y\"\n { yyval.ttype = SAVE_WARN_FLAGS();\n \t\t  pedantic = 0;\n \t\t  warn_pointer_arith = 0; ;\n     break;}\n case 424:\n-#line 2354 \"objc-parse.y\"\n+#line 2353 \"objc-parse.y\"\n {\n \t\t  if (objc_implementation_context)\n                     {\n@@ -4437,114 +4436,114 @@ case 424:\n \t\t;\n     break;}\n case 425:\n-#line 2369 \"objc-parse.y\"\n+#line 2368 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 426:\n-#line 2371 \"objc-parse.y\"\n+#line 2370 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 427:\n-#line 2376 \"objc-parse.y\"\n+#line 2375 \"objc-parse.y\"\n {\n \t\t  objc_declare_class (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 428:\n-#line 2382 \"objc-parse.y\"\n+#line 2381 \"objc-parse.y\"\n {\n \t\t  objc_declare_alias (yyvsp[-2].ttype, yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 429:\n-#line 2388 \"objc-parse.y\"\n+#line 2387 \"objc-parse.y\"\n {\n \t\t  objc_interface_context = objc_ivar_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-2].ttype, NULL_TREE, yyvsp[-1].ttype);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 430:\n-#line 2394 \"objc-parse.y\"\n+#line 2393 \"objc-parse.y\"\n {\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 431:\n-#line 2399 \"objc-parse.y\"\n+#line 2398 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 432:\n-#line 2405 \"objc-parse.y\"\n+#line 2404 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-1].ttype, NULL_TREE, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 433:\n-#line 2412 \"objc-parse.y\"\n+#line 2411 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 434:\n-#line 2418 \"objc-parse.y\"\n+#line 2417 \"objc-parse.y\"\n {\n \t\t  objc_interface_context = objc_ivar_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-4].ttype, yyvsp[-2].ttype, yyvsp[-1].ttype);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 435:\n-#line 2424 \"objc-parse.y\"\n+#line 2423 \"objc-parse.y\"\n {\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 436:\n-#line 2429 \"objc-parse.y\"\n+#line 2428 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 437:\n-#line 2435 \"objc-parse.y\"\n+#line 2434 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 438:\n-#line 2442 \"objc-parse.y\"\n+#line 2441 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 439:\n-#line 2448 \"objc-parse.y\"\n+#line 2447 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context = objc_ivar_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-1].ttype, NULL_TREE, NULL_TREE);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 440:\n-#line 2454 \"objc-parse.y\"\n+#line 2453 \"objc-parse.y\"\n {\n                   objc_ivar_chain\n \t\t    = continue_class (objc_implementation_context);\n \t\t;\n     break;}\n case 441:\n-#line 2460 \"objc-parse.y\"\n+#line 2459 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[0].ttype, NULL_TREE, NULL_TREE);\n@@ -4553,22 +4552,22 @@ case 441:\n \t\t;\n     break;}\n case 442:\n-#line 2468 \"objc-parse.y\"\n+#line 2467 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context = objc_ivar_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, NULL_TREE);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 443:\n-#line 2474 \"objc-parse.y\"\n+#line 2473 \"objc-parse.y\"\n {\n                   objc_ivar_chain\n \t\t    = continue_class (objc_implementation_context);\n \t\t;\n     break;}\n case 444:\n-#line 2480 \"objc-parse.y\"\n+#line 2479 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE);\n@@ -4577,22 +4576,22 @@ case 444:\n \t\t;\n     break;}\n case 445:\n-#line 2488 \"objc-parse.y\"\n+#line 2487 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CATEGORY_INTERFACE_TYPE, yyvsp[-4].ttype, yyvsp[-2].ttype, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 446:\n-#line 2495 \"objc-parse.y\"\n+#line 2494 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 447:\n-#line 2501 \"objc-parse.y\"\n+#line 2500 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CATEGORY_IMPLEMENTATION_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, NULL_TREE);\n@@ -4601,29 +4600,29 @@ case 447:\n \t\t;\n     break;}\n case 448:\n-#line 2511 \"objc-parse.y\"\n+#line 2510 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_interface_context\n \t\t    = start_protocol(PROTOCOL_INTERFACE_TYPE, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 449:\n-#line 2517 \"objc-parse.y\"\n+#line 2516 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers();\n \t\t  finish_protocol(objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 450:\n-#line 2526 \"objc-parse.y\"\n+#line 2525 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 452:\n-#line 2534 \"objc-parse.y\"\n+#line 2533 \"objc-parse.y\"\n {\n \t\t  if (yyvsp[-2].code == LT_EXPR && yyvsp[0].code == GT_EXPR)\n \t\t    yyval.ttype = yyvsp[-1].ttype;\n@@ -4632,54 +4631,54 @@ case 452:\n \t\t;\n     break;}\n case 455:\n-#line 2548 \"objc-parse.y\"\n+#line 2547 \"objc-parse.y\"\n { objc_public_flag = 2; ;\n     break;}\n case 456:\n-#line 2549 \"objc-parse.y\"\n+#line 2548 \"objc-parse.y\"\n { objc_public_flag = 0; ;\n     break;}\n case 457:\n-#line 2550 \"objc-parse.y\"\n+#line 2549 \"objc-parse.y\"\n { objc_public_flag = 1; ;\n     break;}\n case 458:\n-#line 2555 \"objc-parse.y\"\n+#line 2554 \"objc-parse.y\"\n {\n                   yyval.ttype = NULL_TREE;\n                 ;\n     break;}\n case 460:\n-#line 2560 \"objc-parse.y\"\n+#line 2559 \"objc-parse.y\"\n {\n                   if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\");\n                 ;\n     break;}\n case 461:\n-#line 2578 \"objc-parse.y\"\n+#line 2577 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 462:\n-#line 2583 \"objc-parse.y\"\n+#line 2582 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 463:\n-#line 2588 \"objc-parse.y\"\n+#line 2587 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 464:\n-#line 2593 \"objc-parse.y\"\n+#line 2592 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 467:\n-#line 2600 \"objc-parse.y\"\n+#line 2599 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n@@ -4688,15 +4687,15 @@ case 467:\n                 ;\n     break;}\n case 468:\n-#line 2607 \"objc-parse.y\"\n+#line 2606 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n \t\t\t\t\t      yyvsp[-2].ttype, current_declspecs, yyvsp[0].ttype);\n                 ;\n     break;}\n case 469:\n-#line 2613 \"objc-parse.y\"\n+#line 2612 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n@@ -4705,7 +4704,7 @@ case 469:\n                 ;\n     break;}\n case 470:\n-#line 2623 \"objc-parse.y\"\n+#line 2622 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  if (objc_implementation_context)\n@@ -4715,7 +4714,7 @@ case 470:\n \t\t;\n     break;}\n case 471:\n-#line 2631 \"objc-parse.y\"\n+#line 2630 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_class_method (objc_implementation_context, yyvsp[0].ttype);\n@@ -4724,20 +4723,20 @@ case 471:\n \t\t;\n     break;}\n case 472:\n-#line 2638 \"objc-parse.y\"\n+#line 2637 \"objc-parse.y\"\n {\n \t\t  continue_method_def ();\n \t\t;\n     break;}\n case 473:\n-#line 2642 \"objc-parse.y\"\n+#line 2641 \"objc-parse.y\"\n {\n \t\t  finish_method_def ();\n \t\t  objc_method_context = NULL_TREE;\n \t\t;\n     break;}\n case 474:\n-#line 2648 \"objc-parse.y\"\n+#line 2647 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  if (objc_implementation_context)\n@@ -4747,7 +4746,7 @@ case 474:\n \t\t;\n     break;}\n case 475:\n-#line 2656 \"objc-parse.y\"\n+#line 2655 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_instance_method (objc_implementation_context, yyvsp[0].ttype);\n@@ -4756,266 +4755,266 @@ case 475:\n \t\t;\n     break;}\n case 476:\n-#line 2663 \"objc-parse.y\"\n+#line 2662 \"objc-parse.y\"\n {\n \t\t  continue_method_def ();\n \t\t;\n     break;}\n case 477:\n-#line 2667 \"objc-parse.y\"\n+#line 2666 \"objc-parse.y\"\n {\n \t\t  finish_method_def ();\n \t\t  objc_method_context = NULL_TREE;\n \t\t;\n     break;}\n case 479:\n-#line 2679 \"objc-parse.y\"\n+#line 2678 \"objc-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 484:\n-#line 2686 \"objc-parse.y\"\n+#line 2685 \"objc-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 488:\n-#line 2696 \"objc-parse.y\"\n+#line 2695 \"objc-parse.y\"\n {\n \t\t  /* Remember protocol qualifiers in prototypes.  */\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_inherit_code = CLASS_METHOD_DECL;\n \t\t;\n     break;}\n case 489:\n-#line 2702 \"objc-parse.y\"\n+#line 2701 \"objc-parse.y\"\n {\n \t\t  /* Forget protocol qualifiers here.  */\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_class_method (objc_interface_context, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 491:\n-#line 2710 \"objc-parse.y\"\n+#line 2709 \"objc-parse.y\"\n {\n \t\t  /* Remember protocol qualifiers in prototypes.  */\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_inherit_code = INSTANCE_METHOD_DECL;\n \t\t;\n     break;}\n case 492:\n-#line 2716 \"objc-parse.y\"\n+#line 2715 \"objc-parse.y\"\n {\n \t\t  /* Forget protocol qualifiers here.  */\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_instance_method (objc_interface_context, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 494:\n-#line 2726 \"objc-parse.y\"\n+#line 2725 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 495:\n-#line 2731 \"objc-parse.y\"\n+#line 2730 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 496:\n-#line 2736 \"objc-parse.y\"\n+#line 2735 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 497:\n-#line 2741 \"objc-parse.y\"\n+#line 2740 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 506:\n-#line 2771 \"objc-parse.y\"\n+#line 2770 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 507:\n-#line 2775 \"objc-parse.y\"\n+#line 2774 \"objc-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 508:\n-#line 2777 \"objc-parse.y\"\n+#line 2776 \"objc-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 509:\n-#line 2782 \"objc-parse.y\"\n+#line 2781 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 510:\n-#line 2784 \"objc-parse.y\"\n+#line 2783 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 511:\n-#line 2792 \"objc-parse.y\"\n+#line 2791 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 512:\n-#line 2797 \"objc-parse.y\"\n+#line 2796 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 513:\n-#line 2802 \"objc-parse.y\"\n+#line 2801 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 514:\n-#line 2810 \"objc-parse.y\"\n+#line 2809 \"objc-parse.y\"\n {\n \t    \t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 515:\n-#line 2814 \"objc-parse.y\"\n+#line 2813 \"objc-parse.y\"\n {\n \t\t  /* oh what a kludge! */\n \t\t  yyval.ttype = objc_ellipsis_node;\n \t\t;\n     break;}\n case 516:\n-#line 2819 \"objc-parse.y\"\n+#line 2818 \"objc-parse.y\"\n {\n \t\t  pushlevel (0);\n \t\t;\n     break;}\n case 517:\n-#line 2823 \"objc-parse.y\"\n+#line 2822 \"objc-parse.y\"\n {\n \t  \t  /* returns a tree list node generated by get_parm_info */\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t  poplevel (0, 0, 0);\n \t\t;\n     break;}\n case 520:\n-#line 2838 \"objc-parse.y\"\n+#line 2837 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 525:\n-#line 2851 \"objc-parse.y\"\n+#line 2850 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 526:\n-#line 2852 \"objc-parse.y\"\n+#line 2851 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 527:\n-#line 2853 \"objc-parse.y\"\n+#line 2852 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 528:\n-#line 2854 \"objc-parse.y\"\n+#line 2853 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 529:\n-#line 2855 \"objc-parse.y\"\n+#line 2854 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 530:\n-#line 2856 \"objc-parse.y\"\n+#line 2855 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 531:\n-#line 2857 \"objc-parse.y\"\n+#line 2856 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 532:\n-#line 2858 \"objc-parse.y\"\n+#line 2857 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 533:\n-#line 2859 \"objc-parse.y\"\n+#line 2858 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 534:\n-#line 2860 \"objc-parse.y\"\n+#line 2859 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 535:\n-#line 2861 \"objc-parse.y\"\n+#line 2860 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 536:\n-#line 2862 \"objc-parse.y\"\n+#line 2861 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 537:\n-#line 2863 \"objc-parse.y\"\n+#line 2862 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 538:\n-#line 2864 \"objc-parse.y\"\n+#line 2863 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 539:\n-#line 2865 \"objc-parse.y\"\n+#line 2864 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 540:\n-#line 2866 \"objc-parse.y\"\n+#line 2865 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 541:\n-#line 2867 \"objc-parse.y\"\n+#line 2866 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 542:\n-#line 2868 \"objc-parse.y\"\n+#line 2867 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 543:\n-#line 2869 \"objc-parse.y\"\n+#line 2868 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 546:\n-#line 2875 \"objc-parse.y\"\n+#line 2874 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (yyvsp[-5].ttype, yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 547:\n-#line 2880 \"objc-parse.y\"\n+#line 2879 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (yyvsp[-2].ttype, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 548:\n-#line 2885 \"objc-parse.y\"\n+#line 2884 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (NULL_TREE, yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 549:\n-#line 2890 \"objc-parse.y\"\n+#line 2889 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (NULL_TREE, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 553:\n-#line 2903 \"objc-parse.y\"\n+#line 2902 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 554:\n-#line 2911 \"objc-parse.y\"\n+#line 2910 \"objc-parse.y\"\n {\n \t\t  if (TREE_CHAIN (yyvsp[0].ttype) == NULL_TREE)\n \t\t    /* just return the expr., remove a level of indirection */\n@@ -5026,76 +5025,76 @@ case 554:\n \t\t;\n     break;}\n case 555:\n-#line 2923 \"objc-parse.y\"\n+#line 2922 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 556:\n-#line 2927 \"objc-parse.y\"\n+#line 2926 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 558:\n-#line 2935 \"objc-parse.y\"\n+#line 2934 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = get_class_reference (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 559:\n-#line 2942 \"objc-parse.y\"\n+#line 2941 \"objc-parse.y\"\n { objc_receiver_context = 1; ;\n     break;}\n case 560:\n-#line 2944 \"objc-parse.y\"\n+#line 2943 \"objc-parse.y\"\n { objc_receiver_context = 0; ;\n     break;}\n case 561:\n-#line 2946 \"objc-parse.y\"\n+#line 2945 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 565:\n-#line 2959 \"objc-parse.y\"\n+#line 2958 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 566:\n-#line 2966 \"objc-parse.y\"\n+#line 2965 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-1].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 567:\n-#line 2970 \"objc-parse.y\"\n+#line 2969 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, NULL_TREE);\n \t\t;\n     break;}\n case 568:\n-#line 2977 \"objc-parse.y\"\n+#line 2976 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 569:\n-#line 2984 \"objc-parse.y\"\n+#line 2983 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 570:\n-#line 2993 \"objc-parse.y\"\n+#line 2992 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = groktypename (yyvsp[-1].ttype);\n \t\t;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 543 \"/usr/share/misc/bison.simple\"\n+#line 543 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -5315,5 +5314,5 @@ case 570:\n     }\n   return 1;\n }\n-#line 2998 \"objc-parse.y\"\n+#line 2997 \"objc-parse.y\"\n "}, {"sha": "7bf9119175da7e0119e23646523e713f6341230e", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=71653180cfbab88d037392402436b4ab0356151e", "patch": "@@ -706,8 +706,7 @@ primary:\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME ($$)));\n \t\t\t  else if ((TYPE_MODE (TREE_TYPE (TREE_TYPE ($$)))\n \t\t\t\t    != TYPE_MODE (integer_type_node))\n-\t\t\t\t   && (TREE_TYPE (TREE_TYPE ($$))\n-\t\t\t\t       != void_type_node))\n+\t\t\t\t   && !VOID_TYPE_P (TREE_TYPE (TREE_TYPE ($$))))\n \t\t\t    pedwarn (\"type mismatch in implicit declaration for built-in function `%s'\",\n \t\t\t\t     IDENTIFIER_POINTER (DECL_NAME ($$)));\n \t\t\t  /* If it really returns void, change that to int.  */"}, {"sha": "5016e67c9f22a6f611dc3b5bf7573b4a5bb01cdd", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71653180cfbab88d037392402436b4ab0356151e/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=71653180cfbab88d037392402436b4ab0356151e", "patch": "@@ -1860,7 +1860,7 @@ expand_expr_stmt (exp)\n       if (! TREE_SIDE_EFFECTS (exp)\n \t  && (extra_warnings || warn_unused_value)\n \t  && !(TREE_CODE (exp) == CONVERT_EXPR\n-\t       && TREE_TYPE (exp) == void_type_node))\n+\t       && VOID_TYPE_P (TREE_TYPE (exp))))\n \twarning_with_file_and_line (emit_filename, emit_lineno,\n \t\t\t\t    \"statement with no effect\");\n       else if (warn_unused_value)\n@@ -1970,7 +1970,7 @@ warn_if_unused_value (exp)\n     case CONVERT_EXPR:\n     case NON_LVALUE_EXPR:\n       /* Don't warn about values cast to void.  */\n-      if (TREE_TYPE (exp) == void_type_node)\n+      if (VOID_TYPE_P (TREE_TYPE (exp)))\n \treturn 0;\n       /* Don't warn about conversions not explicit in the user's program.  */\n       if (TREE_NO_UNUSED_WARNING (exp))\n@@ -2849,7 +2849,7 @@ expand_return (retval)\n   else if ((TREE_CODE (retval) == MODIFY_EXPR || TREE_CODE (retval) == INIT_EXPR)\n \t   && TREE_CODE (TREE_OPERAND (retval, 0)) == RESULT_DECL)\n     retval_rhs = TREE_OPERAND (retval, 1);\n-  else if (TREE_TYPE (retval) == void_type_node)\n+  else if (VOID_TYPE_P (TREE_TYPE (retval)))\n     /* Recognize tail-recursive call to void function.  */\n     retval_rhs = retval;\n   else\n@@ -3074,7 +3074,7 @@ expand_return (retval)\n     }\n   else if (cleanups\n       && retval_rhs != 0\n-      && TREE_TYPE (retval_rhs) != void_type_node\n+      && !VOID_TYPE_P (TREE_TYPE (retval_rhs))\n       && (GET_CODE (result_rtl) == REG\n \t  || (GET_CODE (result_rtl) == PARALLEL)))\n     {"}, {"sha": "450dbd1164a252f23161f69d81e0f39c4d21b737", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71653180cfbab88d037392402436b4ab0356151e/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71653180cfbab88d037392402436b4ab0356151e/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=71653180cfbab88d037392402436b4ab0356151e", "patch": "@@ -453,9 +453,12 @@ extern void tree_class_check_failed PARAMS ((const tree, char,\n /* Nonzero if this type is a complete type.  */\n #define COMPLETE_TYPE_P(NODE) (TYPE_SIZE (NODE) != NULL_TREE)\n \n+/* Nonzero if this type is the (possibly qualified) void type.  */\n+#define VOID_TYPE_P(NODE) (TYPE_MAIN_VARIANT (NODE) == void_type_node)\n+\n /* Nonzero if this type is complete or is cv void.  */\n #define COMPLETE_OR_VOID_TYPE_P(NODE) \\\n-    (COMPLETE_TYPE_P (NODE) || TREE_CODE (NODE) == VOID_TYPE)\n+    (COMPLETE_TYPE_P (NODE) || VOID_TYPE_P (NODE))\n \n /* Nonzero if this type is complete or is an array with unspecified bound.  */\n #define COMPLETE_OR_UNBOUND_ARRAY_TYPE_P(NODE) \\"}]}