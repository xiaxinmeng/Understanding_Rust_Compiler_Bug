{"sha": "c42091c1b505de009cea3420537a5453d81d0165", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQyMDkxYzFiNTA1ZGUwMDljZWEzNDIwNTM3YTU0NTNkODFkMDE2NQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2013-09-06T17:27:54Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-09-06T17:27:54Z"}, "message": "resource.c (mark_target_live_regs): Compute resources taking into account if a call is predicated or not.\n\n2013-09-06 Claudiu Zissulescu <claziss@synopsys.com>\n\n        * resource.c (mark_target_live_regs): Compute resources taking\n        into account if a call is predicated or not.\n\nFrom-SVN: r202343", "tree": {"sha": "e9d3367377ae74b0cd5bae6deee44fccdc09158d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9d3367377ae74b0cd5bae6deee44fccdc09158d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c42091c1b505de009cea3420537a5453d81d0165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c42091c1b505de009cea3420537a5453d81d0165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c42091c1b505de009cea3420537a5453d81d0165", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c42091c1b505de009cea3420537a5453d81d0165/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c641f8b3a3059353ac6f8798d10d2f5c611109b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c641f8b3a3059353ac6f8798d10d2f5c611109b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c641f8b3a3059353ac6f8798d10d2f5c611109b"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "8493ee1424e99a7f120f3de991e552b484aea260", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42091c1b505de009cea3420537a5453d81d0165/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42091c1b505de009cea3420537a5453d81d0165/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c42091c1b505de009cea3420537a5453d81d0165", "patch": "@@ -1,3 +1,8 @@\n+2013-09-06 Claudiu Zissulescu <claziss@synopsys.com>\n+\n+\t* resource.c (mark_target_live_regs): Compute resources taking\n+\tinto account if a call is predicated or not.\n+\n 2013-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* toplev.c (output_stack_usage): Be prepared for suffixes created by"}, {"sha": "919cffbd0a09c9821a327cca6fc3fc959c8ebb83", "filename": "gcc/resource.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42091c1b505de009cea3420537a5453d81d0165/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42091c1b505de009cea3420537a5453d81d0165/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=c42091c1b505de009cea3420537a5453d81d0165", "patch": "@@ -994,11 +994,18 @@ mark_target_live_regs (rtx insns, rtx target, struct resources *res)\n \n \t  if (CALL_P (real_insn))\n \t    {\n-\t      /* CALL clobbers all call-used regs that aren't fixed except\n-\t\t sp, ap, and fp.  Do this before setting the result of the\n-\t\t call live.  */\n-\t      AND_COMPL_HARD_REG_SET (current_live_regs,\n-\t\t\t\t      regs_invalidated_by_call);\n+\t      /* Values in call-clobbered registers survive a COND_EXEC CALL\n+\t\t if that is not executed; this matters for resoure use because\n+\t\t they may be used by a complementarily (or more strictly)\n+\t\t predicated instruction, or if the CALL is NORETURN.  */\n+\t      if (GET_CODE (PATTERN (real_insn)) != COND_EXEC)\n+\t\t{\n+\t\t  /* CALL clobbers all call-used regs that aren't fixed except\n+\t\t     sp, ap, and fp.  Do this before setting the result of the\n+\t\t     call live.  */\n+\t\t  AND_COMPL_HARD_REG_SET (current_live_regs,\n+\t\t\t\t\t  regs_invalidated_by_call);\n+\t\t}\n \n \t      /* A CALL_INSN sets any global register live, since it may\n \t\t have been modified by the call.  */"}]}