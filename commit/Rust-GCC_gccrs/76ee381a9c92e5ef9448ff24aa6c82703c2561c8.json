{"sha": "76ee381a9c92e5ef9448ff24aa6c82703c2561c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZlZTM4MWE5YzkyZTVlZjk0NDhmZjI0YWE2YzgyNzAzYzI1NjFjOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2010-07-12T19:04:11Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2010-07-12T19:04:11Z"}, "message": "Makefile.in (bb-reorder.o, [...]): Depend on bb-reorder.h\n\ngcc/\n\t* Makefile.in (bb-reorder.o, target-globals.o): Depend on bb-reorder.h\n\t* bb-reorder.h: New file.\n\t* bb-reorder.c (default_target_bb_reorder): New variable.\n\t(this_target_bb_reorder): New conditional variable.\n\t(uncond_jump_length): Redefine as a macro.\n\t* target-globals.h (this_target_bb_reorder): Declare.\n\t(target_globals): Add a bb_reorder field.\n\t(restore_target_globals): Copy the bb_reorder field to\n\tthis_target_bb-reorder.\n\t* target-globals.c: Include bb-reorder.h.\n\t(default_target_globals): Initialize the bb_reorder field.\n\t(save_target_globals): Likewise.\n\nFrom-SVN: r162109", "tree": {"sha": "2c1af71f54de34d009cdd25542919f79c669973b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c1af71f54de34d009cdd25542919f79c669973b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76ee381a9c92e5ef9448ff24aa6c82703c2561c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ee381a9c92e5ef9448ff24aa6c82703c2561c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ee381a9c92e5ef9448ff24aa6c82703c2561c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c6811fe1e7b07f9ab3ea30d76e615b33ae6a783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c6811fe1e7b07f9ab3ea30d76e615b33ae6a783", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c6811fe1e7b07f9ab3ea30d76e615b33ae6a783"}], "stats": {"total": 77, "additions": 71, "deletions": 6}, "files": [{"sha": "f8075c596fa8ffff50cd936a16199508c3502d7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76ee381a9c92e5ef9448ff24aa6c82703c2561c8", "patch": "@@ -1,3 +1,18 @@\n+2010-07-12  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* Makefile.in (bb-reorder.o, target-globals.o): Depend on bb-reorder.h\n+\t* bb-reorder.h: New file.\n+\t* bb-reorder.c (default_target_bb_reorder): New variable.\n+\t(this_target_bb_reorder): New conditional variable.\n+\t(uncond_jump_length): Redefine as a macro.\n+\t* target-globals.h (this_target_bb_reorder): Declare.\n+\t(target_globals): Add a bb_reorder field.\n+\t(restore_target_globals): Copy the bb_reorder field to\n+\tthis_target_bb-reorder.\n+\t* target-globals.c: Include bb-reorder.h.\n+\t(default_target_globals): Initialize the bb_reorder field.\n+\t(save_target_globals): Likewise.\n+\n 2010-07-12  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* Makefile.in (gcse.o, target-globals.o): Depend on gcse.h.."}, {"sha": "c6f199f95bebe1d0747e8286e890bb783b2abc5b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=76ee381a9c92e5ef9448ff24aa6c82703c2561c8", "patch": "@@ -3434,7 +3434,8 @@ lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H) $(DIAGN\n bb-reorder.o : bb-reorder.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(TIMEVAR_H) output.h $(CFGLAYOUT_H) $(FIBHEAP_H) \\\n    $(TARGET_H) $(FUNCTION_H) $(TM_P_H) $(OBSTACK_H) $(EXPR_H) $(REGS_H) \\\n-   $(PARAMS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H) $(DF_H)\n+   $(PARAMS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H) $(DF_H) \\\n+   bb-reorder.h\n tracer.o : tracer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(BASIC_BLOCK_H) hard-reg-set.h output.h $(CFGLAYOUT_H) \\\n    $(FLAGS_H) $(TIMEVAR_H) $(PARAMS_H) $(COVERAGE_H) $(FIBHEAP_H) \\\n@@ -3483,7 +3484,7 @@ lower-subreg.o : lower-subreg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n target-globals.o : target-globals.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) insn-config.h $(MACHMODE_H) $(GGC_H) $(TOPLEV_H) target-globals.h \\\n    $(FLAGS_H) $(REGS_H) $(RTL_H) reload.h expmed.h $(EXPR_H) $(OPTABS_H) \\\n-   $(LIBFUNCS_H) $(CFGLOOP_H) $(IRA_INT_H) builtins.h gcse.h\n+   $(LIBFUNCS_H) $(CFGLOOP_H) $(IRA_INT_H) builtins.h gcse.h bb-reorder.h\n \n $(out_object_file): $(out_file) $(CONFIG_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h insn-config.h conditions.h \\"}, {"sha": "2bf0b8531658bc85ad7ac140583bc1aba3b26164", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=76ee381a9c92e5ef9448ff24aa6c82703c2561c8", "patch": "@@ -86,6 +86,7 @@\n #include \"toplev.h\" /* user_defined_section_attribute */\n #include \"tree-pass.h\"\n #include \"df.h\"\n+#include \"bb-reorder.h\"\n \n /* The number of rounds.  In most cases there will only be 4 rounds, but\n    when partitioning hot and cold basic blocks into separate sections of\n@@ -101,6 +102,14 @@\n #endif\n \n \n+struct target_bb_reorder default_target_bb_reorder;\n+#if SWITCHABLE_TARGET\n+struct target_bb_reorder *this_target_bb_reorder = &default_target_bb_reorder;\n+#endif\n+\n+#define uncond_jump_length \\\n+  (this_target_bb_reorder->x_uncond_jump_length)\n+\n /* Branch thresholds in thousandths (per mille) of the REG_BR_PROB_BASE.  */\n static int branch_threshold[N_ROUNDS] = {400, 200, 100, 0, 0};\n \n@@ -111,9 +120,6 @@ static int exec_threshold[N_ROUNDS] = {500, 200, 50, 0, 0};\n    block the edge destination is not duplicated while connecting traces.  */\n #define DUPLICATION_THRESHOLD 100\n \n-/* Length of unconditional jump instruction.  */\n-static int uncond_jump_length;\n-\n /* Structure to hold needed information for each basic block.  */\n typedef struct bbro_basic_block_data_def\n {"}, {"sha": "0b5ed254826e7908b636e1da31a527a312f59a27", "filename": "gcc/bb-reorder.h", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2Fbb-reorder.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2Fbb-reorder.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.h?ref=76ee381a9c92e5ef9448ff24aa6c82703c2561c8", "patch": "@@ -0,0 +1,37 @@\n+/* Basic block reordering routines for the GNU compiler.\n+   Copyright (C) 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010\n+   Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_BB_REORDER\n+#define GCC_BB_REORDER\n+\n+/* Target-specific globals.  */\n+struct target_bb_reorder {\n+  /* Length of unconditional jump instruction.  */\n+  int x_uncond_jump_length;\n+};\n+\n+extern GTY(()) struct target_bb_reorder default_target_bb_reorder;\n+#if SWITCHABLE_TARGET\n+extern struct target_bb_reorder *this_target_bb_reorder;\n+#else\n+#define this_target_bb_reorder (&default_target_bb_reorder)\n+#endif\n+\n+#endif"}, {"sha": "49b9dc85457948aa2a721ccbad9bb8d5fb500aa1", "filename": "gcc/target-globals.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2Ftarget-globals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2Ftarget-globals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-globals.c?ref=76ee381a9c92e5ef9448ff24aa6c82703c2561c8", "patch": "@@ -39,6 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ira-int.h\"\n #include \"builtins.h\"\n #include \"gcse.h\"\n+#include \"bb-reorder.h\"\n \n #if SWITCHABLE_TARGET\n struct target_globals default_target_globals = {\n@@ -54,7 +55,8 @@ struct target_globals default_target_globals = {\n   &default_target_ira,\n   &default_target_ira_int,\n   &default_target_builtins,\n-  &default_target_gcse\n+  &default_target_gcse,\n+  &default_target_bb_reorder\n };\n \n struct target_globals *\n@@ -76,6 +78,7 @@ save_target_globals (void)\n   g->ira_int = XCNEW (struct target_ira_int);\n   g->builtins = XCNEW (struct target_builtins);\n   g->gcse = XCNEW (struct target_gcse);\n+  g->bb_reorder = XCNEW (struct target_bb_reorder);\n   restore_target_globals (g);\n   target_reinit ();\n   return g;"}, {"sha": "166f21ada4f1669ffeeefc10367377c527f03cd5", "filename": "gcc/target-globals.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2Ftarget-globals.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ee381a9c92e5ef9448ff24aa6c82703c2561c8/gcc%2Ftarget-globals.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-globals.h?ref=76ee381a9c92e5ef9448ff24aa6c82703c2561c8", "patch": "@@ -34,6 +34,7 @@ extern struct target_ira *this_target_ira;\n extern struct target_ira_int *this_target_ira_int;\n extern struct target_builtins *this_target_builtins;\n extern struct target_gcse *this_target_gcse;\n+extern struct target_bb_reorder *this_target_bb_reorder;\n \n struct GTY(()) target_globals {\n   struct target_flag_state *GTY((skip)) flag_state;\n@@ -49,6 +50,7 @@ struct GTY(()) target_globals {\n   struct target_ira_int *GTY((skip)) ira_int;\n   struct target_builtins *GTY((skip)) builtins;\n   struct target_gcse *GTY((skip)) gcse;\n+  struct target_bb_reorder *GTY((skip)) bb_reorder;\n };\n \n extern struct target_globals default_target_globals;\n@@ -71,6 +73,7 @@ restore_target_globals (struct target_globals *g)\n   this_target_ira_int = g->ira_int;\n   this_target_builtins = g->builtins;\n   this_target_gcse = g->gcse;\n+  this_target_bb_reorder = g->bb_reorder;\n }\n #endif\n "}]}