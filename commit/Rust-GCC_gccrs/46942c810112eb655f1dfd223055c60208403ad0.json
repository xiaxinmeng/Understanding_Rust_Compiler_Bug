{"sha": "46942c810112eb655f1dfd223055c60208403ad0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY5NDJjODEwMTEyZWI2NTVmMWRmZDIyMzA1NWM2MDIwODQwM2FkMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-10T12:17:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-10T12:17:45Z"}, "message": "Define std::allocator<T>::is_always_equal\n\n\t* include/bits/allocator.h (allocator<T>::is_always_equal): Define.\n\t* testsuite/20_util/allocator/requirements/typedefs.cc: Test for\n\tis_always_equal.\n\t* testsuite/util/testsuite_allocator.h\n\t(uneq_allocator::is_always_equal): Define as false_type.\n\nFrom-SVN: r240920", "tree": {"sha": "b6f128fc7e09949b6285f9463987eadd7cf3e746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6f128fc7e09949b6285f9463987eadd7cf3e746"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46942c810112eb655f1dfd223055c60208403ad0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46942c810112eb655f1dfd223055c60208403ad0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46942c810112eb655f1dfd223055c60208403ad0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46942c810112eb655f1dfd223055c60208403ad0/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2e79496bf9107eae1130e0d74c80b02a5b86cab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e79496bf9107eae1130e0d74c80b02a5b86cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e79496bf9107eae1130e0d74c80b02a5b86cab"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "d1e2bc37523349d0f1587a9e530850b6eca05e7a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46942c810112eb655f1dfd223055c60208403ad0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46942c810112eb655f1dfd223055c60208403ad0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=46942c810112eb655f1dfd223055c60208403ad0", "patch": "@@ -1,5 +1,11 @@\n 2016-10-10  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/allocator.h (allocator<T>::is_always_equal): Define.\n+\t* testsuite/20_util/allocator/requirements/typedefs.cc: Test for\n+\tis_always_equal.\n+\t* testsuite/util/testsuite_allocator.h\n+\t(uneq_allocator::is_always_equal): Define as false_type.\n+\n \t* include/experimental/numeric (gcd, lcm): Make bool arguments\n \till-formed.\n \t* include/std/numeric (gcd, lcm): Likewise."}, {"sha": "8e78165c7f03f296f02617d0ef3030ac5b9cf252", "filename": "libstdc++-v3/include/bits/allocator.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46942c810112eb655f1dfd223055c60208403ad0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46942c810112eb655f1dfd223055c60208403ad0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h?ref=46942c810112eb655f1dfd223055c60208403ad0", "patch": "@@ -50,6 +50,9 @@\n #endif\n \n #define __cpp_lib_incomplete_container_elements 201505\n+#if __cplusplus >= 201103L\n+# define __cpp_lib_allocator_is_always_equal 201411\n+#endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -80,7 +83,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // 2103. std::allocator propagate_on_container_move_assignment\n       typedef true_type propagate_on_container_move_assignment;\n \n-#define __cpp_lib_allocator_is_always_equal 201411\n       typedef true_type is_always_equal;\n #endif\n     };\n@@ -113,6 +115,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 2103. std::allocator propagate_on_container_move_assignment\n       typedef true_type propagate_on_container_move_assignment;\n+\n+      typedef true_type is_always_equal;\n #endif\n \n       allocator() throw() { }"}, {"sha": "1b3f14fb71724c55008a1c715e58ddd58c88006d", "filename": "libstdc++-v3/testsuite/20_util/allocator/requirements/typedefs.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46942c810112eb655f1dfd223055c60208403ad0/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46942c810112eb655f1dfd223055c60208403ad0/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator%2Frequirements%2Ftypedefs.cc?ref=46942c810112eb655f1dfd223055c60208403ad0", "patch": "@@ -48,3 +48,6 @@ static_assert( is_same<allocator<int>::rebind<char>::other,\n static_assert( is_same<allocator<int>::propagate_on_container_move_assignment,\n                        std::true_type>::value,\n                \"propagate_on_container_move_assignment\" );\n+\n+static_assert( is_same<allocator<int>::is_always_equal, std::true_type>::value,\n+               \"is_always_equal\" );"}, {"sha": "dd7e22d41a7802221196a53453ffc9ab079dfcad", "filename": "libstdc++-v3/testsuite/util/testsuite_allocator.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46942c810112eb655f1dfd223055c60208403ad0/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46942c810112eb655f1dfd223055c60208403ad0/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h?ref=46942c810112eb655f1dfd223055c60208403ad0", "patch": "@@ -297,6 +297,7 @@ namespace __gnu_test\n \n #if __cplusplus >= 201103L\n       typedef std::true_type\t\t\tpropagate_on_container_swap;\n+      typedef std::false_type\t\t\tis_always_equal;\n #endif\n \n       template<typename Tp1>"}]}