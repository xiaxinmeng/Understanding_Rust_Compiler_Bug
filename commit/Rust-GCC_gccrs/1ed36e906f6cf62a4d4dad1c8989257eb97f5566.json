{"sha": "1ed36e906f6cf62a4d4dad1c8989257eb97f5566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkMzZlOTA2ZjZjZjYyYTRkNGRhZDFjODk4OTI1N2ViOTdmNTU2Ng==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-04T20:18:31Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-04T20:18:31Z"}, "message": "Don't crash if named constant has no type when converting to GENERIC.\n\nFrom-SVN: r168483", "tree": {"sha": "2b81f349a8401c90101625e477dfd4704762f2f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b81f349a8401c90101625e477dfd4704762f2f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ed36e906f6cf62a4d4dad1c8989257eb97f5566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed36e906f6cf62a4d4dad1c8989257eb97f5566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ed36e906f6cf62a4d4dad1c8989257eb97f5566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed36e906f6cf62a4d4dad1c8989257eb97f5566/comments", "author": null, "committer": null, "parents": [{"sha": "10d53f5d111984f56ca2420ec2485637e8da8e01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d53f5d111984f56ca2420ec2485637e8da8e01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d53f5d111984f56ca2420ec2485637e8da8e01"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "840fdb37d10604b1683956da54a0c23e3ac29f5f", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed36e906f6cf62a4d4dad1c8989257eb97f5566/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed36e906f6cf62a4d4dad1c8989257eb97f5566/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=1ed36e906f6cf62a4d4dad1c8989257eb97f5566", "patch": "@@ -2680,7 +2680,8 @@ Const_expression::do_get_tree(Translate_context* context)\n   // object is an abstract int or float, we try to get the abstract\n   // value.  Otherwise we may lose something in the conversion.\n   if (this->type_ != NULL\n-      && this->constant_->const_value()->type()->is_abstract())\n+      && (this->constant_->const_value()->type() == NULL\n+\t  || this->constant_->const_value()->type()->is_abstract()))\n     {\n       Expression* expr = this->constant_->const_value()->expr();\n       mpz_t ival;"}]}