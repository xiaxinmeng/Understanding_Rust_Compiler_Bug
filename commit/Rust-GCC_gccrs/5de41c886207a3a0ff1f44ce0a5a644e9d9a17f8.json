{"sha": "5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRlNDFjODg2MjA3YTNhMGZmMWY0NGNlMGE1YTY0NGU5ZDlhMTdmOA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-13T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-13T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "1ffe8aa407af5bb936aed94d6a0662104ccb82f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ffe8aa407af5bb936aed94d6a0662104ccb82f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/comments", "author": null, "committer": null, "parents": [{"sha": "707e9159ed25d19c174e4da18b194e530878d450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/707e9159ed25d19c174e4da18b194e530878d450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/707e9159ed25d19c174e4da18b194e530878d450"}], "stats": {"total": 71, "additions": 70, "deletions": 1}, "files": [{"sha": "80ec913148aa3797729bb2a12f77401b2eff5a05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8", "patch": "@@ -1,3 +1,16 @@\n+2020-09-12  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/pa.md (shrpsi4_1, shrpsi4_2): New define_insns split\n+\tout from previous shrpsi4 providing two commutitive variants using\n+\tplus_xor_ior_operator as a predicate.\n+\t(shrpdi4_1, shrpdi4_2, shrpdi_3, shrpdi_4): Likewise DImode versions\n+\twhere _1 and _2 take register shifts, and _3 and _4 for integers.\n+\t(rotlsi3_internal): Name this anonymous instruction.\n+\t(rotrdi3): New DImode insn copied from rotrsi3.\n+\t(rotldi3): New DImode expander copied from rotlsi3.\n+\t(rotldi4_internal): New DImode insn copied from rotsi3_internal.\n+\n 2020-09-11  Michael Meissner  <meissner@linux.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_maybe_emit_maxc_minc): Rename"}, {"sha": "9e832c964559e027a6d372a7f7b7a2f6e9575aa7", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8", "patch": "@@ -1 +1 @@\n-20200912\n+20200913"}, {"sha": "e54c6aaaaf8a95758c6fff920eca29559dce7f6a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8", "patch": "@@ -1,3 +1,34 @@\n+2020-09-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fe.h: Fix pilot error in previous change.\n+\t* gcc-interface/gigi.h (enum standard_datatypes): Add ADT_mulv128_decl.\n+\t(mulv128_decl): New macro.\n+\t(get_target_long_long_long_size): Declare.\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity): Use a maximum size of\n+\t128 bits for discrete types if Enable_128bit_Types is true.\n+\t* gcc-interface/targtyps.c: Include target.h.\n+\t(get_target_long_long_long_size): New function.\n+\t* gcc-interface/trans.c (gigi): Initialize mulv128_decl if need be.\n+\t(build_binary_op_trapv): Call it for 128-bit multiplication.\n+\t* gcc-interface/utils.c (make_type_from_size): Enforce a maximum\n+\tsize of 128 bits if Enable_128bit_Types is true.\n+\n+2020-09-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (lvalue_for_aggr_p) <N_Object_Declaration>:\n+\tReturn false unconditionally.\n+\n+2020-09-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (gnat_to_gnu) <N_Object_Declaration>: Clear\n+\tthe SLOC of the expression of a tag.\n+\n+2020-09-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Only give\n+\ta warning for the overlay of an aliased array with an unconstrained\n+\tnominal subtype if the address is absolute.\n+\n 2020-09-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (type_has_variable_size): New function."}, {"sha": "1ae51991fb1220599dfc3b58579b29b2d501f57b", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8", "patch": "@@ -1,3 +1,23 @@\n+2020-09-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/97002\n+\t* d-codegen.cc (d_build_call): Set input_location on CALL_EXPR.\n+\t* d-lang.cc: Include function.h.\n+\t(d_type_promotes_to): Do default conversions for C and C++ functions.\n+\t* intrinsics.cc (expand_intrinsic_vaarg): Use build1_loc to build\n+\tVA_ARG_EXPR.\n+\n+2020-09-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_build_d_type_nodes): Call build_ctype() on all\n+\tbasic front-end types.\n+\t* decl.cc (DeclVisitor::visit (EnumDeclaration *)): Always add decl to\n+\tcurrent binding level.\n+\t(build_type_decl): Build TYPE_DECL as a typedef if not for an enum or\n+\trecord type.\n+\t* types.cc (TypeVisitor::visit (TypeEnum *)): Set underlying type for\n+\tENUMERAL_TYPEs.  Build TYPE_DECL for non-numeric enums.\n+\n 2020-09-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* lang.opt (Waddress): Enable warning by -Wextra."}, {"sha": "da288afc2124d23dc2afc03e57aefbb9387c06f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5de41c886207a3a0ff1f44ce0a5a644e9d9a17f8", "patch": "@@ -1,3 +1,8 @@\n+2020-09-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/97002\n+\t* gdc.dg/pr97002.d: New test.\n+\n 2020-09-11  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.dg/concepts/local-extern.C: New file."}]}