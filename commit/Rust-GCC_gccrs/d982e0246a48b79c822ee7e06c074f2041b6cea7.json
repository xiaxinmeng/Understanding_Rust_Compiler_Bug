{"sha": "d982e0246a48b79c822ee7e06c074f2041b6cea7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk4MmUwMjQ2YTQ4Yjc5YzgyMmVlN2UwNmMwNzRmMjA0MWI2Y2VhNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-09T20:38:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-09T20:38:33Z"}, "message": "re PR c++/56238 (ICE in tree check: expected record_type or union_type or qual_union_type, have template_type_parm in lookup_conversions, at cp/search.c:2515)\n\n\tPR c++/56238\n\t* pt.c (build_non_dependent_expr): Don't try to fold\n\tinstantiation-dependent expressions.\n\t(instantiation_dependent_r) [TRAIT_EXPR]: Split out.\n\t[BIND_EXPR]: Treat as dependent.\n\nFrom-SVN: r195920", "tree": {"sha": "5f8ac63fbdfa4ff8ef98411e32f3290ca59533da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f8ac63fbdfa4ff8ef98411e32f3290ca59533da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d982e0246a48b79c822ee7e06c074f2041b6cea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d982e0246a48b79c822ee7e06c074f2041b6cea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d982e0246a48b79c822ee7e06c074f2041b6cea7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d982e0246a48b79c822ee7e06c074f2041b6cea7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ab7747c26fa2416e19c3bb1205f795d0753c605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab7747c26fa2416e19c3bb1205f795d0753c605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ab7747c26fa2416e19c3bb1205f795d0753c605"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "5793858cd90a237c45ab42a51a667bddf4ec5120", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d982e0246a48b79c822ee7e06c074f2041b6cea7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d982e0246a48b79c822ee7e06c074f2041b6cea7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d982e0246a48b79c822ee7e06c074f2041b6cea7", "patch": "@@ -1,3 +1,11 @@\n+2013-02-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/56238\n+\t* pt.c (build_non_dependent_expr): Don't try to fold\n+\tinstantiation-dependent expressions.\n+\t(instantiation_dependent_r) [TRAIT_EXPR]: Split out.\n+\t[BIND_EXPR]: Treat as dependent.\n+\n 2013-02-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/56241"}, {"sha": "29664ead42f3b36236095454baa9f0b1f1c4587a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d982e0246a48b79c822ee7e06c074f2041b6cea7/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d982e0246a48b79c822ee7e06c074f2041b6cea7/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=d982e0246a48b79c822ee7e06c074f2041b6cea7", "patch": "@@ -19863,16 +19863,13 @@ instantiation_dependent_r (tree *tp, int *walk_subtrees,\n     case ALIGNOF_EXPR:\n     case TYPEID_EXPR:\n     case AT_ENCODE_EXPR:\n-    case TRAIT_EXPR:\n       {\n \ttree op = TREE_OPERAND (*tp, 0);\n \tif (code == SIZEOF_EXPR && SIZEOF_EXPR_TYPE_P (*tp))\n \t  op = TREE_TYPE (op);\n \tif (TYPE_P (op))\n \t  {\n-\t    if (dependent_type_p (op)\n-\t\t|| (code == TRAIT_EXPR\n-\t\t    && dependent_type_p (TREE_OPERAND (*tp, 1))))\n+\t    if (dependent_type_p (op))\n \t      return *tp;\n \t    else\n \t      {\n@@ -19883,6 +19880,13 @@ instantiation_dependent_r (tree *tp, int *walk_subtrees,\n \tbreak;\n       }\n \n+    case TRAIT_EXPR:\n+      if (dependent_type_p (TRAIT_EXPR_TYPE1 (*tp))\n+\t  || dependent_type_p (TRAIT_EXPR_TYPE2 (*tp)))\n+\treturn *tp;\n+      *walk_subtrees = false;\n+      return NULL_TREE;\n+\n     case COMPONENT_REF:\n       if (TREE_CODE (TREE_OPERAND (*tp, 1)) == IDENTIFIER_NODE)\n \t/* In a template, finish_class_member_access_expr creates a\n@@ -19898,6 +19902,10 @@ instantiation_dependent_r (tree *tp, int *walk_subtrees,\n       else\n \tbreak;\n \n+      /* Treat statement-expressions as dependent.  */\n+    case BIND_EXPR:\n+      return *tp;\n+\n     default:\n       break;\n     }\n@@ -20341,9 +20349,10 @@ build_non_dependent_expr (tree expr)\n   tree inner_expr;\n \n #ifdef ENABLE_CHECKING\n-  /* Try to get a constant value for all non-type-dependent expressions in\n+  /* Try to get a constant value for all non-dependent expressions in\n       order to expose bugs in *_dependent_expression_p and constexpr.  */\n-  if (cxx_dialect >= cxx0x)\n+  if (cxx_dialect >= cxx0x\n+      && !instantiation_dependent_expression_p (expr))\n     maybe_constant_value (fold_non_dependent_expr_sfinae (expr, tf_none));\n #endif\n "}, {"sha": "0ce55f035581bdb5bfe37c15eea0e9f3926ef1fc", "filename": "gcc/testsuite/g++.dg/template/cast2.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d982e0246a48b79c822ee7e06c074f2041b6cea7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d982e0246a48b79c822ee7e06c074f2041b6cea7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast2.C?ref=d982e0246a48b79c822ee7e06c074f2041b6cea7", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/56238\n+\n+class A\n+{\n+  template < typename T > T& get ();\n+  template < typename T > class B\n+  {\n+    void RemovePoint (A& value)\n+    {\n+      static_cast < double >(value.get < T > ());\n+    }\n+  };\n+};"}]}