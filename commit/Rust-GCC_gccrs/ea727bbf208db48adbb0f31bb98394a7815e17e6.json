{"sha": "ea727bbf208db48adbb0f31bb98394a7815e17e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE3MjdiYmYyMDhkYjQ4YWRiYjBmMzFiYjk4Mzk0YTc4MTVlMTdlNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-16T04:23:33Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-16T04:23:33Z"}, "message": "(libobjc.a): Get directories right, using shell vars thisdir1, srcdir1.\n\nPut quotes around $(GCC_CFLAGS).  Use $(MAKE).\n\nFrom-SVN: r2485", "tree": {"sha": "37d71c62731883257270a4fbebca03b589e6048f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37d71c62731883257270a4fbebca03b589e6048f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea727bbf208db48adbb0f31bb98394a7815e17e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea727bbf208db48adbb0f31bb98394a7815e17e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea727bbf208db48adbb0f31bb98394a7815e17e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea727bbf208db48adbb0f31bb98394a7815e17e6/comments", "author": null, "committer": null, "parents": [{"sha": "fced8ba341c8467ab19b74093689de385cfb61af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fced8ba341c8467ab19b74093689de385cfb61af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fced8ba341c8467ab19b74093689de385cfb61af"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "205bedae9c4a6642531ac2f9db6baab1cbf7ed0f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea727bbf208db48adbb0f31bb98394a7815e17e6/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea727bbf208db48adbb0f31bb98394a7815e17e6/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ea727bbf208db48adbb0f31bb98394a7815e17e6", "patch": "@@ -435,8 +435,8 @@ native: config.status cpp $(LANGUAGES) $(EXTRA_PASSES) $(EXTRA_PROGRAMS) $(USE_C\n # Define the names for selecting languages in LANGUAGES.\n C c: cc1\n C++ c++: cc1plus\n-OBJC objc: cc1obj\n-OBJECTIVE-C objective-c: cc1obj\n+OBJC objc: cc1obj objc-runtime\n+OBJECTIVE-C objective-c: cc1obj objc-runtime\n PROTO: proto\n \n # Really, really stupid make features, such as SUN's KEEP_STATE, may force\n@@ -659,6 +659,25 @@ libgcc.a: $(LIBGCC1) $(LIBGCC2)\n # so that libgcc.a itself remains nonexistent if compilation is aborted.\n \tmv tmplibgcc.a libgcc.a\n \n+objc-runtime: libobjc.a\n+\n+# Build the Objective C runtime library.  Build the Objc compiler first!\n+libobjc.a: cc1obj libgcc2.ready\n+\tthisdir1=`pwd`; \\\n+\tcd $(srcdir); srcdir1=`pwd`; \\\n+\tcd objc; \\\n+\t$(MAKE) $(MAKEFLAGS) -f $(srcdir)/objc/Makefile libobjc.a \\\n+\t  srcdir=$$srcdir1 tooldir=$(tooldir) AR=$(AR) AR_FLAGS=$(AR_FLAGS) \\\n+\t  GCC_FOR_TARGET=$$thisdir1/$(GCC_FOR_TARGET) \\\n+\t  GCC_CFLAGS=\"$(GCC_CFLAGS)\"\n+\tln objc/libobjc.a .\n+\t-if $(RANLIB_TEST) ; then $(RANLIB) libobjc.a; else true; fi\n+\n+# This is used by objc/Makefile if the user runs that directly.\n+sublibobjc.a: cc1obj libgcc2.ready\n+\tcd objc; make $(MAKEFLAGS) -f $(srcdir)/objc/Makefile libobjc.a \\\n+\t  srcdir=$(srcdir) tooldir=$(tooldir) AR=$(AR) AR_FLAGS=$(AR_FLAGS) \\\n+\t  GCC_FOR_TARGET=$(GCC_FOR_TARGET) GCC_CFLAGS=$(GCC_CFLAGS)\n \n # Compile two additional files that are linked with every program\n # linked using GCC on system V, for the sake of C++ constructors.\n@@ -1236,6 +1255,8 @@ $(srcdir)/INSTALL: install1.texi install.texi\n \n mostlyclean:\n \t-rm -f $(STAGESTUFF)\n+# Clean the objc subdir.\n+\tcd objc; make $(MAKEFLAGS) -f $(srcdir)/objc/Makefile mostlyclean\n # Delete the temporary source copies for cross compilation.\n \t-rm -f $(HOST_PREFIX_1)rtl.c $(HOST_PREFIX_1)rtlanal.c\n \t-rm -f $(HOST_PREFIX_1)alloca.c $(HOST_PREFIX_1)malloc.c\n@@ -1619,13 +1640,18 @@ gcc.xtar: doc c-parse.y objc-parse.y\n # which has the name that we want to have in the tar file.\n \tmkdir tmp\n \tmkdir tmp/config\n+\tmkdir tmp/objc\n \tfor file in *[0-9a-zA-Z+]; do \\\n \t  ln $$file tmp > /dev/null 2>&1 || cp $$file tmp; \\\n \tdone\n \tcd config; \\\n \tfor file in *[0-9a-zA-Z+]; do \\\n \t  ln $$file ../tmp/config >/dev/null 2>&1 || cp $$file ../tmp/config; \\\n \tdone\n+\tcd objc; \\\n+\tfor file in *[0-9a-zA-Z+]; do \\\n+\t  ln $$file ../tmp/config >/dev/null 2>&1 || cp $$file ../tmp/config; \\\n+\tdone\n \tln .gdbinit tmp\n \tmv tmp gcc-$(version)\n # Get rid of everything we don't want in the distribution."}]}