{"sha": "ee9a72e50cf00a988023f8eb2b08d25da87a7643", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU5YTcyZTUwY2YwMGE5ODgwMjNmOGViMmIwOGQyNWRhODdhNzY0Mw==", "commit": {"author": {"name": "Joshua Kinard", "email": "kumba@gentoo.org", "date": "2008-11-15T14:26:07Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-11-15T14:26:07Z"}, "message": "invoke.texi (-mfix-r10000): Document.\n\ngcc/\n2008-11-15  Joshua Kinard  <kumba@gentoo.org>\n\n\t* doc/invoke.texi (-mfix-r10000): Document.\n\t* config/mips/mips.opt (mfix-r10000): New option.\n\t* config/mips/mips-protos.h (mips_output_sync_loop): Declare.\n\t* config/mips/mips.h (MIPS_COMPARE_AND_SWAP): Use %?.\n\t(MIPS_COMPARE_AND_SWAP_12): Likewise.\n\t(MIPS_SYNC_OP): Likewise.\n\t(MIPS_SYNC_OP_12): Likewise.\n\t(MIPS_SYNC_OLD_OP_12): Likewise.\n\t(MIPS_SYNC_NEW_OP_12): Likewise.\n\t(MIPS_SYNC_OLD_OP): Likewise.\n\t(MIPS_SYNC_NAND): Likewise.\n\t(MIPS_SYNC_OLD_NAND): Likewise.\n\t(MIPS_SYNC_EXCHANGE): Likewise.\n\t(MIPS_SYNC_EXCHANGE_12): Likewise.\n\t(MIPS_SYNC_NEW_OP): Likewise, using %~ to fill branch-likely\n\tdelay slots.\n\t(MIPS_SYNC_NEW_NAND): Likewise.\n\t* config/mips/mips.c (mips_print_operand_punctuation): Handle '~'.\n\t(mips_init_print_operand_punct): Treat '~' as a punctuation character.\n\t(mips_output_sync_loop): New function.\n\t(mips_override_options): Make -march=r10000 imply -mfix-r10000.\n\tMake -mfix-r10000 require branch-likely instructions.\n\t* config/mips/sync.md (sync_compare_and_swap<mode>): Use\n\tmips_output_sync_loop.\n\t(compare_and_swap_12): Likewise.\n\t(sync_add<mode>): Likewise.\n\t(sync_<optab>_12): Likewise.\n\t(sync_old_<optab>_12): Likewise.\n\t(sync_new_<optab>_12): Likewise.\n\t(sync_nand_12): Likewise.\n\t(sync_old_nand_12): Likewise.\n\t(sync_new_nand_12): Likewise.\n\t(sync_sub<mode>): Likewise.\n\t(sync_old_add<mode>): Likewise.\n\t(sync_old_sub<mode>): Likewise.\n\t(sync_new_add<mode>): Likewise.\n\t(sync_new_sub<mode>): Likewise.\n\t(sync_<optab><mode>): Likewise.\n\t(sync_old_<optab><mode>): Likewise.\n\t(sync_new_<optab><mode>): Likewise.\n\t(sync_nand<mode>): Likewise.\n\t(sync_old_nand<mode>): Likewise.\n\t(sync_new_nand<mode>): Likewise.\n\t(sync_lock_test_and_set<mode>): Likewise.\n\t(test_and_set_12): Likewise.\n\ngcc/testsuite/\n2008-11-15  Joshua Kinard  <kumba@gentoo.org>\n\t    Richard Sandiford  <rdsandiford@goolemail.com>\n\n\t* gcc.target/mips/fix-r10000-1.c: New test.\n\t* gcc.target/mips/fix-r10000-2.c: Likewise.\n\t* gcc.target/mips/fix-r10000-3.c: Likewise.\n\t* gcc.target/mips/fix-r10000-4.c: Likewise.\n\t* gcc.target/mips/fix-r10000-5.c: Likewise.\n\t* gcc.target/mips/fix-r10000-6.c: Likewise.\n\t* gcc.target/mips/fix-r10000-7.c: Likewise.\n\t* gcc.target/mips/fix-r10000-8.c: Likewise.\n\t* gcc.target/mips/fix-r10000-9.c: Likewise.\n\t* gcc.target/mips/fix-r10000-10.c: Likewise.\n\t* gcc.target/mips/fix-r10000-11.c: Likewise.\n\t* gcc.target/mips/fix-r10000-12.c: Likewise.\n\t* gcc.target/mips/fix-r10000-13.c: Likewise.\n\t* gcc.target/mips/fix-r10000-14.c: Likewise.\n\t* gcc.target/mips/fix-r10000-15.c: Likewise.\n\nCo-Authored-By: Richard Sandiford <rdsandiford@googlemail.com>\n\nFrom-SVN: r141886", "tree": {"sha": "3d42c705e5726ec340df30a25b4740a024daf292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d42c705e5726ec340df30a25b4740a024daf292"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee9a72e50cf00a988023f8eb2b08d25da87a7643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9a72e50cf00a988023f8eb2b08d25da87a7643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee9a72e50cf00a988023f8eb2b08d25da87a7643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9a72e50cf00a988023f8eb2b08d25da87a7643/comments", "author": {"login": "Kumba42", "id": 29685010, "node_id": "MDQ6VXNlcjI5Njg1MDEw", "avatar_url": "https://avatars.githubusercontent.com/u/29685010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kumba42", "html_url": "https://github.com/Kumba42", "followers_url": "https://api.github.com/users/Kumba42/followers", "following_url": "https://api.github.com/users/Kumba42/following{/other_user}", "gists_url": "https://api.github.com/users/Kumba42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kumba42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kumba42/subscriptions", "organizations_url": "https://api.github.com/users/Kumba42/orgs", "repos_url": "https://api.github.com/users/Kumba42/repos", "events_url": "https://api.github.com/users/Kumba42/events{/privacy}", "received_events_url": "https://api.github.com/users/Kumba42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7348f18cb1d809fa58aff195d9780e683c60b6ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7348f18cb1d809fa58aff195d9780e683c60b6ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7348f18cb1d809fa58aff195d9780e683c60b6ce"}], "stats": {"total": 568, "additions": 515, "deletions": 53}, "files": [{"sha": "a4e4609f57d8df100cd918697baef88ed436c7c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -1,3 +1,51 @@\n+2008-11-15  Joshua Kinard  <kumba@gentoo.org>\n+\n+\t* doc/invoke.texi (-mfix-r10000): Document.\n+\t* config/mips/mips.opt (mfix-r10000): New option.\n+\t* config/mips/mips-protos.h (mips_output_sync_loop): Declare.\n+\t* config/mips/mips.h (MIPS_COMPARE_AND_SWAP): Use %?.\n+\t(MIPS_COMPARE_AND_SWAP_12): Likewise.\n+\t(MIPS_SYNC_OP): Likewise.\n+\t(MIPS_SYNC_OP_12): Likewise.\n+\t(MIPS_SYNC_OLD_OP_12): Likewise.\n+\t(MIPS_SYNC_NEW_OP_12): Likewise.\n+\t(MIPS_SYNC_OLD_OP): Likewise.\n+\t(MIPS_SYNC_NAND): Likewise.\n+\t(MIPS_SYNC_OLD_NAND): Likewise.\n+\t(MIPS_SYNC_EXCHANGE): Likewise.\n+\t(MIPS_SYNC_EXCHANGE_12): Likewise.\n+\t(MIPS_SYNC_NEW_OP): Likewise, using %~ to fill branch-likely\n+\tdelay slots.\n+\t(MIPS_SYNC_NEW_NAND): Likewise.\n+\t* config/mips/mips.c (mips_print_operand_punctuation): Handle '~'.\n+\t(mips_init_print_operand_punct): Treat '~' as a punctuation character.\n+\t(mips_output_sync_loop): New function.\n+\t(mips_override_options): Make -march=r10000 imply -mfix-r10000.\n+\tMake -mfix-r10000 require branch-likely instructions.\n+\t* config/mips/sync.md (sync_compare_and_swap<mode>): Use\n+\tmips_output_sync_loop.\n+\t(compare_and_swap_12): Likewise.\n+\t(sync_add<mode>): Likewise.\n+\t(sync_<optab>_12): Likewise.\n+\t(sync_old_<optab>_12): Likewise.\n+\t(sync_new_<optab>_12): Likewise.\n+\t(sync_nand_12): Likewise.\n+\t(sync_old_nand_12): Likewise.\n+\t(sync_new_nand_12): Likewise.\n+\t(sync_sub<mode>): Likewise.\n+\t(sync_old_add<mode>): Likewise.\n+\t(sync_old_sub<mode>): Likewise.\n+\t(sync_new_add<mode>): Likewise.\n+\t(sync_new_sub<mode>): Likewise.\n+\t(sync_<optab><mode>): Likewise.\n+\t(sync_old_<optab><mode>): Likewise.\n+\t(sync_new_<optab><mode>): Likewise.\n+\t(sync_nand<mode>): Likewise.\n+\t(sync_old_nand<mode>): Likewise.\n+\t(sync_new_nand<mode>): Likewise.\n+\t(sync_lock_test_and_set<mode>): Likewise.\n+\t(test_and_set_12): Likewise.\n+\n 2008-11-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.c (cc1_options): Fix comment."}, {"sha": "3fa67c982ea5225018a3a83cfdb521aa3ebd4a4e", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -300,6 +300,7 @@ extern const char *mips_output_load_label (void);\n extern const char *mips_output_conditional_branch (rtx, rtx *, const char *,\n \t\t\t\t\t\t   const char *);\n extern const char *mips_output_order_conditional_branch (rtx, rtx *, bool);\n+extern const char *mips_output_sync_loop (const char *);\n extern const char *mips_output_division (const char *, rtx *);\n extern unsigned int mips_hard_regno_nregs (int, enum machine_mode);\n extern bool mips_linked_madd_p (rtx, rtx);"}, {"sha": "5198fd32ddc7d76c969ea8248dd0cbe27a1a6829", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -6909,6 +6909,7 @@ mips_print_operand_reloc (FILE *file, rtx op, enum mips_symbol_context context,\n    '#'\tPrint a nop if in a \".set noreorder\" block.\n    '/'\tLike '#', but do nothing within a delayed-branch sequence.\n    '?'\tPrint \"l\" if mips_branch_likely is true\n+   '~'\tPrint a nop if mips_branch_likely is true\n    '.'\tPrint the name of the register with a hard-wired zero (zero or $0).\n    '@'\tPrint the name of the assembler temporary register (at or $1).\n    '^'\tPrint the name of the pic call-through register (t9 or $25).\n@@ -6983,6 +6984,11 @@ mips_print_operand_punctuation (FILE *file, int ch)\n \tputc ('l', file);\n       break;\n \n+    case '~':\n+      if (mips_branch_likely)\n+\tfputs (\"\\n\\tnop\", file);\n+      break;\n+\n     case '.':\n       fputs (reg_names[GP_REG_FIRST + 0], file);\n       break;\n@@ -7026,7 +7032,7 @@ mips_init_print_operand_punct (void)\n {\n   const char *p;\n \n-  for (p = \"()[]<>*#/?.@^+$|-\"; *p; p++)\n+  for (p = \"()[]<>*#/?~.@^+$|-\"; *p; p++)\n     mips_print_operand_punct[(unsigned char) *p] = true;\n }\n \n@@ -10250,6 +10256,17 @@ mips_output_order_conditional_branch (rtx insn, rtx *operands, bool inverted_p)\n   return mips_output_conditional_branch (insn, operands, branch[1], branch[0]);\n }\n \f\n+/* Return the assembly code for __sync_*() loop LOOP.  The loop should support\n+   both normal and likely branches, using %? and %~ where appropriate.  */\n+\n+const char *\n+mips_output_sync_loop (const char *loop)\n+{\n+  /* Use branch-likely instructions to work around the LL/SC R10000 errata.  */\n+  mips_branch_likely = TARGET_FIX_R10000;\n+  return loop;\n+}\n+\f\n /* Return the assembly code for DIV or DDIV instruction DIVISION, which has\n    the operands given by OPERANDS.  Add in a divide-by-zero check if needed.\n \n@@ -13971,6 +13988,24 @@ mips_override_options (void)\n       && mips_matching_cpu_name_p (mips_arch_info->name, \"r4400\"))\n     target_flags |= MASK_FIX_R4400;\n \n+  /* Default to working around R10000 errata only if the processor\n+     was selected explicitly.  */\n+  if ((target_flags_explicit & MASK_FIX_R10000) == 0\n+      && mips_matching_cpu_name_p (mips_arch_info->name, \"r10000\"))\n+    target_flags |= MASK_FIX_R10000;\n+\n+  /* Make sure that branch-likely instructions available when using\n+     -mfix-r10000.  The instructions are not available if either:\n+\n+\t1. -mno-branch-likely was passed.\n+\t2. The selected ISA does not support branch-likely and\n+\t   the command line does not include -mbranch-likely.  */\n+  if (TARGET_FIX_R10000\n+      && ((target_flags_explicit & MASK_BRANCHLIKELY) == 0\n+          ? !ISA_HAS_BRANCHLIKELY\n+          : !TARGET_BRANCHLIKELY))\n+    sorry (\"%qs requires branch-likely instructions\", \"-mfix-r10000\");\n+\n   /* Save base state of options.  */\n   mips_base_target_flags = target_flags;\n   mips_base_delayed_branch = flag_delayed_branch;"}, {"sha": "8ae2b206fae7ddea2e299759cb238282af1dfd12", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -3090,7 +3090,7 @@ while (0)\n   \"\\tbne\\t%0,%z2,2f\\n\"\t\t\t\t\\\n   \"\\t\" OP \"\\t%@,%3\\n\"\t\t\t\t\\\n   \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\\n\"\t\t\t\t\\\n   \"2:\\n\"\n@@ -3115,7 +3115,7 @@ while (0)\n   \"\\tand\\t%@,%0,%3\\n\"\t\t\t\t\\\n   OPS\t\t\t\t\t\t\\\n   \"\\tsc\\t%@,%1\\n\"\t\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\\n\"\t\t\t\t\\\n   \"2:\\n\"\n@@ -3135,7 +3135,7 @@ while (0)\n   \"1:\\tll\" SUFFIX \"\\t%@,%0\\n\"\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%@,%1\\n\"\t\t\t\\\n   \"\\tsc\" SUFFIX \"\\t%@,%0\\n\"\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n@@ -3160,7 +3160,7 @@ while (0)\n   \"\\tand\\t%4,%4,%1\\n\"\t\t\t\t\\\n   \"\\tor\\t%@,%@,%4\\n\"\t\t\t\t\\\n   \"\\tsc\\t%@,%0\\n\"\t\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n@@ -3193,7 +3193,7 @@ while (0)\n   \"\\tand\\t%5,%5,%2\\n\"\t\t\t\t\\\n   \"\\tor\\t%@,%@,%5\\n\"\t\t\t\t\\\n   \"\\tsc\\t%@,%1\\n\"\t\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n@@ -3223,7 +3223,7 @@ while (0)\n   \"\\tand\\t%0,%0,%2\\n\"\t\t\t\t\\\n   \"\\tor\\t%@,%@,%0\\n\"\t\t\t\t\\\n   \"\\tsc\\t%@,%1\\n\"\t\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n@@ -3243,7 +3243,7 @@ while (0)\n   \"1:\\tll\" SUFFIX \"\\t%0,%1\\n\"\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%0,%2\\n\"\t\t\t\\\n   \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n@@ -3260,7 +3260,7 @@ while (0)\n   \"1:\\tll\" SUFFIX \"\\t%0,%1\\n\"\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%0,%2\\n\"\t\t\t\\\n   \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b%~\\n\"\t\t\t\\\n   \"\\t\" INSN \"\\t%0,%0,%2\\n\"\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n@@ -3277,7 +3277,7 @@ while (0)\n   \"\\tnor\\t%@,%@,%.\\n\"\t\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%@,%1\\n\"\t\t\t\\\n   \"\\tsc\" SUFFIX \"\\t%@,%0\\n\"\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n@@ -3296,7 +3296,7 @@ while (0)\n   \"\\tnor\\t%@,%0,%.\\n\"\t\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%@,%2\\n\"\t\t\t\\\n   \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n@@ -3315,7 +3315,7 @@ while (0)\n   \"\\tnor\\t%0,%0,%.\\n\"\t\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%0,%2\\n\"\t\t\t\\\n   \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b%~\\n\"\t\t\t\\\n   \"\\t\" INSN \"\\t%0,%0,%2\\n\"\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n@@ -3333,7 +3333,7 @@ while (0)\n   \"1:\\tll\" SUFFIX \"\\t%0,%1\\n\"\t\t\t\\\n   \"\\t\" OP \"\\t%@,%2\\n\"\t\t\t\t\\\n   \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n \n@@ -3357,7 +3357,7 @@ while (0)\n   \"\\tand\\t%@,%0,%3\\n\"\t\t\t\t\\\n   OPS\t\t\t\t\t\t\\\n   \"\\tsc\\t%@,%1\\n\"\t\t\t\t\\\n-  \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n+  \"\\tbeq%?\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"\\tsync%-%]%>%)\"\n "}, {"sha": "c7e78ff5d133bf86bebb048302c3832e0e0d6823", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -112,6 +112,10 @@ mfix-r4400\n Target Report Mask(FIX_R4400)\n Work around certain R4400 errata\n \n+mfix-r10000\n+Target Report Mask(FIX_R10000)\n+Work around certain R10000 errata\n+\n mfix-sb1\n Target Report Var(TARGET_FIX_SB1)\n Work around errata for early SB-1 revision 2 cores"}, {"sha": "286ca36921474d62e406766626186454f549e228", "filename": "gcc/config/mips/sync.md", "status": "modified", "additions": 49, "deletions": 37, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fconfig%2Fmips%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fconfig%2Fmips%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsync.md?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -43,9 +43,9 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_COMPARE_AND_SWAP (\"<d>\", \"li\");\n+    return mips_output_sync_loop (MIPS_COMPARE_AND_SWAP (\"<d>\", \"li\"));\n   else\n-    return MIPS_COMPARE_AND_SWAP (\"<d>\", \"move\");\n+    return mips_output_sync_loop (MIPS_COMPARE_AND_SWAP (\"<d>\", \"move\"));\n }\n   [(set_attr \"length\" \"32\")])\n \n@@ -76,9 +76,11 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_COMPARE_AND_SWAP_12 (MIPS_COMPARE_AND_SWAP_12_NONZERO_OP);\n+    return (mips_output_sync_loop\n+\t    (MIPS_COMPARE_AND_SWAP_12 (MIPS_COMPARE_AND_SWAP_12_NONZERO_OP)));\n   else\n-    return MIPS_COMPARE_AND_SWAP_12 (MIPS_COMPARE_AND_SWAP_12_ZERO_OP);\n+    return (mips_output_sync_loop\n+\t    (MIPS_COMPARE_AND_SWAP_12 (MIPS_COMPARE_AND_SWAP_12_ZERO_OP)));\n }\n   [(set_attr \"length\" \"40,36\")])\n \n@@ -91,9 +93,9 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_OP (\"<d>\", \"<d>addiu\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_OP (\"<d>\", \"<d>addiu\"));\n   else\n-    return MIPS_SYNC_OP (\"<d>\", \"<d>addu\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_OP (\"<d>\", \"<d>addu\"));\n }\n   [(set_attr \"length\" \"28\")])\n \n@@ -124,7 +126,8 @@\n    (clobber (match_scratch:SI 4 \"=&d\"))]\n   \"GENERATE_LL_SC\"\n {\n-    return MIPS_SYNC_OP_12 (\"<insn>\", MIPS_SYNC_OP_12_NOT_NOP);\t\n+    return (mips_output_sync_loop\n+\t    (MIPS_SYNC_OP_12 (\"<insn>\", MIPS_SYNC_OP_12_NOT_NOP)));\n }\n   [(set_attr \"length\" \"40\")])\n \n@@ -160,8 +163,9 @@\n    (clobber (match_scratch:SI 5 \"=&d\"))]\n   \"GENERATE_LL_SC\"\n {\n-    return MIPS_SYNC_OLD_OP_12 (\"<insn>\", MIPS_SYNC_OLD_OP_12_NOT_NOP,\n-\t\t\t\tMIPS_SYNC_OLD_OP_12_NOT_NOP_REG);\t\n+    return (mips_output_sync_loop\n+\t    (MIPS_SYNC_OLD_OP_12 (\"<insn>\", MIPS_SYNC_OLD_OP_12_NOT_NOP,\n+\t    \t\t\t  MIPS_SYNC_OLD_OP_12_NOT_NOP_REG)));\n }\n   [(set_attr \"length\" \"40\")])\n \n@@ -202,7 +206,8 @@\n \t   (match_dup 4)] UNSPEC_SYNC_NEW_OP_12))]\n   \"GENERATE_LL_SC\"\n {\n-    return MIPS_SYNC_NEW_OP_12 (\"<insn>\", MIPS_SYNC_NEW_OP_12_NOT_NOP);\n+    return (mips_output_sync_loop\n+\t    (MIPS_SYNC_NEW_OP_12 (\"<insn>\", MIPS_SYNC_NEW_OP_12_NOT_NOP)));\n }\n   [(set_attr \"length\" \"40\")])\n \n@@ -233,7 +238,8 @@\n    (clobber (match_scratch:SI 4 \"=&d\"))]\n   \"GENERATE_LL_SC\"\n {\n-    return MIPS_SYNC_OP_12 (\"and\", MIPS_SYNC_OP_12_NOT_NOT);\t\n+    return (mips_output_sync_loop\n+\t    (MIPS_SYNC_OP_12 (\"and\", MIPS_SYNC_OP_12_NOT_NOT)));\n }\n   [(set_attr \"length\" \"44\")])\n \n@@ -267,8 +273,9 @@\n    (clobber (match_scratch:SI 5 \"=&d\"))]\n   \"GENERATE_LL_SC\"\n {\n-    return MIPS_SYNC_OLD_OP_12 (\"and\", MIPS_SYNC_OLD_OP_12_NOT_NOT,\n-\t\t\t\tMIPS_SYNC_OLD_OP_12_NOT_NOT_REG);\t\n+    return (mips_output_sync_loop\n+\t    (MIPS_SYNC_OLD_OP_12 (\"and\", MIPS_SYNC_OLD_OP_12_NOT_NOT,\n+\t\t\t\t  MIPS_SYNC_OLD_OP_12_NOT_NOT_REG)));\n }\n   [(set_attr \"length\" \"44\")])\n \n@@ -307,7 +314,8 @@\n \t   (match_dup 4)] UNSPEC_SYNC_NEW_OP_12))]\n   \"GENERATE_LL_SC\"\n {\n-    return MIPS_SYNC_NEW_OP_12 (\"and\", MIPS_SYNC_NEW_OP_12_NOT_NOT);\n+    return (mips_output_sync_loop\n+\t    (MIPS_SYNC_NEW_OP_12 (\"and\", MIPS_SYNC_NEW_OP_12_NOT_NOT)));\n }\n   [(set_attr \"length\" \"40\")])\n \n@@ -319,7 +327,7 @@\n \t UNSPEC_SYNC_OLD_OP))]\n   \"GENERATE_LL_SC\"\n {\n-  return MIPS_SYNC_OP (\"<d>\", \"<d>subu\");\t\n+  return mips_output_sync_loop (MIPS_SYNC_OP (\"<d>\", \"<d>subu\"));\n }\n   [(set_attr \"length\" \"28\")])\n \n@@ -334,9 +342,9 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_OLD_OP (\"<d>\", \"<d>addiu\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_OLD_OP (\"<d>\", \"<d>addiu\"));\n   else\n-    return MIPS_SYNC_OLD_OP (\"<d>\", \"<d>addu\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_OLD_OP (\"<d>\", \"<d>addu\"));\n }\n   [(set_attr \"length\" \"28\")])\n \n@@ -350,7 +358,7 @@\n \t UNSPEC_SYNC_OLD_OP))]\n   \"GENERATE_LL_SC\"\n {\n-  return MIPS_SYNC_OLD_OP (\"<d>\", \"<d>subu\");\t\n+  return mips_output_sync_loop (MIPS_SYNC_OLD_OP (\"<d>\", \"<d>subu\"));\n }\n   [(set_attr \"length\" \"28\")])\n \n@@ -365,9 +373,9 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_NEW_OP (\"<d>\", \"<d>addiu\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_NEW_OP (\"<d>\", \"<d>addiu\"));\n   else\n-    return MIPS_SYNC_NEW_OP (\"<d>\", \"<d>addu\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_NEW_OP (\"<d>\", \"<d>addu\"));\n }\n   [(set_attr \"length\" \"28\")])\n \n@@ -381,7 +389,7 @@\n \t UNSPEC_SYNC_NEW_OP))]\n   \"GENERATE_LL_SC\"\n {\n-  return MIPS_SYNC_NEW_OP (\"<d>\", \"<d>subu\");\t\n+  return mips_output_sync_loop (MIPS_SYNC_NEW_OP (\"<d>\", \"<d>subu\"));\n }\n   [(set_attr \"length\" \"28\")])\n \n@@ -394,9 +402,9 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_OP (\"<d>\", \"<immediate_insn>\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_OP (\"<d>\", \"<immediate_insn>\"));\n   else\n-    return MIPS_SYNC_OP (\"<d>\", \"<insn>\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_OP (\"<d>\", \"<insn>\"));\n }\n   [(set_attr \"length\" \"28\")])\n \n@@ -411,9 +419,10 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_OLD_OP (\"<d>\", \"<immediate_insn>\");\t\n+    return (mips_output_sync_loop\n+\t    (MIPS_SYNC_OLD_OP (\"<d>\", \"<immediate_insn>\")));\n   else\n-    return MIPS_SYNC_OLD_OP (\"<d>\", \"<insn>\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_OLD_OP (\"<d>\", \"<insn>\"));\n }\n   [(set_attr \"length\" \"28\")])\n \n@@ -428,9 +437,10 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_NEW_OP (\"<d>\", \"<immediate_insn>\");\t\n+    return (mips_output_sync_loop\n+\t    (MIPS_SYNC_NEW_OP (\"<d>\", \"<immediate_insn>\")));\n   else\n-    return MIPS_SYNC_NEW_OP (\"<d>\", \"<insn>\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_NEW_OP (\"<d>\", \"<insn>\"));\n }\n   [(set_attr \"length\" \"28\")])\n \n@@ -441,9 +451,9 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_NAND (\"<d>\", \"andi\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_NAND (\"<d>\", \"andi\"));\n   else\n-    return MIPS_SYNC_NAND (\"<d>\", \"and\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_NAND (\"<d>\", \"and\"));\n }\n   [(set_attr \"length\" \"32\")])\n \n@@ -456,9 +466,9 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_OLD_NAND (\"<d>\", \"andi\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_OLD_NAND (\"<d>\", \"andi\"));\n   else\n-    return MIPS_SYNC_OLD_NAND (\"<d>\", \"and\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_OLD_NAND (\"<d>\", \"and\"));\n }\n   [(set_attr \"length\" \"32\")])\n \n@@ -471,9 +481,9 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_NEW_NAND (\"<d>\", \"andi\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_NEW_NAND (\"<d>\", \"andi\"));\n   else\n-    return MIPS_SYNC_NEW_NAND (\"<d>\", \"and\");\t\n+    return mips_output_sync_loop (MIPS_SYNC_NEW_NAND (\"<d>\", \"and\"));\n }\n   [(set_attr \"length\" \"32\")])\n \n@@ -486,9 +496,9 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_EXCHANGE (\"<d>\", \"li\");\n+    return mips_output_sync_loop (MIPS_SYNC_EXCHANGE (\"<d>\", \"li\"));\n   else\n-    return MIPS_SYNC_EXCHANGE (\"<d>\", \"move\");\n+    return mips_output_sync_loop (MIPS_SYNC_EXCHANGE (\"<d>\", \"move\"));\n }\n   [(set_attr \"length\" \"24\")])\n \n@@ -516,8 +526,10 @@\n   \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n-    return MIPS_SYNC_EXCHANGE_12 (MIPS_SYNC_EXCHANGE_12_NONZERO_OP);\n+    return (mips_output_sync_loop\n+\t    (MIPS_SYNC_EXCHANGE_12 (MIPS_SYNC_EXCHANGE_12_NONZERO_OP)));\n   else\n-    return MIPS_SYNC_EXCHANGE_12 (MIPS_SYNC_EXCHANGE_12_ZERO_OP);\n+    return (mips_output_sync_loop\n+\t    (MIPS_SYNC_EXCHANGE_12 (MIPS_SYNC_EXCHANGE_12_ZERO_OP)));\n }\n   [(set_attr \"length\" \"28,24\")])"}, {"sha": "cc66b45c14bed7097637ba0db2add2cb62e18b34", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -668,8 +668,8 @@ Objective-C and Objective-C++ Dialects}.\n -mmemcpy  -mno-memcpy  -mlong-calls  -mno-long-calls @gol\n -mmad  -mno-mad  -mfused-madd  -mno-fused-madd  -nocpp @gol\n -mfix-r4000  -mno-fix-r4000  -mfix-r4400  -mno-fix-r4400 @gol\n--mfix-vr4120  -mno-fix-vr4120  -mfix-vr4130  -mno-fix-vr4130 @gol\n--mfix-sb1  -mno-fix-sb1 @gol\n+-mfix-r10000 -mno-fix-r10000  -mfix-vr4120  -mno-fix-vr4120 @gol\n+-mfix-vr4130  -mno-fix-vr4130  -mfix-sb1  -mno-fix-sb1 @gol\n -mflush-func=@var{func}  -mno-flush-func @gol\n -mbranch-cost=@var{num}  -mbranch-likely  -mno-branch-likely @gol\n -mfp-exceptions -mno-fp-exceptions @gol\n@@ -12833,6 +12833,22 @@ A double-word or a variable shift may give an incorrect result if executed\n immediately after starting an integer division.\n @end itemize\n \n+@item -mfix-r10000\n+@itemx -mno-fix-r10000\n+@opindex mfix-r10000\n+@opindex mno-fix-r10000\n+Work around certain R10000 errata:\n+@itemize @minus\n+@item\n+@code{ll}/@code{sc} sequences may not behave atomically on revisions\n+prior to 3.0.  They may deadlock on revisions 2.6 and earlier.\n+@end itemize\n+\n+This option can only be used if the target architecture supports\n+branch-likely instructions.  @option{-mfix-r10000} is the default when\n+@option{-march=r10000} is used; @option{-mno-fix-r10000} is the default\n+otherwise.\n+\n @item -mfix-vr4120\n @itemx -mno-fix-vr4120\n @opindex mfix-vr4120"}, {"sha": "1a4a0d29fe222d696d06ecb51ba7b1574639a6ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -1,3 +1,22 @@\n+2008-11-15  Joshua Kinard  <kumba@gentoo.org>\n+\t    Richard Sandiford  <rdsandiford@goolemail.com>\n+\n+\t* gcc.target/mips/fix-r10000-1.c: New test.\n+\t* gcc.target/mips/fix-r10000-2.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-3.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-4.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-5.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-6.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-7.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-8.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-9.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-10.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-11.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-12.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-13.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-14.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-15.c: Likewise.\n+\n 2008-11-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/37561"}, {"sha": "e72974befc75ba72f18790d380ee7b4b3c17feaa", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-1.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_fetch_and_add (z, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_fetch_and_add (z, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_fetch_and_add (z, 42);\n+}"}, {"sha": "a6dbfa3dfc7e9bbdeccd26f81b877bde4b8b5ccd", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-10.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-10.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_and_and_fetch (z, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_and_and_fetch (z, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_and_and_fetch (z, 42);\n+}"}, {"sha": "4bf16e175a9bb74ac23c9308709b06f1d3c66187", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-11.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-11.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_xor_and_fetch (z, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_xor_and_fetch (z, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_xor_and_fetch (z, 42);\n+}"}, {"sha": "0381c249e458b678795524a1b361b8cc6f616f90", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-12.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-12.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_nand_and_fetch (z, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_nand_and_fetch (z, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_nand_and_fetch (z, 42);\n+}"}, {"sha": "7e1efc85ab98cb54390570c9b9ad4f198f4cab47", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-13.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-13.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_bool_compare_and_swap (z, 0, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_bool_compare_and_swap (z, 0, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_bool_compare_and_swap (z, 0, 42);\n+}"}, {"sha": "8d8fe095e34fd403ea2b008fa4f9f5fe0a57ecd6", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-14.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-14.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_val_compare_and_swap (z, 0, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_val_compare_and_swap (z, 0, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_val_compare_and_swap (z, 0, 42);\n+}"}, {"sha": "fd7d0364bd79fb71e3f7af21e86791fc408e7eaa", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-15.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-15.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  int result;\n+\n+  result = __sync_lock_test_and_set (z, 42);\n+  __sync_lock_release (z);\n+  return result;\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  short result;\n+\n+  result = __sync_lock_test_and_set (z, 42);\n+  __sync_lock_release (z);\n+  return result;\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  char result;\n+\n+  result = __sync_lock_test_and_set (z, 42);\n+  __sync_lock_release (z);\n+  return result;\n+}"}, {"sha": "900a697c99ecf4dfc95dad4a8422eddfb3787dc3", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-2.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z, int amt)\n+{\n+  return __sync_fetch_and_sub (z, amt);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z, short amt)\n+{\n+  return __sync_fetch_and_sub (z, amt);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z, char amt)\n+{\n+  return __sync_fetch_and_sub (z, amt);\n+}"}, {"sha": "de74e9724ee8aba62333ebb3debbaa5f2eaac93f", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-3.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-3.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_fetch_and_or (z, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_fetch_and_or (z, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_fetch_and_or (z, 42);\n+}"}, {"sha": "0c962ee267f1da49f238ab3ac1cafdd8ba013a29", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-4.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-4.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_fetch_and_and (z, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_fetch_and_and (z, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_fetch_and_and (z, 42);\n+}"}, {"sha": "15a0704f2c98341853cc171ee9394e63589a69bf", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-5.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-5.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_fetch_and_xor (z, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_fetch_and_xor (z, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_fetch_and_xor (z, 42);\n+}"}, {"sha": "275136957c867666be20a480c63eddd115f53525", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-6.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-6.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_fetch_and_nand (z, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_fetch_and_nand (z, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_fetch_and_nand (z, 42);\n+}"}, {"sha": "bbe985695da9325f951d2850f4a7f552aa1bda47", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-7.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-7.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_add_and_fetch (z, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_add_and_fetch (z, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_add_and_fetch (z, 42);\n+}"}, {"sha": "6e990a63fa6fbef392249484ef29e9efdc8df70a", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-8.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-8.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z, int amt)\n+{\n+  return __sync_sub_and_fetch (z, amt);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z, short amt)\n+{\n+  return __sync_sub_and_fetch (z, amt);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z, char amt)\n+{\n+  return __sync_sub_and_fetch (z, amt);\n+}"}, {"sha": "8373c42d949b83f3d1ae8b844be359862701f2e6", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-9.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a72e50cf00a988023f8eb2b08d25da87a7643/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-9.c?ref=ee9a72e50cf00a988023f8eb2b08d25da87a7643", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n+\n+NOMIPS16 int\n+f1 (int *z)\n+{\n+  return __sync_or_and_fetch (z, 42);\n+}\n+\n+NOMIPS16 short\n+f2 (short *z)\n+{\n+  return __sync_or_and_fetch (z, 42);\n+}\n+\n+NOMIPS16 char\n+f3 (char *z)\n+{\n+  return __sync_or_and_fetch (z, 42);\n+}"}]}