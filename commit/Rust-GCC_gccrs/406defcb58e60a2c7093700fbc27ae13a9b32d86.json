{"sha": "406defcb58e60a2c7093700fbc27ae13a9b32d86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA2ZGVmY2I1OGU2MGEyYzcwOTM3MDBmYmMyN2FlMTNhOWIzMmQ4Ng==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2013-02-19T14:01:40Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2013-02-19T14:01:40Z"}, "message": "re PR target/56347 (FAIL: gfortran.dg/integer_exponentiation_2.f90  -O2  execution test)\n\n\tPR target/56347\n\t* acinclude.m4 (LIBGFOR_CHECK_FOR_BROKEN_POWF): Remove check for\n\tbroken powf.\n\t* configure.ac (LIBGFOR_CHECK_FOR_BROKEN_POWF): Likewise.\n\t* intrinsics/c99_functions.c: Likewise.\n\t* configure: Rebuilt.\n\t* config.h.in: Rebuilt.\n\nFrom-SVN: r196139", "tree": {"sha": "06812d53daeb1952877d7d0700b54da3b42cee2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06812d53daeb1952877d7d0700b54da3b42cee2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/406defcb58e60a2c7093700fbc27ae13a9b32d86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406defcb58e60a2c7093700fbc27ae13a9b32d86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/406defcb58e60a2c7093700fbc27ae13a9b32d86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406defcb58e60a2c7093700fbc27ae13a9b32d86/comments", "author": null, "committer": null, "parents": [{"sha": "242387fa90a6a0f3224e23fd3769e1f28b5ead7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/242387fa90a6a0f3224e23fd3769e1f28b5ead7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/242387fa90a6a0f3224e23fd3769e1f28b5ead7f"}], "stats": {"total": 52, "additions": 10, "deletions": 42}, "files": [{"sha": "39606c8f13a61102241467c965d2d9f159e46c7f", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=406defcb58e60a2c7093700fbc27ae13a9b32d86", "patch": "@@ -1,3 +1,13 @@\n+2013-02-19  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR target/56347\n+\t* acinclude.m4 (LIBGFOR_CHECK_FOR_BROKEN_POWF): Remove check for\n+\tbroken powf.\n+\t* configure.ac (LIBGFOR_CHECK_FOR_BROKEN_POWF): Likewise.\n+\t* intrinsics/c99_functions.c: Likewise.\n+\t* configure: Rebuilt.\n+\t* config.h.in: Rebuilt.\n+\n 2013-02-06  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/55978"}, {"sha": "35698ec00f6e25d5813638f0f013ee3178c8a3f9", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=406defcb58e60a2c7093700fbc27ae13a9b32d86", "patch": "@@ -257,18 +257,6 @@ __mingw_snprintf (NULL, 0, \"%d\\n\", 1);\n   fi\n ])\n \n-dnl Check whether we have a broken powf implementation\n-AC_DEFUN([LIBGFOR_CHECK_FOR_BROKEN_POWF], [\n-  AC_CACHE_CHECK([whether powf is broken], libgfor_cv_have_broken_powf, [\n-case \"${target}\" in\n-  hppa*64*-*-hpux*) libgfor_cv_have_broken_powf=yes ;;\n-  *) libgfor_cv_have_broken_powf=no;;\n-esac])\n-  if test x\"$libgfor_cv_have_broken_powf\" = xyes; then\n-    AC_DEFINE(HAVE_BROKEN_POWF, 1, [Define if powf is broken.])\n-  fi\n-])\n-\n dnl Check whether we have a __float128 type\n AC_DEFUN([LIBGFOR_CHECK_FLOAT128], [\n   LIBQUADSPEC="}, {"sha": "fb5026fc0da37b334728d9e21eebf12d593e188c", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=406defcb58e60a2c7093700fbc27ae13a9b32d86", "patch": "@@ -81,9 +81,6 @@\n /* Define to 1 if the target supports __attribute__((visibility(...))). */\n #undef HAVE_ATTRIBUTE_VISIBILITY\n \n-/* Define if powf is broken. */\n-#undef HAVE_BROKEN_POWF\n-\n /* Define to 1 if you have the `cabs' function. */\n #undef HAVE_CABS\n "}, {"sha": "8385e9684581f9e9a2d513f8e5d283b14e9ddb48", "filename": "libgfortran/configure", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=406defcb58e60a2c7093700fbc27ae13a9b32d86", "patch": "@@ -25592,28 +25592,6 @@ $as_echo \"#define HAVE_MINGW_SNPRINTF 1\" >>confdefs.h\n   fi\n \n \n-# Check for a broken powf implementation\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether powf is broken\" >&5\n-$as_echo_n \"checking whether powf is broken... \" >&6; }\n-if test \"${libgfor_cv_have_broken_powf+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-\n-case \"${target}\" in\n-  hppa*64*-*-hpux*) libgfor_cv_have_broken_powf=yes ;;\n-  *) libgfor_cv_have_broken_powf=no;;\n-esac\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libgfor_cv_have_broken_powf\" >&5\n-$as_echo \"$libgfor_cv_have_broken_powf\" >&6; }\n-  if test x\"$libgfor_cv_have_broken_powf\" = xyes; then\n-\n-$as_echo \"#define HAVE_BROKEN_POWF 1\" >>confdefs.h\n-\n-  fi\n-\n-\n # Check whether libquadmath should be used\n # Check whether --enable-libquadmath-support was given.\n if test \"${enable_libquadmath_support+set}\" = set; then :"}, {"sha": "7d97fed1b0bdf80a6cd95f121bedba62549449b3", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=406defcb58e60a2c7093700fbc27ae13a9b32d86", "patch": "@@ -468,9 +468,6 @@ LIBGFOR_CHECK_WORKING_STAT\n # Check whether __mingw_snprintf() is present\n LIBGFOR_CHECK_MINGW_SNPRINTF\n \n-# Check for a broken powf implementation\n-LIBGFOR_CHECK_FOR_BROKEN_POWF\n-\n # Check whether libquadmath should be used\n AC_ARG_ENABLE(libquadmath-support,\n AS_HELP_STRING([--disable-libquadmath-support],"}, {"sha": "ee74b115ea7e33a8d87d5bfc1be28ed3712cb926", "filename": "libgfortran/intrinsics/c99_functions.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2Fintrinsics%2Fc99_functions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406defcb58e60a2c7093700fbc27ae13a9b32d86/libgfortran%2Fintrinsics%2Fc99_functions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fc99_functions.c?ref=406defcb58e60a2c7093700fbc27ae13a9b32d86", "patch": "@@ -518,10 +518,8 @@ nextafterf (float x, float y)\n #endif\n \n \n-#if !defined(HAVE_POWF) || defined(HAVE_BROKEN_POWF)\n #ifndef HAVE_POWF\n #define HAVE_POWF 1\n-#endif\n float powf (float x, float y);\n \n float"}]}