{"sha": "290df23d487c1da49f4eb53d40d06e2499e4e424", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkwZGYyM2Q0ODdjMWRhNDlmNGViNTNkNDBkMDZlMjQ5OWU0ZTQyNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-09-01T15:45:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-09-01T15:45:20Z"}, "message": "hashtable.h (_Hashtable<>::_Hashtable(_Hashtable&&)): Remove noexcept, the move constructor allocates memory...\n\n2011-09-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/hashtable.h (_Hashtable<>::_Hashtable(_Hashtable&&)):\n\tRemove noexcept, the move constructor allocates memory; rearrange\n\tthe code in the body to consistently update __ht._M_rehash_policy\n\tbefore using _M_next_bkt on it.\n\t* include/debug/unordered_map: Adjust.\n\t* include/debug/unordered_set: Likewise.\n\t* include/profile/unordered_map: Likewise.\n\t* include/profile/unordered_set: Likewise.\n\t* testsuite/23_containers/unordered_map/cons/\n\tnoexcept_move_construct.cc: Remove.\n\t* testsuite/23_containers/unordered_set/cons/\n\tnoexcept_move_construct.cc: Likewise.\n\t* testsuite/23_containers/unordered_multimap/cons/\n\tnoexcept_move_construct.cc: Likewise.\n\t* testsuite/23_containers/unordered_multiset/cons/\n\tnoexcept_move_construct.cc: Likewise.\n\nFrom-SVN: r178423", "tree": {"sha": "26b8b049ff56f8a60cd38c3cb3989852259e59b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26b8b049ff56f8a60cd38c3cb3989852259e59b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/290df23d487c1da49f4eb53d40d06e2499e4e424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/290df23d487c1da49f4eb53d40d06e2499e4e424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/290df23d487c1da49f4eb53d40d06e2499e4e424", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/290df23d487c1da49f4eb53d40d06e2499e4e424/comments", "author": null, "committer": null, "parents": [{"sha": "d51813db53d299c79b4dee7cd8f6be61d61d4635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d51813db53d299c79b4dee7cd8f6be61d61d4635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d51813db53d299c79b4dee7cd8f6be61d61d4635"}], "stats": {"total": 152, "additions": 22, "deletions": 130}, "files": [{"sha": "386a15e3de71bce2fe24ae25877ec73ec274673d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=290df23d487c1da49f4eb53d40d06e2499e4e424", "patch": "@@ -1,3 +1,22 @@\n+2011-09-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/hashtable.h (_Hashtable<>::_Hashtable(_Hashtable&&)):\n+\tRemove noexcept, the move constructor allocates memory; rearrange\n+\tthe code in the body to consistently update __ht._M_rehash_policy\n+\tbefore using _M_next_bkt on it.\n+\t* include/debug/unordered_map: Adjust.\n+\t* include/debug/unordered_set: Likewise.\n+\t* include/profile/unordered_map: Likewise.\n+\t* include/profile/unordered_set: Likewise.\n+\t* testsuite/23_containers/unordered_map/cons/\n+\tnoexcept_move_construct.cc: Remove.\n+\t* testsuite/23_containers/unordered_set/cons/\n+\tnoexcept_move_construct.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multimap/cons/\n+\tnoexcept_move_construct.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multiset/cons/\n+\tnoexcept_move_construct.cc: Likewise.\n+\n 2011-08-31  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/chrono (operator*(const _Rep1&, const duration<>&)):"}, {"sha": "ed9bdb380bc8fa76896c8a17dae36c83062439d3", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=290df23d487c1da49f4eb53d40d06e2499e4e424", "patch": "@@ -674,8 +674,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     _Hashtable<_Key, _Value, _Allocator, _ExtractKey, _Equal,\n \t       _H1, _H2, _Hash, _RehashPolicy, __chc, __cit, __uk>::\n     _Hashtable(_Hashtable&& __ht)\n-    noexcept(__and_<is_nothrow_copy_constructible<_Equal>,\n-\t            is_nothrow_copy_constructible<_H1>>::value)\n     : __detail::_Rehash_base<_RehashPolicy, _Hashtable>(__ht),\n       __detail::_Hash_code_base<_Key, _Value, _ExtractKey, _Equal,\n \t\t\t\t_H1, _H2, _Hash, __chc>(__ht),\n@@ -687,12 +685,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _M_element_count(__ht._M_element_count),\n       _M_rehash_policy(__ht._M_rehash_policy)\n     {\n-      size_type __n_bkt = __ht._M_rehash_policy._M_next_bkt(0);\n-      __ht._M_buckets = __ht._M_allocate_buckets(__n_bkt);\n-      __ht._M_bucket_count = __n_bkt;\n+      __ht._M_rehash_policy = _RehashPolicy();\n+      __ht._M_bucket_count = __ht._M_rehash_policy._M_next_bkt(0);\n+      __ht._M_buckets = __ht._M_allocate_buckets(__ht._M_bucket_count);\n       __ht._M_begin_bucket_index = __ht._M_bucket_count;\n       __ht._M_element_count = 0;\n-      __ht._M_rehash_policy = _RehashPolicy();\n     }\n \n   template<typename _Key, typename _Value,"}, {"sha": "6eeff6429e459bb0825fdf0433df3c820dfef8b4", "filename": "libstdc++-v3/include/debug/unordered_map", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map?ref=290df23d487c1da49f4eb53d40d06e2499e4e424", "patch": "@@ -104,8 +104,6 @@ namespace __debug\n       : _Base(__x) { }\n \n       unordered_map(unordered_map&& __x)\n-      noexcept(__and_<is_nothrow_copy_constructible<_Hash>,\n-\t              is_nothrow_copy_constructible<_Pred>>::value)\n       : _Base(std::move(__x)) { }\n \n       unordered_map(initializer_list<value_type> __l,\n@@ -485,8 +483,6 @@ namespace __debug\n       : _Base(__x) { }\n \n       unordered_multimap(unordered_multimap&& __x)\n-      noexcept(__and_<is_nothrow_copy_constructible<_Hash>,\n-\t              is_nothrow_copy_constructible<_Pred>>::value)\n       : _Base(std::move(__x)) { }\n \n       unordered_multimap(initializer_list<value_type> __l,"}, {"sha": "0cc3a12cf377e74d93fb0faaf29148775daf981a", "filename": "libstdc++-v3/include/debug/unordered_set", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set?ref=290df23d487c1da49f4eb53d40d06e2499e4e424", "patch": "@@ -104,8 +104,6 @@ namespace __debug\n       : _Base(__x) { }\n \n       unordered_set(unordered_set&& __x)\n-      noexcept(__and_<is_nothrow_copy_constructible<_Hash>,\n-\t              is_nothrow_copy_constructible<_Pred>>::value)\n       : _Base(std::move(__x)) { }\n \n       unordered_set(initializer_list<value_type> __l,\n@@ -480,8 +478,6 @@ namespace __debug\n       : _Base(__x) { }\n \n       unordered_multiset(unordered_multiset&& __x)\n-      noexcept(__and_<is_nothrow_copy_constructible<_Hash>,\n-\t              is_nothrow_copy_constructible<_Pred>>::value)\n       : _Base(std::move(__x)) { }\n \n       unordered_multiset(initializer_list<value_type> __l,"}, {"sha": "5722771f425f17a8e1a95baf6346f7e1c3fbec13", "filename": "libstdc++-v3/include/profile/unordered_map", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map?ref=290df23d487c1da49f4eb53d40d06e2499e4e424", "patch": "@@ -104,8 +104,6 @@ namespace __profile\n       }\n \n       unordered_map(unordered_map&& __x)\n-      noexcept(__and_<is_nothrow_copy_constructible<_Hash>,\n-\t              is_nothrow_copy_constructible<_Pred>>::value)\n       : _Base(std::move(__x)) \n       {\n         __profcxx_hashtable_construct(this, _Base::bucket_count());\n@@ -374,8 +372,6 @@ namespace __profile\n       }\n \n       unordered_multimap(unordered_multimap&& __x)\n-      noexcept(__and_<is_nothrow_copy_constructible<_Hash>,\n-\t              is_nothrow_copy_constructible<_Pred>>::value)\n       : _Base(std::move(__x))\n       {\n         __profcxx_hashtable_construct(this, _Base::bucket_count());"}, {"sha": "cb3a0e17451d7ddf974893c1234fe06987a60d0b", "filename": "libstdc++-v3/include/profile/unordered_set", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/290df23d487c1da49f4eb53d40d06e2499e4e424/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_set?ref=290df23d487c1da49f4eb53d40d06e2499e4e424", "patch": "@@ -103,8 +103,6 @@ namespace __profile\n       }\n \n       unordered_set(unordered_set&& __x)\n-      noexcept(__and_<is_nothrow_copy_constructible<_Hash>,\n-\t              is_nothrow_copy_constructible<_Pred>>::value)\n       : _Base(std::move(__x)) \n       { \n         __profcxx_hashtable_construct(this, _Base::bucket_count());\n@@ -348,8 +346,6 @@ namespace __profile\n       }\n \n       unordered_multiset(unordered_multiset&& __x)\n-      noexcept(__and_<is_nothrow_copy_constructible<_Hash>,\n-\t              is_nothrow_copy_constructible<_Pred>>::value)\n       : _Base(std::move(__x))\n       {\n         __profcxx_hashtable_construct(this, _Base::bucket_count());"}, {"sha": "cb2116873eda345853c8d429b66ef9d383a3d076", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/cons/noexcept_move_construct.cc", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d51813db53d299c79b4dee7cd8f6be61d61d4635/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fnoexcept_move_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d51813db53d299c79b4dee7cd8f6be61d61d4635/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fnoexcept_move_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fnoexcept_move_construct.cc?ref=d51813db53d299c79b4dee7cd8f6be61d61d4635", "patch": "@@ -1,27 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// 2011-06-01  Paolo Carlini  <paolo.carlini@oracle.com>\n-//\n-// Copyright (C) 2011 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <unordered_map>\n-\n-typedef std::unordered_map<int, int> umtype;\n-\n-static_assert(std::is_nothrow_move_constructible<umtype>::value, \"Error\");"}, {"sha": "45ccee09db3766e501feaf006b6cd74be5ac54cf", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/cons/noexcept_move_construct.cc", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d51813db53d299c79b4dee7cd8f6be61d61d4635/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2Fnoexcept_move_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d51813db53d299c79b4dee7cd8f6be61d61d4635/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2Fnoexcept_move_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2Fnoexcept_move_construct.cc?ref=d51813db53d299c79b4dee7cd8f6be61d61d4635", "patch": "@@ -1,27 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// 2011-06-01  Paolo Carlini  <paolo.carlini@oracle.com>\n-//\n-// Copyright (C) 2011 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <unordered_map>\n-\n-typedef std::unordered_multimap<int, int> ummtype;\n-\n-static_assert(std::is_nothrow_move_constructible<ummtype>::value, \"Error\");"}, {"sha": "4a1ada81becbb5fc0042f434760451dd793ba511", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/cons/noexcept_move_construct.cc", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d51813db53d299c79b4dee7cd8f6be61d61d4635/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2Fnoexcept_move_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d51813db53d299c79b4dee7cd8f6be61d61d4635/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2Fnoexcept_move_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2Fnoexcept_move_construct.cc?ref=d51813db53d299c79b4dee7cd8f6be61d61d4635", "patch": "@@ -1,27 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// 2011-06-01  Paolo Carlini  <paolo.carlini@oracle.com>\n-//\n-// Copyright (C) 2011 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <unordered_set>\n-\n-typedef std::unordered_multiset<int> umstype;\n-\n-static_assert(std::is_nothrow_move_constructible<umstype>::value, \"Error\");"}, {"sha": "3e3ec73e09f3097ad6812a164ef758ebb09234d1", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/cons/noexcept_move_construct.cc", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d51813db53d299c79b4dee7cd8f6be61d61d4635/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2Fnoexcept_move_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d51813db53d299c79b4dee7cd8f6be61d61d4635/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2Fnoexcept_move_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2Fnoexcept_move_construct.cc?ref=d51813db53d299c79b4dee7cd8f6be61d61d4635", "patch": "@@ -1,27 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// 2011-06-01  Paolo Carlini  <paolo.carlini@oracle.com>\n-//\n-// Copyright (C) 2011 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <unordered_set>\n-\n-typedef std::unordered_set<int> ustype;\n-\n-static_assert(std::is_nothrow_move_constructible<ustype>::value, \"Error\");"}]}