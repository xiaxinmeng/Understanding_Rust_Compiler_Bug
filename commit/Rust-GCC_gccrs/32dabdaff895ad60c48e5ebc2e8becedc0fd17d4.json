{"sha": "32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJkYWJkYWZmODk1YWQ2MGM0OGU1ZWJjMmU4YmVjZWRjMGZkMTdkNA==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-04-14T12:12:55Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-04-14T12:12:55Z"}, "message": "In gcc/: 2011-04-14 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/:\n2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* c-parser.c (c_parser_objc_class_declaration): Updated call to\n\tobjc_declare_class.\n\nIn gcc/c-family/:\n2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* stub-objc.c (objc_declare_class): Updated argument name.\n\nIn gcc/cp/:\n2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* parser.c (cp_parser_objc_class_declaration): Updated for change\n\tin objc_declare_class().\n\nIn gcc/objc/:\n2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-act.c (objc_declare_class): Changed to take a single\n\tidentifier as argument instead of a tree list.  This means callers\n\tdon't have to build temporary tree lists to call this function.\n\t(synth_module_prologue): Updated calls to objc_declare_class.\n\nFrom-SVN: r172425", "tree": {"sha": "1e8730dabd24d0ca6758eaeae0275a3d21c2eb2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e8730dabd24d0ca6758eaeae0275a3d21c2eb2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "daade2060caf31a11154d926d4927717564a7a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daade2060caf31a11154d926d4927717564a7a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daade2060caf31a11154d926d4927717564a7a46"}], "stats": {"total": 101, "additions": 64, "deletions": 37}, "files": [{"sha": "d6ce73141513848c1ce36d2ca4bb8916feb593b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "patch": "@@ -1,3 +1,8 @@\n+2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* c-parser.c (c_parser_objc_class_declaration): Updated call to\n+\tobjc_declare_class.\n+\n 2011-04-14  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.h (get_object_alignment_1): Declare."}, {"sha": "4b474748f5092e7c8534f8fdec158e1c2bd8df6b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "patch": "@@ -1,3 +1,7 @@\n+2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* stub-objc.c (objc_declare_class): Updated argument name.\n+\n 2011-04-12  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* c-common.h (c_common_init_ts): Declare."}, {"sha": "683472126f769081ef843083e3960745dfabcdb7", "filename": "gcc/c-family/stub-objc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fc-family%2Fstub-objc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fc-family%2Fstub-objc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fstub-objc.c?ref=32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "patch": "@@ -110,7 +110,7 @@ objc_declare_alias (tree ARG_UNUSED (alias), tree ARG_UNUSED (orig))\n }\n \n void\n-objc_declare_class (tree ARG_UNUSED (list))\n+objc_declare_class (tree ARG_UNUSED (identifier))\n {\n }\n "}, {"sha": "8000b755af5a013667cf33d88160c425b9ba4b8c", "filename": "gcc/c-parser.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "patch": "@@ -6994,7 +6994,6 @@ c_parser_objc_class_instance_variables (c_parser *parser)\n static void\n c_parser_objc_class_declaration (c_parser *parser)\n {\n-  tree list = NULL_TREE;\n   gcc_assert (c_parser_next_token_is_keyword (parser, RID_AT_CLASS));\n   c_parser_consume_token (parser);\n   /* Any identifiers, including those declared as type names, are OK\n@@ -7010,15 +7009,14 @@ c_parser_objc_class_declaration (c_parser *parser)\n \t  return;\n \t}\n       id = c_parser_peek_token (parser)->value;\n-      list = chainon (list, build_tree_list (NULL_TREE, id));\n+      objc_declare_class (id);\n       c_parser_consume_token (parser);\n       if (c_parser_next_token_is (parser, CPP_COMMA))\n \tc_parser_consume_token (parser);\n       else\n \tbreak;\n     }\n   c_parser_skip_until_found (parser, CPP_SEMICOLON, \"expected %<;%>\");\n-  objc_declare_class (list);\n }\n \n /* Parse an objc-alias-declaration."}, {"sha": "37b107191d5fc8223738e1a72433ef6e35912a1e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "patch": "@@ -1,3 +1,8 @@\n+2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* parser.c (cp_parser_objc_class_declaration): Updated for change\n+\tin objc_declare_class().\n+\n 2011-04-14  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* decl.c (poplevel): Use block_chainon."}, {"sha": "17f5850f894909596d45ef0be776d638ef66dfcd", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "patch": "@@ -21615,7 +21615,21 @@ static void\n cp_parser_objc_class_declaration (cp_parser* parser)\n {\n   cp_lexer_consume_token (parser->lexer);  /* Eat '@class'.  */\n-  objc_declare_class (cp_parser_objc_identifier_list (parser));\n+  while (true)\n+    {\n+      tree id;\n+      \n+      id = cp_parser_identifier (parser);\n+      if (id == error_mark_node)\n+\tbreak;\n+      \n+      objc_declare_class (id);\n+\n+      if (cp_lexer_next_token_is (parser->lexer, CPP_COMMA))\n+\tcp_lexer_consume_token (parser->lexer);\n+      else\n+\tbreak;\n+    }\n   cp_parser_consume_semicolon_at_end_of_statement (parser);\n }\n "}, {"sha": "f39cb0a582cefaed3e525f80f3a036dd36438d43", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "patch": "@@ -1,3 +1,10 @@\n+2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c (objc_declare_class): Changed to take a single\n+\tidentifier as argument instead of a tree list.  This means callers\n+\tdon't have to build temporary tree lists to call this function.\n+\t(synth_module_prologue): Updated calls to objc_declare_class.\n+\t\n 2011-04-13  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (build_keyword_selector): Use get_identifier_with_length"}, {"sha": "c68f628466c7b6b98fd93f75fd260371222f529b", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 26, "deletions": 32, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32dabdaff895ad60c48e5ebc2e8becedc0fd17d4/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=32dabdaff895ad60c48e5ebc2e8becedc0fd17d4", "patch": "@@ -2953,7 +2953,7 @@ synth_module_prologue (void)\n \n   /* Forward-declare '@interface Protocol'.  */\n   type = get_identifier (PROTOCOL_OBJECT_CLASS_NAME);\n-  objc_declare_class (tree_cons (NULL_TREE, type, NULL_TREE));\n+  objc_declare_class (type);\n   objc_protocol_type = build_pointer_type (xref_tag (RECORD_TYPE, type));\n \n   /* Declare receiver type used for dispatching messages to 'super'.  */\n@@ -2985,7 +2985,7 @@ synth_module_prologue (void)\n   if (!constant_string_class_name)\n     constant_string_class_name = runtime.default_constant_string_class_name;\n   constant_string_id = get_identifier (constant_string_class_name);\n-  objc_declare_class (tree_cons (NULL_TREE, constant_string_id, NULL_TREE));\n+  objc_declare_class (constant_string_id);\n \n   /* Pre-build the following entities - for speed/convenience.  */\n   self_id = get_identifier (\"self\");\n@@ -3360,48 +3360,42 @@ objc_declare_alias (tree alias_ident, tree class_ident)\n }\n \n void\n-objc_declare_class (tree ident_list)\n+objc_declare_class (tree identifier)\n {\n-  tree list;\n #ifdef OBJCPLUS\n   if (current_namespace != global_namespace) {\n     error (\"Objective-C declarations may only appear in global scope\");\n   }\n #endif /* OBJCPLUS */\n \n-  for (list = ident_list; list; list = TREE_CHAIN (list))\n+  if (! objc_is_class_name (identifier))\n     {\n-      tree ident = TREE_VALUE (list);\n-\n-      if (! objc_is_class_name (ident))\n+      tree record = lookup_name (identifier), type = record;\n+      \n+      if (record)\n \t{\n-\t  tree record = lookup_name (ident), type = record;\n-\n-\t  if (record)\n+\t  if (TREE_CODE (record) == TYPE_DECL)\n+\t    type = DECL_ORIGINAL_TYPE (record)\n+\t      ? DECL_ORIGINAL_TYPE (record)\n+\t      : TREE_TYPE (record);\n+\t  \n+\t  if (!TYPE_HAS_OBJC_INFO (type)\n+\t      || !TYPE_OBJC_INTERFACE (type))\n \t    {\n-\t      if (TREE_CODE (record) == TYPE_DECL)\n-\t\ttype = DECL_ORIGINAL_TYPE (record)\n-\t\t\t\t\t? DECL_ORIGINAL_TYPE (record)\n-\t\t\t\t\t: TREE_TYPE (record);\n-\n-\t      if (!TYPE_HAS_OBJC_INFO (type)\n-\t\t  || !TYPE_OBJC_INTERFACE (type))\n-\t\t{\n-\t\t  error (\"%qE redeclared as different kind of symbol\",\n-\t\t\t ident);\n-\t\t  error (\"previous declaration of %q+D\",\n-\t\t\t record);\n-\t\t}\n+\t      error (\"%qE redeclared as different kind of symbol\",\n+\t\t     identifier);\n+\t      error (\"previous declaration of %q+D\",\n+\t\t     record);\n \t    }\n-\n-\t  record = xref_tag (RECORD_TYPE, ident);\n-\t  INIT_TYPE_OBJC_INFO (record);\n-\t  /* In the case of a @class declaration, we store the ident\n-\t     in the TYPE_OBJC_INTERFACE.  If later an @interface is\n-\t     found, we'll replace the ident with the interface.  */\n-\t  TYPE_OBJC_INTERFACE (record) = ident;\n-\t  hash_class_name_enter (cls_name_hash_list, ident, NULL_TREE);\n \t}\n+      \n+      record = xref_tag (RECORD_TYPE, identifier);\n+      INIT_TYPE_OBJC_INFO (record);\n+      /* In the case of a @class declaration, we store the ident in\n+\t the TYPE_OBJC_INTERFACE.  If later an @interface is found,\n+\t we'll replace the ident with the interface.  */\n+      TYPE_OBJC_INTERFACE (record) = identifier;\n+      hash_class_name_enter (cls_name_hash_list, identifier, NULL_TREE);\n     }\n }\n "}]}