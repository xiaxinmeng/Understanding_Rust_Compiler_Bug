{"sha": "10b2bcdd509df50958aed053ad7445f8f0e0902e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBiMmJjZGQ1MDlkZjUwOTU4YWVkMDUzYWQ3NDQ1ZjhmMGUwOTAyZQ==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2005-02-02T21:13:41Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2005-02-02T21:13:41Z"}, "message": "cp-tree.h (commonparms): Remove prototype.\n\n\t* cp-tree.h (commonparms): Remove prototype.\n\t(convert_arguments): Likewise.\n\t(PFN_FROM_PTRMEMFUNC): Remove.\n\t* typeck.c (commonparms): Make static.\n\t(convert_arguments): Add prototype. Make static.\n\t(PFN_FROM_PTRMEMFUNC): Replace by pfn_from_ptrmemfunc.\n\nFrom-SVN: r94613", "tree": {"sha": "d85ebf5e224d7de219df44ccc738f80631b0a8c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d85ebf5e224d7de219df44ccc738f80631b0a8c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10b2bcdd509df50958aed053ad7445f8f0e0902e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b2bcdd509df50958aed053ad7445f8f0e0902e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10b2bcdd509df50958aed053ad7445f8f0e0902e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b2bcdd509df50958aed053ad7445f8f0e0902e/comments", "author": null, "committer": null, "parents": [{"sha": "f88459359d00261a6373ca051437ace4b6b095ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88459359d00261a6373ca051437ace4b6b095ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f88459359d00261a6373ca051437ace4b6b095ed"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "b90461a09f89e219491ba4a8dbca106f89c216b0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b2bcdd509df50958aed053ad7445f8f0e0902e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b2bcdd509df50958aed053ad7445f8f0e0902e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=10b2bcdd509df50958aed053ad7445f8f0e0902e", "patch": "@@ -1,3 +1,12 @@\n+2005-02-02  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* cp-tree.h (commonparms): Remove prototype.\n+\t(convert_arguments): Likewise.\n+\t(PFN_FROM_PTRMEMFUNC): Remove.\n+\t* typeck.c (commonparms): Make static.\n+\t(convert_arguments): Add prototype. Make static.\n+\t(PFN_FROM_PTRMEMFUNC): Replace by pfn_from_ptrmemfunc.\n+\n 2005-01-31  Mark Mitchell  <mark@codesourcery.com>\n \n \t* parser.c (cp_parser_primary_expression): Don't complain about"}, {"sha": "71cc5d3d666f309a0fbd526e8467dd7e0c48fcf1", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b2bcdd509df50958aed053ad7445f8f0e0902e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b2bcdd509df50958aed053ad7445f8f0e0902e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=10b2bcdd509df50958aed053ad7445f8f0e0902e", "patch": "@@ -2535,8 +2535,6 @@ struct lang_decl GTY(())\n       }\t\t\t\t\t\t\t\t\t\\\n     TYPE_LANG_SPECIFIC (NODE)->u.ptrmem.record = (VALUE);\t\t\\\n   } while (0)\n-/* Returns the pfn field from a TYPE_PTRMEMFUNC_P.  */\n-#define PFN_FROM_PTRMEMFUNC(NODE) pfn_from_ptrmemfunc ((NODE))\n \n /* For a pointer-to-member type of the form `T X::*', this is `X'.\n    For a type like `void (X::*)() const', this type is `X', not `const\n@@ -4267,7 +4265,6 @@ extern tree complete_type\t\t\t(tree);\n extern tree complete_type_or_diagnostic         (tree, tree, int);\n #define complete_type_or_else(T,V) (complete_type_or_diagnostic ((T), (V), 0))\n extern int type_unknown_p\t\t\t(tree);\n-extern tree commonparms\t\t\t\t(tree, tree);\n extern tree original_type\t\t\t(tree);\n extern bool comp_except_specs\t\t\t(tree, tree, bool);\n extern bool comptypes\t\t\t\t(tree, tree, int);\n@@ -4286,7 +4283,6 @@ extern tree build_x_indirect_ref\t\t(tree, const char *);\n extern tree build_indirect_ref\t\t\t(tree, const char *);\n extern tree build_array_ref\t\t\t(tree, tree);\n extern tree get_member_function_from_ptrfunc\t(tree *, tree);\n-extern tree convert_arguments\t\t\t(tree, tree, tree, int);\n extern tree build_x_binary_op\t\t\t(enum tree_code, tree, tree,\n \t\t\t\t\t\t bool *);\n extern tree build_x_unary_op\t\t\t(enum tree_code, tree);"}, {"sha": "859c437f0504b03d89772c13ab45172cf9cfe4da", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b2bcdd509df50958aed053ad7445f8f0e0902e/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b2bcdd509df50958aed053ad7445f8f0e0902e/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=10b2bcdd509df50958aed053ad7445f8f0e0902e", "patch": "@@ -57,6 +57,7 @@ static void casts_away_constness_r (tree *, tree *);\n static bool casts_away_constness (tree, tree);\n static void maybe_warn_about_returning_address_of_local (tree);\n static tree lookup_destructor (tree, tree, tree);\n+static tree convert_arguments (tree, tree, tree, int);\n \n /* Return the target type of TYPE, which means return T for:\n    T*, T&, T[], T (...), and otherwise, just T.  */\n@@ -174,7 +175,7 @@ type_unknown_p (tree exp)\n    As an optimization, free the space we allocate if the parameter\n    lists are already common.  */\n \n-tree\n+static tree\n commonparms (tree p1, tree p2)\n {\n   tree oldargs = p1, newargs, n;\n@@ -2325,7 +2326,7 @@ get_member_function_from_ptrfunc (tree *instance_ptrptr, tree function)\n \tfunction = save_expr (function);\n \n       /* Start by extracting all the information from the PMF itself.  */\n-      e3 = PFN_FROM_PTRMEMFUNC (function);\n+      e3 = pfn_from_ptrmemfunc (function);\n       delta = build_ptrmemfunc_access_expr (function, delta_identifier);\n       idx = build1 (NOP_EXPR, vtable_index_type, e3);\n       switch (TARGET_PTRMEMFUNC_VBIT_LOCATION)\n@@ -2493,7 +2494,7 @@ build_function_call (tree function, tree params)\n    In C++, unspecified trailing parameters can be filled in with their\n    default arguments, if such were specified.  Do so here.  */\n \n-tree\n+static tree\n convert_arguments (tree typelist, tree values, tree fndecl, int flags)\n {\n   tree typetail, valtail;"}]}