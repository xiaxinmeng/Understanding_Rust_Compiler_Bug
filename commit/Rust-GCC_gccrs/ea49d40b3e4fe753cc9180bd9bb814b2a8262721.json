{"sha": "ea49d40b3e4fe753cc9180bd9bb814b2a8262721", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE0OWQ0MGIzZTRmZTc1M2NjOTE4MGJkOWJiODE0YjJhODI2MjcyMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2018-02-21T19:05:30Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-02-21T19:05:30Z"}, "message": "re PR c/84229 (A valid code rejected with -flto)\n\n\tPR c/84229\n\t* ipa-cp.c (determine_versionability): Do not version functions caling\n\tva_arg_pack.\n\nFrom-SVN: r257877", "tree": {"sha": "3b03e64ed273f26c5a6079942feb39ed3b270bba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b03e64ed273f26c5a6079942feb39ed3b270bba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea49d40b3e4fe753cc9180bd9bb814b2a8262721", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea49d40b3e4fe753cc9180bd9bb814b2a8262721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea49d40b3e4fe753cc9180bd9bb814b2a8262721", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea49d40b3e4fe753cc9180bd9bb814b2a8262721/comments", "author": null, "committer": null, "parents": [{"sha": "e68757438d8f5b6eacc8b95798835aada2b11668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68757438d8f5b6eacc8b95798835aada2b11668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68757438d8f5b6eacc8b95798835aada2b11668"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "2bc276eb9f2140d7aeae2abf858a3947475ae897", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea49d40b3e4fe753cc9180bd9bb814b2a8262721/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea49d40b3e4fe753cc9180bd9bb814b2a8262721/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea49d40b3e4fe753cc9180bd9bb814b2a8262721", "patch": "@@ -1,3 +1,9 @@\n+2018-02-21  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR c/84229\n+\t* ipa-cp.c (determine_versionability): Do not version functions caling\n+\tva_arg_pack.\n+\n 2018-02-21  Martin Liska  <mliska@suse.cz>\n \n \tPR driver/83193"}, {"sha": "182dc498364a15896685eccef43b8a43e515d80d", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea49d40b3e4fe753cc9180bd9bb814b2a8262721/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea49d40b3e4fe753cc9180bd9bb814b2a8262721/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=ea49d40b3e4fe753cc9180bd9bb814b2a8262721", "patch": "@@ -630,6 +630,24 @@ determine_versionability (struct cgraph_node *node,\n       reason = \"calls comdat-local function\";\n     }\n \n+  /* Functions calling BUILT_IN_VA_ARG_PACK and BUILT_IN_VA_ARG_PACK_LEN\n+     works only when inlined.  Cloning them may still lead to better code\n+     becuase ipa-cp will not give up on cloning further.  If the function is\n+     external this however leads to wrong code becuase we may end up producing\n+     offline copy of the function.  */\n+  if (DECL_EXTERNAL (node->decl))\n+    for (cgraph_edge *edge = node->callees; !reason && edge;\n+\t edge = edge->next_callee)\n+      if (DECL_BUILT_IN (edge->callee->decl)\n+\t  && DECL_BUILT_IN_CLASS (edge->callee->decl) == BUILT_IN_NORMAL)\n+        {\n+\t  if (DECL_FUNCTION_CODE (edge->callee->decl) == BUILT_IN_VA_ARG_PACK)\n+\t    reason = \"external function which calls va_arg_pack\";\n+\t  if (DECL_FUNCTION_CODE (edge->callee->decl)\n+\t      == BUILT_IN_VA_ARG_PACK_LEN)\n+\t    reason = \"external function which calls va_arg_pack_len\";\n+        }\n+\n   if (reason && dump_file && !node->alias && !node->thunk.thunk_p)\n     fprintf (dump_file, \"Function %s is not versionable, reason: %s.\\n\",\n \t     node->dump_name (), reason);"}]}