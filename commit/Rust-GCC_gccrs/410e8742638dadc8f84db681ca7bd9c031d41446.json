{"sha": "410e8742638dadc8f84db681ca7bd9c031d41446", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEwZTg3NDI2MzhkYWRjOGY4NGRiNjgxY2E3YmQ5YzAzMWQ0MTQ0Ng==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-09-03T09:22:26Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-09-03T13:30:57Z"}, "message": "Use non-null knowledge in path_range_query.\n\nThis patch improves ranges for pointers we are interested in a path, by\nusing the non-null class from the ranger.  This allows us to thread more\npaths with minimal effort.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* gimple-range-path.cc (path_range_query::range_defined_in_block):\n\tAdjust for non-null.\n\t(path_range_query::adjust_for_non_null_uses): New.\n\t(path_range_query::precompute_ranges): Call\n\tadjust_for_non_null_uses.\n\t* gimple-range-path.h: Add m_non_null and\n\tadjust_for_non_null_uses.", "tree": {"sha": "aad68d5fc37166b8a2beb71595296d3023383407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aad68d5fc37166b8a2beb71595296d3023383407"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/410e8742638dadc8f84db681ca7bd9c031d41446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/410e8742638dadc8f84db681ca7bd9c031d41446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/410e8742638dadc8f84db681ca7bd9c031d41446", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/410e8742638dadc8f84db681ca7bd9c031d41446/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "134289146468b0b7215159d1940a674e1c3b228e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134289146468b0b7215159d1940a674e1c3b228e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/134289146468b0b7215159d1940a674e1c3b228e"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "db15eb3ff22729cad3dfb5518fd048a06752d9c9", "filename": "gcc/gimple-range-path.cc", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410e8742638dadc8f84db681ca7bd9c031d41446/gcc%2Fgimple-range-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410e8742638dadc8f84db681ca7bd9c031d41446/gcc%2Fgimple-range-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-path.cc?ref=410e8742638dadc8f84db681ca7bd9c031d41446", "patch": "@@ -221,6 +221,9 @@ path_range_query::range_defined_in_block (irange &r, tree name, basic_block bb)\n   else if (!fold_range (r, def_stmt, this))\n     r.set_varying (TREE_TYPE (name));\n \n+  if (bb)\n+    m_non_null.adjust_range (r, name, bb);\n+\n   if (DEBUG_SOLVER && (bb || !r.varying_p ()))\n     {\n       fprintf (dump_file, \"range_defined_in_block (BB%d) for \", bb ? bb->index : -1);\n@@ -302,6 +305,35 @@ path_range_query::precompute_ranges_in_block (basic_block bb)\n     }\n }\n \n+// Adjust all pointer imports in BB with non-null information.\n+\n+void\n+path_range_query::adjust_for_non_null_uses (basic_block bb)\n+{\n+  int_range_max r;\n+  bitmap_iterator bi;\n+  unsigned i;\n+\n+  EXECUTE_IF_SET_IN_BITMAP (m_imports, 0, i, bi)\n+    {\n+      tree name = ssa_name (i);\n+\n+      if (!POINTER_TYPE_P (TREE_TYPE (name)))\n+\tcontinue;\n+\n+      if (get_cache (r, name))\n+\t{\n+\t  if (r.nonzero_p ())\n+\t    continue;\n+\t}\n+      else\n+\tr.set_varying (TREE_TYPE (name));\n+\n+      if (m_non_null.adjust_range (r, name, bb))\n+\tset_cache (r, name);\n+    }\n+}\n+\n // Precompute the ranges for IMPORTS along PATH.\n //\n // IMPORTS are the set of SSA names, any of which could potentially\n@@ -332,6 +364,7 @@ path_range_query::precompute_ranges (const vec<basic_block> &path,\n       basic_block bb = curr_bb ();\n \n       precompute_ranges_in_block (bb);\n+      adjust_for_non_null_uses (bb);\n \n       if (at_exit ())\n \tbreak;"}, {"sha": "5177313104020ee7288696902f574c639ce2ba0c", "filename": "gcc/gimple-range-path.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410e8742638dadc8f84db681ca7bd9c031d41446/gcc%2Fgimple-range-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410e8742638dadc8f84db681ca7bd9c031d41446/gcc%2Fgimple-range-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-path.h?ref=410e8742638dadc8f84db681ca7bd9c031d41446", "patch": "@@ -53,6 +53,7 @@ class path_range_query : public range_query\n   // Methods to precompute ranges for the given path.\n   bool range_defined_in_block (irange &, tree name, basic_block bb);\n   void precompute_ranges_in_block (basic_block bb);\n+  void adjust_for_non_null_uses (basic_block bb);\n   void ssa_range_in_phi (irange &r, gphi *phi);\n \n   // Path navigation.\n@@ -80,6 +81,7 @@ class path_range_query : public range_query\n \n   const bitmap_head *m_imports;\n   gimple_ranger &m_ranger;\n+  non_null_ref m_non_null;\n };\n \n #endif // GCC_TREE_SSA_THREADSOLVER_H"}]}