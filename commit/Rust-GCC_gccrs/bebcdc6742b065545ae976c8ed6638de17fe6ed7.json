{"sha": "bebcdc6742b065545ae976c8ed6638de17fe6ed7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViY2RjNjc0MmIwNjU1NDVhZTk3NmM4ZWQ2NjM4ZGUxN2ZlNmVkNw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-11-18T14:55:44Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-11-18T14:55:44Z"}, "message": "re PR sanitizer/63866 (ICE in C++ printer with -fdump-ipa)\n\n\tPR sanitizer/63866\n\t* asan.c (asan_global_struct): Create a TYPE_DECL for \"__asan_global\",\n\tput it into TYPE_NAME and TYPE_STUB_DECL.\n\t* ubsan.c (ubsan_type_descriptor_type): New variable.\n\tFunction renamed to ...\n\t(ubsan_get_type_descriptor_type): ... this.  Cache\n\treturn value in ubsan_type_descriptor_type variable.\n\tCreate a TYPE_DECL for \"__ubsan_type_descriptor\", put it into\n\tTYPE_NAME and TYPE_STUB_DECL.\n\t(ubsan_get_source_location_type): Create a TYPE_DECL for\n\t\"__ubsan_source_location\", put it into TYPE_NAME and TYPE_STUB_DECL.\n\t(ubsan_type_descriptor, ubsan_create_data): Call\n\tubsan_get_type_descriptor_type instead of ubsan_type_descriptor_type.\n\tCreate a TYPE_DECL for name, put it into TYPE_NAME and TYPE_STUB_DECL.\n\n\t* c-c++-common/ubsan/pr63866.c: New test.\n\nFrom-SVN: r217718", "tree": {"sha": "199a22a70f5272caac9621c1da38551db5437a84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/199a22a70f5272caac9621c1da38551db5437a84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bebcdc6742b065545ae976c8ed6638de17fe6ed7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebcdc6742b065545ae976c8ed6638de17fe6ed7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bebcdc6742b065545ae976c8ed6638de17fe6ed7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebcdc6742b065545ae976c8ed6638de17fe6ed7/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "594bdd53d8f24ad406af1aa192d98d23bc841ae9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/594bdd53d8f24ad406af1aa192d98d23bc841ae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/594bdd53d8f24ad406af1aa192d98d23bc841ae9"}], "stats": {"total": 78, "additions": 70, "deletions": 8}, "files": [{"sha": "1e1d355b589aa5db39f946e89e4bb809c261eee8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebcdc6742b065545ae976c8ed6638de17fe6ed7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebcdc6742b065545ae976c8ed6638de17fe6ed7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bebcdc6742b065545ae976c8ed6638de17fe6ed7", "patch": "@@ -1,3 +1,20 @@\n+2014-11-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/63866\n+\t* asan.c (asan_global_struct): Create a TYPE_DECL for \"__asan_global\",\n+\tput it into TYPE_NAME and TYPE_STUB_DECL.\n+\t* ubsan.c (ubsan_type_descriptor_type): New variable.\n+\tFunction renamed to ...\n+\t(ubsan_get_type_descriptor_type): ... this.  Cache\n+\treturn value in ubsan_type_descriptor_type variable.\n+\tCreate a TYPE_DECL for \"__ubsan_type_descriptor\", put it into\n+\tTYPE_NAME and TYPE_STUB_DECL.\n+\t(ubsan_get_source_location_type): Create a TYPE_DECL for\n+\t\"__ubsan_source_location\", put it into TYPE_NAME and TYPE_STUB_DECL.\n+\t(ubsan_type_descriptor, ubsan_create_data): Call\n+\tubsan_get_type_descriptor_type instead of ubsan_type_descriptor_type.\n+\tCreate a TYPE_DECL for name, put it into TYPE_NAME and TYPE_STUB_DECL.\n+\n 2014-11-18  Felix Yang  <felix.yang@huawei.com>\n \n \t* config/aarch64/aarch64.c (doloop_end): New pattern."}, {"sha": "d50e0980018691d14ca6440b023752a8f473d022", "filename": "gcc/asan.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebcdc6742b065545ae976c8ed6638de17fe6ed7/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebcdc6742b065545ae976c8ed6638de17fe6ed7/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=bebcdc6742b065545ae976c8ed6638de17fe6ed7", "patch": "@@ -2168,8 +2168,13 @@ asan_global_struct (void)\n       if (i)\n \tDECL_CHAIN (fields[i - 1]) = fields[i];\n     }\n+  tree type_decl = build_decl (input_location, TYPE_DECL,\n+\t\t\t       get_identifier (\"__asan_global\"), ret);\n+  DECL_IGNORED_P (type_decl) = 1;\n+  DECL_ARTIFICIAL (type_decl) = 1;\n   TYPE_FIELDS (ret) = fields[0];\n-  TYPE_NAME (ret) = get_identifier (\"__asan_global\");\n+  TYPE_NAME (ret) = type_decl;\n+  TYPE_STUB_DECL (ret) = type_decl;\n   layout_type (ret);\n   return ret;\n }"}, {"sha": "ca77cc0035d023dc69be17254731164f8835bfbb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebcdc6742b065545ae976c8ed6638de17fe6ed7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebcdc6742b065545ae976c8ed6638de17fe6ed7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bebcdc6742b065545ae976c8ed6638de17fe6ed7", "patch": "@@ -1,3 +1,8 @@\n+2014-11-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/63866\n+\t* c-c++-common/ubsan/pr63866.c: New test.\n+\n 2014-11-18  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/63914"}, {"sha": "e70daa72e18e960282292155dba078b5b0506a6e", "filename": "gcc/testsuite/c-c++-common/ubsan/pr63866.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebcdc6742b065545ae976c8ed6638de17fe6ed7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63866.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebcdc6742b065545ae976c8ed6638de17fe6ed7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63866.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63866.c?ref=bebcdc6742b065545ae976c8ed6638de17fe6ed7", "patch": "@@ -0,0 +1,11 @@\n+/* PR sanitizer/63866 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=undefined -fdump-ipa-cgraph\" } */\n+\n+int\n+foo (int x, int y)\n+{\n+  return x + y;\n+}\n+\n+/* { dg-final { cleanup-ipa-dump \"cgraph\" } } */"}, {"sha": "98a6c2face7ad05d281056e0c46f2b1b0d579fa3", "filename": "gcc/ubsan.c", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebcdc6742b065545ae976c8ed6638de17fe6ed7/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebcdc6742b065545ae976c8ed6638de17fe6ed7/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=bebcdc6742b065545ae976c8ed6638de17fe6ed7", "patch": "@@ -179,6 +179,9 @@ ubsan_encode_value (tree t, bool in_expand_p)\n     }\n }\n \n+/* Cached ubsan_get_type_descriptor_type () return value.  */\n+static GTY(()) tree ubsan_type_descriptor_type;\n+\n /* Build\n    struct __ubsan_type_descriptor\n    {\n@@ -189,11 +192,15 @@ ubsan_encode_value (tree t, bool in_expand_p)\n    type.  */\n \n static tree\n-ubsan_type_descriptor_type (void)\n+ubsan_get_type_descriptor_type (void)\n {\n   static const char *field_names[3]\n     = { \"__typekind\", \"__typeinfo\", \"__typename\" };\n   tree fields[3], ret;\n+\n+  if (ubsan_type_descriptor_type)\n+    return ubsan_type_descriptor_type;\n+\n   tree itype = build_range_type (sizetype, size_zero_node, NULL_TREE);\n   tree flex_arr_type = build_array_type (char_type_node, itype);\n \n@@ -208,9 +215,16 @@ ubsan_type_descriptor_type (void)\n       if (i)\n \tDECL_CHAIN (fields[i - 1]) = fields[i];\n     }\n+  tree type_decl = build_decl (input_location, TYPE_DECL,\n+\t\t\t       get_identifier (\"__ubsan_type_descriptor\"),\n+\t\t\t       ret);\n+  DECL_IGNORED_P (type_decl) = 1;\n+  DECL_ARTIFICIAL (type_decl) = 1;\n   TYPE_FIELDS (ret) = fields[0];\n-  TYPE_NAME (ret) = get_identifier (\"__ubsan_type_descriptor\");\n+  TYPE_NAME (ret) = type_decl;\n+  TYPE_STUB_DECL (ret) = type_decl;\n   layout_type (ret);\n+  ubsan_type_descriptor_type = ret;\n   return ret;\n }\n \n@@ -249,8 +263,14 @@ ubsan_get_source_location_type (void)\n       if (i)\n \tDECL_CHAIN (fields[i - 1]) = fields[i];\n     }\n+  tree type_decl = build_decl (input_location, TYPE_DECL,\n+\t\t\t       get_identifier (\"__ubsan_source_location\"),\n+\t\t\t       ret);\n+  DECL_IGNORED_P (type_decl) = 1;\n+  DECL_ARTIFICIAL (type_decl) = 1;\n   TYPE_FIELDS (ret) = fields[0];\n-  TYPE_NAME (ret) = get_identifier (\"__ubsan_source_location\");\n+  TYPE_NAME (ret) = type_decl;\n+  TYPE_STUB_DECL (ret) = type_decl;\n   layout_type (ret);\n   ubsan_source_location_type = ret;\n   return ret;\n@@ -333,7 +353,7 @@ ubsan_type_descriptor (tree type, enum ubsan_print_style pstyle)\n   if (decl != NULL_TREE && varpool_node::get (decl))\n     return build_fold_addr_expr (decl);\n \n-  tree dtype = ubsan_type_descriptor_type ();\n+  tree dtype = ubsan_get_type_descriptor_type ();\n   tree type2 = type;\n   const char *tname = NULL;\n   char *pretty_name;\n@@ -498,8 +518,7 @@ ubsan_create_data (const char *name, int loccnt, const location_t *ploc, ...)\n   int j;\n \n   /* Firstly, create a pointer to type descriptor type.  */\n-  tree td_type = ubsan_type_descriptor_type ();\n-  TYPE_READONLY (td_type) = 1;\n+  tree td_type = ubsan_get_type_descriptor_type ();\n   td_type = build_pointer_type (td_type);\n \n   /* Create the structure type.  */\n@@ -543,8 +562,13 @@ ubsan_create_data (const char *name, int loccnt, const location_t *ploc, ...)\n     }\n   va_end (args);\n \n+  tree type_decl = build_decl (input_location, TYPE_DECL,\n+\t\t\t       get_identifier (name), ret);\n+  DECL_IGNORED_P (type_decl) = 1;\n+  DECL_ARTIFICIAL (type_decl) = 1;\n   TYPE_FIELDS (ret) = fields[0];\n-  TYPE_NAME (ret) = get_identifier (name);\n+  TYPE_NAME (ret) = type_decl;\n+  TYPE_STUB_DECL (ret) = type_decl;\n   layout_type (ret);\n \n   /* Now, fill in the type.  */"}]}