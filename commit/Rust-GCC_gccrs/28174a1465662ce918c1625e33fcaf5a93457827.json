{"sha": "28174a1465662ce918c1625e33fcaf5a93457827", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgxNzRhMTQ2NTY2MmNlOTE4YzE2MjVlMzNmY2FmNWE5MzQ1NzgyNw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1997-06-06T23:18:36Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1997-06-06T23:18:36Z"}, "message": "libgcc2.c (__eh_ffetmnpc): Add support for machines that cannot access globals after throw's epilogue when...\n\n\t* libgcc2.c (__eh_ffetmnpc): Add support for machines that cannot\n\taccess globals after throw's epilogue when -fno-sjlj-exceptions is\n\tused.\n\t* rs6000.c (DONT_ACCESS_GBLS_AFTER_EPILOGUE): Likewise.\n\t* mips.h (DONT_ACCESS_GBLS_AFTER_EPILOGUE): Likewise.\n\t(INITIAL_ELIMINATION_OFFSET): Fix RETURN_ADDRESS_POINTER_REGNUM\n\tfor 64 bit words, with 32 bit pointers and variable endianness.\nFixes throwing across shared library lines (useful at times on mips and rs6000)\n\nFrom-SVN: r14168", "tree": {"sha": "e1ac1e967ef794bea51ee8cff6e71c8cf9964543", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1ac1e967ef794bea51ee8cff6e71c8cf9964543"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28174a1465662ce918c1625e33fcaf5a93457827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28174a1465662ce918c1625e33fcaf5a93457827", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28174a1465662ce918c1625e33fcaf5a93457827", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28174a1465662ce918c1625e33fcaf5a93457827/comments", "author": null, "committer": null, "parents": [{"sha": "7ec189f2ec5af35774c5bda252dd09fc61698f71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec189f2ec5af35774c5bda252dd09fc61698f71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec189f2ec5af35774c5bda252dd09fc61698f71"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "f1e985a2ab578932d13b065c32e2e1ca2dc5444b", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28174a1465662ce918c1625e33fcaf5a93457827/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28174a1465662ce918c1625e33fcaf5a93457827/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=28174a1465662ce918c1625e33fcaf5a93457827", "patch": "@@ -1966,7 +1966,9 @@ extern struct mips_frame_info current_frame_info;\n   else if ((FROM) == RETURN_ADDRESS_POINTER_REGNUM\t\t\t \\\n \t   && ((TO) == FRAME_POINTER_REGNUM\t\t\t\t \\\n \t       || (TO) == STACK_POINTER_REGNUM))\t\t\t \\\n-    (OFFSET) = current_frame_info.gp_sp_offset;\t\t\t\t \\\n+    (OFFSET) = current_frame_info.gp_sp_offset\t\t\t\t \\\n+\t       + ((UNITS_PER_WORD - (POINTER_SIZE / BITS_PER_UNIT))\t \\\n+\t\t  * (BYTES_BIG_ENDIAN != 0));\t\t\t\t \\\n   else\t\t\t\t\t\t\t\t\t \\\n     abort ();\t\t\t\t\t\t\t\t \\\n }\n@@ -4047,3 +4049,8 @@ while (0)\n #define NO_BUILTIN_PTRDIFF_TYPE\n #define PTRDIFF_TYPE (TARGET_LONG64 ? \"long int\" : \"int\")\n #endif\n+\n+/* See mips_expand_prologue's use of loadgp for when this should be\n+   true.  */\n+\n+#define DONT_ACCESS_GBLS_AFTER_EPILOGUE (TARGET_ABICALLS && mips_abi != ABI_32)"}, {"sha": "f469061a0d8bf9f58d261560167cd4aca5fe0f2a", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28174a1465662ce918c1625e33fcaf5a93457827/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28174a1465662ce918c1625e33fcaf5a93457827/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=28174a1465662ce918c1625e33fcaf5a93457827", "patch": "@@ -3126,3 +3126,7 @@ extern int rs6000_valid_type_attribute_p ();\n extern void rs6000_set_default_type_attributes ();\n extern struct rtx_def *rs6000_dll_import_ref ();\n extern struct rtx_def *rs6000_longcall_ref ();\n+\n+/* See nonlocal_goto_receiver for when this must be set.  */\n+\n+#define DONT_ACCESS_GBLS_AFTER_EPILOGUE (TARGET_TOC && TARGET_MINIMAL_TOC)"}, {"sha": "c32a7e03fa26d1ea45a784e10e0cb695555598a4", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28174a1465662ce918c1625e33fcaf5a93457827/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28174a1465662ce918c1625e33fcaf5a93457827/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=28174a1465662ce918c1625e33fcaf5a93457827", "patch": "@@ -3436,6 +3436,16 @@ __throw ()\n \n void *__eh_pc;\n \n+/* See expand_builtin_throw for details.  */\n+\n+void **__eh_ffetmnpc () {\n+  static void *buf[2] = {\n+    &__find_first_exception_table_match,\n+    &__eh_pc\n+  };\n+  return buf;\n+}\n+\n void\n __empty ()\n {"}]}