{"sha": "f8db4f200620853be35af713bb91563713b9a9ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhkYjRmMjAwNjIwODUzYmUzNWFmNzEzYmI5MTU2MzcxM2I5YTllZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-02-06T07:06:15Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-02-06T07:06:15Z"}, "message": "acinclude.m4 (GLIBCPP_CHECK_MATH_DECL_1): New macro.\n\n\n2001-02-05   Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acinclude.m4 (GLIBCPP_CHECK_MATH_DECL_1): New macro.\n\t(GLIBCPP_CHECK_MATH_DECL_2): New macro.\n\t(GLIBCPP_CHECK_MATH_DECL_3): New macro.\n\t(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1): Use it, check for _* too.\n\t(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2): Same.\n\t(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3): Same.\n\t(GLIBCPP_CHECK_MATH_SUPPORT): Remove explicit checks for _* versions.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\nFrom-SVN: r39482", "tree": {"sha": "632565a064638dd6ea33e7fac7233e5a2a013d52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/632565a064638dd6ea33e7fac7233e5a2a013d52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8db4f200620853be35af713bb91563713b9a9ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8db4f200620853be35af713bb91563713b9a9ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8db4f200620853be35af713bb91563713b9a9ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8db4f200620853be35af713bb91563713b9a9ee/comments", "author": null, "committer": null, "parents": [{"sha": "bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf6adbe2c68151d1ba284a27b00ab1568d2d1be0"}], "stats": {"total": 3370, "additions": 1756, "deletions": 1614}, "files": [{"sha": "d9c1a8dfbeffe01d7babd3b6d437e9c0c69c0e13", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8db4f200620853be35af713bb91563713b9a9ee/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8db4f200620853be35af713bb91563713b9a9ee/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f8db4f200620853be35af713bb91563713b9a9ee", "patch": "@@ -1,3 +1,15 @@\n+2001-02-05   Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCPP_CHECK_MATH_DECL_1): New macro.\n+\t(GLIBCPP_CHECK_MATH_DECL_2): New macro.\n+\t(GLIBCPP_CHECK_MATH_DECL_3): New macro.\n+\t(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1): Use it, check for _* too.\n+\t(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2): Same.\n+\t(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3): Same.\n+\t(GLIBCPP_CHECK_MATH_SUPPORT): Remove explicit checks for _* versions.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t\n 2001-02-05  Mark Mitchell  <mark@codesourcery.com>\n \n \t* include/bits/locale_facets.tcc: Remove `static' keyword on\n@@ -8,7 +20,7 @@\n \t* src/locale-inst.cc: Explicitly instantiate more functions.\n \t* src/msic-inst.cc: Likewise.\n \t* src/string-inst.cc: Likewise.\n-\t\n+\n 2001-02-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO): New"}, {"sha": "d5fcb80ecd19782e22dd377bb6fb69ad9bc1e47f", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 73, "deletions": 62, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8db4f200620853be35af713bb91563713b9a9ee/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8db4f200620853be35af713bb91563713b9a9ee/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=f8db4f200620853be35af713bb91563713b9a9ee", "patch": "@@ -315,17 +315,11 @@ AC_DEFUN(GLIBCPP_CHECK_LINKER_FEATURES, [\n \n dnl\n dnl Check to see if the (math function) argument passed is\n-dnl 1) declared when using the c++ compiler\n-dnl 2) has \"C\" linkage\n-dnl\n-dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n-dnl\n-dnl argument 1 is name of function to check\n-dnl\n+dnl declared when using the c++ compiler\n dnl ASSUMES argument is a math function with ONE parameter\n dnl\n-dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1\n-AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, [\n+dnl GLIBCPP_CHECK_MATH_DECL_1\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_1, [\n   AC_MSG_CHECKING([for $1 declaration])\n   if test x${glibcpp_cv_func_$1_use+set} != xset; then\n     AC_CACHE_VAL(glibcpp_cv_func_$1_use, [\n@@ -338,11 +332,34 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, [\n     ])\n   fi\n   AC_MSG_RESULT($glibcpp_cv_func_$1_use)\n+])\n+\n+dnl\n+dnl Check to see if the (math function) argument passed is\n+dnl 1) declared when using the c++ compiler\n+dnl 2) has \"C\" linkage\n+dnl 3) if not, see if 1) and 2) for argument prepended with '_'\n+dnl\n+dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n+dnl\n+dnl argument 1 is name of function to check\n+dnl\n+dnl ASSUMES argument is a math function with ONE parameter\n+dnl\n+dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, [\n+  GLIBCPP_CHECK_MATH_DECL_1($1)\n   if test x$glibcpp_cv_func_$1_use = x\"yes\"; then\n     AC_CHECK_FUNCS($1)    \n+  else\n+    GLIBCPP_CHECK_MATH_DECL_1(_$1)\n+    if test x$glibcpp_cv_func__$1_use = x\"yes\"; then\n+      AC_CHECK_FUNCS(_$1)    \n+    fi\t\n   fi\n ])\n \n+\n dnl\n dnl Like GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, but does a bunch of\n dnl of functions at once.  It's an all-or-nothing check -- either \n@@ -366,17 +383,11 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1, [\n \n dnl\n dnl Check to see if the (math function) argument passed is\n-dnl 1) declared when using the c++ compiler\n-dnl 2) has \"C\" linkage\n-dnl\n-dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n-dnl\n-dnl argument 1 is name of function to check\n-dnl\n-dnl ASSUMES argument is a math function with TWO parameters\n+dnl declared when using the c++ compiler\n+dnl ASSUMES argument is a math function with ONE parameter\n dnl\n-dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2\n-AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2, [\n+dnl GLIBCPP_CHECK_MATH_DECL_2\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_2, [\n   AC_MSG_CHECKING([for $1 declaration])\n   if test x${glibcpp_cv_func_$1_use+set} != xset; then\n     AC_CACHE_VAL(glibcpp_cv_func_$1_use, [\n@@ -389,12 +400,8 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2, [\n     ])\n   fi\n   AC_MSG_RESULT($glibcpp_cv_func_$1_use)\n-  if test x$glibcpp_cv_func_$1_use = x\"yes\"; then\n-    AC_CHECK_FUNCS($1)    \n-  fi\n ])\n \n-\n dnl\n dnl Check to see if the (math function) argument passed is\n dnl 1) declared when using the c++ compiler\n@@ -404,10 +411,29 @@ dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n dnl\n dnl argument 1 is name of function to check\n dnl\n-dnl ASSUMES argument is a math function with THREE parameters\n+dnl ASSUMES argument is a math function with TWO parameters\n dnl\n-dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3\n-AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3, [\n+dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2, [\n+  GLIBCPP_CHECK_MATH_DECL_2($1)\n+  if test x$glibcpp_cv_func_$1_use = x\"yes\"; then\n+    AC_CHECK_FUNCS($1)    \n+  else\n+    GLIBCPP_CHECK_MATH_DECL_2(_$1)\n+    if test x$glibcpp_cv_func__$1_use = x\"yes\"; then\n+      AC_CHECK_FUNCS(_$1)    \n+    fi\t\n+  fi\n+])\n+\n+\n+dnl\n+dnl Check to see if the (math function) argument passed is\n+dnl declared when using the c++ compiler\n+dnl ASSUMES argument is a math function with ONE parameter\n+dnl\n+dnl GLIBCPP_CHECK_MATH_DECL_3\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_3, [\n   AC_MSG_CHECKING([for $1 declaration])\n   if test x${glibcpp_cv_func_$1_use+set} != xset; then\n     AC_CACHE_VAL(glibcpp_cv_func_$1_use, [\n@@ -420,8 +446,29 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3, [\n     ])\n   fi\n   AC_MSG_RESULT($glibcpp_cv_func_$1_use)\n+])\n+\n+dnl\n+dnl Check to see if the (math function) argument passed is\n+dnl 1) declared when using the c++ compiler\n+dnl 2) has \"C\" linkage\n+dnl\n+dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n+dnl\n+dnl argument 1 is name of function to check\n+dnl\n+dnl ASSUMES argument is a math function with THREE parameters\n+dnl\n+dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3, [\n+  GLIBCPP_CHECK_MATH_DECL_3($1)\n   if test x$glibcpp_cv_func_$1_use = x\"yes\"; then\n     AC_CHECK_FUNCS($1)    \n+  else\n+    GLIBCPP_CHECK_MATH_DECL_3(_$1)\n+    if test x$glibcpp_cv_func__$1_use = x\"yes\"; then\n+      AC_CHECK_FUNCS(_$1)    \n+    fi\t\n   fi\n ])\n \n@@ -674,13 +721,6 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n   dnl keep this sync'd with the one above. And if you add any new symbol,\n   dnl please add the corresponding block in the @BOTTOM@ section of acconfig.h.\n   dnl Check to see if certain C math functions exist.\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isinf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isnan)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_finite)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_copysign)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3(_sincos)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_fpclass)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_qfpclass)\n \n   dnl Check to see if basic C math functions have float versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_float trig,\n@@ -691,19 +731,6 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_float round,\n                                           _float_round,\n                                           _ceilf _floorf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isnanf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isinff)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_fabsf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_fmodf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_frexpf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_ldexpf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_logf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_log10f)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_modff)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_powf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_sqrtf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3(_sincosf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_finitef)\n \n   dnl Check to see if basic C math functions have long double versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_long double trig,\n@@ -714,22 +741,6 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_long double round,\n                                           _long_double_round,\n                                           _ceill _floorl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isnanl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isinfl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_copysignl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_atan2l)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_expl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_fabsl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_fmodl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_frexpl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_ldexpl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_logl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_log10l)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_modfl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_powl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_sqrtl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3(_sincosl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_finitel)\n \n   LIBS=\"$ac_save_LIBS\"\n   CXXFLAGS=\"$ac_save_CXXFLAGS\""}, {"sha": "5191170d82a272e4ea29d28a6a1f5a779902c6fb", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 73, "deletions": 62, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8db4f200620853be35af713bb91563713b9a9ee/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8db4f200620853be35af713bb91563713b9a9ee/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=f8db4f200620853be35af713bb91563713b9a9ee", "patch": "@@ -327,17 +327,11 @@ AC_DEFUN(GLIBCPP_CHECK_LINKER_FEATURES, [\n \n dnl\n dnl Check to see if the (math function) argument passed is\n-dnl 1) declared when using the c++ compiler\n-dnl 2) has \"C\" linkage\n-dnl\n-dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n-dnl\n-dnl argument 1 is name of function to check\n-dnl\n+dnl declared when using the c++ compiler\n dnl ASSUMES argument is a math function with ONE parameter\n dnl\n-dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1\n-AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, [\n+dnl GLIBCPP_CHECK_MATH_DECL_1\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_1, [\n   AC_MSG_CHECKING([for $1 declaration])\n   if test x${glibcpp_cv_func_$1_use+set} != xset; then\n     AC_CACHE_VAL(glibcpp_cv_func_$1_use, [\n@@ -350,11 +344,34 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, [\n     ])\n   fi\n   AC_MSG_RESULT($glibcpp_cv_func_$1_use)\n+])\n+\n+dnl\n+dnl Check to see if the (math function) argument passed is\n+dnl 1) declared when using the c++ compiler\n+dnl 2) has \"C\" linkage\n+dnl 3) if not, see if 1) and 2) for argument prepended with '_'\n+dnl\n+dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n+dnl\n+dnl argument 1 is name of function to check\n+dnl\n+dnl ASSUMES argument is a math function with ONE parameter\n+dnl\n+dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, [\n+  GLIBCPP_CHECK_MATH_DECL_1($1)\n   if test x$glibcpp_cv_func_$1_use = x\"yes\"; then\n     AC_CHECK_FUNCS($1)    \n+  else\n+    GLIBCPP_CHECK_MATH_DECL_1(_$1)\n+    if test x$glibcpp_cv_func__$1_use = x\"yes\"; then\n+      AC_CHECK_FUNCS(_$1)    \n+    fi\t\n   fi\n ])\n \n+\n dnl\n dnl Like GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1, but does a bunch of\n dnl of functions at once.  It's an all-or-nothing check -- either \n@@ -378,17 +395,11 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1, [\n \n dnl\n dnl Check to see if the (math function) argument passed is\n-dnl 1) declared when using the c++ compiler\n-dnl 2) has \"C\" linkage\n-dnl\n-dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n-dnl\n-dnl argument 1 is name of function to check\n-dnl\n-dnl ASSUMES argument is a math function with TWO parameters\n+dnl declared when using the c++ compiler\n+dnl ASSUMES argument is a math function with ONE parameter\n dnl\n-dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2\n-AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2, [\n+dnl GLIBCPP_CHECK_MATH_DECL_2\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_2, [\n   AC_MSG_CHECKING([for $1 declaration])\n   if test x${glibcpp_cv_func_$1_use+set} != xset; then\n     AC_CACHE_VAL(glibcpp_cv_func_$1_use, [\n@@ -401,12 +412,8 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2, [\n     ])\n   fi\n   AC_MSG_RESULT($glibcpp_cv_func_$1_use)\n-  if test x$glibcpp_cv_func_$1_use = x\"yes\"; then\n-    AC_CHECK_FUNCS($1)    \n-  fi\n ])\n \n-\n dnl\n dnl Check to see if the (math function) argument passed is\n dnl 1) declared when using the c++ compiler\n@@ -416,10 +423,29 @@ dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n dnl\n dnl argument 1 is name of function to check\n dnl\n-dnl ASSUMES argument is a math function with THREE parameters\n+dnl ASSUMES argument is a math function with TWO parameters\n dnl\n-dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3\n-AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3, [\n+dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2, [\n+  GLIBCPP_CHECK_MATH_DECL_2($1)\n+  if test x$glibcpp_cv_func_$1_use = x\"yes\"; then\n+    AC_CHECK_FUNCS($1)    \n+  else\n+    GLIBCPP_CHECK_MATH_DECL_2(_$1)\n+    if test x$glibcpp_cv_func__$1_use = x\"yes\"; then\n+      AC_CHECK_FUNCS(_$1)    \n+    fi\t\n+  fi\n+])\n+\n+\n+dnl\n+dnl Check to see if the (math function) argument passed is\n+dnl declared when using the c++ compiler\n+dnl ASSUMES argument is a math function with ONE parameter\n+dnl\n+dnl GLIBCPP_CHECK_MATH_DECL_3\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_3, [\n   AC_MSG_CHECKING([for $1 declaration])\n   if test x${glibcpp_cv_func_$1_use+set} != xset; then\n     AC_CACHE_VAL(glibcpp_cv_func_$1_use, [\n@@ -432,8 +458,29 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3, [\n     ])\n   fi\n   AC_MSG_RESULT($glibcpp_cv_func_$1_use)\n+])\n+\n+dnl\n+dnl Check to see if the (math function) argument passed is\n+dnl 1) declared when using the c++ compiler\n+dnl 2) has \"C\" linkage\n+dnl\n+dnl Define HAVE_CARGF etc if \"cargf\" is declared and links\n+dnl\n+dnl argument 1 is name of function to check\n+dnl\n+dnl ASSUMES argument is a math function with THREE parameters\n+dnl\n+dnl GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3\n+AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3, [\n+  GLIBCPP_CHECK_MATH_DECL_3($1)\n   if test x$glibcpp_cv_func_$1_use = x\"yes\"; then\n     AC_CHECK_FUNCS($1)    \n+  else\n+    GLIBCPP_CHECK_MATH_DECL_3(_$1)\n+    if test x$glibcpp_cv_func__$1_use = x\"yes\"; then\n+      AC_CHECK_FUNCS(_$1)    \n+    fi\t\n   fi\n ])\n \n@@ -686,13 +733,6 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n   dnl keep this sync'd with the one above. And if you add any new symbol,\n   dnl please add the corresponding block in the @BOTTOM@ section of acconfig.h.\n   dnl Check to see if certain C math functions exist.\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isinf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isnan)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_finite)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_copysign)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3(_sincos)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_fpclass)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_qfpclass)\n \n   dnl Check to see if basic C math functions have float versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_float trig,\n@@ -703,19 +743,6 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_float round,\n                                           _float_round,\n                                           _ceilf _floorf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isnanf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isinff)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_fabsf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_fmodf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_frexpf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_ldexpf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_logf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_log10f)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_modff)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_powf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_sqrtf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3(_sincosf)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_finitef)\n \n   dnl Check to see if basic C math functions have long double versions.\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_long double trig,\n@@ -726,22 +753,6 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n   GLIBCPP_CHECK_MATH_DECLS_AND_LINKAGES_1(_long double round,\n                                           _long_double_round,\n                                           _ceill _floorl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isnanl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_isinfl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_copysignl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_atan2l)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_expl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_fabsl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_fmodl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_frexpl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_ldexpl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_logl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_log10l)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_modfl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_2(_powl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_sqrtl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3(_sincosl)\n-  GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(_finitel)\n \n   LIBS=\"$ac_save_LIBS\"\n   CXXFLAGS=\"$ac_save_CXXFLAGS\""}, {"sha": "27deeb28a2c82c2d5363d37a54449fcf2e68b9e8", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1597, "deletions": 1489, "changes": 3086, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8db4f200620853be35af713bb91563713b9a9ee/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8db4f200620853be35af713bb91563713b9a9ee/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=f8db4f200620853be35af713bb91563713b9a9ee"}]}