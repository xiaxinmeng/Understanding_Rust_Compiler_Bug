{"sha": "ac2b2479e8981d12f760ff6e13e9aa38dc70b36d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMyYjI0NzllODk4MWQxMmY3NjBmZjZlMTNlOWFhMzhkYzcwYjM2ZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-01-20T22:24:43Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-01-20T22:24:43Z"}, "message": "acinclude.m4 (GLIBCXX_CHECK_LINKER_FEATURES): Verbose ld version reporting.\n\n2006-01-20  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acinclude.m4 (GLIBCXX_CHECK_LINKER_FEATURES): Verbose ld version\n\treporting.  Disable --gc-sections for old binutils, by version.\n\t* configure: Regenerate.\n\nFrom-SVN: r110045", "tree": {"sha": "e76454b46eb9bf3e7d15b5da6aa02a6d23f3650a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e76454b46eb9bf3e7d15b5da6aa02a6d23f3650a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac2b2479e8981d12f760ff6e13e9aa38dc70b36d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac2b2479e8981d12f760ff6e13e9aa38dc70b36d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac2b2479e8981d12f760ff6e13e9aa38dc70b36d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac2b2479e8981d12f760ff6e13e9aa38dc70b36d/comments", "author": null, "committer": null, "parents": [{"sha": "72e9337dd670f8cd839a2c2f19c6907a67d8e68c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72e9337dd670f8cd839a2c2f19c6907a67d8e68c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72e9337dd670f8cd839a2c2f19c6907a67d8e68c"}], "stats": {"total": 147, "additions": 125, "deletions": 22}, "files": [{"sha": "4dd507c405530f5e1a9e6d2fb1a1265ed3111c40", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac2b2479e8981d12f760ff6e13e9aa38dc70b36d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac2b2479e8981d12f760ff6e13e9aa38dc70b36d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ac2b2479e8981d12f760ff6e13e9aa38dc70b36d", "patch": "@@ -1,3 +1,9 @@\n+2006-01-20  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCXX_CHECK_LINKER_FEATURES): Verbose ld version\n+\treporting.  Disable --gc-sections for old binutils, by version.\n+\t* configure: Regenerate.\n+\n 2006-01-20  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR libstdc++/25524"}, {"sha": "aa68ac7abf2d8cf0f603021e1423ef3784e7a069", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac2b2479e8981d12f760ff6e13e9aa38dc70b36d/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac2b2479e8981d12f760ff6e13e9aa38dc70b36d/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=ac2b2479e8981d12f760ff6e13e9aa38dc70b36d", "patch": "@@ -222,16 +222,23 @@ AC_DEFUN([GLIBCXX_CHECK_LINKER_FEATURES], [\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  AC_MSG_CHECKING([for ld version])\n   changequote(,)\n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n   changequote([,])\n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) [$]3=0; print ([$]1*100+[$]2)*100+[$]3 }'`\n+  AC_MSG_RESULT($glibcxx_gnu_ld_version)\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" && \n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++."}, {"sha": "6131b9b67e9e2fc8c0d1e8c44845b6c02fd04ac5", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 110, "deletions": 20, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac2b2479e8981d12f760ff6e13e9aa38dc70b36d/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac2b2479e8981d12f760ff6e13e9aa38dc70b36d/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=ac2b2479e8981d12f760ff6e13e9aa38dc70b36d", "patch": "@@ -8200,16 +8200,25 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  echo \"$as_me:$LINENO: checking for ld version\" >&5\n+echo $ECHO_N \"checking for ld version... $ECHO_C\" >&6\n \n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n \n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+  echo \"$as_me:$LINENO: result: $glibcxx_gnu_ld_version\" >&5\n+echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" &&\n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n@@ -53058,16 +53067,25 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  echo \"$as_me:$LINENO: checking for ld version\" >&5\n+echo $ECHO_N \"checking for ld version... $ECHO_C\" >&6\n \n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n \n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+  echo \"$as_me:$LINENO: result: $glibcxx_gnu_ld_version\" >&5\n+echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" &&\n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n@@ -74409,16 +74427,25 @@ done\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  echo \"$as_me:$LINENO: checking for ld version\" >&5\n+echo $ECHO_N \"checking for ld version... $ECHO_C\" >&6\n \n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n \n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+  echo \"$as_me:$LINENO: result: $glibcxx_gnu_ld_version\" >&5\n+echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" &&\n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n@@ -75923,16 +75950,25 @@ done\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  echo \"$as_me:$LINENO: checking for ld version\" >&5\n+echo $ECHO_N \"checking for ld version... $ECHO_C\" >&6\n \n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n \n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+  echo \"$as_me:$LINENO: result: $glibcxx_gnu_ld_version\" >&5\n+echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" &&\n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n@@ -77313,16 +77349,25 @@ done\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  echo \"$as_me:$LINENO: checking for ld version\" >&5\n+echo $ECHO_N \"checking for ld version... $ECHO_C\" >&6\n \n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n \n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+  echo \"$as_me:$LINENO: result: $glibcxx_gnu_ld_version\" >&5\n+echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" &&\n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n@@ -79490,16 +79535,25 @@ done\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  echo \"$as_me:$LINENO: checking for ld version\" >&5\n+echo $ECHO_N \"checking for ld version... $ECHO_C\" >&6\n \n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n \n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+  echo \"$as_me:$LINENO: result: $glibcxx_gnu_ld_version\" >&5\n+echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" &&\n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n@@ -80833,16 +80887,25 @@ done\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  echo \"$as_me:$LINENO: checking for ld version\" >&5\n+echo $ECHO_N \"checking for ld version... $ECHO_C\" >&6\n \n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n \n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+  echo \"$as_me:$LINENO: result: $glibcxx_gnu_ld_version\" >&5\n+echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" &&\n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n@@ -82225,16 +82288,25 @@ done\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  echo \"$as_me:$LINENO: checking for ld version\" >&5\n+echo $ECHO_N \"checking for ld version... $ECHO_C\" >&6\n \n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n \n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+  echo \"$as_me:$LINENO: result: $glibcxx_gnu_ld_version\" >&5\n+echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" &&\n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n@@ -84009,16 +84081,25 @@ echo \"${ECHO_T}$glibcxx_cv_WRITEV\" >&6\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  echo \"$as_me:$LINENO: checking for ld version\" >&5\n+echo $ECHO_N \"checking for ld version... $ECHO_C\" >&6\n \n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n \n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+  echo \"$as_me:$LINENO: result: $glibcxx_gnu_ld_version\" >&5\n+echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" &&\n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++.\n@@ -86114,16 +86195,25 @@ done\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  echo \"$as_me:$LINENO: checking for ld version\" >&5\n+echo $ECHO_N \"checking for ld version... $ECHO_C\" >&6\n \n   ldver=`$LD --version 2>/dev/null | head -1 | \\\n          sed -e 's/GNU ld version \\([0-9.][0-9.]*\\).*/\\1/'`\n \n   glibcxx_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n+  echo \"$as_me:$LINENO: result: $glibcxx_gnu_ld_version\" >&5\n+echo \"${ECHO_T}$glibcxx_gnu_ld_version\" >&6\n \n   # Set --gc-sections.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    # GNU ld it is!  Joy and bunny rabbits!\n+  glibcxx_gcsections_min_ld=21602\n+  if test x\"$with_gnu_ld\" = x\"yes\" &&\n+\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n+\n+    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n+    # NB: This flag only works reliably after 2.16.1. Configure tests\n+    # for this are difficult, so hard wire a value that should work.\n \n     # All these tests are for C++, but run with the \"C\" compiler driver.\n     # Need to do this so that g++ won't try to link in libstdc++/libsupc++."}]}