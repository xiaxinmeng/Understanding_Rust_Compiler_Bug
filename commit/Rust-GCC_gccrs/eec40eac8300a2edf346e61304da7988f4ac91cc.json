{"sha": "eec40eac8300a2edf346e61304da7988f4ac91cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVjNDBlYWM4MzAwYTJlZGYzNDZlNjEzMDRkYTc5ODhmNGFjOTFjYw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-06-13T13:50:13Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-06-13T13:50:13Z"}, "message": "re PR go/61498 (Many 64-bit Go tests SEGV in scanblock)\n\n\tPR go/61498\nruntime: Always set gcnext_sp to pointer-aligned address.\n\nThe gcnext_sp field is only used on systems that do not use\nsplit stacks.  It marks the bottom of the stack for the\ngarbage collector.  This change makes sure that the stack\nbottom is always aligned to a pointer value.\n\nPreviously the garbage collector would align all the addresses\nthat it scanned, but it now expects them to be aligned before\nscanning.\n\nFrom-SVN: r211639", "tree": {"sha": "00437b121f34212f4321eee7b66a49399fe12d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00437b121f34212f4321eee7b66a49399fe12d37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eec40eac8300a2edf346e61304da7988f4ac91cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eec40eac8300a2edf346e61304da7988f4ac91cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eec40eac8300a2edf346e61304da7988f4ac91cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eec40eac8300a2edf346e61304da7988f4ac91cc/comments", "author": null, "committer": null, "parents": [{"sha": "f6c438246c239c86847cb38bedcb7d85711b1863", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c438246c239c86847cb38bedcb7d85711b1863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6c438246c239c86847cb38bedcb7d85711b1863"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "d21308447171ad0b96eed2fe406a3ad7d6dff44f", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eec40eac8300a2edf346e61304da7988f4ac91cc/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eec40eac8300a2edf346e61304da7988f4ac91cc/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=eec40eac8300a2edf346e61304da7988f4ac91cc", "patch": "@@ -255,9 +255,6 @@ runtime_mcall(void (*pfn)(G*))\n {\n \tM *mp;\n \tG *gp;\n-#ifndef USING_SPLIT_STACK\n-\tint i;\n-#endif\n \n \t// Ensure that all registers are on the stack for the garbage\n \t// collector.\n@@ -273,7 +270,7 @@ runtime_mcall(void (*pfn)(G*))\n #ifdef USING_SPLIT_STACK\n \t\t__splitstack_getcontext(&g->stack_context[0]);\n #else\n-\t\tgp->gcnext_sp = &i;\n+\t\tgp->gcnext_sp = &pfn;\n #endif\n \t\tgp->fromgogo = false;\n \t\tgetcontext(&gp->context);\n@@ -1933,7 +1930,7 @@ doentersyscall()\n \t\t\t\t       &g->gcinitial_sp);\n #else\n \t{\n-\t\tuint32 v;\n+\t\tvoid *v;\n \n \t\tg->gcnext_sp = (byte *) &v;\n \t}"}]}