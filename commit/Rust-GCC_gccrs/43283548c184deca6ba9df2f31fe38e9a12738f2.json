{"sha": "43283548c184deca6ba9df2f31fe38e9a12738f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMyODM1NDhjMTg0ZGVjYTZiYTlkZjJmMzFmZTM4ZTlhMTI3MzhmMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-07-03T07:15:09Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-07-03T07:15:09Z"}, "message": "configure.ac (HAVE_AS_IX86_REP_LOCK_PREFIX): Also require that the assembler accept 'rep bsf ...'...\n\n\t* configure.ac (HAVE_AS_IX86_REP_LOCK_PREFIX): Also require that the\n\tassembler accept 'rep bsf ...', 'rep bsr ...', 'rep ret' and 'rep nop'.\n\t* configure: Regenerated.\n\t* config/i386/i386.md (simple_return_internal_long): Use %;\n\t(ctz<mode>2): Likewise.\n\t(*pause): Likewise.\n\nFrom-SVN: r189193", "tree": {"sha": "9747d59bd4ff9cd93a158762866771757f66d962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9747d59bd4ff9cd93a158762866771757f66d962"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43283548c184deca6ba9df2f31fe38e9a12738f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43283548c184deca6ba9df2f31fe38e9a12738f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43283548c184deca6ba9df2f31fe38e9a12738f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43283548c184deca6ba9df2f31fe38e9a12738f2/comments", "author": null, "committer": null, "parents": [{"sha": "05437ab595f4f34cfefb1032fd947a91ef1d1ea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05437ab595f4f34cfefb1032fd947a91ef1d1ea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05437ab595f4f34cfefb1032fd947a91ef1d1ea9"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "392dbce60ef8f2acc42e660f168f34a5813ce727", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43283548c184deca6ba9df2f31fe38e9a12738f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43283548c184deca6ba9df2f31fe38e9a12738f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43283548c184deca6ba9df2f31fe38e9a12738f2", "patch": "@@ -1,3 +1,12 @@\n+2012-07-03  Roland McGrath  <mcgrathr@google.com>\n+\n+\t* configure.ac (HAVE_AS_IX86_REP_LOCK_PREFIX): Also require that the\n+\tassembler accept 'rep bsf ...', 'rep bsr ...', 'rep ret' and 'rep nop'.\n+\t* configure: Regenerated.\n+\t* config/i386/i386.md (simple_return_internal_long): Use %;\n+\t(ctz<mode>2): Likewise.\n+\t(*pause): Likewise.\n+\n 2012-07-02  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/51244\n@@ -30,8 +39,7 @@\n \t(gen_inbound_check): Do not release post-dominator info here.\n \t(process_switch): Reorder code.  Expand as bit tests if it\n \tlooks like a win.\n-\t(do_switchconv): Release post-dominator info here if something\n-\tchanged.\n+\t(do_switchconv): Release post-dominator info here if something changed.\n \t(struct gimple_opt_pass): Verify more.\n \t* tree.h (expand_switch_using_bit_tests_p): Remove prototype.\n \n@@ -42,9 +50,9 @@\n \tdynamic type change check.\n \n 2012-07-02  Richard Guenther  <rguenther@suse.de>\n-\tMichael Matz  <matz@suse.de>\n-\tTobias Grosser <tobias@grosser.es>\n-\tSebastian Pop <sebpop@gmail.com>\n+\t    Michael Matz  <matz@suse.de>\n+\t    Tobias Grosser <tobias@grosser.es>\n+\t    Sebastian Pop <sebpop@gmail.com>\n \n \t* Makefile.in: Remove PPL flags in favor of ISL ones.\n \t(BACKENDLIBS): Remove PPL libs.\n@@ -55,8 +63,7 @@\n \t(graphite-poly.o): Likewise.\n \t* configure.ac: Declare ISL vars instead of PPL ones.\n \t* configure: Regenerated.\n-\t* doc/install.texi: Replace PPL requirement documentation\n-\twith ISL one.\n+\t* doc/install.texi: Replace PPL requirement documentation with ISL one.\n \t* graphite-blocking.c: Remove PPL code, add ISL equivalent.\n \t* graphite-clast-to-gimple.c: Likewise.\n \t* graphite-dependences.c: Likewise.\n@@ -76,7 +83,7 @@\n \n \tMerge from graphite branch\n \t2011-07-21  Tobias Grosser  <tobias@grosser.es>\n-    \n+\n \t* Makefile.in (graphite-clast-to-gimple.o, graphite-cloog-util.o):\n \tRemove graphite-cloog-util.h.\n \t* graphite-clast-to-gimple.c (gcc_type_for_iv_of_clast_loop,\n@@ -122,7 +129,7 @@\n \t* graphite-clast-to-gimple.h (scop_to_clast): Remove.\n \n \t2012-01-11  Tobias Grosser <tobias@grosser.es>\n-    \n+\n \t* graphite-clast-to-gimple.c (clast_name_to_index,\n \tclast_name_to_lb_ub, clast_name_to_gcc): Change types.\n \t(clast_to_gcc_expression): Add clast_expr_name as a new\n@@ -172,7 +179,7 @@\n \t(crc32_byte): ... here.  Use it.\n \t(crc32_unsigned): New.\n \n-2012-06-29   Cary Coutant  <ccoutant@google.com>\n+2012-06-29  Cary Coutant  <ccoutant@google.com>\n \n \t* dwarf2out.c (add_pubname_string): Don't check for want_pubnames.\n \t(gen_subprogram_die): Don't add pubname if want_pubnames is false.\n@@ -199,8 +206,7 @@\n 2012-06-29  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-vect-generic.c (expand_vector_divmod): For even/odd\n-\twidening multiply, put even always as first argument to\n-\tVEC_PERM_EXPR.\n+\twidening multiply, put even always as first argument to VEC_PERM_EXPR.\n \n 2012-06-29  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "bdee324797c98fa251e4248897dfc01fbf484c8d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43283548c184deca6ba9df2f31fe38e9a12738f2/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43283548c184deca6ba9df2f31fe38e9a12738f2/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=43283548c184deca6ba9df2f31fe38e9a12738f2", "patch": "@@ -11904,7 +11904,7 @@\n   [(simple_return)\n    (unspec [(const_int 0)] UNSPEC_REP)]\n   \"reload_completed\"\n-  \"rep\\;ret\"\n+  \"rep%; ret\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"atom_unit\" \"jeu\")\n    (set_attr \"length_immediate\" \"0\")\n@@ -12236,8 +12236,8 @@\n   else if (optimize_function_for_size_p (cfun))\n     ;\n   else if (TARGET_GENERIC)\n-    /* tzcnt expands to rep;bsf and we can use it even if !TARGET_BMI.  */\n-    return \"rep; bsf{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n+    /* tzcnt expands to 'rep bsf' and we can use it even if !TARGET_BMI.  */\n+    return \"rep%; bsf{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n \n   return \"bsf{<imodesuffix>}\\t{%1, %0|%0, %1}\";\n }\n@@ -18131,7 +18131,7 @@\n   [(set (match_operand:BLK 0)\n \t(unspec:BLK [(match_dup 0)] UNSPEC_PAUSE))]\n   \"\"\n-  \"rep; nop\"\n+  \"rep%; nop\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"memory\" \"unknown\")])\n "}, {"sha": "af08a49b3495b9e5987e6375680a4e9b3ec51fb2", "filename": "gcc/configure", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43283548c184deca6ba9df2f31fe38e9a12738f2/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43283548c184deca6ba9df2f31fe38e9a12738f2/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=43283548c184deca6ba9df2f31fe38e9a12738f2", "patch": "@@ -24790,6 +24790,10 @@ else\n   gcc_cv_as_ix86_rep_lock_prefix=no\n   if test x$gcc_cv_as != x; then\n     $as_echo 'rep movsl\n+\t rep ret\n+\t rep nop\n+\t rep bsf %ecx, %eax\n+\t rep bsr %ecx, %eax\n \t lock addl %edi, (%eax,%esi)\n \t lock orl $0, (%esp)' > conftest.s\n     if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'"}, {"sha": "a95adecc74260adcbdbb5a2f8e980157d39c0546", "filename": "gcc/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43283548c184deca6ba9df2f31fe38e9a12738f2/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43283548c184deca6ba9df2f31fe38e9a12738f2/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=43283548c184deca6ba9df2f31fe38e9a12738f2", "patch": "@@ -3641,6 +3641,10 @@ foo:\tnop\n     gcc_GAS_CHECK_FEATURE([rep and lock prefix],\n         gcc_cv_as_ix86_rep_lock_prefix,,,\n \t[rep movsl\n+\t rep ret\n+\t rep nop\n+\t rep bsf %ecx, %eax\n+\t rep bsr %ecx, %eax\n \t lock addl %edi, (%eax,%esi)\n \t lock orl $0, (%esp)],,\n         [AC_DEFINE(HAVE_AS_IX86_REP_LOCK_PREFIX, 1,"}]}