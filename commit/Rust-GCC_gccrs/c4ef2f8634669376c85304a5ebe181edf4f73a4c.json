{"sha": "c4ef2f8634669376c85304a5ebe181edf4f73a4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRlZjJmODYzNDY2OTM3NmM4NTMwNGE1ZWJlMTgxZWRmNGY3M2E0Yw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-04-13T12:42:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-04-13T12:42:41Z"}, "message": "re PR tree-optimization/65204 (Aligned address optimization not detected)\n\n2015-04-13  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/65204\n\t* tree-ssa-ccp.c (evaluate_stmt): Always evaluate address\n\ttakens for bit-CCP.\n\n\t* gcc.dg/tree-ssa/ssa-ccp-35.c: New testcase.\n\nFrom-SVN: r222049", "tree": {"sha": "f454e18a763b6ae39cd70081499f44af78a8165f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f454e18a763b6ae39cd70081499f44af78a8165f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4ef2f8634669376c85304a5ebe181edf4f73a4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ef2f8634669376c85304a5ebe181edf4f73a4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4ef2f8634669376c85304a5ebe181edf4f73a4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ef2f8634669376c85304a5ebe181edf4f73a4c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54a3a620046c47bfda0deb529cf3c4284561ce8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54a3a620046c47bfda0deb529cf3c4284561ce8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54a3a620046c47bfda0deb529cf3c4284561ce8a"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "641bdffcc8b2dee75f939ac1e9fc05caab2a2ac4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ef2f8634669376c85304a5ebe181edf4f73a4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ef2f8634669376c85304a5ebe181edf4f73a4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4ef2f8634669376c85304a5ebe181edf4f73a4c", "patch": "@@ -1,3 +1,9 @@\n+2015-04-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65204\n+\t* tree-ssa-ccp.c (evaluate_stmt): Always evaluate address\n+\ttakens for bit-CCP.\n+\n 2015-04-13  Richard Biener  <rguenther@suse.de>\n \n \tPR target/65660"}, {"sha": "377f5d989fc4d0a0205cdf75d332276647d5ec00", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ef2f8634669376c85304a5ebe181edf4f73a4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ef2f8634669376c85304a5ebe181edf4f73a4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c4ef2f8634669376c85304a5ebe181edf4f73a4c", "patch": "@@ -1,3 +1,8 @@\n+2015-04-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65204\n+\t* gcc.dg/tree-ssa/ssa-ccp-35.c: New testcase.\n+\n 2015-04-13  Terry Guo  <terry.guo@arm.com>\n \n \tPR target/65710"}, {"sha": "7cf3a4c844d85ddea53c2b6485fb52cbc3681b07", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-35.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ef2f8634669376c85304a5ebe181edf4f73a4c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ef2f8634669376c85304a5ebe181edf4f73a4c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-35.c?ref=c4ef2f8634669376c85304a5ebe181edf4f73a4c", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-ccp1\" } */\n+\n+typedef char char16[16] __attribute__ ((aligned (16)));\n+char16 c16[4] __attribute__ ((aligned (4)));\n+\n+int f5 (int i)\n+{\n+  __SIZE_TYPE__ s = (__SIZE_TYPE__)&c16[i];\n+  /* 0 */\n+  return 3 & s;\n+}\n+\n+/* { dg-final { scan-tree-dump \"return 0;\" \"ccp1\" } } */\n+/* { dg-final { cleanup-tree-dump \"ccp1\" } } */"}, {"sha": "9fbea3a5ca389b2e16c4ea54b2bf228b8e76b359", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ef2f8634669376c85304a5ebe181edf4f73a4c/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ef2f8634669376c85304a5ebe181edf4f73a4c/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=c4ef2f8634669376c85304a5ebe181edf4f73a4c", "patch": "@@ -1748,7 +1748,9 @@ evaluate_stmt (gimple stmt)\n \n   /* Resort to simplification for bitwise tracking.  */\n   if (flag_tree_bit_ccp\n-      && (likelyvalue == CONSTANT || is_gimple_call (stmt))\n+      && (likelyvalue == CONSTANT || is_gimple_call (stmt)\n+\t  || (gimple_assign_single_p (stmt)\n+\t      && gimple_assign_rhs_code (stmt) == ADDR_EXPR))\n       && !is_constant)\n     {\n       enum gimple_code code = gimple_code (stmt);"}]}