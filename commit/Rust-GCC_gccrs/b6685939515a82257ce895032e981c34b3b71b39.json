{"sha": "b6685939515a82257ce895032e981c34b3b71b39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY2ODU5Mzk1MTVhODIyNTdjZTg5NTAzMmU5ODFjMzRiM2I3MWIzOQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-05-10T13:39:20Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-05-10T13:39:20Z"}, "message": "arm.c (arm_promote_prototypes): Use TARGET_AAPCS_BASED.\n\n\t* config/arm/arm.c (arm_promote_prototypes): Use TARGET_AAPCS_BASED.\n\t* config/arm/arm.h (TARGET_AAPCS_BASED): Define.\n\t(TARGET_DOUBLEWORD_ALIGN): Use it.\n\t(WCHAR_TYPE): Define.\n\t(WCHAR_SIZE_TYPE): Define.\n\t(SIZE_TYPE): Define.\n\nFrom-SVN: r81665", "tree": {"sha": "6324d072bf9cb37663e26763a4da7bd38a4a485b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6324d072bf9cb37663e26763a4da7bd38a4a485b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6685939515a82257ce895032e981c34b3b71b39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6685939515a82257ce895032e981c34b3b71b39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6685939515a82257ce895032e981c34b3b71b39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6685939515a82257ce895032e981c34b3b71b39/comments", "author": null, "committer": null, "parents": [{"sha": "10f4ab75ce164f6d963a92a93f93243ebdb60f00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10f4ab75ce164f6d963a92a93f93243ebdb60f00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10f4ab75ce164f6d963a92a93f93243ebdb60f00"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "27177b22adcc4335d33fad83fea83df58ca11df7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6685939515a82257ce895032e981c34b3b71b39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6685939515a82257ce895032e981c34b3b71b39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6685939515a82257ce895032e981c34b3b71b39", "patch": "@@ -1,3 +1,12 @@\n+2004-05-10  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_promote_prototypes): Use TARGET_AAPCS_BASED.\n+\t* config/arm/arm.h (TARGET_AAPCS_BASED): Define.\n+\t(TARGET_DOUBLEWORD_ALIGN): Use it.\n+\t(WCHAR_TYPE): Define.\n+\t(WCHAR_SIZE_TYPE): Define.\n+\t(SIZE_TYPE): Define.\n+\n 2004-05-10  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000.c (function_arg_boundary): Align for ABI_V4"}, {"sha": "371ffe8e1c04bb36dee79bfee8fbab96b66f4548", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6685939515a82257ce895032e981c34b3b71b39/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6685939515a82257ce895032e981c34b3b71b39/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=b6685939515a82257ce895032e981c34b3b71b39", "patch": "@@ -14550,6 +14550,6 @@ arm_no_early_mul_dep (rtx producer, rtx consumer)\n static bool\n arm_promote_prototypes (tree t ATTRIBUTE_UNUSED)\n {\n-    return arm_abi == ARM_ABI_APCS || arm_abi == ARM_ABI_ATPCS;\n+    return !TARGET_AAPCS_BASED;\n }\n "}, {"sha": "724a0d15646de8c94fa2e21ab6e326cb57af7760", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6685939515a82257ce895032e981c34b3b71b39/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6685939515a82257ce895032e981c34b3b71b39/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=b6685939515a82257ce895032e981c34b3b71b39", "patch": "@@ -307,6 +307,8 @@ extern GTY(()) rtx aof_pic_label;\n \t\t\t\t         : (target_flags & THUMB_FLAG_BACKTRACE))\n #define TARGET_CIRRUS_FIX_INVALID_INSNS\t(target_flags & CIRRUS_FIX_INVALID_INSNS)\n #define TARGET_LDRD\t\t\t(arm_arch5e && ARM_DOUBLEWORD_ALIGN)\n+#define TARGET_AAPCS_BASED \\\n+    (arm_abi != ARM_ABI_APCS && arm_abi != ARM_ABI_ATPCS)\n \n /* SUBTARGET_SWITCHES is used to add flags on a per-config basis.  */\n #ifndef SUBTARGET_SWITCHES\n@@ -655,8 +657,8 @@ extern int arm_is_6_or_7;\n #define UNITS_PER_WORD\t4\n \n /* True if natural alignment is used for doubleword types.  */\n-#define ARM_DOUBLEWORD_ALIGN \\\n-    (arm_abi == ARM_ABI_AAPCS || arm_abi == ARM_ABI_IWMMXT)\n+#define ARM_DOUBLEWORD_ALIGN\tTARGET_AAPCS_BASED\n+\n #define DOUBLEWORD_ALIGNMENT 64\n \n #define PARM_BOUNDARY  \t32\n@@ -716,6 +718,17 @@ extern const char * structure_size_string;\n /* Nonzero if move instructions will actually fail to work\n    when given unaligned data.  */\n #define STRICT_ALIGNMENT 1\n+\n+/* wchar_t is unsigned under the AAPCS.  */\n+#ifndef WCHAR_TYPE\n+#define WCHAR_TYPE (TARGET_AAPCS_BASED ? \"unsigned int\" : \"int\")\n+\n+#define WCHAR_TYPE_SIZE BITS_PER_WORD\n+#endif\n+\n+#ifndef SIZE_TYPE\n+#define SIZE_TYPE (TARGET_AAPCS_BASED ? \"unsigned int\" : \"long unsigned int\")\n+#endif\n \f\n /* Standard register usage.  */\n "}]}