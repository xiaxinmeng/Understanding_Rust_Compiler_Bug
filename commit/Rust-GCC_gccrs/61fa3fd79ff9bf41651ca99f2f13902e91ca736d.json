{"sha": "61fa3fd79ff9bf41651ca99f2f13902e91ca736d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFmYTNmZDc5ZmY5YmY0MTY1MWNhOTlmMmYxMzkwMmU5MWNhNzM2ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-01-31T12:52:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-05T12:17:38Z"}, "message": "[Ada] AI12-0237 Getting the representation of an enumeration value\n\n2020-06-05  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* sem_attr.ads (Attribute_Impl_Def): Remove Enum_Rep/Val.\n\t* sem_attr.adb (Attribute_20): New, move Enum_Rep/Val here.\n\t(Analyze_Attribute): Take Attribute_20 into account.", "tree": {"sha": "6b18995fd9ffca10f04276a9d71ba7089f390d73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b18995fd9ffca10f04276a9d71ba7089f390d73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61fa3fd79ff9bf41651ca99f2f13902e91ca736d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61fa3fd79ff9bf41651ca99f2f13902e91ca736d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61fa3fd79ff9bf41651ca99f2f13902e91ca736d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61fa3fd79ff9bf41651ca99f2f13902e91ca736d/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79d09a491c9ca17e2159d73e0e9855d64d6fa7cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d09a491c9ca17e2159d73e0e9855d64d6fa7cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d09a491c9ca17e2159d73e0e9855d64d6fa7cf"}], "stats": {"total": 45, "additions": 13, "deletions": 32}, "files": [{"sha": "f4e38a0daedc0005725af52b4f824f05e48cbbca", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fa3fd79ff9bf41651ca99f2f13902e91ca736d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fa3fd79ff9bf41651ca99f2f13902e91ca736d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=61fa3fd79ff9bf41651ca99f2f13902e91ca736d", "patch": "@@ -164,6 +164,15 @@ package body Sem_Attr is\n       Attribute_Max_Alignment_For_Allocation => True,\n       others                                 => False);\n \n+   --  The following array is the list of attributes defined in the Ada 2020\n+   --  RM which are not defined in Ada 2012. These are recognized in Ada\n+   --  95/2005/2012 modes, but are considered to be implementation defined.\n+\n+   Attribute_20 : constant Attribute_Class_Array := Attribute_Class_Array'(\n+      Attribute_Enum_Rep                     |\n+      Attribute_Enum_Val                     => True,\n+      others                                 => False);\n+\n    --  The following array contains all attributes that imply a modification\n    --  of their prefixes or result in an access value. Such prefixes can be\n    --  considered as lvalues.\n@@ -2867,12 +2876,14 @@ package body Sem_Attr is\n       end if;\n \n       --  Deal with Ada 2005 attributes that are implementation attributes\n-      --  because they appear in a version of Ada before Ada 2005, and\n-      --  similarly for Ada 2012 attributes appearing in an earlier version.\n+      --  because they appear in a version of Ada before Ada 2005, ditto for\n+      --  Ada 2012 and Ada 2020 attributes appearing in an earlier version.\n \n       if (Attribute_05 (Attr_Id) and then Ada_Version < Ada_2005)\n             or else\n          (Attribute_12 (Attr_Id) and then Ada_Version < Ada_2012)\n+            or else\n+         (Attribute_20 (Attr_Id) and then Ada_Version < Ada_2020)\n       then\n          Check_Restriction (No_Implementation_Attributes, N);\n       end if;"}, {"sha": "16b902e1c72973a784bab54c0c7dd33f23343ff9", "filename": "gcc/ada/sem_attr.ads", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fa3fd79ff9bf41651ca99f2f13902e91ca736d/gcc%2Fada%2Fsem_attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fa3fd79ff9bf41651ca99f2f13902e91ca736d/gcc%2Fada%2Fsem_attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.ads?ref=61fa3fd79ff9bf41651ca99f2f13902e91ca736d", "patch": "@@ -212,36 +212,6 @@ package Sem_Attr is\n       --  value indicating whether or not the body of the designated library\n       --  unit has been elaborated yet.\n \n-      --------------\n-      -- Enum_Rep --\n-      --------------\n-\n-      Attribute_Enum_Rep => True,\n-      --  For every enumeration subtype S, S'Enum_Rep denotes a function\n-      --  with the following specification:\n-      --\n-      --    function S'Enum_Rep (Arg : S'Base) return universal_integer;\n-      --\n-      --  The function returns the representation value for the given\n-      --  enumeration value. This will be equal to the 'Pos value in the\n-      --  absence of an enumeration representation clause. This is a static\n-      --  attribute (i.e. the result is static if the argument is static).\n-\n-      --------------\n-      -- Enum_Val --\n-      --------------\n-\n-      Attribute_Enum_Val => True,\n-      --  For every enumeration subtype S, S'Enum_Val denotes a function with\n-      --  the following specification:\n-      --\n-      --    function S'Enum_Val (Arg : universal_integer) return S'Base;\n-      --\n-      --  This function performs the inverse transformation to Enum_Rep. Given\n-      --  a representation value for the type, it returns the corresponding\n-      --  enumeration value. Constraint_Error is raised if no value of the\n-      --  enumeration type corresponds to the given integer value.\n-\n       -----------------------\n       -- Finalization_Size --\n       -----------------------"}]}