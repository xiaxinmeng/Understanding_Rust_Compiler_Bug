{"sha": "50106e8f8d39cd8bead63c0c17608964fef2b27a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAxMDZlOGY4ZDM5Y2Q4YmVhZDYzYzBjMTc2MDg5NjRmZWYyYjI3YQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2004-02-26T15:22:20Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2004-02-26T15:22:20Z"}, "message": "re PR libgcj/14296 (3.4 regression: Method.Invoke)\n\n2004-02-25  Andrew Haley  <aph@redhat.com>\n\n\tPR java/14296:\n\t* java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA): Make sure\n\twe have a valid method index.\n\nFrom-SVN: r78504", "tree": {"sha": "a750ef65d0762321fc6644f00d05cc0d8d2e6749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a750ef65d0762321fc6644f00d05cc0d8d2e6749"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50106e8f8d39cd8bead63c0c17608964fef2b27a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50106e8f8d39cd8bead63c0c17608964fef2b27a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50106e8f8d39cd8bead63c0c17608964fef2b27a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50106e8f8d39cd8bead63c0c17608964fef2b27a/comments", "author": null, "committer": null, "parents": [{"sha": "d0c8fd2aa3e5c2fee7cb233f9b8f9fc9d8251a88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0c8fd2aa3e5c2fee7cb233f9b8f9fc9d8251a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0c8fd2aa3e5c2fee7cb233f9b8f9fc9d8251a88"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "736103b63dd5987527407bd73dd1b6f6497b7fd4", "filename": "libjava/java/lang/reflect/natMethod.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50106e8f8d39cd8bead63c0c17608964fef2b27a/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50106e8f8d39cd8bead63c0c17608964fef2b27a/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc?ref=50106e8f8d39cd8bead63c0c17608964fef2b27a", "patch": "@@ -466,7 +466,16 @@ _Jv_CallAnyMethodA (jobject obj,\n \n   void *ncode;\n \n-  if (is_virtual_call && ! Modifier::isFinal (meth->accflags))\n+  // FIXME: If a vtable index is -1 at this point it is invalid, so we\n+  // have to use the ncode.  \n+  //\n+  // This can happen because methods in final classes don't have\n+  // vtable entries, but _Jv_isVirtualMethod() doesn't know that.  We\n+  // could solve this problem by allocating a vtable index for methods\n+  // in final classes.\n+  if (is_virtual_call \n+      && ! Modifier::isFinal (meth->accflags)\n+      && (_Jv_ushort)-1 != meth->index)\n     {\n       _Jv_VTable *vtable = *(_Jv_VTable **) obj;\n       ncode = vtable->get_method (meth->index);"}]}