{"sha": "f914cec23622b17cc1972c1deea6bcfbf843b0fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkxNGNlYzIzNjIyYjE3Y2MxOTcyYzFkZWVhNmJjZmJmODQzYjBmZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2004-12-10T17:28:32Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-12-10T17:28:32Z"}, "message": "tree-ssa-alias.c (setup_pointers_and_addressables): Remove redundant test of v_ann->mem_tag_kind.\n\n\n\t* tree-ssa-alias.c (setup_pointers_and_addressables): Remove\n\tredundant test of v_ann->mem_tag_kind.\n\n\t* tree-ssa-operands.c (get_indirect_ref_operands): Remove\n\tredundant conditional clearing opf_kill_def.\n\nFrom-SVN: r92000", "tree": {"sha": "7caf9feb5b5409d057923a729633e46d84e20602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7caf9feb5b5409d057923a729633e46d84e20602"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f914cec23622b17cc1972c1deea6bcfbf843b0fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f914cec23622b17cc1972c1deea6bcfbf843b0fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f914cec23622b17cc1972c1deea6bcfbf843b0fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f914cec23622b17cc1972c1deea6bcfbf843b0fe/comments", "author": null, "committer": null, "parents": [{"sha": "036ff63feed89f4e50c1a10ae0761a1764a566e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/036ff63feed89f4e50c1a10ae0761a1764a566e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/036ff63feed89f4e50c1a10ae0761a1764a566e1"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "0d4929c6d9ce7b94eac6c6a55ce5c35af58ec928", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f914cec23622b17cc1972c1deea6bcfbf843b0fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f914cec23622b17cc1972c1deea6bcfbf843b0fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f914cec23622b17cc1972c1deea6bcfbf843b0fe", "patch": "@@ -1,3 +1,11 @@\n+2004-12-02  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa-alias.c (setup_pointers_and_addressables): Remove\n+\tredundant test of v_ann->mem_tag_kind.\n+\n+\t* tree-ssa-operands.c (get_indirect_ref_operands): Remove\n+\tredundant conditional clearing opf_kill_def.\n+\n 2004-12-10  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/frv/frv-modes.def: Fix comment typos."}, {"sha": "ecdd7f44645a9beed4f66a9e644d1228b79b6243", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f914cec23622b17cc1972c1deea6bcfbf843b0fe/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f914cec23622b17cc1972c1deea6bcfbf843b0fe/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=f914cec23622b17cc1972c1deea6bcfbf843b0fe", "patch": "@@ -1402,7 +1402,6 @@ setup_pointers_and_addressables (struct alias_info *ai)\n       if (TREE_ADDRESSABLE (var))\n \t{\n \t  if (!bitmap_bit_p (ai->addresses_needed, v_ann->uid)\n-\t      && v_ann->mem_tag_kind == NOT_A_TAG\n \t      && TREE_CODE (var) != RESULT_DECL\n \t      && !is_global_var (var))\n \t    {"}, {"sha": "fc43a196e524089b87bc71270dd2ce1e54165316", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f914cec23622b17cc1972c1deea6bcfbf843b0fe/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f914cec23622b17cc1972c1deea6bcfbf843b0fe/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=f914cec23622b17cc1972c1deea6bcfbf843b0fe", "patch": "@@ -1374,18 +1374,6 @@ get_indirect_ref_operands (tree stmt, tree expr, int flags)\n   /* Stores into INDIRECT_REF operands are never killing definitions.  */\n   flags &= ~opf_kill_def;\n \n-  if (REF_ORIGINAL (expr))\n-    {\n-      enum tree_code ocode = TREE_CODE (REF_ORIGINAL (expr));\n-\n-      /* If we originally accessed part of a structure, we do it still.  */\n-      if (ocode == ARRAY_REF\n-\t  || ocode == COMPONENT_REF\n-\t  || ocode == REALPART_EXPR\n-\t  || ocode == IMAGPART_EXPR)\n-\tflags &= ~opf_kill_def;\n-    }\n-\n   if (SSA_VAR_P (ptr))\n     {\n       struct ptr_info_def *pi = NULL;"}]}