{"sha": "5f7262e693943229dfd8262e04b122a89b9cdd5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY3MjYyZTY5Mzk0MzIyOWRmZDgyNjJlMDRiMTIyYTg5YjljZGQ1Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-05-05T21:11:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-05-05T21:11:13Z"}, "message": "re PR c++/9537 ([New parser] problem handling const return types)\n\n        PR c++/9537\n        * call.c (conditional_conversion): Build an RVALUE_CONV if\n        we're just changing the cv-quals.\n        (build_conditional_expr): Don't call convert to change\n        cv-quals.\n\nFrom-SVN: r66502", "tree": {"sha": "a0db13f0c60ffac95372c203de89c666923ee4f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0db13f0c60ffac95372c203de89c666923ee4f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f7262e693943229dfd8262e04b122a89b9cdd5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f7262e693943229dfd8262e04b122a89b9cdd5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f7262e693943229dfd8262e04b122a89b9cdd5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f7262e693943229dfd8262e04b122a89b9cdd5f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9938b5d971c49e642b6050e427ba4e5816cec7d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9938b5d971c49e642b6050e427ba4e5816cec7d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9938b5d971c49e642b6050e427ba4e5816cec7d9"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "40a4de12532cc621da65a739ac7dab4c4cd46adb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7262e693943229dfd8262e04b122a89b9cdd5f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7262e693943229dfd8262e04b122a89b9cdd5f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5f7262e693943229dfd8262e04b122a89b9cdd5f", "patch": "@@ -1,3 +1,11 @@\n+2003-05-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/9537\n+\t* call.c (conditional_conversion): Build an RVALUE_CONV if\n+\twe're just changing the cv-quals.\n+\t(build_conditional_expr): Don't call convert to change\n+\tcv-quals.\n+\n 2003-05-05  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/10496"}, {"sha": "44683ff5b83401eb929dd9bd2aa70d567654aaab", "filename": "gcc/cp/call.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7262e693943229dfd8262e04b122a89b9cdd5f/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7262e693943229dfd8262e04b122a89b9cdd5f/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=5f7262e693943229dfd8262e04b122a89b9cdd5f", "patch": "@@ -3187,7 +3187,10 @@ conditional_conversion (tree e1, tree e2)\n      same cv-qualification as, or a greater cv-qualification than, the\n      cv-qualification of T1.  If the conversion is applied, E1 is\n      changed to an rvalue of type T2 that still refers to the original\n-     source class object (or the appropriate subobject thereof).  */\n+     source class object (or the appropriate subobject thereof).\n+\n+     FIXME we can't express an rvalue that refers to the original object;\n+     we have to create a new one.  */\n   if (CLASS_TYPE_P (t1) && CLASS_TYPE_P (t2)\n       && same_or_base_type_p (TYPE_MAIN_VARIANT (t2), \n \t\t\t      TYPE_MAIN_VARIANT (t1)))\n@@ -3197,7 +3200,12 @@ conditional_conversion (tree e1, tree e2)\n \t  conv = build1 (IDENTITY_CONV, t1, e1);\n \t  if (!same_type_p (TYPE_MAIN_VARIANT (t1), \n \t\t\t    TYPE_MAIN_VARIANT (t2)))\n-\t    conv = build_conv (BASE_CONV, t2, conv);\n+\t    {\n+\t      conv = build_conv (BASE_CONV, t2, conv);\n+\t      NEED_TEMPORARY_P (conv) = 1;\n+\t    }\n+\t  else\n+\t    conv = build_conv (RVALUE_CONV, t2, conv);\n \t  return conv;\n \t}\n       else\n@@ -3337,19 +3345,16 @@ build_conditional_expr (tree arg1, tree arg2, tree arg3)\n \t{\n \t  arg2 = convert_like (conv2, arg2);\n \t  arg2 = convert_from_reference (arg2);\n-\t  /* That may not quite have done the trick.  If the two types\n-\t     are cv-qualified variants of one another, we will have\n-\t     just used an IDENTITY_CONV.  */\n \t  if (!same_type_p (TREE_TYPE (arg2), arg3_type))\n-\t    arg2 = convert (arg3_type, arg2);\n+\t    abort ();\n \t  arg2_type = TREE_TYPE (arg2);\n \t}\n       else if (conv3 && !ICS_BAD_FLAG (conv3))\n \t{\n \t  arg3 = convert_like (conv3, arg3);\n \t  arg3 = convert_from_reference (arg3);\n \t  if (!same_type_p (TREE_TYPE (arg3), arg2_type))\n-\t    arg3 = convert (arg2_type, arg3);\n+\t    abort ();\n \t  arg3_type = TREE_TYPE (arg3);\n \t}\n     }"}, {"sha": "da052d453fb18ad9e8a18adcae1a9d7ed20ad529", "filename": "gcc/testsuite/g++.dg/conversion/cond3.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7262e693943229dfd8262e04b122a89b9cdd5f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fcond3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7262e693943229dfd8262e04b122a89b9cdd5f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fcond3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fcond3.C?ref=5f7262e693943229dfd8262e04b122a89b9cdd5f", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/9537\n+\n+class String\n+{\n+public:\n+    String();\n+    String( char *str );\n+    operator char *();\n+};\n+\n+const String operator+( String s1, String )\n+{\n+  return s1;\n+}\n+\n+String valGlue(const String before)\n+{\n+    String ret;\n+    return false ? ret : before + before;\n+}"}]}