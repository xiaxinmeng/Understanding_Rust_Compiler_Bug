{"sha": "150bbaff610db5c17dd906a39a2f0453d78ab6b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUwYmJhZmY2MTBkYjVjMTdkZDkwNmEzOWEyZjA0NTNkNzhhYjZiOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:29:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:29:02Z"}, "message": "rtsfind.adb (Check_CRT): Take into account RTE_Available_Call Fixes another case where...\n\n\t* rtsfind.adb (Check_CRT): Take into account RTE_Available_Call\n\tFixes another case where RTE_Available_Call was ignored instead of being\n\ttaken into account.\n\t(Load_Fail): Ditto.\n\n\t* rtsfind.ads: Add new entries.\n\nFrom-SVN: r130848", "tree": {"sha": "228369a84073b1f7936819274cf77e6e15f5fbb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/228369a84073b1f7936819274cf77e6e15f5fbb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/150bbaff610db5c17dd906a39a2f0453d78ab6b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/150bbaff610db5c17dd906a39a2f0453d78ab6b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/150bbaff610db5c17dd906a39a2f0453d78ab6b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/150bbaff610db5c17dd906a39a2f0453d78ab6b8/comments", "author": null, "committer": null, "parents": [{"sha": "cadf64d1d568ce60f0a0ac6014e6ad295b3448cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cadf64d1d568ce60f0a0ac6014e6ad295b3448cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cadf64d1d568ce60f0a0ac6014e6ad295b3448cc"}], "stats": {"total": 124, "additions": 76, "deletions": 48}, "files": [{"sha": "b26693106ad5305a072581600b9902e1b5d20c73", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 64, "deletions": 42, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/150bbaff610db5c17dd906a39a2f0453d78ab6b8/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/150bbaff610db5c17dd906a39a2f0453d78ab6b8/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=150bbaff610db5c17dd906a39a2f0453d78ab6b8", "patch": "@@ -110,47 +110,46 @@ package body Rtsfind is\n    -- Generation of WITH's --\n    --------------------------\n \n-   --  When a unit is implicitly loaded as a result of a call to RTE, it\n-   --  is necessary to create an implicit WITH to ensure that the object\n-   --  is correctly loaded by the binder. Such WITH statements are only\n-   --  required when the request is from the extended main unit (if a\n-   --  client needs a WITH, that will be taken care of when the client\n-   --  is compiled).\n+   --  When a unit is implicitly loaded as a result of a call to RTE, it is\n+   --  necessary to create an implicit WITH to ensure that the object is\n+   --  correctly loaded by the binder. Such WITH statements are only required\n+   --  when the request is from the extended main unit (if a client needs a\n+   --  WITH, that will be taken care of when the client is compiled).\n \n    --  We always attach the WITH to the main unit. This is not perfectly\n-   --  accurate in terms of elaboration requirements, but it is close\n-   --  enough, since the units that are accessed using rtsfind do not\n-   --  have delicate elaboration requirements.\n+   --  accurate in terms of elaboration requirements, but it is close enough,\n+   --  since the units that are accessed using rtsfind do not have delicate\n+   --  elaboration requirements.\n \n-   --  The flag Withed in the unit table record is initially set to False.\n-   --  It is set True if a WITH has been generated for the main unit for\n-   --  the corresponding unit.\n+   --  The flag Withed in the unit table record is initially set to False. It\n+   --  is set True if a WITH has been generated for the main unit for the\n+   --  corresponding unit.\n \n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n \n    function Check_CRT (E : RE_Id; Eid : Entity_Id) return Entity_Id;\n-   --  Check entity Eid to ensure that configurable run-time restrictions\n-   --  are met. May generate an error message and raise RE_Not_Available\n-   --  if the entity E does not exist (i.e. Eid is Empty)\n+   --  Check entity Eid to ensure that configurable run-time restrictions are\n+   --  met. May generate an error message (if RTE_Available_Call is false) and\n+   --  raise RE_Not_Available if entity E does not exist (e.g. Eid is Empty).\n+   --  Above documentation not clear ???\n \n    procedure Entity_Not_Defined (Id : RE_Id);\n-   --  Outputs error messages for an entity that is not defined in the\n-   --  run-time library (the form of the error message is tailored for\n-   --  no run time/configurable run time mode as required).\n+   --  Outputs error messages for an entity that is not defined in the run-time\n+   --  library (the form of the error message is tailored for no run time or\n+   --  configurable run time mode as required).\n \n    function Get_Unit_Name (U_Id : RTU_Id) return Unit_Name_Type;\n-   --  Retrieves the Unit Name given a unit id represented by its\n-   --  enumeration value in RTU_Id.\n+   --  Retrieves the Unit Name given a unit id represented by its enumeration\n+   --  value in RTU_Id.\n \n    procedure Load_Fail (S : String; U_Id : RTU_Id; Id : RE_Id);\n-   --  Internal procedure called if we can't sucessfully locate or\n-   --  process a run-time unit. The parameters give information about\n-   --  the error message to be given. S is a reason for failing to\n-   --  compile the file and U_Id is the unit id. RE_Id is the RE_Id\n-   --  originally passed to RTE. The message in S is one of the\n-   --  following:\n+   --  Internal procedure called if we can't sucessfully locate or process a\n+   --  run-time unit. The parameters give information about the error message\n+   --  to be given. S is a reason for failing to compile the file and U_Id is\n+   --  the unit id. RE_Id is the RE_Id originally passed to RTE. The message in\n+   --  S is one of the following:\n    --\n    --     \"not found\"\n    --     \"had parser errors\"\n@@ -166,16 +165,16 @@ package body Rtsfind is\n       Use_Setting : Boolean := False);\n    --  Load the unit whose Id is given if not already loaded. The unit is\n    --  loaded, analyzed, and added to the WITH list, and the entry in\n-   --  RT_Unit_Table is updated to reflect the load. Use_Setting is used\n-   --  to indicate the initial setting for the Is_Potentially_Use_Visible\n-   --  flag of the entity for the loaded unit (if it is indeed loaded).\n-   --  A value of False means nothing special need be done. A value of\n-   --  True indicates that this flag must be set to True. It is needed\n-   --  only in the Text_IO_Kludge procedure, which may materialize an\n-   --  entity of Text_IO (or [Wide_]Wide_Text_IO) that was previously unknown.\n-   --  Id is the RE_Id value of the entity which was originally requested.\n-   --  Id is used only for error message detail, and if it is RE_Null, then\n-   --  the attempt to output the entity name is ignored.\n+   --  RT_Unit_Table is updated to reflect the load. Use_Setting is used to\n+   --  indicate the initial setting for the Is_Potentially_Use_Visible flag of\n+   --  the entity for the loaded unit (if it is indeed loaded). A value of\n+   --  False means nothing special need be done. A value of True indicates that\n+   --  this flag must be set to True. It is needed only in the Text_IO_Kludge\n+   --  procedure, which may materialize an entity of Text_IO (or\n+   --  [Wide_]Wide_Text_IO) that was previously unknown. Id is the RE_Id value\n+   --  of the entity which was originally requested. Id is used only for error\n+   --  message detail, and if it is RE_Null, then the attempt to output the\n+   --  entity name is ignored.\n \n    function Make_Unit_Name (E : RE_Id; N : Node_Id) return Node_Id;\n    --  If the unit is a child unit, build fully qualified name for use in\n@@ -206,7 +205,12 @@ package body Rtsfind is\n \n    begin\n       if No (Eid) then\n-         Entity_Not_Defined (E);\n+         if RTE_Available_Call then\n+            RTE_Is_Available := False;\n+         else\n+            Entity_Not_Defined (E);\n+         end if;\n+\n          raise RE_Not_Available;\n \n       --  Entity is available\n@@ -541,12 +545,30 @@ package body Rtsfind is\n          Output_Entity_Name (Id, \"not available\");\n       end if;\n \n-      --  In configurable run time mode, we raise RE_Not_Available, and we hope\n-      --  the caller deals gracefully with this. If we are in normal full run\n-      --  time mode, a load failure is considered fatal and unrecoverable.\n+      --  In configurable run time mode, we raise RE_Not_Available, and the\n+      --  caller is expected to deal gracefully with this. In the case of a\n+      --  call to RTE_Available, this exception will be caught in Rtsfind,\n+      --  and result in a returned value of False for the call.\n \n       if Configurable_Run_Time_Mode then\n          raise RE_Not_Available;\n+\n+      --  Here we have a load failure in normal full run time mode. See if we\n+      --  are in the context of an RTE_Available call. If so, we just raise\n+      --  RE_Not_Available. This can happen if a unit is unavailable, which\n+      --  happens for example in the VM case, where the run-time is not\n+      --  complete, but we do not regard it as a configurable run-time.\n+      --  If the caller has done an explicit call to RTE_Available, then\n+      --  clearly the caller is prepared to deal with a result of False.\n+\n+      elsif RTE_Available_Call then\n+         RTE_Is_Available := False;\n+         raise RE_Not_Available;\n+\n+      --  If we are not in the context of an RTE_Available call, we are really\n+      --  trying to load an entity that is not there, and that should never\n+      --  happen, so in this case we signal a fatal error.\n+\n       else\n          raise Unrecoverable_Error;\n       end if;\n@@ -864,7 +886,7 @@ package body Rtsfind is\n       --  and it prevents spurious visibility conflicts between use-visible\n       --  user entities, and entities in run-time packages.\n \n-      --  In configurable run-time mode, subprograms marked Inlined_Always must\n+      --  In configurable run-time mode, subprograms marked Inline_Always must\n       --  be inlined, so in the case we retain the Front_End_Inlining mode.\n \n       Save_Front_End_Inlining : Boolean;\n@@ -1137,7 +1159,7 @@ package body Rtsfind is\n       --  is both efficient, and it prevents spurious visibility conflicts\n       --  between use-visible user entities, and entities in run-time packages.\n \n-      --  In configurable run-time mode, subprograms marked Inlined_Always must\n+      --  In configurable run-time mode, subprograms marked Inline_Always must\n       --  be inlined, so in the case we retain the Front_End_Inlining mode.\n \n       Save_Front_End_Inlining : Boolean;"}, {"sha": "2388ed0987070b65f9de3ebb8f220407715c2353", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/150bbaff610db5c17dd906a39a2f0453d78ab6b8/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/150bbaff610db5c17dd906a39a2f0453d78ab6b8/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=150bbaff610db5c17dd906a39a2f0453d78ab6b8", "patch": "@@ -227,6 +227,7 @@ package Rtsfind is\n       System_Img_Char,\n       System_Img_Dec,\n       System_Img_Enum,\n+      System_Img_Enum_New,\n       System_Img_Int,\n       System_Img_LLD,\n       System_Img_LLI,\n@@ -542,6 +543,7 @@ package Rtsfind is\n      RE_Register_Tag,                    -- Ada.Tags\n      RE_Transportable,                   -- Ada.Tags\n      RE_Secondary_DT,                    -- Ada.Tags\n+     RE_Secondary_Tag,                   -- Ada.Tags\n      RE_Select_Specific_Data,            -- Ada.Tags\n      RE_Set_Entry_Index,                 -- Ada.Tags\n      RE_Set_Offset_To_Top,               -- Ada.Tags\n@@ -723,9 +725,9 @@ package Rtsfind is\n \n      RE_Image_Decimal,                   -- System.Img_Dec\n \n-     RE_Image_Enumeration_8,             -- System.Img_Enum\n-     RE_Image_Enumeration_16,            -- System.Img_Enum\n-     RE_Image_Enumeration_32,            -- System.Img_Enum\n+     RE_Image_Enumeration_8,             -- System.Img_Enum_New\n+     RE_Image_Enumeration_16,            -- System.Img_Enum_New\n+     RE_Image_Enumeration_32,            -- System.Img_Enum_New\n \n      RE_Image_Integer,                   -- System.Img_Int\n \n@@ -1464,6 +1466,7 @@ package Rtsfind is\n \n      RE_Protected_Entry_Body_Array,      -- Tasking.Protected_Objects.Entries\n      RE_Protection_Entries,              -- Tasking.Protected_Objects.Entries\n+     RE_Protection_Entries_Access,       -- Tasking.Protected_Objects.Entries\n      RE_Initialize_Protection_Entries,   -- Tasking.Protected_Objects.Entries\n      RE_Lock_Entries,                    -- Tasking.Protected_Objects.Entries\n      RO_PE_Get_Ceiling,                  -- Tasking.Protected_Objects.Entries\n@@ -1644,6 +1647,7 @@ package Rtsfind is\n      RE_Register_Tag                     => Ada_Tags,\n      RE_Transportable                    => Ada_Tags,\n      RE_Secondary_DT                     => Ada_Tags,\n+     RE_Secondary_Tag                    => Ada_Tags,\n      RE_Select_Specific_Data             => Ada_Tags,\n      RE_Set_Entry_Index                  => Ada_Tags,\n      RE_Set_Offset_To_Top                => Ada_Tags,\n@@ -1823,9 +1827,9 @@ package Rtsfind is\n \n      RE_Image_Decimal                    => System_Img_Dec,\n \n-     RE_Image_Enumeration_8              => System_Img_Enum,\n-     RE_Image_Enumeration_16             => System_Img_Enum,\n-     RE_Image_Enumeration_32             => System_Img_Enum,\n+     RE_Image_Enumeration_8              => System_Img_Enum_New,\n+     RE_Image_Enumeration_16             => System_Img_Enum_New,\n+     RE_Image_Enumeration_32             => System_Img_Enum_New,\n \n      RE_Image_Integer                    => System_Img_Int,\n \n@@ -2567,6 +2571,8 @@ package Rtsfind is\n        System_Tasking_Protected_Objects_Entries,\n      RE_Protection_Entries               =>\n        System_Tasking_Protected_Objects_Entries,\n+     RE_Protection_Entries_Access        =>\n+       System_Tasking_Protected_Objects_Entries,\n      RE_Initialize_Protection_Entries    =>\n        System_Tasking_Protected_Objects_Entries,\n      RE_Lock_Entries                     =>"}]}