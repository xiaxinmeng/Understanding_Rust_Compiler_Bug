{"sha": "6a45faa72c5f2af7a163349ea0d9ccabbee9e3d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE0NWZhYTcyYzVmMmFmN2ExNjMzNDllYTBkOWNjYWJiZWU5ZTNkMQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-04-26T19:13:00Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-04-26T19:13:00Z"}, "message": "(init_optabs): Delete all uses of undocumented TImode and\nTFmode *_LIBCALL macros.\n\nFrom-SVN: r9480", "tree": {"sha": "bb0d8075844f334d6bedb5f24a3bb1fc7436711e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb0d8075844f334d6bedb5f24a3bb1fc7436711e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a45faa72c5f2af7a163349ea0d9ccabbee9e3d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a45faa72c5f2af7a163349ea0d9ccabbee9e3d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a45faa72c5f2af7a163349ea0d9ccabbee9e3d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a45faa72c5f2af7a163349ea0d9ccabbee9e3d1/comments", "author": null, "committer": null, "parents": [{"sha": "2ca9ae17a98002c6e244d66acea052d25770e0dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca9ae17a98002c6e244d66acea052d25770e0dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca9ae17a98002c6e244d66acea052d25770e0dc"}], "stats": {"total": 87, "additions": 0, "deletions": 87}, "files": [{"sha": "0dd824b0d23b8f6d5ca8cbccc91c779c3bdc2acd", "filename": "gcc/optabs.c", "status": "modified", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a45faa72c5f2af7a163349ea0d9ccabbee9e3d1/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a45faa72c5f2af7a163349ea0d9ccabbee9e3d1/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=6a45faa72c5f2af7a163349ea0d9ccabbee9e3d1", "patch": "@@ -4142,10 +4142,6 @@ init_optabs ()\n   smul_optab->handlers[(int) DImode].libfunc\n     = gen_rtx (SYMBOL_REF, Pmode, MULDI3_LIBCALL);\n #endif\n-#ifdef MULTI3_LIBCALL\n-  smul_optab->handlers[(int) TImode].libfunc\n-    = gen_rtx (SYMBOL_REF, Pmode, MULTI3_LIBCALL);\n-#endif\n \n #ifdef DIVSI3_LIBCALL\n   sdiv_optab->handlers[(int) SImode].libfunc\n@@ -4155,10 +4151,6 @@ init_optabs ()\n   sdiv_optab->handlers[(int) DImode].libfunc\n     = gen_rtx (SYMBOL_REF, Pmode, DIVDI3_LIBCALL);\n #endif\n-#ifdef DIVTI3_LIBCALL\n-  sdiv_optab->handlers[(int) TImode].libfunc\n-    = gen_rtx (SYMBOL_REF, Pmode, DIVTI3_LIBCALL);\n-#endif\n \n #ifdef UDIVSI3_LIBCALL\n   udiv_optab->handlers[(int) SImode].libfunc\n@@ -4168,11 +4160,6 @@ init_optabs ()\n   udiv_optab->handlers[(int) DImode].libfunc\n     = gen_rtx (SYMBOL_REF, Pmode, UDIVDI3_LIBCALL);\n #endif\n-#ifdef UDIVTI3_LIBCALL\n-  udiv_optab->handlers[(int) TImode].libfunc\n-    = gen_rtx (SYMBOL_REF, Pmode, UDIVTI3_LIBCALL);\n-#endif\n-\n \n #ifdef MODSI3_LIBCALL\n   smod_optab->handlers[(int) SImode].libfunc\n@@ -4182,11 +4169,6 @@ init_optabs ()\n   smod_optab->handlers[(int) DImode].libfunc\n     = gen_rtx (SYMBOL_REF, Pmode, MODDI3_LIBCALL);\n #endif\n-#ifdef MODTI3_LIBCALL\n-  smod_optab->handlers[(int) TImode].libfunc\n-    = gen_rtx (SYMBOL_REF, Pmode, MODTI3_LIBCALL);\n-#endif\n-\n \n #ifdef UMODSI3_LIBCALL\n   umod_optab->handlers[(int) SImode].libfunc\n@@ -4196,32 +4178,6 @@ init_optabs ()\n   umod_optab->handlers[(int) DImode].libfunc\n     = gen_rtx (SYMBOL_REF, Pmode, UMODDI3_LIBCALL);\n #endif\n-#ifdef UMODTI3_LIBCALL\n-  umod_optab->handlers[(int) TImode].libfunc\n-    = gen_rtx (SYMBOL_REF, Pmode, UMODTI3_LIBCALL);\n-#endif\n-\n-/* Define library calls for quad FP instructions */\n-#ifdef ADDTF3_LIBCALL\n-  add_optab->handlers[(int) TFmode].libfunc\n-    = gen_rtx (SYMBOL_REF, Pmode, ADDTF3_LIBCALL);\n-#endif\n-#ifdef SUBTF3_LIBCALL\n-  sub_optab->handlers[(int) TFmode].libfunc\n-    = gen_rtx (SYMBOL_REF, Pmode, SUBTF3_LIBCALL);\n-#endif\n-#ifdef MULTF3_LIBCALL\n-  smul_optab->handlers[(int) TFmode].libfunc\n-    = gen_rtx (SYMBOL_REF, Pmode, MULTF3_LIBCALL);\n-#endif\n-#ifdef DIVTF3_LIBCALL\n-  flodiv_optab->handlers[(int) TFmode].libfunc\n-    = gen_rtx (SYMBOL_REF, Pmode, DIVTF3_LIBCALL);\n-#endif\n-#ifdef SQRTTF2_LIBCALL\n-  sqrt_optab->handlers[(int) TFmode].libfunc\n-    = gen_rtx (SYMBOL_REF, Pmode, SQRTTF2_LIBCALL);\n-#endif\n \n   /* Use cabs for DC complex abs, since systems generally have cabs.\n      Don't define any libcall for SCmode, so that cabs will be used.  */\n@@ -4289,26 +4245,6 @@ init_optabs ()\n   lttf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__lttf2\");\n   letf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__letf2\");\n \n-/* Define library calls for quad FP instructions */\n-#ifdef EQTF2_LIBCALL\n-  eqtf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, EQTF2_LIBCALL);\n-#endif\n-#ifdef NETF2_LIBCALL\n-  netf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, NETF2_LIBCALL);\n-#endif\n-#ifdef GTTF2_LIBCALL\n-  gttf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, GTTF2_LIBCALL);\n-#endif\n-#ifdef GETF2_LIBCALL\n-  getf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, GETF2_LIBCALL);\n-#endif\n-#ifdef LTTF2_LIBCALL\n-  lttf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, LTTF2_LIBCALL);\n-#endif\n-#ifdef LETF2_LIBCALL\n-  letf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, LETF2_LIBCALL);\n-#endif\n-\n   floatsisf_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__floatsisf\");\n   floatdisf_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__floatdisf\");\n   floattisf_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__floattisf\");\n@@ -4357,29 +4293,6 @@ init_optabs ()\n   fixunstfdi_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__fixunstfdi\");\n   fixunstfti_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__fixunstfti\");\n \n-/* Define library calls for quad FP instructions */\n-#ifdef TRUNCTFSF2_LIBCALL\n-  trunctfsf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, TRUNCTFSF2_LIBCALL);\n-#endif\n-#ifdef TRUNCTFDF2_LIBCALL\n-  trunctfdf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, TRUNCTFDF2_LIBCALL);\n-#endif\n-#ifdef EXTENDSFTF2_LIBCALL\n-  extendsftf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, EXTENDSFTF2_LIBCALL);\n-#endif\n-#ifdef EXTENDDFTF2_LIBCALL\n-  extenddftf2_libfunc = gen_rtx (SYMBOL_REF, Pmode, EXTENDDFTF2_LIBCALL);\n-#endif\n-#ifdef FLOATSITF2_LIBCALL\n-  floatsitf_libfunc = gen_rtx (SYMBOL_REF, Pmode, FLOATSITF2_LIBCALL);\n-#endif\n-#ifdef FIX_TRUNCTFSI2_LIBCALL\n-  fixtfsi_libfunc = gen_rtx (SYMBOL_REF, Pmode, FIX_TRUNCTFSI2_LIBCALL);\n-#endif\n-#ifdef FIXUNS_TRUNCTFSI2_LIBCALL\n-  fixunstfsi_libfunc = gen_rtx (SYMBOL_REF, Pmode, FIXUNS_TRUNCTFSI2_LIBCALL);\n-#endif\n-\n #ifdef INIT_TARGET_OPTABS\n   /* Allow the target to add more libcalls or rename some, etc.  */\n   INIT_TARGET_OPTABS;"}]}