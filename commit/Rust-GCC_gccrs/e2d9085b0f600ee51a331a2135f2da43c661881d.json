{"sha": "e2d9085b0f600ee51a331a2135f2da43c661881d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJkOTA4NWIwZjYwMGVlNTFhMzMxYTIxMzVmMmRhNDNjNjYxODgxZA==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2009-07-13T12:04:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T12:04:11Z"}, "message": "2009-07-13  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-proc.adb, prj-part.adb, prj-part.ads, prj-strt.adb,\n\tprj-strt.ads, prj.adb, prj.ads, prj-makr.adb, prj-makr.ads,\n\tprj-dect.adb, prj-dect.ads, prj-nmsc.adb, prj-pars.adb, errutil.adb,\n\terrutil.ads, prj-conf.adb, gnatname.adb, prj-err.adb, prj-err.ads\n\t(Prj.Nmsc.Report_Error): Removed, no longer needed.\n\tAlways use Prj.Err.Report_Message.\n\nFrom-SVN: r149572", "tree": {"sha": "5e60425ea3e78b829bbedfe392b3788e5b6b0797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e60425ea3e78b829bbedfe392b3788e5b6b0797"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2d9085b0f600ee51a331a2135f2da43c661881d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2d9085b0f600ee51a331a2135f2da43c661881d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2d9085b0f600ee51a331a2135f2da43c661881d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2d9085b0f600ee51a331a2135f2da43c661881d/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "442c05811e9559222e2af33138b7326d0651a9fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442c05811e9559222e2af33138b7326d0651a9fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442c05811e9559222e2af33138b7326d0651a9fe"}], "stats": {"total": 1488, "additions": 722, "deletions": 766}, "files": [{"sha": "4108429630ccfdad0be86589f36debeb12e777ce", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -1,3 +1,12 @@\n+2009-07-13  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-proc.adb, prj-part.adb, prj-part.ads, prj-strt.adb,\n+\tprj-strt.ads, prj.adb, prj.ads, prj-makr.adb, prj-makr.ads,\n+\tprj-dect.adb, prj-dect.ads, prj-nmsc.adb, prj-pars.adb, errutil.adb,\n+\terrutil.ads, prj-conf.adb, gnatname.adb, prj-err.adb, prj-err.ads\n+\t(Prj.Nmsc.Report_Error): Removed, no longer needed.\n+\tAlways use Prj.Err.Report_Message.\n+\n 2009-07-13  Robert Dewar  <dewar@adacore.com>\n \n \t* prj.adb, sem_ch4.adb, sem_res.adb, prj-nmsc.adb: Minor reformatting"}, {"sha": "28db086274c8f46192edcd252613a8411a21c802", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1991-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "91ac4f1083b7f7ceb04e026926087b8a017b451b", "filename": "gcc/ada/errutil.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Ferrutil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Ferrutil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.ads?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "4c6d00bd99ee80859aecfdc73262c0ce71a351fe", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -620,7 +620,8 @@ begin\n         (File_Path         => File_Path.all,\n          Project_File      => Create_Project,\n          Preproc_Switches  => Prep_Switches,\n-         Very_Verbose      => Very_Verbose);\n+         Very_Verbose      => Very_Verbose,\n+         Flags             => Gnatmake_Flags);\n    end;\n \n    --  Process each section successively"}, {"sha": "b258ee9d9806859d2d25d1d6a3d725508d21db61", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -846,7 +846,8 @@ package body Prj.Conf is\n             Always_Errout_Finalize => False,\n             Packages_To_Check      => Packages_To_Check,\n             Current_Directory      => Current_Directory,\n-            Is_Config_File         => True);\n+            Is_Config_File         => True,\n+            Flags                  => Flags);\n       else\n          --  Maybe the user will want to create his own configuration file\n          Config_Project_Node := Empty_Node;\n@@ -1004,7 +1005,8 @@ package body Prj.Conf is\n          Always_Errout_Finalize => False,\n          Packages_To_Check      => Packages_To_Check,\n          Current_Directory      => Current_Directory,\n-         Is_Config_File         => False);\n+         Is_Config_File         => False,\n+         Flags                  => Flags);\n \n       if User_Project_Node = Empty_Node then\n          User_Project_Node := Empty_Node;"}, {"sha": "9b8baf333e4e3e9d2b19612b421faa73677c6552", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 101, "deletions": 55, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -54,7 +54,8 @@ package body Prj.Dect is\n       First_Attribute   : Attribute_Node_Id;\n       Current_Project   : Project_Node_Id;\n       Current_Package   : Project_Node_Id;\n-      Packages_To_Check : String_List_Access);\n+      Packages_To_Check : String_List_Access;\n+      Flags             : Processing_Flags);\n    --  Parse an attribute declaration\n \n    procedure Parse_Case_Construction\n@@ -64,7 +65,8 @@ package body Prj.Dect is\n       Current_Project   : Project_Node_Id;\n       Current_Package   : Project_Node_Id;\n       Packages_To_Check : String_List_Access;\n-      Is_Config_File    : Boolean);\n+      Is_Config_File    : Boolean;\n+      Flags             : Processing_Flags);\n    --  Parse a case construction\n \n    procedure Parse_Declarative_Items\n@@ -75,7 +77,8 @@ package body Prj.Dect is\n       Current_Project   : Project_Node_Id;\n       Current_Package   : Project_Node_Id;\n       Packages_To_Check : String_List_Access;\n-      Is_Config_File    : Boolean);\n+      Is_Config_File    : Boolean;\n+      Flags             : Processing_Flags);\n    --  Parse declarative items. Depending on In_Zone, some declarative\n    --  items may be forbidden.\n    --  Is_Config_File should be set to True if the project represents a config\n@@ -86,22 +89,25 @@ package body Prj.Dect is\n       Package_Declaration : out Project_Node_Id;\n       Current_Project     : Project_Node_Id;\n       Packages_To_Check   : String_List_Access;\n-      Is_Config_File      : Boolean);\n+      Is_Config_File      : Boolean;\n+      Flags               : Processing_Flags);\n    --  Parse a package declaration.\n    --  Is_Config_File should be set to True if the project represents a config\n    --  file (.cgpr) since some specific checks apply.\n \n    procedure Parse_String_Type_Declaration\n      (In_Tree         : Project_Node_Tree_Ref;\n       String_Type     : out Project_Node_Id;\n-      Current_Project : Project_Node_Id);\n+      Current_Project : Project_Node_Id;\n+      Flags           : Processing_Flags);\n    --  type <name> is ( <literal_string> { , <literal_string> } ) ;\n \n    procedure Parse_Variable_Declaration\n      (In_Tree         : Project_Node_Tree_Ref;\n       Variable        : out Project_Node_Id;\n       Current_Project : Project_Node_Id;\n-      Current_Package : Project_Node_Id);\n+      Current_Package : Project_Node_Id;\n+      Flags           : Processing_Flags);\n    --  Parse a variable assignment\n    --  <variable_Name> := <expression>; OR\n    --  <variable_Name> : <string_type_Name> := <string_expression>;\n@@ -116,7 +122,8 @@ package body Prj.Dect is\n       Current_Project   : Project_Node_Id;\n       Extends           : Project_Node_Id;\n       Packages_To_Check : String_List_Access;\n-      Is_Config_File    : Boolean)\n+      Is_Config_File    : Boolean;\n+      Flags             : Processing_Flags)\n    is\n       First_Declarative_Item : Project_Node_Id := Empty_Node;\n \n@@ -135,7 +142,8 @@ package body Prj.Dect is\n          Current_Project   => Current_Project,\n          Current_Package   => Empty_Node,\n          Packages_To_Check => Packages_To_Check,\n-         Is_Config_File    => Is_Config_File);\n+         Is_Config_File    => Is_Config_File,\n+         Flags             => Flags);\n       Set_First_Declarative_Item_Of\n         (Declarations, In_Tree, To => First_Declarative_Item);\n    end Parse;\n@@ -150,7 +158,8 @@ package body Prj.Dect is\n       First_Attribute   : Attribute_Node_Id;\n       Current_Project   : Project_Node_Id;\n       Current_Package   : Project_Node_Id;\n-      Packages_To_Check : String_List_Access)\n+      Packages_To_Check : String_List_Access;\n+      Flags             : Processing_Flags)\n    is\n       Current_Attribute      : Attribute_Node_Id := First_Attribute;\n       Full_Associative_Array : Boolean           := False;\n@@ -224,7 +233,7 @@ package body Prj.Dect is\n \n                if not Ignore then\n                   Error_Msg_Name_1 := Token_Name;\n-                  Error_Msg (\"undefined attribute %%\", Token_Ptr);\n+                  Error_Msg (Flags, \"undefined attribute %%\", Token_Ptr);\n                end if;\n             end if;\n \n@@ -234,7 +243,7 @@ package body Prj.Dect is\n             if Is_Read_Only (Current_Attribute) then\n                Error_Msg_Name_1 := Token_Name;\n                Error_Msg\n-                 (\"read-only attribute %% cannot be given a value\",\n+                 (Flags, \"read-only attribute %% cannot be given a value\",\n                   Token_Ptr);\n             end if;\n \n@@ -283,7 +292,8 @@ package body Prj.Dect is\n          if Current_Attribute /= Empty_Attribute\n            and then Attribute_Kind_Of (Current_Attribute) = Single\n          then\n-            Error_Msg (\"the attribute \"\"\" &\n+            Error_Msg (Flags,\n+                       \"the attribute \"\"\" &\n                        Get_Name_String\n                           (Attribute_Name_Of (Current_Attribute)) &\n                        \"\"\" cannot be an associative array\",\n@@ -335,7 +345,8 @@ package body Prj.Dect is\n                                      UI_To_Int (Int_Literal_Value);\n                         begin\n                            if Index = 0 then\n-                              Error_Msg (\"index cannot be zero\", Token_Ptr);\n+                              Error_Msg\n+                                (Flags, \"index cannot be zero\", Token_Ptr);\n                            else\n                               Set_Source_Index_Of\n                                 (Attribute, In_Tree, To => Index);\n@@ -346,7 +357,7 @@ package body Prj.Dect is\n                      end if;\n \n                   when others =>\n-                     Error_Msg (\"index not allowed here\", Token_Ptr);\n+                     Error_Msg (Flags, \"index not allowed here\", Token_Ptr);\n                      Scan (In_Tree);\n \n                      if Token = Tok_Integer_Literal then\n@@ -428,7 +439,7 @@ package body Prj.Dect is\n                                    (Current_Project, In_Tree, Token_Name);\n \n                   if No (The_Project) then\n-                     Error_Msg (\"unknown project\", Location);\n+                     Error_Msg (Flags, \"unknown project\", Location);\n                      Scan (In_Tree); --  past the project name\n \n                   else\n@@ -458,7 +469,7 @@ package body Prj.Dect is\n                            then\n                               The_Project := Empty_Node;\n                               Error_Msg\n-                                (\"not the same package as \" &\n+                                (Flags, \"not the same package as \" &\n                                  Get_Name_String\n                                    (Name_Of (Current_Package, In_Tree)),\n                                  Token_Ptr);\n@@ -486,8 +497,9 @@ package body Prj.Dect is\n                                  Error_Msg_Name_2 := Project_Name;\n                                  Error_Msg_Name_1 := Token_Name;\n                                  Error_Msg\n-                                   (\"package % not declared in project %\",\n-                                   Token_Ptr);\n+                                   (Flags,\n+                                    \"package % not declared in project %\",\n+                                    Token_Ptr);\n                               end if;\n \n                               Scan (In_Tree); --  past the package name\n@@ -519,7 +531,8 @@ package body Prj.Dect is\n                         if Token_Name /= Attribute_Name then\n                            The_Project := Empty_Node;\n                            Error_Msg_Name_1 := Attribute_Name;\n-                           Error_Msg (\"invalid name, should be %\", Token_Ptr);\n+                           Error_Msg\n+                             (Flags, \"invalid name, should be %\", Token_Ptr);\n                         end if;\n \n                         Scan (In_Tree); --  past the attribute name\n@@ -561,6 +574,7 @@ package body Prj.Dect is\n                Parse_Expression\n                  (In_Tree         => In_Tree,\n                   Expression      => Expression,\n+                  Flags           => Flags,\n                   Current_Project => Current_Project,\n                   Current_Package => Current_Package,\n                   Optional_Index  => Optional_Index);\n@@ -581,7 +595,7 @@ package body Prj.Dect is\n \n                   else\n                      Error_Msg\n-                       (\"wrong expression kind for attribute \"\"\" &\n+                       (Flags, \"wrong expression kind for attribute \"\"\" &\n                         Get_Name_String\n                           (Attribute_Name_Of (Current_Attribute)) &\n                         \"\"\"\",\n@@ -615,7 +629,8 @@ package body Prj.Dect is\n       Current_Project   : Project_Node_Id;\n       Current_Package   : Project_Node_Id;\n       Packages_To_Check : String_List_Access;\n-      Is_Config_File    : Boolean)\n+      Is_Config_File    : Boolean;\n+      Flags             : Processing_Flags)\n    is\n       Current_Item    : Project_Node_Id := Empty_Node;\n       Next_Item       : Project_Node_Id := Empty_Node;\n@@ -653,6 +668,7 @@ package body Prj.Dect is\n          Parse_Variable_Reference\n            (In_Tree         => In_Tree,\n             Variable        => Case_Variable,\n+            Flags           => Flags,\n             Current_Project => Current_Project,\n             Current_Package => Current_Package);\n          Set_Case_Variable_Reference_Of\n@@ -668,7 +684,8 @@ package body Prj.Dect is\n          String_Type := String_Type_Of (Case_Variable, In_Tree);\n \n          if No (String_Type) then\n-            Error_Msg (\"variable \"\"\" &\n+            Error_Msg (Flags,\n+                       \"variable \"\"\" &\n                        Get_Name_String (Name_Of (Case_Variable, In_Tree)) &\n                        \"\"\" is not typed\",\n                        Variable_Location);\n@@ -739,7 +756,8 @@ package body Prj.Dect is\n                Current_Project   => Current_Project,\n                Current_Package   => Current_Package,\n                Packages_To_Check => Packages_To_Check,\n-               Is_Config_File    => Is_Config_File);\n+               Is_Config_File    => Is_Config_File,\n+               Flags             => Flags);\n \n             --  \"when others =>\" must be the last branch, so save the\n             --  Case_Item and exit\n@@ -751,7 +769,8 @@ package body Prj.Dect is\n          else\n             Parse_Choice_List\n               (In_Tree      => In_Tree,\n-               First_Choice => First_Choice);\n+               First_Choice => First_Choice,\n+               Flags        => Flags);\n             Set_First_Choice_Of (Current_Item, In_Tree, To => First_Choice);\n \n             Expect (Tok_Arrow, \"`=>`\");\n@@ -766,7 +785,8 @@ package body Prj.Dect is\n                Current_Project   => Current_Project,\n                Current_Package   => Current_Package,\n                Packages_To_Check => Packages_To_Check,\n-               Is_Config_File    => Is_Config_File);\n+               Is_Config_File    => Is_Config_File,\n+               Flags             => Flags);\n \n             Set_First_Declarative_Item_Of\n               (Current_Item, In_Tree, To => First_Declarative_Item);\n@@ -776,7 +796,8 @@ package body Prj.Dect is\n \n       End_Case_Construction\n         (Check_All_Labels => not When_Others and not Quiet_Output,\n-         Case_Location    => Location_Of (Case_Construction, In_Tree));\n+         Case_Location    => Location_Of (Case_Construction, In_Tree),\n+         Flags            => Flags);\n \n       Expect (Tok_End, \"`END CASE`\");\n       Remove_Next_End_Node;\n@@ -812,7 +833,8 @@ package body Prj.Dect is\n       Current_Project   : Project_Node_Id;\n       Current_Package   : Project_Node_Id;\n       Packages_To_Check : String_List_Access;\n-      Is_Config_File    : Boolean)\n+      Is_Config_File    : Boolean;\n+      Flags             : Processing_Flags)\n    is\n       Current_Declarative_Item : Project_Node_Id := Empty_Node;\n       Next_Declarative_Item    : Project_Node_Id := Empty_Node;\n@@ -861,7 +883,8 @@ package body Prj.Dect is\n \n                      if No (The_Variable) then\n                         Error_Msg\n-                          (\"a variable cannot be declared \" &\n+                          (Flags,\n+                           \"a variable cannot be declared \" &\n                            \"for the first time here\",\n                            Token_Ptr);\n                      end if;\n@@ -872,7 +895,8 @@ package body Prj.Dect is\n                  (In_Tree,\n                   Current_Declaration,\n                   Current_Project => Current_Project,\n-                  Current_Package => Current_Package);\n+                  Current_Package => Current_Package,\n+                  Flags           => Flags);\n \n                Set_End_Of_Line (Current_Declaration);\n                Set_Previous_Line_Node (Current_Declaration);\n@@ -885,7 +909,8 @@ package body Prj.Dect is\n                   First_Attribute   => First_Attribute,\n                   Current_Project   => Current_Project,\n                   Current_Package   => Current_Package,\n-                  Packages_To_Check => Packages_To_Check);\n+                  Packages_To_Check => Packages_To_Check,\n+                  Flags             => Flags);\n \n                Set_End_Of_Line (Current_Declaration);\n                Set_Previous_Line_Node (Current_Declaration);\n@@ -899,15 +924,17 @@ package body Prj.Dect is\n                --  Package declaration\n \n                if In_Zone /= In_Project then\n-                  Error_Msg (\"a package cannot be declared here\", Token_Ptr);\n+                  Error_Msg\n+                    (Flags, \"a package cannot be declared here\", Token_Ptr);\n                end if;\n \n                Parse_Package_Declaration\n                  (In_Tree             => In_Tree,\n                   Package_Declaration => Current_Declaration,\n                   Current_Project     => Current_Project,\n                   Packages_To_Check   => Packages_To_Check,\n-                  Is_Config_File      => Is_Config_File);\n+                  Is_Config_File      => Is_Config_File,\n+                  Flags               => Flags);\n \n                Set_Previous_End_Node (Current_Declaration);\n \n@@ -916,14 +943,16 @@ package body Prj.Dect is\n                --  Type String Declaration\n \n                if In_Zone /= In_Project then\n-                  Error_Msg (\"a string type cannot be declared here\",\n+                  Error_Msg (Flags,\n+                             \"a string type cannot be declared here\",\n                              Token_Ptr);\n                end if;\n \n                Parse_String_Type_Declaration\n                  (In_Tree         => In_Tree,\n                   String_Type     => Current_Declaration,\n-                  Current_Project => Current_Project);\n+                  Current_Project => Current_Project,\n+                  Flags           => Flags);\n \n                Set_End_Of_Line (Current_Declaration);\n                Set_Previous_Line_Node (Current_Declaration);\n@@ -939,7 +968,8 @@ package body Prj.Dect is\n                   Current_Project   => Current_Project,\n                   Current_Package   => Current_Package,\n                   Packages_To_Check => Packages_To_Check,\n-                  Is_Config_File    => Is_Config_File);\n+                  Is_Config_File    => Is_Config_File,\n+                  Flags             => Flags);\n \n                Set_Previous_End_Node (Current_Declaration);\n \n@@ -993,7 +1023,8 @@ package body Prj.Dect is\n       Package_Declaration : out Project_Node_Id;\n       Current_Project     : Project_Node_Id;\n       Packages_To_Check   : String_List_Access;\n-      Is_Config_File      : Boolean)\n+      Is_Config_File      : Boolean;\n+      Flags               : Processing_Flags)\n    is\n       First_Attribute        : Attribute_Node_Id := Empty_Attribute;\n       Current_Package        : Package_Node_Id   := Empty_Package;\n@@ -1044,7 +1075,8 @@ package body Prj.Dect is\n                   --  misspelling has been found.\n \n                   if Verbose_Mode or else Index /= 0 then\n-                     Error_Msg (\"?\"\"\" &\n+                     Error_Msg (Flags,\n+                                \"?\"\"\" &\n                                 Get_Name_String\n                                  (Name_Of (Package_Declaration, In_Tree)) &\n                                 \"\"\" is not a known package name\",\n@@ -1053,7 +1085,8 @@ package body Prj.Dect is\n \n                   if Index /= 0 then\n                      Error_Msg -- CODEFIX\n-                       (\"\\?possible misspelling of \"\"\" &\n+                       (Flags,\n+                        \"\\?possible misspelling of \"\"\" &\n                         List (Index).all & \"\"\"\", Token_Ptr);\n                   end if;\n                end;\n@@ -1095,7 +1128,8 @@ package body Prj.Dect is\n \n             if Present (Current) then\n                Error_Msg\n-                 (\"package \"\"\" &\n+                 (Flags,\n+                  \"package \"\"\" &\n                   Get_Name_String (Name_Of (Package_Declaration, In_Tree)) &\n                   \"\"\" is declared twice in the same project\",\n                   Token_Ptr);\n@@ -1119,7 +1153,8 @@ package body Prj.Dect is\n       if Token = Tok_Renames then\n          if Is_Config_File then\n             Error_Msg\n-              (\"no package renames in configuration projects\", Token_Ptr);\n+              (Flags,\n+               \"no package renames in configuration projects\", Token_Ptr);\n          end if;\n \n          --  Scan past \"renames\"\n@@ -1164,7 +1199,8 @@ package body Prj.Dect is\n                   else\n                      Error_Msg_Name_1 := Project_Name;\n                      Error_Msg\n-                       (\"% is not an imported or extended project\", Token_Ptr);\n+                       (Flags,\n+                        \"% is not an imported or extended project\", Token_Ptr);\n                   end if;\n                else\n                   Set_Project_Of_Renamed_Package_Of\n@@ -1181,7 +1217,7 @@ package body Prj.Dect is\n \n                if Token = Tok_Identifier then\n                   if Name_Of (Package_Declaration, In_Tree) /= Token_Name then\n-                     Error_Msg (\"not the same package name\", Token_Ptr);\n+                     Error_Msg (Flags, \"not the same package name\", Token_Ptr);\n                   elsif\n                     Present (Project_Of_Renamed_Package_Of\n                                (Package_Declaration, In_Tree))\n@@ -1203,7 +1239,7 @@ package body Prj.Dect is\n \n                         if No (Current) then\n                            Error_Msg\n-                             (\"\"\"\" &\n+                             (Flags, \"\"\"\" &\n                               Get_Name_String (Token_Name) &\n                               \"\"\" is not a package declared by the project\",\n                               Token_Ptr);\n@@ -1233,7 +1269,8 @@ package body Prj.Dect is\n             Current_Project   => Current_Project,\n             Current_Package   => Package_Declaration,\n             Packages_To_Check => Packages_To_Check,\n-            Is_Config_File    => Is_Config_File);\n+            Is_Config_File    => Is_Config_File,\n+            Flags             => Flags);\n \n          Set_First_Declarative_Item_Of\n            (Package_Declaration, In_Tree, To => First_Declarative_Item);\n@@ -1256,7 +1293,7 @@ package body Prj.Dect is\n            and then Token_Name /= Name_Of (Package_Declaration, In_Tree)\n          then\n             Error_Msg_Name_1 := Name_Of (Package_Declaration, In_Tree);\n-            Error_Msg (\"expected %%\", Token_Ptr);\n+            Error_Msg (Flags, \"expected %%\", Token_Ptr);\n          end if;\n \n          if Token /= Tok_Semicolon then\n@@ -1270,7 +1307,7 @@ package body Prj.Dect is\n          Remove_Next_End_Node;\n \n       else\n-         Error_Msg (\"expected IS or RENAMES\", Token_Ptr);\n+         Error_Msg (Flags, \"expected IS or RENAMES\", Token_Ptr);\n       end if;\n \n    end Parse_Package_Declaration;\n@@ -1282,7 +1319,8 @@ package body Prj.Dect is\n    procedure Parse_String_Type_Declaration\n      (In_Tree         : Project_Node_Tree_Ref;\n       String_Type     : out Project_Node_Id;\n-      Current_Project : Project_Node_Id)\n+      Current_Project : Project_Node_Id;\n+      Flags           : Processing_Flags)\n    is\n       Current      : Project_Node_Id := Empty_Node;\n       First_String : Project_Node_Id := Empty_Node;\n@@ -1312,7 +1350,8 @@ package body Prj.Dect is\n          end loop;\n \n          if Present (Current) then\n-            Error_Msg (\"duplicate string type name \"\"\" &\n+            Error_Msg (Flags,\n+                       \"duplicate string type name \"\"\" &\n                        Get_Name_String (Token_Name) &\n                        \"\"\"\",\n                        Token_Ptr);\n@@ -1325,7 +1364,8 @@ package body Prj.Dect is\n             end loop;\n \n             if Present (Current) then\n-               Error_Msg (\"\"\"\" &\n+               Error_Msg (Flags,\n+                          \"\"\"\" &\n                           Get_Name_String (Token_Name) &\n                           \"\"\" is already a variable name\", Token_Ptr);\n             else\n@@ -1355,7 +1395,7 @@ package body Prj.Dect is\n       end if;\n \n       Parse_String_Type_List\n-        (In_Tree => In_Tree, First_String => First_String);\n+        (In_Tree => In_Tree, First_String => First_String, Flags => Flags);\n       Set_First_Literal_String (String_Type, In_Tree, To => First_String);\n \n       Expect (Tok_Right_Paren, \"`)`\");\n@@ -1374,7 +1414,8 @@ package body Prj.Dect is\n      (In_Tree         : Project_Node_Tree_Ref;\n       Variable        : out Project_Node_Id;\n       Current_Project : Project_Node_Id;\n-      Current_Package : Project_Node_Id)\n+      Current_Package : Project_Node_Id;\n+      Flags           : Processing_Flags)\n    is\n       Expression_Location      : Source_Ptr;\n       String_Type_Name         : Name_Id := No_Name;\n@@ -1448,7 +1489,8 @@ package body Prj.Dect is\n                         if The_Project_Name_And_Node =\n                              Tree_Private_Part.No_Project_Name_And_Node\n                         then\n-                           Error_Msg (\"unknown project \"\"\" &\n+                           Error_Msg (Flags,\n+                                      \"unknown project \"\"\" &\n                                       Get_Name_String\n                                          (Project_String_Type_Name) &\n                                       \"\"\"\",\n@@ -1491,7 +1533,8 @@ package body Prj.Dect is\n                   end if;\n \n                   if No (Current) then\n-                     Error_Msg (\"unknown string type \"\"\" &\n+                     Error_Msg (Flags,\n+                                \"unknown string type \"\"\" &\n                                 Get_Name_String (String_Type_Name) &\n                                 \"\"\"\",\n                                 Type_Location);\n@@ -1521,6 +1564,7 @@ package body Prj.Dect is\n       Parse_Expression\n         (In_Tree         => In_Tree,\n          Expression      => Expression,\n+         Flags           => Flags,\n          Current_Project => Current_Project,\n          Current_Package => Current_Package,\n          Optional_Index  => False);\n@@ -1533,7 +1577,8 @@ package body Prj.Dect is\n            and then Expression_Kind_Of (Expression, In_Tree) = List\n          then\n             Error_Msg\n-              (\"expression must be a single string\", Expression_Location);\n+              (Flags,\n+               \"expression must be a single string\", Expression_Location);\n          end if;\n \n          Set_Expression_Kind_Of\n@@ -1587,7 +1632,8 @@ package body Prj.Dect is\n                      if Expression_Kind_Of (The_Variable, In_Tree) /=\n                        Expression_Kind_Of (Variable, In_Tree)\n                      then\n-                        Error_Msg (\"wrong expression kind for variable \"\"\" &\n+                        Error_Msg (Flags,\n+                                   \"wrong expression kind for variable \"\"\" &\n                                    Get_Name_String\n                                      (Name_Of (The_Variable, In_Tree)) &\n                                      \"\"\"\","}, {"sha": "2af6e27fd0bcd476148d9ae58d90d61481d4877f", "filename": "gcc/ada/prj-dect.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-dect.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-dect.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.ads?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,8 @@ private package Prj.Dect is\n       Current_Project   : Prj.Tree.Project_Node_Id;\n       Extends           : Prj.Tree.Project_Node_Id;\n       Packages_To_Check : String_List_Access;\n-      Is_Config_File    : Boolean);\n+      Is_Config_File    : Boolean;\n+      Flags             : Processing_Flags);\n    --  Parse project declarative items\n    --\n    --  In_Tree is the project node tree"}, {"sha": "abe4224f0980e0b557422eb9078be6d5ce45f5e5", "filename": "gcc/ada/prj-err.adb", "status": "modified", "additions": 50, "deletions": 1, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-err.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-err.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-err.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -68,4 +68,53 @@ package body Prj.Err is\n       end if;\n    end Post_Scan;\n \n+   ---------------\n+   -- Error_Msg --\n+   ---------------\n+\n+   procedure Error_Msg\n+     (Flags    : Processing_Flags;\n+      Msg      : String;\n+      Location : Source_Ptr := No_Location;\n+      Project  : Project_Id := null)\n+   is\n+      Real_Location : Source_Ptr := Location;\n+\n+   begin\n+      --  Display the error message in the traces so that it appears in the\n+      --  correct location in the traces (otherwise error messages are only\n+      --  displayed at the end and it is difficult to see when they were\n+      --  triggered)\n+\n+      if Current_Verbosity = High then\n+         Write_Line (\"ERROR: \" & Msg);\n+      end if;\n+\n+      --  If location of error is unknown, use the location of the project\n+\n+      if Real_Location = No_Location\n+        and then Project /= null\n+      then\n+         Real_Location := Project.Location;\n+      end if;\n+\n+      if Real_Location = No_Location then\n+         --  If still null, we are parsing a project that was created in-memory\n+         --  so we shouldn't report errors for projects that the user has no\n+         --  access to in any case.\n+         return;\n+      end if;\n+\n+      --  Report the error through Errutil, so that duplicate errors are\n+      --  properly removed, messages are sorted, and correctly interpreted,...\n+\n+      Errutil.Error_Msg (Msg, Real_Location);\n+\n+      --  Let the application know there was an error\n+\n+      if Flags.Report_Error /= null then\n+         Flags.Report_Error (Project, Is_Warning => Msg (Msg'First) = '?');\n+      end if;\n+   end Error_Msg;\n+\n end Prj.Err;"}, {"sha": "e697e194b7fdd894387fc66bd6ad45e00fa814c5", "filename": "gcc/ada/prj-err.ads", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-err.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-err.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-err.ads?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -28,6 +28,14 @@\n --  the GNAT tree packages (Atree, Sinfo, ...). It uses exactly the same global\n --  variables as Errout, located in package Err_Vars. Like Errout, it also uses\n --  the common variables and routines in package Erroutc.\n+--\n+--  Parameters are set through Err_Vars.Error_Msg_File_* or\n+--  Err_Vars.Error_Msg_Name_*, and replaced automatically in the messages\n+--  (\"{{\" for files, \"%%\" for names).\n+--\n+--  However, in this package you can configure the error messages to be sent\n+--  to your own callback by setting Report_Error in the flags. This ensures\n+--  that applications can control where error messages are displayed.\n \n with Scng;\n with Errutil;\n@@ -59,29 +67,22 @@ package Prj.Err is\n    --  Finalize processing of error messages for one file and output message\n    --  indicating the number of detected errors.\n \n-   procedure Error_Msg (Msg : String; Flag_Location : Source_Ptr)\n-     renames Errutil.Error_Msg;\n-   --  Output a message at specified location\n-\n-   procedure Error_Msg_S (Msg : String) renames Errutil.Error_Msg_S;\n-   --  Output a message at current scan pointer location\n-\n-   procedure Error_Msg_SC (Msg : String) renames Errutil.Error_Msg_SC;\n-   --  Output a message at the start of the current token, unless we are at\n-   --  the end of file, in which case we always output the message after the\n-   --  last real token in the file.\n-\n-   procedure Error_Msg_SP (Msg : String) renames Errutil.Error_Msg_SP;\n-   --  Output a message at the start of the previous token\n+   procedure Error_Msg\n+     (Flags    : Processing_Flags;\n+      Msg      : String;\n+      Location : Source_Ptr := No_Location;\n+      Project  : Project_Id := null);\n+   --  Output an error message, either through Flags.Error_Report or through\n+   --  Errutil. The location defaults to the project's location (\"project\" in\n+   --  the source code).\n+   --  If Msg starts with \"?\", this is a warning, and Warning: is added at the\n+   --  beginning. If Msg starts with \"<\", see comment for\n+   --  Err_Vars.Error_Msg_Warn\n \n    -------------\n    -- Scanner --\n    -------------\n \n-   package Style renames Errutil.Style;\n-   --  Instantiation of the generic style package, needed for the instantiation\n-   --  of the generic scanner below.\n-\n    procedure Obsolescent_Check (S : Source_Ptr);\n    --  Dummy null procedure for Scng instantiation\n \n@@ -90,12 +91,12 @@ package Prj.Err is\n \n    package Scanner is new Scng\n      (Post_Scan         => Post_Scan,\n-      Error_Msg         => Error_Msg,\n-      Error_Msg_S       => Error_Msg_S,\n-      Error_Msg_SC      => Error_Msg_SC,\n-      Error_Msg_SP      => Error_Msg_SP,\n+      Error_Msg         => Errutil.Error_Msg,\n+      Error_Msg_S       => Errutil.Error_Msg_S,\n+      Error_Msg_SC      => Errutil.Error_Msg_SC,\n+      Error_Msg_SP      => Errutil.Error_Msg_SP,\n       Obsolescent_Check => Obsolescent_Check,\n-      Style             => Style);\n+      Style             => Errutil.Style);\n    --  Instantiation of the generic scanner\n \n end Prj.Err;"}, {"sha": "0f91936b1b7eebc9ef043f14e461154d5119d1eb", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -766,7 +766,8 @@ package body Prj.Makr is\n      (File_Path         : String;\n       Project_File      : Boolean;\n       Preproc_Switches  : Argument_List;\n-      Very_Verbose      : Boolean)\n+      Very_Verbose      : Boolean;\n+      Flags             : Processing_Flags)\n    is\n    begin\n       Makr.Very_Verbose := Initialize.Very_Verbose;\n@@ -846,6 +847,7 @@ package body Prj.Makr is\n                Always_Errout_Finalize => False,\n                Store_Comments         => True,\n                Is_Config_File         => False,\n+               Flags                  => Flags,\n                Current_Directory      => Get_Current_Dir,\n                Packages_To_Check      => Packages_To_Check_By_Gnatname);\n "}, {"sha": "91543a2ff79c6359097b06462b68c3962d544e4d", "filename": "gcc/ada/prj-makr.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-makr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-makr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.ads?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,8 @@ package Prj.Makr is\n      (File_Path         : String;\n       Project_File      : Boolean;\n       Preproc_Switches  : Argument_List;\n-      Very_Verbose      : Boolean);\n+      Very_Verbose      : Boolean;\n+      Flags             : Processing_Flags);\n    --  Start the creation of a configuration pragmas file or the creation or\n    --  modification of a project file, for gnatname.\n    --"}, {"sha": "3ad892ab4df4113bde2c9fd56c88eb8d5b465a1b", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 262, "deletions": 432, "changes": 694, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -31,7 +31,7 @@ with Err_Vars; use Err_Vars;\n with Opt;      use Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n-with Prj.Err;\n+with Prj.Err;  use Prj.Err;\n with Prj.Util; use Prj.Util;\n with Sinput.P;\n with Snames;   use Snames;\n@@ -199,8 +199,9 @@ package body Prj.Nmsc is\n       Naming_Exception    : Boolean := False;\n       Path                : Path_Information := No_Path_Information;\n       Alternate_Languages : Language_List := null;\n-      Unit                : Name_Id   := No_Name;\n-      Index               : Int       := 0;\n+      Unit                : Name_Id    := No_Name;\n+      Index               : Int        := 0;\n+      Locally_Removed     : Boolean    := False;\n       Location            : Source_Ptr := No_Location);\n    --  Add a new source to the different lists: list of all sources in the\n    --  project tree, list of source of a project and list of sources of a\n@@ -280,17 +281,6 @@ package body Prj.Nmsc is\n    --  Return the index of the last significant character in Dir. This is used\n    --  to avoid duplicate '/' (slash) characters at the end of directory names.\n \n-   procedure Error_Msg\n-     (Project       : Project_Id;\n-      Msg           : String;\n-      Flag_Location : Source_Ptr;\n-      Data          : Tree_Processing_Data);\n-   --  Output an error message. If Data.Error_Report is null, simply call\n-   --  Prj.Err.Error_Msg. Otherwise, disregard Flag_Location and use\n-   --  Error_Report. If Msg starts with \"?\", this is a warning, and the\n-   --  string \"Warning:\" is prepended to the message. If Msg starts with \"<\",\n-   --  see comment for Err_Vars.Error_Msg_Warn.\n-\n    procedure Search_Directories\n      (Project         : in out Project_Processing_Data;\n       Data            : in out Tree_Processing_Data;\n@@ -552,8 +542,9 @@ package body Prj.Nmsc is\n       Naming_Exception    : Boolean := False;\n       Path                : Path_Information := No_Path_Information;\n       Alternate_Languages : Language_List := null;\n-      Unit                : Name_Id   := No_Name;\n-      Index               : Int       := 0;\n+      Unit                : Name_Id    := No_Name;\n+      Index               : Int        := 0;\n+      Locally_Removed     : Boolean    := False;\n       Location            : Source_Ptr := No_Location)\n    is\n       Config    : constant Language_Config := Lang_Id.Config;\n@@ -608,8 +599,8 @@ package body Prj.Nmsc is\n                else\n                   Error_Msg_File_1 := File_Name;\n                   Error_Msg\n-                    (Project, \"duplicate source file name {\",\n-                     Location, Data);\n+                    (Data.Flags, \"duplicate source file name {\",\n+                     Location, Project);\n                   Add_Src := False;\n                end if;\n \n@@ -623,7 +614,7 @@ package body Prj.Nmsc is\n                elsif Source.Path.Name /= Path.Name then\n                   Error_Msg_Name_1 := Unit;\n                   Error_Msg\n-                    (Project, \"duplicate unit %%\", Location, Data);\n+                    (Data.Flags, \"duplicate unit %%\", Location, Project);\n                   Add_Src := False;\n                end if;\n             end if;\n@@ -636,7 +627,9 @@ package body Prj.Nmsc is\n             --  to have the same file name in unrelated projects.\n \n          elsif Is_Extending (Project, Source.Project) then\n-            Source_To_Replace := Source;\n+            if not Locally_Removed then\n+               Source_To_Replace := Source;\n+            end if;\n \n          elsif Prev_Unit /= No_Unit_Index\n            and then not Source.Locally_Removed\n@@ -649,26 +642,26 @@ package body Prj.Nmsc is\n             if Path /= No_Path_Information then\n                Error_Msg_Name_1 := Unit;\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"unit %% cannot belong to several projects\",\n-                  Location, Data);\n+                  Location, Project);\n \n                Error_Msg_Name_1 := Project.Name;\n                Error_Msg_Name_2 := Name_Id (Path.Name);\n                Error_Msg\n-                 (Project, \"\\  project %%, %%\", Location, Data);\n+                 (Data.Flags, \"\\  project %%, %%\", Location, Project);\n \n                Error_Msg_Name_1 := Source.Project.Name;\n                Error_Msg_Name_2 := Name_Id (Source.Path.Display_Name);\n                Error_Msg\n-                 (Project, \"\\  project %%, %%\", Location, Data);\n+                 (Data.Flags, \"\\  project %%, %%\", Location, Project);\n \n             else\n                Error_Msg_Name_1 := Unit;\n                Error_Msg_Name_2 := Source.Project.Name;\n                Error_Msg\n-                 (Project, \"unit %% already belongs to project %%\",\n-                  Location, Data);\n+                 (Data.Flags, \"unit %% already belongs to project %%\",\n+                  Location, Project);\n             end if;\n \n             Add_Src := False;\n@@ -680,8 +673,8 @@ package body Prj.Nmsc is\n             Error_Msg_File_1 := File_Name;\n             Error_Msg_File_2 := File_Name_Type (Source.Project.Name);\n             Error_Msg\n-              (Project,\n-               \"{ is already a source of project {\", Location, Data);\n+              (Data.Flags,\n+               \"{ is already a source of project {\", Location, Project);\n \n             --  Add the file anyway, to avoid further warnings like \"language\n             --  unknown\".\n@@ -727,6 +720,7 @@ package body Prj.Nmsc is\n       Id.Language            := Lang_Id;\n       Id.Kind                := Kind;\n       Id.Alternate_Languages := Alternate_Languages;\n+      Id.Locally_Removed     := Locally_Removed;\n \n       --  Add the source id to the Unit_Sources_HT hash table, if the unit name\n       --  is not null.\n@@ -848,10 +842,10 @@ package body Prj.Nmsc is\n \n             else\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"at least one of Source_Files, Source_Dirs or Languages \"\n                     & \"must be declared empty for an abstract project\",\n-                  Project.Location, Data);\n+                  Project.Location, Project);\n             end if;\n          end;\n       end if;\n@@ -1374,8 +1368,8 @@ package body Prj.Nmsc is\n \n                            if List = Nil_String then\n                               Error_Msg\n-                                (Project, \"include option cannot be null\",\n-                                 Element.Value.Location, Data);\n+                                (Data.Flags, \"include option cannot be null\",\n+                                 Element.Value.Location, Project);\n                            end if;\n \n                            Put (Into_List => Lang_Index.Config.Include_Option,\n@@ -1427,15 +1421,17 @@ package body Prj.Nmsc is\n                            exception\n                               when Constraint_Error =>\n                                  Error_Msg\n-                                   (Project, \"invalid value for Path_Syntax\",\n-                                    Element.Value.Location, Data);\n+                                   (Data.Flags,\n+                                    \"invalid value for Path_Syntax\",\n+                                    Element.Value.Location, Project);\n                            end;\n \n                         when Name_Object_File_Suffix =>\n                            if Get_Name_String (Element.Value.Value) = \"\" then\n                               Error_Msg\n-                                (Project, \"object file suffix cannot be empty\",\n-                                 Element.Value.Location, Data);\n+                                (Data.Flags,\n+                                 \"object file suffix cannot be empty\",\n+                                 Element.Value.Location, Project);\n \n                            else\n                               Lang_Index.Config.Object_File_Suffix :=\n@@ -1456,8 +1452,9 @@ package body Prj.Nmsc is\n \n                            if List = Nil_String then\n                               Error_Msg\n-                                (Project, \"compiler PIC option cannot be null\",\n-                                 Element.Value.Location, Data);\n+                                (Data.Flags,\n+                                 \"compiler PIC option cannot be null\",\n+                                 Element.Value.Location, Project);\n                            end if;\n \n                            Put (Into_List =>\n@@ -1473,9 +1470,9 @@ package body Prj.Nmsc is\n \n                            if List = Nil_String then\n                               Error_Msg\n-                                (Project,\n+                                (Data.Flags,\n                                  \"mapping file switches cannot be null\",\n-                                 Element.Value.Location, Data);\n+                                 Element.Value.Location, Project);\n                            end if;\n \n                            Put (Into_List =>\n@@ -1505,9 +1502,9 @@ package body Prj.Nmsc is\n \n                            if List = Nil_String then\n                               Error_Msg\n-                                (Project,\n+                                (Data.Flags,\n                                  \"config file switches cannot be null\",\n-                                 Element.Value.Location, Data);\n+                                 Element.Value.Location, Project);\n                            end if;\n \n                            Put (Into_List =>\n@@ -1570,9 +1567,9 @@ package body Prj.Nmsc is\n                            exception\n                               when Constraint_Error =>\n                                  Error_Msg\n-                                   (Project,\n+                                   (Data.Flags,\n                                     \"illegal value for Config_File_Unique\",\n-                                    Element.Value.Location, Data);\n+                                    Element.Value.Location, Project);\n                            end;\n \n                         when others =>\n@@ -1623,9 +1620,9 @@ package body Prj.Nmsc is\n                      exception\n                         when Constraint_Error =>\n                            Error_Msg\n-                             (Project,\n+                             (Data.Flags,\n                               \"invalid value for Casing\",\n-                              Attribute.Value.Location, Data);\n+                              Attribute.Value.Location, Project);\n                      end;\n \n                   elsif Attribute.Name = Name_Dot_Replacement then\n@@ -1754,9 +1751,9 @@ package body Prj.Nmsc is\n                      exception\n                         when Constraint_Error =>\n                            Error_Msg\n-                             (Project,\n+                             (Data.Flags,\n                               \"value must be positive or equal to 0\",\n-                              Attribute.Value.Location, Data);\n+                              Attribute.Value.Location, Project);\n                      end;\n \n                   elsif Attribute.Name = Name_Response_File_Format then\n@@ -1782,9 +1779,9 @@ package body Prj.Nmsc is\n \n                         else\n                            Error_Msg\n-                             (Project,\n+                             (Data.Flags,\n                               \"illegal response file format\",\n-                              Attribute.Value.Location, Data);\n+                              Attribute.Value.Location, Project);\n                         end if;\n                      end;\n \n@@ -1887,9 +1884,9 @@ package body Prj.Nmsc is\n \n                   if List = Nil_String then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"archive builder cannot be null\",\n-                        Attribute.Value.Location, Data);\n+                        Attribute.Value.Location, Project);\n                   end if;\n \n                   Put (Into_List => Project.Config.Archive_Builder,\n@@ -1921,9 +1918,9 @@ package body Prj.Nmsc is\n \n                   if List = Nil_String then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"archive indexer cannot be null\",\n-                        Attribute.Value.Location, Data);\n+                        Attribute.Value.Location, Project);\n                   end if;\n \n                   Put (Into_List => Project.Config.Archive_Indexer,\n@@ -1940,9 +1937,9 @@ package body Prj.Nmsc is\n \n                   if List = Nil_String then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"partial linker cannot be null\",\n-                        Attribute.Value.Location, Data);\n+                        Attribute.Value.Location, Project);\n                   end if;\n \n                   Put (Into_List => Project.Config.Lib_Partial_Linker,\n@@ -1953,10 +1950,10 @@ package body Prj.Nmsc is\n                   Project.Config.Shared_Lib_Driver :=\n                     File_Name_Type (Attribute.Value.Value);\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"?Library_'G'C'C is an obsolescent attribute, \" &\n                      \"use Linker''Driver instead\",\n-                     Attribute.Value.Location, Data);\n+                     Attribute.Value.Location, Project);\n \n                elsif Attribute.Name = Name_Archive_Suffix then\n                   Project.Config.Archive_Suffix :=\n@@ -1971,9 +1968,9 @@ package body Prj.Nmsc is\n \n                   if List = Nil_String then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"linker executable option cannot be null\",\n-                        Attribute.Value.Location, Data);\n+                        Attribute.Value.Location, Project);\n                   end if;\n \n                   Put (Into_List => Project.Config.Linker_Executable_Option,\n@@ -1990,9 +1987,9 @@ package body Prj.Nmsc is\n \n                   if Name_Len = 0 then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"linker library directory option cannot be empty\",\n-                        Attribute.Value.Location, Data);\n+                        Attribute.Value.Location, Project);\n                   end if;\n \n                   Project.Config.Linker_Lib_Dir_Option :=\n@@ -2008,9 +2005,9 @@ package body Prj.Nmsc is\n \n                   if Name_Len = 0 then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"linker library name option cannot be empty\",\n-                        Attribute.Value.Location, Data);\n+                        Attribute.Value.Location, Project);\n                   end if;\n \n                   Project.Config.Linker_Lib_Name_Option :=\n@@ -2038,11 +2035,11 @@ package body Prj.Nmsc is\n                   exception\n                      when Constraint_Error =>\n                         Error_Msg\n-                          (Project,\n+                          (Data.Flags,\n                            \"invalid value \"\"\" &\n                            Get_Name_String (Attribute.Value.Value) &\n                            \"\"\" for Separate_Run_Path_Options\",\n-                           Attribute.Value.Location, Data);\n+                           Attribute.Value.Location, Project);\n                   end;\n \n                elsif Attribute.Name = Name_Library_Support then\n@@ -2055,11 +2052,11 @@ package body Prj.Nmsc is\n                   exception\n                      when Constraint_Error =>\n                         Error_Msg\n-                          (Project,\n+                          (Data.Flags,\n                            \"invalid value \"\"\" &\n                            Get_Name_String (Attribute.Value.Value) &\n                            \"\"\" for Library_Support\",\n-                           Attribute.Value.Location, Data);\n+                           Attribute.Value.Location, Project);\n                   end;\n \n                elsif Attribute.Name = Name_Shared_Library_Prefix then\n@@ -2080,11 +2077,11 @@ package body Prj.Nmsc is\n                   exception\n                      when Constraint_Error =>\n                         Error_Msg\n-                          (Project,\n+                          (Data.Flags,\n                            \"invalid value \"\"\"\n                              & Get_Name_String (Attribute.Value.Value)\n                              & \"\"\" for Symbolic_Link_Supported\",\n-                           Attribute.Value.Location, Data);\n+                           Attribute.Value.Location, Project);\n                   end;\n \n                elsif\n@@ -2099,11 +2096,11 @@ package body Prj.Nmsc is\n                   exception\n                      when Constraint_Error =>\n                         Error_Msg\n-                          (Project,\n+                          (Data.Flags,\n                            \"invalid value \"\"\" &\n                            Get_Name_String (Attribute.Value.Value) &\n                            \"\"\" for Library_Major_Minor_Id_Supported\",\n-                           Attribute.Value.Location, Data);\n+                           Attribute.Value.Location, Project);\n                   end;\n \n                elsif Attribute.Name = Name_Library_Auto_Init_Supported then\n@@ -2115,11 +2112,11 @@ package body Prj.Nmsc is\n                   exception\n                      when Constraint_Error =>\n                         Error_Msg\n-                          (Project,\n+                          (Data.Flags,\n                            \"invalid value \"\"\"\n                              & Get_Name_String (Attribute.Value.Value)\n                              & \"\"\" for Library_Auto_Init_Supported\",\n-                           Attribute.Value.Location, Data);\n+                           Attribute.Value.Location, Project);\n                   end;\n \n                elsif Attribute.Name = Name_Shared_Library_Minimum_Switches then\n@@ -2238,11 +2235,11 @@ package body Prj.Nmsc is\n                         exception\n                            when Constraint_Error =>\n                               Error_Msg\n-                                (Project,\n+                                (Data.Flags,\n                                  \"invalid value \"\"\"\n                                  & Get_Name_String (Element.Value.Value)\n                                  & \"\"\" for Object_Generated\",\n-                                 Element.Value.Location, Data);\n+                                 Element.Value.Location, Project);\n                         end;\n \n                      when Name_Objects_Linked =>\n@@ -2265,11 +2262,11 @@ package body Prj.Nmsc is\n                         exception\n                            when Constraint_Error =>\n                               Error_Msg\n-                                (Project,\n+                                (Data.Flags,\n                                  \"invalid value \"\"\"\n                                  & Get_Name_String (Element.Value.Value)\n                                  & \"\"\" for Objects_Linked\",\n-                                 Element.Value.Location, Data);\n+                                 Element.Value.Location, Project);\n                         end;\n                      when others =>\n                         null;\n@@ -2336,10 +2333,10 @@ package body Prj.Nmsc is\n          then\n             Error_Msg_Name_1 := Lang_Index.Display_Name;\n             Error_Msg\n-              (Project,\n+              (Data.Flags,\n                \"?no compiler specified for language %%\" &\n                  \", ignoring all its sources\",\n-               No_Location, Data);\n+               No_Location, Project);\n \n             if Lang_Index = Project.Languages then\n                Project.Languages := Lang_Index.Next;\n@@ -2355,23 +2352,23 @@ package body Prj.Nmsc is\n \n             if Lang_Index.Config.Naming_Data.Dot_Replacement = No_File then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"Dot_Replacement not specified for Ada\",\n-                  No_Location, Data);\n+                  No_Location, Project);\n             end if;\n \n             if Lang_Index.Config.Naming_Data.Spec_Suffix = No_File then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"Spec_Suffix not specified for Ada\",\n-                  No_Location, Data);\n+                  No_Location, Project);\n             end if;\n \n             if Lang_Index.Config.Naming_Data.Body_Suffix = No_File then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"Body_Suffix not specified for Ada\",\n-                  No_Location, Data);\n+                  No_Location, Project);\n             end if;\n \n          else\n@@ -2386,9 +2383,9 @@ package body Prj.Nmsc is\n             then\n                Error_Msg_Name_1 := Lang_Index.Display_Name;\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"no suffixes specified for %%\",\n-                  No_Location, Data);\n+                  No_Location, Project);\n             end if;\n          end if;\n \n@@ -2418,9 +2415,9 @@ package body Prj.Nmsc is\n             Project.Externally_Built := True;\n \n          elsif Name_Buffer (1 .. Name_Len) /= \"false\" then\n-            Error_Msg (Project,\n+            Error_Msg (Data.Flags,\n                        \"Externally_Built may only be true or false\",\n-                       Externally_Built.Location, Data);\n+                       Externally_Built.Location, Project);\n          end if;\n       end if;\n \n@@ -2529,10 +2526,10 @@ package body Prj.Nmsc is\n                Error_Msg_Name_1 := Project.Name;\n \n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"{ cannot be an interface of project %% \"\n                   & \"as it is not one of its sources\",\n-                  Element.Location, Data);\n+                  Element.Location, Project);\n             end if;\n \n             List := Element.Next;\n@@ -2635,8 +2632,8 @@ package body Prj.Nmsc is\n \n             if Length_Of_Name (Dot_Repl.Value) = 0 then\n                Error_Msg\n-                 (Project, \"Dot_Replacement cannot be empty\",\n-                  Dot_Repl.Location, Data);\n+                 (Data.Flags, \"Dot_Replacement cannot be empty\",\n+                  Dot_Repl.Location, Project);\n             end if;\n \n             Dot_Replacement := Canonical_Case_File_Name (Dot_Repl.Value);\n@@ -2666,10 +2663,10 @@ package body Prj.Nmsc is\n                              Index (Source => Repl, Pattern => \".\") /= 0)\n                then\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      '\"' & Repl &\n                      \"\"\" is illegal for Dot_Replacement.\",\n-                     Dot_Repl_Loc, Data);\n+                     Dot_Repl_Loc, Project);\n                end if;\n             end;\n          end if;\n@@ -2692,9 +2689,9 @@ package body Prj.Nmsc is\n             begin\n                if Casing_Image'Length = 0 then\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"Casing cannot be an empty string\",\n-                     Casing_String.Location, Data);\n+                     Casing_String.Location, Project);\n                end if;\n \n                Casing := Value (Casing_Image);\n@@ -2706,9 +2703,9 @@ package body Prj.Nmsc is\n                   Name_Buffer (1 .. Name_Len) := Casing_Image;\n                   Err_Vars.Error_Msg_Name_1 := Name_Find;\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"%% is not a correct Casing\",\n-                     Casing_String.Location, Data);\n+                     Casing_String.Location, Project);\n             end;\n          end if;\n \n@@ -2717,9 +2714,9 @@ package body Prj.Nmsc is\n          if not Sep_Suffix.Default then\n             if Length_Of_Name (Sep_Suffix.Value) = 0 then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"Separate_Suffix cannot be empty\",\n-                  Sep_Suffix.Location, Data);\n+                  Sep_Suffix.Location, Project);\n \n             else\n                Separate_Suffix := Canonical_Case_File_Name (Sep_Suffix.Value);\n@@ -2807,15 +2804,15 @@ package body Prj.Nmsc is\n \n                   if Source.Language /= Lang_Id then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"the same file cannot be a source of two languages\",\n-                        Element.Location, Data);\n+                        Element.Location, Project);\n \n                   elsif Source.Kind /= Kind then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"the same file cannot be a source and a template\",\n-                        Element.Location, Data);\n+                        Element.Location, Project);\n                   end if;\n \n                   --  If the file is already recorded for the same\n@@ -2896,9 +2893,9 @@ package body Prj.Nmsc is\n                if Unit = No_Name then\n                   Err_Vars.Error_Msg_Name_1 := Element.Index;\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"%% is not a valid unit name.\",\n-                     Element.Value.Location, Data);\n+                     Element.Value.Location, Project);\n                end if;\n             end if;\n \n@@ -3070,11 +3067,11 @@ package body Prj.Nmsc is\n                        Lang_Id.Config.Naming_Data.Body_Suffix\n             then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"Body_Suffix (\"\"\"\n                   & Get_Name_String (Lang_Id.Config.Naming_Data.Body_Suffix)\n                   & \"\"\") cannot be the same as Spec_Suffix.\",\n-                  Ada_Body_Suffix_Loc, Data);\n+                  Ada_Body_Suffix_Loc, Project);\n             end if;\n \n             if Lang_Id.Config.Naming_Data.Body_Suffix /=\n@@ -3083,12 +3080,12 @@ package body Prj.Nmsc is\n                        Lang_Id.Config.Naming_Data.Separate_Suffix\n             then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"Separate_Suffix (\"\"\"\n                   & Get_Name_String\n                     (Lang_Id.Config.Naming_Data.Separate_Suffix)\n                   & \"\"\") cannot be the same as Spec_Suffix.\",\n-                  Sep_Suffix_Loc, Data);\n+                  Sep_Suffix_Loc, Project);\n             end if;\n \n             Lang_Id := Lang_Id.Next;\n@@ -3318,23 +3315,23 @@ package body Prj.Nmsc is\n                   if Extends then\n                      if Project.Library_Kind /= Static then\n                         Error_Msg\n-                          (Project,\n+                          (Data.Flags,\n                            Continuation.all &\n                            \"shared library project %% cannot extend \" &\n                            \"project %% that is not a library project\",\n-                           Project.Location, Data);\n+                           Project.Location, Project);\n                         Continuation := Continuation_String'Access;\n                      end if;\n \n                   elsif (not Unchecked_Shared_Lib_Imports)\n                         and then Project.Library_Kind /= Static\n                   then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         Continuation.all &\n                         \"shared library project %% cannot import project %% \" &\n                         \"that is not a shared library project\",\n-                        Project.Location, Data);\n+                        Project.Location, Project);\n                      Continuation := Continuation_String'Access;\n                   end if;\n                end if;\n@@ -3347,20 +3344,20 @@ package body Prj.Nmsc is\n \n                if Extends then\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      Continuation.all &\n                      \"shared library project %% cannot extend static \" &\n                      \"library project %%\",\n-                     Project.Location, Data);\n+                     Project.Location, Project);\n                   Continuation := Continuation_String'Access;\n \n                elsif not Unchecked_Shared_Lib_Imports then\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      Continuation.all &\n                      \"shared library project %% cannot import static \" &\n                      \"library project %%\",\n-                     Project.Location, Data);\n+                     Project.Location, Project);\n                   Continuation := Continuation_String'Access;\n                end if;\n \n@@ -3386,9 +3383,9 @@ package body Prj.Nmsc is\n          if Project.Extends.Library then\n             if Project.Qualifier = Standard then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"a standard project cannot extend a library project\",\n-                  Project.Location, Data);\n+                  Project.Location, Project);\n \n             else\n                if Lib_Name.Default then\n@@ -3398,10 +3395,10 @@ package body Prj.Nmsc is\n                if Lib_Dir.Default then\n                   if not Project.Virtual then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"a project extending a library project must \" &\n                         \"specify an attribute Library_Dir\",\n-                        Project.Location, Data);\n+                        Project.Location, Project);\n \n                   else\n                      --  For a virtual project extending a library project,\n@@ -3473,19 +3470,19 @@ package body Prj.Nmsc is\n                Err_Vars.Error_Msg_File_1 :=\n                  File_Name_Type (Project.Library_Dir.Display_Name);\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"library directory { does not exist\",\n-                  Lib_Dir.Location, Data);\n+                  Lib_Dir.Location, Project);\n \n                --  The library directory cannot be the same as the Object\n                --  directory.\n \n             elsif Project.Library_Dir.Name = Project.Object_Directory.Name then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"library directory cannot be the same \" &\n                   \"as object directory\",\n-                  Lib_Dir.Location, Data);\n+                  Lib_Dir.Location, Project);\n                Project.Library_Dir := No_Path_Information;\n \n             else\n@@ -3510,10 +3507,10 @@ package body Prj.Nmsc is\n                         Err_Vars.Error_Msg_File_1 :=\n                           File_Name_Type (Dir_Elem.Value);\n                         Error_Msg\n-                          (Project,\n+                          (Data.Flags,\n                            \"library directory cannot be the same \" &\n                            \"as source directory {\",\n-                           Lib_Dir.Location, Data);\n+                           Lib_Dir.Location, Project);\n                         OK := False;\n                         exit;\n                      end if;\n@@ -3544,10 +3541,10 @@ package body Prj.Nmsc is\n                                  Err_Vars.Error_Msg_Name_1 := Pid.Project.Name;\n \n                                  Error_Msg\n-                                   (Project,\n+                                   (Data.Flags,\n                                     \"library directory cannot be the same \" &\n                                     \"as source directory { of project %%\",\n-                                    Lib_Dir.Location, Data);\n+                                    Lib_Dir.Location, Project);\n                                  OK := False;\n                                  exit Project_Loop;\n                               end if;\n@@ -3584,25 +3581,25 @@ package body Prj.Nmsc is\n             when Standard =>\n                if Project.Library then\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"a standard project cannot be a library project\",\n-                     Lib_Name.Location, Data);\n+                     Lib_Name.Location, Project);\n                end if;\n \n             when Library =>\n                if not Project.Library then\n                   if Project.Library_Dir = No_Path_Information then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"\\attribute Library_Dir not declared\",\n-                        Project.Location, Data);\n+                        Project.Location, Project);\n                   end if;\n \n                   if Project.Library_Name = No_Name then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"\\attribute Library_Name not declared\",\n-                        Project.Location, Data);\n+                        Project.Location, Project);\n                   end if;\n                end if;\n \n@@ -3617,9 +3614,9 @@ package body Prj.Nmsc is\n \n          if Support_For_Libraries = Prj.None then\n             Error_Msg\n-              (Project,\n+              (Data.Flags,\n                \"?libraries are not supported on this platform\",\n-               Lib_Name.Location, Data);\n+               Lib_Name.Location, Project);\n             Project.Library := False;\n \n          else\n@@ -3652,9 +3649,9 @@ package body Prj.Nmsc is\n                   Err_Vars.Error_Msg_File_1 :=\n                     File_Name_Type (Project.Library_ALI_Dir.Display_Name);\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"library 'A'L'I directory { does not exist\",\n-                     Lib_ALI_Dir.Location, Data);\n+                     Lib_ALI_Dir.Location, Project);\n                end if;\n \n                if Project.Library_ALI_Dir /= Project.Library_Dir then\n@@ -3664,10 +3661,10 @@ package body Prj.Nmsc is\n \n                   if Project.Library_ALI_Dir = Project.Object_Directory then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"library 'A'L'I directory cannot be the same \" &\n                         \"as object directory\",\n-                        Lib_ALI_Dir.Location, Data);\n+                        Lib_ALI_Dir.Location, Project);\n                      Project.Library_ALI_Dir := No_Path_Information;\n \n                   else\n@@ -3693,10 +3690,10 @@ package body Prj.Nmsc is\n                               Err_Vars.Error_Msg_File_1 :=\n                                 File_Name_Type (Dir_Elem.Value);\n                               Error_Msg\n-                                (Project,\n+                                (Data.Flags,\n                                  \"library 'A'L'I directory cannot be \" &\n                                  \"the same as source directory {\",\n-                                 Lib_ALI_Dir.Location, Data);\n+                                 Lib_ALI_Dir.Location, Project);\n                               OK := False;\n                               exit;\n                            end if;\n@@ -3730,11 +3727,11 @@ package body Prj.Nmsc is\n                                          Pid.Project.Name;\n \n                                        Error_Msg\n-                                         (Project,\n+                                         (Data.Flags,\n                                           \"library 'A'L'I directory cannot \" &\n                                           \"be the same as source directory \" &\n                                           \"{ of project %%\",\n-                                          Lib_ALI_Dir.Location, Data);\n+                                          Lib_ALI_Dir.Location, Project);\n                                        OK := False;\n                                        exit ALI_Project_Loop;\n                                     end if;\n@@ -3800,9 +3797,9 @@ package body Prj.Nmsc is\n \n                   else\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"illegal value for Library_Kind\",\n-                        The_Lib_Kind.Location, Data);\n+                        The_Lib_Kind.Location, Project);\n                      OK := False;\n                   end if;\n \n@@ -3813,10 +3810,10 @@ package body Prj.Nmsc is\n                   if Project.Library_Kind /= Static then\n                      if Support_For_Libraries = Prj.Static_Only then\n                         Error_Msg\n-                          (Project,\n+                          (Data.Flags,\n                            \"only static libraries are supported \" &\n                            \"on this platform\",\n-                           The_Lib_Kind.Location, Data);\n+                           The_Lib_Kind.Location, Project);\n                         Project.Library := False;\n \n                      else\n@@ -3825,10 +3822,10 @@ package body Prj.Nmsc is\n \n                         if Lib_GCC.Value /= Empty_String then\n                            Error_Msg\n-                             (Project,\n+                             (Data.Flags,\n                               \"?Library_'G'C'C is an obsolescent attribute, \" &\n                               \"use Linker''Driver instead\",\n-                              Lib_GCC.Location, Data);\n+                              Lib_GCC.Location, Project);\n                            Project.Config.Shared_Lib_Driver :=\n                              File_Name_Type (Lib_GCC.Value);\n \n@@ -3913,10 +3910,10 @@ package body Prj.Nmsc is\n \n                if Switches /= No_Array_Element then\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"?Linker switches not taken into account in library \" &\n                      \"projects\",\n-                     No_Location, Data);\n+                     No_Location, Project);\n                end if;\n             end if;\n          end;\n@@ -3994,9 +3991,9 @@ package body Prj.Nmsc is\n \n             if Def_Lang.Default then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"no languages defined for this project\",\n-                  Project.Location, Data);\n+                  Project.Location, Project);\n                Def_Lang_Id := No_Name;\n \n             else\n@@ -4026,9 +4023,9 @@ package body Prj.Nmsc is\n \n                   if Project.Qualifier = Standard then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"a standard project must have at least one language\",\n-                        Languages.Location, Data);\n+                        Languages.Location, Project);\n                   end if;\n \n                else\n@@ -4123,9 +4120,9 @@ package body Prj.Nmsc is\n \n             if Interfaces = Nil_String then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"Library_Interface cannot be an empty list\",\n-                  Lib_Interfaces.Location, Data);\n+                  Lib_Interfaces.Location, Project);\n             end if;\n \n             --  Process each unit name specified in the attribute\n@@ -4138,10 +4135,10 @@ package body Prj.Nmsc is\n \n                if Name_Len = 0 then\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"an interface cannot be an empty string\",\n                      Data.Tree.String_Elements.Table (Interfaces).Location,\n-                     Data);\n+                     Project);\n \n                else\n                   Unit := Name_Find;\n@@ -4187,10 +4184,10 @@ package body Prj.Nmsc is\n \n                   if Source = No_Source then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"%% is not a unit of this project\",\n                         Data.Tree.String_Elements.Table\n-                          (Interfaces).Location, Data);\n+                          (Interfaces).Location, Project);\n \n                   else\n                      if Source.Kind = Spec\n@@ -4253,17 +4250,17 @@ package body Prj.Nmsc is\n                      --  supported.\n \n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"library auto init not supported \" &\n                         \"on this platform\",\n-                        Lib_Auto_Init.Location, Data);\n+                        Lib_Auto_Init.Location, Project);\n                   end if;\n \n                else\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"invalid value for attribute Library_Auto_Init\",\n-                     Lib_Auto_Init.Location, Data);\n+                     Lib_Auto_Init.Location, Project);\n                end if;\n             end if;\n          end;\n@@ -4302,18 +4299,18 @@ package body Prj.Nmsc is\n                   Err_Vars.Error_Msg_File_1 :=\n                     File_Name_Type (Project.Library_Src_Dir.Display_Name);\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"Directory { does not exist\",\n-                     Lib_Src_Dir.Location, Data);\n+                     Lib_Src_Dir.Location, Project);\n \n                   --  Report error if it is the same as the object directory\n \n                elsif Project.Library_Src_Dir = Project.Object_Directory then\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"directory to copy interfaces cannot be \" &\n                      \"the object directory\",\n-                     Lib_Src_Dir.Location, Data);\n+                     Lib_Src_Dir.Location, Project);\n                   Project.Library_Src_Dir := No_Path_Information;\n \n                else\n@@ -4336,10 +4333,10 @@ package body Prj.Nmsc is\n                              Path_Name_Type (Src_Dir.Value)\n                         then\n                            Error_Msg\n-                             (Project,\n+                             (Data.Flags,\n                               \"directory to copy interfaces cannot \" &\n                               \"be one of the source directories\",\n-                              Lib_Src_Dir.Location, Data);\n+                              Lib_Src_Dir.Location, Project);\n                            Project.Library_Src_Dir := No_Path_Information;\n                            exit;\n                         end if;\n@@ -4371,11 +4368,11 @@ package body Prj.Nmsc is\n                                    File_Name_Type (Src_Dir.Value);\n                                  Error_Msg_Name_1 := Pid.Project.Name;\n                                  Error_Msg\n-                                   (Project,\n+                                   (Data.Flags,\n                                     \"directory to copy interfaces cannot \" &\n                                     \"be the same as source directory { of \" &\n                                     \"project %%\",\n-                                    Lib_Src_Dir.Location, Data);\n+                                    Lib_Src_Dir.Location, Project);\n                                  Project.Library_Src_Dir :=\n                                    No_Path_Information;\n                                  exit Project_Loop;\n@@ -4433,9 +4430,9 @@ package body Prj.Nmsc is\n \n                else\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"illegal value for Library_Symbol_Policy\",\n-                     Lib_Symbol_Policy.Location, Data);\n+                     Lib_Symbol_Policy.Location, Project);\n                end if;\n             end;\n          end if;\n@@ -4446,10 +4443,10 @@ package body Prj.Nmsc is\n          if Lib_Symbol_File.Default then\n             if Project.Symbol_Data.Symbol_Policy = Restricted then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"Library_Symbol_File needs to be defined when \" &\n                   \"symbol policy is Restricted\",\n-                  Lib_Symbol_Policy.Location, Data);\n+                  Lib_Symbol_Policy.Location, Project);\n             end if;\n \n          else\n@@ -4462,9 +4459,9 @@ package body Prj.Nmsc is\n \n             if Name_Len = 0 then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"symbol file name cannot be an empty string\",\n-                  Lib_Symbol_File.Location, Data);\n+                  Lib_Symbol_File.Location, Project);\n \n             else\n                OK := not Is_Absolute_Path (Name_Buffer (1 .. Name_Len));\n@@ -4483,10 +4480,10 @@ package body Prj.Nmsc is\n                if not OK then\n                   Error_Msg_File_1 := File_Name_Type (Lib_Symbol_File.Value);\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"symbol file name { is illegal. \" &\n                      \"Name cannot include directory info.\",\n-                     Lib_Symbol_File.Location, Data);\n+                     Lib_Symbol_File.Location, Project);\n                end if;\n             end if;\n          end if;\n@@ -4499,9 +4496,9 @@ package body Prj.Nmsc is\n               or else Project.Symbol_Data.Symbol_Policy = Controlled\n             then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"a reference symbol file needs to be defined\",\n-                  Lib_Symbol_Policy.Location, Data);\n+                  Lib_Symbol_Policy.Location, Project);\n             end if;\n \n          else\n@@ -4514,9 +4511,9 @@ package body Prj.Nmsc is\n \n             if Name_Len = 0 then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"reference symbol file name cannot be an empty string\",\n-                  Lib_Symbol_File.Location, Data);\n+                  Lib_Symbol_File.Location, Project);\n \n             else\n                if not Is_Absolute_Path (Name_Buffer (1 .. Name_Len)) then\n@@ -4543,9 +4540,9 @@ package body Prj.Nmsc is\n                     and then Project.Symbol_Data.Symbol_Policy /= Direct;\n \n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"<library reference symbol file { does not exist\",\n-                     Lib_Ref_Symbol_File.Location, Data);\n+                     Lib_Ref_Symbol_File.Location, Project);\n \n                   --  In addition in the non-controlled case, if symbol policy\n                   --  is Compliant, it is changed to Autonomous, because there\n@@ -4589,10 +4586,10 @@ package body Prj.Nmsc is\n                      begin\n                         if Symb_Path = Ref_Path then\n                            Error_Msg\n-                             (Project,\n+                             (Data.Flags,\n                               \"library reference symbol file and library\" &\n                               \" symbol file cannot be the same file\",\n-                              Lib_Ref_Symbol_File.Location, Data);\n+                              Lib_Ref_Symbol_File.Location, Project);\n                         end if;\n                      end;\n                   end if;\n@@ -4619,171 +4616,6 @@ package body Prj.Nmsc is\n       end if;\n    end Compute_Directory_Last;\n \n-   ---------------\n-   -- Error_Msg --\n-   ---------------\n-\n-   procedure Error_Msg\n-     (Project       : Project_Id;\n-      Msg           : String;\n-      Flag_Location : Source_Ptr;\n-      Data          : Tree_Processing_Data)\n-   is\n-      Real_Location : Source_Ptr := Flag_Location;\n-      Error_Buffer  : String (1 .. 5_000);\n-      Error_Last    : Natural := 0;\n-      Name_Number   : Natural := 0;\n-      File_Number   : Natural := 0;\n-      First         : Positive := Msg'First;\n-      Index         : Positive;\n-\n-      procedure Add (C : Character);\n-      --  Add a character to the buffer\n-\n-      procedure Add (S : String);\n-      --  Add a string to the buffer\n-\n-      procedure Add_Name;\n-      --  Add a name to the buffer\n-\n-      procedure Add_File;\n-      --  Add a file name to the buffer\n-\n-      ---------\n-      -- Add --\n-      ---------\n-\n-      procedure Add (C : Character) is\n-      begin\n-         Error_Last := Error_Last + 1;\n-         Error_Buffer (Error_Last) := C;\n-      end Add;\n-\n-      procedure Add (S : String) is\n-      begin\n-         Error_Buffer (Error_Last + 1 .. Error_Last + S'Length) := S;\n-         Error_Last := Error_Last + S'Length;\n-      end Add;\n-\n-      --------------\n-      -- Add_File --\n-      --------------\n-\n-      procedure Add_File is\n-         File : File_Name_Type;\n-\n-      begin\n-         Add ('\"');\n-         File_Number := File_Number + 1;\n-\n-         case File_Number is\n-            when 1 =>\n-               File := Err_Vars.Error_Msg_File_1;\n-            when 2 =>\n-               File := Err_Vars.Error_Msg_File_2;\n-            when 3 =>\n-               File := Err_Vars.Error_Msg_File_3;\n-            when others =>\n-               null;\n-         end case;\n-\n-         Get_Name_String (File);\n-         Add (Name_Buffer (1 .. Name_Len));\n-         Add ('\"');\n-      end Add_File;\n-\n-      --------------\n-      -- Add_Name --\n-      --------------\n-\n-      procedure Add_Name is\n-         Name : Name_Id;\n-\n-      begin\n-         Add ('\"');\n-         Name_Number := Name_Number + 1;\n-\n-         case Name_Number is\n-            when 1 =>\n-               Name := Err_Vars.Error_Msg_Name_1;\n-            when 2 =>\n-               Name := Err_Vars.Error_Msg_Name_2;\n-            when 3 =>\n-               Name := Err_Vars.Error_Msg_Name_3;\n-            when others =>\n-               null;\n-         end case;\n-\n-         Get_Name_String (Name);\n-         Add (Name_Buffer (1 .. Name_Len));\n-         Add ('\"');\n-      end Add_Name;\n-\n-   --  Start of processing for Error_Msg\n-\n-   begin\n-      --  Display the error message in the traces so that it appears in the\n-      --  correct location in the traces (otherwise error messages are only\n-      --  displayed at the end and it is difficult to see when they were\n-      --  triggered)\n-\n-      if Current_Verbosity = High then\n-         Write_Line (\"ERROR: \" & Msg);\n-      end if;\n-\n-      --  If location of error is unknown, use the location of the project\n-\n-      if Real_Location = No_Location then\n-         Real_Location := Project.Location;\n-      end if;\n-\n-      if Data.Flags.Report_Error = null then\n-         Prj.Err.Error_Msg (Msg, Real_Location);\n-         return;\n-      end if;\n-\n-      --  Ignore continuation character\n-\n-      if Msg (First) = '\\' then\n-         First := First + 1;\n-      end if;\n-\n-      if Msg (First) = '?' then\n-         First := First + 1;\n-         Add (\"Warning: \");\n-\n-      elsif Msg (First) = '<' then\n-         First := First + 1;\n-\n-         if Err_Vars.Error_Msg_Warn then\n-            Add (\"Warning: \");\n-         end if;\n-      end if;\n-\n-      Index := First;\n-      while Index <= Msg'Last loop\n-         if Msg (Index) = '{' then\n-            Add_File;\n-\n-         elsif Msg (Index) = '%' then\n-            if Index < Msg'Last and then Msg (Index + 1) = '%' then\n-               Index := Index + 1;\n-            end if;\n-\n-            Add_Name;\n-\n-         else\n-            Add (Msg (Index));\n-         end if;\n-\n-         Index := Index + 1;\n-\n-      end loop;\n-\n-      Data.Flags.Report_Error\n-        (Error_Buffer (1 .. Error_Last), Project, Data.Tree);\n-   end Error_Msg;\n-\n    ---------------------\n    -- Get_Directories --\n    ---------------------\n@@ -5078,14 +4910,14 @@ package body Prj.Nmsc is\n \n                   if Location = No_Location then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"{ is not a valid directory.\",\n-                        Project.Location, Data);\n+                        Project.Location, Project);\n                   else\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"{ is not a valid directory.\",\n-                        Location, Data);\n+                        Location, Project);\n                   end if;\n \n                else\n@@ -5129,14 +4961,14 @@ package body Prj.Nmsc is\n \n                   if Location = No_Location then\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"{ is not a valid directory\",\n-                        Project.Location, Data);\n+                        Project.Location, Project);\n                   else\n                      Error_Msg\n-                       (Project,\n+                       (Data.Flags,\n                         \"{ is not a valid directory\",\n-                        Location, Data);\n+                        Location, Project);\n                   end if;\n \n                else\n@@ -5271,9 +5103,9 @@ package body Prj.Nmsc is\n \n          if Name_Len = 0 then\n             Error_Msg\n-              (Project,\n+              (Data.Flags,\n                \"Object_Dir cannot be empty\",\n-               Object_Dir.Location, Data);\n+               Object_Dir.Location, Project);\n \n          else\n             --  We check that the specified object directory does exist.\n@@ -5302,9 +5134,9 @@ package body Prj.Nmsc is\n                Err_Vars.Error_Msg_File_1 :=\n                  File_Name_Type (Object_Dir.Value);\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"object directory { not found\",\n-                  Project.Location, Data);\n+                  Project.Location, Project);\n             end if;\n          end if;\n \n@@ -5345,9 +5177,9 @@ package body Prj.Nmsc is\n \n          if Name_Len = 0 then\n             Error_Msg\n-              (Project,\n+              (Data.Flags,\n                \"Exec_Dir cannot be empty\",\n-               Exec_Dir.Location, Data);\n+               Exec_Dir.Location, Project);\n \n          else\n             --  We check that the specified exec directory does exist\n@@ -5365,9 +5197,9 @@ package body Prj.Nmsc is\n             if not Dir_Exists then\n                Err_Vars.Error_Msg_File_1 := File_Name_Type (Exec_Dir.Value);\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"exec directory { not found\",\n-                  Project.Location, Data);\n+                  Project.Location, Project);\n             end if;\n          end if;\n       end if;\n@@ -5397,9 +5229,9 @@ package body Prj.Nmsc is\n \n          if Project.Qualifier = Standard then\n             Error_Msg\n-              (Project,\n+              (Data.Flags,\n                \"a standard project cannot have no sources\",\n-               Source_Files.Location, Data);\n+               Source_Files.Location, Project);\n          end if;\n \n       elsif Source_Dirs.Default then\n@@ -5427,9 +5259,9 @@ package body Prj.Nmsc is\n       elsif Source_Dirs.Values = Nil_String then\n          if Project.Qualifier = Standard then\n             Error_Msg\n-              (Project,\n+              (Data.Flags,\n                \"a standard project cannot have no source directories\",\n-               Source_Dirs.Location, Data);\n+               Source_Dirs.Location, Project);\n          end if;\n \n          Project.Source_Dirs := Nil_String;\n@@ -5525,9 +5357,9 @@ package body Prj.Nmsc is\n \n       elsif Project.Library then\n          Error_Msg\n-           (Project,\n+           (Data.Flags,\n             \"a library project file cannot have Main specified\",\n-            Mains.Location, Data);\n+            Mains.Location, Project);\n \n       else\n          List := Mains.Values;\n@@ -5536,9 +5368,9 @@ package body Prj.Nmsc is\n \n             if Length_Of_Name (Elem.Value) = 0 then\n                Error_Msg\n-                 (Project,\n+                 (Data.Flags,\n                   \"?a main cannot have an empty name\",\n-                  Elem.Location, Data);\n+                  Elem.Location, Project);\n                exit;\n             end if;\n \n@@ -5575,7 +5407,8 @@ package body Prj.Nmsc is\n       Prj.Util.Open (File, Path);\n \n       if not Prj.Util.Is_Valid (File) then\n-         Error_Msg (Project.Project, \"file does not exist\", Location, Data);\n+         Error_Msg\n+           (Data.Flags, \"file does not exist\", Location, Project.Project);\n \n       else\n          --  Read the lines one by one\n@@ -5599,9 +5432,9 @@ package body Prj.Nmsc is\n                   if Line (J) = '/' or else Line (J) = Directory_Separator then\n                      Error_Msg_File_1 := Source_Name;\n                      Error_Msg\n-                       (Project.Project,\n+                       (Data.Flags,\n                         \"file name cannot include directory information ({)\",\n-                        Location, Data);\n+                        Location, Project.Project);\n                      exit;\n                   end if;\n                end loop;\n@@ -5889,9 +5722,9 @@ package body Prj.Nmsc is\n       elsif Index (Suffix_Str, \".\") = 0 then\n          Err_Vars.Error_Msg_File_1 := Suffix;\n          Error_Msg\n-           (Project,\n+           (Data.Flags,\n             \"{ is illegal for \" & Attribute_Name & \": must have a dot\",\n-            Location, Data);\n+            Location, Project);\n          return;\n       end if;\n \n@@ -5913,10 +5746,10 @@ package body Prj.Nmsc is\n                if Is_Letter (Suffix_Str (Suffix_Str'First + 1)) then\n                   Err_Vars.Error_Msg_File_1 := Suffix;\n                   Error_Msg\n-                    (Project,\n+                    (Data.Flags,\n                      \"{ is illegal for \" & Attribute_Name\n                      & \": ambiguous prefix when Dot_Replacement is a dot\",\n-                     Location, Data);\n+                     Location, Project);\n                end if;\n                return;\n             end if;\n@@ -6035,10 +5868,10 @@ package body Prj.Nmsc is\n                   exception\n                      when Use_Error =>\n                         Error_Msg\n-                          (Project,\n+                          (Data.Flags,\n                            \"could not create \" & Create &\n                            \" directory \" & Full_Path_Name.all,\n-                           Location, Data);\n+                           Location, Project);\n                   end;\n                end if;\n             end if;\n@@ -6137,16 +5970,16 @@ package body Prj.Nmsc is\n          if not Excluded_Source_List_File.Default then\n             if Locally_Removed then\n                Error_Msg\n-                 (Project.Project,\n+                 (Data.Flags,\n                   \"?both attributes Locally_Removed_Files and \" &\n                   \"Excluded_Source_List_File are present\",\n-                  Excluded_Source_List_File.Location, Data);\n+                  Excluded_Source_List_File.Location, Project.Project);\n             else\n                Error_Msg\n-                 (Project.Project,\n+                 (Data.Flags,\n                   \"?both attributes Excluded_Source_Files and \" &\n                   \"Excluded_Source_List_File are present\",\n-                  Excluded_Source_List_File.Location, Data);\n+                  Excluded_Source_List_File.Location, Project.Project);\n             end if;\n          end if;\n \n@@ -6184,9 +6017,9 @@ package body Prj.Nmsc is\n                Err_Vars.Error_Msg_File_1 :=\n                  File_Name_Type (Excluded_Source_List_File.Value);\n                Error_Msg\n-                 (Project.Project,\n+                 (Data.Flags,\n                   \"file with excluded sources { does not exist\",\n-                  Excluded_Source_List_File.Location, Data);\n+                  Excluded_Source_List_File.Location, Project.Project);\n \n             else\n                --  Open the file\n@@ -6195,7 +6028,8 @@ package body Prj.Nmsc is\n \n                if not Prj.Util.Is_Valid (File) then\n                   Error_Msg\n-                    (Project.Project, \"file does not exist\", Location, Data);\n+                    (Data.Flags, \"file does not exist\",\n+                     Location, Project.Project);\n                else\n                   --  Read the lines one by one\n \n@@ -6220,10 +6054,10 @@ package body Prj.Nmsc is\n                            then\n                               Error_Msg_File_1 := Name;\n                               Error_Msg\n-                                (Project.Project,\n+                                (Data.Flags,\n                                  \"file name cannot include \" &\n                                  \"directory information ({)\",\n-                                 Location, Data);\n+                                 Location, Project.Project);\n                               exit;\n                            end if;\n                         end loop;\n@@ -6276,10 +6110,10 @@ package body Prj.Nmsc is\n       if not Sources.Default then\n          if not Source_List_File.Default then\n             Error_Msg\n-              (Project.Project,\n+              (Data.Flags,\n                \"?both attributes source_files and \" &\n                \"source_list_file are present\",\n-               Source_List_File.Location, Data);\n+               Source_List_File.Location, Project.Project);\n          end if;\n \n          --  Sources is a list of file names\n@@ -6328,10 +6162,10 @@ package body Prj.Nmsc is\n                   then\n                      Error_Msg_File_1 := Name;\n                      Error_Msg\n-                       (Project.Project,\n+                       (Data.Flags,\n                         \"file name cannot include directory \" &\n                         \"information ({)\",\n-                        Location, Data);\n+                        Location, Project.Project);\n                      exit;\n                   end if;\n                end loop;\n@@ -6380,9 +6214,9 @@ package body Prj.Nmsc is\n                Err_Vars.Error_Msg_File_1 :=\n                  File_Name_Type (Source_List_File.Value);\n                Error_Msg\n-                 (Project.Project,\n+                 (Data.Flags,\n                   \"file with sources { does not exist\",\n-                  Source_List_File.Location, Data);\n+                  Source_List_File.Location, Project.Project);\n \n             else\n                Get_Sources_From_File\n@@ -6433,10 +6267,9 @@ package body Prj.Nmsc is\n                      Error_Msg_Name_1 := Name_Id (Source.Display_File);\n                      Error_Msg_Name_2 := Name_Id (Source.Unit.Name);\n                      Error_Msg\n-                       (Project.Project,\n+                       (Data.Flags,\n                         \"source file %% for unit %% not found\",\n-                        No_Location,\n-                        Data);\n+                        No_Location, Project.Project);\n \n                   else\n                      Source.Path := Files_Htable.Get\n@@ -6480,16 +6313,16 @@ package body Prj.Nmsc is\n \n                   if First_Error then\n                      Error_Msg\n-                       (Project.Project,\n+                       (Data.Flags,\n                         \"source file { not found\",\n-                        NL.Location, Data);\n+                        NL.Location, Project.Project);\n                      First_Error := False;\n \n                   else\n                      Error_Msg\n-                       (Project.Project,\n+                       (Data.Flags,\n                         \"\\source file { not found\",\n-                        NL.Location, Data);\n+                        NL.Location, Project.Project);\n                   end if;\n                end if;\n \n@@ -6751,9 +6584,9 @@ package body Prj.Nmsc is\n             if not Project.Project.Known_Order_Of_Source_Dirs then\n                Error_Msg_File_1 := File_Name;\n                Error_Msg\n-                 (Project.Project,\n+                 (Data.Flags,\n                   \"{ is found in several source directories\",\n-                  Name_Loc.Location, Data);\n+                  Name_Loc.Location, Project.Project);\n             end if;\n \n          else\n@@ -6813,9 +6646,9 @@ package body Prj.Nmsc is\n             then\n                Error_Msg_File_1 := File_Name;\n                Error_Msg\n-                 (Project.Project,\n+                 (Data.Flags,\n                   \"language unknown for {\",\n-                  Name_Loc.Location, Data);\n+                  Name_Loc.Location, Project.Project);\n             end if;\n \n          else\n@@ -6829,11 +6662,8 @@ package body Prj.Nmsc is\n                File_Name           => File_Name,\n                Display_File        => Display_File_Name,\n                Unit                => Unit,\n+               Locally_Removed     => Locally_Removed,\n                Path                => (Canonical_Path, Path));\n-\n-            if Source /= No_Source then\n-               Source.Locally_Removed := Locally_Removed;\n-            end if;\n          end if;\n       end if;\n    end Check_File;\n@@ -7014,9 +6844,9 @@ package body Prj.Nmsc is\n          then\n             Error_Msg_File_1 := Source.File;\n             Error_Msg\n-              (Project.Project,\n+              (Data.Flags,\n                \"{ cannot be both excluded and an exception file name\",\n-               No_Location, Data);\n+               No_Location, Project.Project);\n          end if;\n \n          if Current_Verbosity = High then\n@@ -7102,9 +6932,9 @@ package body Prj.Nmsc is\n             Error_Msg_File_1 := Src.File;\n             Error_Msg_File_2 := Source.File;\n             Error_Msg\n-              (Project.Project,\n+              (Data.Flags,\n                \"{ and { have the same object file name\",\n-               No_Location, Data);\n+               No_Location, Project.Project);\n \n          else\n             Object_File_Names_Htable.Set (Object_Files, Src.Object, Src);\n@@ -7180,13 +7010,13 @@ package body Prj.Nmsc is\n \n                if Src = No_Source then\n                   Error_Msg\n-                    (Project.Project,\n-                     \"unknown file {\", Excluded.Location, Data);\n+                    (Data.Flags,\n+                     \"unknown file {\", Excluded.Location, Project.Project);\n                else\n                   Error_Msg\n-                    (Project.Project,\n+                    (Data.Flags,\n                      \"cannot remove a source from an imported project: {\",\n-                     Excluded.Location, Data);\n+                     Excluded.Location, Project.Project);\n                end if;\n             end if;\n \n@@ -7371,9 +7201,9 @@ package body Prj.Nmsc is\n                Error_Msg_Warn := Data.Flags.When_No_Sources = Warning;\n \n                if Continuation then\n-                  Error_Msg (Project, \"\\\" & Msg, Location, Data);\n+                  Error_Msg (Data.Flags, \"\\\" & Msg, Location, Project);\n                else\n-                  Error_Msg (Project, Msg, Location, Data);\n+                  Error_Msg (Data.Flags, Msg, Location, Project);\n                end if;\n             end;\n       end case;"}, {"sha": "bacbf8d7f87aff569366f3ea2f05fa3b73d0d202", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -68,6 +68,7 @@ package body Prj.Pars is\n          Always_Errout_Finalize => False,\n          Packages_To_Check      => Packages_To_Check,\n          Current_Directory      => Current_Dir,\n+         Flags                  => Flags,\n          Is_Config_File         => False);\n \n       --  If there were no error, process the tree"}, {"sha": "8a0f6a52c15d9aec95958607f66bc616a34d3fbf", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 70, "deletions": 44, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -165,7 +165,8 @@ package body Prj.Part is\n       Packages_To_Check : String_List_Access;\n       Depth             : Natural;\n       Current_Dir       : String;\n-      Is_Config_File    : Boolean);\n+      Is_Config_File    : Boolean;\n+      Flags             : Processing_Flags);\n    --  Parse a project file. This is a recursive procedure: it calls itself for\n    --  imported and extended projects. When From_Extended is not None, if the\n    --  project has already been parsed and is an extended project A, return the\n@@ -179,7 +180,8 @@ package body Prj.Part is\n    procedure Pre_Parse_Context_Clause\n      (In_Tree        : Project_Node_Tree_Ref;\n       Context_Clause : out With_Id;\n-      Is_Config_File : Boolean);\n+      Is_Config_File : Boolean;\n+      Flags          : Processing_Flags);\n    --  Parse the context clause of a project. Store the paths and locations of\n    --  the imported projects in table Withs. Does nothing if there is no\n    --  context clause (if the current token is not \"with\" or \"limited\" followed\n@@ -198,7 +200,8 @@ package body Prj.Part is\n       Packages_To_Check : String_List_Access;\n       Depth             : Natural;\n       Current_Dir       : String;\n-      Is_Config_File    : Boolean);\n+      Is_Config_File    : Boolean;\n+      Flags             : Processing_Flags);\n    --  Parse the imported projects that have been stored in table Withs, if\n    --  any. From_Extended is used for the call to Parse_Single_Project below.\n    --  When In_Limited is True, the importing path includes at least one\n@@ -431,7 +434,8 @@ package body Prj.Part is\n       Packages_To_Check      : String_List_Access := All_Packages;\n       Store_Comments         : Boolean := False;\n       Current_Directory      : String := \"\";\n-      Is_Config_File         : Boolean)\n+      Is_Config_File         : Boolean;\n+      Flags                  : Processing_Flags)\n    is\n       Dummy : Boolean;\n       pragma Warnings (Off, Dummy);\n@@ -490,7 +494,8 @@ package body Prj.Part is\n             Packages_To_Check => Packages_To_Check,\n             Depth             => 0,\n             Current_Dir       => Current_Directory,\n-            Is_Config_File    => Is_Config_File);\n+            Is_Config_File    => Is_Config_File,\n+            Flags             => Flags);\n \n          --  If Project is an extending-all project, create the eventual\n          --  virtual extending projects and check that there are no illegally\n@@ -600,7 +605,8 @@ package body Prj.Part is\n    procedure Pre_Parse_Context_Clause\n      (In_Tree        : Project_Node_Tree_Ref;\n       Context_Clause : out With_Id;\n-      Is_Config_File : Boolean)\n+      Is_Config_File : Boolean;\n+      Flags          : Processing_Flags)\n    is\n       Current_With_Clause : With_Id := No_With;\n       Limited_With        : Boolean := False;\n@@ -623,7 +629,8 @@ package body Prj.Part is\n \n          if Is_Config_File then\n             Error_Msg\n-              (\"configuration project cannot import \" &\n+              (Flags,\n+               \"configuration project cannot import \" &\n                \"other configuration projects\",\n                Token_Ptr);\n          end if;\n@@ -680,7 +687,7 @@ package body Prj.Part is\n                Set_Is_Not_Last_In_List (Current_With_Node, In_Tree);\n \n             else\n-               Error_Msg (\"expected comma or semi colon\", Token_Ptr);\n+               Error_Msg (Flags, \"expected comma or semi colon\", Token_Ptr);\n                exit Comma_Loop;\n             end if;\n \n@@ -706,7 +713,8 @@ package body Prj.Part is\n       Packages_To_Check : String_List_Access;\n       Depth             : Natural;\n       Current_Dir       : String;\n-      Is_Config_File    : Boolean)\n+      Is_Config_File    : Boolean;\n+      Flags             : Processing_Flags)\n    is\n       Current_With_Clause : With_Id := Context_Clause;\n \n@@ -763,7 +771,7 @@ package body Prj.Part is\n \n                   Error_Msg_File_1 := File_Name_Type (Current_With.Path);\n                   Error_Msg\n-                    (\"unknown project file: {\", Current_With.Location);\n+                    (Flags, \"unknown project file: {\", Current_With.Location);\n \n                   --  If this is not imported by the main project file, display\n                   --  the import path.\n@@ -774,7 +782,7 @@ package body Prj.Part is\n                           File_Name_Type\n                             (Project_Stack.Table (Index).Path_Name);\n                         Error_Msg\n-                          (\"\\imported by {\", Current_With.Location);\n+                          (Flags, \"\\imported by {\", Current_With.Location);\n                      end loop;\n                   end if;\n \n@@ -846,7 +854,8 @@ package body Prj.Part is\n                         Packages_To_Check => Packages_To_Check,\n                         Depth             => Depth,\n                         Current_Dir       => Current_Dir,\n-                        Is_Config_File    => Is_Config_File);\n+                        Is_Config_File    => Is_Config_File,\n+                        Flags             => Flags);\n \n                   else\n                      Extends_All := Is_Extending_All (Withed_Project, In_Tree);\n@@ -908,7 +917,8 @@ package body Prj.Part is\n       Packages_To_Check : String_List_Access;\n       Depth             : Natural;\n       Current_Dir       : String;\n-      Is_Config_File    : Boolean)\n+      Is_Config_File    : Boolean;\n+      Flags             : Processing_Flags)\n    is\n       Normed_Path_Name    : Path_Name_Type;\n       Canonical_Path_Name : Path_Name_Type;\n@@ -971,9 +981,9 @@ package body Prj.Part is\n          if Canonical_Path_Name =\n               Project_Stack.Table (Index).Canonical_Path_Name\n          then\n-            Error_Msg (\"circular dependency detected\", Token_Ptr);\n+            Error_Msg (Flags, \"circular dependency detected\", Token_Ptr);\n             Error_Msg_Name_1 := Name_Id (Normed_Path_Name);\n-            Error_Msg (\"\\  %% is imported by\", Token_Ptr);\n+            Error_Msg (Flags, \"\\  %% is imported by\", Token_Ptr);\n \n             for Current in reverse 1 .. Project_Stack.Last loop\n                Error_Msg_Name_1 :=\n@@ -983,10 +993,10 @@ package body Prj.Part is\n                     Canonical_Path_Name\n                then\n                   Error_Msg\n-                    (\"\\  %% which itself is imported by\", Token_Ptr);\n+                    (Flags, \"\\  %% which itself is imported by\", Token_Ptr);\n \n                else\n-                  Error_Msg (\"\\  %%\", Token_Ptr);\n+                  Error_Msg (Flags, \"\\  %%\", Token_Ptr);\n                   exit;\n                end if;\n             end loop;\n@@ -1015,12 +1025,14 @@ package body Prj.Part is\n                if A_Project_Name_And_Node.Extended then\n                   if A_Project_Name_And_Node.Proj_Qualifier /= Dry then\n                      Error_Msg\n-                       (\"cannot extend the same project file several times\",\n+                       (Flags,\n+                        \"cannot extend the same project file several times\",\n                         Token_Ptr);\n                   end if;\n                else\n                   Error_Msg\n-                    (\"cannot extend an already imported project file\",\n+                    (Flags,\n+                     \"cannot extend an already imported project file\",\n                      Token_Ptr);\n                end if;\n \n@@ -1060,7 +1072,8 @@ package body Prj.Part is\n                   end;\n                else\n                   Error_Msg\n-                    (\"cannot import an already extended project file\",\n+                    (Flags,\n+                     \"cannot import an already extended project file\",\n                      Token_Ptr);\n                end if;\n             end if;\n@@ -1099,7 +1112,8 @@ package body Prj.Part is\n          --  following Ada identifier's syntax).\n \n          Error_Msg_File_1 := File_Name_Type (Canonical_Path_Name);\n-         Error_Msg (\"?{ is not a valid path name for a project file\",\n+         Error_Msg (Flags,\n+                    \"?{ is not a valid path name for a project file\",\n                     Token_Ptr);\n       end if;\n \n@@ -1118,7 +1132,8 @@ package body Prj.Part is\n       Pre_Parse_Context_Clause\n         (In_Tree        => In_Tree,\n          Is_Config_File => Is_Config_File,\n-         Context_Clause => First_With);\n+         Context_Clause => First_With,\n+         Flags          => Flags);\n \n       Project := Default_Project_Node\n                    (Of_Kind => N_Project, In_Tree => In_Tree);\n@@ -1157,9 +1172,11 @@ package body Prj.Part is\n \n             when Snames.Name_Configuration =>\n                if not Is_Config_File then\n-                  Error_Msg (\"configuration projects cannot belong to a user\" &\n-                             \" project tree\",\n-                             Token_Ptr);\n+                  Error_Msg\n+                    (Flags,\n+                     \"configuration projects cannot belong to a user\" &\n+                     \" project tree\",\n+                     Token_Ptr);\n                end if;\n \n                Proj_Qualifier := Configuration;\n@@ -1183,7 +1200,8 @@ package body Prj.Part is\n          if Is_Config_File\n            and then Proj_Qualifier /= Configuration\n          then\n-            Error_Msg (\"a configuration project cannot be qualified except \" &\n+            Error_Msg (Flags,\n+                       \"a configuration project cannot be qualified except \" &\n                        \"as configuration project\",\n                        Qualifier_Location);\n          end if;\n@@ -1242,7 +1260,8 @@ package body Prj.Part is\n \n          if Is_Config_File then\n             Error_Msg\n-              (\"extending configuration project not allowed\", Token_Ptr);\n+              (Flags,\n+               \"extending configuration project not allowed\", Token_Ptr);\n          end if;\n \n          --  Make sure that gnatmake will use mapping files\n@@ -1306,9 +1325,11 @@ package body Prj.Part is\n                   Extension := new String'(Project_File_Extension);\n                end if;\n \n-               Error_Msg (\"?file name does not match project name, \" &\n-                          \"should be `%%\" & Extension.all & \"`\",\n-                          Token_Ptr);\n+               Error_Msg\n+                 (Flags,\n+                  \"?file name does not match project name, should be `%%\"\n+                  & Extension.all & \"`\",\n+                  Token_Ptr);\n             end if;\n          end;\n \n@@ -1339,7 +1360,8 @@ package body Prj.Part is\n                Packages_To_Check => Packages_To_Check,\n                Depth             => Depth + 1,\n                Current_Dir       => Current_Dir,\n-               Is_Config_File    => Is_Config_File);\n+               Is_Config_File    => Is_Config_File,\n+               Flags             => Flags);\n             Set_First_With_Clause_Of (Project, In_Tree, Imported_Projects);\n          end;\n \n@@ -1368,12 +1390,12 @@ package body Prj.Part is\n                   Duplicated := True;\n                   Error_Msg_Name_1 := Project_Name;\n                   Error_Msg\n-                    (\"duplicate project name %%\",\n+                    (Flags, \"duplicate project name %%\",\n                      Location_Of (Project, In_Tree));\n                   Error_Msg_Name_1 :=\n                     Name_Id (Path_Name_Of (Name_And_Node.Node, In_Tree));\n                   Error_Msg\n-                    (\"\\already in %%\", Location_Of (Project, In_Tree));\n+                    (Flags, \"\\already in %%\", Location_Of (Project, In_Tree));\n                end if;\n             end;\n          end if;\n@@ -1406,7 +1428,7 @@ package body Prj.Part is\n \n                   Error_Msg_Name_1 := Token_Name;\n \n-                  Error_Msg (\"unknown project file: %%\", Token_Ptr);\n+                  Error_Msg (Flags, \"unknown project file: %%\", Token_Ptr);\n \n                   --  If we are not in the main project file, display the\n                   --  import path.\n@@ -1415,13 +1437,13 @@ package body Prj.Part is\n                      Error_Msg_Name_1 :=\n                        Name_Id\n                          (Project_Stack.Table (Project_Stack.Last).Path_Name);\n-                     Error_Msg (\"\\extended by %%\", Token_Ptr);\n+                     Error_Msg (Flags, \"\\extended by %%\", Token_Ptr);\n \n                      for Index in reverse 1 .. Project_Stack.Last - 1 loop\n                         Error_Msg_Name_1 :=\n                           Name_Id\n                             (Project_Stack.Table (Index).Path_Name);\n-                        Error_Msg (\"\\imported by %%\", Token_Ptr);\n+                        Error_Msg (Flags, \"\\imported by %%\", Token_Ptr);\n                      end loop;\n                   end if;\n \n@@ -1445,7 +1467,8 @@ package body Prj.Part is\n                         Packages_To_Check => Packages_To_Check,\n                         Depth             => Depth + 1,\n                         Current_Dir       => Current_Dir,\n-                        Is_Config_File    => Is_Config_File);\n+                        Is_Config_File    => Is_Config_File,\n+                        Flags             => Flags);\n                   end;\n \n                   if Present (Extended_Project) then\n@@ -1466,7 +1489,7 @@ package body Prj.Part is\n                        Project_Qualifier_Of (Extended_Project, In_Tree) /= Dry\n                      then\n                         Error_Msg\n-                          (\"an abstract project can only extend \" &\n+                          (Flags, \"an abstract project can only extend \" &\n                            \"another abstract project\",\n                            Qualifier_Location);\n                      end if;\n@@ -1494,7 +1517,7 @@ package body Prj.Part is\n \n                if Is_Extending_All (With_Clause, In_Tree) then\n                   Error_Msg_Name_1 := Name_Of (Imported, In_Tree);\n-                  Error_Msg (\"cannot import extending-all project %%\",\n+                  Error_Msg (Flags, \"cannot import extending-all project %%\",\n                              Token_Ptr);\n                   exit With_Clause_Loop;\n                end if;\n@@ -1559,7 +1582,8 @@ package body Prj.Part is\n \n                Error_Msg_Name_1 := Name_Of_Project;\n                Error_Msg_Name_2 := Parent_Name;\n-               Error_Msg (\"project %% does not import or extend project %%\",\n+               Error_Msg (Flags,\n+                          \"project %% does not import or extend project %%\",\n                           Location_Of (Project, In_Tree));\n             end if;\n          end;\n@@ -1582,7 +1606,8 @@ package body Prj.Part is\n             Current_Project   => Project,\n             Extends           => Extended_Project,\n             Packages_To_Check => Packages_To_Check,\n-            Is_Config_File    => Is_Config_File);\n+            Is_Config_File    => Is_Config_File,\n+            Flags             => Flags);\n          Set_Project_Declaration_Of (Project, In_Tree, Project_Declaration);\n \n          if Present (Extended_Project)\n@@ -1641,7 +1666,7 @@ package body Prj.Part is\n          then\n             --  Invalid name: report an error\n \n-            Error_Msg (\"expected \"\"\" &\n+            Error_Msg (Flags, \"expected \"\"\" &\n                        Get_Name_String (Name_Of (Project, In_Tree)) & \"\"\"\",\n                        Token_Ptr);\n          end if;\n@@ -1658,7 +1683,7 @@ package body Prj.Part is\n \n          if Token /= Tok_EOF then\n             Error_Msg\n-              (\"unexpected text following end of project\", Token_Ptr);\n+              (Flags, \"unexpected text following end of project\", Token_Ptr);\n          end if;\n       end if;\n \n@@ -1704,7 +1729,8 @@ package body Prj.Part is\n             Packages_To_Check => Packages_To_Check,\n             Depth             => Depth + 1,\n             Current_Dir       => Current_Dir,\n-            Is_Config_File    => Is_Config_File);\n+            Is_Config_File    => Is_Config_File,\n+            Flags             => Flags);\n          Set_First_With_Clause_Of (Project, In_Tree, Imported_Projects);\n       end;\n "}, {"sha": "4e9acee9d9e1b2ad77f3420c1c304a3703c72d17", "filename": "gcc/ada/prj-part.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-part.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-part.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.ads?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -37,7 +37,8 @@ package Prj.Part is\n       Packages_To_Check      : String_List_Access := All_Packages;\n       Store_Comments         : Boolean := False;\n       Current_Directory      : String := \"\";\n-      Is_Config_File         : Boolean);\n+      Is_Config_File         : Boolean;\n+      Flags                  : Processing_Flags);\n    --  Parse project file and all its imported project files and create a tree.\n    --  Return the node for the project (or Empty_Node if parsing failed). If\n    --  Always_Errout_Finalize is True, Errout.Finalize is called in all cases,"}, {"sha": "7986a9b4774af48b72465e12d108cffa49596ee0", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 46, "deletions": 96, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -101,7 +101,7 @@ package body Prj.Proc is\n    function Expression\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n-      Report_Error           : Put_Line_Access;\n+      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Pkg                    : Package_Id;\n@@ -124,7 +124,7 @@ package body Prj.Proc is\n    procedure Process_Declarative_Items\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n-      Report_Error           : Put_Line_Access;\n+      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Pkg                    : Package_Id;\n@@ -488,7 +488,7 @@ package body Prj.Proc is\n    function Expression\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n-      Report_Error           : Put_Line_Access;\n+      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Pkg                    : Package_Id;\n@@ -593,7 +593,7 @@ package body Prj.Proc is\n                      Value := Expression\n                        (Project                => Project,\n                         In_Tree                => In_Tree,\n-                        Report_Error           => Report_Error,\n+                        Flags                  => Flags,\n                         From_Project_Node      => From_Project_Node,\n                         From_Project_Node_Tree => From_Project_Node_Tree,\n                         Pkg                    => Pkg,\n@@ -643,7 +643,7 @@ package body Prj.Proc is\n                           Expression\n                             (Project                => Project,\n                              In_Tree                => In_Tree,\n-                             Report_Error           => Report_Error,\n+                             Flags                  => Flags,\n                              From_Project_Node      => From_Project_Node,\n                              From_Project_Node_Tree => From_Project_Node_Tree,\n                              Pkg                    => Pkg,\n@@ -1028,7 +1028,7 @@ package body Prj.Proc is\n                      Def_Var := Expression\n                        (Project                => Project,\n                         In_Tree                => In_Tree,\n-                        Report_Error           => Report_Error,\n+                        Flags                  => Flags,\n                         From_Project_Node      => From_Project_Node,\n                         From_Project_Node_Tree => From_Project_Node_Tree,\n                         Pkg                    => Pkg,\n@@ -1046,17 +1046,11 @@ package body Prj.Proc is\n \n                   if Value = No_Name then\n                      if not Quiet_Output then\n-                        if Report_Error = null then\n-                           Error_Msg\n-                             (\"?undefined external reference\",\n-                              Location_Of\n-                                (The_Current_Term, From_Project_Node_Tree));\n-                        else\n-                           Report_Error\n-                             (\"warning: \"\"\" & Get_Name_String (Name) &\n-                              \"\"\" is an undefined external reference\",\n-                              Project, In_Tree);\n-                        end if;\n+                        Error_Msg\n+                          (Flags, \"?undefined external reference\",\n+                           Location_Of\n+                             (The_Current_Term, From_Project_Node_Tree),\n+                           Project);\n                      end if;\n \n                      Value := Empty_String;\n@@ -1255,7 +1249,7 @@ package body Prj.Proc is\n    procedure Process_Declarative_Items\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n-      Report_Error           : Put_Line_Access;\n+      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Pkg                    : Package_Id;\n@@ -1391,7 +1385,7 @@ package body Prj.Proc is\n                         Process_Declarative_Items\n                           (Project                => Project,\n                            In_Tree                => In_Tree,\n-                           Report_Error           => Report_Error,\n+                           Flags                  => Flags,\n                            From_Project_Node      => From_Project_Node,\n                            From_Project_Node_Tree => From_Project_Node_Tree,\n                            Pkg                    => New_Pkg,\n@@ -1580,16 +1574,11 @@ package body Prj.Proc is\n                      end loop;\n \n                      if Orig_Array = No_Array then\n-                        if Report_Error = null then\n-                           Error_Msg\n-                             (\"associative array value not found\",\n-                              Location_Of\n-                                (Current_Item, From_Project_Node_Tree));\n-                        else\n-                           Report_Error\n-                             (\"associative array value not found\",\n-                              Project, In_Tree);\n-                        end if;\n+                        Error_Msg\n+                          (Flags,\n+                           \"associative array value not found\",\n+                           Location_Of (Current_Item, From_Project_Node_Tree),\n+                           Project);\n \n                      else\n                         Orig_Element :=\n@@ -1692,7 +1681,7 @@ package body Prj.Proc is\n                        Expression\n                          (Project                => Project,\n                           In_Tree                => In_Tree,\n-                          Report_Error           => Report_Error,\n+                          Flags                  => Flags,\n                           From_Project_Node      => From_Project_Node,\n                           From_Project_Node_Tree => From_Project_Node_Tree,\n                           Pkg                    => Pkg,\n@@ -1729,18 +1718,12 @@ package body Prj.Proc is\n                         if New_Value.Value = Empty_String then\n                            Error_Msg_Name_1 :=\n                              Name_Of (Current_Item, From_Project_Node_Tree);\n-\n-                           if Report_Error = null then\n-                              Error_Msg\n-                                (\"no value defined for %%\",\n-                                 Location_Of\n-                                   (Current_Item, From_Project_Node_Tree));\n-                           else\n-                              Report_Error\n-                                (\"no value defined for \" &\n-                                 Get_Name_String (Error_Msg_Name_1),\n-                                 Project, In_Tree);\n-                           end if;\n+                           Error_Msg\n+                             (Flags,\n+                              \"no value defined for %%\",\n+                              Location_Of\n+                                (Current_Item, From_Project_Node_Tree),\n+                              Project);\n \n                         else\n                            declare\n@@ -1774,24 +1757,12 @@ package body Prj.Proc is\n                                  Error_Msg_Name_2 :=\n                                    Name_Of\n                                      (Current_Item, From_Project_Node_Tree);\n-\n-                                 if Report_Error = null then\n-                                    Error_Msg\n-                                      (\"value %% is illegal \" &\n-                                       \"for typed string %%\",\n-                                       Location_Of\n-                                         (Current_Item,\n-                                          From_Project_Node_Tree));\n-\n-                                 else\n-                                    Report_Error\n-                                      (\"value \"\"\" &\n-                                       Get_Name_String (Error_Msg_Name_1) &\n-                                       \"\"\" is illegal for typed string \"\"\" &\n-                                       Get_Name_String (Error_Msg_Name_2) &\n-                                       \"\"\"\",\n-                                       Project, In_Tree);\n-                                 end if;\n+                                 Error_Msg\n+                                   (Flags,\n+                                    \"value %% is illegal for typed string %%\",\n+                                    Location_Of\n+                                      (Current_Item, From_Project_Node_Tree),\n+                                    Project);\n                               end if;\n                            end;\n                         end if;\n@@ -2198,7 +2169,7 @@ package body Prj.Proc is\n                      Process_Declarative_Items\n                        (Project                => Project,\n                         In_Tree                => In_Tree,\n-                        Report_Error           => Report_Error,\n+                        Flags                  => Flags,\n                         From_Project_Node      => From_Project_Node,\n                         From_Project_Node_Tree => From_Project_Node_Tree,\n                         Pkg                    => Pkg,\n@@ -2331,44 +2302,23 @@ package body Prj.Proc is\n                   then\n                      if Extending2.Virtual then\n                         Error_Msg_Name_1 := Prj.Project.Display_Name;\n-\n-                        if Flags.Report_Error = null then\n-                           Error_Msg\n-                             (\"project %% cannot be extended by a virtual\" &\n-                              \" project with the same object directory\",\n-                              Prj.Project.Location);\n-                        else\n-                           Flags.Report_Error\n-                             (\"project \"\"\" &\n-                              Get_Name_String (Error_Msg_Name_1) &\n-                              \"\"\" cannot be extended by a virtual \" &\n-                              \"project with the same object directory\",\n-                              Project, In_Tree);\n-                        end if;\n+                        Error_Msg\n+                          (Flags,\n+                           \"project %% cannot be extended by a virtual\" &\n+                           \" project with the same object directory\",\n+                           Prj.Project.Location, Project);\n \n                      else\n                         Error_Msg_Name_1 := Extending2.Display_Name;\n                         Error_Msg_Name_2 := Prj.Project.Display_Name;\n-\n-                        if Flags.Report_Error = null then\n-                           Error_Msg\n-                             (\"project %% cannot extend project %%\",\n-                              Extending2.Location);\n-                           Error_Msg\n-                             (\"\\they share the same object directory\",\n-                              Extending2.Location);\n-\n-                        else\n-                           Flags.Report_Error\n-                             (\"project \"\"\" &\n-                              Get_Name_String (Error_Msg_Name_1) &\n-                              \"\"\" cannot extend project \"\"\" &\n-                              Get_Name_String (Error_Msg_Name_2) & \"\"\"\",\n-                              Project, In_Tree);\n-                           Flags.Report_Error\n-                             (\"they share the same object directory\",\n-                              Project, In_Tree);\n-                        end if;\n+                        Error_Msg\n+                          (Flags,\n+                           \"project %% cannot extend project %%\",\n+                           Extending2.Location, Project);\n+                        Error_Msg\n+                          (Flags,\n+                           \"\\they share the same object directory\",\n+                           Extending2.Location, Project);\n                      end if;\n                   end if;\n \n@@ -2588,7 +2538,7 @@ package body Prj.Proc is\n             Process_Declarative_Items\n               (Project                => Project,\n                In_Tree                => In_Tree,\n-               Report_Error           => Flags.Report_Error,\n+               Flags                  => Flags,\n                From_Project_Node      => From_Project_Node,\n                From_Project_Node_Tree => From_Project_Node_Tree,\n                Pkg                    => No_Package,"}, {"sha": "0dd2e5eeabd5c0b3be67ba7a26171f9bf508f3d2", "filename": "gcc/ada/prj-strt.adb", "status": "modified", "additions": 61, "deletions": 37, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-strt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-strt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -108,15 +108,17 @@ package body Prj.Strt is\n      (In_Tree         : Project_Node_Tree_Ref;\n       Current_Project : Project_Node_Id;\n       Current_Package : Project_Node_Id;\n-      External_Value  : out Project_Node_Id);\n+      External_Value  : out Project_Node_Id;\n+      Flags           : Processing_Flags);\n    --  Parse an external reference. Current token is \"external\"\n \n    procedure Attribute_Reference\n      (In_Tree         : Project_Node_Tree_Ref;\n       Reference       : out Project_Node_Id;\n       First_Attribute : Attribute_Node_Id;\n       Current_Project : Project_Node_Id;\n-      Current_Package : Project_Node_Id);\n+      Current_Package : Project_Node_Id;\n+      Flags           : Processing_Flags);\n    --  Parse an attribute reference. Current token is an apostrophe\n \n    procedure Terms\n@@ -125,7 +127,8 @@ package body Prj.Strt is\n       Expr_Kind       : in out Variable_Kind;\n       Current_Project : Project_Node_Id;\n       Current_Package : Project_Node_Id;\n-      Optional_Index  : Boolean);\n+      Optional_Index  : Boolean;\n+      Flags           : Processing_Flags);\n    --  Recursive procedure to parse one term or several terms concatenated\n    --  using \"&\".\n \n@@ -160,7 +163,8 @@ package body Prj.Strt is\n       Reference       : out Project_Node_Id;\n       First_Attribute : Attribute_Node_Id;\n       Current_Project : Project_Node_Id;\n-      Current_Package : Project_Node_Id)\n+      Current_Package : Project_Node_Id;\n+      Flags           : Processing_Flags)\n    is\n       Current_Attribute : Attribute_Node_Id := First_Attribute;\n \n@@ -195,7 +199,7 @@ package body Prj.Strt is\n \n          if Current_Attribute = Empty_Attribute then\n             Error_Msg_Name_1 := Token_Name;\n-            Error_Msg (\"unknown attribute %%\", Token_Ptr);\n+            Error_Msg (Flags, \"unknown attribute %%\", Token_Ptr);\n             Reference := Empty_Node;\n \n             --  Scan past the attribute name\n@@ -273,7 +277,8 @@ package body Prj.Strt is\n \n    procedure End_Case_Construction\n      (Check_All_Labels   : Boolean;\n-      Case_Location      : Source_Ptr)\n+      Case_Location      : Source_Ptr;\n+      Flags              : Processing_Flags)\n    is\n       Non_Used : Natural := 0;\n       First_Non_Used : Choice_Node_Id := First_Choice_Node_Id;\n@@ -296,19 +301,19 @@ package body Prj.Strt is\n \n          if Non_Used = 1 then\n             Error_Msg_Name_1 := Choices.Table (First_Non_Used).The_String;\n-            Error_Msg (\"?value %% is not used as label\", Case_Location);\n+            Error_Msg (Flags, \"?value %% is not used as label\", Case_Location);\n \n          --  If several are not used, report a warning for each one of them\n \n          elsif Non_Used > 1 then\n             Error_Msg\n-              (\"?the following values are not used as labels:\",\n+              (Flags, \"?the following values are not used as labels:\",\n                Case_Location);\n \n             for Choice in First_Non_Used .. Choices.Last loop\n                if not Choices.Table (Choice).Already_Used then\n                   Error_Msg_Name_1 := Choices.Table (Choice).The_String;\n-                  Error_Msg (\"\\?%%\", Case_Location);\n+                  Error_Msg (Flags, \"\\?%%\", Case_Location);\n                end if;\n             end loop;\n          end if;\n@@ -347,7 +352,8 @@ package body Prj.Strt is\n      (In_Tree         : Project_Node_Tree_Ref;\n       Current_Project : Project_Node_Id;\n       Current_Package : Project_Node_Id;\n-      External_Value  : out Project_Node_Id)\n+      External_Value  : out Project_Node_Id;\n+      Flags           : Processing_Flags)\n    is\n       Field_Id : Project_Node_Id := Empty_Node;\n \n@@ -406,12 +412,14 @@ package body Prj.Strt is\n                   Parse_Expression\n                     (In_Tree         => In_Tree,\n                      Expression      => Field_Id,\n+                     Flags           => Flags,\n                      Current_Project => Current_Project,\n                      Current_Package => Current_Package,\n                      Optional_Index  => False);\n \n                   if Expression_Kind_Of (Field_Id, In_Tree) = List then\n-                     Error_Msg (\"expression must be a single string\", Loc);\n+                     Error_Msg\n+                       (Flags, \"expression must be a single string\", Loc);\n                   else\n                      Set_External_Default_Of\n                        (External_Value, In_Tree, To => Field_Id);\n@@ -425,7 +433,7 @@ package body Prj.Strt is\n                end if;\n \n             when others =>\n-               Error_Msg (\"`,` or `)` expected\", Token_Ptr);\n+               Error_Msg (Flags, \"`,` or `)` expected\", Token_Ptr);\n          end case;\n       end if;\n    end External_Reference;\n@@ -436,7 +444,8 @@ package body Prj.Strt is\n \n    procedure Parse_Choice_List\n      (In_Tree      : Project_Node_Tree_Ref;\n-      First_Choice : out Project_Node_Id)\n+      First_Choice : out Project_Node_Id;\n+      Flags        : Processing_Flags)\n    is\n       Current_Choice : Project_Node_Id := Empty_Node;\n       Next_Choice    : Project_Node_Id := Empty_Node;\n@@ -483,7 +492,7 @@ package body Prj.Strt is\n                   --  case construction so report an error.\n \n                   Error_Msg_Name_1 := Choice_String;\n-                  Error_Msg (\"duplicate case label %%\", Token_Ptr);\n+                  Error_Msg (Flags, \"duplicate case label %%\", Token_Ptr);\n \n                else\n                   Choices.Table (Choice).Already_Used := True;\n@@ -497,7 +506,7 @@ package body Prj.Strt is\n \n          if not Found then\n             Error_Msg_Name_1 := Choice_String;\n-            Error_Msg (\"illegal case label %%\", Token_Ptr);\n+            Error_Msg (Flags, \"illegal case label %%\", Token_Ptr);\n          end if;\n \n          --  Scan past the label\n@@ -535,7 +544,8 @@ package body Prj.Strt is\n       Expression      : out Project_Node_Id;\n       Current_Project : Project_Node_Id;\n       Current_Package : Project_Node_Id;\n-      Optional_Index  : Boolean)\n+      Optional_Index  : Boolean;\n+      Flags           : Processing_Flags)\n    is\n       First_Term      : Project_Node_Id := Empty_Node;\n       Expression_Kind : Variable_Kind := Undefined;\n@@ -552,6 +562,7 @@ package body Prj.Strt is\n       Terms (In_Tree         => In_Tree,\n              Term            => First_Term,\n              Expr_Kind       => Expression_Kind,\n+             Flags           => Flags,\n              Current_Project => Current_Project,\n              Current_Package => Current_Package,\n              Optional_Index  => Optional_Index);\n@@ -568,7 +579,8 @@ package body Prj.Strt is\n \n    procedure Parse_String_Type_List\n      (In_Tree      : Project_Node_Tree_Ref;\n-      First_String : out Project_Node_Id)\n+      First_String : out Project_Node_Id;\n+      Flags        : Processing_Flags)\n    is\n       Last_String  : Project_Node_Id := Empty_Node;\n       Next_String  : Project_Node_Id := Empty_Node;\n@@ -609,7 +621,7 @@ package body Prj.Strt is\n                   --  This is a repetition, report an error\n \n                   Error_Msg_Name_1 := String_Value;\n-                  Error_Msg (\"duplicate value %% in type\", Token_Ptr);\n+                  Error_Msg (Flags, \"duplicate value %% in type\", Token_Ptr);\n                   exit;\n                end if;\n \n@@ -650,7 +662,8 @@ package body Prj.Strt is\n      (In_Tree         : Project_Node_Tree_Ref;\n       Variable        : out Project_Node_Id;\n       Current_Project : Project_Node_Id;\n-      Current_Package : Project_Node_Id)\n+      Current_Package : Project_Node_Id;\n+      Flags           : Processing_Flags)\n    is\n       Current_Variable : Project_Node_Id := Empty_Node;\n \n@@ -723,7 +736,7 @@ package body Prj.Strt is\n \n                      if First_Attribute = Empty_Attribute then\n                         Error_Msg_Name_1 := Names.Table (1).Name;\n-                        Error_Msg (\"unknown project %\",\n+                        Error_Msg (Flags, \"unknown project %\",\n                                    Names.Table (1).Location);\n                         First_Attribute := Attribute_First;\n \n@@ -747,7 +760,7 @@ package body Prj.Strt is\n \n                         if No (The_Package) then\n                            Error_Msg_Name_1 := Names.Table (1).Name;\n-                           Error_Msg (\"package % not yet defined\",\n+                           Error_Msg (Flags, \"package % not yet defined\",\n                                       Names.Table (1).Location);\n                         end if;\n                      end if;\n@@ -844,7 +857,7 @@ package body Prj.Strt is\n                         if No (The_Project) then\n                            Error_Msg_Name_1 := Long_Project;\n                            Error_Msg_Name_2 := Short_Project;\n-                           Error_Msg (\"unknown projects % or %\",\n+                           Error_Msg (Flags, \"unknown projects % or %\",\n                                       Names.Table (1).Location);\n                            The_Package := Empty_Node;\n                            First_Attribute := Attribute_First;\n@@ -869,7 +882,8 @@ package body Prj.Strt is\n                               Error_Msg_Name_1 :=\n                                 Names.Table (Names.Last).Name;\n                               Error_Msg_Name_2 := Short_Project;\n-                              Error_Msg (\"package % not declared in project %\",\n+                              Error_Msg (Flags,\n+                                         \"package % not declared in project %\",\n                                          Names.Table (Names.Last).Location);\n                               First_Attribute := Attribute_First;\n \n@@ -889,6 +903,7 @@ package body Prj.Strt is\n             Attribute_Reference\n               (In_Tree,\n                Variable,\n+               Flags           => Flags,\n                Current_Project => The_Project,\n                Current_Package => The_Package,\n                First_Attribute => First_Attribute);\n@@ -944,7 +959,7 @@ package body Prj.Strt is\n \n                elsif No (The_Package) then\n                   Error_Msg_Name_1 := Names.Table (1).Name;\n-                  Error_Msg (\"unknown package or project %\",\n+                  Error_Msg (Flags, \"unknown package or project %\",\n                              Names.Table (1).Location);\n                   Look_For_Variable := False;\n \n@@ -1023,7 +1038,7 @@ package body Prj.Strt is\n                         Error_Msg_Name_1 := Long_Project;\n                         Error_Msg_Name_2 := Short_Project;\n                         Error_Msg\n-                          (\"unknown projects % or %\",\n+                          (Flags, \"unknown projects % or %\",\n                            Names.Table (1).Location);\n                         Look_For_Variable := False;\n \n@@ -1047,7 +1062,7 @@ package body Prj.Strt is\n                            --  The package does not exist, report an error\n \n                            Error_Msg_Name_1 := Names.Table (2).Name;\n-                           Error_Msg (\"unknown package %\",\n+                           Error_Msg (Flags, \"unknown package %\",\n                                    Names.Table (Names.Last - 1).Location);\n                            Look_For_Variable := False;\n \n@@ -1143,7 +1158,7 @@ package body Prj.Strt is\n          if No (Current_Variable) then\n             Error_Msg_Name_1 := Variable_Name;\n             Error_Msg\n-              (\"unknown variable %\", Names.Table (Names.Last).Location);\n+              (Flags, \"unknown variable %\", Names.Table (Names.Last).Location);\n          end if;\n       end if;\n \n@@ -1165,7 +1180,8 @@ package body Prj.Strt is\n       --  but attempt to scan the index.\n \n       if Token = Tok_Left_Paren then\n-         Error_Msg (\"\\variables cannot be associative arrays\", Token_Ptr);\n+         Error_Msg\n+           (Flags, \"\\variables cannot be associative arrays\", Token_Ptr);\n          Scan (In_Tree);\n          Expect (Tok_String_Literal, \"literal string\");\n \n@@ -1227,7 +1243,8 @@ package body Prj.Strt is\n       Expr_Kind       : in out Variable_Kind;\n       Current_Project : Project_Node_Id;\n       Current_Package : Project_Node_Id;\n-      Optional_Index  : Boolean)\n+      Optional_Index  : Boolean;\n+      Flags           : Processing_Flags)\n    is\n       Next_Term          : Project_Node_Id := Empty_Node;\n       Term_Id            : Project_Node_Id := Empty_Node;\n@@ -1263,7 +1280,7 @@ package body Prj.Strt is\n \n                   Expr_Kind := List;\n                   Error_Msg\n-                    (\"literal string list cannot appear in a string\",\n+                    (Flags, \"literal string list cannot appear in a string\",\n                      Token_Ptr);\n             end case;\n \n@@ -1294,14 +1311,15 @@ package body Prj.Strt is\n                   Parse_Expression\n                     (In_Tree         => In_Tree,\n                      Expression      => Next_Expression,\n+                     Flags           => Flags,\n                      Current_Project => Current_Project,\n                      Current_Package => Current_Package,\n                      Optional_Index  => Optional_Index);\n \n                   --  The expression kind is String list, report an error\n \n                   if Expression_Kind_Of (Next_Expression, In_Tree) = List then\n-                     Error_Msg (\"single expression expected\",\n+                     Error_Msg (Flags, \"single expression expected\",\n                                 Current_Location);\n                   end if;\n \n@@ -1358,7 +1376,7 @@ package body Prj.Strt is\n \n             if Token = Tok_At then\n                if not Optional_Index then\n-                  Error_Msg (\"index not allowed here\", Token_Ptr);\n+                  Error_Msg (Flags, \"index not allowed here\", Token_Ptr);\n                   Scan (In_Tree);\n \n                   if Token = Tok_Integer_Literal then\n@@ -1376,7 +1394,8 @@ package body Prj.Strt is\n                         Index : constant Int := UI_To_Int (Int_Literal_Value);\n                      begin\n                         if Index = 0 then\n-                           Error_Msg (\"index cannot be zero\", Token_Ptr);\n+                           Error_Msg\n+                             (Flags, \"index cannot be zero\", Token_Ptr);\n                         else\n                            Set_Source_Index_Of\n                              (Term_Id, In_Tree, To => Index);\n@@ -1396,6 +1415,7 @@ package body Prj.Strt is\n             Parse_Variable_Reference\n               (In_Tree         => In_Tree,\n                Variable        => Reference,\n+               Flags           => Flags,\n                Current_Project => Current_Project,\n                Current_Package => Current_Package);\n             Set_Current_Term (Term, In_Tree, To => Reference);\n@@ -1417,7 +1437,8 @@ package body Prj.Strt is\n \n                   Expr_Kind := List;\n                   Error_Msg\n-                    (\"list variable cannot appear in single string expression\",\n+                    (Flags,\n+                     \"list variable cannot appear in single string expression\",\n                      Current_Location);\n                end if;\n             end if;\n@@ -1435,6 +1456,7 @@ package body Prj.Strt is\n                Attribute_Reference\n                  (In_Tree         => In_Tree,\n                   Reference       => Reference,\n+                  Flags           => Flags,\n                   First_Attribute => Prj.Attr.Attribute_First,\n                   Current_Project => Current_Project,\n                   Current_Package => Empty_Node);\n@@ -1451,7 +1473,7 @@ package body Prj.Strt is\n                  and then Expression_Kind_Of (Reference, In_Tree) = List\n                then\n                   Error_Msg\n-                    (\"lists cannot appear in single string expression\",\n+                    (Flags, \"lists cannot appear in single string expression\",\n                      Current_Location);\n                end if;\n             end if;\n@@ -1466,13 +1488,14 @@ package body Prj.Strt is\n \n             External_Reference\n               (In_Tree         => In_Tree,\n+               Flags           => Flags,\n                Current_Project => Current_Project,\n                Current_Package => Current_Package,\n                External_Value  => Reference);\n             Set_Current_Term (Term, In_Tree, To => Reference);\n \n          when others =>\n-            Error_Msg (\"cannot be part of an expression\", Token_Ptr);\n+            Error_Msg (Flags, \"cannot be part of an expression\", Token_Ptr);\n             Term := Empty_Node;\n             return;\n       end case;\n@@ -1486,6 +1509,7 @@ package body Prj.Strt is\n            (In_Tree         => In_Tree,\n             Term            => Next_Term,\n             Expr_Kind       => Expr_Kind,\n+            Flags           => Flags,\n             Current_Project => Current_Project,\n             Current_Package => Current_Package,\n             Optional_Index  => Optional_Index);"}, {"sha": "0f6d0d0cd3801dfd59cc5c616da9341152be000f", "filename": "gcc/ada/prj-strt.ads", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-strt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj-strt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.ads?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,8 @@ private package Prj.Strt is\n \n    procedure Parse_String_Type_List\n      (In_Tree      : Project_Node_Tree_Ref;\n-      First_String : out Project_Node_Id);\n+      First_String : out Project_Node_Id;\n+      Flags        : Processing_Flags);\n    --  Get the list of literal strings that are allowed for a typed string.\n    --  On entry, the current token is the first literal string following\n    --  a left parenthesis in a string type declaration such as:\n@@ -58,7 +59,8 @@ private package Prj.Strt is\n \n    procedure End_Case_Construction\n      (Check_All_Labels   : Boolean;\n-      Case_Location      : Source_Ptr);\n+      Case_Location      : Source_Ptr;\n+      Flags              : Processing_Flags);\n    --  This procedure is called at the end of a case construction\n    --  to remove the case labels and to restore the previous state.\n    --  In particular, in the case of nested case constructions,\n@@ -69,7 +71,8 @@ private package Prj.Strt is\n \n    procedure Parse_Choice_List\n      (In_Tree      : Project_Node_Tree_Ref;\n-      First_Choice : out Project_Node_Id);\n+      First_Choice : out Project_Node_Id;\n+      Flags        : Processing_Flags);\n    --  Get the label for a choice list.\n    --  Report an error if\n    --    - a case label is not a literal string\n@@ -81,7 +84,8 @@ private package Prj.Strt is\n       Expression      : out Project_Node_Id;\n       Current_Project : Project_Node_Id;\n       Current_Package : Project_Node_Id;\n-      Optional_Index  : Boolean);\n+      Optional_Index  : Boolean;\n+      Flags           : Processing_Flags);\n    --  Parse a simple string expression or a string list expression.\n    --  Current_Project is the node of the project file being parsed.\n    --  Current_Package is the node of the package being parsed,\n@@ -93,7 +97,8 @@ private package Prj.Strt is\n      (In_Tree         : Project_Node_Tree_Ref;\n       Variable        : out Project_Node_Id;\n       Current_Project : Project_Node_Id;\n-      Current_Package : Project_Node_Id);\n+      Current_Package : Project_Node_Id;\n+      Flags           : Processing_Flags);\n    --  Parse a variable or attribute reference.\n    --  Used internally (in expressions) and for case variables (in Prj.Dect).\n    --  Current_Package is the node of the package being parsed,"}, {"sha": "e0c2f1bde20963f65f628452d613c84b7d726dc7", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -299,7 +299,8 @@ package body Prj is\n    procedure Expect (The_Token : Token_Type; Token_Image : String) is\n    begin\n       if Token /= The_Token then\n-         Error_Msg (Token_Image & \" expected\", Token_Ptr);\n+         --  ??? Should pass user flags here instead\n+         Error_Msg (Gnatmake_Flags, Token_Image & \" expected\", Token_Ptr);\n       end if;\n    end Expect;\n \n@@ -1179,7 +1180,7 @@ package body Prj is\n    ------------------\n \n    function Create_Flags\n-     (Report_Error               : Put_Line_Access;\n+     (Report_Error               : Error_Handler;\n       When_No_Sources            : Error_Warning;\n       Require_Sources_Other_Lang : Boolean := True;\n       Allow_Duplicate_Basenames  : Boolean := True;"}, {"sha": "27ee5f091c1da889fb3a6c34fa59f928db960657", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 64, "deletions": 58, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d9085b0f600ee51a331a2135f2da43c661881d/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=e2d9085b0f600ee51a331a2135f2da43c661881d", "patch": "@@ -96,16 +96,6 @@ package Prj is\n    --  constants, because Canonical_Case_File_Name is called on these variables\n    --  in the body of Prj.\n \n-   type Error_Warning is (Silent, Warning, Error);\n-   --  Severity of some situations, such as: no Ada sources in a project where\n-   --  Ada is one of the language.\n-   --\n-   --  When the situation occurs, the behaviour depends on the setting:\n-   --\n-   --    - Silent:  no action\n-   --    - Warning: issue a warning, does not cause the tool to fail\n-   --    - Error:   issue an error, causes the tool to fail\n-\n    function Empty_File   return File_Name_Type;\n    function Empty_String return Name_Id;\n    --  Return the id for an empty string \"\"\n@@ -1290,12 +1280,6 @@ package Prj is\n       end record;\n    --  Data for a project tree\n \n-   type Put_Line_Access is access procedure\n-     (Line    : String;\n-      Project : Project_Id;\n-      In_Tree : Project_Tree_Ref);\n-   --  Use to customize error reporting in Prj.Proc and Prj.Nmsc\n-\n    procedure Expect (The_Token : Token_Type; Token_Image : String);\n    --  Check that the current token is The_Token. If it is not, then output\n    --  an error message.\n@@ -1308,47 +1292,6 @@ package Prj is\n    --  This procedure resets all the tables that are used when processing a\n    --  project file tree. Initialize must be called before the call to Reset.\n \n-   type Processing_Flags is private;\n-   --  Flags used while parsing and processing a project tree to configure the\n-   --  behavior of the parser, and indicate how to report error messages. This\n-   --  structure does not allocate memory and never needs to be freed\n-\n-   function Create_Flags\n-     (Report_Error               : Put_Line_Access;\n-      When_No_Sources            : Error_Warning;\n-      Require_Sources_Other_Lang : Boolean := True;\n-      Allow_Duplicate_Basenames  : Boolean := True;\n-      Compiler_Driver_Mandatory  : Boolean := False;\n-      Error_On_Unknown_Language  : Boolean := True) return Processing_Flags;\n-   --  Function used to create Processing_Flags structure\n-   --\n-   --  If Allow_Duplicate_Basenames, then files with the same base names are\n-   --  authorized within a project for source-based languages (never for unit\n-   --  based languages).\n-   --\n-   --  If Compiler_Driver_Mandatory is true, then a Compiler.Driver attribute\n-   --  for each language must be defined, or we will not look for its source\n-   --  files.\n-   --\n-   --  When_No_Sources indicates what should be done when no sources of a\n-   --  language are found in a project where this language is declared.\n-   --  If Require_Sources_Other_Lang is true, then all languages must have at\n-   --  least one source file, or an error is reported via When_No_Sources. If\n-   --  it is false, this is only required for Ada (and only if it is a language\n-   --  of the project). When this parameter is set to False, we do not check\n-   --  that a proper naming scheme is defined for languages other than Ada.\n-   --\n-   --  If Report_Error is null, use the standard error reporting mechanism\n-   --  (Errout). Otherwise, report errors using Report_Error.\n-   --\n-   --  If Error_On_Unknown_Language is true, an error is displayed if some of\n-   --  the source files listed in the project do not match any naming scheme\n-\n-   Gprbuild_Flags : constant Processing_Flags;\n-   Gnatmake_Flags : constant Processing_Flags;\n-   --  Flags used by the various tools. They all display the error messages\n-   --  through Prj.Err.\n-\n    package Project_Boolean_Htable is new Simple_HTable\n      (Header_Num => Header_Num,\n       Element    => Boolean,\n@@ -1399,6 +1342,69 @@ package Prj is\n      (Source_File_Name : File_Name_Type) return File_Name_Type;\n    --  Returns the switches file name corresponding to a source file name\n \n+   -----------\n+   -- Flags --\n+   -----------\n+\n+   type Processing_Flags is private;\n+   --  Flags used while parsing and processing a project tree to configure the\n+   --  behavior of the parser, and indicate how to report error messages. This\n+   --  structure does not allocate memory and never needs to be freed\n+\n+   type Error_Warning is (Silent, Warning, Error);\n+   --  Severity of some situations, such as: no Ada sources in a project where\n+   --  Ada is one of the language.\n+   --\n+   --  When the situation occurs, the behaviour depends on the setting:\n+   --\n+   --    - Silent:  no action\n+   --    - Warning: issue a warning, does not cause the tool to fail\n+   --    - Error:   issue an error, causes the tool to fail\n+\n+   type Error_Handler is access procedure\n+     (Project : Project_Id; Is_Warning : Boolean);\n+   --  This warngs when an error was found when parsing a project. The error\n+   --  itself is handled through Prj.Err (and you should call\n+   --  Prj.Err.Finalize to actually print the error). This ensures that\n+   --  duplicate error messages are always correctly removed, that errors msgs\n+   --  are sorted, and that all tools will report the same error to the user.\n+\n+   function Create_Flags\n+     (Report_Error               : Error_Handler;\n+      When_No_Sources            : Error_Warning;\n+      Require_Sources_Other_Lang : Boolean := True;\n+      Allow_Duplicate_Basenames  : Boolean := True;\n+      Compiler_Driver_Mandatory  : Boolean := False;\n+      Error_On_Unknown_Language  : Boolean := True) return Processing_Flags;\n+   --  Function used to create Processing_Flags structure\n+   --\n+   --  If Allow_Duplicate_Basenames, then files with the same base names are\n+   --  authorized within a project for source-based languages (never for unit\n+   --  based languages).\n+   --\n+   --  If Compiler_Driver_Mandatory is true, then a Compiler.Driver attribute\n+   --  for each language must be defined, or we will not look for its source\n+   --  files.\n+   --\n+   --  When_No_Sources indicates what should be done when no sources of a\n+   --  language are found in a project where this language is declared.\n+   --  If Require_Sources_Other_Lang is true, then all languages must have at\n+   --  least one source file, or an error is reported via When_No_Sources. If\n+   --  it is false, this is only required for Ada (and only if it is a language\n+   --  of the project). When this parameter is set to False, we do not check\n+   --  that a proper naming scheme is defined for languages other than Ada.\n+   --\n+   --  If Report_Error is null, use the standard error reporting mechanism\n+   --  (Errout). Otherwise, report errors using Report_Error.\n+   --\n+   --  If Error_On_Unknown_Language is true, an error is displayed if some of\n+   --  the source files listed in the project do not match any naming scheme\n+\n+   Gprbuild_Flags : constant Processing_Flags;\n+   Gnatmake_Flags : constant Processing_Flags;\n+   --  Flags used by the various tools. They all display the error messages\n+   --  through Prj.Err.\n+\n    ----------------\n    -- Temp Files --\n    ----------------\n@@ -1494,7 +1500,7 @@ private\n \n    type Processing_Flags is record\n       Require_Sources_Other_Lang : Boolean;\n-      Report_Error               : Put_Line_Access;\n+      Report_Error               : Error_Handler;\n       When_No_Sources            : Error_Warning;\n       Allow_Duplicate_Basenames  : Boolean;\n       Compiler_Driver_Mandatory  : Boolean;"}]}