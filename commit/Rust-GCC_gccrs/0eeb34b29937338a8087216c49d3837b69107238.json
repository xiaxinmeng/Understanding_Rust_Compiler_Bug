{"sha": "0eeb34b29937338a8087216c49d3837b69107238", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVlYjM0YjI5OTM3MzM4YTgwODcyMTZjNDlkMzgzN2I2OTEwNzIzOA==", "commit": {"author": {"name": "Dmitrij Pochepko", "email": "dmitrij.pochepko@bell-sw.com", "date": "2019-10-08T21:53:03Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2019-10-08T21:53:03Z"}, "message": "re PR tree-optimization/90836 (Missing popcount pattern matching)\n\n2019-10-08  Dmitrij Pochepko <dmitrij.pochepko@bell-sw.com>\n\n\tPR tree-optimization/90836\n\t* lib/target-supports.exp (check_effective_target_popcount)\n\t(check_effective_target_popcountll): New effective targets.\n\t* gcc.dg/tree-ssa/popcount4.c: New test.\n\t* gcc.dg/tree-ssa/popcount4l.c: New test.\n\t* gcc.dg/tree-ssa/popcount4ll.c: New test.\n\nFrom-SVN: r276722", "tree": {"sha": "4dfa1d239294963b761b515b8e82e55461f3af0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dfa1d239294963b761b515b8e82e55461f3af0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0eeb34b29937338a8087216c49d3837b69107238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eeb34b29937338a8087216c49d3837b69107238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eeb34b29937338a8087216c49d3837b69107238", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eeb34b29937338a8087216c49d3837b69107238/comments", "author": {"login": "dpochepk", "id": 60473343, "node_id": "MDQ6VXNlcjYwNDczMzQz", "avatar_url": "https://avatars.githubusercontent.com/u/60473343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpochepk", "html_url": "https://github.com/dpochepk", "followers_url": "https://api.github.com/users/dpochepk/followers", "following_url": "https://api.github.com/users/dpochepk/following{/other_user}", "gists_url": "https://api.github.com/users/dpochepk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpochepk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpochepk/subscriptions", "organizations_url": "https://api.github.com/users/dpochepk/orgs", "repos_url": "https://api.github.com/users/dpochepk/repos", "events_url": "https://api.github.com/users/dpochepk/events{/privacy}", "received_events_url": "https://api.github.com/users/dpochepk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac87f0f3459a57f03503e51aeffc54bb6ef36b90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac87f0f3459a57f03503e51aeffc54bb6ef36b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac87f0f3459a57f03503e51aeffc54bb6ef36b90"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "d9d73dbd308feff20ef101d5e1faf42453266616", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eeb34b29937338a8087216c49d3837b69107238/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eeb34b29937338a8087216c49d3837b69107238/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0eeb34b29937338a8087216c49d3837b69107238", "patch": "@@ -1,3 +1,12 @@\n+2019-10-08  Dmitrij Pochepko <dmitrij.pochepko@bell-sw.com>\n+\n+\tPR tree-optimization/90836\n+\t* lib/target-supports.exp (check_effective_target_popcount)\n+\t(check_effective_target_popcountll): New effective targets.\n+\t* gcc.dg/tree-ssa/popcount4.c: New test.\n+\t* gcc.dg/tree-ssa/popcount4l.c: New test.\n+\t* gcc.dg/tree-ssa/popcount4ll.c: New test.\n+\n 2019-10-08  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/92014"}, {"sha": "bfb563bb97512454e02134b8fc3ba1051764275f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/popcount4.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eeb34b29937338a8087216c49d3837b69107238/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eeb34b29937338a8087216c49d3837b69107238/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount4.c?ref=0eeb34b29937338a8087216c49d3837b69107238", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target popcount } */\n+/* { dg-require-effective-target int32plus } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+const unsigned m1  = 0x55555555UL;\n+const unsigned m2  = 0x33333333UL;\n+const unsigned m4  = 0x0F0F0F0FUL;\n+const unsigned h01 = 0x01010101UL;\n+const int shift = 24;\n+\n+int popcount64c(unsigned x)\n+{\n+    x -= (x >> 1) & m1;\n+    x = (x & m2) + ((x >> 2) & m2);\n+    x = (x + (x >> 4)) & m4;\n+    return (x * h01) >> shift;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"\\.POPCOUNT\" 1 \"optimized\" } } */\n+\n+"}, {"sha": "69fb2d1134d3103d250b94139bd1d69ae915cce1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/popcount4l.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eeb34b29937338a8087216c49d3837b69107238/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount4l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eeb34b29937338a8087216c49d3837b69107238/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount4l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount4l.c?ref=0eeb34b29937338a8087216c49d3837b69107238", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target popcountl } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+#if __SIZEOF_LONG__ == 4\n+const unsigned long m1  = 0x55555555UL;\n+const unsigned long m2  = 0x33333333UL;\n+const unsigned long m4  = 0x0F0F0F0FUL;\n+const unsigned long h01 = 0x01010101UL;\n+const int shift = 24;\n+#else\n+const unsigned long m1  = 0x5555555555555555UL;\n+const unsigned long m2  = 0x3333333333333333UL;\n+const unsigned long m4  = 0x0f0f0f0f0f0f0f0fUL;\n+const unsigned long h01 = 0x0101010101010101UL;\n+const int shift = 56;\n+#endif\n+\n+\n+int popcount64c(unsigned long x)\n+{\n+    x -= (x >> 1) & m1;\n+    x = (x & m2) + ((x >> 2) & m2);\n+    x = (x + (x >> 4)) & m4;\n+    return (x * h01) >> shift;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"\\.POPCOUNT\" 1 \"optimized\" } } */\n+\n+"}, {"sha": "191d957c688911e00911a04d29ff52a7793b88b8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/popcount4ll.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eeb34b29937338a8087216c49d3837b69107238/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount4ll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eeb34b29937338a8087216c49d3837b69107238/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount4ll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount4ll.c?ref=0eeb34b29937338a8087216c49d3837b69107238", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target popcountll } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+const unsigned long long m1  = 0x5555555555555555ULL;\n+const unsigned long long m2  = 0x3333333333333333ULL;\n+const unsigned long long m4  = 0x0F0F0F0F0F0F0F0FULL;\n+const unsigned long long h01 = 0x0101010101010101ULL;\n+const int shift = 56;\n+\n+int popcount64c(unsigned long long x)\n+{\n+    x -= (x >> 1) & m1;\n+    x = (x & m2) + ((x >> 2) & m2);\n+    x = (x + (x >> 4)) & m4;\n+    return (x * h01) >> shift;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"\\.POPCOUNT\" 1 \"optimized\" } } */"}, {"sha": "179202f0f7d4a41f3ad2698ce670551f13341b0e", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eeb34b29937338a8087216c49d3837b69107238/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eeb34b29937338a8087216c49d3837b69107238/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=0eeb34b29937338a8087216c49d3837b69107238", "patch": "@@ -6933,6 +6933,29 @@ proc check_effective_target_popcountl { } {\n     } \"\" ]\n }\n \n+# Return 1 if the target supports popcount on long long.\n+\n+proc check_effective_target_popcountll { } {\n+    return [check_no_messages_and_pattern popcountll \"!\\\\(call\" rtl-expand {\n+        int foo (long long b)\n+          {\n+            return __builtin_popcountll (b);\n+          }\n+    } \"\" ]\n+}\n+\n+\n+# Return 1 if the target supports popcount on int.\n+\n+proc check_effective_target_popcount { } {\n+    return [check_no_messages_and_pattern popcount \"!\\\\(call\" rtl-expand {\n+        int foo (int b)\n+          {\n+            return __builtin_popcount (b);\n+          }\n+    } \"\" ]\n+}\n+\n # Return 1 if the target supports atomic operations on \"long long\"\n # and can execute them.\n #"}]}