{"sha": "a2c1791d894d8d421bda4344219bc971ec7faa30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJjMTc5MWQ4OTRkOGQ0MjFiZGE0MzQ0MjE5YmM5NzFlYzdmYWEzMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-09T13:09:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-09T13:09:52Z"}, "message": "[multiple changes]\n\n2012-07-09  Robert Dewar  <dewar@adacore.com>\n\n\t* layout.adb, i-cstrea.ads, a-ststio.ads, prj-util.ads, sem_cat.adb,\n\ts-commun.ads, s-ficobl.ads, s-os_lib.ads, s-fileio.ads: Minor\n\treformatting.\n\n2012-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* raise-gcc.c: Update comments. Fix typo.\n\n2012-07-09  Thomas Quinot  <quinot@adacore.com>\n\n\t* einfo.adb, einfo.ads, sem_attr.adb, sem_ch13.adb: Attribute\n\tScalar_Storage_Order can be defined or queried for array types as well\n\tas record types.\n\nFrom-SVN: r189376", "tree": {"sha": "8570b4be17dc236ce4fd50453943fe986c7c24b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8570b4be17dc236ce4fd50453943fe986c7c24b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2c1791d894d8d421bda4344219bc971ec7faa30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c1791d894d8d421bda4344219bc971ec7faa30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c1791d894d8d421bda4344219bc971ec7faa30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c1791d894d8d421bda4344219bc971ec7faa30/comments", "author": null, "committer": null, "parents": [{"sha": "a6f0cb16c658263c398773c27387adc6b10b236c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f0cb16c658263c398773c27387adc6b10b236c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6f0cb16c658263c398773c27387adc6b10b236c"}], "stats": {"total": 108, "additions": 69, "deletions": 39}, "files": [{"sha": "30bd9724e22fd3d78cd68f3056e2e0ab7c01b568", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -1,3 +1,19 @@\n+2012-07-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* layout.adb, i-cstrea.ads, a-ststio.ads, prj-util.ads, sem_cat.adb,\n+\ts-commun.ads, s-ficobl.ads, s-os_lib.ads, s-fileio.ads: Minor\n+\treformatting.\n+\n+2012-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* raise-gcc.c: Update comments. Fix typo.\n+\n+2012-07-09  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* einfo.adb, einfo.ads, sem_attr.adb, sem_ch13.adb: Attribute\n+\tScalar_Storage_Order can be defined or queried for array types as well\n+\tas record types.\n+\n 2012-07-09  Tristan Gingold  <gingold@adacore.com>\n \n \t* a-exexpr-gcc.adb (CleanupUnwind_Handler): Now imported from"}, {"sha": "4049163fa8f62d81dc3f3e5f96e96b763997f73f", "filename": "gcc/ada/a-ststio.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fa-ststio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fa-ststio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.ads?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -37,7 +37,6 @@ with Ada.IO_Exceptions;\n with System.File_Control_Block;\n \n package Ada.Streams.Stream_IO is\n-\n    pragma Preelaborate;\n \n    type Stream_Access is access all Root_Stream_Type'Class;"}, {"sha": "d2af1cf73f4283dcee2877a0f0e3d7f86671c189", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -2602,7 +2602,7 @@ package body Einfo is\n \n    function Reverse_Storage_Order (Id : E) return B is\n    begin\n-      pragma Assert (Is_Record_Type (Id));\n+      pragma Assert (Is_Record_Type (Id) or else Is_Array_Type (Id));\n       return Flag93 (Base_Type (Id));\n    end Reverse_Storage_Order;\n "}, {"sha": "e3a5c5615bcca23e2faa46b9f3f35c5a9b4e62cb", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -3535,11 +3535,12 @@ package Einfo is\n --       Ada 2005 AI-133), or must occupy an integral number of storage units.\n \n --    Reverse_Storage_Order (Flag93) [base type only]\n---       Present in all record type entities. Set if entity has a\n+--       Present in all record and array type entities. Set if entity has a\n --       Scalar_Storage_Order aspect (set by an aspect clause or attribute\n --       definition clause) that has reversed the order of storage elements\n---       from the default value. When this flag is set, the Bit_Order aspect\n---       must be set to the same value.\n+--       from the default value. When this flag is set for a record type,\n+--       the Bit_Order aspect must be set to the same value (either explicitly\n+--       or as the target default value).\n \n --    RM_Size (Uint13)\n --       Present in all type and subtype entities. Contains the value of"}, {"sha": "37d8ab733db2681e8976801188e5afc4c19c1071", "filename": "gcc/ada/i-cstrea.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fi-cstrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fi-cstrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.ads?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -229,7 +229,6 @@ package Interfaces.C_Streams is\n    --  path name. Use max_path_len given below as the size of buffer.\n \n    max_path_len : constant Integer;\n-   --  max_path_len : Integer;\n    --  Maximum length of an allowable full path name on the system,including a\n    --  terminating NUL character. Declared as a constant to allow references\n    --  from other preelaborated GNAT library packages."}, {"sha": "7696e5937c0f8b1c948669957806f41314c96c4a", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -3103,18 +3103,17 @@ package body Layout is\n       --  the type, or the maximum allowed alignment.\n \n       declare\n-         S             : Int;\n+         S : Int;\n+         A : Nat;\n \n-         A             : Nat;\n          Max_Alignment : Nat;\n \n       begin\n-         --  The given esize may be larger that int'last because of a previous\n+         --  The given Esize may be larger that int'last because of a previous\n          --  error, and the call to UI_To_Int will fail, so use default.\n \n          if Esize (E) / SSU > Ttypes.Maximum_Alignment then\n             S := Ttypes.Maximum_Alignment;\n-\n          else\n             S := UI_To_Int (Esize (E)) / SSU;\n          end if;"}, {"sha": "892db282a57aba3f6985d3a2012befdb689f52e8", "filename": "gcc/ada/prj-util.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fprj-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fprj-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.ads?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -239,11 +239,11 @@ package Prj.Util is\n      (Tree    : Project_Tree_Ref;\n       Project : Project_Id);\n    --  Call Action for every sources that are needed to use Project. This is\n-   --  either the sources corresponding to the units in attribute Interfaces or\n-   --  all sources of the project. Note that only the bodies that are needed\n-   --  (because the unit is generic or contains some inline pragmas) are\n-   --  handled. This routine must be called only when the project has been\n-   --  built successfully.\n+   --  either the sources corresponding to the units in attribute Interfaces\n+   --  or all sources of the project. Note that only the bodies that are\n+   --  needed (because the unit is generic or contains some inline pragmas)\n+   --  are handled. This routine must be called only when the project has\n+   --  been built successfully.\n \n private\n    type Text_File_Data is record"}, {"sha": "bc79c5d82a1b462433a5492b6de9ebcc6ae38cd6", "filename": "gcc/ada/raise-gcc.c", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fraise-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fraise-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise-gcc.c?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -207,6 +207,10 @@ db_phases (int phases)\n    * Tables for the dwarf zero cost case *\n    =======================================\n \n+   They are fully documented in:\n+     http://sourcery.mentor.com/public/cxx-abi/exceptions.pdf\n+   Here is a shorter presentation, with some specific comments for Ada.\n+\n    call_site []\n    -------------------------------------------------------------------\n    * region-start | region-length | landing-pad | first-action-index *\n@@ -244,20 +248,32 @@ db_phases (int phases)\n    (see below), from which information may be retrieved to check if it\n    matches the exception being propagated.\n \n-   action-filter > 0  means there is a regular handler to be run,\n-\n-   action-filter < 0  means there is a some \"exception_specification\"\n-                      data to retrieve, which is only relevant for C++\n-\t\t      and should never show up for Ada.\n-\n-   next-action points to the next entry in the list using a relative byte\n-   index. 0 indicates there is no other entry.\n+   * action-filter > 0:\n+   means there is a regular handler to be run The value is also passed\n+   to the landing pad to dispatch the exception.\n+\n+   * action-filter < 0:\n+   means there is a some \"exception_specification\" data to retrieve,\n+   which is only relevant for C++ and should never show up for Ada.\n+   (Exception specification specifies which exceptions can be thrown\n+   by a function. Such filter is emitted around the body of C++\n+   functions defined like:\n+     void foo ([...])  throw (A, B) { [...] }\n+   These can be viewed as negativ filter: the landing pad is branched\n+   to for exceptions that doesn't match the filter and usually aborts\n+   the program).\n+\n+   * next-action\n+   points to the next entry in the list using a relative byte offset. 0\n+   indicates there is no other entry.\n \n    ttypes []\n    ---------------\n    * ttype-value *\n    ---------------\n \n+   This table is an array of addresses.\n+\n    A null value indicates a catch-all handler.  (Not used by Ada)\n \n    Non null values are used to match the exception being propagated:\n@@ -1151,10 +1167,11 @@ __gnat_cleanupunwind_handler (int version,\n {\n   /* Terminate when the end of the stack is reached.  */\n   if ((phases & _UA_END_OF_STACK) != 0\n-#ifdef __ia64__\n+#if defined (__ia64__) && defined (USE_LIBUNWIND_EXCEPTIONS)\n       /* Strictely follow the ia64 ABI: when end of stack is reached,\n-\t the callback will be called with a NULL stack pointer.  */\n-      || _Unwind_GetREG (context, 12) == 0\n+\t the callback will be called with a NULL stack pointer.\n+\t No need for that when using libgcc unwinder.  */\n+      || _Unwind_GetGR (context, 12) == 0\n #endif\n       )\n     __gnat_unhandled_except_handler (exception);"}, {"sha": "1255efd6b7d7b931bbce7e89e8121e9fe05ee8fb", "filename": "gcc/ada/s-commun.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fs-commun.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fs-commun.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-commun.ads?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -35,7 +35,6 @@ with Ada.Streams;\n with System.CRTL;\n \n package System.Communication is\n-\n    pragma Preelaborate;\n \n    function Last_Index"}, {"sha": "cd3d0cbe37f54ca6f98328450826b55f6db423d3", "filename": "gcc/ada/s-ficobl.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fs-ficobl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fs-ficobl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ficobl.ads?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -40,7 +40,6 @@ with Interfaces.C_Streams;\n with System.CRTL;\n \n package System.File_Control_Block is\n-\n    pragma Preelaborate;\n \n    ----------------------------"}, {"sha": "f084d8dc5737d70c271906d073d018efaed749e9", "filename": "gcc/ada/s-fileio.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fs-fileio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fs-fileio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.ads?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -37,7 +37,6 @@ with Interfaces.C_Streams;\n with System.File_Control_Block;\n \n package System.File_IO is\n-\n    pragma Preelaborate;\n \n    package FCB renames System.File_Control_Block;"}, {"sha": "dbe33155fd5167888671d4c1c58a3529d0c1a1b1", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -55,7 +55,6 @@ with System.Strings;\n \n package System.OS_Lib is\n    pragma Elaborate_Body (OS_Lib);\n-\n    pragma Preelaborate;\n \n    -----------------------"}, {"sha": "efb6037f6eee0fea92491111fd64407bc571e3a6", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -4569,8 +4569,9 @@ package body Sem_Attr is\n          Check_E0;\n          Check_Type;\n \n-         if not Is_Record_Type (P_Type) then\n-            Error_Attr_P (\"prefix of % attribute must be record type\");\n+         if not Is_Record_Type (P_Type) or else Is_Array_Type (P_Type) then\n+            Error_Attr_P\n+              (\"prefix of % attribute must be record or array type\");\n          end if;\n \n          if Bytes_Big_Endian xor Reverse_Storage_Order (P_Type) then"}, {"sha": "4d8b8ffc5d08f89df6d3f751802f4a5f6e1bf7ac", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -224,9 +224,10 @@ package body Sem_Cat is\n          --  AI05-0206.\n \n          elsif (Unit_Category = Remote_Types\n-                 or else Unit_Category = Remote_Call_Interface)\n-           and then (Nkind (N) = N_With_Clause\n-                      and then Private_Present (N))\n+                  or else\n+                Unit_Category = Remote_Call_Interface)\n+           and then Nkind (N) = N_With_Clause\n+           and then Private_Present (N)\n            and then Is_Preelaborated (Depended_Entity)\n          then\n             null;\n@@ -271,7 +272,8 @@ package body Sem_Cat is\n          --  on a preelaborated unit with a normal with_clause.\n \n          elsif (Unit_Category = Remote_Types\n-                 or else Unit_Category = Remote_Call_Interface)\n+                  or else\n+                Unit_Category = Remote_Call_Interface)\n            and then Is_Preelaborated (Depended_Entity)\n          then\n             Error_Msg_NE"}, {"sha": "3b5b20354c9d8fba2c592d528674cf45d21cd7be", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c1791d894d8d421bda4344219bc971ec7faa30/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=a2c1791d894d8d421bda4344219bc971ec7faa30", "patch": "@@ -3312,10 +3312,10 @@ package body Sem_Ch13 is\n \n          when Attribute_Scalar_Storage_Order => Scalar_Storage_Order : declare\n          begin\n-            if not Is_Record_Type (U_Ent) then\n+            if not (Is_Record_Type (U_Ent) or else Is_Array_Type (U_Ent)) then\n                Error_Msg_N\n-                 (\"Scalar_Storage_Order can only be defined for record type\",\n-                  Nam);\n+                 (\"Scalar_Storage_Order can only be defined for \"\n+                  & \"record or array type\", Nam);\n \n             elsif Duplicate_Clause then\n                null;"}]}