{"sha": "88eeff6f5a1347dc09de33c26a68648c4dea7f80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhlZWZmNmY1YTEzNDdkYzA5ZGUzM2MyNmE2ODY0OGM0ZGVhN2Y4MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2009-06-19T15:25:16Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-06-19T15:25:16Z"}, "message": "c-decl.c (grokdeclarator): If -Wc++-compat, warn about a global variable with an anonymous type.\n\n./:\t* c-decl.c (grokdeclarator): If -Wc++-compat, warn about a global\n\tvariable with an anonymous type.\nfortran/:\n\t* cpp.c (struct gfc_cpp_option_data): Give this struct, used for\n\tthe global variable gfc_cpp_option, a name.\ntestsuite/:\n\t* gcc.dg/Wcxx-compat-16.c: New testcase.\n\nFrom-SVN: r148708", "tree": {"sha": "fc52468ac72e4ed7eef097489864a842fdb17db4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc52468ac72e4ed7eef097489864a842fdb17db4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88eeff6f5a1347dc09de33c26a68648c4dea7f80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88eeff6f5a1347dc09de33c26a68648c4dea7f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88eeff6f5a1347dc09de33c26a68648c4dea7f80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88eeff6f5a1347dc09de33c26a68648c4dea7f80/comments", "author": null, "committer": null, "parents": [{"sha": "28a876a42966c74582188b6c124c790f0b724535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a876a42966c74582188b6c124c790f0b724535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28a876a42966c74582188b6c124c790f0b724535"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "37a3629ff6de3f46b858675924cb6c52ff4f5012", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88eeff6f5a1347dc09de33c26a68648c4dea7f80", "patch": "@@ -1,3 +1,8 @@\n+2009-06-19  Ian Lance Taylor  <iant@google.com>\n+\n+\t* c-decl.c (grokdeclarator): If -Wc++-compat, warn about a global\n+\tvariable with an anonymous type.\n+\n 2009-06-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* see.c: Remove for real."}, {"sha": "57cbd283588997886b76734555c62908b9a9479c", "filename": "gcc/c-decl.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=88eeff6f5a1347dc09de33c26a68648c4dea7f80", "patch": "@@ -5875,6 +5875,19 @@ grokdeclarator (const struct c_declarator *declarator,\n      name of a variable.  Thus, if it's known before this, die horribly.  */\n     gcc_assert (!DECL_ASSEMBLER_NAME_SET_P (decl));\n \n+    if (warn_cxx_compat\n+\t&& TREE_CODE (decl) == VAR_DECL\n+\t&& TREE_PUBLIC (decl)\n+\t&& TREE_STATIC (decl)\n+\t&& (TREE_CODE (TREE_TYPE (decl)) == RECORD_TYPE\n+\t    || TREE_CODE (TREE_TYPE (decl)) == UNION_TYPE\n+\t    || TREE_CODE (TREE_TYPE (decl)) == ENUMERAL_TYPE)\n+\t&& TYPE_NAME (TREE_TYPE (decl)) == NULL_TREE)\n+      warning_at (DECL_SOURCE_LOCATION (decl), OPT_Wc___compat,\n+\t\t  (\"non-local variable %qD with anonymous type is \"\n+\t\t   \"questionable in C++\"),\n+\t\t  decl);\n+\n     return decl;\n   }\n }"}, {"sha": "136a0e564cc23a4eb5a081dd7f8289e00423266f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=88eeff6f5a1347dc09de33c26a68648c4dea7f80", "patch": "@@ -1,3 +1,8 @@\n+2009-06-19  Ian Lance Taylor  <iant@google.com>\n+\n+\t* cpp.c (struct gfc_cpp_option_data): Give this struct, used for\n+\tthe global variable gfc_cpp_option, a name.\n+\n 2009-06-19  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/40450"}, {"sha": "ec8bb59504c9ae1d039fa29083d1c8df4ca50cd5", "filename": "gcc/fortran/cpp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2Ffortran%2Fcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2Ffortran%2Fcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcpp.c?ref=88eeff6f5a1347dc09de33c26a68648c4dea7f80", "patch": "@@ -66,7 +66,7 @@ typedef struct gfc_cpp_macro_queue\n } gfc_cpp_macro_queue;\n static gfc_cpp_macro_queue *cpp_define_queue, *cpp_undefine_queue;\n \n-struct\n+struct gfc_cpp_option_data\n {\n   /* Argument of -cpp, implied by SPEC;\n      if NULL, preprocessing disabled.  */"}, {"sha": "b68dc7e059bf9063444cd7aa2f39a4e43a490329", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=88eeff6f5a1347dc09de33c26a68648c4dea7f80", "patch": "@@ -1,3 +1,7 @@\n+2009-06-19  Ian Lance Taylor  <iant@google.com>\n+\n+\t* gcc.dg/Wcxx-compat-16.c: New testcase.\n+\n 2009-06-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/builtins-34.c: Add significand cases."}, {"sha": "51b503bf607e607b92a354066bb1390269b2b70d", "filename": "gcc/testsuite/gcc.dg/Wcxx-compat-16.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2Ftestsuite%2Fgcc.dg%2FWcxx-compat-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88eeff6f5a1347dc09de33c26a68648c4dea7f80/gcc%2Ftestsuite%2Fgcc.dg%2FWcxx-compat-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWcxx-compat-16.c?ref=88eeff6f5a1347dc09de33c26a68648c4dea7f80", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wc++-compat\" } */\n+\n+struct { int f1; } g1;\t\t/* { dg-warning \"C\\[+\\]\\[+\\]\" } */\n+static struct { int f2; } g2;\n+struct s { int f3; } g3;\n+union { int f4; } g4;\t\t/* { dg-warning \"C\\[+\\]\\[+\\]\" } */\n+static union { int f5; } g5;\n+union u { int f6; } g6;\n+enum { A } g7;\t\t\t/* { dg-warning \"C\\[+\\]\\[+\\]\" } */\n+static enum { B } g8;\n+enum E { C } g9;"}]}