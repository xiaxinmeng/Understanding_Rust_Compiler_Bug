{"sha": "fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM2ZGJkNTg0YjRhYTVjOTNkZGFmNTJhNjJkNDI5M2E1ZTQ5N2E5MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2020-01-08T00:38:00Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2020-01-08T00:38:00Z"}, "message": "compiler: fix loopdepth tracking in array slicing expression in escape analysis\n    \n    In the gc compiler, for slicing an array, its AST has an implicit\n    address operation node. There isn't such node in the gofrontend\n    AST. During the escape analysis, we create a fake node to mimic\n    the gc compiler's behavior. For the fake node, the loopdepth was\n    not tracked correctly, causing miscompilation. Since this is an\n    address operation, do the same thing as we do for the address\n    operator.\n    \n    Fixes golang/go#36404.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/213643\n\nFrom-SVN: r279984", "tree": {"sha": "35b3eff5e5a9e26e79ab8b26d37dcd86a678122b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35b3eff5e5a9e26e79ab8b26d37dcd86a678122b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90/comments", "author": null, "committer": null, "parents": [{"sha": "fd9ca4c64676a0fac332092285cb78918a2cdb11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd9ca4c64676a0fac332092285cb78918a2cdb11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd9ca4c64676a0fac332092285cb78918a2cdb11"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "d993dc89d3e2c6dc1615b1c75aade11583280169", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90", "patch": "@@ -1,4 +1,4 @@\n-6fa9657df508ff4d7760cf1abfad3611ba808561\n+e0790a756e9ba77e2d3d6ef5d0abbb11dd71211b\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "0d38858897d1e9266e512266db57403dcb05175a", "filename": "gcc/go/gofrontend/escape.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fescape.cc?ref=fc6dbd584b4aa5c93ddaf52a62d4293a5e497a90", "patch": "@@ -1906,7 +1906,8 @@ Escape_analysis_assign::expression(Expression** pexpr)\n             this->context_->track(addr_node);\n \n             Node::Escape_state* addr_state = addr_node->state(this->context_, NULL);\n-            addr_state->loop_depth = array_state->loop_depth;\n+            if (array_state->loop_depth != 0)\n+              addr_state->loop_depth = array_state->loop_depth;\n           }\n       }\n       break;"}]}