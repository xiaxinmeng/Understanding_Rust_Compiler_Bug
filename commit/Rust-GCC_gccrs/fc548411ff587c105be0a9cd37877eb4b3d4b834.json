{"sha": "fc548411ff587c105be0a9cd37877eb4b3d4b834", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM1NDg0MTFmZjU4N2MxMDViZTBhOWNkMzc4NzdlYjRiM2Q0YjgzNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-12-09T14:20:54Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-12-09T14:20:54Z"}, "message": "Remove gcc/ prefix\n\nFrom-SVN: r279130", "tree": {"sha": "aa310115a286a3bd056d10d6067aa15021267422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa310115a286a3bd056d10d6067aa15021267422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc548411ff587c105be0a9cd37877eb4b3d4b834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc548411ff587c105be0a9cd37877eb4b3d4b834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc548411ff587c105be0a9cd37877eb4b3d4b834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc548411ff587c105be0a9cd37877eb4b3d4b834/comments", "author": null, "committer": null, "parents": [{"sha": "0fad54f0a88160e81c3150b63c91fd9809665474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fad54f0a88160e81c3150b63c91fd9809665474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fad54f0a88160e81c3150b63c91fd9809665474"}], "stats": {"total": 140, "additions": 69, "deletions": 71}, "files": [{"sha": "aec9bba15e701043f8e9eaee600449a0f81b3c27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 69, "deletions": 71, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc548411ff587c105be0a9cd37877eb4b3d4b834/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc548411ff587c105be0a9cd37877eb4b3d4b834/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc548411ff587c105be0a9cd37877eb4b3d4b834", "patch": "@@ -29,67 +29,67 @@\n \n 2019-12-09  Hongtao Liu  <hongtao.liu@intel.com>\n \n-    * gcc/common/config/i386/i386-common.c\n-    (OPTION_MASK_ISA_AVX5124FMAPS_SET): Rename to\n-    OPTION_MASK_ISA2_AVX5124FMAPS_SET.\n-    (OPTION_MASK_ISA_AVX5124VNNIW_SET, OPTION_MASK_ISA_AVX512BF16_SET,\n-    OPTION_MASK_ISA_AVX512VP2INTERSECT_SET,\n-    OPTION_MASK_ISA_PCONFIG_SET, OPTION_MASK_ISA_WBNOINVD_SET,\n-    OPTION_MASK_ISA_SGX_SET, OPTION_MASK_ISA_CX16_SET,\n-    OPTION_MASK_ISA_MOVBE_SET, OPTION_MASK_ISA_PTWRITE_SET,\n-    OPTION_MASK_ISA_MWAITX_SET, OPTION_MASK_ISA_CLZERO_SET,\n-    OPTION_MASK_ISA_RDPID_SET, OPTION_MASK_ISA_VAES_SET,\n-    OPTION_MASK_ISA_MOVDIR64B_SET, OPTION_MASK_ISA_WAITPKG_SET,\n-    OPTION_MASK_ISA_CLDEMOTE_SET, OPTION_MASK_ISA_ENQCMD_SET,\n-    OPTION_MASK_ISA_AVX5124FMAPS_UNSET,\n-    OPTION_MASK_ISA_AVX5124VNNIW_UNSET,\n-    OPTION_MASK_ISA_AVX512BF16_UNSET,\n-    OPTION_MASK_ISA_AVX512VP2INTERSECT_UNSET,\n-    OPTION_MASK_ISA_PCONFIG_UNSET, OPTION_MASK_ISA_WBNOINVD_UNSET,\n-    OPTION_MASK_ISA_SGX_UNSET, OPTION_MASK_ISA_CX16_UNSET,\n-    OPTION_MASK_ISA_MOVBE_UNSET, OPTION_MASK_ISA_PTWRITE_UNSET,\n-    OPTION_MASK_ISA_MWAITX_UNSET, OPTION_MASK_ISA_CLZERO_UNSET,\n-    OPTION_MASK_ISA_RDPID_UNSET, OPTION_MASK_ISA_VAES_UNSET,\n-    OPTION_MASK_ISA_MOVDIR64B_UNSET, OPTION_MASK_ISA_WAITPKG_UNSET,\n-    OPTION_MASK_ISA_CLDEMOTE_UNSET, OPTION_MASK_ISA_ENQCMD_UNSET,\n-    OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n-    OPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n-    OPTION_MASK_ISA_PCONFIG, OPTION_MASK_ISA_WBNOINVD,\n-    OPTION_MASK_ISA_SGX, OPTION_MASK_ISA_CX16, OPTION_MASK_ISA_MOVBE,\n-    OPTION_MASK_ISA_PTWRITE, OPTION_MASK_ISA_MWAITX,\n-    OPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_RDPID,\n-    OPTION_MASK_ISA_VAES, OPTION_MASK_ISA_MOVDIR64B,\n-    OPTION_MASK_ISA_WAITPKG, OPTION_MASK_ISA_CLDEMOTE,\n-    OPTION_MASK_ISA_ENQCMD): Ditto.\n-    * gcc/config/i386/i386-builtin.def\n-    (OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n-    OPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n-    OPTION_MASK_ISA_WBNOINVD, OPTION_MASK_ISA_PTWRITE,\n-    OPTION_MASK_ISA_RDPID, OPTION_MASK_ISA_VAES,\n-    OPTION_MASK_ISA_MOVDIR64B, OPTION_MASK_ISA_ENQCMD): Ditto.\n-    * gcc/config/i386/i386-builtins.c (OPTION_MASK_ISA_MWAITX,\n-    OPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_WAITPKG,\n-    OPTION_MASK_ISA_CLDEMOTE, OPTION_MASK_ISA_WBNOINVD): Ditto.\n-    * gcc/config/i386/i386-c.c\n-    (OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n-    OPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n-    OPTION_MASK_ISA_PCONFIG, OPTION_MASK_ISA_WBNOINVD,\n-    OPTION_MASK_ISA_SGX, OPTION_MASK_ISA_CX16, OPTION_MASK_ISA_MOVBE,\n-    OPTION_MASK_ISA_PTWRITE, OPTION_MASK_ISA_MWAITX,\n-    OPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_RDPID,\n-    OPTION_MASK_ISA_VAES, OPTION_MASK_ISA_MOVDIR64B,\n-    OPTION_MASK_ISA_WAITPKG, OPTION_MASK_ISA_CLDEMOTE,\n-    OPTION_MASK_ISA_ENQCMD): Ditto.\n-    * gcc/config/i386/i386-option.c: Ditto\n-    * gcc/config/i386/i386.opt: Ditto..\n-    * gcc/config/i386/i386.h: (TARGET_ISA_AVX5124FMAPS,\n-    TARGET_ISA_AVX5124VNNIW,  TARGET_ISA_AVX512BF16,\n-    TARGET_ISA_AVX512VP2INTERSECT, TARGET_ISA_PCONFIG,\n-    TARGET_ISA_WBNOINVD, TARGET_ISA_SGX, TARGET_ISA_CX16,\n-    TARGET_ISA_MOVBE, TARGET_ISA_PTWRITE, TARGET_ISA_MWAITX,\n-    TARGET_ISA_CLZERO, TARGET_ISA_RDPID, TARGET_ISA_VAES,\n-    TARGET_ISA_MOVDIR64B, TARGET_ISA_WAITPKG, TARGET_ISA_CLDEMOTE)\n-    TARGET_ISA_ENQCMD): Ditto.\n+\t* common/config/i386/i386-common.c\n+\t(OPTION_MASK_ISA_AVX5124FMAPS_SET): Rename to\n+\tOPTION_MASK_ISA2_AVX5124FMAPS_SET.\n+\t(OPTION_MASK_ISA_AVX5124VNNIW_SET, OPTION_MASK_ISA_AVX512BF16_SET,\n+\tOPTION_MASK_ISA_AVX512VP2INTERSECT_SET,\n+\tOPTION_MASK_ISA_PCONFIG_SET, OPTION_MASK_ISA_WBNOINVD_SET,\n+\tOPTION_MASK_ISA_SGX_SET, OPTION_MASK_ISA_CX16_SET,\n+\tOPTION_MASK_ISA_MOVBE_SET, OPTION_MASK_ISA_PTWRITE_SET,\n+\tOPTION_MASK_ISA_MWAITX_SET, OPTION_MASK_ISA_CLZERO_SET,\n+\tOPTION_MASK_ISA_RDPID_SET, OPTION_MASK_ISA_VAES_SET,\n+\tOPTION_MASK_ISA_MOVDIR64B_SET, OPTION_MASK_ISA_WAITPKG_SET,\n+\tOPTION_MASK_ISA_CLDEMOTE_SET, OPTION_MASK_ISA_ENQCMD_SET,\n+\tOPTION_MASK_ISA_AVX5124FMAPS_UNSET,\n+\tOPTION_MASK_ISA_AVX5124VNNIW_UNSET,\n+\tOPTION_MASK_ISA_AVX512BF16_UNSET,\n+\tOPTION_MASK_ISA_AVX512VP2INTERSECT_UNSET,\n+\tOPTION_MASK_ISA_PCONFIG_UNSET, OPTION_MASK_ISA_WBNOINVD_UNSET,\n+\tOPTION_MASK_ISA_SGX_UNSET, OPTION_MASK_ISA_CX16_UNSET,\n+\tOPTION_MASK_ISA_MOVBE_UNSET, OPTION_MASK_ISA_PTWRITE_UNSET,\n+\tOPTION_MASK_ISA_MWAITX_UNSET, OPTION_MASK_ISA_CLZERO_UNSET,\n+\tOPTION_MASK_ISA_RDPID_UNSET, OPTION_MASK_ISA_VAES_UNSET,\n+\tOPTION_MASK_ISA_MOVDIR64B_UNSET, OPTION_MASK_ISA_WAITPKG_UNSET,\n+\tOPTION_MASK_ISA_CLDEMOTE_UNSET, OPTION_MASK_ISA_ENQCMD_UNSET,\n+\tOPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n+\tOPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n+\tOPTION_MASK_ISA_PCONFIG, OPTION_MASK_ISA_WBNOINVD,\n+\tOPTION_MASK_ISA_SGX, OPTION_MASK_ISA_CX16, OPTION_MASK_ISA_MOVBE,\n+\tOPTION_MASK_ISA_PTWRITE, OPTION_MASK_ISA_MWAITX,\n+\tOPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_RDPID,\n+\tOPTION_MASK_ISA_VAES, OPTION_MASK_ISA_MOVDIR64B,\n+\tOPTION_MASK_ISA_WAITPKG, OPTION_MASK_ISA_CLDEMOTE,\n+\tOPTION_MASK_ISA_ENQCMD): Ditto.\n+\t* config/i386/i386-builtin.def\n+\t(OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n+\tOPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n+\tOPTION_MASK_ISA_WBNOINVD, OPTION_MASK_ISA_PTWRITE,\n+\tOPTION_MASK_ISA_RDPID, OPTION_MASK_ISA_VAES,\n+\tOPTION_MASK_ISA_MOVDIR64B, OPTION_MASK_ISA_ENQCMD): Ditto.\n+\t* config/i386/i386-builtins.c (OPTION_MASK_ISA_MWAITX,\n+\tOPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_WAITPKG,\n+\tOPTION_MASK_ISA_CLDEMOTE, OPTION_MASK_ISA_WBNOINVD): Ditto.\n+\t* config/i386/i386-c.c\n+\t(OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n+\tOPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n+\tOPTION_MASK_ISA_PCONFIG, OPTION_MASK_ISA_WBNOINVD,\n+\tOPTION_MASK_ISA_SGX, OPTION_MASK_ISA_CX16, OPTION_MASK_ISA_MOVBE,\n+\tOPTION_MASK_ISA_PTWRITE, OPTION_MASK_ISA_MWAITX,\n+\tOPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_RDPID,\n+\tOPTION_MASK_ISA_VAES, OPTION_MASK_ISA_MOVDIR64B,\n+\tOPTION_MASK_ISA_WAITPKG, OPTION_MASK_ISA_CLDEMOTE,\n+\tOPTION_MASK_ISA_ENQCMD): Ditto.\n+\t* config/i386/i386-option.c: Ditto\n+\t* config/i386/i386.opt: Ditto..\n+\t* config/i386/i386.h: (TARGET_ISA_AVX5124FMAPS,\n+\tTARGET_ISA_AVX5124VNNIW,  TARGET_ISA_AVX512BF16,\n+\tTARGET_ISA_AVX512VP2INTERSECT, TARGET_ISA_PCONFIG,\n+\tTARGET_ISA_WBNOINVD, TARGET_ISA_SGX, TARGET_ISA_CX16,\n+\tTARGET_ISA_MOVBE, TARGET_ISA_PTWRITE, TARGET_ISA_MWAITX,\n+\tTARGET_ISA_CLZERO, TARGET_ISA_RDPID, TARGET_ISA_VAES,\n+\tTARGET_ISA_MOVDIR64B, TARGET_ISA_WAITPKG, TARGET_ISA_CLDEMOTE)\n+\tTARGET_ISA_ENQCMD): Ditto.\n \n 2019-12-09  Sudakshina Das  <sudi.das@arm.com>\n \t    Richard Sandiford  <richard.sandiford@arm.com>\n@@ -147,7 +147,6 @@\n 2019-12-08  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tRevert:\n-\n \t2019-12-05  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config/nios2/linux.h (LINK_EH_SPEC): Define.\n@@ -445,7 +444,7 @@\n \tHandle variable offsets and indices.\n \t* builtins.h (gimple_call_alloc_size): Declare.\n \t(compute_objsize): Add argument.\n-\t* gcc/gimple-ssa-warn-restrict.c: Remove assertions.\n+\t* gimple-ssa-warn-restrict.c: Remove assertions.\n \t* tree-ssa-strlen.c (handle_store): Handle calls to allocated objects.\n \n 2019-12-04  Julian Brown  <julian@codesourcery.com>\n@@ -516,7 +515,7 @@\n 2019-12-04  Kewen Lin  <linkw@gcc.gnu.org>\n \n \tPR target/92760\n-\t* gcc/config/rs6000/rs6000.c (rs6000_preferred_simd_mode): Use\n+\t* config/rs6000/rs6000.c (rs6000_preferred_simd_mode): Use\n \tVECTOR_MEM_NONE_P instead of VECTOR_UNIT_NONE_P.\n \n 2019-12-03  Jan Hubicka  <hubicka@ucw.cz>\n@@ -1057,12 +1056,12 @@\n 2019-11-28  Kewen Lin  <linkw@gcc.gnu.org>\n \n \tPR target/92566\n-\t* gcc/config/rs6000/rs6000.c (rs6000_preferred_simd_mode): Check\n+\t* config/rs6000/rs6000.c (rs6000_preferred_simd_mode): Check\n \tby VECTOR_UNIT_NONE_P instead.\n \n 2019-11-28  Hongtao Liu  <hongtao.liu@inte.com>\n \n-\t* gcc/config/i386/sse.md (avx512f_maskcmp<mode>3):\n+\t* config/i386/sse.md (avx512f_maskcmp<mode>3):\n \tRefine VF to VF_AVX512VL.\n \n 2019-11-27  Michael Meissner  <meissner@linux.ibm.com>\n@@ -1141,7 +1140,7 @@\n 2019-11-27  Kewen Lin  <linkw@gcc.gnu.org>\n \n \tPR tree-optimization/91790\n-\t* gcc/tree-vect-stmts.c (vectorizable_load): Use the adjusted\n+\t* tree-vect-stmts.c (vectorizable_load): Use the adjusted\n \tDR for vect_setup_realignment when first_stmt_info is different\n \tfrom first_stmt_info_for_drptr.\n \n@@ -3917,7 +3916,7 @@\n \t(maybe_warn_overlap): New function.\n \t(pass_sprintf_length::compute_format_length): Call it.\n \t(pass_sprintf_length::handle_gimple_call): Initialize new members.\n-\t* gcc/tree-ssa-strlen.c (): Also enable when -Wrestrict is on.\n+\t* tree-ssa-strlen.c (): Also enable when -Wrestrict is on.\n \n 2019-11-12  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n@@ -4466,7 +4465,6 @@\n \t    Frederik Harwath  <frederik@codesourcery.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>\n \n-\tgcc/\n \t* gimple.h (gf_mask): Add GF_OMP_TARGET_KIND_OACC_SERIAL\n \tenumeration constant.\n \t(is_gimple_omp_oacc): Handle GF_OMP_TARGET_KIND_OACC_SERIAL.\n@@ -4651,8 +4649,8 @@\n 2019-11-11  Jiufu Guo  <guojiufu@linux.ibm.com>\n \n \tPR tree-optimization/88760\n-\t* gcc/config/rs6000/rs6000.opt (-munroll-only-small-loops): New option.\n-\t* gcc/common/config/rs6000/rs6000-common.c\n+\t* config/rs6000/rs6000.opt (-munroll-only-small-loops): New option.\n+\t* common/config/rs6000/rs6000-common.c\n \t(rs6000_option_optimization_table) [OPT_LEVELS_2_PLUS_SPEED_ONLY]:\n \tTurn on -funroll-loops and -munroll-only-small-loops.\n \t[OPT_LEVELS_ALL]: Turn off -fweb and -frename-registers."}]}