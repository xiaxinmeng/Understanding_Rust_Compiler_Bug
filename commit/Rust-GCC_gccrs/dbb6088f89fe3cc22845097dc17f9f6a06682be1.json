{"sha": "dbb6088f89fe3cc22845097dc17f9f6a06682be1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiNjA4OGY4OWZlM2NjMjI4NDUwOTdkYzE3ZjlmNmEwNjY4MmJlMQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2009-05-20T12:44:44Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2009-05-20T12:44:44Z"}, "message": "gstab.h (stab_code_type): Define, to be used instead of the __stab_debug_code enum, made anonymous.\n\n\t* gstab.h (stab_code_type): Define, to be used instead of the\n\t__stab_debug_code enum, made anonymous.  Add 2009 to the copyright\n\tnotice.\n\t* dbxout.c (STAB_CODE_TYPE): Remove #define and replace use\n\toccurrences by stab_code_type.\n\t* mips-tfile.c (STAB_CODE_TYPE): Remove #define, unused.\n\nFrom-SVN: r147734", "tree": {"sha": "f1aa85cae9c808d63e36ad9a6513afc74266aab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1aa85cae9c808d63e36ad9a6513afc74266aab3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb6088f89fe3cc22845097dc17f9f6a06682be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb6088f89fe3cc22845097dc17f9f6a06682be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb6088f89fe3cc22845097dc17f9f6a06682be1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb6088f89fe3cc22845097dc17f9f6a06682be1/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ec492570b77735583dceb28b091b4fa71ea1320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec492570b77735583dceb28b091b4fa71ea1320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec492570b77735583dceb28b091b4fa71ea1320"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "59721f4963989ba5f5240c5f734afb814825a009", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb6088f89fe3cc22845097dc17f9f6a06682be1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb6088f89fe3cc22845097dc17f9f6a06682be1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbb6088f89fe3cc22845097dc17f9f6a06682be1", "patch": "@@ -1,3 +1,12 @@\n+2009-05-20  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gstab.h (stab_code_type): Define, to be used instead of the\n+\t__stab_debug_code enum, made anonymous.  Add 2009 to the copyright\n+\tnotice.\n+\t* dbxout.c (STAB_CODE_TYPE): Remove #define and replace use\n+\toccurrences by stab_code_type.\n+\t* mips-tfile.c (STAB_CODE_TYPE): Remove #define, unused.\n+\n 2009-05-20  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-flow.h (insert_edge_copies_seq): Undeclare."}, {"sha": "9ec0525d9591550b7c8e4835044014f25345d15a", "filename": "gcc/dbxout.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb6088f89fe3cc22845097dc17f9f6a06682be1/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb6088f89fe3cc22845097dc17f9f6a06682be1/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=dbb6088f89fe3cc22845097dc17f9f6a06682be1", "patch": "@@ -275,8 +275,6 @@ static const char *base_input_file;\n \n #include \"gstab.h\"\n \n-#define STAB_CODE_TYPE enum __stab_debug_code\n-\n /* 1 if PARM is passed to this function in memory.  */\n \n #define PARM_PASSED_IN_MEMORY(PARM) \\\n@@ -326,7 +324,7 @@ static void dbxout_type_name (tree);\n static void dbxout_class_name_qualifiers (tree);\n static int dbxout_symbol_location (tree, tree, const char *, rtx);\n static void dbxout_symbol_name (tree, const char *, int);\n-static void dbxout_common_name (tree, const char *, STAB_CODE_TYPE);\n+static void dbxout_common_name (tree, const char *, stab_code_type);\n static const char *dbxout_common_check (tree, int *);\n static void dbxout_global_decl (tree);\n static void dbxout_type_decl (tree, int);\n@@ -842,7 +840,7 @@ do {\t\t\t\t\t\t\t\t\\\n    to DBX_FINISH_STABS; see above for details.  */\n    \n static void\n-dbxout_finish_complex_stabs (tree sym, STAB_CODE_TYPE code,\n+dbxout_finish_complex_stabs (tree sym, stab_code_type code,\n \t\t\t     rtx addr, const char *label, int number)\n {\n   int line ATTRIBUTE_UNUSED;\n@@ -2852,7 +2850,7 @@ static int\n dbxout_symbol_location (tree decl, tree type, const char *suffix, rtx home)\n {\n   int letter = 0;\n-  STAB_CODE_TYPE code;\n+  stab_code_type code;\n   rtx addr = 0;\n   int number = 0;\n   int regno = -1;\n@@ -3157,7 +3155,7 @@ dbxout_symbol_name (tree decl, const char *suffix, int letter)\n    emits the N_BCOMM and N_ECOMM stabs.  */\n \n static void\n-dbxout_common_name (tree decl, const char *name, STAB_CODE_TYPE op)\n+dbxout_common_name (tree decl, const char *name, stab_code_type op)\n {\n   dbxout_begin_complex_stabs ();\n   stabstr_S (name);\n@@ -3325,7 +3323,7 @@ dbxout_parms (tree parms)\n       {\n \ttree eff_type;\n \tchar letter;\n-\tSTAB_CODE_TYPE code;\n+\tstab_code_type code;\n \tint number;\n \n \t/* Perform any necessary register eliminations on the parameter's rtl,"}, {"sha": "fccb296cd9a43edf3f60acecfafdc67ddf884bd4", "filename": "gcc/gstab.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb6088f89fe3cc22845097dc17f9f6a06682be1/gcc%2Fgstab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb6088f89fe3cc22845097dc17f9f6a06682be1/gcc%2Fgstab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgstab.h?ref=dbb6088f89fe3cc22845097dc17f9f6a06682be1", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1997, 1998, 2001 Free Software Foundation, Inc.\n+/* Copyright (C) 1997, 1998, 2001, 2009 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -21,12 +21,15 @@ along with GCC; see the file COPYING3.  If not see\n \n #define __define_stab(NAME, CODE, STRING) NAME=CODE,\n \n-enum __stab_debug_code\n+enum\n {\n #include \"stab.def\"\n LAST_UNUSED_STAB_CODE\n };\n \n+/* stabs debug codes really are integers with expressive names.  */\n+typedef int stab_code_type;\n+\n #undef __define_stab\n \n #endif /* ! GCC_GSTAB_H */"}, {"sha": "07d229e672cc17012a237c113727b1d0d86f067c", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb6088f89fe3cc22845097dc17f9f6a06682be1/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb6088f89fe3cc22845097dc17f9f6a06682be1/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=dbb6088f89fe3cc22845097dc17f9f6a06682be1", "patch": "@@ -675,8 +675,6 @@ main (void)\n \n #include \"gstab.h\"\n \n-#define STAB_CODE_TYPE enum __stab_debug_code\n-\n #ifndef MALLOC_CHECK\n #ifdef\t__SABER__\n #define MALLOC_CHECK"}]}