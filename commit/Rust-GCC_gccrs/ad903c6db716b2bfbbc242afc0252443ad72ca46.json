{"sha": "ad903c6db716b2bfbbc242afc0252443ad72ca46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ5MDNjNmRiNzE2YjJiZmJiYzI0MmFmYzAyNTI0NDNhZDcyY2E0Ng==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2005-04-21T16:22:33Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2005-04-21T16:22:33Z"}, "message": "re PR java/21115 (false boolean argument passed from pre-compiled to interpreted method is true)\n\n2005-04-21  Anthony Green  <green@redhat.com>\n\n        PR libgcj/21115\n        * testsuite/libjava.special/special.exp,\n        testsuite/libjava.special/pr21115I.java,\n        testsuite/libjava.special/pr21115.java,\n        testsuite/libjava.special/pr21115.out: New files.\n\nFrom-SVN: r98511", "tree": {"sha": "1ce30935c538cf7acadb1dde58e6e8119c78fe14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ce30935c538cf7acadb1dde58e6e8119c78fe14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad903c6db716b2bfbbc242afc0252443ad72ca46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad903c6db716b2bfbbc242afc0252443ad72ca46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad903c6db716b2bfbbc242afc0252443ad72ca46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad903c6db716b2bfbbc242afc0252443ad72ca46/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55f96367561241fe9885766948d372bf850985de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f96367561241fe9885766948d372bf850985de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55f96367561241fe9885766948d372bf850985de"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "d8611531cd11c26563dae5a7ea3d66b6a30a89d9", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad903c6db716b2bfbbc242afc0252443ad72ca46/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad903c6db716b2bfbbc242afc0252443ad72ca46/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ad903c6db716b2bfbbc242afc0252443ad72ca46", "patch": "@@ -1,3 +1,11 @@\n+2005-04-21  Anthony Green  <green@redhat.com>\n+\n+\tPR libgcj/21115\n+\t* testsuite/libjava.special/special.exp,\n+\ttestsuite/libjava.special/pr21115I.java,\n+\ttestsuite/libjava.special/pr21115.java,\n+\ttestsuite/libjava.special/pr21115.out: New files.\n+\n 2005-04-21  Chris Burdess  <dog@gnu.org>\n \n \t* gnu/java/net/CRLFInputStream.java: Rewrite to return"}, {"sha": "2e23f271eb19a5204c2afb0b0de9877565b7d92b", "filename": "libjava/testsuite/libjava.special/pr21115.java", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad903c6db716b2bfbbc242afc0252443ad72ca46/libjava%2Ftestsuite%2Flibjava.special%2Fpr21115.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad903c6db716b2bfbbc242afc0252443ad72ca46/libjava%2Ftestsuite%2Flibjava.special%2Fpr21115.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.special%2Fpr21115.java?ref=ad903c6db716b2bfbbc242afc0252443ad72ca46", "patch": "@@ -0,0 +1,34 @@\n+public abstract class pr21115\n+{\n+  public static void main(String[] args) throws Exception\n+  {\n+    Class c = Class.forName(\"pr21115I\");\n+    Object o = c.newInstance();\n+    pr21115 t = (pr21115) o;\n+    // Try to fill the stack with 0xff.\n+    t.test (0xffffffff, 0xffffffff,\n+\t    0xffffffff, 0xffffffff,\n+\t    0xffffffff, 0xffffffff,\n+\t    0xffffffff, 0xffffffff,\n+\t    0xffffffff, 0xffffffff);\n+    // Pass a bunch of false (0) values.\n+    if (t.test (false, false,\n+\t\tfalse, false,\n+\t\tfalse, false,\n+\t\tfalse, false,\n+\t\tfalse, false))\n+      System.out.println (\"FAILED - expecting false return value.\");\n+  }\n+\n+  public abstract boolean test(boolean a, boolean b,\n+\t\t\t       boolean c, boolean d,\n+\t\t\t       boolean e, boolean f,\n+\t\t\t       boolean g, boolean h,\n+\t\t\t       boolean i, boolean j);\n+  \n+  public abstract boolean test(int a, int b,\n+\t\t\t       int c, int d,\n+\t\t\t       int e, int f,\n+\t\t\t       int g, int h,\n+\t\t\t       int i, int j);\n+}"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "libjava/testsuite/libjava.special/pr21115.out", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad903c6db716b2bfbbc242afc0252443ad72ca46/libjava%2Ftestsuite%2Flibjava.special%2Fpr21115.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad903c6db716b2bfbbc242afc0252443ad72ca46/libjava%2Ftestsuite%2Flibjava.special%2Fpr21115.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.special%2Fpr21115.out?ref=ad903c6db716b2bfbbc242afc0252443ad72ca46"}, {"sha": "17701ac079cd6dbc46f9acfcda50d8924edca882", "filename": "libjava/testsuite/libjava.special/pr21115I.java", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad903c6db716b2bfbbc242afc0252443ad72ca46/libjava%2Ftestsuite%2Flibjava.special%2Fpr21115I.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad903c6db716b2bfbbc242afc0252443ad72ca46/libjava%2Ftestsuite%2Flibjava.special%2Fpr21115I.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.special%2Fpr21115I.java?ref=ad903c6db716b2bfbbc242afc0252443ad72ca46", "patch": "@@ -0,0 +1,20 @@\n+public class pr21115I extends pr21115\n+{\n+  public boolean test(boolean a, boolean b,\n+\t\t      boolean c, boolean d,\n+\t\t      boolean e, boolean f,\n+\t\t      boolean g, boolean h,\n+\t\t      boolean i, boolean j)\n+  {\n+    return a && b && c && d && e && f && g && h && i;\n+  }\n+  \n+  public boolean test(int a, int b,\n+\t\t      int c, int d,\n+\t\t      int e, int f,\n+\t\t      int g, int h,\n+\t\t      int i, int j)\n+  {\n+    return true;\n+  }\n+}"}, {"sha": "76afd9a70b0c22176dcea7233b0550db0ecba496", "filename": "libjava/testsuite/libjava.special/special.exp", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad903c6db716b2bfbbc242afc0252443ad72ca46/libjava%2Ftestsuite%2Flibjava.special%2Fspecial.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad903c6db716b2bfbbc242afc0252443ad72ca46/libjava%2Ftestsuite%2Flibjava.special%2Fspecial.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.special%2Fspecial.exp?ref=ad903c6db716b2bfbbc242afc0252443ad72ca46", "patch": "@@ -0,0 +1,30 @@\n+# Special test cases.  These require tricky build procedures.\n+\n+proc gcj_special_run {} {\n+  global srcdir subdir env\n+\n+  # ---- PR 21115 -------------------------------------------------------\n+\n+  if {! [bytecompile_file ${srcdir}/${subdir}/pr21115I.java [pwd]]} {\n+    fail \"bytecompile ${srcdir}/${subdir}/libjava.special/pr21115I.java\"\n+    # FIXME - should use `untested' on all remaining tests.\n+    # But that is hard.\n+    return 0\n+  }\n+  pass \"bytecompile pr21115I.java\"\n+\n+    if {! [gcj_link pr21115 pr21115 [list ${srcdir}/${subdir}/pr21115.java]]} {\n+    fail \"compiling/linking pr21115.java\"\n+    # FIXME\n+    return 0\n+  }\n+\n+  if {! [gcj_invoke pr21115 ${srcdir}/${subdir}/pr21115.out \"\"]} {\n+    # FIXME\n+    return 0\n+  }\n+\n+  return 1\n+}\n+\n+gcj_special_run"}]}