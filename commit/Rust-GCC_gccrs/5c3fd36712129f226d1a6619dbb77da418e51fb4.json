{"sha": "5c3fd36712129f226d1a6619dbb77da418e51fb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMzZmQzNjcxMjEyOWYyMjZkMWE2NjE5ZGJiNzdkYTQxOGU1MWZiNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-12T04:30:44Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-12T04:30:44Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r302", "tree": {"sha": "8a559f74e06653283c6c5587dcd70680c3c86a14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a559f74e06653283c6c5587dcd70680c3c86a14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c3fd36712129f226d1a6619dbb77da418e51fb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3fd36712129f226d1a6619dbb77da418e51fb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c3fd36712129f226d1a6619dbb77da418e51fb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3fd36712129f226d1a6619dbb77da418e51fb4/comments", "author": null, "committer": null, "parents": [{"sha": "93fb14a8b05ddb8c0a1b80e53a373b556ab817ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93fb14a8b05ddb8c0a1b80e53a373b556ab817ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93fb14a8b05ddb8c0a1b80e53a373b556ab817ba"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "a26f286b459f955c6d6af8f97e7658e5f332bbd0", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c3fd36712129f226d1a6619dbb77da418e51fb4/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c3fd36712129f226d1a6619dbb77da418e51fb4/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=5c3fd36712129f226d1a6619dbb77da418e51fb4", "patch": "@@ -319,6 +319,12 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n    of the first local allocated.  */\n #define STARTING_FRAME_OFFSET 0\n \n+/* Given an rtx for the address of a frame,\n+   return an rtx for the address of the word in the frame\n+   that holds the dynamic chain--the previous frame's address.  */\n+#define DYNAMIC_CHAIN_ADDRESS(frame) \\\n+gen_rtx (PLUS, Pmode, frame, gen_rtx (CONST_INT, VOIDmode, 12))\n+\n /* If we generate an insn to push BYTES bytes,\n    this says how many the stack pointer really advances by.\n    On the vax, -(sp) pushes only the bytes of the operands.  */"}]}