{"sha": "5d911cafe95879bb3d1442a2fd6affbba1e9c279", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ5MTFjYWZlOTU4NzliYjNkMTQ0MmEyZmQ2YWZmYmJhMWU5YzI3OQ==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-04-24T08:45:13Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-04-24T08:45:13Z"}, "message": "stop using rtx_insn_list in reorg.c\n\ngcc/ChangeLog:\n\n2016-04-24  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* reorg.c (try_merge_delay_insns): Make merged_insns a vector.\n\nFrom-SVN: r235393", "tree": {"sha": "03ea49a554e05fff4b6181d15fa94f85201322b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03ea49a554e05fff4b6181d15fa94f85201322b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d911cafe95879bb3d1442a2fd6affbba1e9c279", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d911cafe95879bb3d1442a2fd6affbba1e9c279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d911cafe95879bb3d1442a2fd6affbba1e9c279", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d911cafe95879bb3d1442a2fd6affbba1e9c279/comments", "author": null, "committer": null, "parents": [{"sha": "12e109d14b37685b6c6067fb94f1887411b130d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e109d14b37685b6c6067fb94f1887411b130d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e109d14b37685b6c6067fb94f1887411b130d0"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "8cfccea95ef0332dbaccc2490af906f8e7a18cb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d911cafe95879bb3d1442a2fd6affbba1e9c279/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d911cafe95879bb3d1442a2fd6affbba1e9c279/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d911cafe95879bb3d1442a2fd6affbba1e9c279", "patch": "@@ -1,3 +1,7 @@\n+2016-04-24  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* reorg.c (try_merge_delay_insns): Make merged_insns a vector.\n+\n 2016-04-24  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* vec.h (vec_safe_contains): New function."}, {"sha": "8fb912a0f92d231f301ab74aa10dd0a17f0ed7c7", "filename": "gcc/reorg.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d911cafe95879bb3d1442a2fd6affbba1e9c279/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d911cafe95879bb3d1442a2fd6affbba1e9c279/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=5d911cafe95879bb3d1442a2fd6affbba1e9c279", "patch": "@@ -1259,7 +1259,7 @@ try_merge_delay_insns (rtx_insn *insn, rtx_insn *thread)\n   int num_slots = XVECLEN (PATTERN (insn), 0);\n   rtx next_to_match = XVECEXP (PATTERN (insn), 0, slot_number);\n   struct resources set, needed, modified;\n-  rtx_insn_list *merged_insns = 0;\n+  auto_vec<std::pair<rtx_insn *, bool>, 10> merged_insns;\n   int i, j;\n   int flags;\n \n@@ -1319,7 +1319,7 @@ try_merge_delay_insns (rtx_insn *insn, rtx_insn *thread)\n \t      INSN_FROM_TARGET_P (next_to_match) = 0;\n \t    }\n \t  else\n-\t    merged_insns = gen_rtx_INSN_LIST (VOIDmode, trial, merged_insns);\n+\t    merged_insns.safe_push (std::pair<rtx_insn *, bool> (trial, false));\n \n \t  if (++slot_number == num_slots)\n \t    break;\n@@ -1384,8 +1384,8 @@ try_merge_delay_insns (rtx_insn *insn, rtx_insn *thread)\n \t\t  INSN_FROM_TARGET_P (next_to_match) = 0;\n \t\t}\n \t      else\n-\t\tmerged_insns = gen_rtx_INSN_LIST (SImode, dtrial,\n-\t\t\t\t\t\t  merged_insns);\n+\t\tmerged_insns.safe_push (std::pair<rtx_insn *, bool> (dtrial,\n+\t\t\t\t\t\t\t\t     true));\n \n \t      if (++slot_number == num_slots)\n \t\tbreak;\n@@ -1409,21 +1409,20 @@ try_merge_delay_insns (rtx_insn *insn, rtx_insn *thread)\n      target.  */\n   if (slot_number == num_slots && annul_p)\n     {\n-      for (; merged_insns; merged_insns = merged_insns->next ())\n+      unsigned int len = merged_insns.length ();\n+      for (unsigned int i = len - 1; i < len; i--)\n \t{\n-\t  if (GET_MODE (merged_insns) == SImode)\n+\t  if (merged_insns[i].second)\n \t    {\n-\t      rtx_insn *new_rtx;\n-\n-\t      update_block (merged_insns->insn (), thread);\n-\t      new_rtx = delete_from_delay_slot (merged_insns->insn ());\n+\t      update_block (merged_insns[i].first, thread);\n+\t      rtx_insn *new_rtx = delete_from_delay_slot (merged_insns[i].first);\n \t      if (thread->deleted ())\n \t\tthread = new_rtx;\n \t    }\n \t  else\n \t    {\n-\t      update_block (merged_insns->insn (), thread);\n-\t      delete_related_insns (merged_insns->insn ());\n+\t      update_block (merged_insns[i].first, thread);\n+\t      delete_related_insns (merged_insns[i].first);\n \t    }\n \t}\n "}]}