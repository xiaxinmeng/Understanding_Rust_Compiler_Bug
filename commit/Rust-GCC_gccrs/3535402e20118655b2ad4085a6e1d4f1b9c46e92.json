{"sha": "3535402e20118655b2ad4085a6e1d4f1b9c46e92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUzNTQwMmUyMDExODY1NWIyYWQ0MDg1YTZlMWQ0ZjFiOWM0NmU5Mg==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-10-22T20:23:48Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2021-02-03T14:25:33Z"}, "message": "amdgcn: Add gfx908 support\n\ngcc/\n\n\t* config/gcn/gcn-opts.h (enum processor_type): Add PROCESSOR_GFX908.\n\t* config/gcn/gcn.c (gcn_omp_device_kind_arch_isa): Add gfx908.\n\t(output_file_start): Add gfx908.\n\t* config/gcn/gcn.opt (gpu_type): Add gfx908.\n\t* config/gcn/t-gcn-hsa (MULTILIB_OPTIONS): Add march=gfx908.\n\t(MULTILIB_DIRNAMES): Add gfx908.\n\t* config/gcn/mkoffload.c (EF_AMDGPU_MACH_AMDGCN_GFX908): New define.\n\t(main): Recognize gfx908.\n\t* config/gcn/t-omp-device: Add gfx908.\n\nlibgomp/\n\n\t* plugin/plugin-gcn.c (EF_AMDGPU_MACH): Add\n\tEF_AMDGPU_MACH_AMDGCN_GFX908.\n\t(gcn_gfx908_s): New constant string.\n\t(isa_hsa_name): Add gfx908.\n\t(isa_code): Add gfx908.", "tree": {"sha": "14f777474f73b72dd2ce0e654ab8fc9206a6de1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14f777474f73b72dd2ce0e654ab8fc9206a6de1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3535402e20118655b2ad4085a6e1d4f1b9c46e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3535402e20118655b2ad4085a6e1d4f1b9c46e92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3535402e20118655b2ad4085a6e1d4f1b9c46e92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3535402e20118655b2ad4085a6e1d4f1b9c46e92/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9633e5797637ac395e3ef8048d421a77c84e73a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9633e5797637ac395e3ef8048d421a77c84e73a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9633e5797637ac395e3ef8048d421a77c84e73a8"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "ed67d015ff80fa60765f3cc9de9c592103154b24", "filename": "gcc/config/gcn/gcn-opts.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Fgcn-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Fgcn-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-opts.h?ref=3535402e20118655b2ad4085a6e1d4f1b9c46e92", "patch": "@@ -22,7 +22,8 @@ enum processor_type\n {\n   PROCESSOR_FIJI,    // gfx803\n   PROCESSOR_VEGA10,  // gfx900\n-  PROCESSOR_VEGA20   // gfx906\n+  PROCESSOR_VEGA20,  // gfx906\n+  PROCESSOR_GFX908   // as yet unnamed\n };\n \n /* Set in gcn_option_override.  */"}, {"sha": "e8bb0b6375685de0851a36f1902de6c0bdbe23c8", "filename": "gcc/config/gcn/gcn.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Fgcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Fgcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.c?ref=3535402e20118655b2ad4085a6e1d4f1b9c46e92", "patch": "@@ -2589,6 +2589,8 @@ gcn_omp_device_kind_arch_isa (enum omp_device_kind_arch_isa trait,\n \treturn gcn_arch == PROCESSOR_VEGA10;\n       if (strcmp (name, \"gfx906\") == 0)\n \treturn gcn_arch == PROCESSOR_VEGA20;\n+      if (strcmp (name, \"gfx908\") == 0)\n+\treturn gcn_arch == PROCESSOR_GFX908;\n       return 0;\n     default:\n       gcc_unreachable ();\n@@ -5030,6 +5032,7 @@ output_file_start (void)\n     case PROCESSOR_FIJI: cpu = \"gfx803\"; break;\n     case PROCESSOR_VEGA10: cpu = \"gfx900\"; break;\n     case PROCESSOR_VEGA20: cpu = \"gfx906\"; break;\n+    case PROCESSOR_GFX908: cpu = \"gfx908+sram-ecc\"; break;\n     default: gcc_unreachable ();\n     }\n "}, {"sha": "767d45826c2f8436a15e4dd4e605125d06d80c2a", "filename": "gcc/config/gcn/gcn.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Fgcn.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Fgcn.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.opt?ref=3535402e20118655b2ad4085a6e1d4f1b9c46e92", "patch": "@@ -34,6 +34,9 @@ Enum(gpu_type) String(gfx900) Value(PROCESSOR_VEGA10)\n EnumValue\n Enum(gpu_type) String(gfx906) Value(PROCESSOR_VEGA20)\n \n+EnumValue\n+Enum(gpu_type) String(gfx908) Value(PROCESSOR_GFX908)\n+\n march=\n Target RejectNegative Joined ToLower Enum(gpu_type) Var(gcn_arch) Init(PROCESSOR_FIJI)\n Specify the name of the target GPU."}, {"sha": "dc9d5180a3516fcfac919c747caec288b5814ee7", "filename": "gcc/config/gcn/mkoffload.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Fmkoffload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Fmkoffload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fmkoffload.c?ref=3535402e20118655b2ad4085a6e1d4f1b9c46e92", "patch": "@@ -51,6 +51,8 @@\n #define EF_AMDGPU_MACH_AMDGCN_GFX900 0x2c\n #undef  EF_AMDGPU_MACH_AMDGCN_GFX906\n #define EF_AMDGPU_MACH_AMDGCN_GFX906 0x2f\n+#undef  EF_AMDGPU_MACH_AMDGCN_GFX908\n+#define EF_AMDGPU_MACH_AMDGCN_GFX908 0x230  // Assume SRAM-ECC enabled.\n \n #ifndef R_AMDGPU_NONE\n #define R_AMDGPU_NONE\t\t0\n@@ -856,6 +858,8 @@ main (int argc, char **argv)\n \telf_arch = EF_AMDGPU_MACH_AMDGCN_GFX900;\n       else if (strcmp (argv[i], \"-march=gfx906\") == 0)\n \telf_arch = EF_AMDGPU_MACH_AMDGCN_GFX906;\n+      else if (strcmp (argv[i], \"-march=gfx908\") == 0)\n+\telf_arch = EF_AMDGPU_MACH_AMDGCN_GFX908;\n     }\n \n   if (!(fopenacc ^ fopenmp))"}, {"sha": "ee4d9b30ff29cd60e0f09305ac9ceb08479bfc6f", "filename": "gcc/config/gcn/t-gcn-hsa", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Ft-gcn-hsa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Ft-gcn-hsa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Ft-gcn-hsa?ref=3535402e20118655b2ad4085a6e1d4f1b9c46e92", "patch": "@@ -42,8 +42,8 @@ ALL_HOST_OBJS += gcn-run.o\n gcn-run$(exeext): gcn-run.o\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $< -ldl\n \n-MULTILIB_OPTIONS = march=gfx900/march=gfx906\n-MULTILIB_DIRNAMES = gfx900 gfx906\n+MULTILIB_OPTIONS = march=gfx900/march=gfx906/march=gfx908\n+MULTILIB_DIRNAMES = gfx900 gfx906 gfx908\n \n gcn-tree.o: $(srcdir)/config/gcn/gcn-tree.c\n \t$(COMPILE) $<"}, {"sha": "8461c432ca9eb5946830eeb8ee691729950bda95", "filename": "gcc/config/gcn/t-omp-device", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Ft-omp-device", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3535402e20118655b2ad4085a6e1d4f1b9c46e92/gcc%2Fconfig%2Fgcn%2Ft-omp-device", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Ft-omp-device?ref=3535402e20118655b2ad4085a6e1d4f1b9c46e92", "patch": "@@ -1,4 +1,4 @@\n omp-device-properties-gcn: $(srcdir)/config/gcn/gcn.c\n \techo kind: gpu > $@\n \techo arch: gcn >> $@\n-\techo isa: fiji gfx900 gfx906 >> $@\n+\techo isa: fiji gfx900 gfx906 gfx908 >> $@"}, {"sha": "8e6af69988ee0cb8613f0d15e6bd855fa432f844", "filename": "libgomp/plugin/plugin-gcn.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3535402e20118655b2ad4085a6e1d4f1b9c46e92/libgomp%2Fplugin%2Fplugin-gcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3535402e20118655b2ad4085a6e1d4f1b9c46e92/libgomp%2Fplugin%2Fplugin-gcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-gcn.c?ref=3535402e20118655b2ad4085a6e1d4f1b9c46e92", "patch": "@@ -403,6 +403,7 @@ typedef enum {\n   EF_AMDGPU_MACH_AMDGCN_GFX803 = 0x02a,\n   EF_AMDGPU_MACH_AMDGCN_GFX900 = 0x02c,\n   EF_AMDGPU_MACH_AMDGCN_GFX906 = 0x02f,\n+  EF_AMDGPU_MACH_AMDGCN_GFX908 = 0x030\n } EF_AMDGPU_MACH;\n \n const static int EF_AMDGPU_MACH_MASK = 0x000000ff;\n@@ -1596,6 +1597,7 @@ elf_gcn_isa_field (Elf64_Ehdr *image)\n const static char *gcn_gfx803_s = \"gfx803\";\n const static char *gcn_gfx900_s = \"gfx900\";\n const static char *gcn_gfx906_s = \"gfx906\";\n+const static char *gcn_gfx908_s = \"gfx908\";\n const static int gcn_isa_name_len = 6;\n \n /* Returns the name that the HSA runtime uses for the ISA or NULL if we do not\n@@ -1611,6 +1613,8 @@ isa_hsa_name (int isa) {\n       return gcn_gfx900_s;\n     case EF_AMDGPU_MACH_AMDGCN_GFX906:\n       return gcn_gfx906_s;\n+    case EF_AMDGPU_MACH_AMDGCN_GFX908:\n+      return gcn_gfx908_s;\n     }\n   return NULL;\n }\n@@ -1644,6 +1648,9 @@ isa_code(const char *isa) {\n   if (!strncmp (isa, gcn_gfx906_s, gcn_isa_name_len))\n     return EF_AMDGPU_MACH_AMDGCN_GFX906;\n \n+  if (!strncmp (isa, gcn_gfx908_s, gcn_isa_name_len))\n+    return EF_AMDGPU_MACH_AMDGCN_GFX908;\n+\n   return -1;\n }\n "}]}