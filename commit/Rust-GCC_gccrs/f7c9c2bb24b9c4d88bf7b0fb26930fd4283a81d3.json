{"sha": "f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdjOWMyYmIyNGI5YzRkODhiZjdiMGZiMjY5MzBmZDQyODNhODFkMw==", "commit": {"author": {"name": "Robert Lipe", "email": "robertl@dgii.com", "date": "1998-07-02T08:13:44Z"}, "committer": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "1998-07-02T08:13:44Z"}, "message": "install.texi (sco3.2v5): Document new --with-gnu-as flag.\n\n* install.texi (sco3.2v5): Document new --with-gnu-as flag.\n* config/i386/sco5.h (JUMP_TABLES_IN_TEXT_SECTION): Defined as\n  in other targets.\n  (USE_GAS): Conditionalize away native assembler usage.\n* config/i386/sco5gas.h: New file.\n* config/i386/t-sco5gas: New file.\n* configure.in (ix86-sco3.2v5*): Use new files if --with-gnu-as\n\nFrom-SVN: r20890", "tree": {"sha": "7296df950e18a2a58cd7c62c02dbfda9470f8a6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7296df950e18a2a58cd7c62c02dbfda9470f8a6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/comments", "author": null, "committer": null, "parents": [{"sha": "c92293e702e7076d8e0f1edb8734b68aacf9af73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c92293e702e7076d8e0f1edb8734b68aacf9af73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c92293e702e7076d8e0f1edb8734b68aacf9af73"}], "stats": {"total": 96, "additions": 86, "deletions": 10}, "files": [{"sha": "2724be4dead514863b92159774be6d9df89c2d5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3", "patch": "@@ -1,3 +1,13 @@\n+Thu Jul  2 10:11:47 1998  Robert Lipe  <robertl@dgii.com>\n+\n+\t* install.texi (sco3.2v5): Document new --with-gnu-as flag.\n+\t* config/i386/sco5.h (JUMP_TABLES_IN_TEXT_SECTION): Defined as\n+\tin other targets.\n+\t(USE_GAS): Conditionalize away native assembler usage.\n+\t* config/i386/sco5gas.h: New file.\n+\t* config/i386/t-sco5gas: New file.\n+\t* configure.in (ix86-sco3.2v5*): Use new files if --with-gnu-as\n+\n Thu Jul 2 08:20:00 1998  Catherine Moore  <clm@cygnus.com>\n \n         * haifa-sched.c (alloc_EXPR_LIST):  Change to use"}, {"sha": "d656eb95e048e8215ab4aae6bff27d3f8c537b6a", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3", "patch": "@@ -653,7 +653,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n    (current_function_calls_setjmp || current_function_calls_longjmp))\n \n #undef JUMP_TABLES_IN_TEXT_SECTION\n-#define JUMP_TABLES_IN_TEXT_SECTION 1\n+#define JUMP_TABLES_IN_TEXT_SECTION (TARGET_ELF && flag_pic)\n \n #undef LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX\t\t\t\t\t\t\\\n@@ -777,19 +777,29 @@ dtors_section ()\t\t\t\t\t\t\t\\\n \n    SCO also allows you to compile, link and generate either ELF or COFF\n    binaries. With gcc, unlike the SCO compiler, the default is ELF.\n-   Specify -mcoff to gcc to produce elf binaries. -fpic will get the\n+   Specify -mcoff to gcc to produce COFF binaries. -fpic will get the\n    assembler and linker to produce PIC code.\n */\n \n /* Set up assembler flags for PIC and ELF compilations */\n #undef ASM_SPEC\n+\n+#if USE_GAS\n+  /* Leave ASM_SPEC undefined so we pick up the master copy from gcc.c \n+   * Undef MD_EXEC_PREFIX becuase we don't know where GAS is, but it's not\n+   * likely in /usr/ccs/bin/ \n+   */\n+#undef MD_EXEC_PREFIX \n+#else\n+\n #define ASM_SPEC \\\n- \"-b %{!mcoff:elf}%{mcoff:coff \\\n-   %{static:%e-static not valid with -mcoff} \\\n-   %{shared:%e-shared not valid with -mcoff} \\\n-   %{symbolic:%e-symbolic not valid with -mcoff}} \\\n-  %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n-  %{!mcoff:-E%{Xa:a}%{!Xa:%{Xc:c}%{!Xc:%{Xk:k}%{!Xk:%{Xt:t}%{!Xt:a}}}},%{ansi:ansi}%{!ansi:%{posix:posix}%{!posix:%{Xpg4:xpg4}%{!Xpg4:%{Xpg4plus:XPG4PLUS}%{!Xpg4plus:%{Xods30:ods30}%{!Xods30:XPG4PLUS}}}}},ELF %{Qn:} %{!Qy:-Qn}}\"\n+   \"-b %{!mcoff:elf}%{mcoff:coff \\\n+     %{static:%e-static not valid with -mcoff} \\\n+     %{shared:%e-shared not valid with -mcoff} \\\n+     %{symbolic:%e-symbolic not valid with -mcoff}} \\\n+    %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n+    %{!mcoff:-E%{Xa:a}%{!Xa:%{Xc:c}%{!Xc:%{Xk:k}%{!Xk:%{Xt:t}%{!Xt:a}}}},%{ansi:ansi}%{!ansi:%{posix:posix}%{!posix:%{Xpg4:xpg4}%{!Xpg4:%{Xpg4plus:XPG4PLUS}%{!Xpg4plus:%{Xods30:ods30}%{!Xods30:XPG4PLUS}}}}},ELF %{Qn:} %{!Qy:-Qn}}\"\n+#endif\n \n /* Use crt1.o as a startup file and crtn.o as a closing file.  */\n "}, {"sha": "de3e5d5570f1541b321704ee675bfb08a1a32be8", "filename": "gcc/config/i386/sco5gas.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2Fconfig%2Fi386%2Fsco5gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2Fconfig%2Fi386%2Fsco5gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5gas.h?ref=f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3", "patch": "@@ -0,0 +1,24 @@\n+/* Definitions for Intel x86 running SCO OpenServer, running GNU assembler\n+   Copyright (C) 1998 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+\n+/* Just set a single flag we can test for inside of sco5.h and include it. */\n+\n+#define USE_GAS 1"}, {"sha": "6aa15d2a213b44e9081b9e6f30f8677990f33c9e", "filename": "gcc/config/i386/t-sco5gas", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2Fconfig%2Fi386%2Ft-sco5gas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2Fconfig%2Fi386%2Ft-sco5gas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-sco5gas?ref=f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3", "patch": "@@ -0,0 +1,16 @@\n+# The pushl in CTOR initialization interferes with frame pointer elimination.\n+CRTSTUFF_T_CFLAGS   = -fPIC -fno-omit-frame-pointer\n+CRTSTUFF_T_CFLAGS_S = -mcoff -fno-omit-frame-pointer\n+\n+#\n+# I am still a little unsure of the multilib architecture. The following\n+# 4 lines are based on advice from meissner@cygnus.com.\n+#\n+MULTILIB_OPTIONS    = fPIC\n+MULTILIB_DIRNAMES   = pic\n+MULTILIB_EXCEPTIONS = *fPIC*\n+MULTILIB_MATCHES    = fPIC=fpic\n+MULTILIB_EXTRA_OPTS =\n+\n+LIBGCC=stmp-multilib\n+INSTALL_LIBGCC=install-multilib"}, {"sha": "661d8b0f617a8c4c7a89b9cf1a04d9d1f0f9d9ad", "filename": "gcc/configure.in", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3", "patch": "@@ -997,7 +997,13 @@ for machine in $build $host $target; do\n \t\tfixincludes=fixinc.sco\n \t\tinstall_headers_dir=install-headers-cpio\n \t\ttm_file=i386/sco5.h\n-\t\ttmake_file=i386/t-sco5\n+\t\tif [[ x$gas = xyes ]]\n+\t\tthen\n+\t\t\ttm_file=\"i386/sco5gas.h ${tm_file}\"\n+\t\t\ttmake_file=i386/t-sco5gas\n+\t\telse\n+\t\t\ttmake_file=i386/t-sco5\n+\t\tfi\n \t\textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n \t\t;;\n \ti[[34567]]86-*-sco3.2v4*) \t# 80386 running SCO 3.2v4 system"}, {"sha": "06572c82bb327a6aa4d46d3029cca8df8a83d42d", "filename": "gcc/install.texi", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3/gcc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finstall.texi?ref=f7c9c2bb24b9c4d88bf7b0fb26930fd4283a81d3", "patch": "@@ -990,14 +990,24 @@ Use this configuration for SCO release 3.2 version 4.\n \n @item i386-*-sco3.2v5*\n Use this for the SCO OpenServer Release family including 5.0.0, 5.0.2, \n-5.0.4, Internet FastStart 1.0, and Internet FastStart 1.1.\n+5.0.4, 5.0.5, Internet FastStart 1.0, and Internet FastStart 1.1.\n \n GNU CC can generate either ELF or COFF binaries.   ELF is the default.\n To get COFF output, you must specify @samp{-mcoff}) on the command line.\n \n For 5.0.0 and 5.0.2, you must install TLS597 from ftp.sco.com/TLS.\n 5.0.4 and later do not require this patch.\n \n+The native SCO assembler that is provided with the OS at no charge\n+is normally required.  If, however, you must be able to use the GNU\n+assembler (perhaps you have complex asms) you must configure this\n+package @samp{--with-gnu-as}.  To do this, install (cp or symlink)\n+gcc/as to your copy of the GNU assembler.  You must use a recent version\n+of GNU binutils; version 2.9.1 seems to work well.  If you select this\n+option, you will be unable to build COFF images.  Trying to do so will\n+result in non-obvious failures.  In general, the \"--with-gnu-as\" option\n+isn't as well tested as the native assembler.\n+\n @emph{NOTE:} You must follow the instructions about invoking\n @samp{make bootstrap} because the native OpenServer compiler builds\n a @file{cc1plus} that will not correctly parse many valid C++ programs."}]}