{"sha": "f7fd18f606ac60415da16bf34e22d5772522a1f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdmZDE4ZjYwNmFjNjA0MTVkYTE2YmYzNGUyMmQ1NzcyNTIyYTFmOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-07-19T02:23:36Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-07-19T02:23:36Z"}, "message": "configure.lang: Delete top level directory from loop.\n\n\t* configure.lang: Delete top level directory from loop.\n\tDelete code not useful for language subdirs.\n\nFrom-SVN: r14483", "tree": {"sha": "12b5e0180c8dc95f318b5fa6d9616efb31b066cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12b5e0180c8dc95f318b5fa6d9616efb31b066cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7fd18f606ac60415da16bf34e22d5772522a1f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7fd18f606ac60415da16bf34e22d5772522a1f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7fd18f606ac60415da16bf34e22d5772522a1f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7fd18f606ac60415da16bf34e22d5772522a1f9/comments", "author": null, "committer": null, "parents": [{"sha": "af5e4ada32e9166e7a9b6853c3060382186e8749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af5e4ada32e9166e7a9b6853c3060382186e8749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af5e4ada32e9166e7a9b6853c3060382186e8749"}], "stats": {"total": 161, "additions": 25, "deletions": 136}, "files": [{"sha": "bbc1c87388b8f5cbb04f837efd4f350af38acc9b", "filename": "gcc/configure.lang", "status": "modified", "additions": 25, "deletions": 136, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7fd18f606ac60415da16bf34e22d5772522a1f9/gcc%2Fconfigure.lang", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7fd18f606ac60415da16bf34e22d5772522a1f9/gcc%2Fconfigure.lang", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.lang?ref=f7fd18f606ac60415da16bf34e22d5772522a1f9", "patch": "@@ -23,31 +23,26 @@\n #Boston, MA 02111-1307, USA.\n \n savesrcdir=$srcdir\n+\n for subdir in . $subdirs\n do\n+\t# We only want to do this in language subdirs, but we have to handle\n+\t# the case of $subdirs = \"\".\n+\tif [ $subdir = . ]\n+\tthen\n+\t\tcontinue\n+\tfi\n+\n \toldsrcdir=$savesrcdir\n \n \t# Re-adjust the path\n \tcase $oldsrcdir in\n \t/*)\n-\t\tcase $subdir in\n-\t\t.)\n-\t\t\tsrcdir=$oldsrcdir\n-\t\t\t;;\n-\t\t*)\n-\t\t\tsrcdir=$oldsrcdir/$subdir\n-\t\t\t;;\n-\t\tesac\n+\t\tsrcdir=$oldsrcdir/$subdir\n \t\t;;\n \t*)\n-\t\tcase $subdir in\n-\t\t.)\n-\t\t\t;;\n-\t\t*)\n-\t\t\toldsrcdir=../${oldsrcdir}\n-\t\t\tsrcdir=$oldsrcdir/$subdir\n-\t\t\t;;\n-\t\tesac\n+\t\toldsrcdir=../${oldsrcdir}\n+\t\tsrcdir=$oldsrcdir/$subdir\n \t\t;;\n \tesac\n \tmainsrcdir=$oldsrcdir\n@@ -133,22 +128,6 @@ do\n \t\tmv Makefile.xx Makefile.tem\n \tfi\n \n-\t# Some of the following don't make sense in the language makefiles,\n-\t# but rather than introduce another level of nesting, we leave them\n-\t# as is.\n-\n-\t# Add a definition of USE_COLLECT2 if system wants one.\n-\t# Also tell toplev.c what to do.\n-\t# This substitutes for lots of t-* files.\n-\tif [ x$use_collect2 != x ]\n-\tthen\n-\t\trm -f Makefile.xx\n-\t\t(echo \"USE_COLLECT2 = ld\"; echo \"MAYBE_USE_COLLECT2 = -DUSE_COLLECT2\")\\\n-\t \t   | cat - Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\tfi\n-\n \t# If using -program-transform-name, override the installation names.\n \tif [ \"x${program_transform_set}\" = \"xyes\" ] ; then\n \t\tsed -e \"s/^program_transform_name[ \t]*=.*$/program_transform_name =\n@@ -184,124 +163,38 @@ $program_transform_name/\" \\\n \t\trm -f Makefile.ll\n \tfi\n \n-\t# If this is the top level Makefile, add the language fragments.\n-\t# Languages are added via two mechanisms.  Some information must be\n-\t# recorded in makefile variables, these are defined in config-lang.in.\n-\t# We accumulate them and plug them into the main Makefile.\n-\t# The other mechanism is a set of hooks for each of the main targets\n-\t# like `clean', `install', etc.\n-\tif [ $subdir = . ]\n-\tthen\n-\t\trm -f Makefile.xx Makefile.ll\n-\t\ttouch Makefile.ll\n-\t\tsed -e \"/####language fragments/ r Makefile.ll\" Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\t\tsubdirs=`echo $subdirs`\n-\t\tsed -e \"s|^SUBDIRS[ \t]*=.*$|SUBDIRS = $subdirs|\" \\\n-\t\t    -e \"s|^LANGUAGES[ \t]*=[ \t]*\\(.*\\)$|LANGUAGES = \\1 $all_languages|\" \\\n-\t\t    -e \"s|^BOOT_LANGUAGES[ \t]*=[ \t]*\\(.*\\)$|BOOT_LANGUAGES = \\1 $all_boot_languages|\" \\\n-\t\t    -e \"s|^COMPILERS[ \t]*=[ \t]*\\(.*\\)$|COMPILERS = \\1 $all_compilers|\" \\\n-\t\t    -e \"s|^LANG_MAKEFILES[ \t]*=.*$|LANG_MAKEFILES = $all_lang_makefiles|\" \\\n-\t\t    -e \"s|^LANG_STAGESTUFF[ \t]*=.*$|LANG_STAGESTUFF = $all_stagestuff|\" \\\n-\t\t    -e \"s|^LANG_DIFF_EXCLUDES[ \t]*=.*$|LANG_DIFF_EXCLUDES = $all_diff_excludes|\" \\\n-\t\t    -e \"s|^LANG_EXTRA_HEADERS[ \t]*=.*$|LANG_EXTRA_HEADERS = $all_headers|\" \\\n-\t\t    -e \"s|^LANG_LIB2FUNCS[ \t]*=.*$|LANG_LIB2FUNCS = $all_lib2funcs|\" \\\n-\t\t    Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\n-\t\t# Since we can't use `::' targets, we link each language in\n-\t\t# with a set of hooks, reached indirectly via lang.${target}.\n-\t\trm -f Makefile.ll\n-\t\tfor t in $target_list\n-\t\tdo\n-\t\t\tx=\n-\t\t\tfor l in .. $all_languages\n-\t\t\tdo\n-\t\t\t\tif [ $l != \"..\" ]; then\n-\t\t\t\t\tx=\"$x $l.$t\"\n-\t\t\t\tfi\n-\t\t\tdone\n-\t\t\techo \"lang.$t: $x\" >> Makefile.ll\n-\t\tdone\n-\t\tsed -e \"/####language hooks/ r Makefile.ll\" Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\t\trm -f Makefile.ll\n-\n-\t\t# If the host doesn't support symlinks, modify CC in\n-\t\t# FLAGS_TO_PASS so CC=\"stage1/xgcc -Bstage1/\" works.\n-\t\t# Otherwise, we can use \"CC=$(CC)\".\n-\t\trm -f symtest.tem\n-\t\tif $symbolic_link symtest1.tem symtest.tem 2>/dev/null\n-\t\tthen\n-\t\t\tsed -e 's,CC=set-by-configure,CC=$(CC),' \\\n-\t\t\t    Makefile.tem > Makefile.xx\n-\t\t\tsed -e 's,STAGE_PREFIX=set-by-configure,STAGE_PREFIX=$(STAGE_PREFIX),' \\\n-\t\t\t    Makefile.xx > Makefile.yy\n-\t\telse\n-\t\t\tsed -e \"s,CC=set-by-configure,CC=\\`case '\\$(CC)' in *stage*) echo '\\$(CC)' | sed -e 's|stage|../stage|g';; *) echo '\\$(CC)';; esac\\`,\" \\\n-\t\t\t    Makefile.tem > Makefile.xx\n-\t\t\tsed -e \"s,STAGE_PREFIX=set-by-configure,STAGE_PREFIX=\\`case '\\$(STAGE_PREFIX)' in stage*) echo '\\$(STAGE_PREFIX)' | sed -e 's|stage|../stage|g';; *) echo '\\$(STAGE_PREFIX)';; esac\\`,\" \\\n-\t\t\t    Makefile.xx > Makefile.yy\n-\t\tfi\n-\t\trm -f Makefile.tem Makefile.xx\n-\t\tmv Makefile.yy Makefile.tem\n-\t\trm -f symtest.tem\n-\n-\t\tif [ \"x$all_languages\" != x ]\n-\t\tthen\n-\t\t\t# Missing space after `Merged' is intentional.\n-\t\t\techo \"Merged$all_languages fragment(s).\"\n-\t\tfi\n-\n-\t# Otherwise, this is a language subdirectory.  If the host supports\n+\t# If the host supports\n \t# symlinks, point stage[123] at ../stage[123] so bootstrapping and the\n \t# installation procedure can still use CC=\"stage1/xgcc -Bstage1/\".\n \t# If the host doesn't support symlinks, FLAGS_TO_PASS has been\n \t# modified to solve the problem there.\n-\telse\n-\t\tfor t in stage1 stage2 stage3 stage4 include\n-\t\tdo\n-\t\t\trm -f $t\n-\t\t\t$symbolic_link ../$t $t 2>/dev/null\n-\t\tdone\n-\tfi\n+\tfor t in stage1 stage2 stage3 stage4 include\n+\tdo\n+\t\trm -f $t\n+\t\t$symbolic_link ../$t $t 2>/dev/null\n+\tdone\n \n \t# Remove all formfeeds, since some Makes get confused by them.\n-\t# Also arrange to give the variables `target', `host_xmake_file',\n-\t# `tmake_file', `prefix', `local_prefix', `exec_prefix', `FIXINCLUDES'\n-\t# `out_file', `out_object', `md_file', `lang_specs_files',\n-\t# `lang_options_files', `INSTALL_HEADERS_DIR', and `CROSS_FLOAT_H'\n+\t# Also arrange to give the variables `target', `target_alias',\n+\t# `host_xmake_file', `tmake_file', `prefix', `local_prefix',\n+\t# `exec_prefix', `INSTALL_HEADERS_DIR', `exeext'\n \t# values in the Makefile from the values they have in this script.\n \trm -f Makefile.xx\n-\trm -f aux-output.c aux-output.o md\n \t# Create an empty Makefile.sed first, to work around a Nextstep 3.3 bug.\n \techo 's|\f||' > Makefile.sed\n \trm Makefile.sed\n \techo 's|\f||' > Makefile.sed\n \techo \"s|^target=.*$|target=${target}|\" >> Makefile.sed\n-\techo \"s|^target_alias=.*$|target_alias=${target}|\" >> Makefile.sed\n+\techo \"s|^target_alias=.*$|target=${target_alias}|\" >> Makefile.sed\n \techo \"s|^xmake_file=.*$|xmake_file=${dep_host_xmake_file}|\" >> Makefile.sed\n \techo \"s|^tmake_file=.*$|tmake_file=${dep_tmake_file}|\" >> Makefile.sed\n \techo \"s|^version=.*$|version=${version}|\" >> Makefile.sed\n-\techo \"s|^out_file=.*$|out_file=${srcdir}/config/${out_file}|\" >> Makefile.sed\n-\techo \"s|^out_object_file=.*$|out_object_file=${out_object_file}|\" >> Makefile.sed\n-\techo \"s|^md_file=.*$|md_file=${md_file}|\" >> Makefile.sed\n-\techo \"s|^tm_file=.*$|tm_file=${tm_file_sub}|\" >> Makefile.sed\n-\techo \"s|^host_xm_file=.*$|host_xm_file=${host_xm_file_sub}|\" >> Makefile.sed\n-\techo \"s|^build_xm_file=.*$|build_xm_file=${build_xm_file_sub}|\" >> Makefile.sed\n-\techo \"s|^lang_specs_files=.*$|lang_specs_files=${lang_specs_files}|\" >> Makefile.sed\n-\techo \"s|^lang_options_files=.*$|lang_options_files=${lang_options_files}|\" >> Makefile.sed\n \techo \"s|^GCC_THREAD_FILE=.*$|GCC_THREAD_FILE=${thread_file}|\" >> Makefile.sed\n \techo \"s|^prefix[ \t]*=.*|prefix = $prefix|\" >> Makefile.sed\n \techo \"s|^local_prefix[ \t]*=.*|local_prefix = $local_prefix|\" >> Makefile.sed\n \techo \"s|^exec_prefix[ \t]*=.*|exec_prefix = $exec_prefix|\" >> Makefile.sed\n-\techo \"s|^FIXINCLUDES[ \t]*=.*|FIXINCLUDES = $fixincludes|\" >> Makefile.sed\n \techo \"s|^INSTALL_HEADERS_DIR[ \t]*=.*$|INSTALL_HEADERS_DIR = ${build_install_headers_dir}|\" >> Makefile.sed\n \techo \"s|^exeext[ \t]*=.*$|exeext = ${build_exeext}|\" >> Makefile.sed\n-\techo \"s|^CROSS_FLOAT_H[\t]*=.*|CROSS_FLOAT_H=\\$(srcdir)/config/float-${float_format}.h|\" >> Makefile.sed\n \tsed -f Makefile.sed Makefile.tem > Makefile.xx\n \trm -f Makefile.tem Makefile.sed\n \tmv Makefile.xx Makefile.tem\n@@ -334,16 +227,12 @@ $program_transform_name/\" \\\n \t\tmv Makefile.xx Makefile.tem\n \tfi\n \n-\tif [ $subdir != . ]\n-\tthen\n-\t\trm -f Makefile\n-\t\tmv Makefile.tem Makefile\n-\t\techo \"Created \\`$subdir/Makefile'.\"\n-\telse\n-\t\trm -f Makefile.tem\n-\tfi\n+\trm -f Makefile\n+\tmv Makefile.tem Makefile\n+\techo \"Created \\`$subdir/Makefile'.\"\n \n \tcd $STARTDIR\n done   # end of current-dir SUBDIRS loop\n \n+# Restore this, remember we're invoked with `.'.\n srcdir=$savesrcdir"}]}