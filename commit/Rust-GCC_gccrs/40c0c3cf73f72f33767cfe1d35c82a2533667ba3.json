{"sha": "40c0c3cf73f72f33767cfe1d35c82a2533667ba3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBjMGMzY2Y3M2Y3MmYzMzc2N2NmZTFkMzVjODJhMjUzMzY2N2JhMw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-07-14T23:04:45Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-07-14T23:04:45Z"}, "message": "emit-rtl.c (gen_realpart): Issue an error for cases GCC can not handle at this time instead of silently...\n\n        * emit-rtl.c (gen_realpart): Issue an error for cases GCC can not\n        handle at this time instead of silently generating incorrect code.\n        (gen_imagpart): Likewise.\n\nFrom-SVN: r28105", "tree": {"sha": "3c92b146117019253e661275aba5815528562f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c92b146117019253e661275aba5815528562f9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40c0c3cf73f72f33767cfe1d35c82a2533667ba3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40c0c3cf73f72f33767cfe1d35c82a2533667ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40c0c3cf73f72f33767cfe1d35c82a2533667ba3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40c0c3cf73f72f33767cfe1d35c82a2533667ba3/comments", "author": null, "committer": null, "parents": [{"sha": "87afbee625a00e6f657534f7959a28cec762320c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87afbee625a00e6f657534f7959a28cec762320c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87afbee625a00e6f657534f7959a28cec762320c"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "d854d089431bf5226699a09ed76469555e6fe22b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40c0c3cf73f72f33767cfe1d35c82a2533667ba3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40c0c3cf73f72f33767cfe1d35c82a2533667ba3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40c0c3cf73f72f33767cfe1d35c82a2533667ba3", "patch": "@@ -1,5 +1,9 @@\n Wed Jul 14 23:28:06 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* emit-rtl.c (gen_realpart): Issue an error for cases GCC can not\n+\thandle at this time instead of silently generating incorrect code.\n+\t(gen_imagpart): Likewise.\n+\n \t* reload.c (find_reloads): Emit a USE for a pseudo register without\n \ta hard register if we could not create an optional reload for the\n \tpseudo."}, {"sha": "4519a23b5afb5e5ec11118524369cec7913247fa", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40c0c3cf73f72f33767cfe1d35c82a2533667ba3/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40c0c3cf73f72f33767cfe1d35c82a2533667ba3/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=40c0c3cf73f72f33767cfe1d35c82a2533667ba3", "patch": "@@ -966,6 +966,11 @@ gen_realpart (mode, x)\n {\n   if (GET_CODE (x) == CONCAT && GET_MODE (XEXP (x, 0)) == mode)\n     return XEXP (x, 0);\n+  else if (WORDS_BIG_ENDIAN\n+\t   && GET_MODE_BITSIZE (mode) < BITS_PER_WORD\n+\t   && REG_P (x)\n+\t   && REGNO (x) < FIRST_PSEUDO_REGISTER)\n+    fatal (\"Unable to access real part of complex value in a hard register on this target\");\n   else if (WORDS_BIG_ENDIAN)\n     return gen_highpart (mode, x);\n   else\n@@ -984,6 +989,11 @@ gen_imagpart (mode, x)\n     return XEXP (x, 1);\n   else if (WORDS_BIG_ENDIAN)\n     return gen_lowpart (mode, x);\n+  else if (!WORDS_BIG_ENDIAN\n+\t   && GET_MODE_BITSIZE (mode) < BITS_PER_WORD\n+\t   && REG_P (x)\n+\t   && REGNO (x) < FIRST_PSEUDO_REGISTER)\n+    fatal (\"Unable to access imaginary part of complex value in a hard register on this target\");\n   else\n     return gen_highpart (mode, x);\n }"}]}