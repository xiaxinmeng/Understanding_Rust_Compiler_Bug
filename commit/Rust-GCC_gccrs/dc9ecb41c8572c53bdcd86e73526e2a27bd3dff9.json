{"sha": "dc9ecb41c8572c53bdcd86e73526e2a27bd3dff9", "node_id": "C_kwDOANBUbNoAKGRjOWVjYjQxYzg1NzJjNTNiZGNkODZlNzM1MjZlMmEyN2JkM2RmZjk", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-02-02T16:19:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-11T08:53:20Z"}, "message": "[Ada] Detect infinite loops with operators in exit conditions\n\nTo warn about infinite loops we detect variables referenced in loop exit\nconditions. We handle references within boolean operators, i.e.\ncomparison and negation, which are likely to appear at the top level of\nthe condition (e.g. \"X > 0\"). However, we can easily handle all\noperators, because they are likely to appear inside the condition (e.g.\n\"abs (X) > 0.0\").\n\nCleanup related to a new restriction No_Uninitialized_Local_Scalars.\n\ngcc/ada/\n\n\t* sem_warn.adb (Find_Var): Detect all operators; replace\n\t\"condition\" to \"expression\" in comments, because when this\n\troutine is called recursively it no longer examines the\n\tcondition.\n\t(Is_Suspicious_Function_Name): Reduce scope of a local variable\n\tto avoid shadowing with a parameter of a nested\n\tSubstring_Present function.", "tree": {"sha": "a3612142caee9d326c7a0fa31d70958c4f24a67c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3612142caee9d326c7a0fa31d70958c4f24a67c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc9ecb41c8572c53bdcd86e73526e2a27bd3dff9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc9ecb41c8572c53bdcd86e73526e2a27bd3dff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc9ecb41c8572c53bdcd86e73526e2a27bd3dff9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc9ecb41c8572c53bdcd86e73526e2a27bd3dff9/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c533da21d6298cdf9eb11df7353b8c8684c7756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c533da21d6298cdf9eb11df7353b8c8684c7756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c533da21d6298cdf9eb11df7353b8c8684c7756"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "4d3452242bf06b1b257fb26058f267ff76387116", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc9ecb41c8572c53bdcd86e73526e2a27bd3dff9/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc9ecb41c8572c53bdcd86e73526e2a27bd3dff9/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=dc9ecb41c8572c53bdcd86e73526e2a27bd3dff9", "patch": "@@ -284,15 +284,15 @@ package body Sem_Warn is\n \n       procedure Find_Var (N : Node_Id) is\n       begin\n-         --  Condition is a direct variable reference\n+         --  Expression is a direct variable reference\n \n          if Is_Entity_Name (N) then\n             Ref := N;\n             Var := Entity (Ref);\n \n-         --  Case of condition is a comparison with compile time known value\n+         --  If expression is an operator, check its operands\n \n-         elsif Nkind (N) in N_Op_Compare then\n+         elsif Nkind (N) in N_Binary_Op then\n             if Compile_Time_Known_Value (Right_Opnd (N)) then\n                Find_Var (Left_Opnd (N));\n \n@@ -305,9 +305,9 @@ package body Sem_Warn is\n                return;\n             end if;\n \n-         --  If condition is a negation, check its operand\n+         --  If expression is a unary operator, check its operand\n \n-         elsif Nkind (N) = N_Op_Not then\n+         elsif Nkind (N) in N_Unary_Op then\n             Find_Var (Right_Opnd (N));\n \n          --  Case of condition is function call\n@@ -445,8 +445,6 @@ package body Sem_Warn is\n       ---------------------------------\n \n       function Is_Suspicious_Function_Name (E : Entity_Id) return Boolean is\n-         S : Entity_Id;\n-\n          function Substring_Present (S : String) return Boolean;\n          --  Returns True if name buffer has given string delimited by non-\n          --  alphabetic characters or by end of string. S is lower case.\n@@ -473,6 +471,10 @@ package body Sem_Warn is\n             return False;\n          end Substring_Present;\n \n+         --  Local variables\n+\n+         S : Entity_Id;\n+\n       --  Start of processing for Is_Suspicious_Function_Name\n \n       begin"}]}