{"sha": "aca7a0253d6e3116f846ad530b19d89644a64267", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNhN2EwMjUzZDZlMzExNmY4NDZhZDUzMGIxOWQ4OTY0NGE2NDI2Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-22T13:37:24Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-22T13:37:24Z"}, "message": "libstdc++: Use std::addressof in ranges::uninitialized_xxx [PR101571]\n\nMake the ranges::uninitialized_xxx algorithms use std::addressof to\nprotect against iterator types that overload operator&.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/101571\n\t* include/bits/ranges_uninitialized.h (_DestroyGuard): Change\n\tconstructor parameter to reference and use addressof.\n\t* testsuite/util/testsuite_iterators.h: Define deleted operator&\n\toverloads for test iterators.", "tree": {"sha": "2e2e332d47bdb07ccd85e8b339c1652122086e3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e2e332d47bdb07ccd85e8b339c1652122086e3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aca7a0253d6e3116f846ad530b19d89644a64267", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca7a0253d6e3116f846ad530b19d89644a64267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aca7a0253d6e3116f846ad530b19d89644a64267", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca7a0253d6e3116f846ad530b19d89644a64267/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c22bcfd2f7dc9bb5ad394720f4a612327dc898ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22bcfd2f7dc9bb5ad394720f4a612327dc898ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c22bcfd2f7dc9bb5ad394720f4a612327dc898ba"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "40664ea7a04aed2aa4faca8c546bafe11b212fed", "filename": "libstdc++-v3/include/bits/ranges_uninitialized.h", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca7a0253d6e3116f846ad530b19d89644a64267/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_uninitialized.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca7a0253d6e3116f846ad530b19d89644a64267/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_uninitialized.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_uninitialized.h?ref=aca7a0253d6e3116f846ad530b19d89644a64267", "patch": "@@ -106,8 +106,8 @@ namespace ranges\n \n       public:\n \texplicit\n-\t_DestroyGuard(const _Iter* __iter)\n-\t  : _M_first(*__iter), _M_cur(__iter)\n+\t_DestroyGuard(const _Iter& __iter)\n+\t  : _M_first(__iter), _M_cur(std::__addressof(__iter))\n \t{ }\n \n \tvoid\n@@ -127,7 +127,7 @@ namespace ranges\n       struct _DestroyGuard<_Iter>\n       {\n \texplicit\n-\t_DestroyGuard(const _Iter*)\n+\t_DestroyGuard(const _Iter&)\n \t{ }\n \n \tvoid\n@@ -149,7 +149,7 @@ namespace ranges\n \t  return ranges::next(__first, __last);\n \telse\n \t  {\n-\t    auto __guard = __detail::_DestroyGuard(&__first);\n+\t    auto __guard = __detail::_DestroyGuard(__first);\n \t    for (; __first != __last; ++__first)\n \t      ::new (__detail::__voidify(*__first)) _ValueType;\n \t    __guard.release();\n@@ -181,7 +181,7 @@ namespace ranges\n \t  return ranges::next(__first, __n);\n \telse\n \t  {\n-\t    auto __guard = __detail::_DestroyGuard(&__first);\n+\t    auto __guard = __detail::_DestroyGuard(__first);\n \t    for (; __n > 0; ++__first, (void) --__n)\n \t      ::new (__detail::__voidify(*__first)) _ValueType;\n \t    __guard.release();\n@@ -207,7 +207,7 @@ namespace ranges\n \t  return ranges::fill(__first, __last, _ValueType());\n \telse\n \t  {\n-\t    auto __guard = __detail::_DestroyGuard(&__first);\n+\t    auto __guard = __detail::_DestroyGuard(__first);\n \t    for (; __first != __last; ++__first)\n \t      ::new (__detail::__voidify(*__first)) _ValueType();\n \t    __guard.release();\n@@ -240,7 +240,7 @@ namespace ranges\n \t  return ranges::fill_n(__first, __n, _ValueType());\n \telse\n \t  {\n-\t    auto __guard = __detail::_DestroyGuard(&__first);\n+\t    auto __guard = __detail::_DestroyGuard(__first);\n \t    for (; __n > 0; ++__first, (void) --__n)\n \t      ::new (__detail::__voidify(*__first)) _ValueType();\n \t    __guard.release();\n@@ -279,7 +279,7 @@ namespace ranges\n \t  }\n \telse\n \t  {\n-\t    auto __guard = __detail::_DestroyGuard(&__ofirst);\n+\t    auto __guard = __detail::_DestroyGuard(__ofirst);\n \t    for (; __ifirst != __ilast && __ofirst != __olast;\n \t\t ++__ofirst, (void)++__ifirst)\n \t      ::new (__detail::__voidify(*__ofirst)) _OutType(*__ifirst);\n@@ -326,7 +326,7 @@ namespace ranges\n \t  }\n \telse\n \t  {\n-\t    auto __guard = __detail::_DestroyGuard(&__ofirst);\n+\t    auto __guard = __detail::_DestroyGuard(__ofirst);\n \t    for (; __n > 0 && __ofirst != __olast;\n \t\t ++__ofirst, (void)++__ifirst, (void)--__n)\n \t      ::new (__detail::__voidify(*__ofirst)) _OutType(*__ifirst);\n@@ -368,7 +368,7 @@ namespace ranges\n \t  }\n \telse\n \t  {\n-\t    auto __guard = __detail::_DestroyGuard(&__ofirst);\n+\t    auto __guard = __detail::_DestroyGuard(__ofirst);\n \t    for (; __ifirst != __ilast && __ofirst != __olast;\n \t\t ++__ofirst, (void)++__ifirst)\n \t      ::new (__detail::__voidify(*__ofirst))\n@@ -419,7 +419,7 @@ namespace ranges\n \t  }\n \telse\n \t  {\n-\t    auto __guard = __detail::_DestroyGuard(&__ofirst);\n+\t    auto __guard = __detail::_DestroyGuard(__ofirst);\n \t    for (; __n > 0 && __ofirst != __olast;\n \t\t ++__ofirst, (void)++__ifirst, (void)--__n)\n \t      ::new (__detail::__voidify(*__ofirst))\n@@ -446,7 +446,7 @@ namespace ranges\n \t  return ranges::fill(__first, __last, __x);\n \telse\n \t  {\n-\t    auto __guard = __detail::_DestroyGuard(&__first);\n+\t    auto __guard = __detail::_DestroyGuard(__first);\n \t    for (; __first != __last; ++__first)\n \t      ::new (__detail::__voidify(*__first)) _ValueType(__x);\n \t    __guard.release();\n@@ -479,7 +479,7 @@ namespace ranges\n \t  return ranges::fill_n(__first, __n, __x);\n \telse\n \t  {\n-\t    auto __guard = __detail::_DestroyGuard(&__first);\n+\t    auto __guard = __detail::_DestroyGuard(__first);\n \t    for (; __n > 0; ++__first, (void)--__n)\n \t      ::new (__detail::__voidify(*__first)) _ValueType(__x);\n \t    __guard.release();"}, {"sha": "d0f87b1cd4e46e93ee65621ded8a0dc9b42a0d02", "filename": "libstdc++-v3/testsuite/util/testsuite_iterators.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca7a0253d6e3116f846ad530b19d89644a64267/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_iterators.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca7a0253d6e3116f846ad530b19d89644a64267/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_iterators.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_iterators.h?ref=aca7a0253d6e3116f846ad530b19d89644a64267", "patch": "@@ -175,10 +175,14 @@ namespace __gnu_test\n #if __cplusplus >= 201103L\n     template<typename U>\n       void operator,(const U&) const = delete;\n+\n+    void operator&() const = delete;\n #else\n   private:\n     template<typename U>\n       void operator,(const U&) const;\n+\n+    void operator&() const;\n #endif\n   };\n \n@@ -288,10 +292,14 @@ namespace __gnu_test\n #if __cplusplus >= 201103L\n     template<typename U>\n       void operator,(const U&) const = delete;\n+\n+    void operator&() const = delete;\n #else\n   private:\n     template<typename U>\n       void operator,(const U&) const;\n+\n+    void operator&() const;\n #endif\n   };\n "}]}