{"sha": "6ec067548fa994158819db0a62a8b5356d452c2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVjMDY3NTQ4ZmE5OTQxNTg4MTlkYjBhNjJhOGI1MzU2ZDQ1MmMyYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-29T11:03:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-29T11:03:25Z"}, "message": "re PR target/93078 (Missing fma and round functions auto-vectorization with x86-64 (sse2))\n\n\tPR target/93078\n\t* config/i386/i386-builtins.c (ix86_builtin_vectorized_function):\n\tRemove CASE_CFN_RINT handling.\n\t* config/i386/i386-builtin.def (IX86_BUILTIN_RINTPD,\n\tIX86_BUILTIN_RINTPS, IX86_BUILTIN_RINTPD256, IX86_BUILTIN_RINTPS256):\n\tRemove.\n\t* config/i386/sse.md (nearbyint<mode>2, rint<mode>2): New expanders\n\twith VF iterator.\n\n\t* gcc.target/i386/sse4_1-pr93078.c: New test.\n\t* gcc.target/i386/avx-pr93078.c: New test.\n\t* gcc.target/i386/avx512f-pr93078.c: New test.\n\nFrom-SVN: r279754", "tree": {"sha": "dc06b5ffaabf62e05636915869eaa80541497636", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc06b5ffaabf62e05636915869eaa80541497636"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ec067548fa994158819db0a62a8b5356d452c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ec067548fa994158819db0a62a8b5356d452c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ec067548fa994158819db0a62a8b5356d452c2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ec067548fa994158819db0a62a8b5356d452c2c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0657516067909d688dc2424a876c1c894cbc182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0657516067909d688dc2424a876c1c894cbc182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0657516067909d688dc2424a876c1c894cbc182"}], "stats": {"total": 121, "additions": 96, "deletions": 25}, "files": [{"sha": "111a1470953337c18aad91ae5a04ae502172a7d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ec067548fa994158819db0a62a8b5356d452c2c", "patch": "@@ -1,3 +1,14 @@\n+2019-12-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93078\n+\t* config/i386/i386-builtins.c (ix86_builtin_vectorized_function):\n+\tRemove CASE_CFN_RINT handling.\n+\t* config/i386/i386-builtin.def (IX86_BUILTIN_RINTPD,\n+\tIX86_BUILTIN_RINTPS, IX86_BUILTIN_RINTPD256, IX86_BUILTIN_RINTPS256):\n+\tRemove.\n+\t* config/i386/sse.md (nearbyint<mode>2, rint<mode>2): New expanders\n+\twith VF iterator.\n+\n 2019-12-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-stmts.c (vect_get_strided_load_store_ops): Copy"}, {"sha": "fd9c2723c569a9faec636a76e88acc5be919062f", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=6ec067548fa994158819db0a62a8b5356d452c2c", "patch": "@@ -913,7 +913,6 @@ BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundss, \"__builtin_ia32_round\n BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundpd, \"__builtin_ia32_floorpd\", IX86_BUILTIN_FLOORPD, (enum rtx_code) ROUND_FLOOR, (int) V2DF_FTYPE_V2DF_ROUND)\n BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundpd, \"__builtin_ia32_ceilpd\", IX86_BUILTIN_CEILPD, (enum rtx_code) ROUND_CEIL, (int) V2DF_FTYPE_V2DF_ROUND)\n BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundpd, \"__builtin_ia32_truncpd\", IX86_BUILTIN_TRUNCPD, (enum rtx_code) ROUND_TRUNC, (int) V2DF_FTYPE_V2DF_ROUND)\n-BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundpd, \"__builtin_ia32_rintpd\", IX86_BUILTIN_RINTPD, (enum rtx_code) ROUND_MXCSR, (int) V2DF_FTYPE_V2DF_ROUND)\n \n BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundpd_vec_pack_sfix, \"__builtin_ia32_floorpd_vec_pack_sfix\", IX86_BUILTIN_FLOORPD_VEC_PACK_SFIX, (enum rtx_code) ROUND_FLOOR, (int) V4SI_FTYPE_V2DF_V2DF_ROUND)\n BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundpd_vec_pack_sfix, \"__builtin_ia32_ceilpd_vec_pack_sfix\", IX86_BUILTIN_CEILPD_VEC_PACK_SFIX, (enum rtx_code) ROUND_CEIL, (int) V4SI_FTYPE_V2DF_V2DF_ROUND)\n@@ -924,7 +923,6 @@ BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_roundv2df2_vec_pack_sfix, \"__builtin_\n BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundps, \"__builtin_ia32_floorps\", IX86_BUILTIN_FLOORPS, (enum rtx_code) ROUND_FLOOR, (int) V4SF_FTYPE_V4SF_ROUND)\n BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundps, \"__builtin_ia32_ceilps\", IX86_BUILTIN_CEILPS, (enum rtx_code) ROUND_CEIL, (int) V4SF_FTYPE_V4SF_ROUND)\n BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundps, \"__builtin_ia32_truncps\", IX86_BUILTIN_TRUNCPS, (enum rtx_code) ROUND_TRUNC, (int) V4SF_FTYPE_V4SF_ROUND)\n-BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundps, \"__builtin_ia32_rintps\", IX86_BUILTIN_RINTPS, (enum rtx_code) ROUND_MXCSR, (int) V4SF_FTYPE_V4SF_ROUND)\n \n BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundps_sfix, \"__builtin_ia32_floorps_sfix\", IX86_BUILTIN_FLOORPS_SFIX, (enum rtx_code) ROUND_FLOOR, (int) V4SI_FTYPE_V4SF_ROUND)\n BDESC (OPTION_MASK_ISA_SSE4_1, 0, CODE_FOR_sse4_1_roundps_sfix, \"__builtin_ia32_ceilps_sfix\", IX86_BUILTIN_CEILPS_SFIX, (enum rtx_code) ROUND_CEIL, (int) V4SI_FTYPE_V4SF_ROUND)\n@@ -1047,7 +1045,6 @@ BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundps256, \"__builtin_ia32_roundps2\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundpd256, \"__builtin_ia32_floorpd256\", IX86_BUILTIN_FLOORPD256, (enum rtx_code) ROUND_FLOOR, (int) V4DF_FTYPE_V4DF_ROUND)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundpd256, \"__builtin_ia32_ceilpd256\", IX86_BUILTIN_CEILPD256, (enum rtx_code) ROUND_CEIL, (int) V4DF_FTYPE_V4DF_ROUND)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundpd256, \"__builtin_ia32_truncpd256\", IX86_BUILTIN_TRUNCPD256, (enum rtx_code) ROUND_TRUNC, (int) V4DF_FTYPE_V4DF_ROUND)\n-BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundpd256, \"__builtin_ia32_rintpd256\", IX86_BUILTIN_RINTPD256, (enum rtx_code) ROUND_MXCSR, (int) V4DF_FTYPE_V4DF_ROUND)\n \n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_roundv4df2, \"__builtin_ia32_roundpd_az256\", IX86_BUILTIN_ROUNDPD_AZ256, UNKNOWN, (int) V4DF_FTYPE_V4DF)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_roundv4df2_vec_pack_sfix, \"__builtin_ia32_roundpd_az_vec_pack_sfix256\", IX86_BUILTIN_ROUNDPD_AZ_VEC_PACK_SFIX256, UNKNOWN, (int) V8SI_FTYPE_V4DF_V4DF)\n@@ -1058,7 +1055,6 @@ BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundpd_vec_pack_sfix256, \"__builtin\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundps256, \"__builtin_ia32_floorps256\", IX86_BUILTIN_FLOORPS256, (enum rtx_code) ROUND_FLOOR, (int) V8SF_FTYPE_V8SF_ROUND)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundps256, \"__builtin_ia32_ceilps256\", IX86_BUILTIN_CEILPS256, (enum rtx_code) ROUND_CEIL, (int) V8SF_FTYPE_V8SF_ROUND)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundps256, \"__builtin_ia32_truncps256\", IX86_BUILTIN_TRUNCPS256, (enum rtx_code) ROUND_TRUNC, (int) V8SF_FTYPE_V8SF_ROUND)\n-BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundps256, \"__builtin_ia32_rintps256\", IX86_BUILTIN_RINTPS256, (enum rtx_code) ROUND_MXCSR, (int) V8SF_FTYPE_V8SF_ROUND)\n \n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundps_sfix256, \"__builtin_ia32_floorps_sfix256\", IX86_BUILTIN_FLOORPS_SFIX256, (enum rtx_code) ROUND_FLOOR, (int) V8SI_FTYPE_V8SF_ROUND)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_roundps_sfix256, \"__builtin_ia32_ceilps_sfix256\", IX86_BUILTIN_CEILPS_SFIX256, (enum rtx_code) ROUND_CEIL, (int) V8SI_FTYPE_V8SF_ROUND)"}, {"sha": "1d4db2b1a70eebafef97270e323f0ef128a0e4a6", "filename": "gcc/config/i386/i386-builtins.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtins.c?ref=6ec067548fa994158819db0a62a8b5356d452c2c", "patch": "@@ -1661,27 +1661,6 @@ ix86_builtin_vectorized_function (unsigned int fn, tree type_out,\n \t}\n       break;\n \n-    CASE_CFN_RINT:\n-      /* The round insn does not trap on denormals.  */\n-      if (flag_trapping_math || !TARGET_SSE4_1)\n-\tbreak;\n-\n-      if (out_mode == DFmode && in_mode == DFmode)\n-\t{\n-\t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_get_builtin (IX86_BUILTIN_RINTPD);\n-\t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_get_builtin (IX86_BUILTIN_RINTPD256);\n-\t}\n-      if (out_mode == SFmode && in_mode == SFmode)\n-\t{\n-\t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_get_builtin (IX86_BUILTIN_RINTPS);\n-\t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_get_builtin (IX86_BUILTIN_RINTPS256);\n-\t}\n-      break;\n-\n     CASE_CFN_FMA:\n       if (out_mode == DFmode && in_mode == DFmode)\n \t{"}, {"sha": "b3ef215da5e8952b5e106db6bd56a2a1c0b7ba80", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=6ec067548fa994158819db0a62a8b5356d452c2c", "patch": "@@ -17977,6 +17977,24 @@\n    (set_attr \"prefix\" \"orig,orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_expand \"nearbyint<mode>2\"\n+  [(set (match_operand:VF 0 \"register_operand\")\n+\t(unspec:VF\n+\t  [(match_operand:VF 1 \"vector_operand\")\n+\t   (match_dup 2)]\n+\t  UNSPEC_ROUND))]\n+  \"TARGET_SSE4_1\"\n+  \"operands[2] = GEN_INT (ROUND_MXCSR | ROUND_NO_EXC);\")\n+\n+(define_expand \"rint<mode>2\"\n+  [(set (match_operand:VF 0 \"register_operand\")\n+\t(unspec:VF\n+\t  [(match_operand:VF 1 \"vector_operand\")\n+\t   (match_dup 2)]\n+\t  UNSPEC_ROUND))]\n+  \"TARGET_SSE4_1\"\n+  \"operands[2] = GEN_INT (ROUND_MXCSR);\")\n+\n (define_insn \"<sse4_1>_round<ssemodesuffix><avxsizesuffix>\"\n   [(set (match_operand:VF_128_256 0 \"register_operand\" \"=Yr,*x,x\")\n \t(unspec:VF_128_256"}, {"sha": "8de7d8eb783aee1fae148a7bdce1e7e1dac90850", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ec067548fa994158819db0a62a8b5356d452c2c", "patch": "@@ -1,3 +1,10 @@\n+2019-12-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93078\n+\t* gcc.target/i386/sse4_1-pr93078.c: New test.\n+\t* gcc.target/i386/avx-pr93078.c: New test.\n+\t* gcc.target/i386/avx512f-pr93078.c: New test.\n+\n 2019-12-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.dg/vect/vect-strided-epilogue-1.c: New test."}, {"sha": "3fedeaa0c656e98f59374c9a12af76d4f98c5b75", "filename": "gcc/testsuite/gcc.target/i386/avx-pr93078.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr93078.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr93078.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr93078.c?ref=6ec067548fa994158819db0a62a8b5356d452c2c", "patch": "@@ -0,0 +1,9 @@\n+/* PR target/93078 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx -mno-avx2 -mprefer-vector-width=256 -masm=att\" } */\n+/* { dg-final { scan-assembler \"vroundps\\[ \\t]\\+\\\\\\$12,\\[^\\n\\r]*%y\" } } */\n+/* { dg-final { scan-assembler \"vroundps\\[ \\t]\\+\\\\\\$4,\\[^\\n\\r]*%y\" } } */\n+/* { dg-final { scan-assembler \"vroundpd\\[ \\t]\\+\\\\\\$12,\\[^\\n\\r]*%y\" } } */\n+/* { dg-final { scan-assembler \"vroundpd\\[ \\t]\\+\\\\\\$4,\\[^\\n\\r]*%y\" } } */\n+\n+#include \"sse4_1-pr93078.c\""}, {"sha": "72d6c25bff14ac383903258a9e5a3eb8eb8a5df0", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr93078.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr93078.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr93078.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr93078.c?ref=6ec067548fa994158819db0a62a8b5356d452c2c", "patch": "@@ -0,0 +1,9 @@\n+/* PR target/93078 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx512f -mprefer-vector-width=512 -masm=att\" } */\n+/* { dg-final { scan-assembler \"vrndscaleps\\[ \\t]\\+\\\\\\$12,\\[^\\n\\r]*%z\" } } */\n+/* { dg-final { scan-assembler \"vrndscaleps\\[ \\t]\\+\\\\\\$4,\\[^\\n\\r]*%z\" } } */\n+/* { dg-final { scan-assembler \"vrndscalepd\\[ \\t]\\+\\\\\\$12,\\[^\\n\\r]*%z\" } } */\n+/* { dg-final { scan-assembler \"vrndscalepd\\[ \\t]\\+\\\\\\$4,\\[^\\n\\r]*%z\" } } */\n+\n+#include \"sse4_1-pr93078.c\""}, {"sha": "9ad0813388ff67ad687216896177bab7fe5b4903", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-pr93078.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-pr93078.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec067548fa994158819db0a62a8b5356d452c2c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-pr93078.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-pr93078.c?ref=6ec067548fa994158819db0a62a8b5356d452c2c", "patch": "@@ -0,0 +1,42 @@\n+/* PR target/93078 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize -msse4.1 -mno-sse4.2 -masm=att\" } */\n+/* { dg-final { scan-assembler \"roundps\\[ \\t]\\+\\\\\\$12,\" } } */\n+/* { dg-final { scan-assembler \"roundps\\[ \\t]\\+\\\\\\$4,\" } } */\n+/* { dg-final { scan-assembler \"roundpd\\[ \\t]\\+\\\\\\$12,\" } } */\n+/* { dg-final { scan-assembler \"roundpd\\[ \\t]\\+\\\\\\$4,\" } } */\n+\n+float a[16], b[16];\n+double c[8], d[8];\n+\n+void\n+foo (void)\n+{\n+  int i;\n+  for (i = 0; i < 16; ++i)\n+    b[i] = __builtin_nearbyintf (a[i]);\n+}\n+\n+void\n+bar (void)\n+{\n+  int i;\n+  for (i = 0; i < 16; ++i)\n+    b[i] = __builtin_rintf (a[i]);\n+}\n+\n+void\n+baz (void)\n+{\n+  int i;\n+  for (i = 0; i < 8; ++i)\n+    d[i] = __builtin_nearbyint (c[i]);\n+}\n+\n+void\n+qux (void)\n+{\n+  int i;\n+  for (i = 0; i < 8; ++i)\n+    d[i] = __builtin_rint (c[i]);\n+}"}]}