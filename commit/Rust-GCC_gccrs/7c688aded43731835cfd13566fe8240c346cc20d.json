{"sha": "7c688aded43731835cfd13566fe8240c346cc20d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M2ODhhZGVkNDM3MzE4MzVjZmQxMzU2NmZlODI0MGMzNDZjYzIwZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-04-22T13:27:16Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-04-22T13:27:16Z"}, "message": "forward_list (forward_list::splice_after): Check allocators are equal.\n\n\t* include/debug/forward_list (forward_list::splice_after): Check\n\tallocators are equal.\n\t* src/c++11/debug.cc: Fix spelling.\n\t* testsuite/23_containers/forward_list/debug/splice_after5_neg.cc:\n\tNew.\n\t* testsuite/23_containers/forward_list/debug/splice_after6_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/forward_list/debug/splice_after7_neg.cc:\n\tLikewise.\n\nFrom-SVN: r186669", "tree": {"sha": "4cc822a189910f33f4e66596db19082a4d0f4ddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cc822a189910f33f4e66596db19082a4d0f4ddb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c688aded43731835cfd13566fe8240c346cc20d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c688aded43731835cfd13566fe8240c346cc20d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c688aded43731835cfd13566fe8240c346cc20d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c688aded43731835cfd13566fe8240c346cc20d/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49c45e289e98ae5abfcd6ba549b839cd70fe62af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c45e289e98ae5abfcd6ba549b839cd70fe62af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49c45e289e98ae5abfcd6ba549b839cd70fe62af"}], "stats": {"total": 149, "additions": 148, "deletions": 1}, "files": [{"sha": "fc39c1ef2a9e430e3f0846e919f1db51980f1e2f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7c688aded43731835cfd13566fe8240c346cc20d", "patch": "@@ -1,3 +1,15 @@\n+2012-04-22  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/debug/forward_list (forward_list::splice_after): Check\n+\tallocators are equal.\n+\t* src/c++11/debug.cc: Fix spelling.\n+\t* testsuite/23_containers/forward_list/debug/splice_after5_neg.cc:\n+\tNew.\n+\t* testsuite/23_containers/forward_list/debug/splice_after6_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/forward_list/debug/splice_after7_neg.cc:\n+\tLikewise.\n+\n 2012-04-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/53052"}, {"sha": "8ad4336663e49191cb3d9dc608488d5f489940fe", "filename": "libstdc++-v3/include/debug/forward_list", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list?ref=7c688aded43731835cfd13566fe8240c346cc20d", "patch": "@@ -409,6 +409,10 @@ namespace __debug\n \t_GLIBCXX_DEBUG_VERIFY(&__list != this,\n \t\t\t      _M_message(__gnu_debug::__msg_self_splice)\n \t\t\t      ._M_sequence(*this, \"this\"));\n+\t_GLIBCXX_DEBUG_VERIFY(__list.get_allocator() == this->get_allocator(),\n+\t\t\t      _M_message(__gnu_debug::__msg_splice_alloc)\n+\t\t\t      ._M_sequence(*this)\n+\t\t\t      ._M_sequence(__list, \"__list\"));\n \tthis->_M_transfer_from_if(__list, [&__list](_Base_const_iterator __it)\n \t  {\n \t    return __it != __list._M_base().cbefore_begin()\n@@ -433,6 +437,10 @@ namespace __debug\n \t\t\t      _M_message(__gnu_debug::__msg_splice_other)\n \t\t\t      ._M_iterator(__i, \"__i\")\n \t\t\t      ._M_sequence(__list, \"__list\"));\n+\t_GLIBCXX_DEBUG_VERIFY(__list.get_allocator() == this->get_allocator(),\n+\t\t\t      _M_message(__gnu_debug::__msg_splice_alloc)\n+\t\t\t      ._M_sequence(*this)\n+\t\t\t      ._M_sequence(__list, \"__list\"));\n \n \t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n \t// 250. splicing invalidates iterators\n@@ -469,6 +477,10 @@ namespace __debug\n \t\t\t      ._M_sequence(__list, \"list\")\n \t\t\t      ._M_iterator(__before, \"before\")\n \t\t\t      ._M_iterator(__last, \"last\"));\n+\t_GLIBCXX_DEBUG_VERIFY(__list.get_allocator() == this->get_allocator(),\n+\t\t\t      _M_message(__gnu_debug::__msg_splice_alloc)\n+\t\t\t      ._M_sequence(*this)\n+\t\t\t      ._M_sequence(__list, \"__list\"));\n \n \tfor (_Base_const_iterator __tmp = std::next(__before.base());\n \t     __tmp != __last.base(); ++__tmp)"}, {"sha": "f0ab4bc4ec6bb9764b226e6e75d4113bdd53acb2", "filename": "libstdc++-v3/src/c++11/debug.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc?ref=7c688aded43731835cfd13566fe8240c346cc20d", "patch": "@@ -131,7 +131,7 @@ namespace __gnu_debug\n     \"attempt to flip a singular bitset reference\",\n     // std::list checks\n     \"attempt to splice a list into itself\",\n-    \"attempt to splice lists with inequal allocators\",\n+    \"attempt to splice lists with unequal allocators\",\n     \"attempt to splice elements referenced by a %1.state; iterator\",\n     \"attempt to splice an iterator from a different container\",\n     \"splice destination %1.name;\""}, {"sha": "6b7d0da8815b8162399b42ae2229f7ddee4449ea", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/splice_after5_neg.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after5_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after5_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after5_neg.cc?ref=7c688aded43731835cfd13566fe8240c346cc20d", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-debug-mode \"\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <forward_list>\n+#include <testsuite_allocator.h>\n+\n+void\n+test01()\n+{\n+  typedef __gnu_test::uneq_allocator<int> alloc_type;\n+\n+  std::forward_list<int, alloc_type> fl1({1, 2, 3}, alloc_type(1));\n+  std::forward_list<int, alloc_type> fl2({1, 2, 3}, alloc_type(2));\n+\n+  fl1.splice_after(fl1.before_begin(), fl2);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "620bb5c92cd5bc82d62563e0f6c5a57027230a73", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/splice_after6_neg.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after6_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after6_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after6_neg.cc?ref=7c688aded43731835cfd13566fe8240c346cc20d", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-debug-mode \"\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <forward_list>\n+#include <testsuite_allocator.h>\n+\n+void\n+test01()\n+{\n+  typedef __gnu_test::uneq_allocator<int> alloc_type;\n+\n+  std::forward_list<int, alloc_type> fl1({1, 2, 3}, alloc_type(1));\n+  std::forward_list<int, alloc_type> fl2({1, 2, 3}, alloc_type(2));\n+\n+  fl1.splice_after(fl1.before_begin(), fl2, fl2.begin());\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "a2b5cfad94988effc1e7145b652979c768f7bd2d", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/splice_after7_neg.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after7_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c688aded43731835cfd13566fe8240c346cc20d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after7_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after7_neg.cc?ref=7c688aded43731835cfd13566fe8240c346cc20d", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-debug-mode \"\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <forward_list>\n+#include <testsuite_allocator.h>\n+\n+void\n+test01()\n+{\n+  typedef __gnu_test::uneq_allocator<int> alloc_type;\n+\n+  std::forward_list<int, alloc_type> fl1({1, 2, 3}, alloc_type(1));\n+  std::forward_list<int, alloc_type> fl2({1, 2, 3}, alloc_type(2));\n+\n+  fl1.splice_after(fl1.before_begin(), fl2, fl2.begin(), fl2.end());\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}]}