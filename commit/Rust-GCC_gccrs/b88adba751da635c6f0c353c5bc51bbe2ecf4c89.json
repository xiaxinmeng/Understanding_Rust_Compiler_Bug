{"sha": "b88adba751da635c6f0c353c5bc51bbe2ecf4c89", "node_id": "C_kwDOANBUbNoAKGI4OGFkYmE3NTFkYTYzNWM2ZjBjMzUzYzViYzUxYmJlMmVjZjRjODk", "commit": {"author": {"name": "Liwei Xu", "email": "liwei.xu@intel.com", "date": "2022-09-23T05:46:02Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-10-11T06:08:31Z"}, "message": "Optimize nested permutation to single VEC_PERM_EXPR [PR54346]\n\n        This patch implemented the optimization in PR 54346, which Merges\n\n\tc = VEC_PERM_EXPR <a, b, VCST0>;\n        d = VEC_PERM_EXPR <c, c, VCST1>;\n                to\n        d = VEC_PERM_EXPR <a, b, NEW_VCST>;\n\n\tBootstrapped and regtested on x86_64-pc-linux-gnu{-m32,}\n        tree-ssa/forwprop-19.c fail to pass but I'm not sure whether it\n        is ok to removed it.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/54346\n\t* match.pd: Merge the index of VCST then generates the new vec_perm.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/pr54346.c: New test.\n\nCo-authored-by: liuhongt <hongtao.liu@intel.com>", "tree": {"sha": "e6b158b66b12afe79761044260dfe168c2f4df12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6b158b66b12afe79761044260dfe168c2f4df12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b88adba751da635c6f0c353c5bc51bbe2ecf4c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88adba751da635c6f0c353c5bc51bbe2ecf4c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b88adba751da635c6f0c353c5bc51bbe2ecf4c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88adba751da635c6f0c353c5bc51bbe2ecf4c89/comments", "author": {"login": "LevyHsu", "id": 18082840, "node_id": "MDQ6VXNlcjE4MDgyODQw", "avatar_url": "https://avatars.githubusercontent.com/u/18082840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LevyHsu", "html_url": "https://github.com/LevyHsu", "followers_url": "https://api.github.com/users/LevyHsu/followers", "following_url": "https://api.github.com/users/LevyHsu/following{/other_user}", "gists_url": "https://api.github.com/users/LevyHsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/LevyHsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LevyHsu/subscriptions", "organizations_url": "https://api.github.com/users/LevyHsu/orgs", "repos_url": "https://api.github.com/users/LevyHsu/repos", "events_url": "https://api.github.com/users/LevyHsu/events{/privacy}", "received_events_url": "https://api.github.com/users/LevyHsu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db24bdc743cf23ea12d2dcf8254d86ab366bb46d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db24bdc743cf23ea12d2dcf8254d86ab366bb46d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db24bdc743cf23ea12d2dcf8254d86ab366bb46d"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "3550c16aaa6ad7e1d5d1c1c07a75a312b0f49401", "filename": "gcc/match.pd", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88adba751da635c6f0c353c5bc51bbe2ecf4c89/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88adba751da635c6f0c353c5bc51bbe2ecf4c89/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=b88adba751da635c6f0c353c5bc51bbe2ecf4c89", "patch": "@@ -8086,6 +8086,47 @@ and,\n   (minus (mult (vec_perm @1 @1 @3) @2) @4)))\n \n \n+/* Merge\n+   c = VEC_PERM_EXPR <a, b, VCST0>;\n+   d = VEC_PERM_EXPR <c, c, VCST1>;\n+   to\n+   d = VEC_PERM_EXPR <a, b, NEW_VCST>;  */\n+\n+(simplify\n+ (vec_perm (vec_perm@0 @1 @2 VECTOR_CST@3) @0 VECTOR_CST@4)\n+ (with\n+  {\n+    if (!TYPE_VECTOR_SUBPARTS (type).is_constant ())\n+      return NULL_TREE;\n+\n+    tree op0;\n+    machine_mode result_mode = TYPE_MODE (type);\n+    machine_mode op_mode = TYPE_MODE (TREE_TYPE (@1));\n+    int nelts = TYPE_VECTOR_SUBPARTS (type).to_constant ();\n+    vec_perm_builder builder0;\n+    vec_perm_builder builder1;\n+    vec_perm_builder builder2 (nelts, nelts, 1);\n+\n+    if (!tree_to_vec_perm_builder (&builder0, @3)\n+\t|| !tree_to_vec_perm_builder (&builder1, @4))\n+      return NULL_TREE;\n+\n+    vec_perm_indices sel0 (builder0, 2, nelts);\n+    vec_perm_indices sel1 (builder1, 1, nelts);\n+\n+    for (int i = 0; i < nelts; i++)\n+      builder2.quick_push (sel0[sel1[i].to_constant ()]);\n+\n+    vec_perm_indices sel2 (builder2, 2, nelts);\n+\n+    if (!can_vec_perm_const_p (result_mode, op_mode, sel2, false))\n+      return NULL_TREE;\n+\n+    op0 = vec_perm_indices_to_tree (TREE_TYPE (@4), sel2);\n+  }\n+  (vec_perm @1 @2 { op0; })))\n+\n+\n /* Match count trailing zeroes for simplify_count_trailing_zeroes in fwprop.\n    The canonical form is array[((x & -x) * C) >> SHIFT] where C is a magic\n    constant which when multiplied by a power of 2 contains a unique value"}, {"sha": "63611ab6c2f16ecc8ce722bcb649e4d8e92e9d94", "filename": "gcc/testsuite/gcc.dg/pr54346.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88adba751da635c6f0c353c5bc51bbe2ecf4c89/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54346.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88adba751da635c6f0c353c5bc51bbe2ecf4c89/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54346.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54346.c?ref=b88adba751da635c6f0c353c5bc51bbe2ecf4c89", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-dse1\" } */\n+\n+typedef int veci __attribute__ ((vector_size (4 * sizeof (int))));\n+\n+void fun (veci a, veci b, veci *i)\n+{\n+  veci c = __builtin_shuffle (a, b, __extension__ (veci) {1, 4, 2, 7});\n+  *i = __builtin_shuffle (c, __extension__ (veci) { 7, 2, 1, 5 });\n+}\n+\n+/* { dg-final { scan-tree-dump \"VEC_PERM_EXPR.*{ 3, 6, 0, 0 }\" \"dse1\" } } */\n+/* { dg-final { scan-tree-dump-times \"VEC_PERM_EXPR\" 1 \"dse1\" } } */"}]}