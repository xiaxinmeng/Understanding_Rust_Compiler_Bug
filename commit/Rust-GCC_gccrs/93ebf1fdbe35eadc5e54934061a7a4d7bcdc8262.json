{"sha": "93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNlYmYxZmRiZTM1ZWFkYzVlNTQ5MzQwNjFhN2E0ZDdiY2RjODI2Mg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-11-13T01:59:03Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-11-13T01:59:03Z"}, "message": "PR driver/67613 - spell suggestions for misspelled command line options\n\ngcc/ChangeLog:\n\tPR driver/67613\n\t* Makefile.in (GCC_OBJS): Add spellcheck.o.\n\t(OBJS): Add spellcheck-tree.o.\n\t* gcc.c: Include \"spellcheck.h\".\n\t(suggest_option): New function.\n\t(driver::handle_unrecognized_options): Call suggest_option to\n\tprovide a hint about misspelled options.\n\t* spellcheck.c: Update file comment.\n\t(levenshtein_distance): Convert 4-param implementation from static\n\tto extern scope.  Remove note about unit tests from leading\n\tcomment for const char * implementation.  Move tree\n\timplementation to...\n\t* spellcheck-tree.c: New file.\n\t* spellcheck.h (levenshtein_distance):  Add 4-param decl.\n\ngcc/testsuite/ChangeLog:\n\tPR driver/67613\n\t* gcc/testsuite/gcc.dg/spellcheck-options-1.c: New file.\n\t* gcc/testsuite/gcc.dg/spellcheck-options-2.c: New file.\n\nFrom-SVN: r230285", "tree": {"sha": "03490dac15713b742586dd8e47220bc1bc5db3a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03490dac15713b742586dd8e47220bc1bc5db3a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "277fe616911ac1ce91e9f1178d648303b4a26940", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277fe616911ac1ce91e9f1178d648303b4a26940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277fe616911ac1ce91e9f1178d648303b4a26940"}], "stats": {"total": 150, "additions": 130, "deletions": 20}, "files": [{"sha": "0c03eb0769e0780842d2b8900a3daefdf1fa8c29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "patch": "@@ -1,3 +1,20 @@\n+2015-11-13  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR driver/67613\n+\t* Makefile.in (GCC_OBJS): Add spellcheck.o.\n+\t(OBJS): Add spellcheck-tree.o.\n+\t* gcc.c: Include \"spellcheck.h\".\n+\t(suggest_option): New function.\n+\t(driver::handle_unrecognized_options): Call suggest_option to\n+\tprovide a hint about misspelled options.\n+\t* spellcheck.c: Update file comment.\n+\t(levenshtein_distance): Convert 4-param implementation from static\n+\tto extern scope.  Remove note about unit tests from leading\n+\tcomment for const char * implementation.  Move tree\n+\timplementation to...\n+\t* spellcheck-tree.c: New file.\n+\t* spellcheck.h (levenshtein_distance):  Add 4-param decl.\n+\n 2015-11-13  David Malcolm  <dmalcolm@redhat.com>\n \n \t* Makefile.in (OBJS): Add spellcheck.o."}, {"sha": "21796f233ab9eac20b8c7788a8ef3bdb41cfdf6f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "patch": "@@ -1158,7 +1158,7 @@ CXX_TARGET_OBJS=@cxx_target_objs@\n FORTRAN_TARGET_OBJS=@fortran_target_objs@\n \n # Object files for gcc many-languages driver.\n-GCC_OBJS = gcc.o gcc-main.o ggc-none.o\n+GCC_OBJS = gcc.o gcc-main.o ggc-none.o spellcheck.o\n \n c-family-warn = $(STRICT_WARN)\n \n@@ -1404,6 +1404,7 @@ OBJS = \\\n \tsimplify-rtx.o \\\n \tsparseset.o \\\n \tspellcheck.o \\\n+\tspellcheck-tree.o \\\n \tsreal.o \\\n \tstack-ptr-mod.o \\\n \tstatistics.o \\"}, {"sha": "6fceca235529ee500de206f459e81ae5ef2a0a16", "filename": "gcc/gcc.c", "status": "modified", "additions": 50, "deletions": 1, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "patch": "@@ -42,6 +42,7 @@ compilation is specified by a string called a \"spec\".  */\n #include \"opts.h\"\n #include \"params.h\"\n #include \"filenames.h\"\n+#include \"spellcheck.h\"\n \n \f\n \n@@ -7601,14 +7602,62 @@ driver::maybe_putenv_OFFLOAD_TARGETS () const\n   offload_targets = NULL;\n }\n \n+/* Helper function for driver::handle_unrecognized_options.\n+\n+   Given an unrecognized option BAD_OPT (without the leading dash),\n+   locate the closest reasonable matching option (again, without the\n+   leading dash), or NULL.  */\n+\n+static const char *\n+suggest_option (const char *bad_opt)\n+{\n+  const cl_option *best_option = NULL;\n+  edit_distance_t best_distance = MAX_EDIT_DISTANCE;\n+\n+  for (unsigned int i = 0; i < cl_options_count; i++)\n+    {\n+      edit_distance_t dist = levenshtein_distance (bad_opt,\n+\t\t\t\t\t\t   cl_options[i].opt_text + 1);\n+      if (dist < best_distance)\n+\t{\n+\t  best_distance = dist;\n+\t  best_option = &cl_options[i];\n+\t}\n+    }\n+\n+  if (!best_option)\n+    return NULL;\n+\n+  /* If more than half of the letters were misspelled, the suggestion is\n+     likely to be meaningless.  */\n+  if (best_option)\n+    {\n+      unsigned int cutoff = MAX (strlen (bad_opt),\n+\t\t\t\t strlen (best_option->opt_text + 1)) / 2;\n+      if (best_distance > cutoff)\n+\treturn NULL;\n+    }\n+\n+  return best_option->opt_text + 1;\n+}\n+\n /* Reject switches that no pass was interested in.  */\n \n void\n driver::handle_unrecognized_options () const\n {\n   for (size_t i = 0; (int) i < n_switches; i++)\n     if (! switches[i].validated)\n-      error (\"unrecognized command line option %<-%s%>\", switches[i].part1);\n+      {\n+\tconst char *hint = suggest_option (switches[i].part1);\n+\tif (hint)\n+\t  error (\"unrecognized command line option %<-%s%>;\"\n+\t\t \" did you mean %<-%s%>?\",\n+\t\t switches[i].part1, hint);\n+\telse\n+\t  error (\"unrecognized command line option %<-%s%>\",\n+\t\t switches[i].part1);\n+      }\n }\n \n /* Handle the various -print-* options, returning 0 if the driver"}, {"sha": "d2037766ecad46a6a0cf1d8515e78cfaff4f447b", "filename": "gcc/spellcheck-tree.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Fspellcheck-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Fspellcheck-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fspellcheck-tree.c?ref=93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "patch": "@@ -0,0 +1,39 @@\n+/* Find near-matches for identifiers.\n+   Copyright (C) 2015 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tree.h\"\n+#include \"spellcheck.h\"\n+\n+/* Calculate Levenshtein distance between two identifiers.  */\n+\n+edit_distance_t\n+levenshtein_distance (tree ident_s, tree ident_t)\n+{\n+  gcc_assert (TREE_CODE (ident_s) == IDENTIFIER_NODE);\n+  gcc_assert (TREE_CODE (ident_t) == IDENTIFIER_NODE);\n+\n+  return levenshtein_distance (IDENTIFIER_POINTER (ident_s),\n+\t\t\t       IDENTIFIER_LENGTH (ident_s),\n+\t\t\t       IDENTIFIER_POINTER (ident_t),\n+\t\t\t       IDENTIFIER_LENGTH (ident_t));\n+}"}, {"sha": "32854cf760eb08583cf4972a4252bd45395cdba9", "filename": "gcc/spellcheck.c", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Fspellcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Fspellcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fspellcheck.c?ref=93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "patch": "@@ -1,4 +1,4 @@\n-/* Find near-matches for strings and identifiers.\n+/* Find near-matches for strings.\n    Copyright (C) 2015 Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -30,7 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n \n    This implementation uses the Wagner-Fischer algorithm.  */\n \n-static edit_distance_t\n+edit_distance_t\n levenshtein_distance (const char *s, int len_s,\n \t\t      const char *t, int len_t)\n {\n@@ -112,25 +112,10 @@ levenshtein_distance (const char *s, int len_s,\n   return result;\n }\n \n-/* Calculate Levenshtein distance between two nil-terminated strings.\n-   This exists purely for the unit tests.  */\n+/* Calculate Levenshtein distance between two nil-terminated strings.  */\n \n edit_distance_t\n levenshtein_distance (const char *s, const char *t)\n {\n   return levenshtein_distance (s, strlen (s), t, strlen (t));\n }\n-\n-/* Calculate Levenshtein distance between two identifiers.  */\n-\n-edit_distance_t\n-levenshtein_distance (tree ident_s, tree ident_t)\n-{\n-  gcc_assert (TREE_CODE (ident_s) == IDENTIFIER_NODE);\n-  gcc_assert (TREE_CODE (ident_t) == IDENTIFIER_NODE);\n-\n-  return levenshtein_distance (IDENTIFIER_POINTER (ident_s),\n-\t\t\t       IDENTIFIER_LENGTH (ident_s),\n-\t\t\t       IDENTIFIER_POINTER (ident_t),\n-\t\t\t       IDENTIFIER_LENGTH (ident_t));\n-}"}, {"sha": "673a75625109d7c282cec41a71aee714e7cbcfef", "filename": "gcc/spellcheck.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Fspellcheck.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Fspellcheck.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fspellcheck.h?ref=93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "patch": "@@ -23,6 +23,10 @@ along with GCC; see the file COPYING3.  If not see\n typedef unsigned int edit_distance_t;\n const edit_distance_t MAX_EDIT_DISTANCE = UINT_MAX;\n \n+extern edit_distance_t\n+levenshtein_distance (const char *s, int len_s,\n+\t\t      const char *t, int len_t);\n+\n extern edit_distance_t\n levenshtein_distance (const char *s, const char *t);\n "}, {"sha": "409020aaab9f5b5f21e7fb7f63c140aff67b1500", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "patch": "@@ -1,3 +1,9 @@\n+2015-11-13  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR driver/67613\n+\t* gcc/testsuite/gcc.dg/spellcheck-options-1.c: New file.\n+\t* gcc/testsuite/gcc.dg/spellcheck-options-2.c: New file.\n+\n 2015-11-13  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/plugin/levenshtein-test-1.c: New file."}, {"sha": "cd5fdcacfdb8121d19454cbfad1d60e03367fb54", "filename": "gcc/testsuite/gcc.dg/spellcheck-options-1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-1.c?ref=93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wcoercion\" } */\n+/* { dg-error \"unrecognized command line option '-Wcoercion'; did you mean '-Wconversion'?\"  \"\" { target *-*-* } 0 } */\n+"}, {"sha": "786266df390ca6cda8f977c86a2e59d9edb3e351", "filename": "gcc/testsuite/gcc.dg/spellcheck-options-2.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-2.c?ref=93ebf1fdbe35eadc5e54934061a7a4d7bcdc8262", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wthis-should-not-get-a-hint\" } */\n+/* { dg-bogus \"did you mean\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"unrecognized command line option '-Wthis-should-not-get-a-hint'\"  \"\" { target *-*-* } 0 } */\n+"}]}