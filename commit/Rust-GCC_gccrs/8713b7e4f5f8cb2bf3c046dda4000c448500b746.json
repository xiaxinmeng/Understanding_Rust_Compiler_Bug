{"sha": "8713b7e4f5f8cb2bf3c046dda4000c448500b746", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODcxM2I3ZTRmNWY4Y2IyYmYzYzA0NmRkYTQwMDBjNDQ4NTAwYjc0Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-04-23T10:44:00Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-04-23T10:44:00Z"}, "message": "cuintp.c: Clean up include directives.\n\n\t* gcc-interface/cuintp.c: Clean up include directives.\n\t* gcc-interface/targtyps.c: Likewise.\n\t* gcc-interface/decl.c: Likewise.\n\t* gcc-interface/misc.c: Likewise.\n\t* gcc-interface/trans.c: Likewise.\n\t* gcc-interface/utils.c: Likewise.\n\t* gcc-interface/utils2.c: Likewise.\n\t* gcc-interface/Make-lang.in: Adjust dependencies accordingly.\n\nFrom-SVN: r146643", "tree": {"sha": "ec7657e0175ebdc34356edc7b7a6544fbfff4f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec7657e0175ebdc34356edc7b7a6544fbfff4f05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8713b7e4f5f8cb2bf3c046dda4000c448500b746", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8713b7e4f5f8cb2bf3c046dda4000c448500b746", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8713b7e4f5f8cb2bf3c046dda4000c448500b746", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8713b7e4f5f8cb2bf3c046dda4000c448500b746/comments", "author": null, "committer": null, "parents": [{"sha": "b2f21330f7bc725e088522d63070b05f0253a672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f21330f7bc725e088522d63070b05f0253a672", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2f21330f7bc725e088522d63070b05f0253a672"}], "stats": {"total": 148, "additions": 66, "deletions": 82}, "files": [{"sha": "ea9a0375d4f4a8b659885f5ae898af110999f233", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8713b7e4f5f8cb2bf3c046dda4000c448500b746", "patch": "@@ -1,3 +1,14 @@\n+2009-04-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/cuintp.c: Clean up include directives.\n+\t* gcc-interface/targtyps.c: Likewise.\n+\t* gcc-interface/decl.c: Likewise.\n+\t* gcc-interface/misc.c: Likewise.\n+\t* gcc-interface/trans.c: Likewise.\n+\t* gcc-interface/utils.c: Likewise.\n+\t* gcc-interface/utils2.c: Likewise.\n+\t* gcc-interface/Make-lang.in: Adjust dependencies accordingly.\n+\n 2009-04-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-tree.h (union lang_tree_node): Use standard idiom."}, {"sha": "f248193e74c4a523c86a40450b5d06203bc186af", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 36, "deletions": 42, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=8713b7e4f5f8cb2bf3c046dda4000c448500b746", "patch": "@@ -1143,69 +1143,63 @@ ada/raise.o   : ada/raise.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h ada/raise.h\n \t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n \t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-# Need to keep the frame pointer in this file to pop the stack properly on\n-# some targets.\n-ada/tracebak.o  : ada/tracebak.c $(CONFIG_H) $(SYSTEM_H)\n+# Need to keep the frame pointer to unwind the stack properly for some targets.\n+ada/tracebak.o : ada/tracebak.c $(CONFIG_H) $(SYSTEM_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t      -fno-omit-frame-pointer $< $(OUTPUT_OPTION)\n \n-ada/cuintp.o : ada/gcc-interface/cuintp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) ada/gcc-interface/ada.h ada/types.h ada/uintp.h ada/atree.h ada/stringt.h \\\n-   ada/elists.h ada/nlists.h ada/fe.h ada/gcc-interface/gigi.h\n+ada/cuintp.o : ada/gcc-interface/cuintp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   $(TM_H) $(TREE_H) ada/gcc-interface/ada.h ada/types.h ada/uintp.h \\\n+   ada/atree.h ada/elists.h ada/nlists.h ada/stringt.h ada/fe.h $(ADA_TREE_H) \\\n+   ada/gcc-interface/gigi.h\n \t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/decl.o : ada/gcc-interface/decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h convert.h $(TARGET_H) \\\n-   ada/gcc-interface/ada.h ada/types.h ada/atree.h \\\n-   ada/nlists.h ada/elists.h ada/uintp.h ada/sinfo.h ada/einfo.h ada/snames.h \\\n-   ada/namet.h ada/stringt.h ada/repinfo.h ada/fe.h $(ADA_TREE_H) \\\n-   ada/gcc-interface/gigi.h \\\n-   $(EXPR_H) gt-ada-decl.h\n+   $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h $(TARGET_H) $(EXPR_H) \\\n+   $(TREE_INLINE_H) ada/gcc-interface/ada.h ada/types.h ada/atree.h \\\n+   ada/elists.h ada/namet.h ada/nlists.h ada/repinfo.h ada/snames.h \\\n+   ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h ada/einfo.h $(ADA_TREE_H) \\\n+   ada/gcc-interface/gigi.h gt-ada-decl.h\n \t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/misc.o : ada/gcc-interface/misc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) \\\n-   $(RTL_H) $(EXPR_H) insn-codes.h insn-flags.h insn-config.h recog.h \\\n-   $(FLAGS_H) $(DIAGNOSTIC_H) output.h except.h $(TM_P_H) langhooks.h debug.h \\\n-   $(LANGHOOKS_DEF_H) libfuncs.h $(OPTABS_H) ada/gcc-interface/ada.h \\\n-   ada/types.h \\\n-   ada/atree.h ada/nlists.h ada/elists.h ada/sinfo.h ada/einfo.h ada/namet.h \\\n-   ada/stringt.h ada/uintp.h ada/fe.h $(ADA_TREE_H) ada/gcc-interface/gigi.h \\\n-   ada/adadecode.h opts.h options.h $(TARGET_H) $(REAL_H)\n+   $(TM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TARGET_H) $(EXPR_H) libfuncs.h \\\n+   $(FLAGS_H) debug.h $(CGRAPH_H) $(OPTABS_H) toplev.h except.h langhooks.h \\\n+   $(LANGHOOKS_DEF_H) opts.h options.h $(TREE_INLINE_H) \\\n+   ada/gcc-interface/ada.h ada/adadecode.h ada/types.h ada/atree.h \\\n+   ada/elists.h ada/namet.h ada/nlists.h ada/stringt.h ada/uintp.h ada/fe.h \\\n+   ada/sinfo.h ada/einfo.h $(ADA_TREE_H) ada/gcc-interface/gigi.h\n \t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/targtyps.o : ada/gcc-interface/targtyps.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) \\\n-   $(TREE_H) ada/gcc-interface/ada.h ada/types.h ada/atree.h ada/nlists.h \\\n-   ada/elists.h \\\n-   ada/uintp.h ada/sinfo.h ada/einfo.h ada/namet.h ada/snames.h ada/stringt.h \\\n-   ada/urealp.h ada/fe.h $(ADA_TREE_H) ada/gcc-interface/gigi.h\n+   coretypes.h $(TM_H) $(TREE_H) ada/gcc-interface/ada.h ada/types.h \\\n+   ada/atree.h ada/elists.h ada/namet.h ada/nlists.h ada/snames.h \\\n+   ada/stringt.h ada/uintp.h ada/urealp.h ada/fe.h ada/sinfo.h ada/einfo.h \\\n+   $(ADA_TREE_H) ada/gcc-interface/gigi.h\n \t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/trans.o : ada/gcc-interface/trans.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) \\\n-   $(TREE_H) $(RTL_H) $(EXPR_H) $(FLAGS_H) $(FUNCTION_H) \\\n-   ada/gcc-interface/ada.h except.h \\\n-   ada/types.h ada/atree.h ada/nlists.h ada/elists.h ada/uintp.h ada/sinfo.h \\\n-   ada/einfo.h ada/namet.h ada/snames.h ada/stringt.h ada/urealp.h ada/fe.h \\\n-   $(ADA_TREE_H) ada/gcc-interface/gigi.h gt-ada-trans.h tree-iterator.h\n+   $(TM_H) $(TREE_H) $(FLAGS_H) $(EXPR_H) output.h tree-iterator.h \\\n+   $(GIMPLE_H) ada/gcc-interface/ada.h ada/adadecode.h ada/types.h \\\n+   ada/atree.h ada/elists.h ada/namet.h ada/nlists.h ada/snames.h \\\n+   ada/stringt.h ada/uintp.h ada/urealp.h ada/fe.h ada/sinfo.h ada/einfo.h \\\n+   $(ADA_TREE_H) ada/gcc-interface/gigi.h gt-ada-trans.h\n \t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/utils.o : ada/gcc-interface/utils.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) \\\n-   $(TREE_H) $(FLAGS_H) $(EXPR_H) convert.h defaults.h langhooks.h \\\n-   ada/gcc-interface/ada.h ada/types.h \\\n-   ada/atree.h ada/nlists.h ada/elists.h ada/sinfo.h \\\n-   ada/einfo.h ada/namet.h ada/stringt.h ada/uintp.h ada/fe.h $(ADA_TREE_H) \\\n-   ada/gcc-interface/gigi.h gt-ada-utils.h \\\n-   gtype-ada.h $(TARGET_H) tree-iterator.h\n+   $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h $(RTL_H) output.h debug.h convert.h \\\n+   $(TARGET_H) function.h langhooks.h pointer-set.h $(CGRAPH_H) \\\n+   $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h $(GIMPLE_H) \\\n+   ada/gcc-interface/ada.h ada/types.h ada/atree.h ada/elists.h ada/namet.h \\\n+   ada/nlists.h ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h ada/einfo.h \\\n+   $(ADA_TREE_H) ada/gcc-interface/gigi.h gt-ada-utils.h gtype-ada.h\n \t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/utils2.o : ada/gcc-interface/utils2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(FLAGS_H) ada/gcc-interface/ada.h ada/types.h \\\n-   ada/atree.h ada/nlists.h ada/elists.h ada/sinfo.h ada/einfo.h ada/namet.h \\\n-   ada/snames.h ada/stringt.h ada/uintp.h ada/fe.h $(ADA_TREE_H) \\\n-   ada/gcc-interface/gigi.h\n+   $(TM_H) $(TREE_H) $(FLAGS_H) output.h $(TREE_INLINE_H) \\\n+   ada/gcc-interface/ada.h ada/types.h ada/atree.h ada/elists.h ada/namet.h \\\n+   ada/nlists.h ada/snames.h ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h \\\n+   ada/einfo.h $(ADA_TREE_H) ada/gcc-interface/gigi.h\n \t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n #"}, {"sha": "9b4204012b5012e9c8b93eaed0d08060f0f8b1fb", "filename": "gcc/ada/gcc-interface/cuintp.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Fcuintp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Fcuintp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fcuintp.c?ref=8713b7e4f5f8cb2bf3c046dda4000c448500b746", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2008, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2009, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -31,6 +31,7 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+\n #include \"ada.h\"\n #include \"types.h\"\n #include \"uintp.h\"\n@@ -39,8 +40,8 @@\n #include \"nlists.h\"\n #include \"stringt.h\"\n #include \"fe.h\"\n-#include \"gigi.h\"\n #include \"ada-tree.h\"\n+#include \"gigi.h\"\n \n /* Universal integers are represented by the Uint type which is an index into\n    the Uints_Ptr table containing Uint_Entry values.  A Uint_Entry contains an"}, {"sha": "35899d23ac66926d44f305df818b9054a70d1d34", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=8713b7e4f5f8cb2bf3c046dda4000c448500b746", "patch": "@@ -30,9 +30,7 @@\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"toplev.h\"\n-#include \"convert.h\"\n #include \"ggc.h\"\n-#include \"obstack.h\"\n #include \"target.h\"\n #include \"expr.h\"\n \n@@ -49,7 +47,6 @@\n #include \"fe.h\"\n #include \"sinfo.h\"\n #include \"einfo.h\"\n-#include \"hashtab.h\"\n #include \"ada-tree.h\"\n #include \"gigi.h\"\n "}, {"sha": "53854114a51626b10a856822eb13318fbe5f649e", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=8713b7e4f5f8cb2bf3c046dda4000c448500b746", "patch": "@@ -32,30 +32,25 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n-#include \"rtl.h\"\n #include \"diagnostic.h\"\n+#include \"target.h\"\n #include \"expr.h\"\n #include \"libfuncs.h\"\n #include \"ggc.h\"\n #include \"flags.h\"\n #include \"debug.h\"\n #include \"cgraph.h\"\n-#include \"tree-inline.h\"\n-#include \"insn-codes.h\"\n-#include \"insn-flags.h\"\n-#include \"insn-config.h\"\n #include \"optabs.h\"\n-#include \"recog.h\"\n #include \"toplev.h\"\n-#include \"output.h\"\n #include \"except.h\"\n-#include \"tm_p.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n-#include \"target.h\"\n+#include \"opts.h\"\n+#include \"options.h\"\n+#include \"tree-inline.h\"\n \n #include \"ada.h\"\n+#include \"adadecode.h\"\n #include \"types.h\"\n #include \"atree.h\"\n #include \"elists.h\"\n@@ -68,9 +63,6 @@\n #include \"einfo.h\"\n #include \"ada-tree.h\"\n #include \"gigi.h\"\n-#include \"adadecode.h\"\n-#include \"opts.h\"\n-#include \"options.h\"\n \n static bool gnat_init\t\t\t(void);\n static unsigned int gnat_init_options\t(unsigned int, const char **);"}, {"sha": "ed608e57ae9010908b0ad159c839e7bd00b5e23c", "filename": "gcc/ada/gcc-interface/targtyps.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c?ref=8713b7e4f5f8cb2bf3c046dda4000c448500b746", "patch": "@@ -30,8 +30,7 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n-#include \"rtl.h\"\n+\n #include \"ada.h\"\n #include \"types.h\"\n #include \"atree.h\""}, {"sha": "ff1d91815449ad26fbd42147f1f7e89ed496cdf5", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=8713b7e4f5f8cb2bf3c046dda4000c448500b746", "patch": "@@ -28,20 +28,15 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"real.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n-#include \"rtl.h\"\n #include \"expr.h\"\n #include \"ggc.h\"\n-#include \"cgraph.h\"\n-#include \"function.h\"\n-#include \"except.h\"\n-#include \"debug.h\"\n #include \"output.h\"\n #include \"tree-iterator.h\"\n #include \"gimple.h\"\n+\n #include \"ada.h\"\n+#include \"adadecode.h\"\n #include \"types.h\"\n #include \"atree.h\"\n #include \"elists.h\"\n@@ -56,9 +51,6 @@\n #include \"einfo.h\"\n #include \"ada-tree.h\"\n #include \"gigi.h\"\n-#include \"adadecode.h\"\n-#include \"dwarf2.h\"\n-#include \"dwarf2out.h\"\n \n /* We should avoid allocating more than ALLOCA_THRESHOLD bytes via alloca,\n    for fear of running out of stack space.  If we need more, we use xmalloc"}, {"sha": "c61809a11fe3e8c033f042b48b866585b3bc6d00", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=8713b7e4f5f8cb2bf3c046dda4000c448500b746", "patch": "@@ -33,22 +33,21 @@\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"defaults.h\"\n #include \"toplev.h\"\n+#include \"rtl.h\"\n #include \"output.h\"\n #include \"ggc.h\"\n #include \"debug.h\"\n #include \"convert.h\"\n #include \"target.h\"\n #include \"function.h\"\n+#include \"langhooks.h\"\n+#include \"pointer-set.h\"\n #include \"cgraph.h\"\n+#include \"tree-dump.h\"\n #include \"tree-inline.h\"\n #include \"tree-iterator.h\"\n #include \"gimple.h\"\n-#include \"tree-dump.h\"\n-#include \"pointer-set.h\"\n-#include \"langhooks.h\"\n-#include \"rtl.h\"\n \n #include \"ada.h\"\n #include \"types.h\""}, {"sha": "8ab39ee3205df4418aa5e899c4d4ed2e3dc57e2b", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8713b7e4f5f8cb2bf3c046dda4000c448500b746/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=8713b7e4f5f8cb2bf3c046dda4000c448500b746", "patch": "@@ -28,24 +28,23 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"ggc.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"ada.h\"\n #include \"types.h\"\n #include \"atree.h\"\n-#include \"stringt.h\"\n+#include \"elists.h\"\n #include \"namet.h\"\n+#include \"nlists.h\"\n+#include \"snames.h\"\n+#include \"stringt.h\"\n #include \"uintp.h\"\n #include \"fe.h\"\n-#include \"elists.h\"\n-#include \"nlists.h\"\n #include \"sinfo.h\"\n #include \"einfo.h\"\n #include \"ada-tree.h\"\n #include \"gigi.h\"\n-#include \"snames.h\"\n \n static tree find_common_type (tree, tree);\n static bool contains_save_expr_p (tree);"}]}