{"sha": "08156df50a56e4a4bd95159ad1bfbc50678f9e8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgxNTZkZjUwYTU2ZTRhNGJkOTUxNTlhZDFiZmJjNTA2NzhmOWU4YQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-08-04T19:14:32Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-08-04T19:14:32Z"}, "message": "Fix ICE on invalid variable template instantiation (PR c++/72759)\n\ngcc/cp/ChangeLog:\n\n\tPR c++/72759\n\t* pt.c (tsubst_qualified_id): Return error_mark_node if\n\ttemplate_args is error_mark_node.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/72759\n\t* g++.dg/cpp1y/pr72759.C: New test.\n\nFrom-SVN: r239147", "tree": {"sha": "29a17573923f7f183be6505b6fb4b9a3c390479d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29a17573923f7f183be6505b6fb4b9a3c390479d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08156df50a56e4a4bd95159ad1bfbc50678f9e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08156df50a56e4a4bd95159ad1bfbc50678f9e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08156df50a56e4a4bd95159ad1bfbc50678f9e8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08156df50a56e4a4bd95159ad1bfbc50678f9e8a/comments", "author": null, "committer": null, "parents": [{"sha": "938da3a58b989f983233eceb8be320ea1b478081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938da3a58b989f983233eceb8be320ea1b478081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/938da3a58b989f983233eceb8be320ea1b478081"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "5ec690d6e2e6993d9082c2f0e95b9c015caa8d77", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08156df50a56e4a4bd95159ad1bfbc50678f9e8a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08156df50a56e4a4bd95159ad1bfbc50678f9e8a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08156df50a56e4a4bd95159ad1bfbc50678f9e8a", "patch": "@@ -1,3 +1,9 @@\n+2016-08-04  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/72759\n+\t* pt.c (tsubst_qualified_id): Return error_mark_node if\n+\ttemplate_args is error_mark_node.\n+\n 2016-08-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/72415"}, {"sha": "2f40700538ec03f9b1f99cf9e729ad2bd9601ef9", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08156df50a56e4a4bd95159ad1bfbc50678f9e8a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08156df50a56e4a4bd95159ad1bfbc50678f9e8a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=08156df50a56e4a4bd95159ad1bfbc50678f9e8a", "patch": "@@ -13832,6 +13832,8 @@ tsubst_qualified_id (tree qualified_id, tree args,\n       if (template_args)\n \ttemplate_args = tsubst_template_args (template_args, args,\n \t\t\t\t\t      complain, in_decl);\n+      if (template_args == error_mark_node)\n+\treturn error_mark_node;\n       name = TREE_OPERAND (name, 0);\n     }\n   else"}, {"sha": "c456b1886deee45a0b7d3892e2ef1b0e379c32df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08156df50a56e4a4bd95159ad1bfbc50678f9e8a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08156df50a56e4a4bd95159ad1bfbc50678f9e8a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08156df50a56e4a4bd95159ad1bfbc50678f9e8a", "patch": "@@ -1,3 +1,8 @@\n+2016-08-04  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/72759\n+\t* g++.dg/cpp1y/pr72759.C: New test.\n+\n 2016-08-04  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \t* gcc.dg/switch-10.c: New test."}, {"sha": "4af6ea471205e6f6b95074ebaddc70facb486af0", "filename": "gcc/testsuite/g++.dg/cpp1y/pr72759.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08156df50a56e4a4bd95159ad1bfbc50678f9e8a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr72759.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08156df50a56e4a4bd95159ad1bfbc50678f9e8a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr72759.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr72759.C?ref=08156df50a56e4a4bd95159ad1bfbc50678f9e8a", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/72759\n+// { dg-do compile { target c++14 } }\n+\n+template <typename> struct SpecPerType;\n+class Specializer {\n+  public:  template <bool> static void MbrFnTempl();\n+  template <unsigned> struct A { static void InnerMemberFn(); };\n+  void Trigger() { A<0>::InnerMemberFn; }\n+};\n+template <> struct SpecPerType<Specializer> {\n+  using FnType = void *;\n+  template <bool P>\n+  static constexpr FnType SpecMbrFnPtr = Specializer::MbrFnTempl<P>;\n+};\n+template <unsigned X> void Specializer::A<X>::InnerMemberFn() {\n+  using Spec = SpecPerType<Specializer>;\n+  Spec ErrorSite = Spec::SpecMbrFnPtr<SpecMbrFnPtr>;  // { dg-error \"not declared\" }\n+}"}]}