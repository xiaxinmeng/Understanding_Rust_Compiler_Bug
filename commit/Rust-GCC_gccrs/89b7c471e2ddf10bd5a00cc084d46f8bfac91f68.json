{"sha": "89b7c471e2ddf10bd5a00cc084d46f8bfac91f68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODliN2M0NzFlMmRkZjEwYmQ1YTAwY2MwODRkNDZmOGJmYWM5MWY2OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-28T19:05:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-28T19:05:55Z"}, "message": "(alpha_emit_conditional_move): Emit correct code when incoming\ncomparison code is NE.\n\nFrom-SVN: r12364", "tree": {"sha": "2a23bfd59b92d26dd1780db742ed64a21796c0f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a23bfd59b92d26dd1780db742ed64a21796c0f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89b7c471e2ddf10bd5a00cc084d46f8bfac91f68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b7c471e2ddf10bd5a00cc084d46f8bfac91f68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b7c471e2ddf10bd5a00cc084d46f8bfac91f68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b7c471e2ddf10bd5a00cc084d46f8bfac91f68/comments", "author": null, "committer": null, "parents": [{"sha": "d7f21d631f9250504b35e3873598ca5c34dd3a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f21d631f9250504b35e3873598ca5c34dd3a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f21d631f9250504b35e3873598ca5c34dd3a76"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "b3befe143331eaa4de1144e3e81b7780d38bee28", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b7c471e2ddf10bd5a00cc084d46f8bfac91f68/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b7c471e2ddf10bd5a00cc084d46f8bfac91f68/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=89b7c471e2ddf10bd5a00cc084d46f8bfac91f68", "patch": "@@ -1035,6 +1035,7 @@ alpha_emit_conditional_move (cmp, mode)\n      enum machine_mode mode;\n {\n   enum rtx_code code = GET_CODE (cmp);\n+  enum rtx_code cmov_code = NE;\n   rtx op0 = alpha_compare_op0;\n   rtx op1 = alpha_compare_op1;\n   enum machine_mode cmp_mode\n@@ -1065,6 +1066,7 @@ alpha_emit_conditional_move (cmp, mode)\n     case NE:\n       /* This must be reversed. */\n       code = reverse_condition (code);\n+      cmov_code = EQ;\n       break;\n \n     case GE:  case GT:  case GEU:  case GTU:\n@@ -1081,8 +1083,7 @@ alpha_emit_conditional_move (cmp, mode)\n \n   tem = gen_reg_rtx (cmp_op_mode);\n   emit_move_insn (tem, gen_rtx (code, cmp_op_mode, op0, op1));\n-  return gen_rtx (code == NE ? EQ : NE, VOIDmode, tem,\n-\t\t  CONST0_RTX (cmp_op_mode));\n+  return gen_rtx (cmov_code, VOIDmode, tem, CONST0_RTX (cmp_op_mode));\n }\n \f\n /* Adjust the cost of a scheduling dependency.  Return the new cost of"}]}