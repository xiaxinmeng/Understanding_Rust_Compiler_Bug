{"sha": "903db43579c8059fb643086c5492e7c58f702bfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAzZGI0MzU3OWM4MDU5ZmI2NDMwODZjNTQ5MmU3YzU4ZjcwMmJmZQ==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2009-04-28T04:02:30Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2009-04-28T04:02:30Z"}, "message": "interpret.cc (DEBUG): Rename this ...\n\n\t* interpret.cc (DEBUG):  Rename this ...\n\t(__GCJ_DEBUG):  ... to this throughout.\n\t* configure.ac:  Likewise.\n\t* interpret-run.cc:  Likewise.\n\t* prims.cc:  Likewise.\n\t* gnu/classpath/natConfiguration.cc:  Likewise.\n\t* include/java-assert.h:  Likewise.\n\t* java/io/natVMObjectInputStream.cc:  Likewise.\n\n\t* configure:  Regenerate.\n\t* include/config.h.in:  Regenerate.\n\nFrom-SVN: r146869", "tree": {"sha": "8d928aaeb69a97d8e09a630b133acffaec592668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d928aaeb69a97d8e09a630b133acffaec592668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/903db43579c8059fb643086c5492e7c58f702bfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/903db43579c8059fb643086c5492e7c58f702bfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/903db43579c8059fb643086c5492e7c58f702bfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/903db43579c8059fb643086c5492e7c58f702bfe/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33cbe42179c927948f3e0a931cc2e60d603f7319", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33cbe42179c927948f3e0a931cc2e60d603f7319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33cbe42179c927948f3e0a931cc2e60d603f7319"}], "stats": {"total": 62, "additions": 38, "deletions": 24}, "files": [{"sha": "1dfd38fe652af684fc1f855b8448b008223c15c7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=903db43579c8059fb643086c5492e7c58f702bfe", "patch": "@@ -1,3 +1,17 @@\n+2009-04-28  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* interpret.cc (DEBUG):  Rename this ...\n+\t(__GCJ_DEBUG):  ... to this throughout.\n+\t* configure.ac:  Likewise.\n+\t* interpret-run.cc:  Likewise.\n+\t* prims.cc:  Likewise.\n+\t* gnu/classpath/natConfiguration.cc:  Likewise.\n+\t* include/java-assert.h:  Likewise.\n+\t* java/io/natVMObjectInputStream.cc:  Likewise.\n+\n+\t* configure:  Regenerate.\n+\t* include/config.h.in:  Regenerate.\n+\n 2009-04-28  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \t* java/lang/natVMClassLoader.cc"}, {"sha": "b2c2467047486a341bb5f66d4bbfb6db5c1dda10", "filename": "libjava/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=903db43579c8059fb643086c5492e7c58f702bfe", "patch": "@@ -5268,7 +5268,7 @@ if test \"${enable_libgcj_debug+set}\" = set; then\n   if test \"$enable_libgcj_debug\" = yes; then\n \n cat >>confdefs.h <<\\_ACEOF\n-#define DEBUG 1\n+#define __GCJ_DEBUG 1\n _ACEOF\n \n     LIBGCJDEBUG=\"enable\""}, {"sha": "c57356a8cde71b3bbb6c44fc029142960db814d5", "filename": "libjava/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=903db43579c8059fb643086c5492e7c58f702bfe", "patch": "@@ -244,7 +244,7 @@ AC_ARG_ENABLE(libgcj-debug,\n   AS_HELP_STRING([--enable-libgcj-debug],\n                  [enable runtime debugging code]),\n   [if test \"$enable_libgcj_debug\" = yes; then\n-    AC_DEFINE(DEBUG, 1, [Define this if you want runtime debugging enabled.])\n+    AC_DEFINE(__GCJ_DEBUG, 1, [Define this if you want runtime debugging enabled.])\n     LIBGCJDEBUG=\"enable\"\n   fi])\n "}, {"sha": "b7b8161e7093e64650bec73565a58b9a62412b30", "filename": "libjava/gnu/classpath/natConfiguration.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Fgnu%2Fclasspath%2FnatConfiguration.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Fgnu%2Fclasspath%2FnatConfiguration.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2FnatConfiguration.cc?ref=903db43579c8059fb643086c5492e7c58f702bfe", "patch": "@@ -25,7 +25,7 @@ gnu::classpath::Configuration::classpath_home()\n jboolean\n gnu::classpath::Configuration::debug()\n {\n-#ifdef DEBUG\n+#ifdef __GCJ_DEBUG\n   return true;\n #else\n   return false;"}, {"sha": "b81e0d3e1f43529d273baa4a4ff25d944445c1bb", "filename": "libjava/include/config.h.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fconfig.h.in?ref=903db43579c8059fb643086c5492e7c58f702bfe", "patch": "@@ -3,9 +3,6 @@\n /* Name of default AWT toolkit */\n #undef AWT_TOOLKIT\n \n-/* Define this if you want runtime debugging enabled. */\n-#undef DEBUG\n-\n /* Define if system properties shouldn't be read from\n    getenv(\"GCJ_PROPERTIES\"). */\n #undef DISABLE_GETENV_PROPERTIES\n@@ -457,5 +454,8 @@\n /* Required define if using POSIX threads */\n #undef _REENTRANT\n \n+/* Define this if you want runtime debugging enabled. */\n+#undef __GCJ_DEBUG\n+\n /* Define to `int' if <sys/types.h> does not define. */\n #undef ssize_t"}, {"sha": "57962418b7d82b84307c61188fbdb15df4afc81f", "filename": "libjava/include/java-assert.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Finclude%2Fjava-assert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Finclude%2Fjava-assert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-assert.h?ref=903db43579c8059fb643086c5492e7c58f702bfe", "patch": "@@ -16,7 +16,7 @@ details.  */\n void _Jv_Abort (const char *, const char *, int, const char *)\n   __attribute__ ((__noreturn__));\n \n-#ifdef DEBUG\n+#ifdef __GCJ_DEBUG\n #define _Jv_AssertDoCall(Message) _Jv_Abort (__FUNCTION__, __FILE__, __LINE__, Message)\n \n #define JvAssertMessage(Expr, Message) \\\n@@ -26,13 +26,13 @@ void _Jv_Abort (const char *, const char *, int, const char *)\n \n #define JvFail(Message) _Jv_AssertDoCall (Message)\n \n-#else /* DEBUG */\n+#else /* __GCJ_DEBUG */\n \n #define _Jv_AssertDoCall(Message)\n #define JvAssertMessage(Expr, Message)\n #define JvAssert(Expr)\n #define JvFail(Message) _Jv_Abort (0, 0, 0, Message)\n \n-#endif /* not DEBUG */\n+#endif /* not __GCJ_DEBUG */\n \n #endif /* __JAVA_ASSERT_H__ */"}, {"sha": "a4c2d4dab43b614543070e7739661d1cfa21a54c", "filename": "libjava/interpret-run.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Finterpret-run.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Finterpret-run.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret-run.cc?ref=903db43579c8059fb643086c5492e7c58f702bfe", "patch": "@@ -23,7 +23,7 @@ details.  */\n   // returns.\n   java::lang::Thread *thread = java::lang::Thread::currentThread();\n   \n-#ifdef DEBUG\n+#ifdef __GCJ_DEBUG\n   _Jv_InterpFrame frame_desc (meth, thread, NULL, &pc);\n #else\n   _Jv_InterpFrame frame_desc (meth, thread);\n@@ -38,7 +38,7 @@ details.  */\n \n   _Jv_word locals[meth->max_locals];\n \n-#ifdef DEBUG\n+#ifdef __GCJ_DEBUG\n   // This is the information needed to get and set local variables with\n   // proper type checking.\n   frame_desc.locals = locals;\n@@ -126,7 +126,7 @@ details.  */\n           continue;\n         }\n     }\n-#endif /* DEBUG */\n+#endif /* __GCJ_DEBUG */\n \n #define INSN_LABEL(op) &&insn_##op\n \n@@ -347,7 +347,7 @@ details.  */\n \n #ifdef DIRECT_THREADED\n \n-#ifdef DEBUG\n+#ifdef __GCJ_DEBUG\n #undef NEXT_INSN\n #define NEXT_INSN\t\t\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n@@ -392,7 +392,7 @@ details.  */\n \n #undef INTERP_REPORT_EXCEPTION\n #define INTERP_REPORT_EXCEPTION(Jthrowable) REPORT_EXCEPTION (Jthrowable)\n-#else // !DEBUG\n+#else // !__GCJ_DEBUG\n #undef NEXT_INSN\n #define NEXT_INSN goto *((pc++)->insn)\n \n@@ -416,7 +416,7 @@ details.  */\n \n #undef INTERP_REPORT_EXCEPTION\n #define INTERP_REPORT_EXCEPTION(Jthrowable) /* not needed when not debugging */\n-#endif // !DEBUG\n+#endif // !__GCJ_DEBUG\n \n #define INTVAL() ((pc++)->int_val)\n #define AVAL() ((pc++)->datum)\n@@ -450,7 +450,7 @@ details.  */\n \n #else\n \n-#ifdef DEBUG\n+#ifdef __GCJ_DEBUG\n #define NEXT_INSN\t\t\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n@@ -2677,7 +2677,7 @@ details.  */\n         {\n           sp = stack;\n           sp++->o = ex; // Push exception.\n-#ifdef DEBUG\n+#ifdef __GCJ_DEBUG\n           if (JVMTI_REQUESTED_EVENT (ExceptionCatch))\n             {\n               using namespace gnu::gcj::jvmti;"}, {"sha": "3f690d7b27c0b95e66868fb63aefde0ff5c283a1", "filename": "libjava/interpret.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=903db43579c8059fb643086c5492e7c58f702bfe", "patch": "@@ -983,7 +983,7 @@ void\n _Jv_InterpMethod::run (void *retp, INTERP_FFI_RAW_TYPE *args,\n \t\t       _Jv_InterpMethod *meth)\n {\n-#undef DEBUG\n+#undef __GCJ_DEBUG\n #undef DEBUG_LOCALS_INSN\n #define DEBUG_LOCALS_INSN(s, t) do {} while (0)\n \n@@ -994,7 +994,7 @@ void\n _Jv_InterpMethod::run_debug (void *retp, INTERP_FFI_RAW_TYPE *args,\n \t\t\t     _Jv_InterpMethod *meth)\n {\n-#define DEBUG\n+#define __GCJ_DEBUG\n #undef DEBUG_LOCALS_INSN\n #define DEBUG_LOCALS_INSN(s, t)  \\\n   do    \\\n@@ -1719,7 +1719,7 @@ throw_class_format_error (const char *msg)\n    CATCH_LOCATION with the method and location where the catch will\n    occur. If the exception is not caught, these are set to 0.\n \n-   This function should only be used with the DEBUG interpreter. */\n+   This function should only be used with the __GCJ_DEBUG interpreter. */\n static void\n find_catch_location (::java::lang::Throwable *exc, jthread thread,\n \t\t     jmethodID *catch_method, jlong *catch_loc)\n@@ -1751,7 +1751,7 @@ find_catch_location (::java::lang::Throwable *exc, jthread thread,\n    caught (if it is caught).\n    \n    Like find_catch_location, this should only be called with the\n-   DEBUG interpreter. Since a few exceptions occur outside the\n+   __GCJ_DEBUG interpreter. Since a few exceptions occur outside the\n    interpreter proper, it is important to not call this function\n    without checking JVMTI_REQUESTED_EVENT(Exception) first. */\n void"}, {"sha": "eccf0eb025581996c81a2d2453973ac10462bc5c", "filename": "libjava/java/io/natVMObjectInputStream.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Fjava%2Fio%2FnatVMObjectInputStream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Fjava%2Fio%2FnatVMObjectInputStream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatVMObjectInputStream.cc?ref=903db43579c8059fb643086c5492e7c58f702bfe", "patch": "@@ -26,7 +26,7 @@ details.  */\n #include <java/lang/reflect/Method.h>\n #include <java-stack.h>\n \n-#ifdef DEBUG\n+#ifdef __GCJ_DEBUG\n #include <java/lang/System.h>\n #include <java/io/PrintStream.h>\n #endif"}, {"sha": "90f8dc5ca23cb388f21ee17dc4d3c449310d1b99", "filename": "libjava/prims.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903db43579c8059fb643086c5492e7c58f702bfe/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=903db43579c8059fb643086c5492e7c58f702bfe", "patch": "@@ -460,7 +460,7 @@ _Jv_makeUtf8Const (jstring string)\n \n \f\n \n-#ifdef DEBUG\n+#ifdef __GCJ_DEBUG\n void\n _Jv_Abort (const char *function, const char *file, int line,\n \t   const char *message)\n@@ -469,7 +469,7 @@ void\n _Jv_Abort (const char *, const char *, int, const char *message)\n #endif\n {\n-#ifdef DEBUG\n+#ifdef __GCJ_DEBUG\n   fprintf (stderr,\n \t   \"libgcj failure: %s\\n   in function %s, file %s, line %d\\n\",\n \t   message, function, file, line);"}]}