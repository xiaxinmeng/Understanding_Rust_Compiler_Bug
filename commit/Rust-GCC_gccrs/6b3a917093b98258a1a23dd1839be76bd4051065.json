{"sha": "6b3a917093b98258a1a23dd1839be76bd4051065", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIzYTkxNzA5M2I5ODI1OGExYTIzZGQxODM5YmU3NmJkNDA1MTA2NQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-06-19T10:52:39Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-06-19T10:52:39Z"}, "message": "rs6000: Fix vector homogeneous aggregates (PR86197)\n\nThe existing code allows only 4 vectors worth of ieee128 homogeneous\naggregates, but it should be 8.  This happens because at one spot it\nis mistakenly qualified as being passed in floating point registers.\n\n\n\tPR target/86197\n\t* config/rs6000/rs6000.md (rs6000_discover_homogeneous_aggregate): An\n\tieee128 argument takes up only one (vector) register, not two (floating\n\tpoint) registers.\n\nFrom-SVN: r261738", "tree": {"sha": "0cba56082f3d32d179a5733fb852ade0d908694f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cba56082f3d32d179a5733fb852ade0d908694f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b3a917093b98258a1a23dd1839be76bd4051065", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3a917093b98258a1a23dd1839be76bd4051065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3a917093b98258a1a23dd1839be76bd4051065", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3a917093b98258a1a23dd1839be76bd4051065/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f1387e0f270d42df03d33c41e4bdac8d1491cdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f1387e0f270d42df03d33c41e4bdac8d1491cdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f1387e0f270d42df03d33c41e4bdac8d1491cdb"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "f580b4eb1969e6d05aadd674f48377b5480ea25e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3a917093b98258a1a23dd1839be76bd4051065/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3a917093b98258a1a23dd1839be76bd4051065/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b3a917093b98258a1a23dd1839be76bd4051065", "patch": "@@ -1,3 +1,10 @@\n+2018-06-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/86197\n+\t* config/rs6000/rs6000.md (rs6000_discover_homogeneous_aggregate): An\n+\tieee128 argument takes up only one (vector) register, not two (floating\n+\tpoint) registers.\n+\n 2018-06-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimplify.c (gimplify_init_constructor): Really never clear for an"}, {"sha": "11ef766a531ae30240ae854be390f4a19ab108f4", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3a917093b98258a1a23dd1839be76bd4051065/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3a917093b98258a1a23dd1839be76bd4051065/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=6b3a917093b98258a1a23dd1839be76bd4051065", "patch": "@@ -10887,12 +10887,12 @@ rs6000_discover_homogeneous_aggregate (machine_mode mode, const_tree type,\n \n       if (field_count > 0)\n \t{\n-\t  int n_regs = (SCALAR_FLOAT_MODE_P (field_mode) ?\n-\t\t\t(GET_MODE_SIZE (field_mode) + 7) >> 3 : 1);\n+\t  int reg_size = ALTIVEC_OR_VSX_VECTOR_MODE (field_mode) ? 16 : 8;\n+\t  int field_size = ROUND_UP (GET_MODE_SIZE (field_mode), reg_size);\n \n \t  /* The ELFv2 ABI allows homogeneous aggregates to occupy\n \t     up to AGGR_ARG_NUM_REG registers.  */\n-\t  if (field_count * n_regs <= AGGR_ARG_NUM_REG)\n+\t  if (field_count * field_size <= AGGR_ARG_NUM_REG * reg_size)\n \t    {\n \t      if (elt_mode)\n \t\t*elt_mode = field_mode;"}]}