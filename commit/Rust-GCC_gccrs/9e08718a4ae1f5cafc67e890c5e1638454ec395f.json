{"sha": "9e08718a4ae1f5cafc67e890c5e1638454ec395f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwODcxOGE0YWUxZjVjYWZjNjdlODkwYzVlMTYzODQ1NGVjMzk1Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-11-25T19:30:58Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-11-25T19:30:58Z"}, "message": "re PR testsuite/51258 (64-bit gcc.dg/atomic-compare-exchange-5.c link failure on 32-bit Solaris/x86)\n\n\tPR testsuite/51258\n\t* lib/target-supports.exp\n\t(check_effective_target_sync_long_long): Also supported on 32bit\n\tx86 targets.  Add comment about required dg-options.\n\tAdd alpha*-*-* targets.\n\t(check_effective_target_sync_long_long_runtime): Ditto.\n\n\t* gcc.dg/atomic-op-4.c (dg-options): Add -march=pentium for\n\t32bit x86 targets.\n\t* gcc.dg/atomic-compare-exchange-4.c: Ditto.\n\t* gcc.dg/atomic-exchange-4.c: Ditto.\n\t* gcc.dg/atomic-load-4.c: Ditto.\n\t* gcc.dg/atomic-store-4.c: Ditto.\n\t* gcc.dg/di-longlong64-sync-1.c: Ditto.\n\t* gcc.dg/di-sync-multithread.c: Ditto.\n\t* gcc.dg/simulate-thread/atomic-load-longlong.c: Ditto.\n\t* gcc.dg/simulate-thread/atomic-other-longlong.c: Ditto.\n\nFrom-SVN: r181728", "tree": {"sha": "66c50205039e622d1ad99f364308514d32cb3807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66c50205039e622d1ad99f364308514d32cb3807"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e08718a4ae1f5cafc67e890c5e1638454ec395f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e08718a4ae1f5cafc67e890c5e1638454ec395f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e08718a4ae1f5cafc67e890c5e1638454ec395f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e08718a4ae1f5cafc67e890c5e1638454ec395f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf71de9423d91ced56ff240ee73e928353a92a0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf71de9423d91ced56ff240ee73e928353a92a0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf71de9423d91ced56ff240ee73e928353a92a0a"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "68c78f7d78e644a023531a296bc0e5f19f056487", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -1,3 +1,23 @@\n+2011-11-25  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR testsuite/51258\n+\t* lib/target-supports.exp\n+\t(check_effective_target_sync_long_long): Also supported on 32bit\n+\tx86 targets.  Add comment about required dg-options.\n+\tAdd alpha*-*-* targets.\n+\t(check_effective_target_sync_long_long_runtime): Ditto.\n+\n+\t* gcc.dg/atomic-op-4.c (dg-options): Add -march=pentium for\n+\t32bit x86 targets.\n+\t* gcc.dg/atomic-compare-exchange-4.c: Ditto.\n+\t* gcc.dg/atomic-exchange-4.c: Ditto.\n+\t* gcc.dg/atomic-load-4.c: Ditto.\n+\t* gcc.dg/atomic-store-4.c: Ditto.\n+\t* gcc.dg/di-longlong64-sync-1.c: Ditto.\n+\t* gcc.dg/di-sync-multithread.c: Ditto.\n+\t* gcc.dg/simulate-thread/atomic-load-longlong.c: Ditto.\n+\t* gcc.dg/simulate-thread/atomic-other-longlong.c: Ditto.\n+\n 2011-11-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR testsuite/51258"}, {"sha": "b6c783ddaba84801cec31550bf6603f0089946b0", "filename": "gcc/testsuite/gcc.dg/atomic-compare-exchange-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-4.c?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_long_long_runtime } */\n /* { dg-options \"\" } */\n+/* { dg-options \"-march=pentium\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n /* Test the execution of __atomic_compare_exchange_n builtin for a long_long.  */\n "}, {"sha": "13022dd38d20283f264ae6546e8abe7c793c25f5", "filename": "gcc/testsuite/gcc.dg/atomic-exchange-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-4.c?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_long_long_runtime } */\n /* { dg-options \"\" } */\n+/* { dg-options \"-march=pentium\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n /* Test the execution of the __atomic_X builtin for a long_long.  */\n "}, {"sha": "032ad246fd06ca0d5e1aab2fde1a5e77b85294d5", "filename": "gcc/testsuite/gcc.dg/atomic-load-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-4.c?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_long_long_runtime } */\n /* { dg-options \"\" } */\n+/* { dg-options \"-march=pentium\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void abort(void);\n "}, {"sha": "7c4a819bfaaea9fb16042e28d8a286e7c68e266d", "filename": "gcc/testsuite/gcc.dg/atomic-op-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-4.c?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_long_long_runtime } */\n /* { dg-options \"\" } */\n+/* { dg-options \"-march=pentium\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n /* Test the execution of the __atomic_*OP builtin routines for long long.  */\n "}, {"sha": "0863be99d011fa9844083c46cc0712e7cd50762f", "filename": "gcc/testsuite/gcc.dg/atomic-store-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-4.c?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_long_long_runtime } */\n /* { dg-options \"\" } */\n+/* { dg-options \"-march=pentium\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n /* Test the execution of the __atomic_store_n builtin for a long long.  */\n "}, {"sha": "f04cf62e03d382686fa687d0afc954dba9ea2298", "filename": "gcc/testsuite/gcc.dg/di-longlong64-sync-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fdi-longlong64-sync-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fdi-longlong64-sync-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdi-longlong64-sync-1.c?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_long_long_runtime } */\n /* { dg-options \"-std=gnu99\" } */\n+/* { dg-additional-options \"-march=pentium\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+\n /* { dg-message \"note: '__sync_fetch_and_nand' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */\n /* { dg-message \"note: '__sync_nand_and_fetch' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */\n "}, {"sha": "307ebf8b314e4199874bf0e2d6e5e1435f12c62c", "filename": "gcc/testsuite/gcc.dg/di-sync-multithread.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fdi-sync-multithread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fdi-sync-multithread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdi-sync-multithread.c?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-effective-target pthread_h } */\n /* { dg-require-effective-target pthread } */\n /* { dg-options \"-pthread -std=gnu99\" } */\n+/* { dg-additional-options \"-march=pentium\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n /* test of long long atomic ops performed in parallel in 3 pthreads\n    david.gilbert@linaro.org */"}, {"sha": "91f9a0627147302a136f0774aad7de4f34c4d18f", "filename": "gcc/testsuite/gcc.dg/simulate-thread/atomic-load-longlong.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-longlong.c?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do link } */\n /* { dg-require-effective-target sync_long_long_runtime } */\n /* { dg-options \"\" } */\n+/* { dg-options \"-march=pentium\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-final { simulate-thread } } */\n \n "}, {"sha": "087c4660cfb2045bb77f73c1774b73b7a3c7f705", "filename": "gcc/testsuite/gcc.dg/simulate-thread/atomic-other-longlong.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-other-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-other-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-other-longlong.c?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do link } */\n /* { dg-require-effective-target sync_long_long_runtime } */\n /* { dg-options \"\" } */\n+/* { dg-options \"-march=pentium\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-final { simulate-thread } } */\n \n "}, {"sha": "78223afe601a90c43b68f9359eb06e557bd0aa60", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e08718a4ae1f5cafc67e890c5e1638454ec395f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=9e08718a4ae1f5cafc67e890c5e1638454ec395f", "patch": "@@ -3644,11 +3644,14 @@ proc check_effective_target_sync_int_128_runtime { } {\n }\n \n # Return 1 if the target supports atomic operations on \"long long\".\n+#\n+# Note: 32bit x86 targets require -march=pentium in dg-options.\n \n proc check_effective_target_sync_long_long { } {\n-    if { ([istarget x86_64-*-*] || [istarget i?86-*-*])\n-\t && ![is-effective-target ia32]\n-\t || [istarget arm*-*-*] } {\n+    if { [istarget x86_64-*-*]\n+\t || [istarget i?86-*-*])\n+\t || [istarget arm*-*-*]\n+\t || [istarget alpha*-*-*] } {\n \treturn 1\n     } else {\n \treturn 0\n@@ -3657,10 +3660,12 @@ proc check_effective_target_sync_long_long { } {\n \n # Return 1 if the target supports atomic operations on \"long long\"\n # and can execute them.\n+#\n+# Note: 32bit x86 targets require -march=pentium in dg-options.\n \n proc check_effective_target_sync_long_long_runtime { } {\n-    if { ([istarget x86_64-*-*] || [istarget i?86-*-*])\n-\t && ![is-effective-target ia32] } {\n+    if { [istarget x86_64-*-*]\n+\t || [istarget i?86-*-*] } {\n \treturn [check_cached_effective_target sync_long_long_available {\n \t    check_runtime_nocache sync_long_long_available {\n \t\t#include \"cpuid.h\"\n@@ -3689,6 +3694,8 @@ proc check_effective_target_sync_long_long_runtime { } {\n \t      exit (0);\n \t    }\n \t} \"\" ]\n+    } elseif { [istarget alpha*-*-*] } {\n+\treturn 1\n     } else {\n \treturn 0\n     }"}]}