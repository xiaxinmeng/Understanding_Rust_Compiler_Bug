{"sha": "978fc7d446e520481934ea675f006b88043c8d24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc4ZmM3ZDQ0NmU1MjA0ODE5MzRlYTY3NWYwMDZiODgwNDNjOGQyNA==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-09-20T15:28:02Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-09-20T15:28:02Z"}, "message": "vax.h (ELIMINABLE_REGS): Define.\n\n2016-09-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * config/var/vax.h (ELIMINABLE_REGS): Define.\n        (INITIAL_ELIMINATION_OFFSET): Define.\n\nFrom-SVN: r240269", "tree": {"sha": "b02621fc31e7a46c281f918f1705e06476d4e282", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b02621fc31e7a46c281f918f1705e06476d4e282"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/978fc7d446e520481934ea675f006b88043c8d24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978fc7d446e520481934ea675f006b88043c8d24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/978fc7d446e520481934ea675f006b88043c8d24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978fc7d446e520481934ea675f006b88043c8d24/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5bd4ad831ce28b148a216c49be675127c1b947c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5bd4ad831ce28b148a216c49be675127c1b947c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5bd4ad831ce28b148a216c49be675127c1b947c"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "73a439e323305c078ae85b1386a5891e07ad069b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/978fc7d446e520481934ea675f006b88043c8d24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/978fc7d446e520481934ea675f006b88043c8d24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=978fc7d446e520481934ea675f006b88043c8d24", "patch": "@@ -1,3 +1,8 @@\n+2016-09-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* config/var/vax.h (ELIMINABLE_REGS): Define.\n+\t(INITIAL_ELIMINATION_OFFSET): Define.\n+\n 2016-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/77624"}, {"sha": "427c352bc228c94cb8aac8583baef80c3c798718", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/978fc7d446e520481934ea675f006b88043c8d24/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/978fc7d446e520481934ea675f006b88043c8d24/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=978fc7d446e520481934ea675f006b88043c8d24", "patch": "@@ -333,6 +333,16 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n \n+/* This macro specifies a table of register pairs used to eliminate\n+   unneeded registers that point into the stack frame.  */\n+#define ELIMINABLE_REGS {{FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM}}\n+\n+/* On the VAX, FRAME_POINTER_REQUIRED is always 1, so the definition of this\n+   macro doesn't matter for register eliminations, but it should still\n+   give realistic data for rtx_addr_can_trap_p.  */\n+#define INITIAL_ELIMINATION_OFFSET(FROM, TO, OFFSET) \\\n+  ((OFFSET) = get_frame_size ())\n+\n /* EXIT_IGNORE_STACK should be nonzero if, when returning from a function,\n    the stack pointer does not matter.  The value is tested only in\n    functions that have frame pointers."}]}