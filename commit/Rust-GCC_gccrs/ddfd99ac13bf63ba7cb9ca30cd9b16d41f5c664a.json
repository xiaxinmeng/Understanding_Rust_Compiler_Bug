{"sha": "ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRmZDk5YWMxM2JmNjNiYTdjYjljYTMwY2Q5YjE2ZDQxZjVjNjY0YQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-03-28T19:33:22Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-03-28T19:33:22Z"}, "message": "re PR rtl-optimization/89865 (FAIL: gcc.target/i386/pr49095.c scan-assembler-times \\\\\\\\), % 45)\n\n\tPR target/89865\n\t* config/i386/i386.md (RMW operation with LEA peephole):\n\tUse LEAMODE mode attribute instead of SWI mode iterator for\n\tLEA pattern.\n\nFrom-SVN: r270004", "tree": {"sha": "198907e8e1491170b4d29b1d6500a2b121d2c7a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/198907e8e1491170b4d29b1d6500a2b121d2c7a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "198c27e98311d1d3561f154e75a9df23bff8bacf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198c27e98311d1d3561f154e75a9df23bff8bacf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/198c27e98311d1d3561f154e75a9df23bff8bacf"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "9bd3092fa67e304e25041f0733d045a3a3e1a66d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a", "patch": "@@ -1,3 +1,10 @@\n+2019-03-28  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/89865\n+\t* config/i386/i386.md (RMW operation with LEA peephole):\n+\tUse LEAMODE mode attribute instead of SWI mode iterator for\n+\tLEA pattern.\n+\n 2019-03-28  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/89848"}, {"sha": "46277f158bb3c8ef2d4507d4487e8d5887da0267", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ddfd99ac13bf63ba7cb9ca30cd9b16d41f5c664a", "patch": "@@ -18684,14 +18684,16 @@\n (define_peephole2\n   [(set (match_operand:SWI 0 \"register_operand\")\n \t(match_operand:SWI 1 \"memory_operand\"))\n-   (set (match_operand:SWI 3 \"register_operand\")\n-\t(plus:SWI (match_dup 0)\n-\t\t  (match_operand:SWI 2 \"<nonmemory_operand>\")))\n-   (set (match_dup 1) (match_dup 3))\n-   (set (reg FLAGS_REG) (compare (match_dup 3) (const_int 0)))]\n+   (set (match_operand:<LEAMODE> 3 \"register_operand\")\n+\t(plus:<LEAMODE> (match_operand:<LEAMODE> 4 \"register_operand\")\n+\t\t\t(match_operand:<LEAMODE> 2 \"<nonmemory_operand>\")))\n+   (set (match_dup 1) (match_operand:SWI 5 \"register_operand\"))\n+   (set (reg FLAGS_REG) (compare (match_dup 5) (const_int 0)))]\n   \"(TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())\n+   && REGNO (operands[4]) == REGNO (operands[0])\n+   && REGNO (operands[5]) == REGNO (operands[3])\n    && peep2_reg_dead_p (4, operands[3])\n-   && (rtx_equal_p (operands[0], operands[3])\n+   && ((REGNO (operands[0]) == REGNO (operands[3]))\n        || peep2_reg_dead_p (2, operands[0]))\n    && !reg_overlap_mentioned_p (operands[0], operands[1])\n    && !reg_overlap_mentioned_p (operands[3], operands[1])\n@@ -18700,17 +18702,17 @@\n        || immediate_operand (operands[2], QImode)\n        || any_QIreg_operand (operands[2], QImode))\n    && ix86_match_ccmode (peep2_next_insn (3), CCGOCmode)\"\n-  [(parallel [(set (match_dup 4) (match_dup 6))\n-\t      (set (match_dup 1) (match_dup 5))])]\n+  [(parallel [(set (match_dup 6) (match_dup 8))\n+\t      (set (match_dup 1) (match_dup 7))])]\n {\n-  operands[4] = SET_DEST (PATTERN (peep2_next_insn (3)));\n-  operands[5]\n+  operands[6] = SET_DEST (PATTERN (peep2_next_insn (3)));\n+  operands[7]\n     = gen_rtx_PLUS (<MODE>mode,\n \t\t    copy_rtx (operands[1]),\n-\t\t    operands[2]);\n-  operands[6]\n-    = gen_rtx_COMPARE (GET_MODE (operands[4]),\n-\t\t       copy_rtx (operands[5]),\n+\t\t    gen_lowpart (<MODE>mode, operands[2]));\n+  operands[8]\n+    = gen_rtx_COMPARE (GET_MODE (operands[6]),\n+\t\t       copy_rtx (operands[7]),\n \t\t       const0_rtx);\n })\n "}]}