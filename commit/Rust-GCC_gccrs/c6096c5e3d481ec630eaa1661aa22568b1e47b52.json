{"sha": "c6096c5e3d481ec630eaa1661aa22568b1e47b52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYwOTZjNWUzZDQ4MWVjNjMwZWFhMTY2MWFhMjI1NjhiMWU0N2I1Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-16T21:06:59Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-16T21:06:59Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1598", "tree": {"sha": "328a71c0aa3e7021924d5a1b96aa273136773f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/328a71c0aa3e7021924d5a1b96aa273136773f67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6096c5e3d481ec630eaa1661aa22568b1e47b52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6096c5e3d481ec630eaa1661aa22568b1e47b52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6096c5e3d481ec630eaa1661aa22568b1e47b52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6096c5e3d481ec630eaa1661aa22568b1e47b52/comments", "author": null, "committer": null, "parents": [{"sha": "2c31e123f2abb86e5168982738c23b51579223b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c31e123f2abb86e5168982738c23b51579223b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c31e123f2abb86e5168982738c23b51579223b5"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "52dc3b0a1ba0339d7539667faf5c169d9640c7a2", "filename": "gcc/loop.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6096c5e3d481ec630eaa1661aa22568b1e47b52/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6096c5e3d481ec630eaa1661aa22568b1e47b52/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=c6096c5e3d481ec630eaa1661aa22568b1e47b52", "patch": "@@ -2270,10 +2270,13 @@ find_and_verify_loops (f)\n \t       and move the block of code to the spot we found.  */\n \n \t    if (GET_CODE (p) == JUMP_INSN\n-\t\t    && JUMP_LABEL (p) != 0\n-\t\t    && condjump_p (p)\n-\t\t    && ! simplejump_p (p)\n-\t\t    && next_real_insn (JUMP_LABEL (p)) == our_next)\n+\t\t&& JUMP_LABEL (p) != 0\n+\t\t/* Just ignore jumps to labels that were never emitted.\n+\t\t   These always indicate compilation errors.  */\n+\t\t&& INSN_UID (JUMP_LABEL (p)) != 0\n+\t\t&& condjump_p (p)\n+\t\t&& ! simplejump_p (p)\n+\t\t&& next_real_insn (JUMP_LABEL (p)) == our_next)\n \t      {\n \t\trtx target\n \t\t  = JUMP_LABEL (insn) ? JUMP_LABEL (insn) : get_last_insn ();"}]}