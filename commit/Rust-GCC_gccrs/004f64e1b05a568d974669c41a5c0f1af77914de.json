{"sha": "004f64e1b05a568d974669c41a5c0f1af77914de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA0ZjY0ZTFiMDVhNTY4ZDk3NDY2OWM0MWE1YzBmMWFmNzc5MTRkZQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2015-02-27T10:14:20Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-02-27T10:14:20Z"}, "message": "S/390: Add builtins for efpc and sfpc\n\ngcc/ChangeLog:\n\t* config/s390/s390.c (enum s390_builtin):\n\tAdd S390_BUILTIN_S390_SFPC and S390_BUILTIN_S390_EFPC.\n\t(code_for_builtin): Add CODE_FOR_s390_sfpc and CODE_FOR_s390_efpc.\n\t(s390_init_builtins): Generate new builtin functions.\n\t* config/s390/s390.md (UNSPECV_SFPC, UNSPECV_EFPC): New constants.\n\t(s390_sfpc, s390_efpc): New pattern definitions.\n\nFrom-SVN: r221047", "tree": {"sha": "7d42d46f26e9dc1a5ab6cecf1d33e523b96c50c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d42d46f26e9dc1a5ab6cecf1d33e523b96c50c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/004f64e1b05a568d974669c41a5c0f1af77914de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/004f64e1b05a568d974669c41a5c0f1af77914de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/004f64e1b05a568d974669c41a5c0f1af77914de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/004f64e1b05a568d974669c41a5c0f1af77914de/comments", "author": null, "committer": null, "parents": [{"sha": "9b80b7bc4de5b697b229be574246877a186fe859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b80b7bc4de5b697b229be574246877a186fe859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b80b7bc4de5b697b229be574246877a186fe859"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "9e2e095ebc6054bd8dde7adf5879a2e4f6d1aa0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/004f64e1b05a568d974669c41a5c0f1af77914de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/004f64e1b05a568d974669c41a5c0f1af77914de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=004f64e1b05a568d974669c41a5c0f1af77914de", "patch": "@@ -1,3 +1,12 @@\n+2015-02-27  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* config/s390/s390.c (enum s390_builtin):\n+\tAdd S390_BUILTIN_S390_SFPC and S390_BUILTIN_S390_EFPC.\n+\t(code_for_builtin): Add CODE_FOR_s390_sfpc and CODE_FOR_s390_efpc.\n+\t(s390_init_builtins): Generate new builtin functions.\n+\t* config/s390/s390.md (UNSPECV_SFPC, UNSPECV_EFPC): New constants.\n+\t(s390_sfpc, s390_efpc): New pattern definitions.\n+\n 2015-02-27  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.c: (enum s390_builtin, s390_expand_builtin):"}, {"sha": "f4709da74cd7d7763152469da9416c658221449d", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/004f64e1b05a568d974669c41a5c0f1af77914de/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/004f64e1b05a568d974669c41a5c0f1af77914de/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=004f64e1b05a568d974669c41a5c0f1af77914de", "patch": "@@ -9982,6 +9982,9 @@ enum s390_builtin\n   S390_BUILTIN_TX_NESTING_DEPTH,\n   S390_BUILTIN_TX_ASSIST,\n \n+  S390_BUILTIN_S390_SFPC,\n+  S390_BUILTIN_S390_EFPC,\n+\n   S390_BUILTIN_MAX\n };\n \n@@ -9997,7 +10000,10 @@ static enum insn_code const code_for_builtin[S390_BUILTIN_MAX] = {\n   CODE_FOR_tabort,\n   CODE_FOR_ntstg,\n   CODE_FOR_etnd,\n-  CODE_FOR_tx_assist\n+  CODE_FOR_tx_assist,\n+\n+  CODE_FOR_s390_sfpc,\n+  CODE_FOR_s390_efpc\n };\n \n static void\n@@ -10025,6 +10031,12 @@ s390_init_builtins (void)\n     add_builtin_function (\"__builtin_tx_assist\", ftype,\n \t\t\t  S390_BUILTIN_TX_ASSIST, BUILT_IN_MD, NULL, NULL_TREE);\n \n+  /* void foo (unsigned) */\n+  ftype = build_function_type_list (void_type_node, unsigned_type_node,\n+\t\t\t\t    NULL_TREE);\n+  s390_builtin_decls[S390_BUILTIN_S390_SFPC] =\n+    add_builtin_function (\"__builtin_s390_sfpc\", ftype,\n+\t\t\t  S390_BUILTIN_S390_SFPC, BUILT_IN_MD, NULL, NULL_TREE);\n \n   /* int foo (void *) */\n   ftype = build_function_type_list (integer_type_node, ptr_type_node,\n@@ -10061,6 +10073,11 @@ s390_init_builtins (void)\n     add_builtin_function (\"__builtin_tend\", ftype,\n \t\t\t  S390_BUILTIN_TEND, BUILT_IN_MD, NULL, NULL_TREE);\n \n+  /* unsigned foo (void) */\n+  ftype = build_function_type_list (unsigned_type_node, NULL_TREE);\n+  s390_builtin_decls[S390_BUILTIN_S390_EFPC] =\n+    add_builtin_function (\"__builtin_s390_efpc\", ftype,\n+\t\t\t  S390_BUILTIN_S390_EFPC, BUILT_IN_MD, NULL, NULL_TREE);\n \n   /* void foo (uint64_t *, uint64_t) */\n   if (TARGET_64BIT)"}, {"sha": "bf698b1cf81c7d748d3d5a555b5dfee84e4c938b", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/004f64e1b05a568d974669c41a5c0f1af77914de/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/004f64e1b05a568d974669c41a5c0f1af77914de/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=004f64e1b05a568d974669c41a5c0f1af77914de", "patch": "@@ -162,6 +162,10 @@\n    UNSPECV_ETND\n    UNSPECV_NTSTG\n    UNSPECV_PPA\n+\n+   ; Set and get floating point control register\n+   UNSPECV_SFPC\n+   UNSPECV_EFPC\n   ])\n \n ;;\n@@ -10300,3 +10304,18 @@\n   \"TARGET_HTM && INTVAL (operands[2]) < 16\"\n   \"ppa\\t%0,%1,%2\"\n   [(set_attr \"op_type\" \"RRF\")])\n+\n+\n+; Set and get floating point control register\n+\n+(define_insn \"s390_sfpc\"\n+  [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"d\")]\n+\t\t    UNSPECV_SFPC)]\n+  \"TARGET_HARD_FLOAT\"\n+  \"sfpc\\t%0\")\n+\n+(define_insn \"s390_efpc\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(unspec_volatile:SI [(const_int 0)] UNSPECV_EFPC))]\n+  \"TARGET_HARD_FLOAT\"\n+  \"efpc\\t%0\")"}]}