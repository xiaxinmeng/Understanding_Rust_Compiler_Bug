{"sha": "d725717165707b49ee2484e462bbb7fbd278b919", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcyNTcxNzE2NTcwN2I0OWVlMjQ4NGU0NjJiYmI3ZmJkMjc4YjkxOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-11-28T11:58:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-11-28T11:58:45Z"}, "message": "re PR tree-optimization/83141 (SRA and memcpy folding interact badly generating wrong-code)\n\n2017-11-28  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/83141\n\t* gimple-fold.c (gimple_fold_builtin_memory_op): For aggregate\n\tcopies generated from memcpy use a character array as reference\n\ttype.\n\nFrom-SVN: r255197", "tree": {"sha": "fbb6ac2e0acaeb635b3ab0940c55b3874cea45b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbb6ac2e0acaeb635b3ab0940c55b3874cea45b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d725717165707b49ee2484e462bbb7fbd278b919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d725717165707b49ee2484e462bbb7fbd278b919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d725717165707b49ee2484e462bbb7fbd278b919", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d725717165707b49ee2484e462bbb7fbd278b919/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa69d74bd841dd75bd235f482b335e4c474ad3d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa69d74bd841dd75bd235f482b335e4c474ad3d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa69d74bd841dd75bd235f482b335e4c474ad3d5"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "e83d8d239b6cd858dcb3ed0559ac12ff89db16ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d725717165707b49ee2484e462bbb7fbd278b919/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d725717165707b49ee2484e462bbb7fbd278b919/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d725717165707b49ee2484e462bbb7fbd278b919", "patch": "@@ -1,3 +1,10 @@\n+2017-11-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/83141\n+\t* gimple-fold.c (gimple_fold_builtin_memory_op): For aggregate\n+\tcopies generated from memcpy use a character array as reference\n+\ttype.\n+\n 2017-11-28  Julia Koval  <julia.koval@intel.com>\n             Sebastian Peryt  <sebastian.peryt@intel.com>\n "}, {"sha": "849b62fa903d8c2fc45a5d822fc35fd42d2d4390", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d725717165707b49ee2484e462bbb7fbd278b919/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d725717165707b49ee2484e462bbb7fbd278b919/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=d725717165707b49ee2484e462bbb7fbd278b919", "patch": "@@ -1039,8 +1039,24 @@ gimple_fold_builtin_memory_op (gimple_stmt_iterator *gsi,\n \t      gimple_set_vuse (new_stmt, gimple_vuse (stmt));\n \t      gsi_insert_before (gsi, new_stmt, GSI_SAME_STMT);\n \t    }\n+\t  new_stmt = gimple_build_assign (destvar, srcvar);\n+\t  goto set_vop_and_replace;\n \t}\n-      new_stmt = gimple_build_assign (destvar, srcvar);\n+\n+      /* We get an aggregate copy.  Use an unsigned char[] type to\n+\t perform the copying to preserve padding and to avoid any issues\n+\t with TREE_ADDRESSABLE types or float modes behavior on copying.  */\n+      desttype = build_array_type_nelts (unsigned_char_type_node,\n+\t\t\t\t\t tree_to_uhwi (len));\n+      srctype = desttype;\n+      if (src_align > TYPE_ALIGN (srctype))\n+\tsrctype = build_aligned_type (srctype, src_align);\n+      if (dest_align > TYPE_ALIGN (desttype))\n+\tdesttype = build_aligned_type (desttype, dest_align);\n+      new_stmt\n+\t= gimple_build_assign (fold_build2 (MEM_REF, desttype, dest, off0),\n+\t\t\t       fold_build2 (MEM_REF, srctype, src, off0));\n+set_vop_and_replace:\n       gimple_set_vuse (new_stmt, gimple_vuse (stmt));\n       gimple_set_vdef (new_stmt, gimple_vdef (stmt));\n       if (gimple_vdef (new_stmt)"}]}