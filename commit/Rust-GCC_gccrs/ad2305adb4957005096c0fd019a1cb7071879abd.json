{"sha": "ad2305adb4957005096c0fd019a1cb7071879abd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQyMzA1YWRiNDk1NzAwNTA5NmMwZmQwMTlhMWNiNzA3MTg3OWFiZA==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-10-22T17:49:18Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2011-10-22T17:49:18Z"}, "message": "Fix cpp_peek_token behaviour (PR bootstrap/50778)\n\nlibcpp/\n\n\t* include/internal.h (_cpp_remaining_tokens_num_in_context): Take the\n\tcontext to act upon.\n\t* lex.c (_cpp_remaining_tokens_num_in_context): Likewise.  Update\n\tcomment.\n\t(cpp_token_from_context_at): Likewise.\n\t(cpp_peek_token): Use the context to peek tokens from.\n\nFrom-SVN: r180328", "tree": {"sha": "06c0096adb2e891ed006c895e4c785b4ad2b1133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06c0096adb2e891ed006c895e4c785b4ad2b1133"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad2305adb4957005096c0fd019a1cb7071879abd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad2305adb4957005096c0fd019a1cb7071879abd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad2305adb4957005096c0fd019a1cb7071879abd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad2305adb4957005096c0fd019a1cb7071879abd/comments", "author": null, "committer": null, "parents": [{"sha": "94bf1a5fb73fc9c6a9bf9810c56b3f1678667f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94bf1a5fb73fc9c6a9bf9810c56b3f1678667f20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94bf1a5fb73fc9c6a9bf9810c56b3f1678667f20"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "3c477955240a3029f713de981f8014bc14ad253a", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad2305adb4957005096c0fd019a1cb7071879abd/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad2305adb4957005096c0fd019a1cb7071879abd/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=ad2305adb4957005096c0fd019a1cb7071879abd", "patch": "@@ -1,3 +1,13 @@\n+2011-10-22  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR bootstrap/50778\n+\t* include/internal.h (_cpp_remaining_tokens_num_in_context): Take the\n+\tcontext to act upon.\n+\t* lex.c (_cpp_remaining_tokens_num_in_context): Likewise.  Update\n+\tcomment.\n+\t(cpp_token_from_context_at): Likewise.\n+\t(cpp_peek_token): Use the context to peek tokens from.\n+\n 2011-10-20  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR bootstrap/50801"}, {"sha": "e60330df49092a239ebc5f3af71292f3a577b789", "filename": "libcpp/internal.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad2305adb4957005096c0fd019a1cb7071879abd/libcpp%2Finternal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad2305adb4957005096c0fd019a1cb7071879abd/libcpp%2Finternal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finternal.h?ref=ad2305adb4957005096c0fd019a1cb7071879abd", "patch": "@@ -652,7 +652,7 @@ extern cpp_token *_cpp_lex_direct (cpp_reader *);\n extern int _cpp_equiv_tokens (const cpp_token *, const cpp_token *);\n extern void _cpp_init_tokenrun (tokenrun *, unsigned int);\n extern cpp_hashnode *_cpp_lex_identifier (cpp_reader *, const char *);\n-extern int _cpp_remaining_tokens_num_in_context (cpp_reader *);\n+extern int _cpp_remaining_tokens_num_in_context (cpp_context *);\n \n /* In init.c.  */\n extern void _cpp_maybe_push_include_file (cpp_reader *);"}, {"sha": "896a3bef2c2c732bf19c3babfeadc9e4debab38a", "filename": "libcpp/lex.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad2305adb4957005096c0fd019a1cb7071879abd/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad2305adb4957005096c0fd019a1cb7071879abd/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=ad2305adb4957005096c0fd019a1cb7071879abd", "patch": "@@ -1703,12 +1703,11 @@ next_tokenrun (tokenrun *run)\n   return run->next;\n }\n \n-/* Return the number of not yet processed token in the the current\n+/* Return the number of not yet processed token in a given\n    context.  */\n int\n-_cpp_remaining_tokens_num_in_context (cpp_reader *pfile)\n+_cpp_remaining_tokens_num_in_context (cpp_context *context)\n {\n-  cpp_context *context = pfile->context;\n   if (context->tokens_kind == TOKENS_KIND_DIRECT)\n     return (LAST (context).token - FIRST (context).token);\n   else if (context->tokens_kind == TOKENS_KIND_INDIRECT\n@@ -1718,12 +1717,11 @@ _cpp_remaining_tokens_num_in_context (cpp_reader *pfile)\n       abort ();\n }\n \n-/* Returns the token present at index INDEX in the current context.\n-   If INDEX is zero, the next token to be processed is returned.  */\n+/* Returns the token present at index INDEX in a given context.  If\n+   INDEX is zero, the next token to be processed is returned.  */\n static const cpp_token*\n-_cpp_token_from_context_at (cpp_reader *pfile, int index)\n+_cpp_token_from_context_at (cpp_context *context, int index)\n {\n-  cpp_context *context = pfile->context;\n   if (context->tokens_kind == TOKENS_KIND_DIRECT)\n     return &(FIRST (context).token[index]);\n   else if (context->tokens_kind == TOKENS_KIND_INDIRECT\n@@ -1744,10 +1742,10 @@ cpp_peek_token (cpp_reader *pfile, int index)\n   /* First, scan through any pending cpp_context objects.  */\n   while (context->prev)\n     {\n-      ptrdiff_t sz = _cpp_remaining_tokens_num_in_context (pfile);\n+      ptrdiff_t sz = _cpp_remaining_tokens_num_in_context (context);\n \n       if (index < (int) sz)\n-        return _cpp_token_from_context_at (pfile, index);\n+        return _cpp_token_from_context_at (context, index);\n       index -= (int) sz;\n       context = context->prev;\n     }"}]}