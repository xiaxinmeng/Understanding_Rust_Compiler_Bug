{"sha": "b3c144a3a7bff42cd361d49c0b2d0f293d1627a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNjMTQ0YTNhN2JmZjQyY2QzNjFkNDljMGIyZDBmMjkzZDE2MjdhMQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-16T11:47:59Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-16T11:47:59Z"}, "message": "function.c (stack_protect_epilogue): Use expand_call to expand targetm.stack_protect_fail.\n\n\t* function.c (stack_protect_epilogue): Use expand_call to expand\n\ttargetm.stack_protect_fail.\n\t* stmt.c (expand_expr_stmt): Remove now-unused function.\n\t* tree.h (expand_expr_stmt): Remove prototype.\n\t* doc/tm.texi.in (TARGET_STACK_PROTECT_FAIL): Document that this\n\thook must return a CALL_EXPR.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r189522", "tree": {"sha": "3d3d660e6823684fb0c90c75b887acc6ad223020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d3d660e6823684fb0c90c75b887acc6ad223020"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/comments", "author": null, "committer": null, "parents": [{"sha": "468660d358fcc56eb30b208df4c2926ea9b5a00e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/468660d358fcc56eb30b208df4c2926ea9b5a00e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/468660d358fcc56eb30b208df4c2926ea9b5a00e"}], "stats": {"total": 44, "additions": 4, "deletions": 40}, "files": [{"sha": "fc3345a3b118b70d94d424f1eb5e1328492b7858", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=b3c144a3a7bff42cd361d49c0b2d0f293d1627a1", "patch": "@@ -4993,7 +4993,7 @@ The default version of this hook creates a variable called\n @end deftypefn\n \n @deftypefn {Target Hook} tree TARGET_STACK_PROTECT_FAIL (void)\n-This hook returns a tree expression that alerts the runtime that the\n+This hook returns a @code{CALL_EXPR} that alerts the runtime that the\n stack protect guard variable has been modified.  This expression should\n involve a call to a @code{noreturn} function.\n "}, {"sha": "33ccf8260dbd6d85b7e223a44b1111d7acb4ad03", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=b3c144a3a7bff42cd361d49c0b2d0f293d1627a1", "patch": "@@ -4934,7 +4934,7 @@ The default version of this hook creates a variable called\n @end deftypefn\n \n @hook TARGET_STACK_PROTECT_FAIL\n-This hook returns a tree expression that alerts the runtime that the\n+This hook returns a @code{CALL_EXPR} that alerts the runtime that the\n stack protect guard variable has been modified.  This expression should\n involve a call to a @code{noreturn} function.\n "}, {"sha": "c56758870bc5b37af07bf493363f02d27c33605c", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=b3c144a3a7bff42cd361d49c0b2d0f293d1627a1", "patch": "@@ -4660,7 +4660,8 @@ stack_protect_epilogue (void)\n   if (JUMP_P (tmp))\n     predict_insn_def (tmp, PRED_NORETURN, TAKEN);\n \n-  expand_expr_stmt (targetm.stack_protect_fail ());\n+  expand_call (targetm.stack_protect_fail (), NULL_RTX, /*ignore=*/true);\n+  free_temp_slots ();\n   emit_label (label);\n }\n \f"}, {"sha": "11180e4dc4ac4817209df30d1c48708d193c7507", "filename": "gcc/stmt.c", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=b3c144a3a7bff42cd361d49c0b2d0f293d1627a1", "patch": "@@ -1399,42 +1399,6 @@ resolve_operand_name_1 (char *p, tree outputs, tree inputs, tree labels)\n \n   return p;\n }\n-\f\n-/* Generate RTL to evaluate the expression EXP.  */\n-\n-void\n-expand_expr_stmt (tree exp)\n-{\n-  rtx value;\n-  tree type;\n-\n-  value = expand_expr (exp, const0_rtx, VOIDmode, EXPAND_NORMAL);\n-  type = TREE_TYPE (exp);\n-\n-  /* If all we do is reference a volatile value in memory,\n-     copy it to a register to be sure it is actually touched.  */\n-  if (value && MEM_P (value) && TREE_THIS_VOLATILE (exp))\n-    {\n-      if (TYPE_MODE (type) == VOIDmode)\n-\t;\n-      else if (TYPE_MODE (type) != BLKmode)\n-\tcopy_to_reg (value);\n-      else\n-\t{\n-\t  rtx lab = gen_label_rtx ();\n-\n-\t  /* Compare the value with itself to reference it.  */\n-\t  emit_cmp_and_jump_insns (value, value, EQ,\n-\t\t\t\t   expand_normal (TYPE_SIZE (type)),\n-\t\t\t\t   BLKmode, 0, lab);\n-\t  emit_label (lab);\n-\t}\n-    }\n-\n-  /* Free any temporaries used to evaluate this expression.  */\n-  free_temp_slots ();\n-}\n-\n \f\n /* Generate RTL to return from the current function, with no value.\n    (That is, we do not do anything about returning any value.)  */"}, {"sha": "321ad8ab4cca644a7545e224e4931adcda9d5148", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c144a3a7bff42cd361d49c0b2d0f293d1627a1/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b3c144a3a7bff42cd361d49c0b2d0f293d1627a1", "patch": "@@ -5229,7 +5229,6 @@ extern tree unshare_expr (tree);\n \f\n /* In stmt.c */\n \n-extern void expand_expr_stmt (tree);\n extern void expand_label (tree);\n extern void expand_goto (tree);\n "}]}