{"sha": "305e3ac1fb79f7ff59d380e85d362fc458d46085", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA1ZTNhYzFmYjc5ZjdmZjU5ZDM4MGU4NWQzNjJmYzQ1OGQ0NjA4NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-15T22:58:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-15T22:58:21Z"}, "message": "re PR target/55940 (Incorrect code for accessing parameters with 32-bit Intel hosts)\n\n\tPR target/55940\n\t* function.c (thread_prologue_and_epilogue_insns): Always\n\tadd crtl->drap_reg to set_up_by_prologue.set, even if\n\tstack_realign_drap is false.\n\n\t* gcc.dg/pr55940.c: New test.\n\nFrom-SVN: r195220", "tree": {"sha": "b35bb3a85e5aec4da27a655e309cea9f2dfabc15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b35bb3a85e5aec4da27a655e309cea9f2dfabc15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/305e3ac1fb79f7ff59d380e85d362fc458d46085", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305e3ac1fb79f7ff59d380e85d362fc458d46085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/305e3ac1fb79f7ff59d380e85d362fc458d46085", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305e3ac1fb79f7ff59d380e85d362fc458d46085/comments", "author": null, "committer": null, "parents": [{"sha": "f78ac4f27d2d2ca8ee346f514c83f77a4a2778ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78ac4f27d2d2ca8ee346f514c83f77a4a2778ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78ac4f27d2d2ca8ee346f514c83f77a4a2778ad"}], "stats": {"total": 72, "additions": 69, "deletions": 3}, "files": [{"sha": "e9220f5f8c6a7c17562b3ba6ff513c5e5129e2e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/305e3ac1fb79f7ff59d380e85d362fc458d46085/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/305e3ac1fb79f7ff59d380e85d362fc458d46085/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=305e3ac1fb79f7ff59d380e85d362fc458d46085", "patch": "@@ -1,3 +1,10 @@\n+2013-01-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/55940\n+\t* function.c (thread_prologue_and_epilogue_insns): Always\n+\tadd crtl->drap_reg to set_up_by_prologue.set, even if\n+\tstack_realign_drap is false.\n+\n 2013-01-15  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n \n \t* config/vax/vax.md (add<mode>3, sub<mode>3, mul<mode>3, div<mode>3,\n@@ -12,7 +19,7 @@\n \n 2013-01-15  Vladimir Makarov  <vmakarov@redhat.com>\n \n-\tPR rtl-optimization/pr55153\n+\tPR rtl-optimization/55153\n \t* sched-deps.c (sched_analyze_2): Add pending reads for prefetch.\n \n 2013-01-15  Martin Jambor  <mjambor@suse.cz>"}, {"sha": "bb6a9ae9979d82315a4830f16b8dedfeb993fd1a", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/305e3ac1fb79f7ff59d380e85d362fc458d46085/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/305e3ac1fb79f7ff59d380e85d362fc458d46085/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=305e3ac1fb79f7ff59d380e85d362fc458d46085", "patch": "@@ -6029,7 +6029,7 @@ thread_prologue_and_epilogue_insns (void)\n       if (pic_offset_table_rtx)\n \tadd_to_hard_reg_set (&set_up_by_prologue.set, Pmode,\n \t\t\t     PIC_OFFSET_TABLE_REGNUM);\n-      if (stack_realign_drap && crtl->drap_reg)\n+      if (crtl->drap_reg)\n \tadd_to_hard_reg_set (&set_up_by_prologue.set,\n \t\t\t     GET_MODE (crtl->drap_reg),\n \t\t\t     REGNO (crtl->drap_reg));"}, {"sha": "6c6f0b40c7476649eb4cd2195b4da61ee6da2c28", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/305e3ac1fb79f7ff59d380e85d362fc458d46085/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/305e3ac1fb79f7ff59d380e85d362fc458d46085/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=305e3ac1fb79f7ff59d380e85d362fc458d46085", "patch": "@@ -1,3 +1,8 @@\n+2013-01-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/55940\n+\t* gcc.dg/pr55940.c: New test.\n+\n 2013-01-15  Manfred Schwarb  <manfred99@gmx.ch>\n \t    Harald Anlauf  <anlauf@gmx.de>\n \n@@ -18,7 +23,7 @@\n \n 2013-01-15  Vladimir Makarov  <vmakarov@redhat.com>\n \n-\tPR rtl-optimization/pr55153\n+\tPR rtl-optimization/55153\n \t* gcc.dg/pr55153.c: New.\n \n 2013-01-15  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "d046d0b6912ff7f24db2780c6858571d68e04953", "filename": "gcc/testsuite/gcc.dg/pr55940.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/305e3ac1fb79f7ff59d380e85d362fc458d46085/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55940.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/305e3ac1fb79f7ff59d380e85d362fc458d46085/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55940.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55940.c?ref=305e3ac1fb79f7ff59d380e85d362fc458d46085", "patch": "@@ -0,0 +1,54 @@\n+/* PR target/55940 */\n+/* { dg-do run } */\n+/* { dg-options \"-Os\" } */\n+/* { dg-additional-options \"-mpreferred-stack-boundary=2\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+\n+struct S { int s; unsigned long t; };\n+\n+__attribute__ ((noinline, noclone)) unsigned long long\n+bar (struct S *x, unsigned long y)\n+{\n+  asm volatile (\"\" : : \"r\" (x), \"r\" (y) : \"memory\");\n+  return x->s + y;\n+}\n+\n+__attribute__ ((noinline, noclone)) unsigned long long\n+foo (struct S *x, unsigned long y)\n+{\n+  unsigned long a;\n+  if (__builtin_expect (((__UINTPTR_TYPE__) (x) + 0x1000U < 0x2000U), 0))\n+    return ~0ULL;\n+  if (__builtin_expect (x->s <= 0 || x->s > 9, 0))\n+    return ~0ULL;\n+  a = x->t >> 12;\n+  if (y == a)\n+    return ~0ULL;\n+  if (x->s == 3)\n+    return x->t + y * 4096;\n+  return bar (x, y);\n+}\n+\n+int va, vb, vc, vd;\n+\n+int\n+main ()\n+{\n+  struct S s;\n+  asm volatile (\"\" : : : \"memory\");\n+  int a = va, b = vb, c = vc, d = vd;\n+  asm volatile (\"\" : : : \"memory\");\n+  int i;\n+  for (i = 0; i < 64; i++)\n+    if (foo ((struct S *) 0, 0) != ~0ULL)\n+      __builtin_abort ();\n+  s.s = 3;\n+  s.t = 2 << 12;\n+  if (foo (&s, 2) != ~0ULL)\n+    __builtin_abort ();\n+  if (foo (&s, 3) != (2 << 12) + 3 * 4096)\n+    __builtin_abort ();\n+  asm volatile (\"\" : : : \"memory\");\n+  va = a; vb = b; vc = c; vd = d;\n+  asm volatile (\"\" : : : \"memory\");\n+  return 0;\n+}"}]}