{"sha": "5fdd6038147e4ba30c8c01332dae8ab0d717bc14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZkZDYwMzgxNDdlNGJhMzBjOGMwMTMzMmRhZThhYjBkNzE3YmMxNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-09-18T12:43:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-09-18T12:43:08Z"}, "message": "tree-vectorizer.h (get_initial_def_for_reduction): Remove.\n\n2019-09-18  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vectorizer.h (get_initial_def_for_reduction): Remove.\n\t* tree-vect-loop.c (get_initial_def_for_reduction): Make\n\tstatic.\n\t(vect_create_epilog_for_reduction): Remove dead code.\n\nFrom-SVN: r275874", "tree": {"sha": "7d272c85879131594d7153128efda55dd15fe431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d272c85879131594d7153128efda55dd15fe431"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fdd6038147e4ba30c8c01332dae8ab0d717bc14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdd6038147e4ba30c8c01332dae8ab0d717bc14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fdd6038147e4ba30c8c01332dae8ab0d717bc14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdd6038147e4ba30c8c01332dae8ab0d717bc14/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "743a16d57a4f9f65bbc663100d5e16c564f283ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/743a16d57a4f9f65bbc663100d5e16c564f283ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/743a16d57a4f9f65bbc663100d5e16c564f283ec"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "c4b27bf09596c7633d604902d90c81e8a671454e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdd6038147e4ba30c8c01332dae8ab0d717bc14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdd6038147e4ba30c8c01332dae8ab0d717bc14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fdd6038147e4ba30c8c01332dae8ab0d717bc14", "patch": "@@ -1,3 +1,10 @@\n+2019-09-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vectorizer.h (get_initial_def_for_reduction): Remove.\n+\t* tree-vect-loop.c (get_initial_def_for_reduction): Make\n+\tstatic.\n+\t(vect_create_epilog_for_reduction): Remove dead code.\n+\n 2019-09-18  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* varasm.c (assemble_real): Generate canonical const_ints."}, {"sha": "a455a6d40c7bc63320beee781ff8aec20bc078fc", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdd6038147e4ba30c8c01332dae8ab0d717bc14/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdd6038147e4ba30c8c01332dae8ab0d717bc14/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=5fdd6038147e4ba30c8c01332dae8ab0d717bc14", "patch": "@@ -4203,7 +4203,7 @@ vect_model_induction_cost (stmt_vec_info stmt_info, int ncopies,\n \n    A cost model should help decide between these two schemes.  */\n \n-tree\n+static tree\n get_initial_def_for_reduction (stmt_vec_info stmt_vinfo, tree init_val,\n                                tree *adjustment_def)\n {\n@@ -4585,7 +4585,6 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs,\n      (in case of SLP, do it for all the phis). */\n \n   /* Get the loop-entry arguments.  */\n-  enum vect_def_type initial_def_dt = vect_unknown_def_type;\n   if (slp_node)\n     {\n       unsigned vec_num = SLP_TREE_NUMBER_OF_VEC_STMTS (slp_node);\n@@ -4623,7 +4622,6 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs,\n \t{\n \t  /* Do not use an adjustment def as that case is not supported\n \t     correctly if ncopies is not one.  */\n-\t  vect_is_simple_use (initial_def, loop_vinfo, &initial_def_dt);\n \t  vec_initial_def = vect_get_vec_def_for_operand (initial_def,\n \t\t\t\t\t\t\t  stmt_info);\n \t}"}, {"sha": "40ff8b7193e872b4b9f90c6143e8d4e896fda360", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdd6038147e4ba30c8c01332dae8ab0d717bc14/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdd6038147e4ba30c8c01332dae8ab0d717bc14/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=5fdd6038147e4ba30c8c01332dae8ab0d717bc14", "patch": "@@ -1645,7 +1645,6 @@ extern bool vectorizable_reduction (stmt_vec_info, gimple_stmt_iterator *,\n extern bool vectorizable_induction (stmt_vec_info, gimple_stmt_iterator *,\n \t\t\t\t    stmt_vec_info *, slp_tree,\n \t\t\t\t    stmt_vector_for_cost *);\n-extern tree get_initial_def_for_reduction (stmt_vec_info, tree, tree *);\n extern bool vect_worthwhile_without_simd_p (vec_info *, tree_code);\n extern int vect_get_known_peeling_cost (loop_vec_info, int, int *,\n \t\t\t\t\tstmt_vector_for_cost *,"}]}