{"sha": "9779b2e87c038303a8f44d3f22672bd1703442fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc3OWIyZTg3YzAzODMwM2E4ZjQ0ZDNmMjI2NzJiZDE3MDM0NDJmYw==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2017-05-04T17:49:19Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2017-05-04T17:49:19Z"}, "message": "Set jump alignment to 4 for Cortex cores as it reduces codesize by 0.4% on...\n\nSet jump alignment to 4 for Cortex cores as it reduces codesize by 0.4% on\naverage with no obvious performance difference.  See original discussion of\nthe overheads of various alignments:\nhttps://gcc.gnu.org/ml/gcc-patches/2016-06/msg02075.html.\n\n    gcc/\n\t* config/aarch64/aarch64.c (cortexa35_tunings): Set jump alignment to 4.\n\t(cortexa53_tunings): Likewise.\n\t(cortexa57_tunings): Likewise.\n\t(cortexa72_tunings): Likewise.\n\t(cortexa73_tunings): Likewise.\n\nFrom-SVN: r247609", "tree": {"sha": "6518542f9e55174825be51aff173b9586226b831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6518542f9e55174825be51aff173b9586226b831"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9779b2e87c038303a8f44d3f22672bd1703442fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9779b2e87c038303a8f44d3f22672bd1703442fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9779b2e87c038303a8f44d3f22672bd1703442fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9779b2e87c038303a8f44d3f22672bd1703442fc/comments", "author": null, "committer": null, "parents": [{"sha": "6b13482bb6c33d2d37494ec33e2028fcbe4e0635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b13482bb6c33d2d37494ec33e2028fcbe4e0635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b13482bb6c33d2d37494ec33e2028fcbe4e0635"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "88be3a82294cc03c2b5c62e3e79440a5a36250e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9779b2e87c038303a8f44d3f22672bd1703442fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9779b2e87c038303a8f44d3f22672bd1703442fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9779b2e87c038303a8f44d3f22672bd1703442fc", "patch": "@@ -1,3 +1,11 @@\n+2017-05-04  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64.c (cortexa35_tunings): Set jump alignment to 4.\n+\t(cortexa53_tunings): Likewise.\n+\t(cortexa57_tunings): Likewise.\n+\t(cortexa72_tunings): Likewise.\n+\t(cortexa73_tunings): Likewise.\n+\n 2017-05-04  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.c (generic_tunings): Set jump alignment to 4."}, {"sha": "622735291dcbc891284161084024862e7cfdd561", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9779b2e87c038303a8f44d3f22672bd1703442fc/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9779b2e87c038303a8f44d3f22672bd1703442fc/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=9779b2e87c038303a8f44d3f22672bd1703442fc", "patch": "@@ -564,7 +564,7 @@ static const struct tune_params cortexa35_tunings =\n   (AARCH64_FUSE_AES_AESMC | AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n    | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR), /* fusible_ops  */\n   16,\t/* function_align.  */\n-  8,\t/* jump_align.  */\n+  4,\t/* jump_align.  */\n   8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n@@ -590,7 +590,7 @@ static const struct tune_params cortexa53_tunings =\n   (AARCH64_FUSE_AES_AESMC | AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n    | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR), /* fusible_ops  */\n   16,\t/* function_align.  */\n-  8,\t/* jump_align.  */\n+  4,\t/* jump_align.  */\n   8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n@@ -616,7 +616,7 @@ static const struct tune_params cortexa57_tunings =\n   (AARCH64_FUSE_AES_AESMC | AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n    | AARCH64_FUSE_MOVK_MOVK), /* fusible_ops  */\n   16,\t/* function_align.  */\n-  8,\t/* jump_align.  */\n+  4,\t/* jump_align.  */\n   8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n@@ -642,7 +642,7 @@ static const struct tune_params cortexa72_tunings =\n   (AARCH64_FUSE_AES_AESMC | AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n    | AARCH64_FUSE_MOVK_MOVK), /* fusible_ops  */\n   16,\t/* function_align.  */\n-  8,\t/* jump_align.  */\n+  4,\t/* jump_align.  */\n   8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n@@ -668,7 +668,7 @@ static const struct tune_params cortexa73_tunings =\n   (AARCH64_FUSE_AES_AESMC | AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n    | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR), /* fusible_ops  */\n   16,\t/* function_align.  */\n-  8,\t/* jump_align.  */\n+  4,\t/* jump_align.  */\n   8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */"}]}