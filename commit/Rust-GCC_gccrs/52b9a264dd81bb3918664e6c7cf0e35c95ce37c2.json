{"sha": "52b9a264dd81bb3918664e6c7cf0e35c95ce37c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJiOWEyNjRkZDgxYmIzOTE4NjY0ZTZjN2NmMGUzNWM5NWNlMzdjMg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-10-14T23:10:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:40Z"}, "message": "[Ada] Use hardcoded names when converting aspects to pragmas\n\ngcc/ada/\n\n\t* sem_ch13.adb (Analyze_One_Aspect): Fix inconsistent calls to\n\tMake_Aitem_Pragma.", "tree": {"sha": "2186bfc2f4d9dba9769667dbc4c19f05a090e1f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2186bfc2f4d9dba9769667dbc4c19f05a090e1f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52b9a264dd81bb3918664e6c7cf0e35c95ce37c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52b9a264dd81bb3918664e6c7cf0e35c95ce37c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52b9a264dd81bb3918664e6c7cf0e35c95ce37c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52b9a264dd81bb3918664e6c7cf0e35c95ce37c2/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d97121d2fa61d4de1e230e586dcb4812317f284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d97121d2fa61d4de1e230e586dcb4812317f284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d97121d2fa61d4de1e230e586dcb4812317f284"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "b1c8b0773995662ae190808c6f6e3e3ee2bf6489", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52b9a264dd81bb3918664e6c7cf0e35c95ce37c2/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52b9a264dd81bb3918664e6c7cf0e35c95ce37c2/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=52b9a264dd81bb3918664e6c7cf0e35c95ce37c2", "patch": "@@ -3067,7 +3067,7 @@ package body Sem_Ch13 is\n                   Aitem :=\n                     Make_Attribute_Definition_Clause (Loc,\n                       Name       => Ent,\n-                      Chars      => Chars (Id),\n+                      Chars      => Nam,\n                       Expression => Relocate_Node (Expr));\n \n                   --  If the address is specified, then we treat the entity as\n@@ -3096,7 +3096,7 @@ package body Sem_Ch13 is\n                          Expression => New_Occurrence_Of (E, Loc)),\n                        Make_Pragma_Argument_Association (Sloc (Expr),\n                          Expression => Relocate_Node (Expr))),\n-                     Pragma_Name                  => Chars (Id));\n+                     Pragma_Name                  => Name_Linker_Section);\n \n                   --  Linker_Section does not need delaying, as its argument\n                   --  must be a static string. Furthermore, if applied to\n@@ -3406,7 +3406,7 @@ package body Sem_Ch13 is\n                      Aitem :=\n                        Make_Attribute_Definition_Clause (Loc,\n                          Name       => Ent,\n-                         Chars      => Chars (Id),\n+                         Chars      => Nam,\n                          Expression => Relocate_Node (Expr));\n                   end if;\n \n@@ -3421,7 +3421,7 @@ package body Sem_Ch13 is\n                          Expression => Relocate_Node (Expr)),\n                        Make_Pragma_Argument_Association (Sloc (Expr),\n                          Expression => New_Occurrence_Of (E, Loc))),\n-                     Pragma_Name                  => Chars (Id));\n+                     Pragma_Name                  => Nam);\n \n                   Delay_Required := False;\n \n@@ -3434,7 +3434,7 @@ package body Sem_Ch13 is\n                          Expression => Relocate_Node (Expr)),\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => New_Occurrence_Of (E, Loc))),\n-                     Pragma_Name                  => Chars (Id));\n+                     Pragma_Name                  => Name_Warnings);\n \n                   Decorate (Aspect, Aitem);\n                   Insert_Pragma (Aitem);\n@@ -3876,7 +3876,7 @@ package body Sem_Ch13 is\n \n                   Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => Args,\n-                     Pragma_Name                  => Chars (Id));\n+                     Pragma_Name                  => Name_Obsolescent);\n                end;\n \n                --  Part_Of\n@@ -4162,7 +4162,7 @@ package body Sem_Ch13 is\n                --  pragmas/attributes but do require delayed analysis.\n \n                when Aspect_Default_Value | Aspect_Default_Component_Value =>\n-                  Error_Msg_Name_1 := Chars (Id);\n+                  Error_Msg_Name_1 := Nam;\n \n                   if not Is_Type (E) then\n                      Error_Msg_N (\"aspect% can only apply to a type\", Id);\n@@ -4437,7 +4437,7 @@ package body Sem_Ch13 is\n \n                   Aitem := Make_Aitem_Pragma\n                     (Pragma_Argument_Associations => Args,\n-                     Pragma_Name                  => Nam);\n+                     Pragma_Name                  => Name_Test_Case);\n                end Test_Case;\n \n                --  Contract_Cases\n@@ -4447,7 +4447,7 @@ package body Sem_Ch13 is\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n-                     Pragma_Name                  => Nam);\n+                     Pragma_Name                  => Name_Contract_Cases);\n \n                   Decorate (Aspect, Aitem);\n                   Insert_Pragma (Aitem);\n@@ -4460,7 +4460,7 @@ package body Sem_Ch13 is\n                     (Pragma_Argument_Associations => New_List (\n                        Make_Pragma_Argument_Association (Loc,\n                          Expression => Relocate_Node (Expr))),\n-                     Pragma_Name                  => Nam);\n+                     Pragma_Name                  => Name_Subprogram_Variant);\n \n                   Decorate (Aspect, Aitem);\n                   Insert_Pragma (Aitem);\n@@ -4583,7 +4583,7 @@ package body Sem_Ch13 is\n                           (Pragma_Argument_Associations => New_List (\n                              Make_Pragma_Argument_Association (Sloc (Ent),\n                                Expression => Ent)),\n-                           Pragma_Name                  => Chars (Id));\n+                           Pragma_Name                  => Nam);\n                      end if;\n \n                   --  In general cases, the corresponding pragma/attribute\n@@ -4646,7 +4646,7 @@ package body Sem_Ch13 is\n                      Aitem :=\n                        Make_Attribute_Definition_Clause (Loc,\n                          Name       => Ent,\n-                         Chars      => Chars (Id),\n+                         Chars      => Name_Storage_Size,\n                          Expression => Relocate_Node (Expr));\n                   end if;\n             end case;\n@@ -4693,7 +4693,7 @@ package body Sem_Ch13 is\n                           (Pragma_Argument_Associations => New_List (\n                              Make_Pragma_Argument_Association (Sloc (Ent),\n                                Expression => Ent)),\n-                           Pragma_Name                  => Chars (Id));\n+                           Pragma_Name                  => Nam);\n \n                         Set_From_Aspect_Specification (Aitem, True);\n                         Set_Corresponding_Aspect (Aitem, Aspect);"}]}