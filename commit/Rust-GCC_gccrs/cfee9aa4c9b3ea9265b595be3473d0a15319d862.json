{"sha": "cfee9aa4c9b3ea9265b595be3473d0a15319d862", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZlZTlhYTRjOWIzZWE5MjY1YjU5NWJlMzQ3M2QwYTE1MzE5ZDg2Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-10-28T14:48:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-10-28T14:48:34Z"}, "message": "re PR lto/41808 (error: non-trivial conversion at assignment)\n\n2009-10-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/41808\n\tPR lto/41839\n\t* tree-ssa.c (useless_type_conversion_p): Do not treat\n\tconversions to pointers to incomplete types as useless.\n\t* gimple.c (gimple_types_compatible_p): Compare struct tags,\n\tnot typedef names.\n\n\t* gcc.dg/lto/20091027-1_0.c: New testcase.\n\t* gcc.dg/lto/20091027-1_1.c: Likewise.\n\t* g++.dg/lto/20091026-1_0.C: Likewise.\n\t* g++.dg/lto/20091026-1_1.C: Likewise.\n\t* g++.dg/lto/20091026-1_a.h: Likewise.\n\nFrom-SVN: r153671", "tree": {"sha": "92b4e098e2f8daedf3f56de7f2fff165e4d72720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92b4e098e2f8daedf3f56de7f2fff165e4d72720"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfee9aa4c9b3ea9265b595be3473d0a15319d862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfee9aa4c9b3ea9265b595be3473d0a15319d862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfee9aa4c9b3ea9265b595be3473d0a15319d862", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfee9aa4c9b3ea9265b595be3473d0a15319d862/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1c6569544feb45d1fffff211a7970a8069d8c34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c6569544feb45d1fffff211a7970a8069d8c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c6569544feb45d1fffff211a7970a8069d8c34"}], "stats": {"total": 81, "additions": 75, "deletions": 6}, "files": [{"sha": "d2126f0a279e3b82ad72a8a26de32b645d35bc1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfee9aa4c9b3ea9265b595be3473d0a15319d862", "patch": "@@ -1,3 +1,12 @@\n+2009-10-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/41808\n+\tPR lto/41839\n+\t* tree-ssa.c (useless_type_conversion_p): Do not treat\n+\tconversions to pointers to incomplete types as useless.\n+\t* gimple.c (gimple_types_compatible_p): Compare struct tags,\n+\tnot typedef names.\n+\n 2009-10-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* var-tracking.c (emit_note_insn_var_location): Don't call the second"}, {"sha": "676e3fd467852ca9c5e4f2e6a764c71dfca897bc", "filename": "gcc/gimple.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=cfee9aa4c9b3ea9265b595be3473d0a15319d862", "patch": "@@ -3368,7 +3368,8 @@ gimple_types_compatible_p (tree t1, tree t2)\n \t    && RECORD_OR_UNION_TYPE_P (TREE_TYPE (t1))\n \t    && (!COMPLETE_TYPE_P (TREE_TYPE (t1))\n \t\t|| !COMPLETE_TYPE_P (TREE_TYPE (t2)))\n-\t    && compare_type_names_p (TREE_TYPE (t1), TREE_TYPE (t2), true))\n+\t    && compare_type_names_p (TYPE_MAIN_VARIANT (TREE_TYPE (t1)),\n+\t\t\t\t     TYPE_MAIN_VARIANT (TREE_TYPE (t2)), true))\n \t  {\n \t    /* Replace the pointed-to incomplete type with the\n \t       complete one.  */"}, {"sha": "751486d904e18d2f4742c5843bb08cff46cad0f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cfee9aa4c9b3ea9265b595be3473d0a15319d862", "patch": "@@ -1,3 +1,13 @@\n+2009-10-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/41808\n+\tPR lto/41839\n+\t* gcc.dg/lto/20091027-1_0.c: New testcase.\n+\t* gcc.dg/lto/20091027-1_1.c: Likewise.\n+\t* g++.dg/lto/20091026-1_0.C: Likewise.\n+\t* g++.dg/lto/20091026-1_1.C: Likewise.\n+\t* g++.dg/lto/20091026-1_a.h: Likewise.\n+\n 2009-10-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/41837"}, {"sha": "5c74f29cc4ca7c26d0c359b0fd51937343c5ee2e", "filename": "gcc/testsuite/g++.dg/lto/20091026-1_0.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_0.C?ref=cfee9aa4c9b3ea9265b595be3473d0a15319d862", "patch": "@@ -0,0 +1,11 @@\n+// { dg-lto-do link }\n+// { dg-extra-ld-options \"-r -nostdlib\" }\n+\n+#include \"20091026-1_a.h\"\n+cObject *cHead::find(const char *objname) const\n+{\n+    return firstchildp;\n+}\n+class cNetworkType : public cObject { };\n+cNetworkType *networktype;\n+"}, {"sha": "28816100e290077e05245a0600ea41936221f418", "filename": "gcc/testsuite/g++.dg/lto/20091026-1_1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_1.C?ref=cfee9aa4c9b3ea9265b595be3473d0a15319d862", "patch": "@@ -0,0 +1,14 @@\n+#include \"20091026-1_a.h\"\n+extern cHead networks;\n+class cNetworkType;\n+inline cNetworkType *findNetwork(const char *s)\n+{\n+  return (cNetworkType *)networks.find(s);\n+}\n+int run(const char *opt_network_name)\n+{\n+  cNetworkType *network = findNetwork(opt_network_name);\n+  if (!network)\n+    throw 1;\n+}\n+"}, {"sha": "314dd9610a4ffae5aa59455651f8d0ad784a56c0", "filename": "gcc/testsuite/g++.dg/lto/20091026-1_a.h", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_a.h?ref=cfee9aa4c9b3ea9265b595be3473d0a15319d862", "patch": "@@ -0,0 +1,9 @@\n+class cObject {\n+public:\n+    cObject *firstchildp;\n+};\n+class cHead : public cObject {\n+public:\n+    cObject *find(const char *objname) const;\n+};\n+"}, {"sha": "f2669fe0f00eb9ee6c5e7c4e8edbc79f0c646786", "filename": "gcc/testsuite/gcc.dg/lto/20091027-1_0.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_0.c?ref=cfee9aa4c9b3ea9265b595be3473d0a15319d862", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-lto-do link } */\n+/* { dg-extra-ld-options \"-r -nostdlib\" } */\n+\n+typedef struct _xmlDict xmlDict;\n+struct _xmlDict {\n+ int ref_counter;\n+};\n+void xmlDictCreate(void) {\n+  xmlDict * dict;\n+}\n+"}, {"sha": "d92394cc591cb7a6e6d0387e82db684378412084", "filename": "gcc/testsuite/gcc.dg/lto/20091027-1_1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_1.c?ref=cfee9aa4c9b3ea9265b595be3473d0a15319d862", "patch": "@@ -0,0 +1,9 @@\n+typedef struct _xmlDict xmlDict;\n+struct _xmlDoc {\n+  struct _xmlDict *dict;\n+};\n+void xmlAddEntity(struct _xmlDoc *a) {\n+  xmlDict * dict = a->dict;\n+  xmlHashCreateDict(0, dict);\n+}\n+"}, {"sha": "8e88c2f73b033c35cb3fab05f587b62e19c767a7", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfee9aa4c9b3ea9265b595be3473d0a15319d862/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=cfee9aa4c9b3ea9265b595be3473d0a15319d862", "patch": "@@ -1201,11 +1201,6 @@ useless_type_conversion_p (tree outer_type, tree inner_type)\n \t record type or a pointer to an unprototyped function,\n \t then the conversion is not necessary.  */\n       if (VOID_TYPE_P (TREE_TYPE (outer_type))\n-\t  || (AGGREGATE_TYPE_P (TREE_TYPE (outer_type))\n-\t      && TREE_CODE (TREE_TYPE (outer_type)) != ARRAY_TYPE\n-\t      && (TREE_CODE (TREE_TYPE (outer_type))\n-\t\t  == TREE_CODE (TREE_TYPE (inner_type)))\n-\t      && !COMPLETE_TYPE_P (TREE_TYPE (outer_type)))\n \t  || ((TREE_CODE (TREE_TYPE (outer_type)) == FUNCTION_TYPE\n \t       || TREE_CODE (TREE_TYPE (outer_type)) == METHOD_TYPE)\n \t      && (TREE_CODE (TREE_TYPE (outer_type))"}]}