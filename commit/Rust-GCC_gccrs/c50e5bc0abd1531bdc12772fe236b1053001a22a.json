{"sha": "c50e5bc0abd1531bdc12772fe236b1053001a22a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUwZTViYzBhYmQxNTMxYmRjMTI3NzJmZTIzNmIxMDUzMDAxYTIyYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-07-23T21:16:02Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-07-23T21:16:02Z"}, "message": "i386.c (ix86_expand_setcc): Don't use method 0 before CSE.\n\n        * config/i386/i386.c (ix86_expand_setcc): Don't use method 0\n        before CSE.\n        * config/i386/i386.md: New setcc+movzbl peephole2.\n\nFrom-SVN: r44279", "tree": {"sha": "b37259266f119c03012626be17bb5bf989e23210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b37259266f119c03012626be17bb5bf989e23210"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c50e5bc0abd1531bdc12772fe236b1053001a22a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c50e5bc0abd1531bdc12772fe236b1053001a22a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c50e5bc0abd1531bdc12772fe236b1053001a22a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c50e5bc0abd1531bdc12772fe236b1053001a22a/comments", "author": null, "committer": null, "parents": [{"sha": "9099cc4f790939fe710dc400cef829cf8c0894ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9099cc4f790939fe710dc400cef829cf8c0894ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9099cc4f790939fe710dc400cef829cf8c0894ff"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "e2437a2c809b71b7b4db3988395b8f4ab02bc32c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c50e5bc0abd1531bdc12772fe236b1053001a22a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c50e5bc0abd1531bdc12772fe236b1053001a22a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c50e5bc0abd1531bdc12772fe236b1053001a22a", "patch": "@@ -1,3 +1,9 @@\n+2001-07-23  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_expand_setcc): Don't use method 0\n+\tbefore CSE.\n+\t* config/i386/i386.md: New setcc+movzbl peephole2.\n+\n 2001-07-23  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n \n \t* objc/Make-lang.in (objc-act.o): Depend on debug.h."}, {"sha": "725a984e90e0521c7493a6b2081a18b605360a7f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c50e5bc0abd1531bdc12772fe236b1053001a22a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c50e5bc0abd1531bdc12772fe236b1053001a22a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c50e5bc0abd1531bdc12772fe236b1053001a22a", "patch": "@@ -6357,9 +6357,12 @@ ix86_expand_setcc (code, dest)\n           emit subreg setcc, zero extend.\n      2 -- destination is in QImode:\n           emit setcc only.\n-  */\n \n-  type = 0;\n+     We don't use mode 0 early in compilation because it confuses CSE.\n+     There are peepholes to turn mode 1 into mode 0 if things work out\n+     nicely after reload.  */\n+\n+  type = cse_not_expected ? 0 : 1;\n \n   if (GET_MODE (dest) == QImode)\n     type = 2;"}, {"sha": "7f84549ab9c8aeccf69a4f549bb042597e2c279d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c50e5bc0abd1531bdc12772fe236b1053001a22a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c50e5bc0abd1531bdc12772fe236b1053001a22a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c50e5bc0abd1531bdc12772fe236b1053001a22a", "patch": "@@ -13133,6 +13133,25 @@\n \t\t\t   (match_dup 0)\n \t\t\t   (pc)))]\n   \"\")\n+\n+;; Convert setcc + movzbl to xor + setcc if operands don't overlap.\n+\n+(define_peephole2\n+  [(set (reg 17) (match_operand 0 \"\" \"\"))\n+   (set (match_operand:QI 1 \"register_operand\" \"\")\n+\t(match_operator:QI 2 \"ix86_comparison_operator\"\n+\t  [(reg 17) (const_int 0)]))\n+   (set (match_operand 3 \"q_regs_operand\" \"\")\n+\t(zero_extend (match_dup 1)))]\n+  \"peep2_reg_dead_p (3, operands[1])\n+   && ! reg_overlap_mentioned_p (operands[3], operands[0])\"\n+  [(parallel [(set (match_dup 3) (const_int 0))\n+\t      (clobber (reg:CC 17))])\n+   (set (match_dup 4) (match_dup 0))\n+   (set (strict_low_part (match_dup 5))\n+\t(match_dup 2))]\n+  \"operands[4] = gen_rtx_REG (GET_MODE (operands[0]), 17);\n+   operands[5] = gen_rtx_REG (QImode, REGNO (operands[3]));\")\n \f\n ;; Call instructions.\n "}]}