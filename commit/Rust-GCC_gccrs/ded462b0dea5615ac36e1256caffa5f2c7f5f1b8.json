{"sha": "ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVkNDYyYjBkZWE1NjE1YWMzNmUxMjU2Y2FmZmE1ZjJjN2Y1ZjFiOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T09:25:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T09:25:40Z"}, "message": "[multiple changes]\n\n2017-04-25  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch7.adb, einfo.ads, sem_prag.adb: Minor reformatting and typo\n\tcorrection.\n\n2017-04-25  Yannick Moy  <moy@adacore.com>\n\n\t* sem_res.adb (Resolve_Comparison_Op): Do not\n\tattempt evaluation of relational operations inside assertions.\n\n2017-04-25  Justin Squirek  <squirek@adacore.com>\n\n\t* exp_util.adb (Add_Interface_Invariants):\n\tRestored, code moved back from Build_Invariant_Procedure_Body.\n\t(Add_Parent_Invariants): Restored, code moved back from\n\tBuild_Invariant_Procedure_Body.\n\t(Build_Invariant_Procedure_Body):\n\tRemove refactored calls and integrated code from\n\tAdd_Parent_Invariants and Add_Interface_Invariants.\n\n2017-04-25  Johannes Kanig  <kanig@adacore.com>\n\n\t* errout.adb (Output_Messages): Adjust computation of total\n\terrors\n\t* erroutc.adb (Error_Msg): In statistics counts, deal\n\tcorrectly with informational messages that are not warnings.\n\t* errutil.adb (Finalize): adjust computation of total errors.\n\n2017-04-25  Arnaud Charlet  <charlet@adacore.com trojanek>\n\n\t* terminals.c (__gnat_terminate_pid): New.\n\t* g-exptty.ads (Terminate_Process): New. Update comments.\n\nFrom-SVN: r247157", "tree": {"sha": "4c18b037e9441b84759df1504f08ff05956af053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c18b037e9441b84759df1504f08ff05956af053"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/comments", "author": null, "committer": null, "parents": [{"sha": "d1eb8a82b2851aba9cc35cc698be7dbf4f80ec9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1eb8a82b2851aba9cc35cc698be7dbf4f80ec9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1eb8a82b2851aba9cc35cc698be7dbf4f80ec9a"}], "stats": {"total": 451, "additions": 314, "deletions": 137}, "files": [{"sha": "192e893f92a8a2c39665c3445c0f40cde4b0996d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -1,3 +1,36 @@\n+2017-04-25  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch7.adb, einfo.ads, sem_prag.adb: Minor reformatting and typo\n+\tcorrection.\n+\n+2017-04-25  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Comparison_Op): Do not\n+\tattempt evaluation of relational operations inside assertions.\n+\n+2017-04-25  Justin Squirek  <squirek@adacore.com>\n+\n+\t* exp_util.adb (Add_Interface_Invariants):\n+\tRestored, code moved back from Build_Invariant_Procedure_Body.\n+\t(Add_Parent_Invariants): Restored, code moved back from\n+\tBuild_Invariant_Procedure_Body.\n+\t(Build_Invariant_Procedure_Body):\n+\tRemove refactored calls and integrated code from\n+\tAdd_Parent_Invariants and Add_Interface_Invariants.\n+\n+2017-04-25  Johannes Kanig  <kanig@adacore.com>\n+\n+\t* errout.adb (Output_Messages): Adjust computation of total\n+\terrors\n+\t* erroutc.adb (Error_Msg): In statistics counts, deal\n+\tcorrectly with informational messages that are not warnings.\n+\t* errutil.adb (Finalize): adjust computation of total errors.\n+\n+2017-04-25  Arnaud Charlet  <charlet@adacore.com trojanek>\n+\n+\t* terminals.c (__gnat_terminate_pid): New.\n+\t* g-exptty.ads (Terminate_Process): New. Update comments.\n+\n 2017-04-25  Arnaud Charlet  <charlet@adacore.com>\n \n \t* a-cfinve.ads, a-cofove.ads (Empty_Vector): add Global contract."}, {"sha": "5999018548973883293a2926f674f9757515fe64", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -3711,8 +3711,8 @@ package Einfo is\n \n --    Original_Access_Type (Node28)\n --       Defined in E_Access_Subprogram_Type entities. Set only if the access\n---       type was generated by the expander as part of processing an access\n---       to protected subprogram type. Points to the access to protected\n+--       type was generated by the expander as part of processing an access-\n+--       to-protected-subprogram type. Points to the access-to-protected-\n --       subprogram type.\n \n --    Original_Array_Type (Node21)\n@@ -4842,24 +4842,24 @@ package Einfo is\n       --  keyword present.\n \n       E_Access_Subprogram_Type,\n-      --  An access to subprogram type, created by an access to subprogram\n+      --  An access-to-subprogram type, created by an access-to-subprogram\n       --  declaration.\n \n       E_Access_Protected_Subprogram_Type,\n       --  An access to a protected subprogram, created by the corresponding\n       --  declaration. Values of such a type denote both a protected object\n       --  and a protected operation within, and have different compile-time\n-      --  and run-time properties than other access to subprograms.\n+      --  and run-time properties than other access-to-subprogram values.\n \n       E_Anonymous_Access_Protected_Subprogram_Type,\n-      --  An anonymous access to protected subprogram type, created by an\n-      --  access to subprogram declaration.\n+      --  An anonymous access-to-protected-subprogram type, created by an\n+      --  access-to-subprogram declaration.\n \n       E_Anonymous_Access_Subprogram_Type,\n-      --  An anonymous access to subprogram type, created by an access to\n+      --  An anonymous access-to-subprogram type, created by an access-to-\n       --  subprogram declaration, or generated for a current instance of\n       --  a type name appearing within a component definition that has an\n-      --  anonymous access to subprogram type.\n+      --  anonymous access-to-subprogram type.\n \n       E_Anonymous_Access_Type,\n       --  An anonymous access type created by an access parameter or access"}, {"sha": "ea806397dc9f3e4dbf05ef4a036a02bdddb9a4b4", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -2105,7 +2105,7 @@ package body Errout is\n \n       if Warning_Mode = Treat_As_Error then\n          Total_Errors_Detected :=\n-           Total_Errors_Detected + Warnings_Detected - Info_Messages;\n+           Total_Errors_Detected + Warnings_Detected;\n          Warnings_Detected := Info_Messages;\n       end if;\n    end Output_Messages;"}, {"sha": "f637083cb06e72ee23ea96af4dcc0d305bb9c1e7", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -139,13 +139,16 @@ package body Erroutc is\n \n             --  Adjust error message count\n \n-            if Errors.Table (D).Warn or else Errors.Table (D).Style then\n-               Warnings_Detected := Warnings_Detected - 1;\n+            if Errors.Table (D).Info then\n+               Info_Messages := Info_Messages - 1;\n \n-               if Errors.Table (D).Info then\n-                  Info_Messages := Info_Messages - 1;\n+               if Errors.Table (D).Warn then\n+                  Warnings_Detected := Warnings_Detected - 1;\n                end if;\n \n+            elsif Errors.Table (D).Warn or else Errors.Table (D).Style then\n+               Warnings_Detected := Warnings_Detected - 1;\n+\n                --  Note: we do not need to decrement Warnings_Treated_As_Errors\n                --  because this only gets incremented if we actually output the\n                --  message, which we won't do if we are deleting it here!\n@@ -240,7 +243,7 @@ package body Erroutc is\n    function Compilation_Errors return Boolean is\n    begin\n       return Total_Errors_Detected /= 0\n-        or else (Warnings_Detected - Info_Messages /= 0\n+        or else (Warnings_Detected /= 0\n                   and then Warning_Mode = Treat_As_Error)\n         or else Warnings_Treated_As_Errors /= 0;\n    end Compilation_Errors;"}, {"sha": "e10624fc3d771375fe9282c3ed1bf7ec4a294621", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -588,7 +588,7 @@ package body Errutil is\n \n       if Warning_Mode = Treat_As_Error then\n          Total_Errors_Detected :=\n-           Total_Errors_Detected + Warnings_Detected - Info_Messages;\n+           Total_Errors_Detected + Warnings_Detected;\n          Warnings_Detected := Info_Messages;\n       end if;\n "}, {"sha": "a3082e28b1900ec1cc970fd37c43a72fc845140f", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -486,14 +486,14 @@ package body Exp_Ch7 is\n       then\n          return False;\n \n-      --  Do not consider an access type which return on the secondary stack\n+      --  Do not consider an access type that returns on the secondary stack\n \n       elsif Present (Associated_Storage_Pool (Ptr_Typ))\n         and then Is_RTE (Associated_Storage_Pool (Ptr_Typ), RE_SS_Pool)\n       then\n          return False;\n \n-      --  Do not consider an access type which may never allocate an object\n+      --  Do not consider an access type that can never allocate an object\n \n       elsif No_Pool_Assigned (Ptr_Typ) then\n          return False;"}, {"sha": "9f5224c49e17a595cd998aae57786ccaa4cdecc6", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 174, "deletions": 113, "changes": 287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -1999,6 +1999,25 @@ package body Exp_Util is\n       --  Obj_Id denotes the entity of the _object formal parameter of the\n       --  invariant procedure. All created checks are added to list Checks.\n \n+      procedure Add_Inherited_Invariant\n+        (Full_Typ : Entity_Id;\n+         Priv_Typ : Entity_Id;\n+         Obj_Id   : Entity_Id;\n+         Checks   : in out List_Id);\n+      --  Generate an invariant check for each inherited class-wide invariant\n+      --  coming from all parent types of type T. Obj_Id denotes the entity of\n+      --  the _object formal parameter of the invariant procedure. All created\n+      --  checks are added to list Checks.\n+\n+      procedure Add_Interface_Invariants\n+        (T      : Entity_Id;\n+         Obj_Id : Entity_Id;\n+         Checks : in out List_Id);\n+      --  Generate an invariant check for each inherited class-wide invariant\n+      --  coming from all interfaces implemented by type T. Obj_Id denotes the\n+      --  entity of the _object formal parameter of the invariant procedure.\n+      --  All created checks are added to list Checks.\n+\n       procedure Add_Invariant_Check\n         (Prag      : Node_Id;\n          Expr      : Node_Id;\n@@ -2009,15 +2028,6 @@ package body Exp_Util is\n       --  is added to list Checks. Flag Inherited should be set when the pragma\n       --  is inherited from a parent or interface type.\n \n-      procedure Add_Inherited_Invariant\n-        (T      : Entity_Id;\n-         Obj_Id : Entity_Id;\n-         Checks : in out List_Id);\n-      --  Generate an invariant check for each inherited class-wide invariant\n-      --  coming from all parent types of type T. Obj_Id denotes the entity of\n-      --  the _object formal parameter of the invariant procedure. All created\n-      --  checks are added to list Checks.\n-\n       procedure Add_Own_Invariant\n         (T         : Entity_Id;\n          Obj_Id    : Entity_Id;\n@@ -2028,6 +2038,15 @@ package body Exp_Util is\n       --  invariant procedure. All created checks are added to list Checks.\n       --  Priv_Item denotes the first rep item of the private type.\n \n+      procedure Add_Parent_Invariants\n+        (T      : Entity_Id;\n+         Obj_Id : Entity_Id;\n+         Checks : in out List_Id);\n+      --  Generate an invariant check for each inherited class-wide invariant\n+      --  coming from all parent types of type T. Obj_Id denotes the entity of\n+      --  the _object formal parameter of the invariant procedure. All created\n+      --  checks are added to list Checks.\n+\n       procedure Add_Record_Component_Invariants\n         (T      : Entity_Id;\n          Obj_Id : Entity_Id;\n@@ -2197,9 +2216,10 @@ package body Exp_Util is\n       -----------------------------\n \n       procedure Add_Inherited_Invariant\n-        (T      : Entity_Id;\n-         Obj_Id : Entity_Id;\n-         Checks : in out List_Id)\n+        (Full_Typ : Entity_Id;\n+         Priv_Typ : Entity_Id;\n+         Obj_Id   : Entity_Id;\n+         Checks   : in out List_Id)\n       is\n          Arg1 : Node_Id;\n          Arg2 : Node_Id;\n@@ -2211,11 +2231,16 @@ package body Exp_Util is\n          --  instance of a type with the _object formal parameter\n \n       begin\n-         if not Present (T) then\n+         if not Present (Priv_Typ) and then not Present (Full_Typ) then\n             return;\n          end if;\n \n-         Prag := First_Rep_Item (T);\n+         if Present (Priv_Typ) then\n+            Prag := First_Rep_Item (Priv_Typ);\n+         else\n+            Prag := First_Rep_Item (Full_Typ);\n+         end if;\n+\n          while Present (Prag) loop\n             if Nkind (Prag) = N_Pragma\n               and then Pragma_Name (Prag) = Name_Invariant\n@@ -2229,30 +2254,30 @@ package body Exp_Util is\n                --  Extract the arguments of the invariant pragma\n \n                Arg1 := First (Pragma_Argument_Associations (Prag));\n-               Arg2 := Next (Arg1);\n-\n+               Arg2 := Get_Pragma_Arg (Next (Arg1));\n                Arg1 := Get_Pragma_Arg (Arg1);\n-               Arg2 := Get_Pragma_Arg (Arg2);\n+\n+               --  The pragma applies to the partial view\n+\n+               if Present (Priv_Typ) and then Entity (Arg1) = Priv_Typ then\n+                  Rep_Typ := Priv_Typ;\n+\n+               --  The pragma applies to the full view\n+\n+               elsif Present (Full_Typ) and then Entity (Arg1) = Full_Typ then\n+                  Rep_Typ := Full_Typ;\n \n                --  Otherwise the pragma applies to a parent type in which case\n                --  it will be processed at a later stage by\n                --  Add_Parent_Invariants or Add_Interface_Invariants.\n \n-               if Entity (Arg1) = T then\n-                  Rep_Typ := Entity (Arg1);\n-\n-               elsif Present (Full_View (T))\n-                 and then Entity (Arg1) = Full_View (T)\n-               then\n-                  Rep_Typ := Full_View (T);\n-\n                else\n                   return;\n                end if;\n \n-               --  Nothing to do when the caller requests the processing of\n-               --  all inherited class-wide invariants, but the pragma does\n-               --  not fall in this category.\n+               --  Nothing to do when the caller requests the processing of all\n+               --  inherited class-wide invariants, but the pragma does not\n+               --  fall in this category.\n \n                if not Class_Present (Prag) then\n                   return;\n@@ -2275,6 +2300,42 @@ package body Exp_Util is\n          end loop;\n       end Add_Inherited_Invariant;\n \n+      ------------------------------\n+      -- Add_Interface_Invariants --\n+      ------------------------------\n+\n+      procedure Add_Interface_Invariants\n+        (T      : Entity_Id;\n+         Obj_Id : Entity_Id;\n+         Checks : in out List_Id)\n+      is\n+         Iface_Elmt : Elmt_Id;\n+         Ifaces     : Elist_Id;\n+\n+      begin\n+         --  Generate an invariant check for each inherited class-wide\n+         --  invariant coming from all interfaces implemented by type T. Obj_Id\n+         --  denotes the entity of the _object formal parameter of the\n+         --  invariant procedure. All created checks are added to list Checks.\n+\n+         if Is_Tagged_Type (T) then\n+            Collect_Interfaces (T, Ifaces);\n+\n+            --  Process the class-wide invariants of all implemented interfaces\n+\n+            Iface_Elmt := First_Elmt (Ifaces);\n+            while Present (Iface_Elmt) loop\n+               Add_Inherited_Invariant\n+                 (Full_Typ => Node (Iface_Elmt),\n+                  Priv_Typ => Empty,\n+                  Obj_Id   => Obj_Id,\n+                  Checks   => Checks);\n+\n+               Next_Elmt (Iface_Elmt);\n+            end loop;\n+         end if;\n+      end Add_Interface_Invariants;\n+\n       -------------------------\n       -- Add_Invariant_Check --\n       -------------------------\n@@ -2355,6 +2416,80 @@ package body Exp_Util is\n          Produced_Check := True;\n       end Add_Invariant_Check;\n \n+      ---------------------------\n+      -- Add_Parent_Invariants --\n+      ---------------------------\n+\n+      procedure Add_Parent_Invariants\n+        (T      : Entity_Id;\n+         Obj_Id : Entity_Id;\n+         Checks : in out List_Id)\n+      is\n+         Dummy_1 : Entity_Id;\n+         Dummy_2 : Entity_Id;\n+\n+         Curr_Typ : Entity_Id;\n+         --  The entity of the current type being examined\n+\n+         Full_Typ : Entity_Id;\n+         --  The full view of Par_Typ\n+\n+         Par_Typ : Entity_Id;\n+         --  The entity of the parent type\n+\n+         Priv_Typ : Entity_Id;\n+         --  The partial view of Par_Typ\n+\n+      begin\n+         --  Do not process array types because they cannot have true parent\n+         --  types. This also prevents the generation of a duplicate invariant\n+         --  check when the input type is an array base type because its Etype\n+         --  denotes the first subtype, both of which share the same component\n+         --  type.\n+\n+         if Is_Array_Type (T) then\n+            return;\n+         end if;\n+\n+         --  Climb the parent type chain\n+\n+         Curr_Typ := T;\n+         loop\n+            --  Do not consider subtypes as they inherit the invariants\n+            --  from their base types.\n+\n+            Par_Typ := Base_Type (Etype (Curr_Typ));\n+\n+            --  Stop the climb once the root of the parent chain is\n+            --  reached.\n+\n+            exit when Curr_Typ = Par_Typ;\n+\n+            --  Process the class-wide invariants of the parent type\n+\n+            Get_Views (Par_Typ, Priv_Typ, Full_Typ, Dummy_1, Dummy_2);\n+\n+            --  Process the elements of an array type\n+\n+            if Is_Array_Type (Full_Typ) then\n+               Add_Array_Component_Invariants (Full_Typ, Obj_Id, Checks);\n+\n+            --  Process the components of a record type\n+\n+            elsif Ekind (Full_Typ) = E_Record_Type then\n+               Add_Record_Component_Invariants (Full_Typ, Obj_Id, Checks);\n+            end if;\n+\n+            Add_Inherited_Invariant\n+              (Full_Typ => Full_Typ,\n+               Priv_Typ => Priv_Typ,\n+               Obj_Id   => Obj_Id,\n+               Checks   => Checks);\n+\n+            Curr_Typ := Par_Typ;\n+         end loop;\n+      end Add_Parent_Invariants;\n+\n       -----------------------\n       -- Add_Own_Invariant --\n       -----------------------\n@@ -2399,17 +2534,15 @@ package body Exp_Util is\n                --  Extract the arguments of the invariant pragma\n \n                Arg1 := First (Pragma_Argument_Associations (Prag));\n-               Arg2 := Next (Arg1);\n-\n+               Arg2 := Get_Pragma_Arg (Next (Arg1));\n                Arg1 := Get_Pragma_Arg (Arg1);\n-               Arg2 := Get_Pragma_Arg (Arg2);\n-\n                Asp  := Corresponding_Aspect (Prag);\n                Ploc := Sloc (Prag);\n \n-               --  Otherwise the pragma applies to a parent type in which case\n-               --  it will be processed at a later stage by\n-               --  Add_Parent_Invariants or Add_Interface_Invariants.\n+               --  Verify the pragma belongs to T, otherwise the pragma applies\n+               --  to a parent type in which case it will be processed at a\n+               --  later stage by Add_Parent_Invariants or\n+               --  Add_Interface_Invariants.\n \n                if Entity (Arg1) /= T then\n                   return;\n@@ -2724,10 +2857,7 @@ package body Exp_Util is\n \n       --  Local variables\n \n-      Dummy_1      : Entity_Id;\n-      Dummy_2      : Entity_Id;\n-      Iface_Elmt   : Elmt_Id;\n-      Ifaces       : Elist_Id;\n+      Dummy        : Entity_Id;\n       Mode         : Ghost_Mode_Type;\n       Priv_Item    : Node_Id;\n       Proc_Body    : Node_Id;\n@@ -2799,7 +2929,7 @@ package body Exp_Util is\n \n       --  Obtain both views of the type\n \n-      Get_Views (Work_Typ, Priv_Typ, Full_Typ, Dummy_1, CRec_Typ);\n+      Get_Views (Work_Typ, Priv_Typ, Full_Typ, Dummy, CRec_Typ);\n \n       --  The caller requests a body for the partial invariant procedure\n \n@@ -2991,81 +3121,12 @@ package body Exp_Util is\n          --  Process the inherited class-wide invariants of all parent types.\n          --  This also handles any invariants on record components.\n \n-         declare\n-            Curr_Typ : Entity_Id;\n-            --  The entity of the current type being examined\n-\n-            Par_Full : Entity_Id;\n-            --  The full view of Par_Typ\n-\n-            Par_Priv : Entity_Id;\n-            --  The partial view of Par_Typ\n-\n-            Par_Typ : Entity_Id;\n-            --  The entity of the parent type\n-\n-         begin\n-            if not Is_Array_Type (Full_Typ) then\n-\n-               --  Climb the parent type chain\n-\n-               Curr_Typ := Full_Typ;\n-               loop\n-                  --  Do not consider subtypes as they inherit the invariants\n-                  --  from their base types.\n-\n-                  Par_Typ := Base_Type (Etype (Curr_Typ));\n-\n-                  --  Stop the climb once the root of the parent chain is\n-                  --  reached.\n+         Add_Parent_Invariants (Full_Typ, Obj_Id, Stmts);\n \n-                  exit when Curr_Typ = Par_Typ;\n+         --  Process the inherited class-wide invariants of all implemented\n+         --  interface types.\n \n-                  --  Process the class-wide invariants of the parent type\n-\n-                  Get_Views (Par_Typ, Par_Priv, Par_Full, Dummy_1, Dummy_2);\n-\n-                  --  Process the elements of an array type\n-\n-                  if Is_Array_Type (Par_Full) then\n-                     Add_Array_Component_Invariants (Par_Full, Obj_Id, Stmts);\n-\n-                  --  Process the components of a record type\n-\n-                  elsif Ekind (Par_Full) = E_Record_Type then\n-                     Add_Record_Component_Invariants (Par_Full, Obj_Id, Stmts);\n-                  end if;\n-\n-                  Add_Inherited_Invariant\n-                    (T      => Par_Priv,\n-                     Obj_Id => Obj_Id,\n-                     Checks => Stmts);\n-\n-                  Curr_Typ := Par_Typ;\n-               end loop;\n-            end if;\n-         end;\n-\n-         --  Generate an invariant check for each inherited class-wide\n-         --  invariant coming from all interfaces implemented by type T. Obj_Id\n-         --  denotes the entity of the _object formal parameter of the\n-         --  invariant procedure. All created checks are added to list Checks.\n-\n-         if Is_Tagged_Type (Full_Typ) then\n-            Collect_Interfaces (Full_Typ, Ifaces);\n-\n-            --  Process the class-wide invariants of all implemented interfaces\n-\n-            Iface_Elmt := First_Elmt (Ifaces);\n-            while Present (Iface_Elmt) loop\n-               Add_Inherited_Invariant\n-                 (T      => Node (Iface_Elmt),\n-                  Obj_Id => Obj_Id,\n-                  Checks => Stmts);\n-\n-               Next_Elmt (Iface_Elmt);\n-            end loop;\n-         end if;\n+         Add_Interface_Invariants (Full_Typ, Obj_Id, Stmts);\n       end if;\n \n       End_Scope;"}, {"sha": "00615f9e883f077fdab6709bf9a9663c4a570c2f", "filename": "gcc/ada/g-exptty.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fg-exptty.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fg-exptty.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-exptty.adb?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                    Copyright (C) 2000-2014, AdaCore                      --\n+--                    Copyright (C) 2000-2016, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -147,6 +147,17 @@ package body GNAT.Expect.TTY is\n       Internal (Pid);\n    end Interrupt;\n \n+   -----------------------\n+   -- Terminate_Process --\n+   -----------------------\n+\n+   procedure Terminate_Process (Pid : Integer) is\n+      procedure Internal (Pid : Integer);\n+      pragma Import (C, Internal, \"__gnat_terminate_pid\");\n+   begin\n+      Internal (Pid);\n+   end Terminate_Process;\n+\n    -----------------------\n    -- Pseudo_Descriptor --\n    -----------------------"}, {"sha": "10e0f81147e8a6c63056461a59d21d0866d7cc47", "filename": "gcc/ada/g-exptty.ads", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fg-exptty.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fg-exptty.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-exptty.ads?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                    Copyright (C) 2000-2011, AdaCore                      --\n+--                    Copyright (C) 2000-2016, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,7 +64,13 @@ package GNAT.Expect.TTY is\n    --  GNAT.TTY.Close_TTY.\n \n    procedure Interrupt (Pid : Integer);\n-   --  Interrupt a process given its pid\n+   --  Interrupt a process given its pid.\n+   --  This is equivalent to sending a ctrl-c event, or kill -SIGINT.\n+\n+   procedure Terminate_Process (Pid : Integer);\n+   --  Terminate abruptly a process given its pid.\n+   --  This is equivalent to kill -SIGKILL under unix, or TerminateProcess\n+   --  under Windows.\n \n    overriding procedure Send\n      (Descriptor   : in out TTY_Process_Descriptor;"}, {"sha": "c00e86b1402b2af6293e36c5062b172e0b4073cc", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -17922,7 +17922,7 @@ package body Sem_Prag is\n                if Is_Library_Level_Entity (Typ) then\n                   null;\n \n-               --  Qietly ignore an access-to-object type originally declared\n+               --  Quietly ignore an access-to-object type originally declared\n                --  at the library level within a generic, but instantiated at\n                --  a non-library level. As a result the access-to-object type\n                --  \"loses\" its No_Heap_Finalization property."}, {"sha": "5a0797ecb54e1179f4bb84404162a03e808925a7", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -6898,11 +6898,16 @@ package body Sem_Res is\n             N, Etype (L));\n       end if;\n \n+      Analyze_Dimension (N);\n+\n       --  Evaluate the relation (note we do this after the above check since\n-      --  this Eval call may change N to True/False.\n+      --  this Eval call may change N to True/False. Skip this evaluation\n+      --  inside assertions, in order to keep assertions as written by users\n+      --  for tools that rely on these, e.g. GNATprove for loop invariants.\n \n-      Analyze_Dimension (N);\n-      Eval_Relational_Op (N);\n+      if In_Assertion_Expr = 0 then\n+         Eval_Relational_Op (N);\n+      end if;\n    end Resolve_Comparison_Op;\n \n    -----------------------------------------"}, {"sha": "9133a3bd88c5b5ecd1ed5b5017d558b1b76d069c", "filename": "gcc/ada/terminals.c", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fterminals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded462b0dea5615ac36e1256caffa5f2c7f5f1b8/gcc%2Fada%2Fterminals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fterminals.c?ref=ded462b0dea5615ac36e1256caffa5f2c7f5f1b8", "patch": "@@ -89,6 +89,12 @@ __gnat_terminate_process (void *desc ATTRIBUTE_UNUSED)\n   return -1;\n }\n \n+int\n+__gnat_terminate_pid (int pid ATTRIBUTE_UNUSED)\n+{\n+  return -1;\n+}\n+\n int\n __gnat_tty_fd (void* t ATTRIBUTE_UNUSED)\n {\n@@ -962,6 +968,47 @@ __gnat_terminate_process (struct TTY_Process* p)\n     return 0;\n }\n \n+typedef struct {\n+  DWORD dwProcessId;\n+  HANDLE hwnd;\n+} pid_struct;\n+\n+static BOOL CALLBACK\n+find_process_handle (HWND hwnd, pid_struct * ps)\n+{\n+  DWORD thread_id;\n+  DWORD process_id;\n+\n+  thread_id = GetWindowThreadProcessId (hwnd, &process_id);\n+  if (process_id == ps->dwProcessId)\n+    {\n+      ps->hwnd = hwnd;\n+      return FALSE;\n+    }\n+  /* keep looking */\n+  return TRUE;\n+}\n+\n+int\n+__gnat_terminate_pid (int pid)\n+{\n+  pid_struct ps;\n+\n+  ps.dwProcessId = pid;\n+  ps.hwnd = 0;\n+  EnumWindows ((WNDENUMPROC) find_process_handle, (LPARAM) &ps);\n+\n+  if (ps.hwnd)\n+    {\n+      if (!TerminateProcess (ps.hwnd, 1))\n+\treturn -1;\n+      else\n+\treturn 0;\n+    }\n+\n+  return -1;\n+}\n+\n /* wait for process pid to terminate and return the process status. This\n    implementation is different from the adaint.c one for Windows as it uses\n    the Win32 API instead of the C one. */\n@@ -1500,6 +1547,17 @@ int __gnat_terminate_process (pty_desc *desc)\n   return kill (desc->child_pid, SIGKILL);\n }\n \n+/* __gnat_terminate_pid - kill a process\n+ *\n+ * PARAMETERS\n+ *   pid unix process id\n+ */\n+int\n+__gnat_terminate_pid (int pid)\n+{\n+  return kill (pid, SIGKILL);\n+}\n+\n /* __gnat_tty_waitpid - wait for the child process to die\n  *\n  * PARAMETERS"}]}