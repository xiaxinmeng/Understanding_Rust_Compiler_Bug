{"sha": "ee380365ef32d718116976cc15eebbe7624cc267", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUzODAzNjVlZjMyZDcxODExNjk3NmNjMTVlZWJiZTc2MjRjYzI2Nw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-01-30T15:46:01Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-01-30T15:46:01Z"}, "message": "re PR preprocessor/29966 (crash in cc1 with backtrace from free())\n\n\tPR preprocessor/29966:\n\t* macro.c (lex_expansion_token): Save and restore cpp_reader's\n\tcur_token.\n\t(_cpp_create_definition): Don't restore cur_token here.\n\t* lex.c (_cpp_lex_token): Added assertion.\n\nFrom-SVN: r121340", "tree": {"sha": "fada9dec211b86baa03a82bf99d474f9823cb875", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fada9dec211b86baa03a82bf99d474f9823cb875"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee380365ef32d718116976cc15eebbe7624cc267", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee380365ef32d718116976cc15eebbe7624cc267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee380365ef32d718116976cc15eebbe7624cc267", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee380365ef32d718116976cc15eebbe7624cc267/comments", "author": null, "committer": null, "parents": [{"sha": "9caea4a72fd8f85dc33dfbb990249734fe31c256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9caea4a72fd8f85dc33dfbb990249734fe31c256", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9caea4a72fd8f85dc33dfbb990249734fe31c256"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "40c216b3bb1c73aa50f788c93dbf194042fd1320", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee380365ef32d718116976cc15eebbe7624cc267/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee380365ef32d718116976cc15eebbe7624cc267/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=ee380365ef32d718116976cc15eebbe7624cc267", "patch": "@@ -1,3 +1,11 @@\n+2007-01-30  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR preprocessor/29966:\n+\t* macro.c (lex_expansion_token): Save and restore cpp_reader's\n+\tcur_token.\n+\t(_cpp_create_definition): Don't restore cur_token here.\n+\t* lex.c (_cpp_lex_token): Added assertion.\n+\n 2007-01-27  Tom Tromey  <tromey@redhat.com>\n \n \t* configure: Rebuilt."}, {"sha": "296b39998115953edddd760c26c164c1c0cd15f7", "filename": "libcpp/lex.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee380365ef32d718116976cc15eebbe7624cc267/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee380365ef32d718116976cc15eebbe7624cc267/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=ee380365ef32d718116976cc15eebbe7624cc267", "patch": "@@ -766,6 +766,11 @@ _cpp_lex_token (cpp_reader *pfile)\n \t  pfile->cur_run = next_tokenrun (pfile->cur_run);\n \t  pfile->cur_token = pfile->cur_run->base;\n \t}\n+      /* We assume that the current token is somewhere in the current\n+\t run.  */\n+      if (pfile->cur_token < pfile->cur_run->base\n+\t  || pfile->cur_token >= pfile->cur_run->limit)\n+\tabort ();\n \n       if (pfile->lookaheads)\n \t{"}, {"sha": "ede29ff62bc2a86f1c2ba3105c92eeb70fd7dc8c", "filename": "libcpp/macro.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee380365ef32d718116976cc15eebbe7624cc267/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee380365ef32d718116976cc15eebbe7624cc267/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=ee380365ef32d718116976cc15eebbe7624cc267", "patch": "@@ -1,6 +1,7 @@\n /* Part of CPP library.  (Macro and #define handling.)\n    Copyright (C) 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+   2006 Free Software Foundation, Inc.\n    Written by Per Bothner, 1994.\n    Based on CCCP program by Paul Rubin, June 1986\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n@@ -1398,10 +1399,12 @@ alloc_expansion_token (cpp_reader *pfile, cpp_macro *macro)\n static cpp_token *\n lex_expansion_token (cpp_reader *pfile, cpp_macro *macro)\n {\n-  cpp_token *token;\n+  cpp_token *token, *saved_cur_token;\n \n+  saved_cur_token = pfile->cur_token;\n   pfile->cur_token = alloc_expansion_token (pfile, macro);\n   token = _cpp_lex_direct (pfile);\n+  pfile->cur_token = saved_cur_token;\n \n   /* Is this a parameter?  */\n   if (token->type == CPP_NAME\n@@ -1590,18 +1593,12 @@ _cpp_create_definition (cpp_reader *pfile, cpp_hashnode *node)\n     ok = _cpp_create_trad_definition (pfile, macro);\n   else\n     {\n-      cpp_token *saved_cur_token = pfile->cur_token;\n-\n       ok = create_iso_definition (pfile, macro);\n \n-      /* Restore lexer position because of games lex_expansion_token()\n-\t plays lexing the macro.  We set the type for SEEN_EOL() in\n-\t directives.c.\n+      /* We set the type for SEEN_EOL() in directives.c.\n \n \t Longer term we should lex the whole line before coming here,\n \t and just copy the expansion.  */\n-      saved_cur_token[-1].type = pfile->cur_token[-1].type;\n-      pfile->cur_token = saved_cur_token;\n \n       /* Stop the lexer accepting __VA_ARGS__.  */\n       pfile->state.va_args_ok = 0;"}]}