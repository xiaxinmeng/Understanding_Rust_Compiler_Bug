{"sha": "2a15d344d0726a8cfbf93e723dae1500f6f66a2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmExNWQzNDRkMDcyNmE4Y2ZiZjkzZTcyM2RhZTE1MDBmNmY2NmEyYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-21T16:32:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-21T16:32:49Z"}, "message": "c-common.c (cpp_define_data_format): Remove __GCC_LITTLE_ENDIAN__...\n\n        * c-common.c (cpp_define_data_format): Remove __GCC_LITTLE_ENDIAN__,\n        __GCC_BIG_ENDIAN__, __TARGET_BITS_ORDER__, __TARGET_BYTES_ORDER__,\n        __TARGET_INT_WORDS_ORDER__, __TARGET_FLOAT_WORDS_ORDER__,\n        __TARGET_USES_VAX_F_FLOAT__, __TARGET_USES_VAX_D_FLOAT__,\n        __TARGET_USES_VAX_G_FLOAT__, __TARGET_USES_VAX_H_FLOAT__.\n        * doc/cpp.texi: Don't document them.\n\nFrom-SVN: r57391", "tree": {"sha": "9b26714e992c3e0908bc2f4b54d43fe50d51a8da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b26714e992c3e0908bc2f4b54d43fe50d51a8da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a15d344d0726a8cfbf93e723dae1500f6f66a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a15d344d0726a8cfbf93e723dae1500f6f66a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a15d344d0726a8cfbf93e723dae1500f6f66a2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a15d344d0726a8cfbf93e723dae1500f6f66a2a/comments", "author": null, "committer": null, "parents": [{"sha": "3fdacdf9e310dc1ff0f7773b3d3383dbbcdd3f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fdacdf9e310dc1ff0f7773b3d3383dbbcdd3f05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fdacdf9e310dc1ff0f7773b3d3383dbbcdd3f05"}], "stats": {"total": 100, "additions": 10, "deletions": 90}, "files": [{"sha": "18404fff23e55f7b70682aa4b6410ccddaf0bc41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a15d344d0726a8cfbf93e723dae1500f6f66a2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a15d344d0726a8cfbf93e723dae1500f6f66a2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a15d344d0726a8cfbf93e723dae1500f6f66a2a", "patch": "@@ -1,3 +1,12 @@\n+2002-09-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* c-common.c (cpp_define_data_format): Remove __GCC_LITTLE_ENDIAN__,\n+\t__GCC_BIG_ENDIAN__, __TARGET_BITS_ORDER__, __TARGET_BYTES_ORDER__,\n+\t__TARGET_INT_WORDS_ORDER__, __TARGET_FLOAT_WORDS_ORDER__,\n+\t__TARGET_USES_VAX_F_FLOAT__, __TARGET_USES_VAX_D_FLOAT__,\n+\t__TARGET_USES_VAX_G_FLOAT__, __TARGET_USES_VAX_H_FLOAT__.\n+\t* doc/cpp.texi: Don't document them.\n+\n 2002-09-21  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.c (builtin_define_float_constants): Use real_format"}, {"sha": "4787f857faba2cbc88bc72f4460a479e6e2e8324", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 54, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a15d344d0726a8cfbf93e723dae1500f6f66a2a/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a15d344d0726a8cfbf93e723dae1500f6f66a2a/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=2a15d344d0726a8cfbf93e723dae1500f6f66a2a", "patch": "@@ -4693,87 +4693,34 @@ cpp_define_data_format (pfile)\n {\n   const char *format;\n \n-  /* Define endianness enumeration values.  */\n-  cpp_define (pfile, \"__GCC_LITTLE_ENDIAN__=0\");\n-  cpp_define (pfile, \"__GCC_BIG_ENDIAN__=1\");\n-\n   /* Define supported floating-point format enumeration values.  */\n   cpp_define (pfile, \"__UNKNOWN_FORMAT__=0\");\n   cpp_define (pfile, \"__IEEE_FORMAT__=1\");\n   cpp_define (pfile, \"__IBM_FORMAT__=2\");\n   cpp_define (pfile, \"__C4X_FORMAT__=3\");\n   cpp_define (pfile, \"__VAX_FORMAT__=4\");\n   \n-  /* Define target endianness:\n-       - bit order\n-       - byte order\n-       - word order in an integer that spans a multi-word\n-       - word order in a floating-poing that spans a multi-word  */\n-  if (BITS_BIG_ENDIAN)\n-    cpp_define (pfile, \"__TARGET_BITS_ORDER__=__GCC_BIG_ENDIAN__\");\n-  else\n-    cpp_define (pfile, \"__TARGET_BITS_ORDER__=__GCC_BIG_ENDIAN__\");\n-  if (BYTES_BIG_ENDIAN)\n-    cpp_define (pfile, \"__TARGET_BYTES_ORDER__=__GCC_BIG_ENDIAN__\");\n-  else\n-    cpp_define (pfile, \"__TARGET_BYTES_ORDER__=__GCC_LITTLE_ENDIAN__\");\n-  /* Define words order in a multi-word integer.  */\n-  if (WORDS_BIG_ENDIAN)\n-    cpp_define (pfile, \"__TARGET_INT_WORDS_ORDER__=__GCC_BIG_ENDIAN__\");\n-  else\n-    cpp_define (pfile, \"__TARGET_INT_WORDS_ORDER__=__GCC_LITTLE_ENDIAN__\");\n-  /* Define words order in a multi-word floating point.  */\n-  if (FLOAT_WORDS_BIG_ENDIAN)\n-    cpp_define (pfile, \"__TARGET_FLOAT_WORDS_ORDER__=__GCC_BIG_ENDIAN__\");\n-  else\n-    cpp_define (pfile, \"__TARGET_FLOAT_WORDS_ORDER__=__GCC_LITTLE_ENDIAN__\");\n-\n   switch (TARGET_FLOAT_FORMAT)\n     {\n     case UNKNOWN_FLOAT_FORMAT:\n       format = \"__UNKNOWN_FORMAT__\";\n       break;\n-\n     case IEEE_FLOAT_FORMAT:\n       format = \"__IEEE_FORMAT__\";\n       break;\n-\n     case VAX_FLOAT_FORMAT:\n       format = \"__VAX_FORMAT__\";\n-      cpp_define (pfile, \"__TARGET_USES_VAX_F_FLOAT__=1\");\n-#ifdef TARGET_G_FLOAT      \n-      if (TARGET_G_FLOAT)\n-        {\n-          cpp_define (pfile, \"__TARGET_USES_VAX_D_FLOAT__=0\");\n-          cpp_define (pfile, \"__TARGET_USES_VAX_G_FLOAT__=1\");\n-        }\n-      else\n-        {\n-          cpp_define (pfile, \"__TARGET_USES_VAX_D_FLOAT__=1\");\n-          cpp_define (pfile, \"__TARGET_USES_VAX_G_FLOAT__=0\");\n-        }\n-#endif       \n-      cpp_define (pfile, \"__TARGET_USES_VAX_H_FLOAT__=1\");\n       break;\n-\n     case IBM_FLOAT_FORMAT:\n       format = \"__IBM_FORMAT__\";\n       break;\n-\n     case C4X_FLOAT_FORMAT:\n       format = \"__C4X_FORMAT__\";\n       break;\n-\n     default:\n       abort();\n     }\n-  if (TARGET_FLOAT_FORMAT != VAX_FLOAT_FORMAT)\n-    {\n-      cpp_define (pfile, \"__TARGET_USES_VAX_F_FLOAT__=0\");\n-      cpp_define (pfile, \"__TARGET_USES_VAX_D_FLOAT__=0\");\n-      cpp_define (pfile, \"__TARGET_USES_VAX_G_FLOAT__=0\");\n-      cpp_define (pfile, \"__TARGET_USES_VAX_H_FLOAT__=0\");\n-    }\n+\n   builtin_define_with_value (\"__GCC_FLOAT_FORMAT__\", format, 0);\n }\n "}, {"sha": "a3f69964aa73d27b89f34eaa56857a7f0b29eb85", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a15d344d0726a8cfbf93e723dae1500f6f66a2a/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a15d344d0726a8cfbf93e723dae1500f6f66a2a/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=2a15d344d0726a8cfbf93e723dae1500f6f66a2a", "patch": "@@ -2033,47 +2033,11 @@ This macro is defined, with value 1, if (and only if) the NeXT runtime\n runtime is used, this macro is not defined, so that you can use this\n macro to determine which runtime (NeXT or GNU) is being used.\n \n-@item __TARGET_BITS_ORDER__\n-This macro describes the target's bits order in a byte.  Its value is\n-@code{__GCC_LITTLE_ENDIAN__} or @code{__GCC_BIG_ENDIAN__}.\n-\n-@item __TARGET_BYTES_ORDER__\n-This macro is defined with value @code{__GCC_LITTLE_ENDIAN__} or\n-@code{__GCC_BIG_ENDIAN__} if the target's bytes order within a word\n-is little-endian or big-endian, respectively.\n-\n-@item __TARGET_INT_WORDS_ORDER__\n-This macro is defined with value @code{__GCC_LITTLE_ENDIAN__} or\n-@code{__GCC_BIG_ENDIAN__} if the target's words order within a\n-multi-word integer datum is little-endian or big-endian, respectively.\n-\n-@item __TARGET_FLOAT_WORDS_ORDER__\n-This macro is defined with value @code{__GCC_LITTLE_ENDIAN__} or\n-@code{__GCC_BIG_ENDIAN__} if the target's words order within a\n-multi-word floating-point datum is little-endian or big-endian, respectively.\n-\n @item __TARGET_FLOAT_FORMAT__\n This macro is defined to describe the floating-point format used by the\n target.  It has value in the set comprised of:\n @code{__UNKNOWN_FORMAT__}, @code{__IEEE_FORMAT__},\n @code{__IBM_FORMAT__}, @code{__C4X_FORMAT__} and @code{__VAX_FORMAT__}.\n-\n-@item __TARGET_USES_VAX_F_FLOAT__\n-This macro is defined with value 1 if the target uses the VAX F-format\n-for the single precision floating-point data type; else if has value 0.\n-\n-@item __TARGET_USES_VAX_D_FLOAT__\n-@item __TARGET_USES_VAX_G_FLOAT__\n-These macros are always defined, with values 0 or 1.  If\n-@code{__TARGET_FLOAT_FORMAT__} is @code{__VAX_FORMAT__} then they have\n-mutually exclusive values; else both have value 0.  Non-zero\n-@code{__TARGET_USES_VAX_D_FLOAT__} means the target uses the VAX\n-D-format for the double precision floating-point data type; non-zero\n-@code{__TARGET_USES_VAX_G_FLOAT__} means the VAX G-format is used.\n-\n-@item __TARGET_USES_VAX_H_FLOAT__\n-When non-zero, the target uses the VAX H-format for the extended\n-precision floating-point data type.\n @end table\n \n @node System-specific Predefined Macros"}]}