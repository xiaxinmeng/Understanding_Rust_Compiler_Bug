{"sha": "e0e49f434423def63312084b04ea0e60e7787e27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBlNDlmNDM0NDIzZGVmNjMzMTIwODRiMDRlYTBlNjBlNzc4N2UyNw==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-01-27T11:04:19Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-01-27T11:04:19Z"}, "message": "Add a recursive function test case\n\nThis greatest common divisor function demonstrates that recursion is\nworking.", "tree": {"sha": "927ab948abc80e3a3ef08af35ad1c80beed0b5e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/927ab948abc80e3a3ef08af35ad1c80beed0b5e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0e49f434423def63312084b04ea0e60e7787e27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0e49f434423def63312084b04ea0e60e7787e27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0e49f434423def63312084b04ea0e60e7787e27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0e49f434423def63312084b04ea0e60e7787e27/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "244c2d2ea1a5a69ab6f7f50902512c1a7daa29c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/244c2d2ea1a5a69ab6f7f50902512c1a7daa29c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/244c2d2ea1a5a69ab6f7f50902512c1a7daa29c9"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "89c21d09449de7f1d93254089a60a411df3e3bfb", "filename": "gcc/testsuite/rust.test/compilable/recursive_fn1.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0e49f434423def63312084b04ea0e60e7787e27/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Frecursive_fn1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0e49f434423def63312084b04ea0e60e7787e27/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Frecursive_fn1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Frecursive_fn1.rs?ref=e0e49f434423def63312084b04ea0e60e7787e27", "patch": "@@ -0,0 +1,11 @@\n+fn gcd(x: i32, y: i32) -> i32 {\n+    if y == 0 {\n+        x\n+    } else {\n+        gcd(y, x % y)\n+    }\n+}\n+\n+fn main() {\n+    let a = gcd(100, 5);\n+}"}]}