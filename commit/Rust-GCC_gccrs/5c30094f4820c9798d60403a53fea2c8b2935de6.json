{"sha": "5c30094f4820c9798d60403a53fea2c8b2935de6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMzMDA5NGY0ODIwYzk3OThkNjA0MDNhNTNmZWEyYzhiMjkzNWRlNg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2012-03-12T15:35:56Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2012-03-12T15:35:56Z"}, "message": "Remove obsolete Tru64 UNIX V5.1B support\n\n\tlibstdc++-v3:\n\t* configure.host: Remove osf* handling.\n\t* config/os/osf: Remove.\n\t* doc/xml/manual/using.xml: Remove OSF reference.\n\n\t* testsuite/18_support/pthread_guard.cc: Remove alpha*-*-osf*\n\thandling.\n\t* testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc:\n\tLikewise.\n\t* testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/pthread18185.cc: Likewise.\n\t* testsuite/21_strings/basic_string/pthread4.cc: Likewise.\n\t* testsuite/22_locale/locale/cons/12658_thread-1.cc: Likewise.\n\t* testsuite/22_locale/locale/cons/12658_thread-2.cc: Likewise.\n\t* testsuite/23_containers/list/pthread1.cc: Likewise.\n\t* testsuite/23_containers/list/pthread5.cc: Likewise.\n\t* testsuite/23_containers/map/pthread6.cc: Likewise.\n\t* testsuite/23_containers/vector/debug/multithreaded_swap.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_ofstream/pthread2.cc: Likewise.\n\t* testsuite/27_io/basic_ostringstream/pthread3.cc: Likewise.\n\t* testsuite/30_threads/async/42819.cc: Likewise.\n\n\t* libstdc++-v3/testsuite/30_threads/async/49668.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/async/any.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/async/async.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/async/launch.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/async/sync.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/call_once/39909.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/call_once/49668.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/call_once/call_once1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/condition_variable/cons/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/condition_variable/members/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/condition_variable/members/2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/condition_variable/native_handle/typesizes.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/condition_variable_any/50862.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/condition_variable_any/cons/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/condition_variable_any/members/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/condition_variable_any/members/2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/future/cons/move.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/future/members/45133.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/future/members/get.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/future/members/get2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/future/members/share.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/future/members/valid.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/future/members/wait.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/future/members/wait_for.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/future/members/wait_until.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/lock/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/lock/2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/lock/3.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/lock/4.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/lock_guard/cons/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/mutex/cons/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/mutex/dest/destructor_locked.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/mutex/lock/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/mutex/native_handle/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/mutex/native_handle/typesizes.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/mutex/try_lock/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/mutex/try_lock/2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/mutex/unlock/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/49668.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/3.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/alloc.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/move.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/move_assign.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/get_future.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/get_future2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke3.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke4.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke5.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/reset.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/reset2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/swap.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/valid.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/cons/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/cons/alloc.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/cons/move.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/cons/move_assign.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/members/get_future.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/members/get_future2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/members/set_exception.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/members/set_exception2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/members/set_value.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/members/set_value2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/members/set_value3.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/promise/members/swap.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/cons/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/dest/destructor_locked.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/lock/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/native_handle/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/native_handle/typesizes.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/try_lock/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/try_lock/2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/unlock/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/cons/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/dest/destructor_locked.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/lock/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/lock/2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/native_handle/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/native_handle/typesizes.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock/2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_for/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_for/2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_for/3.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_until/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_until/2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/unlock/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/shared_future/cons/move.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/shared_future/members/45133.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/shared_future/members/get.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/shared_future/members/get2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/shared_future/members/valid.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/shared_future/members/wait.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/shared_future/members/wait_for.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/shared_future/members/wait_until.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/this_thread/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/this_thread/2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/this_thread/3.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/this_thread/4.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/3.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/4.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/49668.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/5.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/6.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/7.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/8.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/9.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/cons/moveable.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/members/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/members/2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/members/3.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/members/4.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/members/5.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/members/hardware_concurrency.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/thread/swap/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/cons/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/dest/destructor_locked.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/lock/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/native_handle/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/native_handle/typesizes.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock/2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock_for/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock_for/2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock_for/3.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock_until/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock_until/2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/timed_mutex/unlock/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/try_lock/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/try_lock/2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/try_lock/3.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/try_lock/4.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/3.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/4.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/5.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/6.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/locking/1.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/locking/2.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/locking/3.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/locking/4.cc: Likewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/modifiers/1.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/30_threads/unique_lock/modifiers/2.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/ext/rope/pthread7-rope.cc: Likewise.\n\t* libstdc++-v3/testsuite/tr1/2_general_utilities/shared_ptr/thread/default_weaktoshared.cc:\n\tLikewise.\n\t* libstdc++-v3/testsuite/tr1/2_general_utilities/shared_ptr/thread/mutex_weaktoshared.cc: Likewise.\n\n\tlibobjc:\n\t* configure.ac (enable_objc_gc): Remove alpha*-dec-osf* handling.\n\t* configure: Regenerate.\n\n\t* thr.c (_XOPEN_SOURCE): Define unconditionally.\n\n\tlibjava:\n\t* configure.ac (alpha*-dec-osf*): Remove.\n\t* configure: Regenerate.\n\t* configure.host (alpha*-dec-osf*): Remove.\n\n\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc (setOption): Use\n\tIPV6_MULTICAST_IF unconditionally.\n\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc (setOption):\n\tLikewise.\n\t* gnu/java/net/natPlainSocketImplPosix.cc\n\t(gnu::java::net::PlainSocketImpl::accept): Use ::accept instead of\n\t_Jv_accept.\n\t* include/posix-signal.h [__alpha__ && __osf__]: Remove.\n\t* include/posix.h (_POSIX_PII_SOCKET): Don't define.\n\t(_Jv_accept): Remove.\n\n\t* java/io/File.java (File._access): Rename to access.\n\tChange callers.\n\t(File._stat): Likewise.\n\t* java/io/File.h: Regenerate.\n\t* classpath/lib/java/io/File.class: Regenerate.\n\t* java/io/natFilePosix.cc (java::io::File::_access): Rename to\n\taccess.\n\t(java::io::File::_stat): Rename to stat.\n\t* java/io/natFileWin32.cc: Likewise.\n\n\t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation):\n\tRemove alpha*-dec-osf* handling.\n\t* testsuite/libjava.jvmti/jvmti-interp.exp\n\t(gcj_jni_compile_c_to_so): Likewise.\n\t* testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_compile_cxx_to_o):\n\tLikewise.\n\n\tlibitm:\n\t* configure.tgt (*-*-osf*): Remove.\n\t* configure: Regenerate.\n\n\tlibgomp:\n\t* configure.tgt (alpha*-dec-osf*): Remove.\n\n\t* config/osf/sem.h: Remove.\n\t* config/posix/lock.c (_XOPEN_SOURCE): Define unconditionally.\n\n\tlibgfortran:\n\t* configure.ac: Remove Tru64 reference.\n\t* acinclude.m4 (LIBGFOR_GTHREAD_WEAK): Remove alpha*-dec-osf*\n\thandling.\n\t* configure: Regenerate.\n\t* intrinsics/c99_functions.c [__osf__]: Remove.\n\n\tlibgcc:\n\t* config.host: Remove alpha*-dec-osf5.1* handling.\n\t* config/alpha/gthr-posix.c: Remove.\n\t* config/alpha/libgcc-osf5.ver: Remove.\n\t* config/alpha/osf5-unwind.h: Remove.\n\t* config/alpha/t-osf-pthread: Remove.\n\t* config/alpha/t-slibgcc-osf: Remove.\n\t* config/t-crtfm (crtfastmath.o): Remove -frandom-seed.\n\t* gthr-posix.h [!_REENTRANT && __osf__] (_REENTRANT): Don't define.\n\t[__osf__ && _PTHREAD_USE_MANGLED_NAMES_]: Remove.\n\t* mkmap-flat.awk: Remove osf_export handling.\n\n\tgnattools:\n\t* configure.ac: Remove alpha*-dec-osf* handling.\n\t* configure: Regenerate.\n\n\tgcc/testsuite:\n\t* g++.dg/abi/rtti3.C: Remove alpha*-dec-osf* handling.\n\t* g++.dg/abi/thunk4.C: Likewise.\n\t* g++.dg/cdce3.C: Don't skip on*-dec-osf5*.\n\tAdapt line numbers.\n\t* g++.dg/compat/struct-layout-1_generate.c: Remove alpha*-dec-osf*\n\thandling.\n\t* g++.dg/cpp0x/constexpr-rom.C: Likewise.\n\t* g++.dg/eh/spbp.C: Likewise.\n\t* g++.dg/ext/label13.C: Likewise.\n\t* g++.dg/guality/guality.exp: Likewise.\n\t* g++.dg/other/anon5.C: Likewise.\n\t* g++.dg/other/pragma-ep-1.C: Remove.\n\t* g++.dg/warn/miss-format-1.C: Remove alpha*-dec-osf* handling.\n\t* g++.dg/warn/pr31246.C: Likewise.\n\t* g++.dg/warn/weak1.C: Likewise.\n\t* g++.old-deja/g++.eh/badalloc1.C: Likewise.\n\t* g++.old-deja/g++.ext/attrib5.C: Likewise.\n\t* gcc.c-torture/compile/limits-declparen.c: Likewise.\n\t* gcc.c-torture/compile/limits-pointer.c: Likewise.\n\t* gcc.c-torture/execute/20001229-1.c: Remove __osf__ handling.\n\t* gcc.dg/attr-weakref-1.c: Remove alpha*-dec-osf* handling.\n\t* gcc.dg/c99-stdint-6.c: Remove alpha*-dec-osf5* handling.\n\t* gcc.dg/c99-tgmath-1.c: Likewise.\n\t* gcc.dg/c99-tgmath-2.c: Likewise.\n\t* gcc.dg/c99-tgmath-3.c: Likewise.\n\t* gcc.dg/c99-tgmath-4.c: Likewise.\n\t* gcc.dg/compat/struct-layout-1_generate.c: Remove alpha*-dec-osf*\n\thandling.\n\t* gcc.dg/debug/pr49032.c: Likewise.\n\t* gcc.dg/guality/guality.exp: Likewise.\n\t* gcc.dg/intmax_t-1.c: Likewise.\n\t* gcc.dg/pr48616.c: Likewise.\n\t* gcc.dg/pragma-ep-1.c: Remove.\n\t* gcc.dg/pragma-ep-2.c: Remove.\n\t* gcc.dg/pragma-ep-3.c: Remove.\n\t* gcc.dg/torture/pr47917.c: Remove alpha*-dec-osf5* handling.\n\t* gcc.dg/tree-ssa/pr42585.c: Remove alpha*-dec-osf* handling.\n\t* gcc.misc-tests/gcov-14.c: Likewise.\n\t* gfortran.dg/guality/guality.exp: Likewise.\n\t* lib/target-supports.exp (check_weak_available): Likewise.\n\t(add_options_for_tls): Likewise.\n\t(check_ascii_locale_available): Likewise.\n\t* obj-c++.dg/dwarf-2.mm: Likewise.\n\t* objc.dg/dwarf-1.m: Likewise.\n\t* objc.dg/dwarf-2.m: Likewise.\n\n\tgcc/c-family:\n\t* c-cppbuiltin.c (c_cpp_builtins): Remove #pragma extern_prefix\n\thandling.\n\t* c-pragma.c (handle_pragma_extern_prefix): Remove.\n\t(init_pragma): Don't register extern_prefix.\n\n\tgcc/po:\n\t* EXCLUDES (mips-tdump.c, mips-tfile.c): Remove.\n\n\tgcc:\n\t* config.gcc (alpha*-dec-osf5.1*): Remove.\n\t* config.host (alpha*-dec-osf*): Remove.\n\t* configure.ac (*-*-osf*): Remove.\n\t(alpha*-dec-osf*): Remove.\n\t* configure: Regenerate.\n\n\t* config/alpha/host-osf.c, config/alpha/osf5.h,\n\tconfig/alpha/osf5.opt, config/alpha/va_list.h, config/alpha/x-osf:\n\tRemove.\n\n\t* config/alpha/alpha.h (TARGET_LD_BUGGY_LDGP): Remove.\n\t* config/alpha/alpha.c (struct machine_function): Update comment.\n\t(alpha_start_function): Remove Tru64 UNIX as handling for\n\tmax_frame_size.\n\t* config/alpha/alpha.md (\"exception_receiver\"): Remove\n\tTARGET_LD_BUGGY_LDGP.\n\t(\"*exception_receiver_2\"): Likewise.\n\t* except.c (finish_eh_generation): Remove Tru64 reference.\n\t* ginclude/stdarg.h [_HIDDEN_VA_LIST]: Don't undef _VA_LIST.\n\t* system.h (TARGET_HANDLE_PRAGMA_EXTERN_PREFIX): Poison.\n\t* target.def (handle_pragma_extern_prefix): Remove.\n\n\t* Makefile.in (mips-tfile.o-warn): Remove.\n\t(ALL_HOST_BACKEND_OBJS): Remove mips-tfile.o, mips-tdump.o.\n\t(mips-tfile, mips-tfile.o, mips-tdump, mips-tdump.o): Remove.\n\t* mips-tdump.c, mips-tfile.c: Remove.\n\n\t* doc/extend.texi (Symbol-Renaming Pragmas): Remove #pragma\n\textern_prefix.\n\t* doc/install.texi (Binaries): Remove Tru64 UNIX reference.\n\t(Specific, alpha*-dec-osf5.1): Note removal.\n\t* doc/tm.texi.in (Misc, TARGET_HANDLE_PRAGMA_EXTERN_PREFIX):\n\tRemove.\n\t* doc/tm.texi: Regenerate.\n\t* doc/trouble.texi (Cross-Compiler Problems): Remove.\n\n\tgcc/ada:\n\t* gcc-interface/Makefile.in (alpha*-dec-osf*): Remove.\n\t* a-intnam-tru64.ads, mlib-tgt-specific-tru64.adb,\n\ts-mastop-tru64.adb, s-osinte-tru64.adb, s-osinte-tru64.ads,\n\ts-taprop-tru64.adb, s-tasinf-tru64.ads, s-taspri-tru64.ads,\n\tsystem-tru64.ads: Remove.\n\n\t* adaint.c (__gnat_number_of_cpus) [__alpha__ && __osf__]:\n\tRemove.\n\t[IS_CROSS] [!(__alpha__ && __osf__)]: Remove.\n\t* env.c [__alpha__ && __osf__]: Remove.\n\t* gsocket.h (_OSF_SOURCE): Remove.\n\t(HAVE_THREAD_SAFE_GETxxxBYyyy) [__osf__]: Remove.\n\t* init.c [__alpha__ && __osf__]: Remove.\n\t* link.c [__osf__]: Remove.\n\t* s-oscons-tmplt.c [__alpha__ && __osf__]: Remove.\n\t[__osf__ && !_SS_MAXSIZE]: Remove.\n\t* sysdep.c [__osf__]: Remove.\n\t* terminals.c [__alpha__ && __osf__]: Remove.\n\t[OSF1]: Remove.\n\n\t* g-traceb.ads: Remove Tru64 reference.\n\t* g-trasym.ads: Likewise.\n\t* gnat_ugn.texi (Linking a Mixed C++ & Ada Program): Likewise.\n\t(Summary of Run-Time Configurations): Likewise.\n\t* memtrack.adb: Likewise.\n\n\tfixincludes:\n\t* inclhack.def (alpha___extern_prefix): Remove.\n\t(alpha___extern_prefix_standards): Remove.\n\t(alpha___extern_prefix_sys_stat): Remove.\n\t(alpha_bad_lval): Remove.\n\t(alpha_pthread): Remove.\n\t(alpha_pthread_gcc): Remove.\n\t(alpha_pthread_init): Remove.\n\t* fixincl.x: Regenerate.\n\t* tests/base/pthread.h [ALPHA_PTHREAD_CHECK]: Remove.\n\t[ALPHA_PTHREAD_GCC_CHECK]: Remove.\n\t[ALPHA_PTHREAD_INIT_CHECK]: Remove.\n\t* tests/base/standards.h: Remove.\n\t* tests/base/sys/stat.h [ALPHA___EXTERN_PREFIX_SYS_STAT_CHECK]:\n\tRemove.\n\t* tests/base/testing.h [ALPHA___EXTERN_PREFIX_CHECK]: Remove.\n\t[ALPHA_BAD_LVAL_CHECK]: Remove.\n\n\tcontrib:\n\t* config-list.mk (LIST): Remove alpha-dec-osf5.1.\n\n\tconfig:\n\t* weakref.m4 (GCC_CHECK_ELF_STYLE_WEAKREF): Remove\n\talpha*-dec-osf*.\n\n\ttoplevel:\n\t* MAINTAINERS (OS Port Maintainers): Remove osf.\n\t* configure.ac (enable_libgomp): Remove *-*-osf*.\n\t(with_stabs): Remove alpha*-*-osf*.\n\t* configure: Regenerate.\n\nFrom-SVN: r185240", "tree": {"sha": "a3fe9558870fae03ba4adf923e24cdedd6074642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3fe9558870fae03ba4adf923e24cdedd6074642"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c30094f4820c9798d60403a53fea2c8b2935de6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c30094f4820c9798d60403a53fea2c8b2935de6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c30094f4820c9798d60403a53fea2c8b2935de6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c30094f4820c9798d60403a53fea2c8b2935de6/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "370d8a3d6bd6f72598eed3474d2817b1af77d961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370d8a3d6bd6f72598eed3474d2817b1af77d961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/370d8a3d6bd6f72598eed3474d2817b1af77d961"}], "stats": {"total": 14542, "additions": 993, "deletions": 13549}, "files": [{"sha": "72f713b40fea17724a94c268abc560aff1a100da", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,10 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* MAINTAINERS (OS Port Maintainers): Remove osf.\n+\t* configure.ac (enable_libgomp): Remove *-*-osf*.\n+\t(with_stabs): Remove alpha*-*-osf*.\n+\t* configure: Regenerate.\n+\n 2012-03-05  Tristan Gingold  <gingold@adacore.com>\n \n \t* configure.ac: Enable gdb and readline for ia64*-*-*vms*."}, {"sha": "1d64cc718ff339829d161d7e0f4bc5855deeb123", "filename": "MAINTAINERS", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/MAINTAINERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/MAINTAINERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/MAINTAINERS?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -122,7 +122,7 @@ freebsd\t\t\tLoren J. Rittle\t\tljrittle@acm.org\n GNU/Hurd\t\tThomas Schwinge\t\tthomas@schwinge.name\n hpux\t\t\tJohn David Anglin\tdave.anglin@nrc-cnrc.gc.ca\n hpux\t\t\tSteve Ellcey\t\tsje@cup.hp.com\n-irix, osf, solaris\tRainer Orth\t\tro@CeBiTec.Uni-Bielefeld.DE\n+irix, solaris\t\tRainer Orth\t\tro@CeBiTec.Uni-Bielefeld.DE\n netbsd\t\t\tJason Thorpe\t\tthorpej@netbsd.org\n netbsd\t\t\tKrister Walfridsson\tkrister.walfridsson@gmail.com\n sh-linux-gnu\t\tKaz Kojima\t\tkkojima@gcc.gnu.org"}, {"sha": "bfabcc0fb3c8f60581a07740537826c5594f5402", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,8 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* weakref.m4 (GCC_CHECK_ELF_STYLE_WEAKREF): Remove\n+\talpha*-dec-osf*.\n+\n 2012-01-22  Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/mh-interix: Remove as unneeded."}, {"sha": "ecb85672805882b330cac43e0fc12e7fe96aeec9", "filename": "config/weakref.m4", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/config%2Fweakref.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/config%2Fweakref.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fweakref.m4?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -38,7 +38,6 @@ int main ()\n }\n ]])], ac_cv_have_elf_style_weakref=yes, ac_cv_have_elf_style_weakref=no, [\n case \"${host}\" in\n-  alpha*-dec-osf*) ac_cv_have_elf_style_weakref=no ;;\n   *-apple-darwin[[89]]*) ac_cv_have_elf_style_weakref=no ;;\n   *) ac_cv_have_elf_style_weakref=yes;;\n esac])CFLAGS=\"$weakref_m4_saved_CFLAGS\"])"}, {"sha": "4fd82679aa8243502d564e126412635c3e84e9ee", "filename": "configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -3054,7 +3054,7 @@ if test x$enable_libgomp = x ; then\n \t;;\n     *-*-netbsd* | *-*-freebsd* | *-*-openbsd* | *-*-dragonfly*)\n \t;;\n-    *-*-solaris2* | *-*-irix6* | *-*-osf* | *-*-hpux11*)\n+    *-*-solaris2* | *-*-irix6* | *-*-hpux11*)\n \t;;\n     *-*-darwin* | *-*-aix*)\n \t;;\n@@ -6878,7 +6878,7 @@ if test x${with_stabs} = x ; then\n   case \"${target}\" in\n   mips*-*-irix[56]*)\n     ;;\n-  mips*-*-* | alpha*-*-osf*)\n+  mips*-*-*)\n     with_stabs=yes;\n     extra_host_args=\"${extra_host_args} --with-stabs\"\n     ;;"}, {"sha": "f6ab734a18ee57fe726d019d897ab38234c82b44", "filename": "configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -483,7 +483,7 @@ if test x$enable_libgomp = x ; then\n \t;;\n     *-*-netbsd* | *-*-freebsd* | *-*-openbsd* | *-*-dragonfly*)\n \t;;\n-    *-*-solaris2* | *-*-irix6* | *-*-osf* | *-*-hpux11*)\n+    *-*-solaris2* | *-*-irix6* | *-*-hpux11*)\n \t;;\n     *-*-darwin* | *-*-aix*)\n \t;;\n@@ -2336,7 +2336,7 @@ if test x${with_stabs} = x ; then\n   case \"${target}\" in\n   mips*-*-irix[[56]]*)\n     ;;\n-  mips*-*-* | alpha*-*-osf*)\n+  mips*-*-*)\n     with_stabs=yes;\n     extra_host_args=\"${extra_host_args} --with-stabs\"\n     ;;"}, {"sha": "2ad64573ca845a779f182e8213fe4b0ad17512dd", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,7 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config-list.mk (LIST): Remove alpha-dec-osf5.1.\n+\n 2012-03-02   Diego Novillo  <dnovillo@google.com>\n \n \t* testsuite-management/validate_failures.py (class TestResult): Fix"}, {"sha": "a198836d7fcdf0e1a79baebe9bbb19bd024a61b9", "filename": "contrib/config-list.mk", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/contrib%2Fconfig-list.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/contrib%2Fconfig-list.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fconfig-list.mk?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -12,8 +12,7 @@ TEST=all-gcc\n #\n # v850e1-elf is rejected by config.sub\n LIST = alpha-linux-gnu alpha-freebsd6 alpha-netbsd alpha-openbsd \\\n-  alpha-dec-osf5.1OPT-enable-obsolete alpha64-dec-vms alpha-dec-vms \\\n-  am33_2.0-linux \\\n+  alpha64-dec-vms alpha-dec-vms am33_2.0-linux \\\n   arm-wrs-vxworks arm-freebsd6 arm-netbsdelf arm-linux \\\n   arm-linux-androideabi arm-uclinux_eabi arm-ecos-elf arm-eabi \\\n   arm-symbianelf arm-rtems arm-elf arm-wince-pe avr-rtems avr-elf \\"}, {"sha": "14dd8a8175b9efb31e1a4d0fa2273653b465a24c", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,22 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* inclhack.def (alpha___extern_prefix): Remove.\n+\t(alpha___extern_prefix_standards): Remove.\n+\t(alpha___extern_prefix_sys_stat): Remove.\n+\t(alpha_bad_lval): Remove.\n+\t(alpha_pthread): Remove.\n+\t(alpha_pthread_gcc): Remove.\n+\t(alpha_pthread_init): Remove.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/pthread.h [ALPHA_PTHREAD_CHECK]: Remove.\n+\t[ALPHA_PTHREAD_GCC_CHECK]: Remove.\n+\t[ALPHA_PTHREAD_INIT_CHECK]: Remove.\n+\t* tests/base/standards.h: Remove.\n+\t* tests/base/sys/stat.h [ALPHA___EXTERN_PREFIX_SYS_STAT_CHECK]:\n+\tRemove.\n+\t* tests/base/testing.h [ALPHA___EXTERN_PREFIX_CHECK]: Remove.\n+\t[ALPHA_BAD_LVAL_CHECK]: Remove.\n+\n 2012-03-12  Tristan Gingold  <gingold@adacore.com>\n \n \t* inclhack.def (vms_use_quoted_include,vms_add_missing_braces)"}, {"sha": "57bc488ea56cb27fdf8a1356f0e1713dcfd3dfb9", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 5, "deletions": 314, "changes": 319, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  March 12, 2012 at 10:19:44 AM by AutoGen 5.11.1\n+ * It has been AutoGen-ed  Monday March 12, 2012 at 04:25:19 PM MET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Mar 12 10:19:44 CET 2012\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Mar 12 16:25:19 MET 2012\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 230 fixup descriptions.\n+ * This file contains 223 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -1025,118 +1025,6 @@ static const char* apzAlpha___AssertPatch[] = {\n     \"__assert(const char *, const char *, int)\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Alpha___Extern_Prefix fix\n- */\n-tSCC zAlpha___Extern_PrefixName[] =\n-     \"alpha___extern_prefix\";\n-\n-/*\n- *  File name selection pattern\n- */\n-#define zAlpha___Extern_PrefixList (char*)NULL\n-/*\n- *  Machine/OS name selection pattern\n- */\n-tSCC* apzAlpha___Extern_PrefixMachs[] = {\n-        \"alpha*-dec-osf*\",\n-        (const char*)NULL };\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zAlpha___Extern_PrefixSelect0[] =\n-       \"(.*)(defined\\\\(__DECC\\\\)|def[ \\t]*__DECC)[ \\t]*\\n\\\n-(#[ \\t]*pragma[ \\t]*extern_prefix.*)\";\n-\n-#define    ALPHA___EXTERN_PREFIX_TEST_CT  1\n-static tTestDesc aAlpha___Extern_PrefixTests[] = {\n-  { TT_EGREP,    zAlpha___Extern_PrefixSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Alpha___Extern_Prefix\n- */\n-static const char* apzAlpha___Extern_PrefixPatch[] = {\n-    \"format\",\n-    \"%1 (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\\n\\\n-%3\",\n-    (char*)NULL };\n-\n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Alpha___Extern_Prefix_Standards fix\n- */\n-tSCC zAlpha___Extern_Prefix_StandardsName[] =\n-     \"alpha___extern_prefix_standards\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zAlpha___Extern_Prefix_StandardsList[] =\n-  \"standards.h\\0\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-tSCC* apzAlpha___Extern_Prefix_StandardsMachs[] = {\n-        \"alpha*-dec-osf*\",\n-        (const char*)NULL };\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zAlpha___Extern_Prefix_StandardsSelect0[] =\n-       \".*!defined\\\\(_LIBC_POLLUTION_H_\\\\) && !defined\\\\(__DECC\\\\)\";\n-\n-#define    ALPHA___EXTERN_PREFIX_STANDARDS_TEST_CT  1\n-static tTestDesc aAlpha___Extern_Prefix_StandardsTests[] = {\n-  { TT_EGREP,    zAlpha___Extern_Prefix_StandardsSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Alpha___Extern_Prefix_Standards\n- */\n-static const char* apzAlpha___Extern_Prefix_StandardsPatch[] = {\n-    \"format\",\n-    \"%0 && !defined(__PRAGMA_EXTERN_PREFIX)\",\n-    (char*)NULL };\n-\n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Alpha___Extern_Prefix_Sys_Stat fix\n- */\n-tSCC zAlpha___Extern_Prefix_Sys_StatName[] =\n-     \"alpha___extern_prefix_sys_stat\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zAlpha___Extern_Prefix_Sys_StatList[] =\n-  \"sys/stat.h\\0sys/mount.h\\0\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-tSCC* apzAlpha___Extern_Prefix_Sys_StatMachs[] = {\n-        \"alpha*-dec-osf5*\",\n-        (const char*)NULL };\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zAlpha___Extern_Prefix_Sys_StatSelect0[] =\n-       \"#[ \\t]*if[ \\t]*defined\\\\(__DECC\\\\)\";\n-\n-#define    ALPHA___EXTERN_PREFIX_SYS_STAT_TEST_CT  1\n-static tTestDesc aAlpha___Extern_Prefix_Sys_StatTests[] = {\n-  { TT_EGREP,    zAlpha___Extern_Prefix_Sys_StatSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Alpha___Extern_Prefix_Sys_Stat\n- */\n-static const char* apzAlpha___Extern_Prefix_Sys_StatPatch[] = {\n-    \"format\",\n-    \"%0 || defined(__PRAGMA_EXTERN_PREFIX)\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Alpha_Assert fix\n@@ -1172,41 +1060,6 @@ static const char* apzAlpha_AssertPatch[] = {\n     \"%1(EX)\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Alpha_Bad_Lval fix\n- */\n-tSCC zAlpha_Bad_LvalName[] =\n-     \"alpha_bad_lval\";\n-\n-/*\n- *  File name selection pattern\n- */\n-#define zAlpha_Bad_LvalList (char*)NULL\n-/*\n- *  Machine/OS name selection pattern\n- */\n-tSCC* apzAlpha_Bad_LvalMachs[] = {\n-        \"alpha*-dec-osf*\",\n-        (const char*)NULL };\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zAlpha_Bad_LvalSelect0[] =\n-       \"^[ \\t]*#[ \\t]*pragma[ \\t]+extern_prefix\";\n-\n-#define    ALPHA_BAD_LVAL_TEST_CT  1\n-static tTestDesc aAlpha_Bad_LvalTests[] = {\n-  { TT_EGREP,    zAlpha_Bad_LvalSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Alpha_Bad_Lval\n- */\n-static const char* apzAlpha_Bad_LvalPatch[] = { sed_cmd_z,\n-    \"-e\", \"s/^[ \\t]*#[ \\t]*define[ \\t][ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\\\\(_.*\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Alpha_Getopt fix\n@@ -1312,126 +1165,6 @@ static const char* apzAlpha_ParensPatch[] = {\n     \"#ifndef __mips64\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Alpha_Pthread fix\n- */\n-tSCC zAlpha_PthreadName[] =\n-     \"alpha_pthread\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zAlpha_PthreadList[] =\n-  \"pthread.h\\0\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-tSCC* apzAlpha_PthreadMachs[] = {\n-        \"alpha*-dec-osf*\",\n-        (const char*)NULL };\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zAlpha_PthreadSelect0[] =\n-       \"((#[ \\t]*if)([ \\t]*defined[ \\t]*\\\\(_PTHREAD_ENV_DECC\\\\)|def _PTHREAD_ENV_DECC)(.*))\\n\\\n-(#[ \\t]*define _PTHREAD_USE_PTDNAM_)\";\n-\n-#define    ALPHA_PTHREAD_TEST_CT  1\n-static tTestDesc aAlpha_PthreadTests[] = {\n-  { TT_EGREP,    zAlpha_PthreadSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Alpha_Pthread\n- */\n-static const char* apzAlpha_PthreadPatch[] = {\n-    \"format\",\n-    \"%2 defined (_PTHREAD_ENV_DECC)%4 || defined (__PRAGMA_EXTERN_PREFIX)\\n\\\n-%5\",\n-    (char*)NULL };\n-\n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Alpha_Pthread_Gcc fix\n- */\n-tSCC zAlpha_Pthread_GccName[] =\n-     \"alpha_pthread_gcc\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zAlpha_Pthread_GccList[] =\n-  \"pthread.h\\0\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-tSCC* apzAlpha_Pthread_GccMachs[] = {\n-        \"alpha*-dec-osf*\",\n-        (const char*)NULL };\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zAlpha_Pthread_GccSelect0[] =\n-       \"#else\\n\\\n-# error <pthread.h>: unrecognized compiler.\";\n-\n-#define    ALPHA_PTHREAD_GCC_TEST_CT  1\n-static tTestDesc aAlpha_Pthread_GccTests[] = {\n-  { TT_EGREP,    zAlpha_Pthread_GccSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Alpha_Pthread_Gcc\n- */\n-static const char* apzAlpha_Pthread_GccPatch[] = {\n-    \"format\",\n-    \"#elif defined (__GNUC__)\\n\\\n-# define _PTHREAD_ENV_GCC\\n\\\n-%0\",\n-    (char*)NULL };\n-\n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Alpha_Pthread_Init fix\n- */\n-tSCC zAlpha_Pthread_InitName[] =\n-     \"alpha_pthread_init\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zAlpha_Pthread_InitList[] =\n-  \"pthread.h\\0\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-tSCC* apzAlpha_Pthread_InitMachs[] = {\n-        \"alpha*-dec-osf*\",\n-        (const char*)NULL };\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zAlpha_Pthread_InitSelect0[] =\n-       \" \\\\* @\\\\(#\\\\).RCSfile: pthread\\\\.h,v \\\\$ .Revision: 1\\\\.1\\\\.33\\\\.21 \\\\$ \\\\(DEC\\\\) .Date: 2000/08/15 15:30:13 \\\\$\";\n-\n-#define    ALPHA_PTHREAD_INIT_TEST_CT  1\n-static tTestDesc aAlpha_Pthread_InitTests[] = {\n-  { TT_EGREP,    zAlpha_Pthread_InitSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Alpha_Pthread_Init\n- */\n-static const char* apzAlpha_Pthread_InitPatch[] = { sed_cmd_z,\n-    \"-e\", \"s@MVALID\\\\(.*\\\\)A}@MVALID\\\\1A, 0, 0, 0, 0, 0, 0 }@\\n\\\n-s@MVALID\\\\(.*\\\\)_}@MVALID\\\\1_, 0, 0, 0, 0 }@\\n\\\n-s@CVALID\\\\(.*\\\\)A}@CVALID\\\\1A, 0, 0, 0, 0 }@\\n\\\n-s@CVALID\\\\(.*\\\\)_}@CVALID\\\\1_, 0, 0 }@\\n\\\n-s@WVALID\\\\(.*\\\\)A}@WVALID\\\\1A, 0, 0, 0, 0, 0, 0, 0, 0, 0 }@\\n\\\n-s@WVALID\\\\(.*\\\\)_}@WVALID\\\\1_, 0, 0, 0, 0, 0, 0, 0 }@\\n\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Alpha_Sbrk fix\n@@ -9335,9 +9068,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          272\n+#define REGEX_COUNT          265\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            230\n+#define FIX_COUNT            223\n \n /*\n  *  Enumerate the fixes\n@@ -9365,17 +9098,10 @@ typedef enum {\n     AIX_SYSWAIT_2_FIXIDX,\n     AIX_VOLATILE_FIXIDX,\n     ALPHA___ASSERT_FIXIDX,\n-    ALPHA___EXTERN_PREFIX_FIXIDX,\n-    ALPHA___EXTERN_PREFIX_STANDARDS_FIXIDX,\n-    ALPHA___EXTERN_PREFIX_SYS_STAT_FIXIDX,\n     ALPHA_ASSERT_FIXIDX,\n-    ALPHA_BAD_LVAL_FIXIDX,\n     ALPHA_GETOPT_FIXIDX,\n     ALPHA_IF_SEMICOLON_FIXIDX,\n     ALPHA_PARENS_FIXIDX,\n-    ALPHA_PTHREAD_FIXIDX,\n-    ALPHA_PTHREAD_GCC_FIXIDX,\n-    ALPHA_PTHREAD_INIT_FIXIDX,\n     ALPHA_SBRK_FIXIDX,\n     AVOID_BOOL_DEFINE_FIXIDX,\n     AVOID_BOOL_TYPE_FIXIDX,\n@@ -9686,31 +9412,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA___ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha___AssertTests,   apzAlpha___AssertPatch, 0 },\n \n-  {  zAlpha___Extern_PrefixName,    zAlpha___Extern_PrefixList,\n-     apzAlpha___Extern_PrefixMachs,\n-     ALPHA___EXTERN_PREFIX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aAlpha___Extern_PrefixTests,   apzAlpha___Extern_PrefixPatch, 0 },\n-\n-  {  zAlpha___Extern_Prefix_StandardsName,    zAlpha___Extern_Prefix_StandardsList,\n-     apzAlpha___Extern_Prefix_StandardsMachs,\n-     ALPHA___EXTERN_PREFIX_STANDARDS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aAlpha___Extern_Prefix_StandardsTests,   apzAlpha___Extern_Prefix_StandardsPatch, 0 },\n-\n-  {  zAlpha___Extern_Prefix_Sys_StatName,    zAlpha___Extern_Prefix_Sys_StatList,\n-     apzAlpha___Extern_Prefix_Sys_StatMachs,\n-     ALPHA___EXTERN_PREFIX_SYS_STAT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aAlpha___Extern_Prefix_Sys_StatTests,   apzAlpha___Extern_Prefix_Sys_StatPatch, 0 },\n-\n   {  zAlpha_AssertName,    zAlpha_AssertList,\n      apzAlpha_AssertMachs,\n      ALPHA_ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_AssertTests,   apzAlpha_AssertPatch, 0 },\n \n-  {  zAlpha_Bad_LvalName,    zAlpha_Bad_LvalList,\n-     apzAlpha_Bad_LvalMachs,\n-     ALPHA_BAD_LVAL_TEST_CT, FD_MACH_ONLY,\n-     aAlpha_Bad_LvalTests,   apzAlpha_Bad_LvalPatch, 0 },\n-\n   {  zAlpha_GetoptName,    zAlpha_GetoptList,\n      apzAlpha_GetoptMachs,\n      ALPHA_GETOPT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -9726,21 +9432,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA_PARENS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_ParensTests,   apzAlpha_ParensPatch, 0 },\n \n-  {  zAlpha_PthreadName,    zAlpha_PthreadList,\n-     apzAlpha_PthreadMachs,\n-     ALPHA_PTHREAD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aAlpha_PthreadTests,   apzAlpha_PthreadPatch, 0 },\n-\n-  {  zAlpha_Pthread_GccName,    zAlpha_Pthread_GccList,\n-     apzAlpha_Pthread_GccMachs,\n-     ALPHA_PTHREAD_GCC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aAlpha_Pthread_GccTests,   apzAlpha_Pthread_GccPatch, 0 },\n-\n-  {  zAlpha_Pthread_InitName,    zAlpha_Pthread_InitList,\n-     apzAlpha_Pthread_InitMachs,\n-     ALPHA_PTHREAD_INIT_TEST_CT, FD_MACH_ONLY,\n-     aAlpha_Pthread_InitTests,   apzAlpha_Pthread_InitPatch, 0 },\n-\n   {  zAlpha_SbrkName,    zAlpha_SbrkList,\n      apzAlpha_SbrkMachs,\n      ALPHA_SBRK_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "40b8d0fe5dd4a064a212715dfa30d80a0a50b829", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 0, "deletions": 181, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -585,63 +585,6 @@ fix = {\n };\n \n \n-/*\n- *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V4/5 headers.\n- */\n-fix = {\n-    hackname  = alpha___extern_prefix;\n-    select    = \"(.*)(defined\\\\(__DECC\\\\)|def[ \\t]*__DECC)[ \\t]*\\n\"\n-                \"(#[ \\t]*pragma[ \\t]*extern_prefix.*)\";\n-\n-    mach      = \"alpha*-dec-osf*\";\n-    c_fix     = format;\n-    c_fix_arg = \"%1 (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\\n%3\";\n-\n-    test_text = \"#ifdef  __DECC\\n\"\n-\t\t\"#pragma extern_prefix \\\"_P\\\"\\n\"\n-\t\t\"#   if defined(__DECC)\\n\"\n-\t\t\"#     pragma extern_prefix \\\"_E\\\"\\n\"\n-\t\t\"# if !defined(_LIBC_POLLUTION_H_) && defined(__DECC)\\n\"\n-\t\t\"#  pragma extern_prefix \\\"\\\"\";\n-};\n-\n-\n-/*\n- *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V4/5 <standards.h>.\n- */\n-fix = {\n-    hackname  = alpha___extern_prefix_standards;\n-    files     = standards.h;\n-    select    = \".*!defined\\\\(_LIBC_POLLUTION_H_\\\\) && !defined\\\\(__DECC\\\\)\";\n-\n-    mach      = \"alpha*-dec-osf*\";\n-    c_fix     = format;\n-    c_fix_arg = \"%0 && !defined(__PRAGMA_EXTERN_PREFIX)\";\n-\n-    test_text = \"#if (_ISO_C_SOURCE>=19990L) \"\n-                \"&& !defined(_LIBC_POLLUTION_H_) && !defined(__DECC)\";\n-};\n-\n-\n-/*\n- *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX V5 <sys/mount.h> and\n- *  <sys/stat.h>.  The tests for __DECC are special in various ways, so\n- *  alpha__extern_prefix cannot be used.\n- */\n-fix = {\n-    hackname  = alpha___extern_prefix_sys_stat;\n-    files     = sys/stat.h;\n-    files     = sys/mount.h;\n-    select    = \"#[ \\t]*if[ \\t]*defined\\\\(__DECC\\\\)\";\n-\n-    mach      = \"alpha*-dec-osf5*\";\n-    c_fix     = format;\n-    c_fix_arg = \"%0 || defined(__PRAGMA_EXTERN_PREFIX)\";\n-\n-    test_text = \"#   if defined(__DECC)\";\n-};\n-\n-\n /*\n  *  Fix assert macro in assert.h on Alpha OSF/1.\n  *  The superfluous int cast breaks C++.\n@@ -657,37 +600,6 @@ fix = {\n };\n \n \n-/*\n- *  Fix #defines under Alpha OSF/1:\n- *  The following files contain '#pragma extern_prefix \"_FOO\"' followed by\n- *  a '#define something(x,y,z) _FOOsomething(x,y,z)'.  The intent of these\n- *  statements is to reduce namespace pollution.  While these macros work\n- *  properly in most cases, they don't allow you to take a pointer to the\n- *  \"something\" being modified.  To get around this limitation, change these\n- *  statements to be of the form '#define something _FOOsomething'.\n- *\n- *  sed ain't egrep, lesson 2463:  sed can use self-referential\n- *  regular expressions.  In the substitute expression below,\n- *  \"\\\\1\" and \"\\\\2\" refer to subexpressions found earlier in the\n- *  same match.  So, we continue to use sed.  \"extern_prefix\" will\n- *  be a rare match anyway...\n- */\n-fix = {\n-    hackname = alpha_bad_lval;\n-\n-    select   = \"^[ \\t]*#[ \\t]*pragma[ \\t]+extern_prefix\";\n-    mach      = \"alpha*-dec-osf*\";\n-\n-    sed      =\n-        \"s/^[ \\t]*#[ \\t]*define[ \\t][ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\"\n-               \"\\\\(_.*\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\";\n-\n-    test_text = '#pragma extern_prefix \"_FOO\"'\"\\n\"\n-                \"#define something(x,y,z) _FOOsomething(x,y,z)\\n\"\n-                \"#define mumble _FOOmumble\";\n-};\n-\n-\n /*\n  *  Fix getopt declarations in stdio.h and stdlib.h on Alpha OSF/1 and AIX.\n  */\n@@ -728,99 +640,6 @@ fix = {\n };\n \n \n-/*\n- *  Obey __PRAGMA_EXTERN_PREFIX for Tru64 UNIX <pthread.h>.\n- */\n-fix = {\n-    hackname  = alpha_pthread;\n-    files     = pthread.h;\n-    select    = \"((#[ \\t]*if)([ \\t]*defined[ \\t]*\\\\(_PTHREAD_ENV_DECC\\\\)\"\n-                \"|def _PTHREAD_ENV_DECC)(.*))\\n\"\n-\t\t\"(#[ \\t]*define _PTHREAD_USE_PTDNAM_)\";\n-\n-    mach      = \"alpha*-dec-osf*\";\n-    c_fix     = format;\n-    c_fix_arg = \"%2 defined (_PTHREAD_ENV_DECC)%4 \"\n-                \"|| defined (__PRAGMA_EXTERN_PREFIX)\\n%5\";\n-\n-    test_text = \"#  if defined (_PTHREAD_ENV_DECC) \"\n-                      \"|| defined (_PTHREAD_ENV_EPCC)\\n\"\n-\t\t\"#   define _PTHREAD_USE_PTDNAM_\\n\"\n-\t\t\"#  endif\\n\"\n-\t\t\"#  ifdef _PTHREAD_ENV_DECC\\n\"\n-\t\t\"#   define _PTHREAD_USE_PTDNAM_\\n\"\n-\t\t\"#  endif\";\n-};\n-\n-\n-/*\n- *  Recognize GCC in Tru64 UNIX V5.1B <pthread.h>.\n- */\n-fix = {\n-    hackname  = alpha_pthread_gcc;\n-    files     = pthread.h;\n-    select    = \"#else\\n# error <pthread.h>: unrecognized compiler.\";\n-\n-    mach      = \"alpha*-dec-osf*\";\n-    c_fix     = format;\n-    c_fix_arg = \"#elif defined (__GNUC__)\\n\"\n-\t\t\"# define _PTHREAD_ENV_GCC\\n\"\n-    \t\t\"%0\";\n-\n-    test_text = \"# define _PTHREAD_ENV_INTELC\\n\"\n-\t\t\"#else\\n\"\n-\t\t\"# error <pthread.h>: unrecognized compiler.\\n\"\n-\t\t\"#endif\";\n-};\n-\n-\n-/*\n- * Compaq Tru64 v5.1 defines all of its PTHREAD_*_INITIALIZER macros\n- * incorrectly, specifying less fields in the initializers than are\n- * defined in the corresponding structure types.  Use of these macros\n- * in user code results in spurious warnings.\n- */\n-fix = {\n-    hackname  = alpha_pthread_init;\n-    files     = pthread.h;\n-    select    = ' \\* @\\(#\\).RCSfile: pthread\\.h,v \\$'\n-                ' .Revision: 1\\.1\\.33\\.21 \\$ \\(DEC\\)'\n-                ' .Date: 2000/08/15 15:30:13 \\$';\n-    mach      = \"alpha*-dec-osf*\";\n-    sed       = \"s@MVALID\\\\(.*\\\\)A}@MVALID\\\\1A, 0, 0, 0, 0, 0, 0 }@\\n\"\n-                \"s@MVALID\\\\(.*\\\\)_}@MVALID\\\\1_, 0, 0, 0, 0 }@\\n\"\n-                \"s@CVALID\\\\(.*\\\\)A}@CVALID\\\\1A, 0, 0, 0, 0 }@\\n\"\n-                \"s@CVALID\\\\(.*\\\\)_}@CVALID\\\\1_, 0, 0 }@\\n\"\n-                \"s@WVALID\\\\(.*\\\\)A}@WVALID\\\\1A, 0, 0, 0, 0, 0, 0, 0, 0, 0 }@\\n\"\n-                \"s@WVALID\\\\(.*\\\\)_}@WVALID\\\\1_, 0, 0, 0, 0, 0, 0, 0 }@\\n\";\n-    test_text = <<- _EOText_\n-\t/*\n-\t * @(#)_RCSfile: pthread.h,v $ _Revision: 1.1.33.21 $ (DEC) _Date: 2000/08/15 15:30:13 $\n-\t */\n-\t#ifndef _PTHREAD_NOMETER_STATIC\n-\t# define PTHREAD_MUTEX_INITIALIZER \\\n-\t    {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA}\n-\t# define PTHREAD_COND_INITIALIZER \\\n-\t    {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA}\n-\t# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_) \\\n-\t    {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_}\n-\t# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_) \\\n-\t    {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_}\n-\t#else\n-\t# define PTHREAD_MUTEX_INITIALIZER {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA}\n-\t# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_) \\\n-\t    {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_}\n-\t# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_) \\\n-\t    {0, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_}\n-\t#endif\n-\n-\t#define PTHREAD_RWLOCK_INITIALIZER {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA}\n-\t#define PTHREAD_RWLOCK_INITWITHNAME_NP(_n_,_a_) \\\n-\t        {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA, _n_, _a_}\n-\t_EOText_;\n-};\n-\n-\n /*\n  *  Fix return value of sbrk in unistd.h on Alpha OSF/1 V2.0\n  *  And OpenBSD."}, {"sha": "054fe508d1d1751006ee6a2a1c6aa023039b5a2e", "filename": "fixincludes/tests/base/pthread.h", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2Ftests%2Fbase%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2Ftests%2Fbase%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fpthread.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -29,46 +29,6 @@\n #endif  /* AIX_PTHREAD_CHECK */\n \n \n-#if defined( ALPHA_PTHREAD_CHECK )\n-#  if defined (_PTHREAD_ENV_DECC) || defined (_PTHREAD_ENV_EPCC) || defined (__PRAGMA_EXTERN_PREFIX)\n-#   define _PTHREAD_USE_PTDNAM_\n-#  endif\n-#  if defined (_PTHREAD_ENV_DECC) || defined (__PRAGMA_EXTERN_PREFIX)\n-#   define _PTHREAD_USE_PTDNAM_\n-#  endif\n-#endif  /* ALPHA_PTHREAD_CHECK */\n-\n-\n-#if defined( ALPHA_PTHREAD_GCC_CHECK )\n-# define _PTHREAD_ENV_INTELC\n-#elif defined (__GNUC__)\n-# define _PTHREAD_ENV_GCC\n-#else\n-# error <pthread.h>: unrecognized compiler.\n-#endif\n-#endif  /* ALPHA_PTHREAD_GCC_CHECK */\n-\n-\n-#if defined( ALPHA_PTHREAD_INIT_CHECK )\n-/*\n- * @(#)_RCSfile: pthread.h,v $ _Revision: 1.1.33.21 $ (DEC) _Date: 2000/08/15 15:30:13 $\n- */\n-#ifndef _PTHREAD_NOMETER_STATIC\n-# define PTHREAD_MUTEX_INITIALIZER     {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA, 0, 0, 0, 0, 0, 0 }\n-# define PTHREAD_COND_INITIALIZER     {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA, 0, 0, 0, 0 }\n-# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_)     {_PTHREAD_MSTATE_CONFIG, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_, 0, 0, 0, 0 }\n-# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_)     {_PTHREAD_CSTATE_SLOW, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_, 0, 0 }\n-#else\n-# define PTHREAD_MUTEX_INITIALIZER {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA, 0, 0, 0, 0, 0, 0 }\n-# define PTHREAD_MUTEX_INITWITHNAME_NP(_n_,_a_)     {0, _PTHREAD_MVALID | _PTHREAD_MVF_STA, _n_, _a_, 0, 0, 0, 0 }\n-# define PTHREAD_COND_INITWITHNAME_NP(_n_,_a_)     {0, _PTHREAD_CVALID | _PTHREAD_CVF_STA, _n_, _a_, 0, 0 }\n-#endif\n-\n-#define PTHREAD_RWLOCK_INITIALIZER {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA, 0, 0, 0, 0, 0, 0, 0, 0, 0 }\n-#define PTHREAD_RWLOCK_INITWITHNAME_NP(_n_,_a_)         {_PTHREAD_RWVALID | _PTHREAD_RWVF_STA, _n_, _a_, 0, 0, 0, 0, 0, 0, 0 }\n-#endif  /* ALPHA_PTHREAD_INIT_CHECK */\n-\n-\n #if defined( GLIBC_MUTEX_INIT_CHECK )\n #define PTHREAD_MUTEX_INITIALIZER \\\n   { { 0, 0, 0, 0, 0, 0 } }"}, {"sha": "fccf8063fa39d898e8215df27fd402901fc0acba", "filename": "fixincludes/tests/base/standards.h", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/fixincludes%2Ftests%2Fbase%2Fstandards.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/fixincludes%2Ftests%2Fbase%2Fstandards.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstandards.h?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,14 +0,0 @@\n-/*  DO NOT EDIT THIS FILE.\n-\n-    It has been auto-edited by fixincludes from:\n-\n-\t\"fixinc/tests/inc/standards.h\"\n-\n-    This had to be done to correct non-standard usages in the\n-    original, manufacturer supplied header file.  */\n-\n-\n-\n-#if defined( ALPHA___EXTERN_PREFIX_STANDARDS_CHECK )\n-#if (_ISO_C_SOURCE>=19990L) && !defined(_LIBC_POLLUTION_H_) && !defined(__DECC) && !defined(__PRAGMA_EXTERN_PREFIX)\n-#endif  /* ALPHA___EXTERN_PREFIX_STANDARDS_CHECK */"}, {"sha": "240c308fdbcea3de79a87c8bcade6bfe05bc5d5e", "filename": "fixincludes/tests/base/sys/stat.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2Ftests%2Fbase%2Fsys%2Fstat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2Ftests%2Fbase%2Fsys%2Fstat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Fstat.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -9,11 +9,6 @@\n \n \n \n-#if defined( ALPHA___EXTERN_PREFIX_SYS_STAT_CHECK )\n-#   if defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX)\n-#endif  /* ALPHA___EXTERN_PREFIX_SYS_STAT_CHECK */\n-\n-\n #if defined( GLIBC_C99_INLINE_2_CHECK )\n #ifdef __GNUC_GNU_INLINE__\n extern"}, {"sha": "f1ffeffa41a47733188766c8d6f64d799973b0d7", "filename": "fixincludes/tests/base/testing.h", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2Ftests%2Fbase%2Ftesting.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/fixincludes%2Ftests%2Fbase%2Ftesting.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ftesting.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -9,23 +9,6 @@\n \n \n \n-#if defined( ALPHA___EXTERN_PREFIX_CHECK )\n-#if (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\n-#pragma extern_prefix \"_P\"\n-#   if  (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\n-#     pragma extern_prefix \"_E\"\n-# if !defined(_LIBC_POLLUTION_H_) &&  (defined(__DECC) || defined(__PRAGMA_EXTERN_PREFIX))\n-#  pragma extern_prefix \"\"\n-#endif  /* ALPHA___EXTERN_PREFIX_CHECK */\n-\n-\n-#if defined( ALPHA_BAD_LVAL_CHECK )\n-#pragma extern_prefix \"_FOO\"\n-#define something _FOOsomething\n-#define mumble _FOOmumble\n-#endif  /* ALPHA_BAD_LVAL_CHECK */\n-\n-\n #if defined( AVOID_WCHAR_T_TYPE_CHECK )\n #ifndef __cplusplus\n typedef unsigned short\twchar_t \t;"}, {"sha": "03e8f545789779864af61472b908cbd6ef1909d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,41 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.gcc (alpha*-dec-osf5.1*): Remove.\n+\t* config.host (alpha*-dec-osf*): Remove.\n+\t* configure.ac (*-*-osf*): Remove.\n+\t(alpha*-dec-osf*): Remove.\n+\t* configure: Regenerate.\n+\n+\t* config/alpha/host-osf.c, config/alpha/osf5.h,\n+\tconfig/alpha/osf5.opt, config/alpha/va_list.h, config/alpha/x-osf:\n+\tRemove.\n+\n+\t* config/alpha/alpha.h (TARGET_LD_BUGGY_LDGP): Remove.\n+\t* config/alpha/alpha.c (struct machine_function): Update comment.\n+\t(alpha_start_function): Remove Tru64 UNIX as handling for\n+\tmax_frame_size.\n+\t* config/alpha/alpha.md (\"exception_receiver\"): Remove\n+\tTARGET_LD_BUGGY_LDGP.\n+\t(\"*exception_receiver_2\"): Likewise.\n+\t* except.c (finish_eh_generation): Remove Tru64 reference.\n+\t* ginclude/stdarg.h [_HIDDEN_VA_LIST]: Don't undef _VA_LIST.\n+\t* system.h (TARGET_HANDLE_PRAGMA_EXTERN_PREFIX): Poison.\n+\t* target.def (handle_pragma_extern_prefix): Remove.\n+\n+\t* Makefile.in (mips-tfile.o-warn): Remove.\n+\t(ALL_HOST_BACKEND_OBJS): Remove mips-tfile.o, mips-tdump.o.\n+\t(mips-tfile, mips-tfile.o, mips-tdump, mips-tdump.o): Remove.\n+\t* mips-tdump.c, mips-tfile.c: Remove.\n+\n+\t* doc/extend.texi (Symbol-Renaming Pragmas): Remove #pragma\n+\textern_prefix.\n+\t* doc/install.texi (Binaries): Remove Tru64 UNIX reference.\n+\t(Specific, alpha*-dec-osf5.1): Note removal.\n+\t* doc/tm.texi.in (Misc, TARGET_HANDLE_PRAGMA_EXTERN_PREFIX):\n+\tRemove.\n+\t* doc/tm.texi: Regenerate.\n+\t* doc/trouble.texi (Cross-Compiler Problems): Remove.\n+\n 2012-03-12  Richard Guenther  <rguenther@suse.de>\n \n \t* config/arm/arm.c (neon_dereference_pointer): Do not call"}, {"sha": "1bed38a1b8b514c8fb2846ef1fe85e75c1c5a875", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -195,8 +195,6 @@ GCC_WARN_CXXFLAGS = $(LOOSE_WARN) $($(@D)-warn) $(NOCOMMON_FLAG) $($@-warn)\n # flex output may yield harmless \"no previous prototype\" warnings\n build/gengtype-lex.o-warn = -Wno-error\n gengtype-lex.o-warn = -Wno-error\n-# mips-tfile.c contains -Wcast-qual warnings.\n-mips-tfile.o-warn = -Wno-error\n expmed.o-warn = -Wno-error\n \n # All warnings have to be shut off in stage1 if the compiler used then\n@@ -1467,8 +1465,7 @@ ALL_HOST_FRONTEND_OBJS = $(C_OBJS) \\\n \n ALL_HOST_BACKEND_OBJS = $(GCC_OBJS) $(OBJS) $(OBJS-libcommon) \\\n   $(OBJS-libcommon-target) @TREEBROWSER@ main.o gccspec.o cppspec.o \\\n-  $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) mips-tfile.o mips-tdump.o \\\n-  $(GCOV_OBJS) $(GCOV_DUMP_OBJS)\n+  $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) $(GCOV_OBJS) $(GCOV_DUMP_OBJS)\n \n # This lists all host object files, whether they are included in this\n # compilation or not.\n@@ -3450,22 +3447,6 @@ $(common_out_object_file): $(common_out_file) $(CONFIG_H) $(SYSTEM_H) \\\n     $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(OPTS_H) $(TM_H) $(TM_P_H) $(MACHMODE_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  $< $(OUTPUT_OPTION)\n-\n-# Build auxiliary files that support ecoff format.\n-mips-tfile: mips-tfile.o $(LIBDEPS)\n-\t$(LINKER) $(LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t\tmips-tfile.o $(LIBS)\n-\n-mips-tfile.o : mips-tfile.c $(CONFIG_H) $(SYSTEM_H) \\\n-   version.h $(srcdir)/../include/getopt.h $(GSTAB_H) intl.h\n-\n-mips-tdump: mips-tdump.o $(LIBDEPS)\n-\t$(LINKER) $(LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t\tmips-tdump.o $(LIBS)\n-\n-mips-tdump.o : mips-tdump.c $(CONFIG_H) $(SYSTEM_H) \\\n-   version.h $(srcdir)/../include/getopt.h stab.def\n-\n #\f\n # Generate header and source files from the machine description,\n # and compile them."}, {"sha": "2593ef29de8c26f0b8de5c538fc43437d601ccbd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,31 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gcc-interface/Makefile.in (alpha*-dec-osf*): Remove.\n+\t* a-intnam-tru64.ads, mlib-tgt-specific-tru64.adb,\n+\ts-mastop-tru64.adb, s-osinte-tru64.adb, s-osinte-tru64.ads,\n+\ts-taprop-tru64.adb, s-tasinf-tru64.ads, s-taspri-tru64.ads,\n+\tsystem-tru64.ads: Remove.\n+\n+\t* adaint.c (__gnat_number_of_cpus) [__alpha__ && __osf__]:\n+\tRemove.\n+\t[IS_CROSS] [!(__alpha__ && __osf__)]: Remove.\n+\t* env.c [__alpha__ && __osf__]: Remove.\n+\t* gsocket.h (_OSF_SOURCE): Remove.\n+\t(HAVE_THREAD_SAFE_GETxxxBYyyy) [__osf__]: Remove.\n+\t* init.c [__alpha__ && __osf__]: Remove.\n+\t* link.c [__osf__]: Remove.\n+\t* s-oscons-tmplt.c [__alpha__ && __osf__]: Remove.\n+\t[__osf__ && !_SS_MAXSIZE]: Remove.\n+\t* sysdep.c [__osf__]: Remove.\n+\t* terminals.c [__alpha__ && __osf__]: Remove.\n+\t[OSF1]: Remove.\n+\n+\t* g-traceb.ads: Remove Tru64 reference.\n+\t* g-trasym.ads: Likewise.\n+\t* gnat_ugn.texi (Linking a Mixed C++ & Ada Program): Likewise.\n+\t(Summary of Run-Time Configurations): Likewise.\n+\t* memtrack.adb: Likewise.\n+\n 2012-03-12  Tristan Gingold  <gingold@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_param): Use flag_vms_malloc64"}, {"sha": "3ea1a4afd7cac9c2ae70bf7b0b431b57675b00cf", "filename": "gcc/ada/a-intnam-tru64.ads", "status": "removed", "additions": 0, "deletions": 151, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fa-intnam-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fa-intnam-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-tru64.ads?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,151 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                   A D A . I N T E R R U P T S . N A M E S                --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the DEC Unix 4.0 version of this package\n-\n---  The following signals are reserved by the run time:\n-\n---  SIGFPE, SIGILL, SIGSEGV, SIGBUS, SIGABRT, SIGTRAP, SIGINT, SIGALRM,\n---  SIGSTOP, SIGKILL\n-\n---  The pragma Unreserve_All_Interrupts affects the following signal(s):\n-\n---  SIGINT: made available for Ada handler\n-\n-with System.OS_Interface;\n-\n-package Ada.Interrupts.Names is\n-\n-   --  All identifiers in this unit are implementation defined\n-\n-   pragma Implementation_Defined;\n-\n-   --  Beware that the mapping of names to signals may be many-to-one. There\n-   --  may be aliases. Also, for all signal names that are not supported on the\n-   --  current system the value of the corresponding constant will be zero.\n-\n-   SIGHUP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGHUP;      --  hangup\n-\n-   SIGINT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGINT;      --  interrupt (rubout)\n-\n-   SIGQUIT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGQUIT;     --  quit (ASCD FS)\n-\n-   SIGILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGILL;      --  illegal instruction (not reset)\n-\n-   SIGTRAP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTRAP;     --  trace trap (not reset)\n-\n-   SIGIOT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGIOT;      --  IOT instruction\n-\n-   SIGABRT : constant Interrupt_ID := --  used by abort,\n-     System.OS_Interface.SIGABRT;     --  replace SIGIOT in the  future\n-\n-   SIGEMT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGEMT;      --  EMT instruction\n-\n-   SIGFPE : constant Interrupt_ID :=\n-     System.OS_Interface.SIGFPE;      --  floating point exception\n-\n-   SIGKILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGKILL;     --  kill (cannot be caught or ignored)\n-\n-   SIGBUS : constant Interrupt_ID :=\n-     System.OS_Interface.SIGBUS;      --  bus error\n-\n-   SIGSEGV : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSEGV;     --  segmentation violation\n-\n-   SIGSYS : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSYS;      --  bad argument to system call\n-\n-   SIGPIPE : constant Interrupt_ID := --  write on a pipe with\n-     System.OS_Interface.SIGPIPE;     --  no one to read it\n-\n-   SIGALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGALRM;     --  alarm clock\n-\n-   SIGTERM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTERM;     --  software termination signal from kill\n-\n-   SIGUSR1 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR1;     --  user defined signal 1\n-\n-   SIGUSR2 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR2;     --  user defined signal 2\n-\n-   SIGCHLD : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCHLD;     --  4.3BSD's/POSIX name for SIGCLD\n-\n-   SIGWINCH : constant Interrupt_ID :=\n-     System.OS_Interface.SIGWINCH;    --  window size change\n-\n-   SIGURG : constant Interrupt_ID :=\n-     System.OS_Interface.SIGURG;      --  urgent condition on IO channel\n-\n-   SIGPOLL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGPOLL;     --  pollable event occurred\n-\n-   SIGIO : constant Interrupt_ID :=   --  input/output possible,\n-     System.OS_Interface.SIGIO;       --  SIGPOLL alias (Solaris)\n-\n-   SIGSTOP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSTOP;     --  stop (cannot be caught or ignored)\n-\n-   SIGTSTP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTSTP;     --  user stop requested from tty\n-\n-   SIGCONT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCONT;     --  stopped process has been continued\n-\n-   SIGTTIN : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTTIN;     --  background tty read attempted\n-\n-   SIGTTOU : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTTOU;     --  background tty write attempted\n-\n-   SIGVTALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGVTALRM;   --  virtual timer expired\n-\n-   SIGPROF : constant Interrupt_ID :=\n-     System.OS_Interface.SIGPROF;     --  profiling timer expired\n-\n-   SIGXCPU : constant Interrupt_ID :=\n-     System.OS_Interface.SIGXCPU;     --  CPU time limit exceeded\n-\n-   SIGXFSZ : constant Interrupt_ID :=\n-     System.OS_Interface.SIGXFSZ;     --  filesize limit exceeded\n-\n-end Ada.Interrupts.Names;"}, {"sha": "8309123ce4ecb70c7eb8d52a9cf73dbbc4d32270", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2012, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -2467,8 +2467,7 @@ __gnat_number_of_cpus (void)\n {\n   int cores = 1;\n \n-#if defined (linux) || defined (sun) || defined (AIX) \\\n-    || (defined (__alpha__)  && defined (_osf_)) || defined (__APPLE__)\n+#if defined (linux) || defined (sun) || defined (AIX) || defined (__APPLE__)\n   cores = (int) sysconf (_SC_NPROCESSORS_ONLN);\n \n #elif (defined (__mips) && defined (__sgi))\n@@ -3541,7 +3540,6 @@ _flush_cache()\n       && ! defined (__hpux__) \\\n       && ! defined (__APPLE__) \\\n       && ! defined (_AIX) \\\n-      && ! (defined (__alpha__)  && defined (__osf__)) \\\n       && ! defined (VMS) \\\n       && ! defined (__MINGW32__) \\\n       && ! (defined (__mips) && defined (__sgi)))"}, {"sha": "ac7ee21b38431a96bbe94a6586a241f4091b5963", "filename": "gcc/ada/env.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *            Copyright (C) 2005-2011, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 2005-2012, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,14 +29,6 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* Tru64 UNIX V4.0F <stdlib.h> declares unsetenv() only if AES_SOURCE (which\n-   is plain broken, this should be _AES_SOURCE instead as everywhere else;\n-   Tru64 UNIX V5.1B declares it only if _BSD.  */\n-#if defined (__alpha__) && defined (__osf__)\n-#define AES_SOURCE\n-#define _BSD\n-#endif\n-\n #ifdef __cplusplus\n extern \"C\" {\n #endif"}, {"sha": "3397014ff2702727aab68827ba967fb171715a08", "filename": "gcc/ada/g-traceb.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fg-traceb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fg-traceb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-traceb.ads?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2010, AdaCore                     --\n+--                     Copyright (C) 1999-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,7 +64,6 @@\n --     LynxOS x86\n --     Solaris x86\n --     Solaris sparc\n---     Tru64 alpha\n --     OpenVMS/Alpha\n --     OpenVMS/ia64\n --     VxWorks PowerPC"}, {"sha": "1cc6551d4571e4c9f28dc5fd103ec366bd03ef75", "filename": "gcc/ada/g-trasym.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fg-trasym.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fg-trasym.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.ads?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2011, AdaCore                     --\n+--                     Copyright (C) 1999-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,6 @@\n --     GNU/Linux x86, x86_64, ia64\n --     FreeBSD x86, x86_64\n --     Solaris sparc and x86\n---     Tru64\n --     OpenVMS Alpha and ia64\n --     Windows\n "}, {"sha": "75d80c518bf0b6763db230d55f20ca57b6653fa9", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1454,34 +1454,6 @@ ifeq ($(strip $(filter-out rtems%,$(osys))),)\n   s-interr.adb<s-interr-hwint.adb\n endif\n \n-ifeq ($(strip $(filter-out alpha% dec osf%,$(targ))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<a-intnam-tru64.ads \\\n-  s-inmaop.adb<s-inmaop-posix.adb \\\n-  s-intman.adb<s-intman-posix.adb \\\n-  s-mastop.adb<s-mastop-tru64.adb \\\n-  s-osinte.adb<s-osinte-tru64.adb \\\n-  s-osinte.ads<s-osinte-tru64.ads \\\n-  s-osprim.adb<s-osprim-unix.adb \\\n-  s-taprop.adb<s-taprop-tru64.adb \\\n-  s-tasinf.ads<s-tasinf-tru64.ads \\\n-  s-taspri.ads<s-taspri-tru64.ads \\\n-  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  s-traceb.adb<s-traceb-mastop.adb \\\n-  system.ads<system-tru64.ads \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n-\n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-tru64.adb\n-\n-  EH_MECHANISM=-gcc\n-  GMEM_LIB=gmemlib\n-  MISCLIB = -lexc\n-  THREADSLIB = -lpthread -lmach -lexc -lrt\n-  GNATLIB_SHARED = gnatlib-shared-default\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(host))),)\n \n soext  = .exe"}, {"sha": "e6f368bcb48d64c0cf16ed7ea8e4b31292e1ecb6", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -3092,7 +3092,7 @@ $ gnatlink ada_unit file1.o file2.o --LINK=./my_script\n \n If the @code{zero cost} exception mechanism is used, and the platform\n doesn't support automatic registration of exception tables (e.g.@: HP-UX,\n-Tru64 or AIX), the simple approach described above will not work and\n+or AIX), the simple approach described above will not work and\n a pre-linking phase using GNAT will be necessary.\n \n @end enumerate\n@@ -22164,11 +22164,6 @@ information about several specific platforms.\n @item @code{@ @ @ @ }Tasking    @tab native VMS threads\n @item @code{@ @ @ @ }Exceptions @tab ZCX\n @*\n-@item @b{alpha-tru64}\n-@item @code{@ @ }@i{rts-native (default)}\n-@item @code{@ @ @ @ }Tasking    @tab native TRU64 threads\n-@item @code{@ @ @ @ }Exceptions @tab ZCX\n-@*\n @item @code{@ @ }@i{rts-sjlj}\n @item @code{@ @ @ @ }Tasking    @tab native TRU64 threads\n @item @code{@ @ @ @ }Exceptions @tab SJLJ"}, {"sha": "4dfbee77f08fd24f6c8a48e03ca4c788054a83b3", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *         Copyright (C) 2004-2011, Free Software Foundation, Inc.          *\n+ *         Copyright (C) 2004-2012, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -53,11 +53,6 @@\n /* For AIX */\n #endif\n \n-#ifndef _OSF_SOURCE\n-#define _OSF_SOURCE 1\n-/* For Tru64 */\n-#endif\n-\n /** No system header may be included prior to this point since on some targets\n  ** we need to redefine FD_SETSIZE.\n  **/\n@@ -204,7 +199,7 @@\n #endif\n \n #if defined (_AIX) || defined (__FreeBSD__) || defined (__hpux__) || \\\n-    defined (__osf__) || defined (_WIN32) || defined (__APPLE__)\n+    defined (_WIN32) || defined (__APPLE__)\n # define HAVE_THREAD_SAFE_GETxxxBYyyy 1\n \n #elif defined (sgi) || defined (linux) || defined (__GLIBC__) || \\"}, {"sha": "87124b6a4ea1b3b1acfdb535f91effa0f0afac50", "filename": "gcc/ada/init.c", "status": "modified", "additions": 0, "deletions": 150, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -294,156 +294,6 @@ __gnat_install_handler (void)\n   __gnat_handler_installed = 1;\n }\n \n-/*****************/\n-/* Tru64 section */\n-/*****************/\n-\n-#elif defined(__alpha__) && defined(__osf__)\n-\n-#include <signal.h>\n-#include <sys/siginfo.h>\n-\n-extern char *__gnat_get_code_loc (struct sigcontext *);\n-extern void __gnat_set_code_loc (struct sigcontext *, char *);\n-extern size_t __gnat_machine_state_length (void);\n-\n-#define HAVE_GNAT_ADJUST_CONTEXT_FOR_RAISE\n-\n-void\n-__gnat_adjust_context_for_raise (int signo, void *ucontext)\n-{\n-  struct sigcontext *sigcontext = (struct sigcontext *) ucontext;\n-\n-  /* The unwinder expects the signal context to contain the address of the\n-     faulting instruction.  For SIGFPE, this depends on the trap shadow\n-     situation (see man ieee).  We nonetheless always compensate for it,\n-     considering that PC designates the instruction following the one that\n-     trapped.  This is not necessarily true but corresponds to what we have\n-     always observed.  */\n-  if (signo == SIGFPE)\n-    sigcontext->sc_pc--;\n-}\n-\n-static void\n-__gnat_error_handler (int sig, siginfo_t *si, void *ucontext)\n-{\n-  struct Exception_Data *exception;\n-  static int recurse = 0;\n-  const char *msg;\n-\n-  /* Adjusting is required for every fault context, so adjust for this one\n-     now, before we possibly trigger a recursive fault below.  */\n-  __gnat_adjust_context_for_raise (sig, ucontext);\n-\n-  /* If this was an explicit signal from a \"kill\", just resignal it.  */\n-  if (SI_FROMUSER (si))\n-    {\n-      signal (sig, SIG_DFL);\n-      kill (getpid(), sig);\n-    }\n-\n-  /* Otherwise, treat it as something we handle.  */\n-  switch (sig)\n-    {\n-    case SIGSEGV:\n-      /* If the problem was permissions, this is a constraint error.\n-\t Likewise if the failing address isn't maximally aligned or if\n-\t we've recursed.\n-\n-\t ??? Using a static variable here isn't task-safe, but it's\n-\t much too hard to do anything else and we're just determining\n-\t which exception to raise.  */\n-      if (si->si_code == SEGV_ACCERR\n-\t  || (long) si->si_addr == 0\n-\t  || (((long) si->si_addr) & 3) != 0\n-\t  || recurse)\n-\t{\n-\t  exception = &constraint_error;\n-\t  msg = \"SIGSEGV\";\n-\t}\n-      else\n-\t{\n-\t  /* See if the page before the faulting page is accessible.  Do that\n-\t     by trying to access it.  We'd like to simply try to access\n-\t     4096 + the faulting address, but it's not guaranteed to be\n-\t     the actual address, just to be on the same page.  */\n-\t  recurse++;\n-\t  ((volatile char *)\n-\t   ((long) si->si_addr & - getpagesize ()))[getpagesize ()];\n-\t  exception = &storage_error;\n-\t  msg = \"stack overflow or erroneous memory access\";\n-\t}\n-      break;\n-\n-    case SIGBUS:\n-      exception = &program_error;\n-      msg = \"SIGBUS\";\n-      break;\n-\n-    case SIGFPE:\n-      exception = &constraint_error;\n-      msg = \"SIGFPE\";\n-      break;\n-\n-    default:\n-      exception = &program_error;\n-      msg = \"unhandled signal\";\n-    }\n-\n-  recurse = 0;\n-  Raise_From_Signal_Handler (exception, CONST_CAST (char *, msg));\n-}\n-\n-void\n-__gnat_install_handler (void)\n-{\n-  struct sigaction act;\n-\n-  /* Setup signal handler to map synchronous signals to appropriate\n-     exceptions. Make sure that the handler isn't interrupted by another\n-     signal that might cause a scheduling event!  */\n-\n-  act.sa_handler = (void (*) (int)) __gnat_error_handler;\n-  act.sa_flags = SA_RESTART | SA_NODEFER | SA_SIGINFO;\n-  sigemptyset (&act.sa_mask);\n-\n-  /* Do not install handlers if interrupt state is \"System\".  */\n-  if (__gnat_get_interrupt_state (SIGABRT) != 's')\n-    sigaction (SIGABRT, &act, NULL);\n-  if (__gnat_get_interrupt_state (SIGFPE) != 's')\n-    sigaction (SIGFPE,  &act, NULL);\n-  if (__gnat_get_interrupt_state (SIGILL) != 's')\n-    sigaction (SIGILL,  &act, NULL);\n-  if (__gnat_get_interrupt_state (SIGSEGV) != 's')\n-    sigaction (SIGSEGV, &act, NULL);\n-  if (__gnat_get_interrupt_state (SIGBUS) != 's')\n-    sigaction (SIGBUS,  &act, NULL);\n-\n-  __gnat_handler_installed = 1;\n-}\n-\n-/* Routines called by s-mastop-tru64.adb.  */\n-\n-#define SC_GP 29\n-\n-char *\n-__gnat_get_code_loc (struct sigcontext *context)\n-{\n-  return (char *) context->sc_pc;\n-}\n-\n-void\n-__gnat_set_code_loc (struct sigcontext *context, char *pc)\n-{\n-  context->sc_pc = (long) pc;\n-}\n-\n-size_t\n-__gnat_machine_state_length (void)\n-{\n-  return sizeof (struct sigcontext);\n-}\n-\n /*****************/\n /* HP-UX section */\n /*****************/"}, {"sha": "223147df7d2668804210768a645316dcea26237f", "filename": "gcc/ada/link.c", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2012, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -96,19 +96,7 @@ extern \"C\" {\n #define SHARED 'H'\n #define STATIC 'T'\n \n-#if defined (__osf__)\n-const char *__gnat_object_file_option = \"-Wl,-input,\";\n-const char *__gnat_run_path_option = \"-Wl,-rpath,\";\n-int __gnat_link_max = 10000;\n-unsigned char __gnat_objlist_file_supported = 1;\n-char __gnat_shared_libgnat_default = STATIC;\n-char __gnat_shared_libgcc_default = STATIC;\n-unsigned char __gnat_using_gnu_linker = 0;\n-const char *__gnat_object_library_extension = \".a\";\n-unsigned char __gnat_separate_run_path_options = 0;\n-const char *__gnat_default_libgcc_subdir = \"lib\";\n-\n-#elif defined (sgi)\n+#if defined (sgi)\n const char *__gnat_object_file_option = \"-Wl,-objectlist,\";\n const char *__gnat_run_path_option = \"-Wl,-rpath,\";\n int __gnat_link_max = 5000;"}, {"sha": "ec490e21db96ca0a6c7a8d1eb35ad8f47bcbba4c", "filename": "gcc/ada/memtrack.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fmemtrack.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fmemtrack.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmemtrack.adb?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -61,7 +61,6 @@\n --    HP-UX\n --    Irix\n --    Solaris\n---    Tru64\n --    Alpha OpenVMS\n \n --  NOTE FOR FUTURE PLATFORMS SUPPORT: It is assumed that type Duration is"}, {"sha": "b5f5a13712253e49af39747be8b8e235cc0adc77", "filename": "gcc/ada/mlib-tgt-specific-tru64.adb", "status": "removed", "additions": 0, "deletions": 168, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fmlib-tgt-specific-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fmlib-tgt-specific-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-tru64.adb?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,168 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                    M L I B . T G T . S P E C I F I C                     --\n---                             (Tru64 Version)                              --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---          Copyright (C) 2002-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n--- http://www.gnu.org/licenses for a complete copy of the license.          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the Tru64 version of the body\n-\n-with MLib.Fil;\n-with MLib.Utl;\n-with Opt;\n-with Output; use Output;\n-\n-package body MLib.Tgt.Specific is\n-\n-   use MLib;\n-\n-   --  Non default subprogram\n-\n-   procedure Build_Dynamic_Library\n-     (Ofiles       : Argument_List;\n-      Options      : Argument_List;\n-      Interfaces   : Argument_List;\n-      Lib_Filename : String;\n-      Lib_Dir      : String;\n-      Symbol_Data  : Symbol_Record;\n-      Driver_Name  : Name_Id := No_Name;\n-      Lib_Version  : String  := \"\";\n-      Auto_Init    : Boolean := False);\n-\n-   function Is_Archive_Ext (Ext : String) return Boolean;\n-\n-   function PIC_Option return String;\n-\n-   --  Local variables\n-\n-   Expect_Unresolved : aliased String := \"-Wl,-expect_unresolved,*\";\n-\n-   ---------------------------\n-   -- Build_Dynamic_Library --\n-   ---------------------------\n-\n-   procedure Build_Dynamic_Library\n-     (Ofiles       : Argument_List;\n-      Options      : Argument_List;\n-      Interfaces   : Argument_List;\n-      Lib_Filename : String;\n-      Lib_Dir      : String;\n-      Symbol_Data  : Symbol_Record;\n-      Driver_Name  : Name_Id := No_Name;\n-      Lib_Version  : String  := \"\";\n-      Auto_Init    : Boolean := False)\n-   is\n-      pragma Unreferenced (Interfaces);\n-      pragma Unreferenced (Symbol_Data);\n-      pragma Unreferenced (Auto_Init);\n-      --  Initialization is done through the constructor mechanism\n-\n-      Lib_File : constant String :=\n-                   \"lib\" & Fil.Append_To (Lib_Filename, DLL_Ext);\n-\n-      Lib_Path : constant String :=\n-                   Lib_Dir & Directory_Separator & Lib_File;\n-\n-      Version_Arg          : String_Access;\n-      Symbolic_Link_Needed : Boolean := False;\n-\n-   begin\n-      if Opt.Verbose_Mode then\n-         Write_Str (\"building relocatable shared library \");\n-         Write_Line (Lib_Path);\n-      end if;\n-\n-      --  If specified, add automatic elaboration/finalization\n-\n-      if Lib_Version = \"\" then\n-         Utl.Gcc\n-           (Output_File => Lib_Path,\n-            Objects     => Ofiles,\n-            Options     => Options & Expect_Unresolved'Access,\n-            Options_2   => No_Argument_List,\n-            Driver_Name => Driver_Name);\n-\n-      else\n-         declare\n-            Maj_Version : constant String :=\n-                            Major_Id_Name (Lib_File, Lib_Version);\n-         begin\n-            if Maj_Version'Length /= 0 then\n-               Version_Arg := new String'(\"-Wl,-soname,\" & Maj_Version);\n-\n-            else\n-               Version_Arg := new String'(\"-Wl,-soname,\" & Lib_Version);\n-            end if;\n-\n-            if Is_Absolute_Path (Lib_Version) then\n-               Utl.Gcc\n-                 (Output_File => Lib_Version,\n-                  Objects     => Ofiles,\n-                  Options     =>\n-                    Options & Version_Arg & Expect_Unresolved'Access,\n-                  Options_2   => No_Argument_List,\n-                  Driver_Name => Driver_Name);\n-               Symbolic_Link_Needed := Lib_Version /= Lib_Path;\n-\n-            else\n-               Utl.Gcc\n-                 (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n-                  Objects     => Ofiles,\n-                  Options     =>\n-                    Options & Version_Arg & Expect_Unresolved'Access,\n-                  Options_2   => No_Argument_List,\n-                  Driver_Name => Driver_Name);\n-               Symbolic_Link_Needed :=\n-                 Lib_Dir & Directory_Separator & Lib_Version /= Lib_Path;\n-            end if;\n-\n-            if Symbolic_Link_Needed then\n-               Create_Sym_Links\n-                 (Lib_Path, Lib_Version, Lib_Dir, Maj_Version);\n-            end if;\n-         end;\n-      end if;\n-   end Build_Dynamic_Library;\n-\n-   --------------------\n-   -- Is_Archive_Ext --\n-   --------------------\n-\n-   function Is_Archive_Ext (Ext : String) return Boolean is\n-   begin\n-      return Ext = \".a\" or else Ext = \".so\";\n-   end Is_Archive_Ext;\n-\n-   ----------------\n-   -- PIC_Option --\n-   ----------------\n-\n-   function PIC_Option return String is\n-   begin\n-      return \"\";\n-   end PIC_Option;\n-\n-begin\n-   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n-   Is_Archive_Ext_Ptr := Is_Archive_Ext'Access;\n-   PIC_Option_Ptr := PIC_Option'Access;\n-end MLib.Tgt.Specific;"}, {"sha": "7114ea700f45f1b577f632222599aeaf5e9d64df", "filename": "gcc/ada/s-mastop-tru64.adb", "status": "removed", "additions": 0, "deletions": 163, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-mastop-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-mastop-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-mastop-tru64.adb?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,163 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                     SYSTEM.MACHINE_STATE_OPERATIONS                      --\n---                                                                          --\n---                                 B o d y                                  --\n---                         (Version for Alpha/Dec Unix)                     --\n---                                                                          --\n---                     Copyright (C) 1999-2010, AdaCore                     --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This version of System.Machine_State_Operations is for use on\n---  Alpha systems running DEC Unix.\n-\n-with System.Memory;\n-\n-package body System.Machine_State_Operations is\n-\n-   pragma Linker_Options (\"-lexc\");\n-   --  Needed for definitions of exc_capture_context and exc_virtual_unwind\n-\n-   ----------------------------\n-   -- Allocate_Machine_State --\n-   ----------------------------\n-\n-   function Allocate_Machine_State return Machine_State is\n-      use System.Storage_Elements;\n-\n-      function c_machine_state_length return Storage_Offset;\n-      pragma Import (C, c_machine_state_length, \"__gnat_machine_state_length\");\n-\n-   begin\n-      return Machine_State\n-        (Memory.Alloc (Memory.size_t (c_machine_state_length)));\n-   end Allocate_Machine_State;\n-\n-   ----------------\n-   -- Fetch_Code --\n-   ----------------\n-\n-   function Fetch_Code (Loc : Code_Loc) return Code_Loc is\n-   begin\n-      return Loc;\n-   end Fetch_Code;\n-\n-   ------------------------\n-   -- Free_Machine_State --\n-   ------------------------\n-\n-   procedure Free_Machine_State (M : in out Machine_State) is\n-   begin\n-      Memory.Free (Address (M));\n-      M := Machine_State (Null_Address);\n-   end Free_Machine_State;\n-\n-   ------------------\n-   -- Get_Code_Loc --\n-   ------------------\n-\n-   function Get_Code_Loc (M : Machine_State) return Code_Loc is\n-      Asm_Call_Size : constant := 4;\n-\n-      function c_get_code_loc (M : Machine_State) return Code_Loc;\n-      pragma Import (C, c_get_code_loc, \"__gnat_get_code_loc\");\n-\n-      --  Code_Loc returned by c_get_code_loc is the return point but here we\n-      --  want Get_Code_Loc to return the call point. Under DEC Unix a call\n-      --  asm instruction takes 4 bytes. So we must remove this value from\n-      --  c_get_code_loc to have the call point.\n-\n-      Loc : constant Code_Loc := c_get_code_loc (M);\n-\n-   begin\n-      if Loc = 0 then\n-         return 0;\n-      else\n-         return Loc - Asm_Call_Size;\n-      end if;\n-   end Get_Code_Loc;\n-\n-   --------------------------\n-   -- Machine_State_Length --\n-   --------------------------\n-\n-   function Machine_State_Length\n-     return System.Storage_Elements.Storage_Offset\n-   is\n-      use System.Storage_Elements;\n-\n-      function c_machine_state_length return Storage_Offset;\n-      pragma Import (C, c_machine_state_length, \"__gnat_machine_state_length\");\n-\n-   begin\n-      return c_machine_state_length;\n-   end Machine_State_Length;\n-\n-   ---------------\n-   -- Pop_Frame --\n-   ---------------\n-\n-   procedure Pop_Frame (M : Machine_State) is\n-      procedure exc_virtual_unwind (Fcn : System.Address; M : Machine_State);\n-      pragma Import (C, exc_virtual_unwind, \"exc_virtual_unwind\");\n-\n-      function exc_lookup_function (Loc : Code_Loc) return System.Address;\n-      pragma Import (C, exc_lookup_function, \"exc_lookup_function_entry\");\n-\n-      procedure c_set_code_loc (M : Machine_State; Loc : Code_Loc);\n-      pragma Import (C, c_set_code_loc, \"__gnat_set_code_loc\");\n-\n-      --  Look for a code-range descriptor table containing the PC of the\n-      --  specified machine state. If we don't find any, attempting to unwind\n-      --  further would fail so we set the machine state's code location to a\n-      --  value indicating that the top of the call chain is reached. This\n-      --  happens when the function at the address pointed to by PC has not\n-      --  been registered with the unwinding machinery, as with the __istart\n-      --  functions generated by the linker in presence of initialization\n-      --  routines for example.\n-\n-      Prf : constant System.Address := exc_lookup_function (Get_Code_Loc (M));\n-\n-   begin\n-      if Prf = System.Null_Address then\n-         c_set_code_loc (M, 0);\n-      else\n-         exc_virtual_unwind (Prf, M);\n-      end if;\n-   end Pop_Frame;\n-\n-   -----------------------\n-   -- Set_Machine_State --\n-   -----------------------\n-\n-   procedure Set_Machine_State (M : Machine_State) is\n-      procedure c_capture_context (M : Machine_State);\n-      pragma Import (C, c_capture_context, \"exc_capture_context\");\n-   begin\n-      c_capture_context (M);\n-      Pop_Frame (M);\n-   end Set_Machine_State;\n-\n-end System.Machine_State_Operations;"}, {"sha": "3005ba781a0d612e46a16c0b9970789117cb2a66", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -85,12 +85,6 @@ pragma Style_Checks (\"M32766\");\n  **/\n #define _XOPEN_SOURCE 500\n \n-#elif defined (__alpha__) && defined (__osf__)\n-/** For Tru64 UNIX, _XOPEN_SOURCE must be defined, otherwise CLOCK_REALTIME\n- ** is not defined.\n- **/\n-#define _XOPEN_SOURCE 500\n-\n #elif defined (__mips) && defined (__sgi)\n /** For IRIX 6, _XOPEN5 must be defined and _XOPEN_IOV_MAX must be used as\n  ** IOV_MAX, otherwise IOV_MAX is not defined.  IRIX 5 has neither.\n@@ -111,14 +105,6 @@ pragma Style_Checks (\"M32766\");\n #include <fcntl.h>\n #include <time.h>\n \n-#if defined (__alpha__) && defined (__osf__)\n-/** Tru64 is unable to do vector IO operations with default value of IOV_MAX,\n- ** so its value is redefined to a small one which is known to work properly.\n- **/\n-#undef IOV_MAX\n-#define IOV_MAX 16\n-#endif\n-\n #if defined (__VMS)\n /** VMS is unable to do vector IO operations with default value of IOV_MAX,\n  ** so its value is redefined to a small one which is known to work properly.\n@@ -978,15 +964,6 @@ CND(AF_INET, \"IPv4 address family\")\n # undef AF_INET6\n #endif\n \n-/**\n- ** Tru64 UNIX V4.0F defines AF_INET6 without IPv6 support, specifically\n- ** without struct sockaddr_in6.  We use _SS_MAXSIZE (used for the definition\n- ** of struct sockaddr_storage on Tru64 UNIX V5.1) to detect this.\n- **/\n-#if defined(__osf__) && !defined(_SS_MAXSIZE)\n-# undef AF_INET6\n-#endif\n-\n #ifndef AF_INET6\n # define AF_INET6 -1\n #else"}, {"sha": "ad391bcb473f00fe1d0723033203639987725aa1", "filename": "gcc/ada/s-osinte-tru64.adb", "status": "removed", "additions": 0, "deletions": 142, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-osinte-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-osinte-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-tru64.adb?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,142 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                   S Y S T E M . O S _ I N T E R F A C E                  --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---         Copyright (C) 1998-2009, Free Software Foundation, Inc.          --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the DEC Unix version of this package\n-\n---  This package encapsulates all direct interfaces to OS services\n---  that are needed by children of System.\n-\n-pragma Polling (Off);\n---  Turn off polling, we do not want ATC polling to take place during\n---  tasking operations. It causes infinite loops and other problems.\n-\n-with Interfaces.C; use Interfaces.C;\n-with System.Machine_Code; use System.Machine_Code;\n-\n-package body System.OS_Interface is\n-\n-   --------------------\n-   -- Get_Stack_Base --\n-   --------------------\n-\n-   function Get_Stack_Base (thread : pthread_t) return Address is\n-      pragma Unreferenced (thread);\n-   begin\n-      return Null_Address;\n-   end Get_Stack_Base;\n-\n-   ------------------\n-   -- pthread_init --\n-   ------------------\n-\n-   procedure pthread_init is\n-   begin\n-      null;\n-   end pthread_init;\n-\n-   ------------------\n-   -- pthread_self --\n-   ------------------\n-\n-   function pthread_self return pthread_t is\n-      Self : pthread_t;\n-   begin\n-      Asm (\"call_pal 0x9e\" & ASCII.LF & ASCII.HT &\n-           \"bis $31, $0, %0\",\n-           Outputs  => pthread_t'Asm_Output (\"=r\", Self),\n-           Clobber  => \"$0\",\n-           Volatile => True);\n-      return Self;\n-   end pthread_self;\n-\n-   ----------------------\n-   -- Hide_Yellow_Zone --\n-   ----------------------\n-\n-   procedure Hide_Unhide_Yellow_Zone (Hide : Boolean) is\n-      type Teb_Ptr is access all pthread_teb_t;\n-      Teb : Teb_Ptr;\n-      Res : Interfaces.C.int;\n-      pragma Unreferenced (Res);\n-\n-   begin\n-      --  Get the Thread Environment Block address\n-\n-      Asm (\"call_pal 0x9e\" & ASCII.LF & ASCII.HT &\n-           \"bis $31, $0, %0\",\n-           Outputs  => Teb_Ptr'Asm_Output (\"=r\", Teb),\n-           Clobber  => \"$0\",\n-           Volatile => True);\n-\n-      --  Stick a guard page right above the Yellow Zone if it exists\n-\n-      if Teb.all.stack_yellow /= Teb.all.stack_guard then\n-         Res :=\n-           mprotect\n-             (Teb.all.stack_yellow, Get_Page_Size,\n-              prot => (if Hide then PROT_ON else PROT_OFF));\n-      end if;\n-   end Hide_Unhide_Yellow_Zone;\n-\n-   -----------------\n-   -- To_Duration --\n-   -----------------\n-\n-   function To_Duration (TS : timespec) return Duration is\n-   begin\n-      return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n-   end To_Duration;\n-\n-   -----------------\n-   -- To_Timespec --\n-   -----------------\n-\n-   function To_Timespec (D : Duration) return timespec is\n-      S : time_t;\n-      F : Duration;\n-\n-   begin\n-      S := time_t (Long_Long_Integer (D));\n-      F := D - Duration (S);\n-\n-      --  If F has negative value due to a round-up, adjust for positive F\n-      --  value.\n-\n-      if F < 0.0 then\n-         S := S - 1;\n-         F := F + 1.0;\n-      end if;\n-\n-      return timespec'(tv_sec => S,\n-                       tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n-   end To_Timespec;\n-\n-end System.OS_Interface;"}, {"sha": "0fcd4221e80064f8a92536d4076e8b3863d5416e", "filename": "gcc/ada/s-osinte-tru64.ads", "status": "removed", "additions": 0, "deletions": 585, "changes": 585, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-osinte-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-osinte-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-tru64.ads?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,585 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                   S Y S T E M . O S _ I N T E R F A C E                  --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the Tru64 version of this package\n-\n---  This package encapsulates all direct interfaces to OS services\n---  that are needed by the tasking run-time (libgnarl).\n-\n---  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n---  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n-\n-with Interfaces.C;\n-\n-with Ada.Unchecked_Conversion;\n-\n-package System.OS_Interface is\n-   pragma Preelaborate;\n-\n-   pragma Linker_Options (\"-lpthread\");\n-   pragma Linker_Options (\"-lmach\");\n-   pragma Linker_Options (\"-lexc\");\n-   pragma Linker_Options (\"-lrt\");\n-\n-   subtype int            is Interfaces.C.int;\n-   subtype short          is Interfaces.C.short;\n-   subtype long           is Interfaces.C.long;\n-   subtype unsigned       is Interfaces.C.unsigned;\n-   subtype unsigned_short is Interfaces.C.unsigned_short;\n-   subtype unsigned_long  is Interfaces.C.unsigned_long;\n-   subtype unsigned_char  is Interfaces.C.unsigned_char;\n-   subtype plain_char     is Interfaces.C.plain_char;\n-   subtype size_t         is Interfaces.C.size_t;\n-   subtype char_array     is Interfaces.C.char_array;\n-\n-   -----------\n-   -- Errno --\n-   -----------\n-\n-   function errno return int;\n-   pragma Import (C, errno, \"_Geterrno\");\n-\n-   EAGAIN    : constant := 35;\n-   EINTR     : constant := 4;\n-   EINVAL    : constant := 22;\n-   ENOMEM    : constant := 12;\n-   ETIMEDOUT : constant := 60;\n-\n-   -------------\n-   -- Signals --\n-   -------------\n-\n-   Max_Interrupt : constant := 48;\n-   type Signal is new int range 0 .. Max_Interrupt;\n-   for Signal'Size use int'Size;\n-\n-   SIGHUP     : constant := 1; --  hangup\n-   SIGINT     : constant := 2; --  interrupt (rubout)\n-   SIGQUIT    : constant := 3; --  quit (ASCD FS)\n-   SIGILL     : constant := 4; --  illegal instruction (not reset)\n-   SIGTRAP    : constant := 5; --  trace trap (not reset)\n-   SIGABRT    : constant := 6; --  used by abort, replace SIGIOT in the  future\n-   SIGIOT     : constant := 6; --  abort (terminate) process\n-   SIGLOST    : constant := 6; --  old BSD signal ??\n-   SIGEMT     : constant := 7; --  EMT instruction\n-   SIGFPE     : constant := 8; --  floating point exception\n-   SIGKILL    : constant := 9; --  kill (cannot be caught or ignored)\n-   SIGBUS     : constant := 10; --  bus error\n-   SIGSEGV    : constant := 11; --  segmentation violation\n-   SIGSYS     : constant := 12; --  bad argument to system call\n-   SIGPIPE    : constant := 13; --  write on a pipe with no one to read it\n-   SIGALRM    : constant := 14; --  alarm clock\n-   SIGTERM    : constant := 15; --  software termination signal from kill\n-   SIGURG     : constant := 16; --  urgent condition on IO channel\n-   SIGIOINT   : constant := 16; --  printer to backend error signal\n-   SIGSTOP    : constant := 17; --  stop (cannot be caught or ignored)\n-   SIGTSTP    : constant := 18; --  user stop requested from tty\n-   SIGCONT    : constant := 19; --  stopped process has been continued\n-   SIGCHLD    : constant := 20; --  child status change\n-   SIGTTIN    : constant := 21; --  background tty read attempted\n-   SIGTTOU    : constant := 22; --  background tty write attempted\n-   SIGPOLL    : constant := 23; --  I/O possible, or completed\n-   SIGIO      : constant := 23; --  STREAMS version of SIGPOLL\n-   SIGAIO     : constant := 23; --  base lan i/o\n-   SIGPTY     : constant := 23; --  pty i/o\n-   SIGXCPU    : constant := 24; --  CPU time limit exceeded\n-   SIGXFSZ    : constant := 25; --  filesize limit exceeded\n-   SIGVTALRM  : constant := 26; --  virtual timer expired\n-   SIGPROF    : constant := 27; --  profiling timer expired\n-   SIGWINCH   : constant := 28; --  window size change\n-   SIGINFO    : constant := 29; --  information request\n-   SIGPWR     : constant := 29; --  Power Fail/Restart -- SVID3/SVR4\n-   SIGUSR1    : constant := 30; --  user defined signal 1\n-   SIGUSR2    : constant := 31; --  user defined signal 2\n-   SIGRESV    : constant := 32; --  reserved by Digital for future use\n-\n-   SIGADAABORT : constant := SIGABRT;\n-\n-   type Signal_Set is array (Natural range <>) of Signal;\n-\n-   Unmasked    : constant Signal_Set := (0 .. 0 => SIGTRAP);\n-   Reserved    : constant Signal_Set := (SIGALRM, SIGABRT, SIGKILL, SIGSTOP);\n-\n-   type sigset_t is private;\n-\n-   function sigaddset (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigaddset);\n-\n-   function sigdelset (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigdelset);\n-\n-   function sigfillset (set : access sigset_t) return int;\n-   pragma Import (C, sigfillset);\n-\n-   function sigismember (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigismember);\n-\n-   function sigemptyset (set : access sigset_t) return int;\n-   pragma Import (C, sigemptyset);\n-\n-   type union_type_3 is new String (1 .. 116);\n-   type siginfo_t is record\n-      si_signo     : int;\n-      si_errno     : int;\n-      si_code      : int;\n-      X_data       : union_type_3;\n-   end record;\n-   for siginfo_t'Size use 8 * 128;\n-   pragma Convention (C, siginfo_t);\n-\n-   type struct_sigaction is record\n-      sa_handler : System.Address;\n-      sa_mask    : sigset_t;\n-      sa_flags   : int;\n-      sa_signo   : int;\n-   end record;\n-   pragma Convention (C, struct_sigaction);\n-   type struct_sigaction_ptr is access all struct_sigaction;\n-\n-   SIG_BLOCK   : constant := 1;\n-   SIG_UNBLOCK : constant := 2;\n-   SIG_SETMASK : constant := 3;\n-\n-   SIG_DFL : constant := 0;\n-   SIG_IGN : constant := 1;\n-\n-   SA_NODEFER : constant := 8;\n-   SA_SIGINFO : constant := 16#40#;\n-   SA_ONSTACK : constant := 16#01#;\n-\n-   function sigaction\n-     (sig  : Signal;\n-      act  : struct_sigaction_ptr;\n-      oact : struct_sigaction_ptr) return int;\n-   pragma Import (C, sigaction);\n-\n-   ----------\n-   -- Time --\n-   ----------\n-\n-   type timespec is private;\n-\n-   function nanosleep (rqtp, rmtp : access timespec)  return int;\n-   pragma Import (C, nanosleep);\n-\n-   type clockid_t is new int;\n-\n-   function clock_gettime\n-     (clock_id : clockid_t;\n-      tp       : access timespec) return int;\n-   pragma Import (C, clock_gettime);\n-\n-   function To_Duration (TS : timespec) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timespec (D : Duration) return timespec;\n-   pragma Inline (To_Timespec);\n-\n-   type struct_timezone is record\n-      tz_minuteswest : int;\n-      tz_dsttime     : int;\n-   end record;\n-   pragma Convention (C, struct_timezone);\n-\n-   -------------------------\n-   -- Priority Scheduling --\n-   -------------------------\n-\n-   SCHED_FIFO  : constant := 1;\n-   SCHED_RR    : constant := 2;\n-   SCHED_OTHER : constant := 3;\n-   SCHED_LFI   : constant := 5;\n-\n-   -------------\n-   -- Process --\n-   -------------\n-\n-   type pid_t is private;\n-\n-   function kill (pid : pid_t; sig : Signal) return int;\n-   pragma Import (C, kill);\n-\n-   function getpid return pid_t;\n-   pragma Import (C, getpid);\n-\n-   BIND_NO_INHERIT  : constant := 1;\n-\n-   function bind_to_cpu\n-     (pid       : pid_t;\n-      cpu_mask  : unsigned_long;\n-      flag      : unsigned_long := BIND_NO_INHERIT) return int;\n-   pragma Import (C, bind_to_cpu);\n-\n-   -------------\n-   -- Threads --\n-   -------------\n-\n-   type Thread_Body is access\n-     function (arg : System.Address) return System.Address;\n-   pragma Convention (C, Thread_Body);\n-\n-   function Thread_Body_Access is new\n-     Ada.Unchecked_Conversion (System.Address, Thread_Body);\n-\n-   type pthread_t           is private;\n-   subtype Thread_Id        is pthread_t;\n-\n-   type pthread_mutex_t     is limited private;\n-   type pthread_cond_t      is limited private;\n-   type pthread_attr_t      is limited private;\n-   type pthread_mutexattr_t is limited private;\n-   type pthread_condattr_t  is limited private;\n-   type pthread_key_t       is private;\n-\n-   PTHREAD_CREATE_DETACHED : constant := 1;\n-\n-   PTHREAD_SCOPE_PROCESS : constant := 0;\n-   PTHREAD_SCOPE_SYSTEM  : constant := 1;\n-\n-   PTHREAD_EXPLICIT_SCHED : constant := 1;\n-\n-   -----------\n-   -- Stack --\n-   -----------\n-\n-   Stack_Base_Available : constant Boolean := False;\n-   --  Indicates if the stack base is available on this target\n-\n-   function Get_Stack_Base (thread : pthread_t) return Address;\n-   pragma Inline (Get_Stack_Base);\n-   --  Returns the stack base of the specified thread. Only call this function\n-   --  when Stack_Base_Available is True.\n-\n-   function Get_Page_Size return size_t;\n-   function Get_Page_Size return Address;\n-   pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  Returns the size of a page\n-\n-   PROT_NONE  : constant := 0;\n-   PROT_READ  : constant := 1;\n-   PROT_WRITE : constant := 2;\n-   PROT_EXEC  : constant := 4;\n-   PROT_ALL   : constant := PROT_READ + PROT_WRITE + PROT_EXEC;\n-\n-   PROT_ON    : constant := PROT_READ;\n-   PROT_OFF   : constant := PROT_ALL;\n-\n-   function mprotect (addr : Address; len : size_t; prot : int) return int;\n-   pragma Import (C, mprotect);\n-\n-   procedure Hide_Unhide_Yellow_Zone (Hide : Boolean);\n-   --  Every thread except the initial one features an overflow warning area\n-   --  (called the Yellow Zone) which is just above the overflow guard area\n-   --  on the stack (called the Red Zone). During task execution, we want\n-   --  signals from the Red Zone, so we need to hide the Yellow Zone. This\n-   --  procedure is called at the start of task execution (with Hide set True)\n-   --  to hide the Yellow Zone, and at the end of task execution (with Hide\n-   --  set False) to unhide the Yellow Zone.\n-\n-   ---------------------------------------\n-   -- Nonstandard Thread Initialization --\n-   ---------------------------------------\n-\n-   procedure pthread_init;\n-   pragma Inline (pthread_init);\n-   --  This is a dummy procedure to share some GNULLI files\n-\n-   -------------------------\n-   -- POSIX.1c  Section 3 --\n-   -------------------------\n-\n-   function sigwait\n-     (set : access sigset_t;\n-      sig : access Signal) return int;\n-   pragma Import (C, sigwait, \"__sigwaitd10\");\n-\n-   function pthread_kill\n-     (thread : pthread_t;\n-      sig    : Signal) return int;\n-   pragma Import (C, pthread_kill);\n-\n-   function pthread_sigmask\n-     (how  : int;\n-      set  : access sigset_t;\n-      oset : access sigset_t) return int;\n-   pragma Import (C, pthread_sigmask);\n-\n-   --------------------------\n-   -- POSIX.1c  Section 11 --\n-   --------------------------\n-\n-   function pthread_mutexattr_init (attr : access pthread_mutexattr_t)\n-     return int;\n-   pragma Import (C, pthread_mutexattr_init);\n-\n-   function pthread_mutexattr_destroy\n-     (attr : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutexattr_destroy);\n-\n-   function pthread_mutex_init\n-     (mutex : access pthread_mutex_t;\n-      attr  : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutex_init, \"__pthread_mutex_init\");\n-\n-   function pthread_mutex_destroy (mutex : access pthread_mutex_t) return int;\n-   pragma Import (C, pthread_mutex_destroy, \"__pthread_mutex_destroy\");\n-\n-   function pthread_mutex_lock (mutex : access pthread_mutex_t) return int;\n-   pragma Import (C, pthread_mutex_lock, \"__pthread_mutex_lock\");\n-\n-   function pthread_mutex_unlock (mutex : access pthread_mutex_t) return int;\n-   pragma Import (C, pthread_mutex_unlock, \"__pthread_mutex_unlock\");\n-\n-   function pthread_condattr_init\n-     (attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_condattr_init);\n-\n-   function pthread_condattr_destroy\n-     (attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_condattr_destroy);\n-\n-   function pthread_cond_init\n-     (cond : access pthread_cond_t;\n-      attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_cond_init, \"__pthread_cond_init\");\n-\n-   function pthread_cond_destroy (cond : access pthread_cond_t) return int;\n-   pragma Import (C, pthread_cond_destroy, \"__pthread_cond_destroy\");\n-\n-   function pthread_cond_signal (cond : access pthread_cond_t) return int;\n-   pragma Import (C, pthread_cond_signal, \"__pthread_cond_signal\");\n-\n-   function pthread_cond_wait\n-     (cond  : access pthread_cond_t;\n-      mutex : access pthread_mutex_t) return  int;\n-   pragma Import (C, pthread_cond_wait, \"__pthread_cond_wait\");\n-\n-   function pthread_cond_timedwait\n-     (cond    : access pthread_cond_t;\n-      mutex   : access pthread_mutex_t;\n-      abstime : access timespec) return int;\n-   pragma Import (C, pthread_cond_timedwait, \"__pthread_cond_timedwait\");\n-\n-   --------------------------\n-   -- POSIX.1c  Section 13 --\n-   --------------------------\n-\n-   function pthread_mutexattr_setprotocol\n-     (attr     : access pthread_mutexattr_t;\n-      protocol : int) return int;\n-   pragma Import (C, pthread_mutexattr_setprotocol);\n-\n-   function pthread_mutexattr_setprioceiling\n-     (attr     : access pthread_mutexattr_t;\n-      prioceiling : int) return int;\n-   pragma Import (C, pthread_mutexattr_setprioceiling);\n-\n-   type struct_sched_param is record\n-      sched_priority : int;  --  scheduling priority\n-   end record;\n-\n-   function pthread_setschedparam\n-     (thread : pthread_t;\n-      policy : int;\n-      param  : access struct_sched_param) return int;\n-   pragma Import (C, pthread_setschedparam);\n-\n-   function pthread_attr_setscope\n-     (attr            : access pthread_attr_t;\n-      contentionscope : int) return int;\n-   pragma Import (C, pthread_attr_setscope);\n-\n-   function pthread_attr_setinheritsched\n-     (attr            : access pthread_attr_t;\n-      inheritsched    : int) return int;\n-   pragma Import (C, pthread_attr_setinheritsched,\n-     \"__pthread_attr_setinheritsched\");\n-\n-   function pthread_attr_setschedpolicy\n-     (attr : access pthread_attr_t; policy : int) return int;\n-   pragma Import (C, pthread_attr_setschedpolicy);\n-\n-   function pthread_attr_setschedparam\n-     (attr        : access pthread_attr_t;\n-      sched_param : access struct_sched_param) return int;\n-   pragma Import (C, pthread_attr_setschedparam);\n-\n-   function sched_yield return int;\n-   pragma Import (C, sched_yield);\n-\n-   --------------------------\n-   -- P1003.1c  Section 16 --\n-   --------------------------\n-\n-   function pthread_attr_init (attributes : access pthread_attr_t)\n-     return int;\n-   pragma Import (C, pthread_attr_init);\n-\n-   function pthread_attr_destroy (attributes : access pthread_attr_t)\n-     return int;\n-   pragma Import (C, pthread_attr_destroy);\n-\n-   function pthread_attr_setdetachstate\n-     (attr        : access pthread_attr_t;\n-      detachstate : int) return int;\n-   pragma Import (C, pthread_attr_setdetachstate);\n-\n-   function pthread_attr_setstacksize\n-     (attr      : access pthread_attr_t;\n-      stacksize : size_t) return int;\n-   pragma Import (C, pthread_attr_setstacksize, \"__pthread_attr_setstacksize\");\n-\n-   function pthread_create\n-     (thread        : access pthread_t;\n-      attributes    : access pthread_attr_t;\n-      start_routine : Thread_Body;\n-      arg           : System.Address) return int;\n-   pragma Import (C, pthread_create, \"__pthread_create\");\n-\n-   procedure pthread_exit (status : System.Address);\n-   pragma Import (C, pthread_exit, \"__pthread_exit\");\n-\n-   function pthread_self return pthread_t;\n-   pragma Inline (pthread_self);\n-\n-   --------------------------\n-   -- POSIX.1c  Section 17 --\n-   --------------------------\n-\n-   function pthread_setspecific\n-     (key : pthread_key_t; value : System.Address) return int;\n-   pragma Import (C, pthread_setspecific, \"__pthread_setspecific\");\n-\n-   function pthread_getspecific (key : pthread_key_t) return System.Address;\n-   pragma Import (C, pthread_getspecific, \"__pthread_getspecific\");\n-\n-   type destructor_pointer is access procedure (arg : System.Address);\n-   pragma Convention (C, destructor_pointer);\n-\n-   function pthread_key_create\n-     (key        : access pthread_key_t;\n-      destructor : destructor_pointer) return int;\n-   pragma Import (C, pthread_key_create);\n-\n-private\n-\n-   type sigset_t is new unsigned_long;\n-\n-   type pid_t is new int;\n-\n-   type time_t is new int;\n-\n-   type timespec is record\n-      tv_sec  : time_t;\n-      tv_nsec : long;\n-   end record;\n-   pragma Convention (C, timespec);\n-\n-   type unsigned_long_array is array (Natural range <>) of unsigned_long;\n-\n-   type pthread_t is new System.Address;\n-\n-   type pthread_teb_t is record\n-      reserved1     : System.Address;\n-      reserved2     : System.Address;\n-      size          : unsigned_short;\n-      version       : unsigned_char;\n-      reserved3     : unsigned_char;\n-      external      : unsigned_char;\n-      reserved4     : char_array (0 .. 1);\n-      creator       : unsigned_char;\n-      sequence      : unsigned_long;\n-      reserved5     : unsigned_long_array (0 .. 1);\n-      per_kt_area   : System.Address;\n-      stack_base    : System.Address;\n-      stack_reserve : System.Address;\n-      stack_yellow  : System.Address;\n-      stack_guard   : System.Address;\n-      stack_size    : unsigned_long;\n-      tsd_values    : System.Address;\n-      tsd_count     : unsigned_long;\n-      reserved6     : unsigned;\n-      reserved7     : unsigned;\n-      thread_flags  : unsigned;\n-      thd_errno     : int;\n-      stack_hiwater : System.Address;\n-      home_rad      : unsigned_long;\n-   end record;\n-   pragma Convention (C, pthread_teb_t);\n-\n-   type pthread_cond_t is record\n-      state     : unsigned;\n-      valid     : unsigned;\n-      name      : System.Address;\n-      arg       : unsigned;\n-      reserved1 : unsigned;\n-      sequence  : unsigned_long;\n-      block     : System.Address;\n-   end record;\n-   pragma Convention (C, pthread_cond_t);\n-\n-   type pthread_attr_t is record\n-      valid    : long;\n-      name     : System.Address;\n-      arg      : unsigned_long;\n-      reserved : unsigned_long_array (0 .. 18);\n-   end record;\n-   pragma Convention (C, pthread_attr_t);\n-\n-   type pthread_mutex_t is record\n-      lock     : unsigned;\n-      valid    : unsigned;\n-      name     : System.Address;\n-      arg      : unsigned;\n-      depth    : unsigned;\n-      sequence : unsigned_long;\n-      owner    : unsigned_long;\n-      block    : System.Address;\n-   end record;\n-   for pthread_mutex_t'Size use 8 * 48;\n-   pragma Convention (C, pthread_mutex_t);\n-\n-   type pthread_mutexattr_t is record\n-      valid    : long;\n-      reserved : unsigned_long_array (0 .. 14);\n-   end record;\n-   pragma Convention (C, pthread_mutexattr_t);\n-\n-   type pthread_condattr_t is record\n-      valid    : long;\n-      reserved : unsigned_long_array (0 .. 12);\n-   end record;\n-   pragma Convention (C, pthread_condattr_t);\n-\n-   type pthread_key_t is new unsigned;\n-\n-end System.OS_Interface;"}, {"sha": "8d69e5b19b1eb9fbb6de7f85b77c06d07f2754ae", "filename": "gcc/ada/s-taprop-tru64.adb", "status": "removed", "additions": 0, "deletions": 1365, "changes": 1365, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-taprop-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-taprop-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-tru64.adb?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,1365 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---     S Y S T E M . T A S K _ P R I M I T I V E S . O P E R A T I O N S    --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is a Tru64 version of this package\n-\n---  This package contains all the GNULL primitives that interface directly with\n---  the underlying OS.\n-\n-pragma Polling (Off);\n---  Turn off polling, we do not want ATC polling to take place during tasking\n---  operations. It causes infinite loops and other problems.\n-\n-with Interfaces;\n-with Interfaces.C;\n-\n-with System.Tasking.Debug;\n-with System.Interrupt_Management;\n-with System.OS_Constants;\n-with System.OS_Primitives;\n-with System.Task_Info;\n-\n-with System.Soft_Links;\n---  We use System.Soft_Links instead of System.Tasking.Initialization\n---  because the later is a higher level package that we shouldn't depend on.\n---  For example when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Stages.\n-\n-package body System.Task_Primitives.Operations is\n-\n-   package OSC renames System.OS_Constants;\n-   package SSL renames System.Soft_Links;\n-\n-   use System.Tasking.Debug;\n-   use System.Tasking;\n-   use Interfaces.C;\n-   use System.OS_Interface;\n-   use System.Parameters;\n-   use System.OS_Primitives;\n-\n-   ----------------\n-   -- Local Data --\n-   ----------------\n-\n-   --  The followings are logically constants, but need to be initialized\n-   --  at run time.\n-\n-   Single_RTS_Lock : aliased RTS_Lock;\n-   --  This is a lock to allow only one thread of control in the RTS at\n-   --  a time; it is used to execute in mutual exclusion from all other tasks.\n-   --  Used mainly in Single_Lock mode, but also to protect All_Tasks_List\n-\n-   Environment_Task_Id : Task_Id;\n-   --  A variable to hold Task_Id for the environment task\n-\n-   Unblocked_Signal_Mask : aliased sigset_t;\n-   --  The set of signals that should unblocked in all tasks\n-\n-   Time_Slice_Val : Integer;\n-   pragma Import (C, Time_Slice_Val, \"__gl_time_slice_val\");\n-\n-   Locking_Policy : Character;\n-   pragma Import (C, Locking_Policy, \"__gl_locking_policy\");\n-\n-   Dispatching_Policy : Character;\n-   pragma Import (C, Dispatching_Policy, \"__gl_task_dispatching_policy\");\n-\n-   Curpid : pid_t;\n-\n-   Foreign_Task_Elaborated : aliased Boolean := True;\n-   --  Used to identified fake tasks (i.e., non-Ada Threads)\n-\n-   Abort_Handler_Installed : Boolean := False;\n-   --  True if a handler for the abort signal is installed\n-\n-   --------------------\n-   -- Local Packages --\n-   --------------------\n-\n-   package Specific is\n-\n-      procedure Initialize (Environment_Task : Task_Id);\n-      pragma Inline (Initialize);\n-      --  Initialize various data needed by this package\n-\n-      function Is_Valid_Task return Boolean;\n-      pragma Inline (Is_Valid_Task);\n-      --  Does executing thread have a TCB?\n-\n-      procedure Set (Self_Id : Task_Id);\n-      pragma Inline (Set);\n-      --  Set the self id for the current task\n-\n-      function Self return Task_Id;\n-      pragma Inline (Self);\n-      --  Return a pointer to the Ada Task Control Block of the calling task\n-\n-   end Specific;\n-\n-   package body Specific is separate;\n-   --  The body of this package is target specific\n-\n-   ----------------------------------\n-   -- ATCB allocation/deallocation --\n-   ----------------------------------\n-\n-   package body ATCB_Allocation is separate;\n-   --  The body of this package is shared across several targets\n-\n-   ---------------------------------\n-   -- Support for foreign threads --\n-   ---------------------------------\n-\n-   function Register_Foreign_Thread (Thread : Thread_Id) return Task_Id;\n-   --  Allocate and initialize a new ATCB for the current Thread\n-\n-   function Register_Foreign_Thread\n-     (Thread : Thread_Id) return Task_Id is separate;\n-\n-   -----------------------\n-   -- Local Subprograms --\n-   -----------------------\n-\n-   procedure Abort_Handler (Sig : Signal);\n-   --  Signal handler used to implement asynchronous abort\n-\n-   function Get_Policy (Prio : System.Any_Priority) return Character;\n-   pragma Import (C, Get_Policy, \"__gnat_get_specific_dispatching\");\n-   --  Get priority specific dispatching policy\n-\n-   -------------------\n-   -- Abort_Handler --\n-   -------------------\n-\n-   procedure Abort_Handler (Sig : Signal) is\n-      pragma Unreferenced (Sig);\n-\n-      T       : constant Task_Id := Self;\n-      Old_Set : aliased sigset_t;\n-\n-      Result : Interfaces.C.int;\n-      pragma Warnings (Off, Result);\n-\n-   begin\n-      --  It's not safe to raise an exception when using GCC ZCX mechanism.\n-      --  Note that we still need to install a signal handler, since in some\n-      --  cases (e.g. shutdown of the Server_Task in System.Interrupts) we\n-      --  need to send the Abort signal to a task.\n-\n-      if ZCX_By_Default then\n-         return;\n-      end if;\n-\n-      if T.Deferral_Level = 0\n-        and then T.Pending_ATC_Level < T.ATC_Nesting_Level\n-        and then not T.Aborting\n-      then\n-         T.Aborting := True;\n-\n-         --  Make sure signals used for RTS internal purpose are unmasked\n-\n-         Result :=\n-           pthread_sigmask\n-             (SIG_UNBLOCK,\n-              Unblocked_Signal_Mask'Access,\n-              Old_Set'Access);\n-         pragma Assert (Result = 0);\n-\n-         raise Standard'Abort_Signal;\n-      end if;\n-   end Abort_Handler;\n-\n-   ------------------\n-   -- Stack_Guard  --\n-   ------------------\n-\n-   --  The underlying thread system sets a guard page at the bottom of a thread\n-   --  stack, so nothing is needed.\n-\n-   procedure Stack_Guard (T : ST.Task_Id; On : Boolean) is\n-      pragma Unreferenced (T);\n-      pragma Unreferenced (On);\n-   begin\n-      null;\n-   end Stack_Guard;\n-\n-   --------------------\n-   -- Get_Thread_Id  --\n-   --------------------\n-\n-   function Get_Thread_Id (T : ST.Task_Id) return OSI.Thread_Id is\n-   begin\n-      return T.Common.LL.Thread;\n-   end Get_Thread_Id;\n-\n-   ----------\n-   -- Self --\n-   ----------\n-\n-   function Self return Task_Id renames Specific.Self;\n-\n-   ---------------------\n-   -- Initialize_Lock --\n-   ---------------------\n-\n-   --  Note: mutexes and cond_variables needed per-task basis are initialized\n-   --  in Initialize_TCB and the Storage_Error is handled. Other mutexes (such\n-   --  as RTS_Lock, Memory_Lock...) used in RTS is initialized before any\n-   --  status change of RTS. Therefore raising Storage_Error in the following\n-   --  routines should be able to be handled safely.\n-\n-   procedure Initialize_Lock\n-     (Prio : System.Any_Priority;\n-      L    : not null access Lock)\n-   is\n-      Attributes : aliased pthread_mutexattr_t;\n-      Result     : Interfaces.C.int;\n-\n-   begin\n-      Result := pthread_mutexattr_init (Attributes'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      if Result = ENOMEM then\n-         raise Storage_Error;\n-      end if;\n-\n-      if Locking_Policy = 'C' then\n-         L.Ceiling := Interfaces.C.int (Prio);\n-      end if;\n-\n-      Result := pthread_mutex_init (L.L'Access, Attributes'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      if Result = ENOMEM then\n-         Result := pthread_mutexattr_destroy (Attributes'Access);\n-         raise Storage_Error;\n-      end if;\n-\n-      Result := pthread_mutexattr_destroy (Attributes'Access);\n-      pragma Assert (Result = 0);\n-   end Initialize_Lock;\n-\n-   procedure Initialize_Lock\n-     (L     : not null access RTS_Lock;\n-      Level : Lock_Level)\n-   is\n-      pragma Unreferenced (Level);\n-\n-      Attributes : aliased pthread_mutexattr_t;\n-      Result     : Interfaces.C.int;\n-\n-   begin\n-      Result := pthread_mutexattr_init (Attributes'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      if Result = ENOMEM then\n-         raise Storage_Error;\n-      end if;\n-\n-      Result := pthread_mutex_init (L, Attributes'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      if Result = ENOMEM then\n-         Result := pthread_mutexattr_destroy (Attributes'Access);\n-         raise Storage_Error;\n-      end if;\n-\n-      Result := pthread_mutexattr_destroy (Attributes'Access);\n-      pragma Assert (Result = 0);\n-   end Initialize_Lock;\n-\n-   -------------------\n-   -- Finalize_Lock --\n-   -------------------\n-\n-   procedure Finalize_Lock (L : not null access Lock) is\n-      Result : Interfaces.C.int;\n-   begin\n-      Result := pthread_mutex_destroy (L.L'Access);\n-      pragma Assert (Result = 0);\n-   end Finalize_Lock;\n-\n-   procedure Finalize_Lock (L : not null access RTS_Lock) is\n-      Result : Interfaces.C.int;\n-   begin\n-      Result := pthread_mutex_destroy (L);\n-      pragma Assert (Result = 0);\n-   end Finalize_Lock;\n-\n-   ----------------\n-   -- Write_Lock --\n-   ----------------\n-\n-   procedure Write_Lock\n-     (L                 : not null access Lock;\n-      Ceiling_Violation : out Boolean)\n-   is\n-      Result         : Interfaces.C.int;\n-      Self_ID        : Task_Id;\n-      All_Tasks_Link : Task_Id;\n-      Current_Prio   : System.Any_Priority;\n-\n-   begin\n-      --  Perform ceiling checks only when this is the locking policy in use\n-\n-      if Locking_Policy = 'C' then\n-         Self_ID := Self;\n-         All_Tasks_Link := Self_ID.Common.All_Tasks_Link;\n-         Current_Prio := Get_Priority (Self_ID);\n-\n-         --  If there is no other task, no need to check priorities\n-\n-         if All_Tasks_Link /= Null_Task\n-           and then L.Ceiling < Interfaces.C.int (Current_Prio)\n-         then\n-            Ceiling_Violation := True;\n-            return;\n-         end if;\n-      end if;\n-\n-      Result := pthread_mutex_lock (L.L'Access);\n-      pragma Assert (Result = 0);\n-\n-      Ceiling_Violation := False;\n-   end Write_Lock;\n-\n-   procedure Write_Lock\n-     (L           : not null access RTS_Lock;\n-      Global_Lock : Boolean := False)\n-   is\n-      Result : Interfaces.C.int;\n-   begin\n-      if not Single_Lock or else Global_Lock then\n-         Result := pthread_mutex_lock (L);\n-         pragma Assert (Result = 0);\n-      end if;\n-   end Write_Lock;\n-\n-   procedure Write_Lock (T : Task_Id) is\n-      Result : Interfaces.C.int;\n-   begin\n-      if not Single_Lock then\n-         Result := pthread_mutex_lock (T.Common.LL.L'Access);\n-         pragma Assert (Result = 0);\n-      end if;\n-   end Write_Lock;\n-\n-   ---------------\n-   -- Read_Lock --\n-   ---------------\n-\n-   procedure Read_Lock\n-     (L                 : not null access Lock;\n-      Ceiling_Violation : out Boolean)\n-   is\n-   begin\n-      Write_Lock (L, Ceiling_Violation);\n-   end Read_Lock;\n-\n-   ------------\n-   -- Unlock --\n-   ------------\n-\n-   procedure Unlock (L : not null access Lock) is\n-      Result : Interfaces.C.int;\n-   begin\n-      Result := pthread_mutex_unlock (L.L'Access);\n-      pragma Assert (Result = 0);\n-   end Unlock;\n-\n-   procedure Unlock\n-     (L           : not null access RTS_Lock;\n-      Global_Lock : Boolean := False)\n-   is\n-      Result : Interfaces.C.int;\n-   begin\n-      if not Single_Lock or else Global_Lock then\n-         Result := pthread_mutex_unlock (L);\n-         pragma Assert (Result = 0);\n-      end if;\n-   end Unlock;\n-\n-   procedure Unlock (T : Task_Id) is\n-      Result : Interfaces.C.int;\n-   begin\n-      if not Single_Lock then\n-         Result := pthread_mutex_unlock (T.Common.LL.L'Access);\n-         pragma Assert (Result = 0);\n-      end if;\n-   end Unlock;\n-\n-   -----------------\n-   -- Set_Ceiling --\n-   -----------------\n-\n-   --  Dynamic priority ceilings are not supported by the underlying system\n-\n-   procedure Set_Ceiling\n-     (L    : not null access Lock;\n-      Prio : System.Any_Priority)\n-   is\n-      pragma Unreferenced (L, Prio);\n-   begin\n-      null;\n-   end Set_Ceiling;\n-\n-   -----------\n-   -- Sleep --\n-   -----------\n-\n-   procedure Sleep\n-     (Self_ID : Task_Id;\n-      Reason  : System.Tasking.Task_States)\n-   is\n-      pragma Unreferenced (Reason);\n-\n-      Result : Interfaces.C.int;\n-\n-   begin\n-      Result :=\n-        pthread_cond_wait\n-          (cond  => Self_ID.Common.LL.CV'Access,\n-           mutex => (if Single_Lock\n-                     then Single_RTS_Lock'Access\n-                     else Self_ID.Common.LL.L'Access));\n-\n-      --  EINTR is not considered a failure\n-\n-      pragma Assert (Result = 0 or else Result = EINTR);\n-   end Sleep;\n-\n-   -----------------\n-   -- Timed_Sleep --\n-   -----------------\n-\n-   --  This is for use within the run-time system, so abort is assumed to be\n-   --  already deferred, and the caller should be holding its own ATCB lock.\n-\n-   procedure Timed_Sleep\n-     (Self_ID  : Task_Id;\n-      Time     : Duration;\n-      Mode     : ST.Delay_Modes;\n-      Reason   : System.Tasking.Task_States;\n-      Timedout : out Boolean;\n-      Yielded  : out Boolean)\n-   is\n-      pragma Unreferenced (Reason);\n-\n-      Base_Time  : constant Duration := Monotonic_Clock;\n-      Check_Time : Duration := Base_Time;\n-      Abs_Time   : Duration;\n-      Request    : aliased timespec;\n-      Result     : Interfaces.C.int;\n-\n-   begin\n-      Timedout := True;\n-      Yielded := False;\n-\n-      Abs_Time :=\n-        (if Mode = Relative\n-         then Duration'Min (Time, Max_Sensible_Delay) + Check_Time\n-         else Duration'Min (Check_Time + Max_Sensible_Delay, Time));\n-\n-      if Abs_Time > Check_Time then\n-         Request := To_Timespec (Abs_Time);\n-\n-         loop\n-            exit when Self_ID.Pending_ATC_Level < Self_ID.ATC_Nesting_Level;\n-\n-            Result :=\n-              pthread_cond_timedwait\n-                (cond    => Self_ID.Common.LL.CV'Access,\n-                 mutex   => (if Single_Lock\n-                             then Single_RTS_Lock'Access\n-                             else Self_ID.Common.LL.L'Access),\n-                 abstime => Request'Access);\n-\n-            Check_Time := Monotonic_Clock;\n-            exit when Abs_Time <= Check_Time or else Check_Time < Base_Time;\n-\n-            if Result = 0 or Result = EINTR then\n-\n-               --  Somebody may have called Wakeup for us\n-\n-               Timedout := False;\n-               exit;\n-            end if;\n-\n-            pragma Assert (Result = ETIMEDOUT);\n-         end loop;\n-      end if;\n-   end Timed_Sleep;\n-\n-   -----------------\n-   -- Timed_Delay --\n-   -----------------\n-\n-   --  This is for use in implementing delay statements, so we assume the\n-   --  caller is abort-deferred but is holding no locks.\n-\n-   procedure Timed_Delay\n-     (Self_ID  : Task_Id;\n-      Time     : Duration;\n-      Mode     : ST.Delay_Modes)\n-   is\n-      Base_Time  : constant Duration := Monotonic_Clock;\n-      Check_Time : Duration := Base_Time;\n-      Abs_Time   : Duration;\n-      Request    : aliased timespec;\n-      Result     : Interfaces.C.int;\n-\n-   begin\n-      if Single_Lock then\n-         Lock_RTS;\n-      end if;\n-\n-      Write_Lock (Self_ID);\n-\n-      Abs_Time :=\n-        (if Mode = Relative\n-         then Time + Check_Time\n-         else Duration'Min (Check_Time + Max_Sensible_Delay, Time));\n-\n-      if Abs_Time > Check_Time then\n-         Request := To_Timespec (Abs_Time);\n-         Self_ID.Common.State := Delay_Sleep;\n-\n-         loop\n-            exit when Self_ID.Pending_ATC_Level < Self_ID.ATC_Nesting_Level;\n-\n-            Result :=\n-              pthread_cond_timedwait\n-                (cond    => Self_ID.Common.LL.CV'Access,\n-                 mutex   => (if Single_Lock\n-                             then Single_RTS_Lock'Access\n-                             else Self_ID.Common.LL.L'Access),\n-                 abstime => Request'Access);\n-\n-            Check_Time := Monotonic_Clock;\n-            exit when Abs_Time <= Check_Time or else Check_Time < Base_Time;\n-\n-            pragma Assert (Result = 0         or else\n-                           Result = ETIMEDOUT or else\n-                           Result = EINTR);\n-         end loop;\n-\n-         Self_ID.Common.State := Runnable;\n-      end if;\n-\n-      Unlock (Self_ID);\n-\n-      if Single_Lock then\n-         Unlock_RTS;\n-      end if;\n-\n-      Yield;\n-   end Timed_Delay;\n-\n-   ---------------------\n-   -- Monotonic_Clock --\n-   ---------------------\n-\n-   function Monotonic_Clock return Duration is\n-      TS     : aliased timespec;\n-      Result : Interfaces.C.int;\n-   begin\n-      Result := clock_gettime (OSC.CLOCK_RT_Ada, TS'Unchecked_Access);\n-      pragma Assert (Result = 0);\n-      return To_Duration (TS);\n-   end Monotonic_Clock;\n-\n-   -------------------\n-   -- RT_Resolution --\n-   -------------------\n-\n-   function RT_Resolution return Duration is\n-   begin\n-      --  Returned value must be an integral multiple of Duration'Small (1 ns)\n-      --  The following is the best approximation of 1/1024. The clock on the\n-      --  DEC Alpha ticks at 1024 Hz.\n-\n-      return 0.000_976_563;\n-   end RT_Resolution;\n-\n-   ------------\n-   -- Wakeup --\n-   ------------\n-\n-   procedure Wakeup (T : Task_Id; Reason : System.Tasking.Task_States) is\n-      pragma Unreferenced (Reason);\n-      Result : Interfaces.C.int;\n-   begin\n-      Result := pthread_cond_signal (T.Common.LL.CV'Access);\n-      pragma Assert (Result = 0);\n-   end Wakeup;\n-\n-   -----------\n-   -- Yield --\n-   -----------\n-\n-   procedure Yield (Do_Yield : Boolean := True) is\n-      Result : Interfaces.C.int;\n-      pragma Unreferenced (Result);\n-   begin\n-      if Do_Yield then\n-         Result := sched_yield;\n-      end if;\n-   end Yield;\n-\n-   ------------------\n-   -- Set_Priority --\n-   ------------------\n-\n-   procedure Set_Priority\n-     (T                   : Task_Id;\n-      Prio                : System.Any_Priority;\n-      Loss_Of_Inheritance : Boolean := False)\n-   is\n-      pragma Unreferenced (Loss_Of_Inheritance);\n-\n-      Result : Interfaces.C.int;\n-      Param  : aliased struct_sched_param;\n-\n-      Priority_Specific_Policy : constant Character := Get_Policy (Prio);\n-      --  Upper case first character of the policy name corresponding to the\n-      --  task as set by a Priority_Specific_Dispatching pragma.\n-\n-   begin\n-      T.Common.Current_Priority := Prio;\n-      Param.sched_priority  := Interfaces.C.int (Underlying_Priorities (Prio));\n-\n-      if Dispatching_Policy = 'R'\n-        or else Priority_Specific_Policy = 'R'\n-        or else Time_Slice_Val > 0\n-      then\n-         Result :=\n-           pthread_setschedparam\n-             (T.Common.LL.Thread, SCHED_RR, Param'Access);\n-\n-      elsif Dispatching_Policy = 'F'\n-        or else Priority_Specific_Policy = 'F'\n-        or else Time_Slice_Val = 0\n-      then\n-         Result :=\n-           pthread_setschedparam\n-             (T.Common.LL.Thread, SCHED_FIFO, Param'Access);\n-\n-      else\n-         Result :=\n-           pthread_setschedparam\n-             (T.Common.LL.Thread, SCHED_OTHER, Param'Access);\n-      end if;\n-\n-      pragma Assert (Result = 0);\n-   end Set_Priority;\n-\n-   ------------------\n-   -- Get_Priority --\n-   ------------------\n-\n-   function Get_Priority (T : Task_Id) return System.Any_Priority is\n-   begin\n-      return T.Common.Current_Priority;\n-   end Get_Priority;\n-\n-   ----------------\n-   -- Enter_Task --\n-   ----------------\n-\n-   procedure Enter_Task (Self_ID : Task_Id) is\n-   begin\n-      Hide_Unhide_Yellow_Zone (Hide => True);\n-      Self_ID.Common.LL.Thread := pthread_self;\n-\n-      Specific.Set (Self_ID);\n-   end Enter_Task;\n-\n-   -------------------\n-   -- Is_Valid_Task --\n-   -------------------\n-\n-   function Is_Valid_Task return Boolean renames Specific.Is_Valid_Task;\n-\n-   -----------------------------\n-   -- Register_Foreign_Thread --\n-   -----------------------------\n-\n-   function Register_Foreign_Thread return Task_Id is\n-   begin\n-      if Is_Valid_Task then\n-         return Self;\n-      else\n-         return Register_Foreign_Thread (pthread_self);\n-      end if;\n-   end Register_Foreign_Thread;\n-\n-   --------------------\n-   -- Initialize_TCB --\n-   --------------------\n-\n-   procedure Initialize_TCB (Self_ID : Task_Id; Succeeded : out Boolean) is\n-      Mutex_Attr : aliased pthread_mutexattr_t;\n-      Result     : Interfaces.C.int;\n-      Cond_Attr  : aliased pthread_condattr_t;\n-\n-   begin\n-      if not Single_Lock then\n-         Result := pthread_mutexattr_init (Mutex_Attr'Access);\n-         pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-         if Result = 0 then\n-            Result :=\n-              pthread_mutex_init\n-                (Self_ID.Common.LL.L'Access, Mutex_Attr'Access);\n-            pragma Assert (Result = 0 or else Result = ENOMEM);\n-         end if;\n-\n-         if Result /= 0 then\n-            Succeeded := False;\n-            return;\n-         end if;\n-\n-         Result := pthread_mutexattr_destroy (Mutex_Attr'Access);\n-         pragma Assert (Result = 0);\n-      end if;\n-\n-      Result := pthread_condattr_init (Cond_Attr'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      if Result = 0 then\n-         Result :=\n-           pthread_cond_init\n-             (Self_ID.Common.LL.CV'Access, Cond_Attr'Access);\n-         pragma Assert (Result = 0 or else Result = ENOMEM);\n-      end if;\n-\n-      if Result = 0 then\n-         Succeeded := True;\n-      else\n-         if not Single_Lock then\n-            Result := pthread_mutex_destroy (Self_ID.Common.LL.L'Access);\n-            pragma Assert (Result = 0);\n-         end if;\n-\n-         Succeeded := False;\n-      end if;\n-\n-      Result := pthread_condattr_destroy (Cond_Attr'Access);\n-      pragma Assert (Result = 0);\n-   end Initialize_TCB;\n-\n-   -----------------\n-   -- Create_Task --\n-   -----------------\n-\n-   procedure Create_Task\n-     (T          : Task_Id;\n-      Wrapper    : System.Address;\n-      Stack_Size : System.Parameters.Size_Type;\n-      Priority   : System.Any_Priority;\n-      Succeeded  : out Boolean)\n-   is\n-      Attributes          : aliased pthread_attr_t;\n-      Adjusted_Stack_Size : Interfaces.C.size_t;\n-      Result              : Interfaces.C.int;\n-      Param               : aliased System.OS_Interface.struct_sched_param;\n-\n-      Priority_Specific_Policy : constant Character := Get_Policy (Priority);\n-      --  Upper case first character of the policy name corresponding to the\n-      --  task as set by a Priority_Specific_Dispatching pragma.\n-\n-      use System.Task_Info;\n-\n-   begin\n-      --  Account for the Yellow Zone (2 pages) and the guard page right above.\n-      --  See Hide_Unhide_Yellow_Zone for the rationale.\n-\n-      Adjusted_Stack_Size :=\n-        Interfaces.C.size_t (Stack_Size) + 3 * Get_Page_Size;\n-\n-      Result := pthread_attr_init (Attributes'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      if Result /= 0 then\n-         Succeeded := False;\n-         return;\n-      end if;\n-\n-      Result :=\n-        pthread_attr_setdetachstate\n-          (Attributes'Access, PTHREAD_CREATE_DETACHED);\n-      pragma Assert (Result = 0);\n-\n-      Result :=\n-        pthread_attr_setstacksize\n-          (Attributes'Access, Adjusted_Stack_Size);\n-      pragma Assert (Result = 0);\n-\n-      Param.sched_priority :=\n-        Interfaces.C.int (Underlying_Priorities (Priority));\n-      Result :=\n-        pthread_attr_setschedparam\n-          (Attributes'Access, Param'Access);\n-      pragma Assert (Result = 0);\n-\n-      if Dispatching_Policy = 'R'\n-        or else Priority_Specific_Policy = 'R'\n-        or else Time_Slice_Val > 0\n-      then\n-         Result :=\n-           pthread_attr_setschedpolicy\n-             (Attributes'Access, System.OS_Interface.SCHED_RR);\n-\n-      elsif Dispatching_Policy = 'F'\n-        or else Priority_Specific_Policy = 'F'\n-        or else Time_Slice_Val = 0\n-      then\n-         Result :=\n-           pthread_attr_setschedpolicy\n-             (Attributes'Access, System.OS_Interface.SCHED_FIFO);\n-\n-      else\n-         Result :=\n-           pthread_attr_setschedpolicy\n-             (Attributes'Access, System.OS_Interface.SCHED_OTHER);\n-      end if;\n-\n-      pragma Assert (Result = 0);\n-\n-      --  Set the scheduling parameters explicitly, since this is the only way\n-      --  to force the OS to take e.g. the sched policy and scope attributes\n-      --  into account.\n-\n-      Result :=\n-        pthread_attr_setinheritsched\n-          (Attributes'Access, PTHREAD_EXPLICIT_SCHED);\n-      pragma Assert (Result = 0);\n-\n-      T.Common.Current_Priority := Priority;\n-\n-      if T.Common.Task_Info /= null then\n-         case T.Common.Task_Info.Contention_Scope is\n-            when System.Task_Info.Process_Scope =>\n-               Result :=\n-                 pthread_attr_setscope\n-                   (Attributes'Access, PTHREAD_SCOPE_PROCESS);\n-\n-            when System.Task_Info.System_Scope =>\n-               Result :=\n-                 pthread_attr_setscope\n-                   (Attributes'Access, PTHREAD_SCOPE_SYSTEM);\n-\n-            when System.Task_Info.Default_Scope =>\n-               Result := 0;\n-         end case;\n-\n-         pragma Assert (Result = 0);\n-      end if;\n-\n-      --  Since the initial signal mask of a thread is inherited from the\n-      --  creator, and the Environment task has all its signals masked, we\n-      --  do not need to manipulate caller's signal mask at this point.\n-      --  All tasks in RTS will have All_Tasks_Mask initially.\n-\n-      --  Note: the use of Unrestricted_Access in the following call is needed\n-      --  because otherwise we have an error of getting a access-to-volatile\n-      --  value which points to a non-volatile object. But in this case it is\n-      --  safe to do this, since we know we have no problems with aliasing and\n-      --  Unrestricted_Access bypasses this check.\n-\n-      Result :=\n-        pthread_create\n-          (T.Common.LL.Thread'Unrestricted_Access,\n-           Attributes'Access,\n-           Thread_Body_Access (Wrapper),\n-           To_Address (T));\n-      pragma Assert (Result = 0 or else Result = EAGAIN);\n-\n-      Succeeded := Result = 0;\n-\n-      Result := pthread_attr_destroy (Attributes'Access);\n-      pragma Assert (Result = 0);\n-\n-      if Succeeded and then T.Common.Task_Info /= null then\n-\n-         --  ??? We're using a process-wide function to implement a task\n-         --  specific characteristic.\n-\n-         if T.Common.Task_Info.Bind_To_Cpu_Number = 0 then\n-            Result := bind_to_cpu (Curpid, 0);\n-\n-         elsif T.Common.Task_Info.Bind_To_Cpu_Number > 0 then\n-            Result :=\n-              bind_to_cpu\n-                (Curpid,\n-                 Interfaces.C.unsigned_long (\n-                   Interfaces.Shift_Left\n-                     (Interfaces.Unsigned_64'(1),\n-                      T.Common.Task_Info.Bind_To_Cpu_Number - 1)));\n-            pragma Assert (Result = 0);\n-         end if;\n-      end if;\n-   end Create_Task;\n-\n-   ------------------\n-   -- Finalize_TCB --\n-   ------------------\n-\n-   procedure Finalize_TCB (T : Task_Id) is\n-      Result : Interfaces.C.int;\n-\n-   begin\n-      if not Single_Lock then\n-         Result := pthread_mutex_destroy (T.Common.LL.L'Access);\n-         pragma Assert (Result = 0);\n-      end if;\n-\n-      Result := pthread_cond_destroy (T.Common.LL.CV'Access);\n-      pragma Assert (Result = 0);\n-\n-      if T.Known_Tasks_Index /= -1 then\n-         Known_Tasks (T.Known_Tasks_Index) := null;\n-      end if;\n-\n-      ATCB_Allocation.Free_ATCB (T);\n-   end Finalize_TCB;\n-\n-   ---------------\n-   -- Exit_Task --\n-   ---------------\n-\n-   procedure Exit_Task is\n-   begin\n-      Specific.Set (null);\n-      Hide_Unhide_Yellow_Zone (Hide => False);\n-   end Exit_Task;\n-\n-   ----------------\n-   -- Abort_Task --\n-   ----------------\n-\n-   procedure Abort_Task (T : Task_Id) is\n-      Result : Interfaces.C.int;\n-   begin\n-      if Abort_Handler_Installed then\n-         Result := pthread_kill (T.Common.LL.Thread,\n-           Signal (System.Interrupt_Management.Abort_Task_Interrupt));\n-         pragma Assert (Result = 0);\n-      end if;\n-   end Abort_Task;\n-\n-   ----------------\n-   -- Initialize --\n-   ----------------\n-\n-   procedure Initialize (S : in out Suspension_Object) is\n-      Mutex_Attr : aliased pthread_mutexattr_t;\n-      Cond_Attr  : aliased pthread_condattr_t;\n-      Result     : Interfaces.C.int;\n-\n-   begin\n-      --  Initialize internal state (always to False (RM D.10(6)))\n-\n-      S.State := False;\n-      S.Waiting := False;\n-\n-      --  Initialize internal mutex\n-\n-      Result := pthread_mutexattr_init (Mutex_Attr'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      if Result = ENOMEM then\n-         raise Storage_Error;\n-      end if;\n-\n-      Result := pthread_mutex_init (S.L'Access, Mutex_Attr'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      if Result = ENOMEM then\n-         Result := pthread_mutexattr_destroy (Mutex_Attr'Access);\n-         raise Storage_Error;\n-      end if;\n-\n-      Result := pthread_mutexattr_destroy (Mutex_Attr'Access);\n-      pragma Assert (Result = 0);\n-\n-      --  Initialize internal condition variable\n-\n-      Result := pthread_condattr_init (Cond_Attr'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      Result := pthread_cond_init (S.CV'Access, Cond_Attr'Access);\n-\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      if Result /= 0 then\n-         Result := pthread_mutex_destroy (S.L'Access);\n-         pragma Assert (Result = 0);\n-\n-         if Result = ENOMEM then\n-            raise Storage_Error;\n-         end if;\n-      end if;\n-   end Initialize;\n-\n-   --------------\n-   -- Finalize --\n-   --------------\n-\n-   procedure Finalize (S : in out Suspension_Object) is\n-      Result  : Interfaces.C.int;\n-\n-   begin\n-      --  Destroy internal mutex\n-\n-      Result := pthread_mutex_destroy (S.L'Access);\n-      pragma Assert (Result = 0);\n-\n-      --  Destroy internal condition variable\n-\n-      Result := pthread_cond_destroy (S.CV'Access);\n-      pragma Assert (Result = 0);\n-   end Finalize;\n-\n-   -------------------\n-   -- Current_State --\n-   -------------------\n-\n-   function Current_State (S : Suspension_Object) return Boolean is\n-   begin\n-      --  We do not want to use lock on this read operation. State is marked\n-      --  as Atomic so that we ensure that the value retrieved is correct.\n-\n-      return S.State;\n-   end Current_State;\n-\n-   ---------------\n-   -- Set_False --\n-   ---------------\n-\n-   procedure Set_False (S : in out Suspension_Object) is\n-      Result  : Interfaces.C.int;\n-\n-   begin\n-      SSL.Abort_Defer.all;\n-\n-      Result := pthread_mutex_lock (S.L'Access);\n-      pragma Assert (Result = 0);\n-\n-      S.State := False;\n-\n-      Result := pthread_mutex_unlock (S.L'Access);\n-      pragma Assert (Result = 0);\n-\n-      SSL.Abort_Undefer.all;\n-   end Set_False;\n-\n-   --------------\n-   -- Set_True --\n-   --------------\n-\n-   procedure Set_True (S : in out Suspension_Object) is\n-      Result : Interfaces.C.int;\n-\n-   begin\n-      SSL.Abort_Defer.all;\n-\n-      Result := pthread_mutex_lock (S.L'Access);\n-      pragma Assert (Result = 0);\n-\n-      --  If there is already a task waiting on this suspension object then we\n-      --  resume it, leaving the state of the suspension object to False, as\n-      --  specified in (RM D.10(9)). Otherwise, leave the state set to True.\n-\n-      if S.Waiting then\n-         S.Waiting := False;\n-         S.State := False;\n-\n-         Result := pthread_cond_signal (S.CV'Access);\n-         pragma Assert (Result = 0);\n-\n-      else\n-         S.State := True;\n-      end if;\n-\n-      Result := pthread_mutex_unlock (S.L'Access);\n-      pragma Assert (Result = 0);\n-\n-      SSL.Abort_Undefer.all;\n-   end Set_True;\n-\n-   ------------------------\n-   -- Suspend_Until_True --\n-   ------------------------\n-\n-   procedure Suspend_Until_True (S : in out Suspension_Object) is\n-      Result : Interfaces.C.int;\n-\n-   begin\n-      SSL.Abort_Defer.all;\n-\n-      Result := pthread_mutex_lock (S.L'Access);\n-      pragma Assert (Result = 0);\n-\n-      if S.Waiting then\n-\n-         --  Program_Error must be raised upon calling Suspend_Until_True\n-         --  if another task is already waiting on that suspension object\n-         --  (AM D.10(10)).\n-\n-         Result := pthread_mutex_unlock (S.L'Access);\n-         pragma Assert (Result = 0);\n-\n-         SSL.Abort_Undefer.all;\n-\n-         raise Program_Error;\n-\n-      else\n-         --  Suspend the task if the state is False. Otherwise, the task\n-         --  continues its execution, and the state of the suspension object\n-         --  is set to False (RM D.10(9)).\n-\n-         if S.State then\n-            S.State := False;\n-         else\n-            S.Waiting := True;\n-\n-            loop\n-               --  Loop in case pthread_cond_wait returns earlier than expected\n-               --  (e.g. in case of EINTR caused by a signal).\n-\n-               Result := pthread_cond_wait (S.CV'Access, S.L'Access);\n-               pragma Assert (Result = 0 or else Result = EINTR);\n-\n-               exit when not S.Waiting;\n-            end loop;\n-         end if;\n-\n-         Result := pthread_mutex_unlock (S.L'Access);\n-         pragma Assert (Result = 0);\n-\n-         SSL.Abort_Undefer.all;\n-      end if;\n-   end Suspend_Until_True;\n-\n-   ----------------\n-   -- Check_Exit --\n-   ----------------\n-\n-   --  Dummy version\n-\n-   function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n-      pragma Unreferenced (Self_ID);\n-   begin\n-      return True;\n-   end Check_Exit;\n-\n-   --------------------\n-   -- Check_No_Locks --\n-   --------------------\n-\n-   function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n-      pragma Unreferenced (Self_ID);\n-   begin\n-      return True;\n-   end Check_No_Locks;\n-\n-   ----------------------\n-   -- Environment_Task --\n-   ----------------------\n-\n-   function Environment_Task return Task_Id is\n-   begin\n-      return Environment_Task_Id;\n-   end Environment_Task;\n-\n-   --------------\n-   -- Lock_RTS --\n-   --------------\n-\n-   procedure Lock_RTS is\n-   begin\n-      Write_Lock (Single_RTS_Lock'Access, Global_Lock => True);\n-   end Lock_RTS;\n-\n-   ----------------\n-   -- Unlock_RTS --\n-   ----------------\n-\n-   procedure Unlock_RTS is\n-   begin\n-      Unlock (Single_RTS_Lock'Access, Global_Lock => True);\n-   end Unlock_RTS;\n-\n-   ------------------\n-   -- Suspend_Task --\n-   ------------------\n-\n-   function Suspend_Task\n-     (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id) return Boolean\n-   is\n-      pragma Unreferenced (T, Thread_Self);\n-   begin\n-      return False;\n-   end Suspend_Task;\n-\n-   -----------------\n-   -- Resume_Task --\n-   -----------------\n-\n-   function Resume_Task\n-     (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id) return Boolean\n-   is\n-      pragma Unreferenced (T, Thread_Self);\n-   begin\n-      return False;\n-   end Resume_Task;\n-\n-   --------------------\n-   -- Stop_All_Tasks --\n-   --------------------\n-\n-   procedure Stop_All_Tasks is\n-   begin\n-      null;\n-   end Stop_All_Tasks;\n-\n-   ---------------\n-   -- Stop_Task --\n-   ---------------\n-\n-   function Stop_Task (T : ST.Task_Id) return Boolean is\n-      pragma Unreferenced (T);\n-   begin\n-      return False;\n-   end Stop_Task;\n-\n-   -------------------\n-   -- Continue_Task --\n-   -------------------\n-\n-   function Continue_Task (T : ST.Task_Id) return Boolean is\n-      pragma Unreferenced (T);\n-   begin\n-      return False;\n-   end Continue_Task;\n-\n-   ----------------\n-   -- Initialize --\n-   ----------------\n-\n-   procedure Initialize (Environment_Task : Task_Id) is\n-      act     : aliased struct_sigaction;\n-      old_act : aliased struct_sigaction;\n-      Tmp_Set : aliased sigset_t;\n-      Result  : Interfaces.C.int;\n-\n-      function State\n-        (Int : System.Interrupt_Management.Interrupt_ID) return Character;\n-      pragma Import (C, State, \"__gnat_get_interrupt_state\");\n-      --  Get interrupt state. Defined in a-init.c. The input argument is\n-      --  the interrupt number, and the result is one of the following:\n-\n-      Default : constant Character := 's';\n-      --    'n'   this interrupt not set by any Interrupt_State pragma\n-      --    'u'   Interrupt_State pragma set state to User\n-      --    'r'   Interrupt_State pragma set state to Runtime\n-      --    's'   Interrupt_State pragma set state to System (use \"default\"\n-      --           system handler)\n-\n-   begin\n-      Environment_Task_Id := Environment_Task;\n-\n-      Interrupt_Management.Initialize;\n-\n-      --  Prepare the set of signals that should unblocked in all tasks\n-\n-      Result := sigemptyset (Unblocked_Signal_Mask'Access);\n-      pragma Assert (Result = 0);\n-\n-      for J in Interrupt_Management.Interrupt_ID loop\n-         if System.Interrupt_Management.Keep_Unmasked (J) then\n-            Result := sigaddset (Unblocked_Signal_Mask'Access, Signal (J));\n-            pragma Assert (Result = 0);\n-         end if;\n-      end loop;\n-\n-      Curpid := getpid;\n-\n-      --  Initialize the lock used to synchronize chain of all ATCBs\n-\n-      Initialize_Lock (Single_RTS_Lock'Access, RTS_Lock_Level);\n-\n-      Specific.Initialize (Environment_Task);\n-\n-      --  Make environment task known here because it doesn't go through\n-      --  Activate_Tasks, which does it for all other tasks.\n-\n-      Known_Tasks (Known_Tasks'First) := Environment_Task;\n-      Environment_Task.Known_Tasks_Index := Known_Tasks'First;\n-\n-      Enter_Task (Environment_Task);\n-\n-      if State\n-          (System.Interrupt_Management.Abort_Task_Interrupt) /= Default\n-      then\n-         act.sa_flags := 0;\n-         act.sa_handler := Abort_Handler'Address;\n-\n-         Result := sigemptyset (Tmp_Set'Access);\n-         pragma Assert (Result = 0);\n-         act.sa_mask := Tmp_Set;\n-\n-         Result :=\n-           sigaction\n-             (Signal (System.Interrupt_Management.Abort_Task_Interrupt),\n-              act'Unchecked_Access,\n-              old_act'Unchecked_Access);\n-         pragma Assert (Result = 0);\n-         Abort_Handler_Installed := True;\n-      end if;\n-   end Initialize;\n-\n-   -----------------------\n-   -- Set_Task_Affinity --\n-   -----------------------\n-\n-   procedure Set_Task_Affinity (T : ST.Task_Id) is\n-      pragma Unreferenced (T);\n-\n-   begin\n-      --  Setting task affinity is not supported by the underlying system\n-\n-      null;\n-   end Set_Task_Affinity;\n-end System.Task_Primitives.Operations;"}, {"sha": "af2832d09e13e0ed4d5286bae78cd5258b00ad02", "filename": "gcc/ada/s-tasinf-tru64.ads", "status": "removed", "additions": 0, "deletions": 110, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-tasinf-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-tasinf-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-tru64.ads?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,110 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                     S Y S T E M . T A S K _ I N F O                      --\n---                                                                          --\n---                                 S p e c                                  --\n---                           (Compiler Interface)                           --\n---                                                                          --\n---         Copyright (C) 1998-2009, Free Software Foundation, Inc.          --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package contains the definitions and routines associated with the\n---  implementation and use of the Task_Info pragma. It is specialized\n---  appropriately for targets that make use of this pragma.\n-\n---  Note: the compiler generates direct calls to this interface, via Rtsfind.\n---  Any changes to this interface may require corresponding compiler changes.\n-\n---  This unit may be used directly from an application program by providing\n---  an appropriate WITH, and the interface can be expected to remain stable.\n-\n---  This is a DEC Unix 4.0d version of this package\n-\n-package System.Task_Info is\n-   pragma Preelaborate;\n-   pragma Elaborate_Body;\n-   --  To ensure that a body is allowed\n-\n-   -----------------------------------------\n-   -- Implementation of Task_Info Feature --\n-   -----------------------------------------\n-\n-   --  The Task_Info pragma:\n-\n-   --    pragma Task_Info (EXPRESSION);\n-\n-   --  allows the specification on a task by task basis of a value of type\n-   --  System.Task_Info.Task_Info_Type to be passed to a task when it is\n-   --  created. The specification of this type, and the effect on the task\n-   --  that is created is target dependent.\n-\n-   --  The Task_Info pragma appears within a task definition (compare the\n-   --  definition and implementation of pragma Priority). If no such pragma\n-   --  appears, then the value Unspecified_Task_Info is passed. If a pragma\n-   --  is present, then it supplies an alternative value. If the argument of\n-   --  the pragma is a discriminant reference, then the value can be set on\n-   --  a task by task basis by supplying the appropriate discriminant value.\n-\n-   --  Note that this means that the type used for Task_Info_Type must be\n-   --  suitable for use as a discriminant (i.e. a scalar or access type).\n-\n-   ------------------\n-   -- Declarations --\n-   ------------------\n-\n-   type Scope_Type is\n-     (Process_Scope,\n-      --  Contend only with threads in same process\n-\n-      System_Scope,\n-      --  Contend with all threads on same CPU\n-\n-      Default_Scope);\n-\n-   type Thread_Attributes is record\n-      Bind_To_Cpu_Number : Integer;\n-      --   -1: Do nothing\n-      --    0: Unbind\n-      --  1-N: Bind all unbound threads to this CPU\n-\n-      Contention_Scope   : Scope_Type;\n-   end record;\n-\n-   type Task_Info_Type is access all Thread_Attributes;\n-   --  Type used for passing information to task create call, using the\n-   --  Task_Info pragma. This type may be specialized for individual\n-   --  implementations, but it must be a type that can be used as a\n-   --  discriminant (i.e. a scalar or access type).\n-\n-   Unspecified_Thread_Attribute : aliased Thread_Attributes :=\n-     Thread_Attributes'(-1, Default_Scope);\n-\n-   Unspecified_Task_Info : constant Task_Info_Type :=\n-     Unspecified_Thread_Attribute'Access;\n-   --  Value passed to task in the absence of a Task_Info pragma\n-   --  Don't call new here because the tasking run time has not been\n-   --  elaborated yet, so calling Task_Lock is unsafe.\n-\n-end System.Task_Info;"}, {"sha": "41c9aeaa3cd9359a94c5881a29934703bdbb3e1a", "filename": "gcc/ada/s-taspri-tru64.ads", "status": "removed", "additions": 0, "deletions": 119, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-taspri-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fs-taspri-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-tru64.ads?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,119 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                 S Y S T E M . T A S K _ P R I M I T I V E S              --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the DEC Unix 4.0 version of this package\n-\n---  This package provides low-level support for most tasking features\n-\n-pragma Polling (Off);\n---  Turn off polling, we do not want ATC polling to take place during tasking\n---  operations. It causes infinite loops and other problems.\n-\n-with Interfaces.C;\n-\n-with System.OS_Interface;\n-\n-package System.Task_Primitives is\n-   pragma Preelaborate;\n-\n-   type Lock is limited private;\n-   --  Should be used for implementation of protected objects\n-\n-   type RTS_Lock is limited private;\n-   --  Should be used inside the runtime system. The difference between Lock\n-   --  and the RTS_Lock is that the later one serves only as a semaphore so\n-   --  that do not check for ceiling violations.\n-\n-   type Suspension_Object is limited private;\n-   --  Should be used for the implementation of Ada.Synchronous_Task_Control\n-\n-   type Task_Body_Access is access procedure;\n-   --  Pointer to the task body's entry point (or possibly a wrapper\n-   --  declared local to the GNARL).\n-\n-   type Private_Data is limited private;\n-   --  Any information that the GNULLI needs maintained on a per-task basis.\n-   --  A component of this type is guaranteed to be included\n-\n-   subtype Task_Address is System.Address;\n-   --  In some versions of Task_Primitives, notably for VMS, Task_Address is\n-   --  the short version of address defined in System.Aux_DEC. To avoid\n-   --  dragging Aux_DEC into tasking packages a tasking specific subtype is\n-   --  defined here.\n-\n-   Task_Address_Size : constant := Standard'Address_Size;\n-   --  The size of Task_Address\n-\n-   Alternate_Stack_Size : constant := 0;\n-   --  No alternate signal stack is used on this platform\n-\n-private\n-\n-   type Lock is record\n-      L       : aliased System.OS_Interface.pthread_mutex_t;\n-      Ceiling : Interfaces.C.int;\n-   end record;\n-\n-   type RTS_Lock is new System.OS_Interface.pthread_mutex_t;\n-\n-   type Suspension_Object is record\n-      State : Boolean;\n-      pragma Atomic (State);\n-      --  Boolean that indicates whether the object is open. This field is\n-      --  marked Atomic to ensure that we can read its value without locking\n-      --  the access to the Suspension_Object.\n-\n-      Waiting : Boolean;\n-      --  Flag showing if there is a task already suspended on this object\n-\n-      L : aliased System.OS_Interface.pthread_mutex_t;\n-      --  Protection for ensuring mutual exclusion on the Suspension_Object\n-\n-      CV : aliased System.OS_Interface.pthread_cond_t;\n-      --  Condition variable used to queue threads until the is signaled\n-   end record;\n-\n-   type Private_Data is record\n-      Thread : aliased System.OS_Interface.pthread_t;\n-      pragma Atomic (Thread);\n-      --  Thread field may be updated by two different threads of control.\n-      --  (See, Enter_Task and Create_Task in s-taprop.adb). They put the same\n-      --  value (thr_self value). We do not want to use lock on those\n-      --  operations and the only thing we have to make sure is that they are\n-      --  updated in atomic fashion.\n-\n-      CV : aliased System.OS_Interface.pthread_cond_t;\n-\n-      L : aliased RTS_Lock;\n-      --  Protection for all components is lock L\n-   end record;\n-\n-end System.Task_Primitives;"}, {"sha": "6d77a76ea4928de78e7f68aaea0ef7d19fd8cddd", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -252,7 +252,7 @@ __gnat_ttyname (int filedes)\n #endif\n \f\n #if defined (linux) || defined (sun) || defined (sgi) \\\n-  || (defined (__osf__) && ! defined (__alpha_vxworks)) || defined (WINNT) \\\n+  || ! defined (__alpha_vxworks) || defined (WINNT) \\\n   || defined (__MACHTEN__) || defined (__hpux__) || defined (_AIX) \\\n   || (defined (__svr4__) && defined (i386)) || defined (__Lynx__) \\\n   || defined (__CYGWIN__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n@@ -310,7 +310,7 @@ getc_immediate_common (FILE *stream,\n                        int waiting)\n {\n #if defined (linux) || defined (sun) || defined (sgi) \\\n-    || (defined (__osf__) && ! defined (__alpha_vxworks)) \\\n+    || ! defined (__alpha_vxworks) \\\n     || defined (__CYGWIN32__) || defined (__MACHTEN__) || defined (__hpux__) \\\n     || defined (_AIX) || (defined (__svr4__) && defined (i386)) \\\n     || defined (__Lynx__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n@@ -331,7 +331,7 @@ getc_immediate_common (FILE *stream,\n       termios_rec.c_lflag = termios_rec.c_lflag & ~ICANON & ~ECHO;\n \n #if defined(linux) || defined (sun) || defined (sgi) \\\n-    || defined (__osf__) || defined (__MACHTEN__) || defined (__hpux__) \\\n+    || defined (__MACHTEN__) || defined (__hpux__) \\\n     || defined (_AIX) || (defined (__svr4__) && defined (i386)) \\\n     || defined (__Lynx__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n     || defined (__GLIBC__) || defined (__APPLE__)\n@@ -842,11 +842,11 @@ __gnat_localtime_tzoff (const time_t *timer, const int *is_historic, long *off)\n   (*Unlock_Task) ();\n }\n \n-/* Darwin, Free BSD, Linux, Tru64, where component tm_gmtoff is present in\n+/* Darwin, Free BSD, Linux, where component tm_gmtoff is present in\n    struct tm */\n \n #elif defined (__APPLE__) || defined (__FreeBSD__) || defined (linux) ||\\\n-     (defined (__alpha__) && defined (__osf__)) || defined (__GLIBC__)\n+     defined (__GLIBC__)\n {\n   localtime_r (timer, &tp);\n   *off = tp.tm_gmtoff;"}, {"sha": "43facc7465f7ff583207822d581089d5aae9ebd1", "filename": "gcc/ada/system-tru64.ads", "status": "removed", "additions": 0, "deletions": 214, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fsystem-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fada%2Fsystem-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-tru64.ads?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,214 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                           (DEC Unix Version)                             --\n---                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 1.0 / 1024.0;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   Max_Priority           : constant Positive := 60;\n-   Max_Interrupt_Priority : constant Positive := 63;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 63;\n-   subtype Priority           is Any_Priority range  0 .. 60;\n-   subtype Interrupt_Priority is Any_Priority range 61 .. 63;\n-\n-   Default_Priority : constant Priority := 30;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := False;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := True;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := True;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-   --  Note: Denorm is False because denormals are only handled properly\n-   --  if the -mieee switch is set, and we do not require this usage.\n-\n-   ---------------------------\n-   -- Underlying Priorities --\n-   ---------------------------\n-\n-   --  Important note: this section of the file must come AFTER the\n-   --  definition of the system implementation parameters to ensure\n-   --  that the value of these parameters is available for analysis\n-   --  of the declarations here (using Rtsfind at compile time).\n-\n-   --  The underlying priorities table provides a generalized mechanism\n-   --  for mapping from Ada priorities to system priorities. In some\n-   --  cases a 1-1 mapping is not the convenient or optimal choice.\n-\n-   --  For Dec Unix 4.0d, we use a default 1-to-1 mapping that provides\n-   --  the full range of 64 priorities available from the operating system.\n-\n-   --  On DU prior to 4.0d, less than 64 priorities are available so there\n-   --  are two possibilities:\n-\n-   --    Limit your range of priorities to the range provided by the\n-   --    OS (e.g 16 .. 32 on 4.0b)\n-\n-   --    Replace the standard table as described below\n-\n-   --  To replace the default values of the Underlying_Priorities mapping,\n-   --  copy this source file into your build directory, edit the file to\n-   --  reflect your desired behavior, and recompile with the command:\n-\n-   --     $ gcc -c -O3 -gnatpgn system.ads\n-\n-   --  then recompile the run-time parts that depend on this package:\n-\n-   --     $ gnatmake -a -gnatn -O3 <your application>\n-\n-   --  then force rebuilding your application if you need different options:\n-\n-   --     $ gnatmake -f <your options> <your application>\n-\n-   type Priorities_Mapping is array (Any_Priority) of Integer;\n-   pragma Suppress_Initialization (Priorities_Mapping);\n-   --  Suppress initialization in case gnat.adc specifies Normalize_Scalars\n-\n-   Underlying_Priorities : constant Priorities_Mapping :=\n-\n-     (Priority'First => 0,\n-\n-       1 =>  1,  2 =>  2,  3 =>  3,  4 =>  4,  5 =>  5,\n-       6 =>  6,  7 =>  7,  8 =>  8,  9 =>  9, 10 => 10,\n-      11 => 11, 12 => 12, 13 => 13, 14 => 14, 15 => 15,\n-      16 => 16, 17 => 17, 18 => 18, 19 => 19, 20 => 20,\n-      21 => 21, 22 => 22, 23 => 23, 24 => 24, 25 => 25,\n-      26 => 26, 27 => 27, 28 => 28, 29 => 29,\n-\n-      Default_Priority => 30,\n-\n-      31 => 31, 32 => 32, 33 => 33, 34 => 34, 35 => 35,\n-      36 => 36, 37 => 37, 38 => 38, 39 => 39, 40 => 40,\n-      41 => 41, 42 => 42, 43 => 43, 44 => 44, 45 => 45,\n-      46 => 46, 47 => 47, 48 => 48, 49 => 49, 50 => 50,\n-      51 => 51, 52 => 52, 53 => 53, 54 => 54, 55 => 55,\n-      56 => 56, 57 => 57, 58 => 58, 59 => 59,\n-\n-      Priority'Last => 60,\n-\n-      61 => 61, 62 => 62,\n-\n-      Interrupt_Priority'Last => 63);\n-\n-end System;"}, {"sha": "cb1414a96df77ad7e12a9f90691fbdd242f39970", "filename": "gcc/ada/terminals.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fterminals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fada%2Fterminals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fterminals.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                     Copyright (C) 2008-2011, AdaCore                     *\n+ *                     Copyright (C) 2008-2012, AdaCore                     *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -976,9 +976,6 @@ __gnat_setup_winsize (void *desc, int rows, int columns)\n  || defined (__DragonFly__)\n #   define FREEBSD\n #endif\n-#if defined (__alpha__) && defined (__osf__)\n-#   define OSF1\n-#endif\n #if defined (__mips) && defined (__sgi)\n #   define IRIX\n #endif\n@@ -1048,18 +1045,6 @@ __gnat_setup_winsize (void *desc, int rows, int columns)\n #define USE_CLONE_DEVICE \"/dev/ptmx\"\n #elif defined (_AIX)\n #define USE_CLONE_DEVICE \"/dev/ptc\"\n-#elif defined (OSF1)\n-/* On Tru64, the systems offers various interfaces to open a terminal:\n-    - /dev/ptmx: this the system V driver (stream based),\n-    - /dev/ptmx_bsd: the non stream based clone device,\n-    - the openpty function which use BSD interface.\n-\n-   Using directly /dev/ptmx_bsd on Tru64 5.1B seems to consume all the\n-   available slave ptys (why ?). When using openpty it seems that the function\n-   handles the creation of entries in /dev/pts when necessary and so avoid this\n-   starvation issue. The pty man entry suggests also to use openpty.\n-*/\n-#define USE_OPENPTY\n #elif defined (__hpux__)\n /* On HP-UX we use the streamed version. Using the non streamed version is not\n    recommanded (through \"/dev/ptym/clone\"). Indeed it seems that there are"}, {"sha": "b5085cd5136668fa198676844c38efa3ee9979b2", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,10 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* c-cppbuiltin.c (c_cpp_builtins): Remove #pragma extern_prefix\n+\thandling.\n+\t* c-pragma.c (handle_pragma_extern_prefix): Remove.\n+\t(init_pragma): Don't register extern_prefix.\n+\n 2012-03-12  Richard Guenther  <rguenther@suse.de>\n \n \t* c-common.c (c_common_get_narrower): Use c_common_type_for_size."}, {"sha": "40a0a620dbfd9e6570c4b9744fdc20cf86bcde46", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n /* Define builtin-in macros for the C family front ends.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n-   Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n+   2011, 2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -886,9 +886,6 @@ c_cpp_builtins (cpp_reader *pfile)\n   /* Show the availability of some target pragmas.  */\n   cpp_define (pfile, \"__PRAGMA_REDEFINE_EXTNAME\");\n \n-  if (targetm.handle_pragma_extern_prefix)\n-    cpp_define (pfile, \"__PRAGMA_EXTERN_PREFIX\");\n-\n   /* Make the choice of the stack protector runtime visible to source code.\n      The macro names and values here were chosen for compatibility with an\n      earlier implementation, i.e. ProPolice.  */"}, {"sha": "5a8debc75d394bd2b1f15834aaecdb30f28dcb94", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n /* Handle #pragma, system V.4 style.  Supports #pragma weak and #pragma pack.\n    Copyright (C) 1992, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-   2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+   2006, 2007, 2008, 2009, 2010, 2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -371,7 +371,7 @@ handle_pragma_weak (cpp_reader * ARG_UNUSED (dummy))\n \n /* GCC supports two #pragma directives for renaming the external\n    symbol associated with a declaration (DECL_ASSEMBLER_NAME), for\n-   compatibility with the Solaris and Tru64 system headers.  GCC also\n+   compatibility with the Solaris and VMS system headers.  GCC also\n    has its own notation for this, __asm__(\"name\") annotations.\n \n    Corner cases of these features and their interaction:\n@@ -497,27 +497,6 @@ add_to_renaming_pragma_list (tree oldname, tree newname)\n /* The current prefix set by #pragma extern_prefix.  */\n GTY(()) tree pragma_extern_prefix;\n \n-/* #pragma extern_prefix \"prefix\" */\n-static void\n-handle_pragma_extern_prefix (cpp_reader * ARG_UNUSED (dummy))\n-{\n-  tree prefix, x;\n-  enum cpp_ttype t;\n-\n-  if (pragma_lex (&prefix) != CPP_STRING)\n-    GCC_BAD (\"malformed #pragma extern_prefix, ignored\");\n-  t = pragma_lex (&x);\n-  if (t != CPP_EOF)\n-    warning (OPT_Wpragmas, \"junk at end of %<#pragma extern_prefix%>\");\n-\n-  if (targetm.handle_pragma_extern_prefix)\n-    /* Note that the length includes the null terminator.  */\n-    pragma_extern_prefix = (TREE_STRING_LENGTH (prefix) > 1 ? prefix : NULL);\n-  else if (warn_unknown_pragmas > in_system_header)\n-    warning (OPT_Wunknown_pragmas,\n-\t     \"#pragma extern_prefix not supported on this target\");\n-}\n-\n /* Hook from the front ends to apply the results of one of the preceding\n    pragmas that rename variables.  */\n \n@@ -1396,7 +1375,6 @@ init_pragma (void)\n \n   c_register_pragma_with_expansion (0, \"redefine_extname\",\n \t\t\t\t    handle_pragma_redefine_extname);\n-  c_register_pragma (0, \"extern_prefix\", handle_pragma_extern_prefix);\n \n   c_register_pragma_with_expansion (0, \"message\", handle_pragma_message);\n "}, {"sha": "e7b468c76514a66b00efebdea8454043c9105bf6", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -246,8 +246,7 @@ case ${target} in\n    arm*-*-*eabi*\t\t\t\\\n  )\n      ;;\n-   alpha*-dec-osf5.1*\t\t\t\\\n- | arm*-*-ecos-elf\t\t\t\\\n+   arm*-*-ecos-elf\t\t\t\\\n  | arm*-*-elf\t\t\t\t\\\n  | arm*-*-freebsd*\t\t\t\\\n  | arm*-*-linux*\t\t\t\\\n@@ -788,30 +787,6 @@ alpha*-*-openbsd*)\n \t# default x-alpha is only appropriate for dec-osf.\n \ttarget_cpu_default=\"MASK_GAS\"\n \t;;\n-alpha*-dec-osf5.1*)\n-\tif test x$stabs = xyes\n-\tthen\n-\t\ttm_file=\"${tm_file} dbx.h\"\n-\tfi\n-\t# mips-tfile and mips-tdump are only used with the native assembler\n-\t# and require the Tru64 UNIX <a.out.h>, so only build native.\n-\tif test x$gas != xyes && test x${host} = x${target}\n-\tthen\n-\t\textra_passes=\"mips-tfile mips-tdump\"\n-\tfi\n-\tuse_collect2=yes\n-\ttmake_file=\"t-slibgcc\"\n-\ttm_file=\"${tm_file} alpha/osf5.h\"\n-\ttm_defines=\"${tm_defines} TARGET_SUPPORT_ARCH=1\"\n-\textra_options=\"${extra_options} rpath.opt alpha/osf5.opt\"\n-\textra_headers=va_list.h\n-\tuse_gcc_stdint=provide\n-\tcase ${enable_threads} in\n-\t  \"\" | yes | posix)\n-\t    thread_file='posix'\n-\t    ;;\n-\tesac\n-\t;;\n alpha*-dec-*vms*)\n \ttm_file=\"${tm_file} vms/vms.h alpha/vms.h\"\n \ttmake_file=\"${tmake_file} alpha/t-vms\""}, {"sha": "df865e21531d57f42d1976492ffb41ec1cb62139", "filename": "gcc/config.host", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n # GCC host-specific configuration file.\n # Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2006, 2007, 2008, 2009,\n-# 2010, 2011 Free Software Foundation, Inc.\n+# 2010, 2011, 2012 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -108,9 +108,9 @@ case ${host} in\n \t;;\n     esac\n     ;;\n-  alpha*-*-linux* | alpha*-dec-osf*)\n+  alpha*-*-linux*)\n     case ${target} in\n-      alpha*-*-linux* | alpha*-dec-osf*)\n+      alpha*-*-linux*)\n \thost_extra_gcc_objs=\"driver-alpha.o\"\n \thost_xmake_file=\"${host_xmake_file} alpha/x-alpha\"\n \t;;\n@@ -193,10 +193,6 @@ case ${host} in\n     prefix=/gnu\n     local_prefix=/gnu/local\n     ;;\n-  alpha*-dec-osf*)\n-    out_host_hook_obj=host-osf.o\n-    host_xmake_file=\"${host_xmake_file} alpha/x-osf\"\n-    ;;\n   alpha*-dec-*vms*)\n     host_xm_file=\"vms/xm-vms.h\"\n     host_xmake_file=vms/x-vms"}, {"sha": "bd1408332fbf9f216fed9c809d3597541b4ccd1e", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for code generation on the DEC Alpha.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n-   2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -4673,7 +4673,7 @@ struct GTY(()) machine_function\n   /* For OSF.  */\n   const char *some_ld_name;\n \n-  /* For TARGET_LD_BUGGY_LDGP.  */\n+  /* For flag_reorder_blocks_and_partition.  */\n   rtx gp_save_rtx;\n \n   /* For VMS condition handlers.  */\n@@ -7859,10 +7859,8 @@ alpha_start_function (FILE *file, const char *fnname,\n   HOST_WIDE_INT sa_size;\n   /* Complete stack size needed.  */\n   unsigned HOST_WIDE_INT frame_size;\n-  /* The maximum debuggable frame size (512 Kbytes using Tru64 as).  */\n-  unsigned HOST_WIDE_INT max_frame_size = TARGET_ABI_OSF && !TARGET_GAS\n-\t\t\t\t\t  ? 524288\n-\t\t\t\t\t  : 1UL << 31;\n+  /* The maximum debuggable frame size.  */\n+  unsigned HOST_WIDE_INT max_frame_size = 1UL << 31;\n   /* Offset from base reg to register save area.  */\n   HOST_WIDE_INT reg_offset;\n   char *entry_label = (char *) alloca (strlen (fnname) + 6);"}, {"sha": "a903024ca8b9dcc388c57f943e930eb6bc6fdbb8", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for DEC Alpha.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n+   2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -161,9 +161,6 @@ extern enum alpha_fp_trap_mode alpha_fptm;\n #ifndef TARGET_PROFILING_NEEDS_GP\n #define TARGET_PROFILING_NEEDS_GP 0\n #endif\n-#ifndef TARGET_LD_BUGGY_LDGP\n-#define TARGET_LD_BUGGY_LDGP 0\n-#endif\n #ifndef TARGET_FIXUP_EV5_PREFETCH\n #define TARGET_FIXUP_EV5_PREFETCH 0\n #endif"}, {"sha": "7280e76075ff33c1f5f02680fc62477e56d00199", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n ;; Machine description for DEC Alpha for GNU C compiler\n ;; Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-;; 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n+;; 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012\n ;; Free Software Foundation, Inc.\n ;; Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n ;;\n@@ -5869,22 +5869,21 @@\n ;; calculation, a jump to original landing pad is emitted in the place of the\n ;; original landing pad.  Since landing pad is moved, RA-relative GP\n ;; calculation in the prologue of landing pad breaks.  To solve this problem,\n-;; we use alternative GP load approach, as in the case of TARGET_LD_BUGGY_LDGP.\n+;; we use alternative GP load approach.\n \n (define_expand \"exception_receiver\"\n   [(unspec_volatile [(match_dup 0)] UNSPECV_EHR)]\n   \"TARGET_ABI_OSF\"\n {\n-  if (TARGET_LD_BUGGY_LDGP || flag_reorder_blocks_and_partition)\n+  if (flag_reorder_blocks_and_partition)\n     operands[0] = alpha_gp_save_rtx ();\n   else\n     operands[0] = const0_rtx;\n })\n \n (define_insn \"*exception_receiver_2\"\n   [(unspec_volatile [(match_operand:DI 0 \"memory_operand\" \"m\")] UNSPECV_EHR)]\n-  \"TARGET_ABI_OSF \n-   && (TARGET_LD_BUGGY_LDGP || flag_reorder_blocks_and_partition)\"\n+  \"TARGET_ABI_OSF && flag_reorder_blocks_and_partition\"\n   \"ldq $29,%0\"\n   [(set_attr \"type\" \"ild\")])\n "}, {"sha": "0a554b3ec2c6750e6ffba43a3f4c6eaa685e947b", "filename": "gcc/config/alpha/host-osf.c", "status": "removed", "additions": 0, "deletions": 147, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fconfig%2Falpha%2Fhost-osf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fconfig%2Falpha%2Fhost-osf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fhost-osf.c?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,147 +0,0 @@\n-/* Tru64 UNIX host-specific hook definitions.\n-   Copyright (C) 2011 Free Software Foundation, Inc.\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include <sys/mman.h>\n-/* Inhibit inclusion of <sys/mount.h>, unnecessary and errors out due to\n-   use of poisoned bcmp, bcopy.  */\n-#define _SYS_MOUNT_H_\n-#include <sys/procfs.h>\n-#include \"hosthooks.h\"\n-#include \"hosthooks-def.h\"\n-\n-\n-#undef HOST_HOOKS_GT_PCH_GET_ADDRESS\n-#define HOST_HOOKS_GT_PCH_GET_ADDRESS osf_gt_pch_get_address\n-#undef HOST_HOOKS_GT_PCH_USE_ADDRESS\n-#define HOST_HOOKS_GT_PCH_USE_ADDRESS osf_gt_pch_use_address\n-\n-/* The mmap ADDR parameter may be ignored without MAP_FIXED set.  Before we\n-   give up, check existing mappings with ioctl(PIOCMAP) to see if the space\n-   is really free.  */\n-\n-static void *\n-mmap_fixed (void *addr, size_t len, int prot, int flags, int fd, off_t off)\n-{\n-  void *base;\n-\n-  base = mmap ((caddr_t) addr, len, prot, flags, fd, off);\n-  \n-  if (base != addr)\n-    {\n-      /* PID_MAX is SHRT_MAX on Tru64 UNIX V4.0, but INT_MAX on V5.1.\n-\t Allow for both.  \"/proc/\" + INT_MAX + '\\0'.  */\n-      char pname[6+10+1];\n-      int procfd, nmap;\n-      prmap_t *pmap;\n-      int i, overlap = 0;\n-\n-      if (base != (void *) MAP_FAILED)\n-\tmunmap ((caddr_t) base, len);\n-\n-      /* Check if there's any mapping overlapping [addr, addr+len).  */\n-\n-      snprintf (pname, sizeof (pname), \"/proc/%d\", getpid ());\n-      procfd = open (pname, O_RDONLY);\n-      if (procfd == -1)\n-\treturn ((void *) MAP_FAILED);\n-      if (ioctl (procfd, PIOCNMAP, &nmap) == -1)\n-\treturn ((void *) MAP_FAILED);\n-      pmap = (prmap_t *) xmalloc (sizeof (*pmap) * (nmap+1));\n-      if (ioctl (procfd, PIOCMAP, pmap) == -1)\n-\treturn ((void *) MAP_FAILED);\n-\n-      /* It seems like pmap[] is sorted by address, but can we rely on\n-\t that?  */\n-      for (i = 0; i < nmap; i++)\n-\t{\n-\t  uintptr_t map_start = (uintptr_t) pmap[i].pr_vaddr;\n-\t  uintptr_t map_end = map_start + pmap[i].pr_size;\n-\n-\t  if ((uintptr_t) addr < map_end\n-\t      && (uintptr_t) addr+len > map_start)\n-\t    {\n-\t      overlap = 1;\n-\t      break;\n-\t    }\n-\t}\n-      free (pmap);\n-      close (procfd);\n-\n-      if (!overlap)\n-\tbase = mmap ((caddr_t) addr, len, prot, flags | MAP_FIXED, fd, off);\n-      else\n-\tbase = mmap ((caddr_t) addr, len, prot, flags, fd, off);\n-    }\n-\n-  return base;\n-}\n-\n-/* For various ports, try to guess a fixed spot in the vm space that's\n-   probably free.  Take the middle between start of text segment and\n-   dynamic loader space.  See <sys/machine/addrconf.h> and Tru64 UNIX\n-   Assembly Language Programmer's Guide, p.6-18, Figure 6-3: Default Layout\n-   of Memory (User Program View).  */\n-#define TRY_EMPTY_VM_SPACE\t0x20050000000\n-\n-/* Determine a location where we might be able to reliably allocate\n-   SIZE bytes.  FD is the PCH file, though we should return with the\n-   file unmapped.  */\n-\n-static void *\n-osf_gt_pch_get_address (size_t size, int fd)\n-{\n-  void *addr;\n-\n-  addr = mmap_fixed ((caddr_t) TRY_EMPTY_VM_SPACE, size,\n-\t\t     PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, 0);\n-\n-  /* If we failed the map, that means there's *no* free space.  */\n-  if (addr == (void *) MAP_FAILED)\n-    return NULL;\n-  /* Unmap the area before returning.  */\n-  munmap ((caddr_t) addr, size);\n-\n-  return addr;\n-}\n-\n-/* Map SIZE bytes of FD+OFFSET at BASE.  Return 1 if we succeeded at \n-   mapping the data at BASE, -1 if we couldn't.  */\n-\n-static int\n-osf_gt_pch_use_address (void *base, size_t size, int fd, size_t offset)\n-{\n-  void *addr;\n-\n-  /* We're called with size == 0 if we're not planning to load a PCH\n-     file at all.  This allows the hook to free any static space that\n-     we might have allocated at link time.  */\n-  if (size == 0)\n-    return -1;\n-\n-  addr = mmap_fixed ((caddr_t) base, size,\n-\t\t     PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, offset);\n-\n-  return addr == base ? 1 : -1;\n-}\n-\n-\f\n-const struct host_hooks host_hooks = HOST_HOOKS_INITIALIZER;"}, {"sha": "ee21f4b9c21a48a260a40ae9de38853ab1dc92cc", "filename": "gcc/config/alpha/osf5.h", "status": "removed", "additions": 0, "deletions": 279, "changes": 279, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fconfig%2Falpha%2Fosf5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fconfig%2Falpha%2Fosf5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fosf5.h?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,279 +0,0 @@\n-/* Definitions of target machine for GNU compiler, for DEC Alpha on\n-   Tru64 UNIX V5.1.\n-   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 2000, 2001,\n-   2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2011\n-   Free Software Foundation, Inc.\n-   Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* As of DEC OSF/1 V4.0, as can subtract adjacent labels.  */\n-\n-#undef TARGET_AS_CAN_SUBTRACT_LABELS\n-#define TARGET_AS_CAN_SUBTRACT_LABELS 1\n-\n-/* The GEM libraries for X_float are present, though not used by C.  */\n-\n-#undef TARGET_HAS_XFLOATING_LIBS\n-#define TARGET_HAS_XFLOATING_LIBS 1\n-\n-/* Tru64 UNIX V5.1 uses IEEE QUAD format.  */\n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT\t(MASK_FPREGS | MASK_LONG_DOUBLE_128)\n-\n-/* The linker appears to perform invalid code optimizations that result\n-   in the ldgp emitted for the exception_receiver pattern being incorrectly\n-   linked.  */\n-#undef TARGET_LD_BUGGY_LDGP\n-#define TARGET_LD_BUGGY_LDGP 1\n-\n-/* Tru64 UNIX V5.1 has the float and long double forms of math functions.  */\n-#undef TARGET_C99_FUNCTIONS\n-#define TARGET_C99_FUNCTIONS  1\n-\n-/* Names to predefine in the preprocessor for this target machine.  */\n-\n-#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n-    do {\t\t\t\t\t\t\\\n-\tbuiltin_define_std (\"unix\");\t\t\t\\\n-\tbuiltin_define_std (\"SYSTYPE_BSD\");\t\t\\\n-\tbuiltin_define (\"_SYSTYPE_BSD\");\t\t\\\n-\tbuiltin_define (\"__osf__\");\t\t\t\\\n-\tbuiltin_define (\"__digital__\");\t\t\t\\\n-\tbuiltin_define (\"__arch64__\");\t\t\t\\\n-\tbuiltin_define (\"_LONGLONG\");\t\t\t\\\n-\tbuiltin_assert (\"system=unix\");\t\t\t\\\n-\tbuiltin_assert (\"system=xpg4\");\t\t\t\\\n-\t/* Tru64 UNIX V5 has a 16 byte long\t\t\\\n-\t   double type and requires __X_FLOAT\t\t\\\n-\t   to be defined for <math.h>.  */\t\t\\\n-        if (LONG_DOUBLE_TYPE_SIZE == 128)\t\t\\\n-          builtin_define (\"__X_FLOAT\");\t\t\t\\\n-\t\t\t\t\t\t\t\\\n-\t/* Tru64 UNIX V4/V5 provide several ISO C94\t\\\n-\t   features protected by the corresponding\t\\\n-\t   __STDC_VERSION__ macro.  libstdc++ v3\t\\\n-\t   needs them as well.  */\t\t\t\\\n-\tif (c_dialect_cxx ())\t\t\t\t\\\n-\t  builtin_define (\"__STDC_VERSION__=199409L\");\t\\\n-    } while (0)\n-\n-/* Accept DEC C flags for multithreaded programs.  We use _PTHREAD_USE_D4\n-   instead of PTHREAD_USE_D4 since both have the same effect and the former\n-   doesn't invade the users' namespace.  */\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \\\n-\"%{pthread|threads:-D_REENTRANT} %{threads:-D_PTHREAD_USE_D4}\"\n-\n-/* -mcpu=native handling only makes sense with compiler running on\n-   an Alpha chip.  */\n-#if defined(__alpha__) || defined(__alpha)\n-extern const char *host_detect_local_cpu (int argc, const char **argv);\n-# define EXTRA_SPEC_FUNCTIONS\t\t\t\t\t\t\\\n-  { \"local_cpu_detect\", host_detect_local_cpu },\n-\n-# define MCPU_MTUNE_NATIVE_SPECS\t\t\t\t\t\\\n-   \" %{mcpu=native:%<mcpu=native %:local_cpu_detect(cpu)}\"\t\t\\\n-   \" %{mtune=native:%<mtune=native %:local_cpu_detect(tune)}\"\n-#else\n-# define MCPU_MTUNE_NATIVE_SPECS \"\"\n-#endif\n-\n-#define DRIVER_SELF_SPECS MCPU_MTUNE_NATIVE_SPECS\n-\n-/* Under DEC OSF/1 V4, -p and -pg require -lprof1, and -lprof1 requires \n-   -lpdf.  */\n-\n-#define LIB_SPEC \\\n-\"%{p|pg:-lprof1%{pthread|threads:_r} -lpdf} \\\n- %{threads: -lpthreads} %{pthread|threads: -lpthread -lmach -lexc} -lc\"\n-\n-/* Pass \"-G 8\" to ld because Alpha's CC does.  Pass -O3 if we are\n-   optimizing, -O1 if we are not.  Pass -S to silence `weak symbol\n-   multiply defined' warnings.  Pass -shared, -non_shared or\n-   -call_shared as appropriate.  Pass -hidden_symbol so that our\n-   constructor and call-frame data structures are not accidentally\n-   overridden.  */\n-#define LINK_SPEC  \\\n-  \"-G 8 %{O*:-O3} %{!O*:-O1} -S %{static:-non_shared} \\\n-   %{!static:%{shared:-shared -hidden_symbol _GLOBAL_*} \\\n-   %{!shared:-call_shared}} %{pg} %{taso} %{rpath*}\"\n-\n-#define STARTFILE_SPEC  \\\n-  \"%{!shared:%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}}\"\n-\n-#define ENDFILE_SPEC \\\n-  \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s}\"\n-\n-#define MD_STARTFILE_PREFIX \"/usr/lib/cmplrs/cc/\"\n-\n-/* In Tru64 UNIX V5.1, Compaq introduced a new assembler\n-   (/usr/lib/cmplrs/cc/adu) which currently (versions between 3.04.29 and\n-   3.04.32) breaks mips-tfile.  Passing the undocumented -oldas flag reverts\n-   to using the old assembler (/usr/lib/cmplrs/cc/as[01]).\n-\n-   It is clearly not desirable to depend on this undocumented flag, and\n-   Compaq wants -oldas to go away soon, but until they have released a\n-   new adu that works with mips-tfile, this is the only option.\n-\n-   In some versions of the DTK, the assembler driver invokes ld after\n-   assembly.  This has been fixed in current versions, but adding -c\n-   works as expected for all versions.  */\n-\n-#define ASM_OLDAS_SPEC \"-oldas -c\"\n-\n-/* In OSF/1 v3.2c, the assembler by default does not output file names which\n-   causes mips-tfile to fail.  Passing -g to the assembler fixes this problem.\n-   ??? Strictly speaking, we need -g only if the user specifies -g.  Passing\n-   it always means that we get slightly larger than necessary object files\n-   if the user does not specify -g.  If we don't pass -g, then mips-tfile\n-   will need to be fixed to work in this case.  Pass -O0 since some\n-   optimization are broken and don't help us anyway.  */\n-#if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & MASK_GAS) != 0\n-#define ASM_SPEC \"%{malpha-as:-g \" ASM_OLDAS_SPEC \" %{pg} -O0}\"\n-#else\n-#define ASM_SPEC \"%{!mgas:-g \" ASM_OLDAS_SPEC \" %{pg} -O0}\"\n-#endif\n-\n-/* Specify to run a post-processor, mips-tfile after the assembler\n-   has run to stuff the ecoff debug information into the object file.\n-   This is needed because the Alpha assembler provides no way\n-   of specifying such information in the assembly file.  */\n-\n-#if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & MASK_GAS) != 0\n-\n-#define ASM_FINAL_SPEC \"\\\n-%{malpha-as: %{!mno-mips-tfile: \\\n-\t\\n mips-tfile %{v*: -v} \\\n-\t\t%{K: -I %b.o~} \\\n-\t\t%{!K: %{save-temps: -I %b.o~}} \\\n-\t\t%{c:%W{o*}%{!o*:-o %b.o}}%{!c:-o %U.o} \\\n-\t\t%{,assembler:%i;:%g.s}}}\"\n-\n-#else\n-#define ASM_FINAL_SPEC \"\\\n-%{!mgas: %{!mno-mips-tfile: \\\n-\t\\n mips-tfile %{v*: -v} \\\n-\t\t%{K: -I %b.o~} \\\n-\t\t%{!K: %{save-temps: -I %b.o~}} \\\n-\t\t%{c:%W{o*}%{!o*:-o %b.o}}%{!c:-o %U.o} \\\n-\t\t%{,assembler:%i;:%g.s}}}\"\n-\n-#endif\n-\n-/* Indicate that we have a stamp.h to use.  */\n-#ifndef CROSS_DIRECTORY_STRUCTURE\n-#define HAVE_STAMP_H 1\n-#endif\n-\n-#define HAVE_ENABLE_EXECUTE_STACK\n-\n-/* Digital UNIX V4.0E (1091)/usr/include/sys/types.h 4.3.49.9 1997/08/14 */\n-#define SIZE_TYPE\t\"long unsigned int\"\n-#define PTRDIFF_TYPE\t\"long int\"\n-\n-#define SIG_ATOMIC_TYPE \"int\"\n-\n-#define INT8_TYPE \"signed char\"\n-#define INT16_TYPE \"short int\"\n-#define INT32_TYPE \"int\"\n-#define INT64_TYPE \"long int\"\n-#define UINT8_TYPE \"unsigned char\"\n-#define UINT16_TYPE \"short unsigned int\"\n-#define UINT32_TYPE \"unsigned int\"\n-#define UINT64_TYPE \"long unsigned int\"\n-\n-#define INT_LEAST8_TYPE \"signed char\"\n-#define INT_LEAST16_TYPE \"short int\"\n-#define INT_LEAST32_TYPE \"int\"\n-#define INT_LEAST64_TYPE \"long int\"\n-#define UINT_LEAST8_TYPE \"unsigned char\"\n-#define UINT_LEAST16_TYPE \"short unsigned int\"\n-#define UINT_LEAST32_TYPE \"unsigned int\"\n-#define UINT_LEAST64_TYPE \"long unsigned int\"\n-\n-#define INT_FAST8_TYPE \"signed char\"\n-#define INT_FAST16_TYPE \"int\"\n-#define INT_FAST32_TYPE \"int\"\n-#define INT_FAST64_TYPE \"long int\"\n-#define UINT_FAST8_TYPE \"unsigned char\"\n-#define UINT_FAST16_TYPE \"unsigned int\"\n-#define UINT_FAST32_TYPE \"unsigned int\"\n-#define UINT_FAST64_TYPE \"long unsigned int\"\n-\n-#define INTPTR_TYPE \"long int\"\n-#define UINTPTR_TYPE \"long unsigned int\"\n-\n-/* The linker will stick __main into the .init section.  */\n-#define HAS_INIT_SECTION\n-#define LD_INIT_SWITCH \"-init\"\n-#define LD_FINI_SWITCH \"-fini\"\n-\n-/* From Tru64 UNIX Object File and Symbol Table Format Specification,\n-   2.3.5 Alignment, p.19.  */\n-#define MAX_OFILE_ALIGNMENT (64 * 1024 * BITS_PER_UNIT)\n-\n-/* Select a format to encode pointers in exception handling data.  CODE\n-   is 0 for data, 1 for code labels, 2 for function pointers.  GLOBAL is\n-   true if the symbol may be affected by dynamic relocations.\n-   \n-   We really ought to be using the SREL32 relocations that ECOFF has,\n-   but no version of the native assembler supports creating such things,\n-   and Compaq has no plans to rectify this.  Worse, the dynamic loader\n-   cannot handle unaligned relocations, so we have to make sure that\n-   things get padded appropriately.  */\n-#define ASM_PREFERRED_EH_DATA_FORMAT(CODE,GLOBAL)\t\t\t     \\\n-  (TARGET_GAS\t\t\t\t\t\t\t\t     \\\n-   ? (((GLOBAL) ? DW_EH_PE_indirect : 0) | DW_EH_PE_pcrel | DW_EH_PE_sdata4) \\\n-   : DW_EH_PE_aligned)\n-\n-/* The Tru64 UNIX assembler warns on .lcomm with SIZE 0, so use 1 in that\n-   case.  */\n-#undef ASM_OUTPUT_LOCAL\n-#define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE,ROUNDED)\t\\\n-( fputs (\"\\t.lcomm \", (FILE)),\t\t\t\t\\\n-  assemble_name ((FILE), (NAME)),\t\t\t\\\n-  fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\"\\n\", (SIZE) ? (SIZE) : 1))\n-\n-/* This is how we tell the assembler that a symbol is weak.  */\n-\n-#define ASM_OUTPUT_WEAK_ALIAS(FILE, NAME, VALUE)\t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      (*targetm.asm_out.globalize_label) (FILE, NAME);  \\\n-      fputs (\"\\t.weakext\\t\", FILE);\t\t\t\\\n-      assemble_name (FILE, NAME);\t\t\t\\\n-      if (VALUE)\t\t\t\t\t\\\n-        {\t\t\t\t\t\t\\\n-          fputc (' ', FILE);\t\t\t\t\\\n-          assemble_name (FILE, VALUE);\t\t\t\\\n-        }\t\t\t\t\t\t\\\n-      fputc ('\\n', FILE);\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-#define ASM_WEAKEN_LABEL(FILE, NAME) ASM_OUTPUT_WEAK_ALIAS(FILE, NAME, 0)\n-\n-/* The native assembler doesn't understand parenthesis.  */\n-#define TARGET_ASM_OPEN_PAREN \"\"\n-#define TARGET_ASM_CLOSE_PAREN \"\"\n-\n-/* Handle #pragma extern_prefix.  */\n-#define TARGET_HANDLE_PRAGMA_EXTERN_PREFIX 1\n-\n-#define TARGET_HAVE_NAMED_SECTIONS false"}, {"sha": "ba70e7ce9a5f633cf9fed59bc39d8adb9f3c6522", "filename": "gcc/config/alpha/osf5.opt", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fconfig%2Falpha%2Fosf5.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fconfig%2Falpha%2Fosf5.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fosf5.opt?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,42 +0,0 @@\n-; Tru64 UNIX options.\n-\n-; Copyright (C) 2011\n-; Free Software Foundation, Inc.\n-;\n-; This file is part of GCC.\n-;\n-; GCC is free software; you can redistribute it and/or modify it under\n-; the terms of the GNU General Public License as published by the Free\n-; Software Foundation; either version 3, or (at your option) any later\n-; version.\n-;\n-; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-; for more details.\n-;\n-; You should have received a copy of the GNU General Public License\n-; along with GCC; see the file COPYING3.  If not see\n-; <http://www.gnu.org/licenses/>.\n-\n-; See the GCC internals manual (options.texi) for a description of\n-; this file's format.\n-\n-; Please try to keep this file in ASCII collating order.\n-\n-K\n-Driver\n-\n-mno-mips-tfile\n-Target RejectNegative\n-\n-pthread\n-Driver\n-\n-taso\n-Driver\n-\n-threads\n-Driver\n-\n-; This comment is to ensure we retain the blank line above."}, {"sha": "26e9515b44e74412be9eb4334f494de40f8d2ce1", "filename": "gcc/config/alpha/va_list.h", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fconfig%2Falpha%2Fva_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fconfig%2Falpha%2Fva_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fva_list.h?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,42 +0,0 @@\n-/* A replacement for Digital Unix's <va_list.h>.\n-\n-Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#ifndef __GNUC_VA_LIST\n-#define __GNUC_VA_LIST\n-typedef __builtin_va_list __gnuc_va_list;\n-#endif\n-\n-#if !defined(_VA_LIST) && !defined(_HIDDEN_VA_LIST)\n-#define _VA_LIST\n-typedef __gnuc_va_list va_list;\n-\n-#elif defined(_HIDDEN_VA_LIST) && !defined(_HIDDEN_VA_LIST_DONE)\n-#define _HIDDEN_VA_LIST_DONE\n-typedef __gnuc_va_list __va_list;\n-\n-#elif defined(_HIDDEN_VA_LIST) && defined(_VA_LIST)\n-#undef _HIDDEN_VA_LIST\n-\n-#endif"}, {"sha": "5bb9c90986e64d0187f5389a9047f65c15b8f85b", "filename": "gcc/config/alpha/x-osf", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fconfig%2Falpha%2Fx-osf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fconfig%2Falpha%2Fx-osf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fx-osf?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,4 +0,0 @@\n-host-osf.o : $(srcdir)/config/alpha/host-osf.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h hosthooks.h hosthooks-def.h $(HOOKS_H)\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/alpha/host-osf.c"}, {"sha": "aada28df7dab808f7fba50af8cf78067631758b5", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -23626,11 +23626,6 @@ case \"$target\" in\n     # with TLS support are in use, native TLS cannot work.\n     set_have_as_tls=no\n     ;;\n-  *-*-osf*)\n-    # Tru64 UNIX loader and libc.so lack TLS support, so even if gas and\n-    # gld with TLS support are in use, native TLS cannot work.\n-    set_have_as_tls=no\n-    ;;\n   # TLS was introduced in the Solaris 9 FCS release and backported to\n   # Solaris 8 patches.  Support for GNU-style TLS on x86 was only\n   # introduced in Solaris 9 4/04, replacing the earlier Sun style that Sun\n@@ -23818,12 +23813,6 @@ elif test x$gcc_cv_ld != x; then\n       gcc_cv_ld_static_dynamic=yes\n   else\n     case \"$target\" in\n-      # Tru64 UNIX support -noso/-so_archive instead of -Bstatic/-Bdynamic.\n-      alpha*-dec-osf*)\n-        gcc_cv_ld_static_dynamic=yes\n-\tgcc_cv_ld_static_option=\"-noso\"\n-\tgcc_cv_ld_dynamic_option=\"-so_archive\"\n-        ;;\n       # HP-UX ld uses -a flags to select between shared and archive.\n       *-*-hpux*)\n \tif test x\"$gnu_ld\" = xno; then\n@@ -23944,7 +23933,7 @@ $as_echo \"$gcc_cv_lto_plugin\" >&6; }\n \n case \"$target\" in\n   # All TARGET_ABI_OSF targets.\n-  alpha*-*-osf* | alpha*-*-linux* | alpha*-*-*bsd*)\n+  alpha*-*-linux* | alpha*-*-*bsd*)\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for explicit relocation support\" >&5\n $as_echo_n \"checking assembler for explicit relocation support... \" >&6; }\n if test \"${gcc_cv_as_alpha_explicit_relocs+set}\" = set; then :"}, {"sha": "3686680d8079d8356071d6066ec8a2b0db8772ac", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -3183,11 +3183,6 @@ case \"$target\" in\n     # with TLS support are in use, native TLS cannot work.\n     set_have_as_tls=no\n     ;;\n-  *-*-osf*)\n-    # Tru64 UNIX loader and libc.so lack TLS support, so even if gas and\n-    # gld with TLS support are in use, native TLS cannot work.\n-    set_have_as_tls=no\n-    ;;\n   # TLS was introduced in the Solaris 9 FCS release and backported to\n   # Solaris 8 patches.  Support for GNU-style TLS on x86 was only\n   # introduced in Solaris 9 4/04, replacing the earlier Sun style that Sun\n@@ -3302,12 +3297,6 @@ elif test x$gcc_cv_ld != x; then\n       gcc_cv_ld_static_dynamic=yes\n   else\n     case \"$target\" in\n-      # Tru64 UNIX support -noso/-so_archive instead of -Bstatic/-Bdynamic.\n-      alpha*-dec-osf*)\n-        gcc_cv_ld_static_dynamic=yes\n-\tgcc_cv_ld_static_option=\"-noso\"\n-\tgcc_cv_ld_dynamic_option=\"-so_archive\"\n-        ;;\n       # HP-UX ld uses -a flags to select between shared and archive.\n       *-*-hpux*)\n \tif test x\"$gnu_ld\" = xno; then\n@@ -3414,7 +3403,7 @@ AC_MSG_RESULT($gcc_cv_lto_plugin)\n \n case \"$target\" in\n   # All TARGET_ABI_OSF targets.\n-  alpha*-*-osf* | alpha*-*-linux* | alpha*-*-*bsd*)\n+  alpha*-*-linux* | alpha*-*-*bsd*)\n     gcc_GAS_CHECK_FEATURE([explicit relocation support],\n \tgcc_cv_as_alpha_explicit_relocs, [2,12,0],,\n [\t.set nomacro"}, {"sha": "3a2e1d4d6ed04cf1315921bd63a6f5ab6171aac7", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -14141,10 +14141,9 @@ adding a call to the @code{.init} section.\n @node Symbol-Renaming Pragmas\n @subsection Symbol-Renaming Pragmas\n \n-For compatibility with the Solaris and Tru64 UNIX system headers, GCC\n+For compatibility with the Solaris system headers, GCC\n supports two @code{#pragma} directives which change the name used in\n-assembly for a given declaration.  @code{#pragma extern_prefix} is only\n-available on platforms whose system headers need it. To get this effect\n+assembly for a given declaration. To get this effect\n on all platforms supported by GCC, use the asm labels extension (@pxref{Asm\n Labels}).\n \n@@ -14155,19 +14154,9 @@ Labels}).\n This pragma gives the C function @var{oldname} the assembly symbol\n @var{newname}.  The preprocessor macro @code{__PRAGMA_REDEFINE_EXTNAME}\n will be defined if this pragma is available (currently on all platforms).\n-\n-@item extern_prefix @var{string}\n-@cindex pragma, extern_prefix\n-\n-This pragma causes all subsequent external function and variable\n-declarations to have @var{string} prepended to their assembly symbols.\n-This effect may be terminated with another @code{extern_prefix} pragma\n-whose argument is an empty string.  The preprocessor macro\n-@code{__PRAGMA_EXTERN_PREFIX} will be defined if this pragma is\n-available (currently only on Tru64 UNIX)@.\n @end table\n \n-These pragmas and the asm labels extension interact in a complicated\n+This pragma and the asm labels extension interact in a complicated\n manner.  Here are some corner cases you may want to be aware of.\n \n @enumerate\n@@ -14186,17 +14175,6 @@ the name does not change.\n \n @item The @var{oldname} used by @code{#pragma redefine_extname} is\n always the C-language name.\n-\n-@item If @code{#pragma extern_prefix} is in effect, and a declaration\n-occurs with an asm label attached, the prefix is silently ignored for\n-that declaration.\n-\n-@item If @code{#pragma extern_prefix} and @code{#pragma redefine_extname}\n-apply to the same declaration, whichever triggered first wins, and a\n-warning issues if they contradict each other.  (We would like to have\n-@code{#pragma redefine_extname} always win, for consistency with asm\n-labels, but if @code{#pragma extern_prefix} triggers first we have no\n-way of knowing that that happened.)\n @end enumerate\n \n @node Structure-Packing Pragmas"}, {"sha": "00a8994a215fef720eee1fad230b88fd6e375288", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 4, "deletions": 49, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -2949,7 +2949,6 @@ The @uref{http://www.mingw.org/,,MinGW} project.\n Written Word} offers binaries for\n AIX 4.3.3, 5.1 and 5.2,\n IRIX 6.5,\n-Tru64 UNIX 4.0D and 5.1,\n GNU/Linux (i386),\n HP-UX 10.20, 11.00, and 11.11, and\n Solaris/SPARC 2.5.1, 2.6, 7, 8, 9 and 10.\n@@ -3160,54 +3159,10 @@ Systems using processors that implement the DEC Alpha architecture and\n are running the DEC/Compaq/HP Unix (DEC OSF/1, Digital UNIX, or Compaq/HP\n Tru64 UNIX) operating system, for example the DEC Alpha AXP systems.\n \n-Support for Tru64 UNIX V5.1 has been obsoleted in GCC 4.7, but can still\n-be enabled by configuring with @option{--enable-obsolete}.  Support will\n-be removed in GCC 4.8.  As of GCC 4.6, support for Tru64 UNIX V4.0 and\n-V5.0 has been removed.  As of GCC 3.2, versions before\n-@code{alpha*-dec-osf4} are no longer supported.  (These are the versions\n-which identify themselves as DEC OSF/1.)\n-\n-On Tru64 UNIX, virtual memory exhausted bootstrap failures\n-may be fixed by reconfiguring Kernel Virtual Memory and Swap parameters\n-per the @command{/usr/sbin/sys_check} Tuning Suggestions,\n-or applying the patch in\n-@uref{http://gcc.gnu.org/ml/gcc/2002-08/msg00822.html}.  Depending on\n-the OS version used, you need a data segment size between 512 MB and\n-1 GB, so simply use @command{ulimit -Sd unlimited}.\n-\n-As of GNU binutils 2.21, neither GNU @command{as} nor GNU @command{ld}\n-are supported on Tru64 UNIX, so you must not configure GCC with\n-@option{--with-gnu-as} or @option{--with-gnu-ld}.\n-\n-Cross-compilers for the Tru64 UNIX target currently do not work because\n-the auxiliary programs @command{mips-tdump} and @command{mips-tfile} can't\n-be compiled on anything but Tru64 UNIX.\n-\n-GCC writes a @samp{.verstamp} directive to the assembler output file\n-unless it is built as a cross-compiler.  It gets the version to use from\n-the system header file @file{/usr/include/stamp.h}.  If you install a\n-new version of Tru64 UNIX, you should rebuild GCC to pick up the new version\n-stamp.\n-\n-GCC now supports both the native (ECOFF) debugging format used by DBX\n-and GDB and an encapsulated STABS format for use only with GDB@.  See the\n-discussion of the @option{--with-stabs} option of @file{configure} above\n-for more information on these formats and how to select them.\n-@c FIXME: does this work at all?  If so, perhaps make default.\n-\n-There is a bug in DEC's assembler that produces incorrect line numbers\n-for ECOFF format when the @samp{.align} directive is used.  To work\n-around this problem, GCC will not emit such alignment directives\n-while writing ECOFF format debugging information even if optimization is\n-being performed.  Unfortunately, this has the very undesirable\n-side-effect that code addresses when @option{-O} is specified are\n-different depending on whether or not @option{-g} is also specified.\n-\n-To avoid this behavior, specify @option{-gstabs+} and use GDB instead of\n-DBX@.  DEC is now aware of this problem with the assembler and hopes to\n-provide a fix shortly.\n-\n-@c FIXME: still applicable?\n+Support for Tru64 UNIX V5.1 has been removed in GCC 4.8.  As of GCC 4.6,\n+support for Tru64 UNIX V4.0 and V5.0 has been removed.  As of GCC 3.2,\n+versions before @code{alpha*-dec-osf4} are no longer supported.  (These\n+are the versions which identify themselves as DEC OSF/1.)\n \n @html\n <hr />"}, {"sha": "e9da36c26997d8a4e66776b1fac38150e3388055", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -10758,10 +10758,6 @@ Define this macro if macros should be expanded in the\n arguments of @samp{#pragma pack}.\n @end defmac\n \n-@deftypevr {Target Hook} bool TARGET_HANDLE_PRAGMA_EXTERN_PREFIX\n-True if @code{#pragma extern_prefix} is to be supported.\n-@end deftypevr\n-\n @defmac TARGET_DEFAULT_PACK_STRUCT\n If your target requires a structure packing default other than 0 (meaning\n the machine default), define this macro to the necessary value (in bytes)."}, {"sha": "8f9653b56385aca73716e6e084cda825cdf20586", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -10638,8 +10638,6 @@ Define this macro if macros should be expanded in the\n arguments of @samp{#pragma pack}.\n @end defmac\n \n-@hook TARGET_HANDLE_PRAGMA_EXTERN_PREFIX\n-\n @defmac TARGET_DEFAULT_PACK_STRUCT\n If your target requires a structure packing default other than 0 (meaning\n the machine default), define this macro to the necessary value (in bytes)."}, {"sha": "b2bf3942498bcf06f685b3b846a529b04a7b90ed", "filename": "gcc/doc/trouble.texi", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fdoc%2Ftrouble.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fdoc%2Ftrouble.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftrouble.texi?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n @c Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-@c 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+@c 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012\n @c Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n@@ -20,7 +20,6 @@ where people's opinions differ as to what is best.\n \n @menu\n * Actual Bugs::         Bugs we will fix later.\n-* Cross-Compiler Problems:: Common problems of cross compiling with GCC.\n * Interoperation::      Problems using GCC with other compilers,\n                         and with certain linkers, assemblers and debuggers.\n * Incompatibilities::   GCC is incompatible with traditional C.\n@@ -46,19 +45,6 @@ unmounted while @code{fixincludes} is running.  This would seem to be a\n bug in the automounter.  We don't know any good way to work around it.\n @end itemize\n \n-@node Cross-Compiler Problems\n-@section Cross-Compiler Problems\n-\n-You may run into problems with cross compilation on certain machines,\n-for several reasons.\n-\n-@itemize @bullet\n-@item\n-At present, the program @file{mips-tfile} which adds debug\n-support to object files on Tru64 UNIX systems does not work in a cross\n-compile environment.\n-@end itemize\n-\n @node Interoperation\n @section Interoperation\n "}, {"sha": "8cf47bcc23627738b9e33959ea8a1709e8a195f9", "filename": "gcc/except.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,7 +1,7 @@\n /* Implements exception handling.\n    Copyright (C) 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n-   Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n+   2011, 2012 Free Software Foundation, Inc.\n    Contributed by Mike Stump <mrs@cygnus.com>.\n \n This file is part of GCC.\n@@ -1419,7 +1419,7 @@ finish_eh_generation (void)\n   break_superblocks ();\n \n   if (targetm_common.except_unwind_info (&global_options) == UI_SJLJ\n-      /* Kludge for Alpha/Tru64 (see alpha_gp_save_rtx).  */\n+      /* Kludge for Alpha (see alpha_gp_save_rtx).  */\n       || single_succ_edge (ENTRY_BLOCK_PTR)->insns.r)\n     commit_edge_insertions ();\n "}, {"sha": "0bb7520a90c93e2db8c64e89c49221ef16ae768b", "filename": "gcc/ginclude/stdarg.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fginclude%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fginclude%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdarg.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2009, 2012\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -59,10 +60,6 @@ typedef __builtin_va_list __gnuc_va_list;\n    but must not use that name.  It should use the name __gnuc_va_list,\n    which is safe because it is reserved for the implementation.  */\n \n-#ifdef _HIDDEN_VA_LIST  /* On OSF1, this means varargs.h is \"half-loaded\".  */\n-#undef _VA_LIST\n-#endif\n-\n #ifdef _BSD_VA_LIST\n #undef _BSD_VA_LIST\n #endif"}, {"sha": "49ebb89d7f702a1b70afb1798cae2bec13f2ca08", "filename": "gcc/mips-tdump.c", "status": "removed", "additions": 0, "deletions": 1525, "changes": 1525, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fmips-tdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fmips-tdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tdump.c?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,1525 +0,0 @@\n-/* Read and manage MIPS symbol tables from object modules.\n-   Copyright (C) 1991, 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2003, 2004,\n-   2006, 2007, 2008, 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n-   Contributed by hartzell@boulder.colorado.edu,\n-   Rewritten by meissner@osf.org.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"version.h\"\n-#ifdef index\n-#undef index\n-#endif\n-#include <a.out.h>\n-\n-/* Include getopt.h for the sake of getopt_long.  */\n-#include \"getopt.h\"\n-\n-/* Macros for mips-tfile.c to encapsulate stabs in ECOFF, and for\n-   mips-tdump.c to print them out.\n-\n-   These must match the corresponding definitions in gdb/mipsread.c.\n-   Unfortunately, gcc and gdb do not currently share any directories.  */\n-\n-#define CODE_MASK 0x8F300\n-#define MIPS_IS_STAB(sym) (((sym)->index & 0xFFF00) == CODE_MASK)\n-#define MIPS_MARK_STAB(code) ((code)+CODE_MASK)\n-#define MIPS_UNMARK_STAB(code) ((code)-CODE_MASK)\n-\n-#define uchar\tunsigned char\n-#define ushort\tunsigned short\n-#define uint\tunsigned int\n-#define ulong\tunsigned long\n-\n-\f\n-/* Redefinition of storage classes as an enumeration for better\n-   debugging.  */\n-\n-#ifndef stStaParam\n-#define stStaParam\t16\t/* Fortran static parameters */\n-#endif\n-\n-#ifndef btVoid\n-#define btVoid\t\t26\t/* void basic type */\n-#endif\n-\n-typedef enum sc {\n-  sc_Nil\t = scNil,\t  /* no storage class */\n-  sc_Text\t = scText,\t  /* text symbol */\n-  sc_Data\t = scData,\t  /* initialized data symbol */\n-  sc_Bss\t = scBss,\t  /* un-initialized data symbol */\n-  sc_Register\t = scRegister,\t  /* value of symbol is register number */\n-  sc_Abs\t = scAbs,\t  /* value of symbol is absolute */\n-  sc_Undefined\t = scUndefined,\t  /* who knows? */\n-  sc_CdbLocal\t = scCdbLocal,\t  /* variable's value is IN se->va.?? */\n-  sc_Bits\t = scBits,\t  /* this is a bit field */\n-  sc_CdbSystem\t = scCdbSystem,\t  /* var's value is IN CDB's address space */\n-  sc_RegImage\t = scRegImage,\t  /* register value saved on stack */\n-  sc_Info\t = scInfo,\t  /* symbol contains debugger information */\n-  sc_UserStruct\t = scUserStruct,  /* addr in struct user for current process */\n-  sc_SData\t = scSData,\t  /* load time only small data */\n-  sc_SBss\t = scSBss,\t  /* load time only small common */\n-  sc_RData\t = scRData,\t  /* load time only read only data */\n-  sc_Var\t = scVar,\t  /* Var parameter (fortran,pascal) */\n-  sc_Common\t = scCommon,\t  /* common variable */\n-  sc_SCommon\t = scSCommon,\t  /* small common */\n-  sc_VarRegister = scVarRegister, /* Var parameter in a register */\n-  sc_Variant\t = scVariant,\t  /* Variant record */\n-  sc_SUndefined\t = scSUndefined,  /* small undefined(external) data */\n-  sc_Init\t = scInit,\t  /* .init section symbol */\n-  sc_Max\t = scMax\t  /* Max storage class+1 */\n-} sc_t;\n-\n-/* Redefinition of symbol type.  */\n-\n-typedef enum st {\n-  st_Nil\t= stNil,\t/* Nuthin' special */\n-  st_Global\t= stGlobal,\t/* external symbol */\n-  st_Static\t= stStatic,\t/* static */\n-  st_Param\t= stParam,\t/* procedure argument */\n-  st_Local\t= stLocal,\t/* local variable */\n-  st_Label\t= stLabel,\t/* label */\n-  st_Proc\t= stProc,\t/*     \"      \"\t Procedure */\n-  st_Block\t= stBlock,\t/* beginning of block */\n-  st_End\t= stEnd,\t/* end (of anything) */\n-  st_Member\t= stMember,\t/* member (of anything\t- struct/union/enum */\n-  st_Typedef\t= stTypedef,\t/* type definition */\n-  st_File\t= stFile,\t/* file name */\n-  st_RegReloc\t= stRegReloc,\t/* register relocation */\n-  st_Forward\t= stForward,\t/* forwarding address */\n-  st_StaticProc\t= stStaticProc,\t/* load time only static procs */\n-  st_StaParam\t= stStaParam,\t/* Fortran static parameters */\n-  st_Constant\t= stConstant,\t/* const */\n-#ifdef stStruct\n-  st_Struct\t= stStruct,\t/* struct */\n-  st_Union\t= stUnion,\t/* union */\n-  st_Enum\t= stEnum,\t/* enum */\n-#endif\n-  st_Str\t= stStr,\t/* string */\n-  st_Number\t= stNumber,\t/* pure number (i.e. 4 NOR 2+2) */\n-  st_Expr\t= stExpr,\t/* 2+2 vs. 4 */\n-  st_Type\t= stType,\t/* post-coercion SER */\n-  st_Max\t= stMax\t\t/* max type+1 */\n-} st_t;\n-\n-/* Redefinition of type qualifiers.  */\n-\n-typedef enum tq {\n-  tq_Nil\t= tqNil,\t/* bt is what you see */\n-  tq_Ptr\t= tqPtr,\t/* pointer */\n-  tq_Proc\t= tqProc,\t/* procedure */\n-  tq_Array\t= tqArray,\t/* duh */\n-  tq_Far\t= tqFar,\t/* longer addressing - 8086/8 land */\n-  tq_Vol\t= tqVol,\t/* volatile */\n-  tq_Max\t= tqMax\t\t/* Max type qualifier+1 */\n-} tq_t;\n-\n-/* Redefinition of basic types.  */\n-\n-typedef enum bt {\n-  bt_Nil\t= btNil,\t/* undefined */\n-  bt_Adr\t= btAdr,\t/* address - integer same size as pointer */\n-  bt_Char\t= btChar,\t/* character */\n-  bt_UChar\t= btUChar,\t/* unsigned character */\n-  bt_Short\t= btShort,\t/* short */\n-  bt_UShort\t= btUShort,\t/* unsigned short */\n-  bt_Int\t= btInt,\t/* int */\n-  bt_UInt\t= btUInt,\t/* unsigned int */\n-  bt_Long\t= btLong,\t/* long */\n-  bt_ULong\t= btULong,\t/* unsigned long */\n-  bt_Float\t= btFloat,\t/* float (real) */\n-  bt_Double\t= btDouble,\t/* Double (real) */\n-  bt_Struct\t= btStruct,\t/* Structure (Record) */\n-  bt_Union\t= btUnion,\t/* Union (variant) */\n-  bt_Enum\t= btEnum,\t/* Enumerated */\n-  bt_Typedef\t= btTypedef,\t/* defined via a typedef, isymRef points */\n-  bt_Range\t= btRange,\t/* subrange of int */\n-  bt_Set\t= btSet,\t/* pascal sets */\n-  bt_Complex\t= btComplex,\t/* fortran complex */\n-  bt_DComplex\t= btDComplex,\t/* fortran double complex */\n-  bt_Indirect\t= btIndirect,\t/* forward or unnamed typedef */\n-  bt_FixedDec\t= btFixedDec,\t/* Fixed Decimal */\n-  bt_FloatDec\t= btFloatDec,\t/* Float Decimal */\n-  bt_String\t= btString,\t/* Varying Length Character String */\n-  bt_Bit\t= btBit,\t/* Aligned Bit String */\n-  bt_Picture\t= btPicture,\t/* Picture */\n-  bt_Void\t= btVoid,\t/* void */\n-  bt_Max\t= btMax\t\t/* Max basic type+1 */\n-} bt_t;\n-\n-/* Redefinition of the language codes.  */\n-\n-typedef enum lang {\n-  lang_C\t = langC,\n-  lang_Pascal\t = langPascal,\n-  lang_Fortran\t = langFortran,\n-  lang_Assembler = langAssembler,\n-  lang_Machine\t = langMachine,\n-  lang_Nil\t = langNil,\n-  lang_Ada\t = langAda,\n-  lang_Pl1\t = langPl1,\n-  lang_Cobol\t = langCobol\n-} lang_t;\n-\n-/* Redefinition of the debug level codes.  */\n-\n-typedef enum glevel {\n-  glevel_0\t= GLEVEL_0,\n-  glevel_1\t= GLEVEL_1,\n-  glevel_2\t= GLEVEL_2,\n-  glevel_3\t= GLEVEL_3\n-} glevel_t;\n-\n-\f\n-/* Keep track of the active scopes.  */\n-typedef struct scope {\n-  struct scope *prev;\t\t/* previous scope */\n-  ulong open_sym;\t\t/* symbol opening scope */\n-  sc_t sc;\t\t\t/* storage class */\n-  st_t st;\t\t\t/* symbol type */\n-} scope_t;\n-\n-struct filehdr global_hdr;\t/* a.out header */\n-\n-int\t errors\t\t= 0;\t/* # of errors */\n-int\t want_aux\t= 0;\t/* print aux table */\n-int\t want_line\t= 0;\t/* print line numbers */\n-int\t want_rfd\t= 0;\t/* print relative file desc's */\n-int\t want_scope\t= 0;\t/* print scopes for every symbol */\n-int\t tfile\t\t= 0;\t/* no global header file */\n-int\t version\t= 0;    /* print version # */\n-int\t verbose\t= 0;\n-int\t tfile_fd;\t\t/* file descriptor of .T file */\n-off_t\t tfile_offset;\t\t/* current offset in .T file */\n-scope_t\t*cur_scope\t= 0;\t/* list of active scopes */\n-scope_t\t*free_scope\t= 0;\t/* list of freed scopes */\n-HDRR\t sym_hdr;\t\t/* symbolic header */\n-char\t*l_strings;\t\t/* local strings */\n-char\t*e_strings;\t\t/* external strings */\n-SYMR\t*l_symbols;\t\t/* local symbols */\n-EXTR\t*e_symbols;\t\t/* external symbols */\n-LINER\t*lines;\t\t\t/* line numbers */\n-DNR\t*dense_nums;\t\t/* dense numbers */\n-OPTR\t*opt_symbols;\t\t/* optimization symbols */\n-AUXU\t*aux_symbols;\t\t/* Auxiliary symbols */\n-char\t*aux_used;\t\t/* map of which aux syms are used */\n-FDR\t*file_desc;\t\t/* file tables */\n-ulong\t*rfile_desc;\t\t/* relative file tables */\n-PDR\t*proc_desc;\t\t/* procedure tables */\n-\n-/* Forward reference for functions.  */\n-static void *read_seek (void *, size_t, off_t, const char *);\n-static void read_tfile (void);\n-static void print_global_hdr (struct filehdr *);\n-static void print_sym_hdr (HDRR *);\n-static void print_file_desc (FDR *, int);\n-static void print_symbol (SYMR *, int, const char *, AUXU *, int, FDR *);\n-static void print_aux (AUXU, int, int);\n-static void emit_aggregate (char *, AUXU, AUXU, const char *, FDR *);\n-static const char *st_to_string (st_t);\n-static const char *sc_to_string (sc_t);\n-static const char *glevel_to_string (glevel_t);\n-static const char *lang_to_string (lang_t);\n-static const char *type_to_string (AUXU *, int, FDR *);\n-\n-extern char *optarg;\n-extern int   optind;\n-extern int   opterr;\n-\n-/* Create a table of debugging stab-codes and corresponding names.  */\n-\n-#define __define_stab(NAME, CODE, STRING) {(int)CODE, STRING},\n-const struct {const short code; const char string[10];} stab_names[]  = {\n-#include \"stab.def\"\n-#undef __define_stab\n-};\n-\n-/* Command line options for getopt_long.  */\n-\n-static const struct option options[] =\n-{\n-  { \"version\", 0, 0, 'V' },\n-  { \"verbose\", 0, 0, 'v' },\n-  { 0, 0, 0, 0 }\n-};\n-\f\n-/* Read some bytes at a specified location, and return a pointer.\n-   Read_seek takes a pointer PTR to a buffer or NULL and reads SIZE\n-   bytes from offset OFFSET.  In case of errors CONTEXT is used as\n-   error message.  */\n-\n-static void *\n-read_seek (void *ptr, size_t size, off_t offset,  const char *context)\n-{\n-  long read_size = 0;\n-\n-  if (size == 0)\t\t/* nothing to read */\n-    return ptr;\n-\n-  if (!ptr)\n-    ptr = xmalloc (size);\n-\n-  if ((tfile_offset != offset && lseek (tfile_fd, offset, 0) == -1)\n-      || (read_size = read (tfile_fd, ptr, size)) < 0)\n-    {\n-      perror (context);\n-      exit (1);\n-    }\n-\n-  if (read_size != (long) size)\n-    {\n-      fprintf (stderr, \"%s: read %ld bytes, expected %ld bytes\\n\",\n-\t       context, read_size, (long) size);\n-      exit (1);\n-    }\n-\n-  tfile_offset = offset + size;\n-  return ptr;\n-}\n-\n-\f\n-/* Convert language code to string format.  */\n-\n-static const char *\n-lang_to_string (lang_t lang)\n-{\n-  switch (lang)\n-    {\n-    case langC:\t\treturn \"C\";\n-    case langPascal:\treturn \"Pascal\";\n-    case langFortran:\treturn \"Fortran\";\n-    case langAssembler:\treturn \"Assembler\";\n-    case langMachine:\treturn \"Machine\";\n-    case langNil:\treturn \"Nil\";\n-    case langAda:\treturn \"Ada\";\n-    case langPl1:\treturn \"Pl1\";\n-    case langCobol:\treturn \"Cobol\";\n-    }\n-\n-  return \"Unknown language\";\n-}\n-\n-\f\n-/* Convert storage class to string.  */\n-\n-static const char *\n-sc_to_string (sc_t storage_class)\n-{\n-  switch(storage_class)\n-    {\n-    case sc_Nil:\t return \"Nil\";\n-    case sc_Text:\t return \"Text\";\n-    case sc_Data:\t return \"Data\";\n-    case sc_Bss:\t return \"Bss\";\n-    case sc_Register:\t return \"Register\";\n-    case sc_Abs:\t return \"Abs\";\n-    case sc_Undefined:\t return \"Undefined\";\n-    case sc_CdbLocal:\t return \"CdbLocal\";\n-    case sc_Bits:\t return \"Bits\";\n-    case sc_CdbSystem:\t return \"CdbSystem\";\n-    case sc_RegImage:\t return \"RegImage\";\n-    case sc_Info:\t return \"Info\";\n-    case sc_UserStruct:\t return \"UserStruct\";\n-    case sc_SData:\t return \"SData\";\n-    case sc_SBss:\t return \"SBss\";\n-    case sc_RData:\t return \"RData\";\n-    case sc_Var:\t return \"Var\";\n-    case sc_Common:\t return \"Common\";\n-    case sc_SCommon:\t return \"SCommon\";\n-    case sc_VarRegister: return \"VarRegister\";\n-    case sc_Variant:\t return \"Variant\";\n-    case sc_SUndefined:\t return \"SUndefined\";\n-    case sc_Init:\t return \"Init\";\n-    case sc_Max:\t return \"Max\";\n-    }\n-\n-  return \"???\";\n-}\n-\n-\f\n-/* Convert symbol type to string.  */\n-\n-static const char *\n-st_to_string (st_t symbol_type)\n-{\n-  switch(symbol_type)\n-    {\n-    case st_Nil:\treturn \"Nil\";\n-    case st_Global:\treturn \"Global\";\n-    case st_Static:\treturn \"Static\";\n-    case st_Param:\treturn \"Param\";\n-    case st_Local:\treturn \"Local\";\n-    case st_Label:\treturn \"Label\";\n-    case st_Proc:\treturn \"Proc\";\n-    case st_Block:\treturn \"Block\";\n-    case st_End:\treturn \"End\";\n-    case st_Member:\treturn \"Member\";\n-    case st_Typedef:\treturn \"Typedef\";\n-    case st_File:\treturn \"File\";\n-    case st_RegReloc:\treturn \"RegReloc\";\n-    case st_Forward:\treturn \"Forward\";\n-    case st_StaticProc:\treturn \"StaticProc\";\n-    case st_Constant:\treturn \"Constant\";\n-    case st_StaParam:\treturn \"StaticParam\";\n-#ifdef stStruct\n-    case st_Struct:\treturn \"Struct\";\n-    case st_Union:\treturn \"Union\";\n-    case st_Enum:\treturn \"Enum\";\n-#endif\n-    case st_Str:\treturn \"String\";\n-    case st_Number:\treturn \"Number\";\n-    case st_Expr:\treturn \"Expr\";\n-    case st_Type:\treturn \"Type\";\n-    case st_Max:\treturn \"Max\";\n-    }\n-\n-  return \"???\";\n-}\n-\n-\f\n-/* Convert debug level to string.  */\n-\n-static const char *\n-glevel_to_string (glevel_t g_level)\n-{\n-  switch(g_level)\n-    {\n-    case GLEVEL_0: return \"G0\";\n-    case GLEVEL_1: return \"G1\";\n-    case GLEVEL_2: return \"G2\";\n-    case GLEVEL_3: return \"G3\";\n-    }\n-\n-  return \"??\";\n-}\n-\n-\f\n-/* Convert the type information to string format.  */\n-\n-static const char *\n-type_to_string (AUXU *aux_ptr, int index, FDR *fdp)\n-{\n-  AUXU u;\n-  struct qual {\n-    tq_t type;\n-    int  low_bound;\n-    int  high_bound;\n-    int  stride;\n-  } qualifiers[7];\n-\n-  bt_t basic_type;\n-  int i;\n-  static char buffer1[1024];\n-  static char buffer2[1024];\n-  char *p1 = buffer1;\n-  char *p2 = buffer2;\n-  char *used_ptr = aux_used + (aux_ptr - aux_symbols);\n-\n-  for (i = 0; i < 7; i++)\n-    {\n-      qualifiers[i].low_bound = 0;\n-      qualifiers[i].high_bound = 0;\n-      qualifiers[i].stride = 0;\n-    }\n-\n-  used_ptr[index] = 1;\n-  u = aux_ptr[index++];\n-  if (u.isym == -1)\n-    return \"-1 (no type)\";\n-\n-  basic_type = (bt_t) u.ti.bt;\n-  qualifiers[0].type = (tq_t) u.ti.tq0;\n-  qualifiers[1].type = (tq_t) u.ti.tq1;\n-  qualifiers[2].type = (tq_t) u.ti.tq2;\n-  qualifiers[3].type = (tq_t) u.ti.tq3;\n-  qualifiers[4].type = (tq_t) u.ti.tq4;\n-  qualifiers[5].type = (tq_t) u.ti.tq5;\n-  qualifiers[6].type = tq_Nil;\n-\n-  /*\n-   * Go get the basic type.\n-   */\n-  switch (basic_type)\n-    {\n-    case bt_Nil:\t\t/* undefined */\n-      strcpy (p1, \"nil\");\n-      break;\n-\n-    case bt_Adr:\t\t/* address - integer same size as pointer */\n-      strcpy (p1, \"address\");\n-      break;\n-\n-    case bt_Char:\t\t/* character */\n-      strcpy (p1, \"char\");\n-      break;\n-\n-    case bt_UChar:\t\t/* unsigned character */\n-      strcpy (p1, \"unsigned char\");\n-      break;\n-\n-    case bt_Short:\t\t/* short */\n-      strcpy (p1, \"short\");\n-      break;\n-\n-    case bt_UShort:\t\t/* unsigned short */\n-      strcpy (p1, \"unsigned short\");\n-      break;\n-\n-    case bt_Int:\t\t/* int */\n-      strcpy (p1, \"int\");\n-      break;\n-\n-    case bt_UInt:\t\t/* unsigned int */\n-      strcpy (p1, \"unsigned int\");\n-      break;\n-\n-    case bt_Long:\t\t/* long */\n-      strcpy (p1, \"long\");\n-      break;\n-\n-    case bt_ULong:\t\t/* unsigned long */\n-      strcpy (p1, \"unsigned long\");\n-      break;\n-\n-    case bt_Float:\t\t/* float (real) */\n-      strcpy (p1, \"float\");\n-      break;\n-\n-    case bt_Double:\t\t/* Double (real) */\n-      strcpy (p1, \"double\");\n-      break;\n-\n-      /* Structures add 1-2 aux words:\n-\t 1st word is [ST_RFDESCAPE, offset] pointer to struct def;\n-\t 2nd word is file index if 1st word rfd is ST_RFDESCAPE.  */\n-\n-    case bt_Struct:\t\t/* Structure (Record) */\n-      emit_aggregate (p1, aux_ptr[index], aux_ptr[index+1], \"struct\", fdp);\n-      used_ptr[index] = 1;\n-      if (aux_ptr[index].rndx.rfd == ST_RFDESCAPE)\n-\tused_ptr[++index] = 1;\n-\n-      index++;\t\t\t/* skip aux words */\n-      break;\n-\n-      /* Unions add 1-2 aux words:\n-\t 1st word is [ST_RFDESCAPE, offset] pointer to union def;\n-\t 2nd word is file index if 1st word rfd is ST_RFDESCAPE.  */\n-\n-    case bt_Union:\t\t/* Union */\n-      emit_aggregate (p1, aux_ptr[index], aux_ptr[index+1], \"union\", fdp);\n-      used_ptr[index] = 1;\n-      if (aux_ptr[index].rndx.rfd == ST_RFDESCAPE)\n-\tused_ptr[++index] = 1;\n-\n-      index++;\t\t\t/* skip aux words */\n-      break;\n-\n-      /* Enumerations add 1-2 aux words:\n-\t 1st word is [ST_RFDESCAPE, offset] pointer to enum def;\n-\t 2nd word is file index if 1st word rfd is ST_RFDESCAPE.  */\n-\n-    case bt_Enum:\t\t/* Enumeration */\n-      emit_aggregate (p1, aux_ptr[index], aux_ptr[index+1], \"enum\", fdp);\n-      used_ptr[index] = 1;\n-      if (aux_ptr[index].rndx.rfd == ST_RFDESCAPE)\n-\tused_ptr[++index] = 1;\n-\n-      index++;\t\t\t/* skip aux words */\n-      break;\n-\n-    case bt_Typedef:\t\t/* defined via a typedef, isymRef points */\n-      strcpy (p1, \"typedef\");\n-      break;\n-\n-    case bt_Range:\t\t/* subrange of int */\n-      strcpy (p1, \"subrange\");\n-      break;\n-\n-    case bt_Set:\t\t/* pascal sets */\n-      strcpy (p1, \"set\");\n-      break;\n-\n-    case bt_Complex:\t\t/* fortran complex */\n-      strcpy (p1, \"complex\");\n-      break;\n-\n-    case bt_DComplex:\t\t/* fortran double complex */\n-      strcpy (p1, \"double complex\");\n-      break;\n-\n-    case bt_Indirect:\t\t/* forward or unnamed typedef */\n-      strcpy (p1, \"forward/unnamed typedef\");\n-      break;\n-\n-    case bt_FixedDec:\t\t/* Fixed Decimal */\n-      strcpy (p1, \"fixed decimal\");\n-      break;\n-\n-    case bt_FloatDec:\t\t/* Float Decimal */\n-      strcpy (p1, \"float decimal\");\n-      break;\n-\n-    case bt_String:\t\t/* Varying Length Character String */\n-      strcpy (p1, \"string\");\n-      break;\n-\n-    case bt_Bit:\t\t/* Aligned Bit String */\n-      strcpy (p1, \"bit\");\n-      break;\n-\n-    case bt_Picture:\t\t/* Picture */\n-      strcpy (p1, \"picture\");\n-      break;\n-\n-    case bt_Void:\t\t/* Void */\n-      strcpy (p1, \"void\");\n-      break;\n-\n-    default:\n-      sprintf (p1, \"Unknown basic type %d\", (int) basic_type);\n-      break;\n-    }\n-\n-  p1 += strlen (buffer1);\n-\n-  /*\n-   * If this is a bitfield, get the bitsize.\n-   */\n-  if (u.ti.fBitfield)\n-    {\n-      int bitsize;\n-\n-      used_ptr[index] = 1;\n-      bitsize = aux_ptr[index++].width;\n-      sprintf (p1, \" : %d\", bitsize);\n-      p1 += strlen (buffer1);\n-    }\n-\n-\n-  /*\n-   * Deal with any qualifiers.\n-   */\n-  if (qualifiers[0].type != tq_Nil)\n-    {\n-      /*\n-       * Snarf up any array bounds in the correct order.  Arrays\n-       * store 5 successive words in the aux. table:\n-       *\tword 0\tRNDXR to type of the bounds (i.e., int)\n-       *\tword 1\tCurrent file descriptor index\n-       *\tword 2\tlow bound\n-       *\tword 3\thigh bound (or -1 if [])\n-       *\tword 4\tstride size in bits\n-       */\n-      for (i = 0; i < 7; i++)\n-\t{\n-\t  if (qualifiers[i].type == tq_Array)\n-\t    {\n-\t      qualifiers[i].low_bound  = aux_ptr[index+2].dnLow;\n-\t      qualifiers[i].high_bound = aux_ptr[index+3].dnHigh;\n-\t      qualifiers[i].stride     = aux_ptr[index+4].width;\n-\t      used_ptr[index] = 1;\n-\t      used_ptr[index+1] = 1;\n-\t      used_ptr[index+2] = 1;\n-\t      used_ptr[index+3] = 1;\n-\t      used_ptr[index+4] = 1;\n-\t      index += 5;\n-\t    }\n-\t}\n-\n-      /*\n-       * Now print out the qualifiers.\n-       */\n-      for (i = 0; i < 6; i++)\n-\t{\n-\t  switch (qualifiers[i].type)\n-\t    {\n-\t    case tq_Nil:\n-\t    case tq_Max:\n-\t      break;\n-\n-\t    case tq_Ptr:\n-\t      strcpy (p2, \"ptr to \");\n-\t      p2 += sizeof (\"ptr to \")-1;\n-\t      break;\n-\n-\t    case tq_Vol:\n-\t      strcpy (p2, \"volatile \");\n-\t      p2 += sizeof (\"volatile \")-1;\n-\t      break;\n-\n-\t    case tq_Far:\n-\t      strcpy (p2, \"far \");\n-\t      p2 += sizeof (\"far \")-1;\n-\t      break;\n-\n-\t    case tq_Proc:\n-\t      strcpy (p2, \"func. ret. \");\n-\t      p2 += sizeof (\"func. ret. \");\n-\t      break;\n-\n-\t    case tq_Array:\n-\t      {\n-\t\tint first_array = i;\n-\t\tint j;\n-\n-\t\t/* Print array bounds reversed (i.e., in the order the C\n-\t\t   programmer writes them).  C is such a fun language....  */\n-\n-\t\twhile (i < 5 && qualifiers[i+1].type == tq_Array)\n-\t\t  i++;\n-\n-\t\tfor (j = i; j >= first_array; j--)\n-\t\t  {\n-\t\t    strcpy (p2, \"array [\");\n-\t\t    p2 += sizeof (\"array [\")-1;\n-\t\t    if (qualifiers[j].low_bound != 0)\n-\t\t      sprintf (p2,\n-\t\t\t       \"%ld:%ld {%ld bits}\",\n-\t\t\t       (long) qualifiers[j].low_bound,\n-\t\t\t       (long) qualifiers[j].high_bound,\n-\t\t\t       (long) qualifiers[j].stride);\n-\n-\t\t    else if (qualifiers[j].high_bound != -1)\n-\t\t      sprintf (p2,\n-\t\t\t       \"%ld {%ld bits}\",\n-\t\t\t       (long) (qualifiers[j].high_bound + 1),\n-\t\t\t       (long) (qualifiers[j].stride));\n-\n-\t\t    else\n-\t\t      sprintf (p2, \" {%ld bits}\", (long) (qualifiers[j].stride));\n-\n-\t\t    p2 += strlen (p2);\n-\t\t    strcpy (p2, \"] of \");\n-\t\t    p2 += sizeof (\"] of \")-1;\n-\t\t  }\n-\t      }\n-\t      break;\n-\t    }\n-\t}\n-    }\n-\n-  strcpy (p2, buffer1);\n-  return buffer2;\n-}\n-\n-\f\n-/* Print out the global file header for object files.  */\n-\n-static void\n-print_global_hdr (struct filehdr *ptr)\n-{\n-  char *time = ctime ((time_t *)&ptr->f_timdat);\n-  ushort flags = ptr->f_flags;\n-\n-  printf(\"Global file header:\\n\");\n-  printf(\"    %-*s 0x%x\\n\",    24, \"magic number\",\t     (ushort) ptr->f_magic);\n-  printf(\"    %-*s %d\\n\",      24, \"# sections\",\t     (int)    ptr->f_nscns);\n-  printf(\"    %-*s %ld, %s\",   24, \"timestamp\",\t\t     (long)   ptr->f_timdat, time);\n-  printf(\"    %-*s %ld\\n\",     24, \"symbolic header offset\", (long)   ptr->f_symptr);\n-  printf(\"    %-*s %ld\\n\",     24, \"symbolic header size\",   (long)   ptr->f_nsyms);\n-  printf(\"    %-*s %ld\\n\",     24, \"optional header\",\t     (long)   ptr->f_opthdr);\n-  printf(\"    %-*s 0x%x\",     24, \"flags\",\t\t     (ushort) flags);\n-\n-  if ((flags & F_RELFLG) != 0)\n-    printf (\", F_RELFLG\");\n-\n-  if ((flags & F_EXEC) != 0)\n-    printf (\", F_EXEC\");\n-\n-  if ((flags & F_LNNO) != 0)\n-    printf (\", F_LNNO\");\n-\n-  if ((flags & F_LSYMS) != 0)\n-    printf (\", F_LSYMS\");\n-\n-  if ((flags & F_MINMAL) != 0)\n-    printf (\", F_MINMAL\");\n-\n-  if ((flags & F_UPDATE) != 0)\n-    printf (\", F_UPDATE\");\n-\n-  if ((flags & F_SWABD) != 0)\n-    printf (\", F_SWABD\");\n-\n-  if ((flags & F_AR16WR) != 0)\n-    printf (\", F_AR16WR\");\n-\n-  if ((flags & F_AR32WR) != 0)\n-    printf (\", F_AR32WR\");\n-\n-  if ((flags & F_AR32W) != 0)\n-    printf (\", F_AR32W\");\n-\n-  if ((flags & F_PATCH) != 0)\n-    printf (\", F_PATCH/F_NODF\");\n-\n-  printf (\"\\n\\n\");\n-}\n-\n-\f\n-/* Print out the symbolic header.  */\n-\n-static void\n-print_sym_hdr (HDRR *sym_ptr)\n-{\n-  int width = 20;\n-\n-  printf(\"Symbolic header, magic number = 0x%04x, vstamp = %d.%d:\\n\\n\",\n-\t sym_ptr->magic & 0xffff,\n-\t (sym_ptr->vstamp & 0xffff) >> 8,\n-\t sym_ptr->vstamp & 0xff);\n-\n-  printf(\"    %-*s %11s %11s %11s\\n\", width, \"Info\", \"Offset\", \"Number\", \"Bytes\");\n-  printf(\"    %-*s %11s %11s %11s\\n\", width, \"====\", \"======\", \"======\", \"=====\\n\");\n-\n-  printf(\"    %-*s %11ld %11ld %11ld [%d]\\n\", width, \"Line numbers\",\n-\t (long) sym_ptr->cbLineOffset,\n-\t (long) sym_ptr->cbLine,\n-\t (long) sym_ptr->cbLine,\n-\t (int) sym_ptr->ilineMax);\n-\n-  printf(\"    %-*s %11ld %11ld %11ld\\n\", width, \"Dense numbers\",\n-\t (long) sym_ptr->cbDnOffset,\n-\t (long) sym_ptr->idnMax,\n-\t (long) (sym_ptr->idnMax * sizeof (DNR)));\n-\n-  printf(\"    %-*s %11ld %11ld %11ld\\n\", width, \"Procedures Tables\",\n-\t (long) sym_ptr->cbPdOffset,\n-\t (long) sym_ptr->ipdMax,\n-\t (long) (sym_ptr->ipdMax * sizeof (PDR)));\n-\n-  printf(\"    %-*s %11ld %11ld %11ld\\n\", width, \"Local Symbols\",\n-\t (long) sym_ptr->cbSymOffset,\n-\t (long) sym_ptr->isymMax,\n-\t (long) (sym_ptr->isymMax * sizeof (SYMR)));\n-\n-  printf(\"    %-*s %11ld %11ld %11ld\\n\", width, \"Optimization Symbols\",\n-\t (long) sym_ptr->cbOptOffset,\n-\t (long) sym_ptr->ioptMax,\n-\t (long) (sym_ptr->ioptMax * sizeof (OPTR)));\n-\n-  printf(\"    %-*s %11ld %11ld %11ld\\n\", width, \"Auxiliary Symbols\",\n-\t (long) sym_ptr->cbAuxOffset,\n-\t (long) sym_ptr->iauxMax,\n-\t (long) (sym_ptr->iauxMax * sizeof (AUXU)));\n-\n-  printf(\"    %-*s %11ld %11ld %11ld\\n\", width, \"Local Strings\",\n-\t (long) sym_ptr->cbSsOffset,\n-\t (long) sym_ptr->issMax,\n-\t (long) sym_ptr->issMax);\n-\n-  printf(\"    %-*s %11ld %11ld %11ld\\n\", width, \"External Strings\",\n-\t (long) sym_ptr->cbSsExtOffset,\n-\t (long) sym_ptr->issExtMax,\n-\t (long) sym_ptr->issExtMax);\n-\n-  printf(\"    %-*s %11ld %11ld %11ld\\n\", width, \"File Tables\",\n-\t (long) sym_ptr->cbFdOffset,\n-\t (long) sym_ptr->ifdMax,\n-\t (long) (sym_ptr->ifdMax * sizeof (FDR)));\n-\n-  printf(\"    %-*s %11ld %11ld %11ld\\n\", width, \"Relative Files\",\n-\t (long) sym_ptr->cbRfdOffset,\n-\t (long) sym_ptr->crfd,\n-\t (long) (sym_ptr->crfd * sizeof (ulong)));\n-\n-  printf(\"    %-*s %11ld %11ld %11ld\\n\", width, \"External Symbols\",\n-\t (long) sym_ptr->cbExtOffset,\n-\t (long) sym_ptr->iextMax,\n-\t (long) (sym_ptr->iextMax * sizeof (EXTR)));\n-}\n-\n-\f\n-/* Print out a symbol.  */\n-\n-static void\n-print_symbol (SYMR *sym_ptr, int number, const char *strbase, AUXU *aux_base,\n-\t      int ifd, FDR *fdp)\n-{\n-  sc_t storage_class = (sc_t) sym_ptr->sc;\n-  st_t symbol_type   = (st_t) sym_ptr->st;\n-  ulong index\t     = sym_ptr->index;\n-  char *used_ptr     = aux_used + (aux_base - aux_symbols);\n-  scope_t *scope_ptr;\n-\n-  printf (\"\\n    Symbol# %d: \\\"%s\\\"\\n\", number, sym_ptr->iss + strbase);\n-\n-  if (aux_base != (AUXU *) 0 && index != indexNil)\n-    switch (symbol_type)\n-      {\n-      case st_Nil:\n-      case st_Label:\n-\tbreak;\n-\n-      case st_File:\n-      case st_Block:\n-\tprintf (\"      End+1 symbol: %ld\\n\", index);\n-\tif (want_scope)\n-\t  {\n-\t    if (free_scope == (scope_t *) 0)\n-\t      scope_ptr = (scope_t *) xmalloc (sizeof (scope_t));\n-\t    else\n-\t      {\n-\t\tscope_ptr = free_scope;\n-\t\tfree_scope = scope_ptr->prev;\n-\t      }\n-\t    scope_ptr->open_sym = number;\n-\t    scope_ptr->st = symbol_type;\n-\t    scope_ptr->sc = storage_class;\n-\t    scope_ptr->prev = cur_scope;\n-\t    cur_scope = scope_ptr;\n-\t  }\n-\tbreak;\n-\n-      case st_End:\n-\tif (storage_class == sc_Text || storage_class == sc_Info)\n-\t  printf (\"      First symbol: %ld\\n\", index);\n-\telse\n-\t  {\n-\t    used_ptr[index] = 1;\n-\t    printf (\"      First symbol: %ld\\n\", (long) aux_base[index].isym);\n-\t  }\n-\n-\tif (want_scope)\n-\t  {\n-\t    if (cur_scope == (scope_t *) 0)\n-\t      printf (\"      Can't pop end scope\\n\");\n-\t    else\n-\t      {\n-\t\tscope_ptr = cur_scope;\n-\t\tcur_scope = scope_ptr->prev;\n-\t\tscope_ptr->prev = free_scope;\n-\t\tfree_scope = scope_ptr;\n-\t      }\n-\t  }\n-\tbreak;\n-\n-      case st_Proc:\n-      case st_StaticProc:\n-\tif (MIPS_IS_STAB(sym_ptr))\n-\t  ;\n-\telse if (ifd == -1)\t\t/* local symbol */\n-\t  {\n-\t    used_ptr[index] = used_ptr[index+1] = 1;\n-\t    printf (\"      End+1 symbol: %-7ld   Type:  %s\\n\",\n-\t\t    (long) aux_base[index].isym,\n-\t\t    type_to_string (aux_base, index+1, fdp));\n-\t  }\n-\telse\t\t\t/* global symbol */\n-\t  printf (\"      Local symbol: %ld\\n\", index);\n-\n-\tif (want_scope)\n-\t  {\n-\t    if (free_scope == (scope_t *) 0)\n-\t      scope_ptr = (scope_t *) xmalloc (sizeof (scope_t));\n-\t    else\n-\t      {\n-\t\tscope_ptr = free_scope;\n-\t\tfree_scope = scope_ptr->prev;\n-\t      }\n-\t    scope_ptr->open_sym = number;\n-\t    scope_ptr->st = symbol_type;\n-\t    scope_ptr->sc = storage_class;\n-\t    scope_ptr->prev = cur_scope;\n-\t    cur_scope = scope_ptr;\n-\t  }\n-\tbreak;\n-\n-#ifdef stStruct\n-      case st_Struct:\n-      case st_Union:\n-      case st_Enum:\n-\tprintf (\"      End+1 symbol: %lu\\n\", index);\n-\tbreak;\n-#endif\n-\n-      default:\n-\tif (!MIPS_IS_STAB (sym_ptr))\n-\t  {\n-\t    used_ptr[index] = 1;\n-\t    printf (\"      Type: %s\\n\",\n-\t\t    type_to_string (aux_base, index, fdp));\n-\t  }\n-\tbreak;\n-      }\n-\n-  if (want_scope)\n-    {\n-      printf (\"      Scopes:  \");\n-      if (cur_scope == (scope_t *) 0)\n-\tprintf (\" none\\n\");\n-      else\n-\t{\n-\t  for (scope_ptr = cur_scope;\n-\t       scope_ptr != (scope_t *) 0;\n-\t       scope_ptr = scope_ptr->prev)\n-\t    {\n-\t      const char *sclass;\n-\t      if (scope_ptr->st == st_Proc || scope_ptr->st == st_StaticProc)\n-\t\tsclass = \"func.\";\n-\t      else if (scope_ptr->st == st_File)\n-\t\tsclass = \"file\";\n-\t      else if (scope_ptr->st == st_Block && scope_ptr->sc == sc_Text)\n-\t\tsclass = \"block\";\n-\t      else if (scope_ptr->st == st_Block && scope_ptr->sc == sc_Info)\n-\t\tsclass = \"type\";\n-\t      else\n-\t\tsclass = \"???\";\n-\n-\t      printf (\" %ld [%s]\", scope_ptr->open_sym, sclass);\n-\t    }\n-\t  printf (\"\\n\");\n-\t}\n-    }\n-\n-  printf (\"      Value: %-13ld    \",\n-\t  (long)sym_ptr->value);\n-  if (ifd == -1)\n-    printf (\"String index: %ld\\n\", (long)sym_ptr->iss);\n-  else\n-    printf (\"String index: %-11ld Ifd: %d\\n\",\n-\t    (long)sym_ptr->iss, ifd);\n-\n-  printf (\"      Symbol type: %-11sStorage class: %-11s\",\n-\t  st_to_string (symbol_type), sc_to_string (storage_class));\n-\n-  if (MIPS_IS_STAB(sym_ptr))\n-    {\n-      int i = ARRAY_SIZE (stab_names);\n-      const char *stab_name = \"stab\";\n-      short code = MIPS_UNMARK_STAB(sym_ptr->index);\n-\n-      while (--i >= 0)\n-\tif (stab_names[i].code == code)\n-\t  {\n-\t    stab_name = stab_names[i].string;\n-\t    break;\n-\t  }\n-      printf (\"Index: 0x%lx (%s)\\n\", (long)sym_ptr->index, stab_name);\n-    }\n-  else if (sym_ptr->st == stLabel && sym_ptr->index != indexNil)\n-    printf (\"Index: %ld (line#)\\n\", (long)sym_ptr->index);\n-  else\n-    printf (\"Index: %ld\\n\", (long)sym_ptr->index);\n-\n-}\n-\n-\f\n-/* Print out a word from the aux. table in various formats.  */\n-\n-static void\n-print_aux (AUXU u, int auxi, int used)\n-{\n-  printf (\"\\t%s#%-5d %11ld, [%4ld/%7ld], [%2d %1d:%1d %1x:%1x:%1x:%1x:%1x:%1x]\\n\",\n-\t  (used) ? \"  \" : \"* \",\n-\t  auxi,\n-\t  (long) u.isym,\n-\t  (long) u.rndx.rfd,\n-\t  (long) u.rndx.index,\n-\t  u.ti.bt,\n-\t  u.ti.fBitfield,\n-\t  u.ti.continued,\n-\t  u.ti.tq0,\n-\t  u.ti.tq1,\n-\t  u.ti.tq2,\n-\t  u.ti.tq3,\n-\t  u.ti.tq4,\n-\t  u.ti.tq5);\n-}\n-\n-\f\n-/* Write aggregate information to a string.  */\n-\n-static void\n-emit_aggregate (char *string, AUXU u, AUXU u2, const char *which, FDR *fdp)\n-{\n-  unsigned int ifd = u.rndx.rfd;\n-  unsigned int index = u.rndx.index;\n-  const char *name;\n-\n-  if (ifd == ST_RFDESCAPE)\n-    ifd = u2.isym;\n-\n-  /* An ifd of -1 is an opaque type.  An escaped index of 0 is a\n-     struct return type of a procedure compiled without -g.  */\n-  if (ifd == 0xffffffff\n-      || (u.rndx.rfd == ST_RFDESCAPE && index == 0))\n-    name = \"<undefined>\";\n-  else if (index == indexNil)\n-    name = \"<no name>\";\n-  else\n-    {\n-      if (fdp == 0 || sym_hdr.crfd == 0)\n-\tfdp = &file_desc[ifd];\n-      else\n-\tfdp = &file_desc[rfile_desc[fdp->rfdBase + ifd]];\n-      name = &l_strings[fdp->issBase + l_symbols[index + fdp->isymBase].iss];\n-    }\n-\n-  sprintf (string,\n-\t   \"%s %s { ifd = %u, index = %u }\",\n-\t   which, name, ifd, index);\n-}\n-\n-\f\n-/* Print out information about a file descriptor, and the symbols,\n-   procedures, and line numbers within it.  */\n-\n-static void\n-print_file_desc (FDR *fdp, int number)\n-{\n-  char *str_base;\n-  AUXU *aux_base;\n-  int symi, pdi;\n-  int width = 20;\n-  char *used_base;\n-\n-  str_base = l_strings + fdp->issBase;\n-  aux_base = aux_symbols + fdp->iauxBase;\n-  used_base = aux_used + (aux_base - aux_symbols);\n-\n-  printf (\"\\nFile #%d, \\\"%s\\\"\\n\\n\",\n-\t  number,\n-\t  fdp->rss != issNil ? str_base + fdp->rss : \"<unknown>\");\n-\n-  printf (\"    Name index  = %-10ld Readin      = %s\\n\",\n-\t  (long) fdp->rss, (fdp->fReadin) ? \"Yes\" : \"No\");\n-\n-  printf (\"    Merge       = %-10s Endian      = %s\\n\",\n-\t  (fdp->fMerge)  ? \"Yes\" : \"No\",\n-\t  (fdp->fBigendian) ? \"BIG\" : \"LITTLE\");\n-\n-  printf (\"    Debug level = %-10s Language    = %s\\n\",\n-\t  glevel_to_string ((glevel_t) fdp->glevel),\n-\t  lang_to_string((lang_t) fdp->lang));\n-\n-  printf (\"    Adr         = 0x%08lx\\n\\n\", (long) fdp->adr);\n-\n-  printf(\"    %-*s %11s %11s %11s %11s\\n\", width, \"Info\", \"Start\", \"Number\", \"Size\", \"Offset\");\n-  printf(\"    %-*s %11s %11s %11s %11s\\n\", width, \"====\", \"=====\", \"======\", \"====\", \"======\");\n-\n-  printf(\"    %-*s %11lu %11lu %11lu %11lu\\n\",\n-\t width, \"Local strings\",\n-\t (ulong) fdp->issBase,\n-\t (ulong) fdp->cbSs,\n-\t (ulong) fdp->cbSs,\n-\t (ulong) (fdp->issBase + sym_hdr.cbSsOffset));\n-\n-  printf(\"    %-*s %11lu %11lu %11lu %11lu\\n\",\n-\t width, \"Local symbols\",\n-\t (ulong) fdp->isymBase,\n-\t (ulong) fdp->csym,\n-\t (ulong) (fdp->csym * sizeof (SYMR)),\n-\t (ulong) (fdp->isymBase * sizeof (SYMR) + sym_hdr.cbSymOffset));\n-\n-  printf(\"    %-*s %11lu %11lu %11lu %11lu\\n\",\n-\t width, \"Line numbers\",\n-\t (ulong) fdp->cbLineOffset,\n-\t (ulong) fdp->cline,\n-\t (ulong) fdp->cbLine,\n-\t (ulong) (fdp->cbLineOffset + sym_hdr.cbLineOffset));\n-\n-  printf(\"    %-*s %11lu %11lu %11lu %11lu\\n\",\n-\t width, \"Optimization symbols\",\n-\t (ulong) fdp->ioptBase,\n-\t (ulong) fdp->copt,\n-\t (ulong) (fdp->copt * sizeof (OPTR)),\n-\t (ulong) (fdp->ioptBase * sizeof (OPTR) + sym_hdr.cbOptOffset));\n-\n-  printf(\"    %-*s %11lu %11lu %11lu %11lu\\n\",\n-\t width, \"Procedures\",\n-\t (ulong) fdp->ipdFirst,\n-\t (ulong) fdp->cpd,\n-\t (ulong) (fdp->cpd * sizeof (PDR)),\n-\t (ulong) (fdp->ipdFirst * sizeof (PDR) + sym_hdr.cbPdOffset));\n-\n-  printf(\"    %-*s %11lu %11lu %11lu %11lu\\n\",\n-\t width, \"Auxiliary symbols\",\n-\t (ulong) fdp->iauxBase,\n-\t (ulong) fdp->caux,\n-\t (ulong) (fdp->caux * sizeof (AUXU)),\n-\t (ulong) (fdp->iauxBase * sizeof(AUXU) + sym_hdr.cbAuxOffset));\n-\n-  printf(\"    %-*s %11lu %11lu %11lu %11lu\\n\",\n-\t width, \"Relative Files\",\n-\t (ulong) fdp->rfdBase,\n-\t (ulong) fdp->crfd,\n-\t (ulong) (fdp->crfd * sizeof (ulong)),\n-\t (ulong) (fdp->rfdBase * sizeof(ulong) + sym_hdr.cbRfdOffset));\n-\n-\n-  if (want_scope && cur_scope != (scope_t *) 0)\n-    printf (\"\\n    Warning scope does not start at 0!\\n\");\n-\n-  /*\n-   * print the info about the symbol table.\n-   */\n-  printf (\"\\n    There are %lu local symbols, starting at %lu\\n\",\n-\t  (ulong) fdp->csym,\n-\t  (ulong) (fdp->isymBase + sym_hdr.cbSymOffset));\n-\n-  for(symi = fdp->isymBase; symi < (fdp->csym + fdp->isymBase); symi++)\n-    print_symbol (&l_symbols[symi],\n-\t\t  symi - fdp->isymBase,\n-\t\t  str_base,\n-\t\t  aux_base,\n-\t\t  -1,\n-\t\t  fdp);\n-\n-  if (want_scope && cur_scope != (scope_t *) 0)\n-    printf (\"\\n    Warning scope does not end at 0!\\n\");\n-\n-  /*\n-   * print the aux. table if desired.\n-   */\n-\n-  if (want_aux && fdp->caux != 0)\n-    {\n-      int auxi;\n-\n-      printf (\"\\n    There are %lu auxiliary table entries, starting at %lu.\\n\\n\",\n-\t      (ulong) fdp->caux,\n-\t      (ulong) (fdp->iauxBase + sym_hdr.cbAuxOffset));\n-\n-      for (auxi = fdp->iauxBase; auxi < (fdp->caux + fdp->iauxBase); auxi++)\n-\tprint_aux (aux_base[auxi], auxi, used_base[auxi]);\n-    }\n-\n-  /*\n-   * print the relative file descriptors.\n-   */\n-  if (want_rfd && fdp->crfd != 0)\n-    {\n-      ulong *rfd_ptr, i;\n-\n-      printf (\"\\n    There are %lu relative file descriptors, starting at %lu.\\n\",\n-\t      (ulong) fdp->crfd,\n-\t      (ulong) fdp->rfdBase);\n-\n-      rfd_ptr = rfile_desc + fdp->rfdBase;\n-      for (i = 0; i < (ulong) fdp->crfd; i++)\n-\t{\n-\t  printf (\"\\t#%-5ld %11ld, 0x%08lx\\n\", i, *rfd_ptr, *rfd_ptr);\n-\t  rfd_ptr++;\n-\t}\n-    }\n-\n-  /*\n-   * do the procedure descriptors.\n-   */\n-  printf (\"\\n    There are %lu procedure descriptor entries, \", (ulong) fdp->cpd);\n-  printf (\"starting at %lu.\\n\", (ulong) fdp->ipdFirst);\n-\n-  for (pdi = fdp->ipdFirst; pdi < (fdp->cpd + fdp->ipdFirst); pdi++)\n-    {\n-      PDR *proc_ptr = &proc_desc[pdi];\n-      printf (\"\\n\\tProcedure descriptor %d:\\n\", (pdi - fdp->ipdFirst));\n-\n-      if (l_symbols != 0)\n-\tprintf (\"\\t    Name index   = %-11ld Name          = \\\"%s\\\"\\n\",\n-\t\t(long) l_symbols[proc_ptr->isym + fdp->isymBase].iss,\n-\t\tl_symbols[proc_ptr->isym + fdp->isymBase].iss + str_base);\n-\n-      printf (\"\\t    .mask 0x%08lx,%-9ld .fmask 0x%08lx,%ld\\n\",\n-\t      (long) proc_ptr->regmask,\n-\t      (long) proc_ptr->regoffset,\n-\t      (long) proc_ptr->fregmask,\n-\t      (long) proc_ptr->fregoffset);\n-\n-      printf (\"\\t    .frame $%d,%ld,$%d\\n\",\n-\t      (int)  proc_ptr->framereg,\n-\t      (long) proc_ptr->frameoffset,\n-\t      (int)  proc_ptr->pcreg);\n-\n-      printf (\"\\t    Opt. start   = %-11ld Symbols start = %ld\\n\",\n-\t      (long) proc_ptr->iopt,\n-\t      (long) proc_ptr->isym);\n-\n-      printf (\"\\t    First line # = %-11ld Last line #   = %ld\\n\",\n-\t      (long) proc_ptr->lnLow,\n-\t      (long) proc_ptr->lnHigh);\n-\n-      printf (\"\\t    Line Offset  = %-11ld Address       = 0x%08lx\\n\",\n-\t      (long) proc_ptr->cbLineOffset,\n-\t      (long) proc_ptr->adr);\n-\n-      /*\n-       * print the line number entries.\n-       */\n-\n-      if (want_line && fdp->cline != 0)\n-\t{\n-\t  int delta, count;\n-\t  long cur_line = proc_ptr->lnLow;\n-\t  uchar *line_ptr = (((uchar *)lines) + proc_ptr->cbLineOffset\n-\t\t\t     + fdp->cbLineOffset);\n-\t  uchar *line_end;\n-\n-\t  if (pdi == fdp->cpd + fdp->ipdFirst - 1)\t/* last procedure */\n-\t    line_end = ((uchar *)lines) + fdp->cbLine + fdp->cbLineOffset;\n-\t  else\t\t\t\t\t\t/* not last proc.  */\n-\t    line_end = (((uchar *)lines) + proc_desc[pdi+1].cbLineOffset\n-\t\t\t+ fdp->cbLineOffset);\n-\n-\t  printf (\"\\n\\tThere are %lu bytes holding line numbers, starting at %lu.\\n\",\n-\t\t  (ulong) (line_end - line_ptr),\n-\t\t  (ulong) (fdp->ilineBase + sym_hdr.cbLineOffset));\n-\n-\t  while (line_ptr < line_end)\n-\t    {\t\t\t\t\t\t/* sign extend nibble */\n-\t      delta = ((*line_ptr >> 4) ^ 0x8) - 0x8;\n-\t      count = (*line_ptr & 0xf) + 1;\n-\t      if (delta != -8)\n-\t\tline_ptr++;\n-\t      else\n-\t\t{\n-\t\t  delta = (((line_ptr[1]) & 0xff) << 8) + ((line_ptr[2]) & 0xff);\n-\t\t  delta = (delta ^ 0x8000) - 0x8000;\n-\t\t  line_ptr += 3;\n-\t\t}\n-\n-\t      cur_line += delta;\n-\t      printf (\"\\t    Line %11ld,   delta %5d,   count %2d\\n\",\n-\t\t      cur_line,\n-\t\t      delta,\n-\t\t      count);\n-\t    }\n-\t}\n-    }\n-}\n-\n-\f\n-/* Read in the portions of the .T file that we will print out.  */\n-\n-static void\n-read_tfile (void)\n-{\n-  short magic;\n-  off_t sym_hdr_offset = 0;\n-\n-  read_seek (&magic, sizeof (magic), 0, \"Magic number\");\n-  if (!tfile)\n-    {\n-      /* Print out the global header, since this is not a T-file.  */\n-\n-      read_seek (&global_hdr, sizeof (global_hdr), 0, \"Global file header\");\n-\n-      print_global_hdr (&global_hdr);\n-\n-      if (global_hdr.f_symptr == 0)\n-\t{\n-\t  printf (\"No symbolic header, Goodbye!\\n\");\n-\t  exit (1);\n-\t}\n-\n-      sym_hdr_offset = global_hdr.f_symptr;\n-    }\n-\n-  read_seek (&sym_hdr, sizeof (sym_hdr), sym_hdr_offset, \"Symbolic header\");\n-\n-  print_sym_hdr (&sym_hdr);\n-\n-  lines = (LINER *) read_seek (NULL, sym_hdr.cbLine, sym_hdr.cbLineOffset,\n-\t\t\t       \"Line numbers\");\n-\n-  dense_nums = (DNR *) read_seek (NULL, sym_hdr.idnMax * sizeof (DNR),\n-\t\t\t\t  sym_hdr.cbDnOffset, \"Dense numbers\");\n-\n-  proc_desc = (PDR *) read_seek (NULL, sym_hdr.ipdMax * sizeof (PDR),\n-\t\t\t\t sym_hdr.cbPdOffset, \"Procedure tables\");\n-\n-  l_symbols = (SYMR *) read_seek (NULL, sym_hdr.isymMax * sizeof (SYMR),\n-\t\t\t\t  sym_hdr.cbSymOffset, \"Local symbols\");\n-\n-  opt_symbols = (OPTR *) read_seek (NULL, sym_hdr.ioptMax * sizeof (OPTR),\n-\t\t\t\t    sym_hdr.cbOptOffset,\n-\t\t\t\t    \"Optimization symbols\");\n-\n-  aux_symbols = (AUXU *) read_seek (NULL, sym_hdr.iauxMax * sizeof (AUXU),\n-\t\t\t\t    sym_hdr.cbAuxOffset, \"Auxiliary symbols\");\n-\n-  if (sym_hdr.iauxMax > 0)\n-    aux_used = (char *) xcalloc (sym_hdr.iauxMax, 1);\n-\n-  l_strings = (char *) read_seek (NULL, sym_hdr.issMax,\n-\t\t\t\t  sym_hdr.cbSsOffset, \"Local string table\");\n-\n-  e_strings = (char *) read_seek (NULL, sym_hdr.issExtMax,\n-\t\t\t\t  sym_hdr.cbSsExtOffset,\n-\t\t\t\t  \"External string table\");\n-\n-  file_desc = (FDR *) read_seek (NULL, sym_hdr.ifdMax * sizeof (FDR),\n-\t\t\t\t sym_hdr.cbFdOffset, \"File tables\");\n-\n-  rfile_desc = (ulong *) read_seek (NULL, sym_hdr.crfd * sizeof (ulong),\n-\t\t\t\t    sym_hdr.cbRfdOffset,\n-\t\t\t\t    \"Relative file tables\");\n-\n-  e_symbols = (EXTR *) read_seek (NULL, sym_hdr.iextMax * sizeof (EXTR),\n-\t\t\t\t  sym_hdr.cbExtOffset, \"External symbols\");\n-}\n-\n-\f\n-\n-extern int main (int, char **);\n-\n-int\n-main (int argc, char **argv)\n-{\n-  int i, opt;\n-\n-  /*\n-   * Process arguments\n-   */\n-  while ((opt = getopt_long (argc, argv, \"alrsvt\", options, NULL)) != -1)\n-    switch (opt)\n-      {\n-      default:\terrors++;\tbreak;\n-      case 'a': want_aux++;\tbreak;\t/* print aux table */\n-      case 'l': want_line++;\tbreak;\t/* print line numbers */\n-      case 'r': want_rfd++;\tbreak;\t/* print relative fd's */\n-      case 's':\twant_scope++;\tbreak;\t/* print scope info */\n-      case 'v': verbose++;\tbreak;  /* print version # */\n-      case 'V': version++;\tbreak;  /* print version # */\n-      case 't': tfile++;\tbreak;\t/* this is a tfile (without header),\n-\t\t\t\t\t   and not a .o */\n-      }\n-\n-  if (version)\n-    {\n-      printf (\"mips-tdump %s%s\\n\", pkgversion_string, version_string);\n-      fputs (\"Copyright (C) 2012 Free Software Foundation, Inc.\\n\", stdout);\n-      fputs (\"This is free software; see the source for copying conditions.  There is NO\\n\\\n-warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\",\n-             stdout);\n-      exit (0);\n-    }\n-\n-  if (optind != argc - 1)\n-    errors++;\n-\n-  if (verbose || errors)\n-    fprintf (stderr, \"mips-tdump (GCC) %s\\n\", version_string);\n-\n-  if (errors)\n-    {\n-      fprintf (stderr, \"Calling Sequence:\\n\");\n-      fprintf (stderr, \"\\t%s [-alrst] <object-or-T-file>\\n\", argv[0]);\n-      fprintf (stderr, \"\\n\");\n-      fprintf (stderr, \"switches:\\n\");\n-      fprintf (stderr, \"\\t-a Print out auxiliary table.\\n\");\n-      fprintf (stderr, \"\\t-l Print out line numbers.\\n\");\n-      fprintf (stderr, \"\\t-r Print out relative file descriptors.\\n\");\n-      fprintf (stderr, \"\\t-s Print out the current scopes for an item.\\n\");\n-      fprintf (stderr, \"\\t-t Assume there is no global header (ie, a T-file).\\n\");\n-      fprintf (stderr, \"\\t-v Print program version.\\n\");\n-      return 1;\n-    }\n-\n-  /*\n-   * Open and process the input file.\n-   */\n-  tfile_fd = open (argv[optind], O_RDONLY);\n-  if (tfile_fd < 0)\n-    {\n-      perror (argv[optind]);\n-      return 1;\n-    }\n-\n-  read_tfile ();\n-\n-  /*\n-   * Print any global aux words if any.\n-   */\n-  if (want_aux)\n-    {\n-      long last_aux_in_use;\n-\n-      if (sym_hdr.ifdMax != 0 && file_desc[0].iauxBase != 0)\n-\t{\n-\t  printf (\"\\nGlobal auxiliary entries before first file:\\n\");\n-\t  for (i = 0; i < file_desc[0].iauxBase; i++)\n-\t    print_aux (aux_symbols[i], 0, aux_used[i]);\n-\t}\n-\n-      if (sym_hdr.ifdMax == 0)\n-\tlast_aux_in_use = 0;\n-      else\n-\tlast_aux_in_use\n-\t  = (file_desc[sym_hdr.ifdMax-1].iauxBase\n-\t     + file_desc[sym_hdr.ifdMax-1].caux - 1);\n-\n-      if (last_aux_in_use < sym_hdr.iauxMax-1)\n-\t{\n-\t  printf (\"\\nGlobal auxiliary entries after last file:\\n\");\n-\t  for (i = last_aux_in_use; i < sym_hdr.iauxMax; i++)\n-\t    print_aux (aux_symbols[i], i - last_aux_in_use, aux_used[i]);\n-\t}\n-    }\n-\n-  /*\n-   * Print the information for each file.\n-   */\n-  for (i = 0; i < sym_hdr.ifdMax; i++)\n-    print_file_desc (&file_desc[i], i);\n-\n-  /*\n-   * Print the external symbols.\n-   */\n-  want_scope = 0;\t\t/* scope info is meaning for extern symbols */\n-  printf (\"\\nThere are %lu external symbols, starting at %lu\\n\",\n-\t  (ulong) sym_hdr.iextMax,\n-\t  (ulong) sym_hdr.cbExtOffset);\n-\n-  for(i = 0; i < sym_hdr.iextMax; i++)\n-    print_symbol (&e_symbols[i].asym, i, e_strings,\n-\t\t  aux_symbols + file_desc[e_symbols[i].ifd].iauxBase,\n-\t\t  e_symbols[i].ifd,\n-\t\t  &file_desc[e_symbols[i].ifd]);\n-\n-  /*\n-   * Print unused aux symbols now.\n-   */\n-\n-  if (want_aux)\n-    {\n-      int first_time = 1;\n-\n-      for (i = 0; i < sym_hdr.iauxMax; i++)\n-\t{\n-\t  if (! aux_used[i])\n-\t    {\n-\t      if (first_time)\n-\t\t{\n-\t\t  printf (\"\\nThe following auxiliary table entries were unused:\\n\\n\");\n-\t\t  first_time = 0;\n-\t\t}\n-\n-\t      printf (\"    #%-5d %11ld  0x%08lx  %s\\n\",\n-\t\t      i,\n-\t\t      (long) aux_symbols[i].isym,\n-\t\t      (long) aux_symbols[i].isym,\n-\t\t      type_to_string (aux_symbols, i, (FDR *) 0));\n-\t    }\n-\t}\n-    }\n-\n-  return 0;\n-}"}, {"sha": "25f732a296642d2b7846a3cc170ff97bf977e0cd", "filename": "gcc/mips-tfile.c", "status": "removed", "additions": 0, "deletions": 5419, "changes": 5419, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961"}, {"sha": "90058318cfce03e34a6fbc61778c405e0af3cb4e", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,7 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* EXCLUDES (mips-tdump.c, mips-tfile.c): Remove.\n+\n 2012-03-12  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "2568218965b6e22502fd205dacb2e50a7068d854", "filename": "gcc/po/EXCLUDES", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fpo%2FEXCLUDES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fpo%2FEXCLUDES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FEXCLUDES?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,5 @@\n-# Copyright (C) 2001, 2004, 2009, 2010, 2011 Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2004, 2009, 2010, 2011, 2012\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -53,8 +54,3 @@ genrecog.c\n gensupport.c\n gensupport.h\n read-md.c\n-\n-#   These files are not yet internationalized, because they contain\n-#   many strings that require a lot of analysis, and are little-used.\n-mips-tdump.c\n-mips-tfile.c"}, {"sha": "16e427e2b4c3376911d53c7773e54d1b6d69867a", "filename": "gcc/system.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,7 +1,7 @@\n /* Get common system includes and various definitions and declarations based\n    on autoconf macros.\n    Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008,\n-   2009, 2010, 2011\n+   2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -890,7 +890,8 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tTARGET_PROMOTE_FUNCTION_ARGS TARGET_PROMOTE_FUNCTION_RETURN \\\n \tLANG_HOOKS_MISSING_ARGUMENT LANG_HOOKS_HASH_TYPES \\\n \tTARGET_HANDLE_OFAST TARGET_OPTION_OPTIMIZATION \\\n-        TARGET_IRA_COVER_CLASSES TARGET_HELP\n+\tTARGET_IRA_COVER_CLASSES TARGET_HELP \\\n+\tTARGET_HANDLE_PRAGMA_EXTERN_PREFIX\n \n /* Arrays that were deleted in favor of a functional interface.  */\n  #pragma GCC poison built_in_decls implicit_built_in_decls"}, {"sha": "d658b118c8842a853dd6b072d56ae7b37520d2ec", "filename": "gcc/target.def", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -2721,11 +2721,6 @@ DEFHOOKPOD\n  \"\",\n  bool, false)\n \n-DEFHOOKPOD\n-(handle_pragma_extern_prefix,\n-\"True if @code{#pragma extern_prefix} is to be supported.\",\n- bool, 0)\n-\n /* True if the target is allowed to reorder memory accesses unless\n    synchronization is explicitly requested.  */\n DEFHOOKPOD"}, {"sha": "8a630a0d76404326ce40ddbbfb3571d49e985982", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,51 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* g++.dg/abi/rtti3.C: Remove alpha*-dec-osf* handling.\n+\t* g++.dg/abi/thunk4.C: Likewise.\n+\t* g++.dg/cdce3.C: Don't skip on*-dec-osf5*.\n+\tAdapt line numbers.\n+\t* g++.dg/compat/struct-layout-1_generate.c: Remove alpha*-dec-osf*\n+\thandling.\n+\t* g++.dg/cpp0x/constexpr-rom.C: Likewise.\n+\t* g++.dg/eh/spbp.C: Likewise.\n+\t* g++.dg/ext/label13.C: Likewise.\n+\t* g++.dg/guality/guality.exp: Likewise.\n+\t* g++.dg/other/anon5.C: Likewise.\n+\t* g++.dg/other/pragma-ep-1.C: Remove.\n+\t* g++.dg/warn/miss-format-1.C: Remove alpha*-dec-osf* handling.\n+\t* g++.dg/warn/pr31246.C: Likewise.\n+\t* g++.dg/warn/weak1.C: Likewise.\n+\t* g++.old-deja/g++.eh/badalloc1.C: Likewise.\n+\t* g++.old-deja/g++.ext/attrib5.C: Likewise.\n+\t* gcc.c-torture/compile/limits-declparen.c: Likewise.\n+\t* gcc.c-torture/compile/limits-pointer.c: Likewise.\n+\t* gcc.c-torture/execute/20001229-1.c: Remove __osf__ handling.\n+\t* gcc.dg/attr-weakref-1.c: Remove alpha*-dec-osf* handling.\n+\t* gcc.dg/c99-stdint-6.c: Remove alpha*-dec-osf5* handling.\n+\t* gcc.dg/c99-tgmath-1.c: Likewise.\n+\t* gcc.dg/c99-tgmath-2.c: Likewise.\n+\t* gcc.dg/c99-tgmath-3.c: Likewise.\n+\t* gcc.dg/c99-tgmath-4.c: Likewise.\n+\t* gcc.dg/compat/struct-layout-1_generate.c: Remove alpha*-dec-osf*\n+\thandling.\n+\t* gcc.dg/debug/pr49032.c: Likewise.\n+\t* gcc.dg/guality/guality.exp: Likewise.\n+\t* gcc.dg/intmax_t-1.c: Likewise.\n+\t* gcc.dg/pr48616.c: Likewise.\n+\t* gcc.dg/pragma-ep-1.c: Remove.\n+\t* gcc.dg/pragma-ep-2.c: Remove.\n+\t* gcc.dg/pragma-ep-3.c: Remove.\n+\t* gcc.dg/torture/pr47917.c: Remove alpha*-dec-osf5* handling.\n+\t* gcc.dg/tree-ssa/pr42585.c: Remove alpha*-dec-osf* handling.\n+\t* gcc.misc-tests/gcov-14.c: Likewise.\n+\t* gfortran.dg/guality/guality.exp: Likewise.\n+\t* lib/target-supports.exp (check_weak_available): Likewise.\n+\t(add_options_for_tls): Likewise.\n+\t(check_ascii_locale_available): Likewise.\n+\t* obj-c++.dg/dwarf-2.mm: Likewise.\n+\t* objc.dg/dwarf-1.m: Likewise.\n+\t* objc.dg/dwarf-2.m: Likewise.\n+\n 2012-03-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/51721"}, {"sha": "c03e4611c0b47dee8e18826f4a235fd2125d8957", "filename": "gcc/testsuite/g++.dg/abi/rtti3.C", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Frtti3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Frtti3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Frtti3.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -3,12 +3,10 @@\n \n // { dg-require-weak \"\" }\n // { dg-skip-if \"Linkonce not weak\" { *-*-mingw* *-*-cygwin } { \"*\" } { \"\" } }\n-// { dg-final { scan-assembler \".weak\\[ \\t\\]_?_ZTSPP1A\" { target { ! { *-*-darwin* alpha*-dec-osf* } } } } }\n-// { dg-final { scan-assembler-not \".weak\\[ \\t\\]_?_ZTIPP1A\" { target { ! { *-*-darwin* alpha*-dec-osf* } } } } }\n+// { dg-final { scan-assembler \".weak\\[ \\t\\]_?_ZTSPP1A\" { target { ! { *-*-darwin* } } } } }\n+// { dg-final { scan-assembler-not \".weak\\[ \\t\\]_?_ZTIPP1A\" { target { ! { *-*-darwin* } } } } }\n // { dg-final { scan-assembler \".weak_definition\\[ \\t\\]_?_ZTSPP1A\" { target { *-*-darwin* } } } }\n // { dg-final { scan-assembler-not \".weak_definition\\[ \\t\\]_?_ZTIPP1A\" { target { *-*-darwin* } } } }\n-// { dg-final { scan-assembler \".weakext\\[ \\t\\]_?_ZTSPP1A\" { target { alpha*-dec-osf* } } } }\n-// { dg-final { scan-assembler-not \".weakext\\[ \\t\\]_?_ZTIPP1A\" { target { alpha*-dec-osf* } } } }\n \n struct A;\n "}, {"sha": "fa5fbd4327714d323b7f0012100bd34226ba9855", "filename": "gcc/testsuite/g++.dg/abi/thunk4.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk4.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,8 +1,7 @@\n // { dg-require-weak \"\" }\n // { dg-skip-if \"Linkonce not weak\" { *-*-mingw* *-*-cygwin } { \"*\" } { \"\" } }\n-// { dg-final { scan-assembler \".weak\\[ \\t\\]_?_ZThn._N7Derived3FooEv\" { target { ! { *-*-darwin* alpha*-dec-osf* } } } } }\n+// { dg-final { scan-assembler \".weak\\[ \\t\\]_?_ZThn._N7Derived3FooEv\" { target { ! { *-*-darwin* } } } } }\n // { dg-final { scan-assembler \".weak_definition\\[ \\t\\]_?_ZThn._N7Derived3FooEv\" { target { *-*-darwin* } } } }\n-// { dg-final { scan-assembler \".weakext\\[ \\t\\]_?_ZThn._N7Derived3FooEv\" { target { alpha*-dec-osf* } } } }\n \n struct Base \n {"}, {"sha": "726e9ec5123f4464d56157364aa8ca53aa3be3bc", "filename": "gcc/testsuite/g++.dg/cdce3.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcdce3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcdce3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcdce3.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,12 +1,12 @@\n /* { dg-do run } */\n /* { dg-require-effective-target c99_runtime } */\n-/* { dg-skip-if \"exp2* missing despite C99 runtime\" { alpha*-dec-osf5* } } */\n /* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details -lm\" } */\n /* { dg-additional-options \"-DLARGE_LONG_DOUBLE\" { target large_long_double } } */\n /* { dg-additional-options \"-DGNU_EXTENSION\" { target pow10 } } */\n /* { dg-add-options ieee } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:92: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target pow10 } } } */\n /* { dg-final { scan-tree-dump  \"cdce3.C:93: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target pow10 } } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:94: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target pow10 } } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:95: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n /* { dg-final { scan-tree-dump  \"cdce3.C:96: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n /* { dg-final { scan-tree-dump  \"cdce3.C:97: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n /* { dg-final { scan-tree-dump  \"cdce3.C:98: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n@@ -20,7 +20,6 @@\n /* { dg-final { scan-tree-dump  \"cdce3.C:106: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n /* { dg-final { scan-tree-dump  \"cdce3.C:107: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n /* { dg-final { scan-tree-dump  \"cdce3.C:108: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:109: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n /* { dg-final { cleanup-tree-dump \"cdce\" } } */\n \n #include <stdlib.h>"}, {"sha": "2cf08946e36ae5c7cb5e17b7b19128e2cc0dd0c7", "filename": "gcc/testsuite/g++.dg/compat/struct-layout-1_generate.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fstruct-layout-1_generate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fstruct-layout-1_generate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fstruct-layout-1_generate.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n /* Structure layout test generator.\n-   Copyright (C) 2004, 2005, 2007, 2008, 2009, 2011\n+   Copyright (C) 2004, 2005, 2007, 2008, 2009, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>.\n \n@@ -46,7 +46,7 @@ along with GCC; see the file COPYING3.  If not see\n const char *dg_options[] = {\n \"/* { dg-options \\\"%s-I%s\\\" } */\\n\",\n \"/* { dg-options \\\"%s-I%s -mno-mmx -Wno-abi\\\" { target i?86-*-* x86_64-*-* } } */\\n\",\n-\"/* { dg-options \\\"%s-I%s -fno-common\\\" { target alpha*-dec-osf* hppa*-*-hpux* powerpc*-*-darwin* *-*-mingw32* *-*-cygwin* } } */\\n\",\n+\"/* { dg-options \\\"%s-I%s -fno-common\\\" { target hppa*-*-hpux* powerpc*-*-darwin* *-*-mingw32* *-*-cygwin* } } */\\n\",\n \"/* { dg-options \\\"%s-I%s -mno-mmx -fno-common -Wno-abi\\\" { target i?86-*-darwin* x86_64-*-darwin* i?86-*-mingw32* x86_64-*-mingw32* i?86-*-cygwin* } } */\\n\",\n \"/* { dg-options \\\"%s-I%s -mno-base-addresses\\\" { target mmix-*-* } } */\\n\",\n \"/* { dg-options \\\"%s-I%s -mlongcalls -mtext-section-literals\\\" { target xtensa*-*-* } } */\\n\""}, {"sha": "0536b356185809079c37e7a80e295a9398392eab", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-rom.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-rom.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-rom.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-rom.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n // PR c++/49673: check that test_data goes into .rodata\n // { dg-options -std=c++0x }\n-// { dg-additional-options -G0 { target { { alpha*-*-* frv*-*-* ia64-*-* lm32*-*-* m32r*-*-* microblaze*-*-* mips*-*-* powerpc*-*-* rs6000*-*-* score*-*-* } && { ! { *-*-darwin* *-*-aix* alpha*-*-osf* alpha*-*-*vms* } } } } }\n+// { dg-additional-options -G0 { target { { alpha*-*-* frv*-*-* ia64-*-* lm32*-*-* m32r*-*-* microblaze*-*-* mips*-*-* powerpc*-*-* rs6000*-*-* score*-*-* } && { ! { *-*-darwin* *-*-aix* alpha*-*-*vms* } } } } }\n // { dg-final { scan-assembler \"\\\\.rdata\" { target mips*-*-* } } }\n // { dg-final { scan-assembler \"rodata\" { target { { *-*-linux-gnu || *-*-elf } && { ! mips*-*-* } } } } }\n "}, {"sha": "181e65d213fb7cce6bb434ca216c1506bca26d58", "filename": "gcc/testsuite/g++.dg/eh/spbp.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fspbp.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fspbp.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fspbp.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-gdwarf-2\" } */\n-/* { dg-skip-if \"No Dwarf\" { { *-*-aix* alpha*-dec-osf* hppa*-*-hpux* } && { ! hppa*64*-*-* } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"No Dwarf\" { { *-*-aix* hppa*-*-hpux* } && { ! hppa*64*-*-* } } { \"*\" } { \"\" } } */\n \n /* This was a bug on x86-darwin, where the register numbering for SP\n    and BP was swapped (it's easy to do because on that port it's"}, {"sha": "6551c0a41d4ef65772f56fd54c63d4fe0d008d5d", "filename": "gcc/testsuite/g++.dg/ext/label13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel13.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -8,7 +8,7 @@ struct C\n   C();\n };\n \n-C::C()\t// { dg-bogus \"can never be copied\" \"\" { xfail { { *-apple-darwin* alpha*-dec-osf* } || { hppa*-*-hpux* && { ! lp64 } } } } }\n+C::C()\t// { dg-bogus \"can never be copied\" \"\" { xfail { { *-apple-darwin* } || { hppa*-*-hpux* && { ! lp64 } } } } }\n {\n   static void *labelref = &&label;\n   goto *labelref;"}, {"sha": "9a1785036ef1648d226993d7f9d743d9775231aa", "filename": "gcc/testsuite/g++.dg/guality/guality.exp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -4,8 +4,7 @@ load_lib g++-dg.exp\n load_lib gcc-gdb-test.exp\n \n # Disable on darwin until radr://7264615 is resolved.\n-# Disable on Tru64 UNIX (PR testsuite/48251).\n-if { [istarget *-*-darwin*] || [istarget alpha*-dec-osf*] } {\n+if { [istarget *-*-darwin*] } {\n   return\n }\n "}, {"sha": "b2b979ff668cf9f95f3d1f65b5ffe0ca9c7674a5", "filename": "gcc/testsuite/g++.dg/other/anon5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon5.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n // PR c++/34094\n-// { dg-do link { target { ! { *-*-darwin* *-*-hpux* *-*-solaris2.* alpha*-dec-osf* mips-sgi-irix* } } } }\n+// { dg-do link { target { ! { *-*-darwin* *-*-hpux* *-*-solaris2.* mips-sgi-irix* } } } }\n // { dg-options \"-g\" }\n \n namespace {"}, {"sha": "9362943a527d73ad39023d388eae6700844a4d6a", "filename": "gcc/testsuite/g++.dg/other/pragma-ep-1.C", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-ep-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-ep-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpragma-ep-1.C?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,27 +0,0 @@\n-/* { dg-do compile { target *-*-osf5* } } */\n-/* { dg-final { scan-assembler \"xyzzy_one\" } } */\n-/* { dg-final { scan-assembler \"xyzzy_two\" } } */\n-/* { dg-final { scan-assembler \"xyzzz_three\" } } */\n-/* { dg-final { scan-assembler \"four\" } } */\n-/* { dg-final { scan-assembler-not \"_four\" } } */\n-\n-#ifndef __PRAGMA_EXTERN_PREFIX\n-#error\n-#endif\n-\n-#pragma extern_prefix \"xyzzy_\"\n-\n-extern \"C\" int one(void);\n-extern \"C\" int two(void);\n-\n-#pragma extern_prefix \"xyzzz_\"\n-\n-extern \"C\" int three(void);\n-\n-#pragma extern_prefix \"\"\n-\n-extern \"C\" int four(void);\n-\n-int (*p[])(void) = {\n-  one, two, three, four\n-};"}, {"sha": "0d8954d128861d2044b71efdde849b6574b2e528", "filename": "gcc/testsuite/g++.dg/warn/miss-format-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fmiss-format-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fmiss-format-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fmiss-format-1.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -4,7 +4,7 @@\n /* { dg-options \"-Wmissing-format-attribute\" } */\n /* { dg-options \"-Wmissing-format-attribute -Wno-abi\" { target arm_eabi } } */\n /* VxWorks does not provide vscanf, either in kernel or RTP mode.  */\n-/* { dg-error \"not declared\" \"\" { target { *-*-solaris2.8 *-*-vxworks* alpha*-dec-osf* } } 26 } */\n+/* { dg-error \"not declared\" \"\" { target { *-*-solaris2.8 *-*-vxworks* } } 26 } */\n \n #include <stdio.h>\n #include <stdarg.h>\n@@ -23,7 +23,7 @@ bar (const char *fmt, ...)\n {\n   va_list ap;\n   va_start (ap, fmt);\n-  vscanf (fmt, ap); /* { dg-warning \"candidate\" \"scanf attribute warning\" { xfail *-*-solaris2.8 *-*-vxworks* alpha*-dec-osf* } } */\n+  vscanf (fmt, ap); /* { dg-warning \"candidate\" \"scanf attribute warning\" { xfail *-*-solaris2.8 *-*-vxworks* } } */\n   va_end (ap);\n }\n "}, {"sha": "f3603af478772c116746ce90f473ed16e598ef0b", "filename": "gcc/testsuite/g++.dg/warn/pr31246.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr31246.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr31246.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr31246.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,7 +1,6 @@\n // PR 31246\n // { dg-do compile }\n // { dg-options \"-Wunreachable-code -D_GLIBCXX_DEBUG\" }\n-// { dg-xfail-if \"lack of weak symbols\" { alpha*-dec-osf* } }\n #include <vector>\n \n int main()"}, {"sha": "efce90a2bcf0fe0a90f4e4fd0fde47e24eee9a2a", "filename": "gcc/testsuite/g++.dg/warn/weak1.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fweak1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fweak1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fweak1.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,8 +1,7 @@\n // { dg-do run }\n // { dg-require-weak \"\" }\n-// The PA HP-UX and Tru64 UNIX dynamic loaders don't support unsatisfied\n-// weak symbols.\n-// { dg-skip-if \"No unsat\" { alpha*-dec-osf* hppa*-*-hpux* } { \"*\" } { \"\" } }\n+// The PA HP-UX dynamic loader doesn't support unsatisfied weak symbols.\n+// { dg-skip-if \"No unsat\" { hppa*-*-hpux* } { \"*\" } { \"\" } }\n // The darwin loader does, but they do need to exist at link time.\n // { dg-skip-if \"No link unsat\" { *-*-darwin* } { \"*\" } { \"\" } }\n // For kernel modules and static RTPs, the loader treats undefined weak"}, {"sha": "c0341019845f402e1aaacd21f9b1ad8a9a371bda", "filename": "gcc/testsuite/g++.old-deja/g++.eh/badalloc1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -3,7 +3,7 @@\n // itself call malloc(), and will fail if there is no more\n // memory available.\n // { dg-do run { xfail { { xstormy16-*-* *-*-darwin[3-7]* } || vxworks_rtp } } }\n-// Copyright (C) 2000, 2002, 2003, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002, 2003, 2010, 2012 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 6 June 2000 <nathan@codesourcery.com>\n \n // Check we can throw a bad_alloc exception when malloc dies.\n@@ -18,9 +18,9 @@ extern \"C\" void *memcpy(void *, const void *, size_t);\n #ifdef STACK_SIZE\n const int arena_size = 256;\n #else\n-#if defined(__FreeBSD__) || defined(__sun__) || defined(__hpux__) || defined(__osf__)\n-// FreeBSD, Solaris, HP-UX and Tru64 UNIX with threads require even more\n-// space at initialization time.  FreeBSD 5 now requires over 131072 bytes.\n+#if defined(__FreeBSD__) || defined(__sun__) || defined(__hpux__)\n+// FreeBSD, Solaris and HP-UX require even more space at initialization time.\n+// FreeBSD 5 now requires over 131072 bytes.\n const int arena_size = 262144;\n #else\n const int arena_size = 32768;"}, {"sha": "65c0d6dadcbac17533f2abca4efcfcee81b1ccf1", "filename": "gcc/testsuite/g++.old-deja/g++.ext/attrib5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib5.C?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do run { xfail alpha*-dec-osf* i?86-pc-cygwin } }\n+// { dg-do run { xfail i?86-pc-cygwin } }\n // Test that attributes weak and alias coexist.\n // { dg-require-weak \"\" }\n // { dg-require-alias \"\" }"}, {"sha": "41bf9c5cdc1cb381243f597ad93c72520064d154", "filename": "gcc/testsuite/gcc.c-torture/compile/limits-declparen.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-declparen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-declparen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-declparen.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-xfail-if \"\" { alpha*-dec-osf5* } { \"-g\" } { \"\" } } */\n #define PTR1 (* (* (* (* (* (* (* (* (* (*\n #define PTR2 PTR1 PTR1 PTR1 PTR1 PTR1 PTR1 PTR1 PTR1 PTR1 PTR1\n #define PTR3 PTR2 PTR2 PTR2 PTR2 PTR2 PTR2 PTR2 PTR2 PTR2 PTR2"}, {"sha": "1e50ea7cf341f49828b9f738dffc448ac6c14c91", "filename": "gcc/testsuite/gcc.c-torture/compile/limits-pointer.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-pointer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-pointer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-pointer.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-xfail-if \"\" { alpha*-dec-osf5* } { \"-g\" } { \"\" } } */\n #define PTR1 * * * * * * * * * *\n #define PTR2 PTR1 PTR1 PTR1 PTR1 PTR1 PTR1 PTR1 PTR1 PTR1 PTR1\n #define PTR3 PTR2 PTR2 PTR2 PTR2 PTR2 PTR2 PTR2 PTR2 PTR2 PTR2"}, {"sha": "69ce6dab86df8dd091d63f320ebe6b3bf285827b", "filename": "gcc/testsuite/gcc.c-torture/execute/20001229-1.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001229-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001229-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001229-1.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -7,8 +7,7 @@\n    So: If we know how, ask the kernel to deliver SIGBUS instead so\n    that the test case visibly fails.  */\n    \n-#if defined(__alpha__) && (defined(__linux__) || defined(__osf__))\n-#ifdef __linux__\n+#if defined(__alpha__) && defined(__linux__)\n #include <asm/sysinfo.h>\n #include <asm/unistd.h>\n \n@@ -19,11 +18,6 @@ setsysinfo(unsigned long op, void *buffer, unsigned long size,\n   syscall(__NR_osf_setsysinfo, op, buffer, size, start, arg, flag);\n }\n \n-#else\n-#include <sys/sysinfo.h>\n-#include <sys/proc.h>\n-#endif\n-   \n static void __attribute__((constructor))\n trap_unaligned(void)\n {"}, {"sha": "898bc4169a038f8097f323c8093a259e2256028d", "filename": "gcc/testsuite/gcc.dg/attr-weakref-1.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-weakref-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-weakref-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-weakref-1.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -2,10 +2,9 @@\n // { dg-require-weak \"\" }\n // On darwin, we use attr-weakref-1-darwin.c.\n // This test requires support for undefined weak symbols.  This support\n-// is not available on alpha*-dec-osf* and hppa*-*-hpux*.  The test is\n-// skipped rather than xfailed to suppress the warning that would otherwise\n-// arise.\n-// { dg-skip-if \"\" { \"alpha*-dec-osf*\" \"*-*-darwin*\" \"hppa*-*-hpux*\" } \"*\" { \"\" } }\n+// is not available on hppa*-*-hpux*.  The test is skipped rather than\n+// xfailed to suppress the warning that would otherwise arise.\n+// { dg-skip-if \"\" { \"*-*-darwin*\" \"hppa*-*-hpux*\" } \"*\" { \"\" } }\n // For kernel modules and static RTPs, the loader treats undefined weak\n // symbols in the same way as undefined strong symbols.  The test\n // therefore fails to load, so skip it."}, {"sha": "3fe1473e0112d608d8713bf1715eea7b138e72d1", "filename": "gcc/testsuite/gcc.dg/c99-stdint-6.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-stdint-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-stdint-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-stdint-6.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -3,7 +3,6 @@\n /* { dg-do compile { target inttypes_types } } */\n /* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n /* { dg-options \"-std=gnu99 -pedantic-errors -DNO_FAST_TYPES\" { target *-*-solaris2.[89]* } } */\n-/* { dg-options \"-std=gnu99 -pedantic-errors -DNO_LEAST_TYPES -DNO_FAST_TYPES -DNO_MAX_TYPES\" { target alpha*-dec-osf5* } } */\n \n #include <inttypes.h>\n #ifndef SIGNAL_SUPPRESS"}, {"sha": "c7d848c7a6c13f04ab3af1273d87cde8c9707c57", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-1.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -3,7 +3,6 @@\n /* { dg-do preprocess { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n /* { dg-add-options c99_runtime } */\n-/* { dg-skip-if \"<complex.h> missing\" { alpha*-dec-osf5* } } */\n \n /* Test that tgmath defines the macros it's supposed to. */\n #include <tgmath.h>"}, {"sha": "d4f1f87cfa93bed1f1bff928d5049c07ad762ec7", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -3,7 +3,6 @@\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n /* { dg-add-options c99_runtime } */\n-/* { dg-skip-if \"<complex.h> missing\" { alpha*-dec-osf5* } } */\n \n /* Test that invoking type-generic sin on a float invokes sinf. */\n #include <tgmath.h>"}, {"sha": "3e983042751f34eaed7d1a1aff7fb96ac2c0e668", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -3,7 +3,6 @@\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n /* { dg-add-options c99_runtime } */\n-/* { dg-skip-if \"<complex.h> missing\" { alpha*-dec-osf5* } } */\n \n /* Test that invoking type-generic exp on a complex invokes cexp. */\n #include <tgmath.h>"}, {"sha": "d8dc043c261b4bba2cb58d18c9e933c85d485296", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-4.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -3,7 +3,6 @@\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n /* { dg-add-options c99_runtime } */\n-/* { dg-skip-if \"<complex.h> missing\" { alpha*-dec-osf5* } } */\n \n /* Test that invoking type-generic pow on complex float invokes cpowf. */\n #include <tgmath.h>"}, {"sha": "b6ae34e000306e2a53b872262e25f89ea38d7491", "filename": "gcc/testsuite/gcc.dg/compat/struct-layout-1_generate.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-layout-1_generate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-layout-1_generate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-layout-1_generate.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n /* Structure layout test generator.\n-   Copyright (C) 2004, 2005, 2007, 2008, 2009, 2011\n+   Copyright (C) 2004, 2005, 2007, 2008, 2009, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>.\n \n@@ -47,7 +47,7 @@ const char *dg_options[] = {\n \"/* { dg-options \\\"%s-I%s\\\" } */\\n\",\n \"/* { dg-options \\\"%s-I%s -Wno-abi\\\" } */\\n\",\n \"/* { dg-options \\\"%s-I%s -mno-mmx -Wno-abi\\\" { target i?86-*-* x86_64-*-* } } */\\n\",\n-\"/* { dg-options \\\"%s-I%s -fno-common\\\" { target alpha*-dec-osf* hppa*-*-hpux* powerpc*-*-darwin* } } */\\n\",\n+\"/* { dg-options \\\"%s-I%s -fno-common\\\" { target hppa*-*-hpux* powerpc*-*-darwin* } } */\\n\",\n \"/* { dg-options \\\"%s-I%s -mno-mmx -fno-common -Wno-abi\\\" { target i?86-*-darwin* x86_64-*-darwin* } } */\\n\",\n \"/* { dg-options \\\"%s-I%s -mno-base-addresses\\\" { target mmix-*-* } } */\\n\",\n \"/* { dg-options \\\"%s-I%s -mlongcalls -mtext-section-literals\\\" { target xtensa*-*-* } } */\\n\""}, {"sha": "3985040d71210f30015c7c92621e9420497e8cb0", "filename": "gcc/testsuite/gcc.dg/debug/pr49032.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr49032.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr49032.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr49032.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,7 +1,5 @@\n /* PR debug/49032 */\n /* { dg-do link } */\n-/* Prune mips-tfile warning on alpha*-dec-osf* with -gcoff* -O*.  */\n-/* { dg-prune-output \"warning, s not found in .*symbol tables\" } */\n \n static int s = 42;\n "}, {"sha": "49e2ac5a5500ec543893c669eb8b6eb14016f79d", "filename": "gcc/testsuite/gcc.dg/guality/guality.exp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -4,8 +4,7 @@ load_lib gcc-dg.exp\n load_lib gcc-gdb-test.exp\n \n # Disable on darwin until radr://7264615 is resolved.\n-# Disable on Tru64 UNIX (PR testsuite/48251).\n-if { [istarget *-*-darwin*] || [istarget alpha*-dec-osf*] } {\n+if { [istarget *-*-darwin*] } {\n   return\n }\n "}, {"sha": "00b503c250906bb76c784a21c7005fdd352ec11a", "filename": "gcc/testsuite/gcc.dg/intmax_t-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fintmax_t-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fintmax_t-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fintmax_t-1.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-Wall\" } */\n /* { dg-error \"\" \"\" { target { { *arm*-*-*elf* xtensa*-*-elf* } || vxworks_kernel } } 0 } */\n-/* { dg-skip-if \"No *intmax_t in <inttypes.h>\" { alpha*-dec-osf* } } */\n \n /* Compile with -Wall to get a warning if built-in and system intmax_t don't\n    match.  */"}, {"sha": "4517d79211903f26567fd5b30f122f72c07a2bde", "filename": "gcc/testsuite/gcc.dg/pr48616.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48616.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48616.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48616.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,7 +1,7 @@\n /* PR tree-optimization/48616 */\n /* { dg-do run } */\n /* { dg-options \"-O2 -ftree-vectorize\" } */\n-/* { dg-additional-options \"-fno-common\" { target alpha*-dec-osf* hppa*-*-hpux* } } */\n+/* { dg-additional-options \"-fno-common\" { target hppa*-*-hpux* } } */\n \n extern void abort (void);\n int a[4] __attribute__((aligned (32)));"}, {"sha": "e110ff900041db5650e3d9d7b86772b0f7772b85", "filename": "gcc/testsuite/gcc.dg/pragma-ep-1.c", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-1.c?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,27 +0,0 @@\n-/* { dg-do compile { target *-*-osf5* } } */\n-/* { dg-final { scan-assembler \"xyzzy_one\" } } */\n-/* { dg-final { scan-assembler \"xyzzy_two\" } } */\n-/* { dg-final { scan-assembler \"xyzzz_three\" } } */\n-/* { dg-final { scan-assembler \"four\" } } */\n-/* { dg-final { scan-assembler-not \"_four\" } } */\n-\n-#ifndef __PRAGMA_EXTERN_PREFIX\n-#error\n-#endif\n-\n-#pragma extern_prefix \"xyzzy_\"\n-\n-extern int one(void);\n-extern int two(void);\n-\n-#pragma extern_prefix \"xyzzz_\"\n-\n-extern int three(void);\n-\n-#pragma extern_prefix \"\"\n-\n-extern int four(void);\n-\n-int (*p[]) (void) = {\n-  one, two, three, four\n-};"}, {"sha": "1151d9b4bf142ad18e4ecbb6e46852eb013dabb5", "filename": "gcc/testsuite/gcc.dg/pragma-ep-2.c", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-2.c?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,7 +0,0 @@\n-/* { dg-do compile { target *-*-osf5* } } */\n-\n-#pragma extern_prefix\t\t\t/* { dg-warning \"malformed\" } */\n-#pragma extern_prefix foo\t\t/* { dg-warning \"malformed\" } */\n-#pragma extern_prefix \"foo\" 1\t\t/* { dg-warning \"junk\" } */\n-\n-int bar; /* silence `ISO C forbids an empty translation unit' warning */"}, {"sha": "a3e1e6e6845e4236eeeee48b2a49baf958d32cda", "filename": "gcc/testsuite/gcc.dg/pragma-ep-3.c", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-ep-3.c?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,10 +0,0 @@\n-/* { dg-do compile { target alpha*-*-osf5* } } */\n-/* { dg-final { scan-assembler \",Xfoo\" } } */\n-\n-#pragma extern_prefix \"X\"\n-void foo(void) __attribute__((noreturn));\n-void foo(void) __attribute__((noreturn));\n-void bar()\n-{\n-  foo();\n-}"}, {"sha": "97e3765793963d3b63d4830fdbf83ff88bc26f04", "filename": "gcc/testsuite/gcc.dg/torture/pr47917.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47917.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47917.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47917.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do run } */\n /* { dg-options \"-std=c99\" } */\n-/* { dg-options \"-std=c99 -D_ISO_C_SOURCE=19990L\" { target alpha*-dec-osf5* } } */\n /* { dg-options \"-std=c99 -D_XOPEN_SOURCE=500\" { target mips-sgi-irix6.5 *-*-solaris2.[89] } } */\n /* { dg-options \"-std=gnu99\" { target *-*-hpux* } } */\n /* { dg-additional-options \"-D__USE_MINGW_ANSI_STDIO=1\" { target *-*-mingw* } } */"}, {"sha": "d01b8abdda700eba36e24b38528930b13659c214", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr42585.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr42585.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr42585.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr42585.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -35,6 +35,6 @@ Cyc_string_ungetc (int ignore, struct _fat_ptr *sptr)\n /* Whether the structs are totally scalarized or not depends on the\n    MOVE_RATIO macro defintion in the back end.  The scalarization will\n    not take place when using small values for MOVE_RATIO.  */\n-/* { dg-final { scan-tree-dump-times \"struct _fat_ptr _ans\" 0 \"optimized\" { target { ! \"alpha*-dec-osf* arm-*-* powerpc*-*-* s390*-*-* sh*-*-*\" } } } } */\n-/* { dg-final { scan-tree-dump-times \"struct _fat_ptr _T2\" 0 \"optimized\" { target { ! \"alpha*-dec-osf* arm-*-* powerpc*-*-* s390*-*-* sh*-*-*\" } } } } */\n+/* { dg-final { scan-tree-dump-times \"struct _fat_ptr _ans\" 0 \"optimized\" { target { ! \"arm-*-* powerpc*-*-* s390*-*-* sh*-*-*\" } } } } */\n+/* { dg-final { scan-tree-dump-times \"struct _fat_ptr _T2\" 0 \"optimized\" { target { ! \"arm-*-* powerpc*-*-* s390*-*-* sh*-*-*\" } } } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "5b9cd4189c1fa49d8473499d4d44c9c1e34c7773", "filename": "gcc/testsuite/gcc.misc-tests/gcov-14.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-14.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -5,7 +5,6 @@\n /* { dg-additional-options \"-flat_namespace -undefined suppress\" { target *-*-darwin* }  } */\n /* { dg-require-weak \"\" } */\n /* { dg-do run { target native } } */\n-/* { dg-skip-if \"undefined weak not supported\" { alpha*-dec-osf* } } */\n /* { dg-skip-if \"undefined weak not supported\" { { hppa*-*-hpux* } && { ! lp64 } } } */\n \n extern int __attribute__ ((weak)) Foo ();"}, {"sha": "2444d8de7b8ce0857439fa12c4a04ade83cbb423", "filename": "gcc/testsuite/gfortran.dg/guality/guality.exp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgfortran.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fgfortran.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fguality%2Fguality.exp?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -4,8 +4,7 @@ load_lib gfortran-dg.exp\n load_lib gcc-gdb-test.exp\n \n # Disable on darwin until radr://7264615 is resolved.\n-# Disable on Tru64 UNIX (PR testsuite/48251).\n-if { [istarget *-*-darwin*] || [istarget alpha*-dec-osf*] } {\n+if { [istarget *-*-darwin*] } {\n   return\n }\n "}, {"sha": "85cef99119c9bb184c4e1b3b86f4d5181213bc3e", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -233,12 +233,6 @@ proc check_weak_available { } {\n         return 1\n     }\n \n-    # DEC OSF/1/Digital UNIX/Tru64 UNIX supports it\n-\n-    if { [istarget alpha*-dec-osf*] } {\n-\treturn 1\n-    }\n-\n     # Windows targets Cygwin and MingW32 support it\n \n     if { [istarget *-*-cygwin*] || [istarget *-*-mingw*] } {\n@@ -584,11 +578,6 @@ proc check_effective_target_pcc_bitfield_type_matters { } {\n # Add to FLAGS all the target-specific flags needed to use thread-local storage.\n \n proc add_options_for_tls { flags } {\n-    # Tru64 UNIX uses emutls, which relies on a couple of pthread functions\n-    # which only live in libpthread, so always pass -pthread for TLS.\n-    if { [istarget alpha*-dec-osf*] } {\n-\treturn \"$flags -pthread\"\n-    }\n     # On Solaris 8 and 9, __tls_get_addr/___tls_get_addr only lives in\n     # libthread, so always pass -pthread for native TLS.\n     # Need to duplicate native TLS check from\n@@ -993,8 +982,8 @@ proc check_iconv_available { test_what } {\n # Return 1 if an ASCII locale is supported on this host, 0 otherwise.\n \n proc check_ascii_locale_available { } {\n-    if { ([ishost alpha*-dec-osf*] || [ishost mips-sgi-irix*]) } {\n-\t# Neither Tru64 UNIX nor IRIX support an ASCII locale.\n+    if { ([ishost mips-sgi-irix*]) } {\n+\t# IRIX doesn't support an ASCII locale.\n \treturn 0\n     } else {\n \treturn 1"}, {"sha": "3720a8871edb8ffff68ebf1685860356ab0be6b9", "filename": "gcc/testsuite/obj-c++.dg/dwarf-2.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fdwarf-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fdwarf-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fdwarf-2.mm?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,4 @@\n /* { dg-options \"-gdwarf-2 -dA\" } */\n-/* { dg-skip-if \"No Dwarf\" { { alpha*-dec-osf* hppa*-*-hpux* } && { ! hppa*64*-*-* } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"No Dwarf\" { { hppa*-*-hpux* } && { ! hppa*64*-*-* } } { \"*\" } { \"\" } } */\n /* { dg-final { scan-assembler \"0x11\\[^0-9a-f\\].*DW_AT_language\" } } */\n int x;"}, {"sha": "3bfabbae475aa4de87e634b742da50d26ecb3cb3", "filename": "gcc/testsuite/objc.dg/dwarf-1.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fobjc.dg%2Fdwarf-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fobjc.dg%2Fdwarf-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fdwarf-1.m?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n /* { dg-options \"-gdwarf-2 -dA\" } */\n /* { dg-final { scan-assembler \"\\\"id.0\\\".*DW_AT_name\" } } */\n-/* { dg-skip-if \"No Dwarf\" { { *-*-aix* alpha*-dec-osf* hppa*-*-hpux* } && { ! hppa*64*-*-* } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"No Dwarf\" { { *-*-aix* hppa*-*-hpux* } && { ! hppa*64*-*-* } } { \"*\" } { \"\" } } */\n @interface foo\n   id x;\n @end"}, {"sha": "967f515901304a89d0f20e30a8b90ae576420b52", "filename": "gcc/testsuite/objc.dg/dwarf-2.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fobjc.dg%2Fdwarf-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gcc%2Ftestsuite%2Fobjc.dg%2Fdwarf-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fdwarf-2.m?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,4 @@\n /* { dg-options \"-gdwarf-2 -dA -gno-strict-dwarf\" } */\n /* { dg-final { scan-assembler \"0x10\\[^0-9a-f\\].*DW_AT_language\" } } */\n-/* { dg-skip-if \"No Dwarf\" { { *-*-aix* alpha*-dec-osf* hppa*-*-hpux* } && { ! hppa*64*-*-* } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"No Dwarf\" { { *-*-aix* hppa*-*-hpux* } && { ! hppa*64*-*-* } } { \"*\" } { \"\" } } */\n int x;"}, {"sha": "bb648163ece4ff583bc500c8764d99eeebc7e7c7", "filename": "gnattools/configure", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gnattools%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gnattools%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gnattools%2Fconfigure?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -2076,9 +2076,6 @@ case \"${target}\" in\n     mlib-tgt-specific.adb<mlib-tgt-specific-aix.adb \\\n     indepsw.adb<indepsw-aix.adb\"\n     ;;\n-  alpha*-dec-osf*)\n-    TOOLS_TARGET_PAIRS=\"mlib-tgt-specific.adb<mlib-tgt-specific-tru64.adb\"\n-    ;;\n   alpha*-dec-vms* | alpha*-dec-openvms* | alpha*-dec-vms* \\\n   | alpha*-hp-vms* | alpha*-hp-openvms* | alpha*-hp-vms*)\n     TOOLS_TARGET_PAIRS=\"\\"}, {"sha": "443528e5b8e4a4ece5a4db86c077c47185347987", "filename": "gnattools/configure.ac", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/gnattools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/gnattools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gnattools%2Fconfigure.ac?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n # Configure script for libada.\n-#   Copyright 2003, 2004, 2009 Free Software Foundation, Inc.\n+#   Copyright 2003, 2004, 2009, 2012 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -116,9 +116,6 @@ case \"${target}\" in\n     mlib-tgt-specific.adb<mlib-tgt-specific-aix.adb \\\n     indepsw.adb<indepsw-aix.adb\"\n     ;;\n-  alpha*-dec-osf*)\n-    TOOLS_TARGET_PAIRS=\"mlib-tgt-specific.adb<mlib-tgt-specific-tru64.adb\"\n-    ;;\n   alpha*-dec-vms* | alpha*-dec-openvms* | alpha*-dec-vms* \\\n   | alpha*-hp-vms* | alpha*-hp-openvms* | alpha*-hp-vms*)\n     TOOLS_TARGET_PAIRS=\"\\"}, {"sha": "0037eaa43e48a24d9f6957caaf7ebed3c3efebdf", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,16 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.host: Remove alpha*-dec-osf5.1* handling.\n+\t* config/alpha/gthr-posix.c: Remove.\n+\t* config/alpha/libgcc-osf5.ver: Remove.\n+\t* config/alpha/osf5-unwind.h: Remove.\n+\t* config/alpha/t-osf-pthread: Remove.\n+\t* config/alpha/t-slibgcc-osf: Remove.\n+\t* config/t-crtfm (crtfastmath.o): Remove -frandom-seed.\n+\t* gthr-posix.h [!_REENTRANT && __osf__] (_REENTRANT): Don't define.\n+\t[__osf__ && _PTHREAD_USE_MANGLED_NAMES_]: Remove.\n+\t* mkmap-flat.awk: Remove osf_export handling.\n+\n 2012-03-12  Richard Guenther  <rguenther@suse.de>\n \n \t* gthr.h (__GTHREAD_MUTEX_INIT_FUNCTION): Adjust specification."}, {"sha": "2fe4e34b559b489a42e81e77bc9545bcd96fd4db", "filename": "libgcc/config.host", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -266,8 +266,7 @@ case ${host} in\n esac\n \n case ${host} in\n-*-*-darwin* | *-*-freebsd* | *-*-netbsd* | *-*-openbsd* | *-*-solaris2* | \\\n-  alpha*-dec-osf5.1*)\n+*-*-darwin* | *-*-freebsd* | *-*-netbsd* | *-*-openbsd* | *-*-solaris2*)\n   enable_execute_stack=enable-execute-stack-mprotect.c\n   ;;\n i[34567]86-*-mingw* | x86_64-*-mingw*)\n@@ -294,16 +293,6 @@ alpha*-*-netbsd*)\n alpha*-*-openbsd*)\n \ttmake_file=\"${tmake_file} alpha/t-alpha alpha/t-ieee\"\n \t;;\n-alpha*-dec-osf5.1*)\n-\ttmake_file=\"${tmake_file} alpha/t-alpha alpha/t-ieee t-crtfm t-slibgcc alpha/t-slibgcc-osf\"\n-\tcase ${target_thread_file} in\n-\t  posix)\n-\t    tmake_file=\"${tmake_file} alpha/t-osf-pthread\"\n-\t    ;;\n-\tesac\n-\textra_parts=\"${extra_parts} crtfastmath.o\"\n-\tmd_unwind_header=alpha/osf5-unwind.h\n-\t;;\n alpha64-dec-*vms*)\n \ttmake_file=\"$tmake_file alpha/t-alpha alpha/t-ieee alpha/t-vms t-slibgcc-vms\"\n \textra_parts=\"$extra_parts vms-dwarf2.o vms-dwarf2eh.o\""}, {"sha": "02681a4371ebf8243101c05eaaa340d0398088e9", "filename": "libgcc/config/alpha/gthr-posix.c", "status": "removed", "additions": 0, "deletions": 266, "changes": 266, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgcc%2Fconfig%2Falpha%2Fgthr-posix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgcc%2Fconfig%2Falpha%2Fgthr-posix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Fgthr-posix.c?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,266 +0,0 @@\n-/* POSIX threads dummy routines for systems without weak definitions.  */\n-/* Compile this one with gcc.  */\n-/* Copyright (C) 2003, 2004, 2005, 2007, 2008, 2009, 2011\n-   Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"tconfig.h\"\n-#include \"tm.h\"\n-#include \"libgcc_tm.h\"\n-# define __gthrw_pragma(pragma) _Pragma (#pragma)\n-/* Define so we provide weak definitions of functions used by libobjc only.  */\n-#define _LIBOBJC_WEAK\n-#include \"gthr.h\"\n-\n-int\n-pthread_once (pthread_once_t *once ATTRIBUTE_UNUSED,\n-\t      void (*func) (void) ATTRIBUTE_UNUSED)\n-{\n-  return -1;\n-}\n-\n-int\n-pthread_key_create (pthread_key_t *key ATTRIBUTE_UNUSED,\n-\t\t    void (*dtor) (void *) ATTRIBUTE_UNUSED)\n-{\n-  return -1;\n-}\n-\n-int\n-pthread_key_delete (pthread_key_t key ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-void *\n-pthread_getspecific (pthread_key_t key ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_setspecific (pthread_key_t key ATTRIBUTE_UNUSED,\n-\t\t     const void *ptr ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_create (pthread_t *thread ATTRIBUTE_UNUSED,\n-\t\tconst pthread_attr_t *attr ATTRIBUTE_UNUSED,\n-\t\tvoid *(*start_routine) (void *) ATTRIBUTE_UNUSED,\n-\t\tvoid *arg ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_join (pthread_t thread ATTRIBUTE_UNUSED,\n-\t      void **value_ptr ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-void\n-pthread_exit (void *value_ptr ATTRIBUTE_UNUSED)\n-{\n-}\n-\n-int\n-pthread_detach (pthread_t thread ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_cancel (pthread_t thread ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_mutex_lock (pthread_mutex_t *mutex ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_mutex_trylock (pthread_mutex_t *mutex ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-#ifdef _POSIX_TIMEOUTS\n-#if _POSIX_TIMEOUTS >= 0\n-int\n-pthread_mutex_timedlock (pthread_mutex_t *mutex ATTRIBUTE_UNUSED,\n-\t\t\t const struct timespec *abs_timeout ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-#endif\n-#endif /* _POSIX_TIMEOUTS */\n-\n-int\n-pthread_mutex_unlock (pthread_mutex_t *mutex ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_mutexattr_init (pthread_mutexattr_t *attr ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_mutexattr_settype (pthread_mutexattr_t *attr ATTRIBUTE_UNUSED,\n-\t\t\t   int type ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_mutexattr_destroy (pthread_mutexattr_t *attr ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_cond_broadcast (pthread_cond_t *cond ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_cond_destroy (pthread_cond_t *cond ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_cond_init (pthread_cond_t *cond ATTRIBUTE_UNUSED,\n-\t\t   const pthread_condattr_t *attr ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_cond_signal (pthread_cond_t *cond ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_cond_wait (pthread_cond_t *cond ATTRIBUTE_UNUSED,\n-\t\t   pthread_mutex_t *mutex ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_cond_timedwait (pthread_cond_t *cond ATTRIBUTE_UNUSED,\n-\t\t\tpthread_mutex_t *mutex ATTRIBUTE_UNUSED,\n-\t\t\tconst struct timespec *abstime ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_mutex_init (pthread_mutex_t *mutex ATTRIBUTE_UNUSED,\n-\t\t    const pthread_mutexattr_t *attr ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_mutex_destroy (pthread_mutex_t *mutex ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-pthread_t\n-pthread_self (void)\n-{\n-  return (pthread_t) 0;\n-}\n-\n-#ifdef _POSIX_PRIORITY_SCHEDULING\n-#ifdef _POSIX_THREAD_PRIORITY_SCHEDULING\n-int\n-sched_get_priority_max (int policy ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-sched_get_priority_min (int policy ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-#endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */\n-#endif /* _POSIX_PRIORITY_SCHEDULING */\n-\n-int\n-sched_yield (void)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_attr_destroy (pthread_attr_t *attr ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_attr_init (pthread_attr_t *attr ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_attr_setdetachstate (pthread_attr_t *attr ATTRIBUTE_UNUSED,\n-\t\t\t     int detachstate ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-#ifdef _POSIX_THREAD_PRIORITY_SCHEDULING\n-int\n-pthread_getschedparam (pthread_t thread ATTRIBUTE_UNUSED,\n-\t\t       int *policy ATTRIBUTE_UNUSED,\n-\t\t       struct sched_param *param ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-\n-int\n-pthread_setschedparam (pthread_t thread ATTRIBUTE_UNUSED,\n-\t\t       int policy ATTRIBUTE_UNUSED,\n-\t\t       const struct sched_param *param ATTRIBUTE_UNUSED)\n-{\n-  return 0;\n-}\n-#endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */\n-"}, {"sha": "4266928d1cf235d55bacbb00e553ea27e1f69944", "filename": "libgcc/config/alpha/libgcc-osf5.ver", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgcc%2Fconfig%2Falpha%2Flibgcc-osf5.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgcc%2Fconfig%2Falpha%2Flibgcc-osf5.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Flibgcc-osf5.ver?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,58 +0,0 @@\n-# Copyright (C) 2011 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# Tru64 UNIX specific additions to libgcc-std.ver.\n-\n-GCC_4.7.0 {\n-  __udiv_qrnnd\n-  # Beware *not* to hide the POSIX threads related symbols provided by\n-  # gthr-posix.c, as this would prevent their preemption by real symbols.\n-  __pthread_cancel\n-  __pthread_cond_broadcast\n-  __pthread_cond_destroy\n-  __pthread_cond_init\n-  __pthread_cond_signal\n-  __pthread_cond_timedwait\n-  __pthread_cond_wait\n-  __pthread_create\n-  __pthread_detach\n-  __pthread_exit\n-  __pthread_getspecific\n-  __pthread_join\n-  __pthread_mutex_destroy\n-  __pthread_mutex_init\n-  __pthread_mutex_lock\n-  __pthread_mutex_trylock\n-  __pthread_mutex_unlock\n-  __pthread_once\n-  __pthread_self\n-  __pthread_setspecific\n-  pthread_attr_destroy\n-  pthread_attr_init\n-  pthread_attr_setdetachstate\n-  pthread_getschedparam\n-  pthread_key_create\n-  pthread_key_delete\n-  pthread_mutexattr_destroy\n-  pthread_mutexattr_init\n-  pthread_mutexattr_settype\n-  pthread_setschedparam\n-  sched_get_priority_max\n-  sched_get_priority_min\n-  sched_yield\n-}"}, {"sha": "c649099349e3b4e1432acacac2da3b7937150c92", "filename": "libgcc/config/alpha/osf5-unwind.h", "status": "removed", "additions": 0, "deletions": 329, "changes": 329, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgcc%2Fconfig%2Falpha%2Fosf5-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgcc%2Fconfig%2Falpha%2Fosf5-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Fosf5-unwind.h?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,329 +0,0 @@\n-/* DWARF2 EH unwinding support for Alpha Tru64.\n-   Copyright (C) 2010 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* This file implements the MD_FALLBACK_FRAME_STATE_FOR macro, triggered when\n-   the GCC table based unwinding process hits a frame for which no unwind info\n-   has been registered. This typically occurs when raising an exception from a\n-   signal handler, because the handler is actually called from the OS kernel.\n-\n-   The basic idea is to detect that we are indeed trying to unwind past a\n-   signal handler and to fill out the GCC internal unwinding structures for\n-   the OS kernel frame as if it had been directly called from the interrupted\n-   context.\n-\n-   This is all assuming that the code to set the handler asked the kernel to\n-   pass a pointer to such context information.  */\n-\n-/* --------------------------------------------------------------------------\n-   -- Basic principles of operation:\n-   --------------------------------------------------------------------------\n-\n-   1/ We first need a way to detect if we are trying to unwind past a signal\n-      handler.\n-\n-   The typical method that is used on most platforms is to look at the code\n-   around the return address we have and check if it matches the OS code\n-   calling a handler.  To determine what this code is expected to be, get a\n-   breakpoint into a real signal handler and look at the code around the\n-   return address.  Depending on the library versions the pattern of the\n-   signal handler is different; this is the reason why we check against more\n-   than one pattern.\n-\n-   On this target, the return address is right after the call and every\n-   instruction is 4 bytes long.  For the simple case of a null dereference in\n-   a single-threaded app, it went like:\n-\n-   # Check that we indeed have something we expect: the instruction right\n-   # before the return address is within a __sigtramp function and is a call.\n-\n-   [... run gdb and break at the signal handler entry ...]\n-\n-   (gdb) x /i $ra-4\n-   <__sigtramp+160>: jsr     ra,(a3),0x3ff800d0ed4 <_fpdata+36468>\n-\n-   # Look at the code around that return address, and eventually observe a\n-   # significantly large chunk of *constant* code right before the call:\n-\n-   (gdb) x /10i  $ra-44\n-   <__sigtramp+120>: lda     gp,-27988(gp)\n-   <__sigtramp+124>: ldq     at,-18968(gp)\n-   <__sigtramp+128>: lda     t0,-1\n-   <__sigtramp+132>: stq     t0,0(at)\n-   <__sigtramp+136>: ldq     at,-18960(gp)\n-   <__sigtramp+140>: ldl     t1,8(at)\n-   <__sigtramp+144>: ldq     at,-18960(gp)\n-   <__sigtramp+148>: stl     t1,12(at)\n-   <__sigtramp+152>: ldq     at,-18960(gp)\n-   <__sigtramp+156>: stl     t0,8(at)\n-\n-   # The hexadecimal equivalent that we will have to match is:\n-\n-   (gdb) x /10x  $ra-44\n-   <__sigtramp+120>: 0x23bd92ac    0xa79db5e8    0x203fffff   0xb43c0000\n-   <__sigtramp+136>: 0xa79db5f0    0xa05c0008    0xa79db5f0   0xb05c000c\n-   <__sigtramp+152>: 0xa79db5f0    0xb03c0008\n-\n-   The problem observed on this target with this approach is that although\n-   we found a constant set of instruction patterns there were some\n-   gp-related offsets that made the machine code to differ from one\n-   installation to another.  This problem could have been overcome by masking\n-   these offsets, but we found that it would be simpler and more efficient to\n-   check whether the return address was part of a signal handler, by comparing\n-   it against some expected code offset from __sigtramp.\n-\n-   # Check that we indeed have something we expect: the instruction\n-   # right before the return address is within a __sigtramp\n-   # function and is a call. We also need to obtain the offset\n-   # between the return address and the start address of __sigtramp.\n-\n-   [... run gdb and break at the signal handler entry ...]\n-\n-   (gdb) x /2i $ra-4\n-   <__sigtramp+160>: jsr     ra,(a3),0x3ff800d0ed4 <_fpdata+36468>\n-   <__sigtramp+164>: ldah    gp,16381(ra)\n-\n-   (gdb) p (long)$ra - (long)&__sigtramp\n-   $2 = 164\n-\n-   --------------------------------------------------------------------------\n-\n-   2/ Once we know we are going through a signal handler, we need a way to\n-      retrieve information about the interrupted run-time context.\n-\n-   On this platform, the third handler's argument is a pointer to a structure\n-   describing this context (struct sigcontext *). We unfortunately have no\n-   direct way to transfer this value here, so a couple of tricks are required\n-   to compute it.\n-\n-   As documented at least in some header files (e.g. sys/machine/context.h),\n-   the structure the handler gets a pointer to is located on the stack.  As of\n-   today, while writing this macro, we have unfortunately not been able to\n-   find a detailed description of the full stack layout at handler entry time,\n-   so we'll have to resort to empirism :)\n-\n-   When unwinding here, we have the handler's CFA at hand, as part of the\n-   current unwinding context which is one of our arguments.  We presume that\n-   for each call to a signal handler by the same kernel routine, the context's\n-   structure location on the stack is always at the same offset from the\n-   handler's CFA, and we compute that offset from bare observation:\n-\n-   For the simple case of a bare null dereference in a single-threaded app,\n-   computing the offset was done using GNAT like this:\n-\n-   # Break on the first handler's instruction, before the prologue to have the\n-   # CFA in $sp, and get there:\n-\n-   (gdb) b *&__gnat_error_handler\n-   Breakpoint 1 at 0x120016090: file init.c, line 378.\n-\n-   (gdb) r\n-   Program received signal SIGSEGV, Segmentation fault.\n-\n-   (gdb) c\n-   Breakpoint 1, __gnat_error_handler (sig=..., sip=..., context=...)\n-\n-   # The displayed argument value are meaningless because we stopped before\n-   # their final \"homing\". We know they are passed through $a0, $a1 and $a2\n-   # from the ABI, though, so ...\n-\n-   # Observe that $sp and the context pointer are in the same (stack) area,\n-   # and compute the offset:\n-\n-   (gdb) p /x $sp\n-   $2 = 0x11fffbc80\n-\n-   (gdb) p /x $a2\n-   $3 = 0x11fffbcf8\n-\n-   (gdb) p /x (long)$a2 - (long)$sp\n-   $4 = 0x78\n-\n-   --------------------------------------------------------------------------\n-\n-   3/ Once we know we are unwinding through a signal handler and have the\n-      address of the structure describing the interrupted context at hand, we\n-      have to fill the internal frame-state/unwind-context structures properly\n-      to allow the unwinding process to proceed.\n-\n-   Roughly, we are provided with an *unwinding* CONTEXT, describing the state\n-   of some point P in the call chain we are unwinding through.  The macro we\n-   implement has to fill a \"frame state\" structure FS that describe the P's\n-   caller state, by way of *rules* to compute its CFA, return address, and\n-   **saved** registers *locations*. \n-\n-   For the case we are going to deal with, the caller is some kernel code\n-   calling a signal handler, and:\n-\n-   o The saved registers are all in the interrupted run-time context,\n-\n-   o The CFA is the stack pointer value when the kernel code is entered, that\n-     is, the stack pointer value at the interruption point, also part of the\n-     interrupted run-time context.\n-\n-   o We want the return address to appear as the address of the active\n-     instruction at the interruption point, so that the unwinder proceeds as\n-     if the interruption had been a regular call.  This address is also part\n-     of the interrupted run-time context.\n-\n-   --\n-\n-   Also, note that there is an important difference between the return address\n-   we need to claim for the kernel frame and the value of the return address\n-   register at the interruption point.\n-\n-   The latter might be required to be able to unwind past the interrupted\n-   routine, for instance if it is interrupted before saving the incoming\n-   register value in its own frame, which may typically happen during stack\n-   probes for stack-checking purposes.\n-\n-   It is then essential that the rules stated to locate the kernel frame\n-   return address don't clobber the rules describing where is saved the return\n-   address register at the interruption point, so some scratch register state\n-   entry should be used for the former. We have DWARF_ALT_FRAME_RETURN_COLUMN\n-   at hand exactly for that purpose.\n-\n-   --------------------------------------------------------------------------\n-\n-   4/ Depending on the context (single-threaded or multi-threaded app, ...),\n-   the code calling the handler and the handler-cfa to interrupted-context\n-   offset might change, so we use a simple generic data structure to track\n-   the possible variants.  */\n-\n-/* This is the structure to wrap information about each possible sighandler\n-   caller we may have to identify.  */\n-\n-typedef struct {\n-  /* Expected return address when being called from a sighandler.  */\n-  void *ra_value;\n-\n-  /* Offset to get to the sigcontext structure from the handler's CFA\n-     when the pattern matches.  */\n-  int cfa_to_context_offset;\n-\n-} sighandler_call_t;\n-\n-/* Helper macro for MD_FALLBACK_FRAME_STATE_FOR below.\n-\n-   Look at RA to see if it matches within a sighandler caller.\n-   Set SIGCTX to the corresponding sigcontext structure (computed from\n-   CFA) if it does, or to 0 otherwise.  */\n-\n-#define COMPUTE_SIGCONTEXT_FOR(RA,CFA,SIGCTX)\t\t\t\t    \\\n-do {\t\t\t\t\t\t\t\t\t    \\\n-  /* Define and register the applicable patterns.  */\t\t\t    \\\n-  extern void __sigtramp (void);\t\t\t\t\t    \\\n-\t\t\t\t\t\t\t\t\t    \\\n-  sighandler_call_t sighandler_calls [] = {\t\t\t\t    \\\n-    {__sigtramp + 164, 0x78}\t\t\t\t\t\t    \\\n-  };\t\t\t\t\t\t\t\t\t    \\\n-\t\t\t\t\t\t\t\t\t    \\\n-  int n_patterns_to_match\t\t\t\t\t\t    \\\n-    = sizeof (sighandler_calls) / sizeof (sighandler_call_t);\t\t    \\\n-\t\t\t\t\t\t\t\t\t    \\\n-  int pn;  /* pattern number  */\t\t\t\t\t    \\\n-\t\t\t\t\t\t\t\t\t    \\\n-  int match = 0;  /* Did last pattern match ?  */\t\t\t    \\\n-\t\t\t\t\t\t\t\t\t    \\\n-  /* Try to match each pattern in turn.  */\t\t\t\t    \\\n-  for (pn = 0; !match && pn < n_patterns_to_match; pn ++)\t\t    \\\n-    match = ((RA) == sighandler_calls[pn].ra_value);\t\t\t    \\\n-\t\t\t\t\t\t\t\t\t    \\\n-  (SIGCTX) = (struct sigcontext *)\t\t\t\t\t    \\\n-    (match ? ((CFA) + sighandler_calls[pn - 1].cfa_to_context_offset) : 0); \\\n-} while (0);\n-\n-#include <sys/context_t.h>\n-\n-#define REG_SP  30  /* hard reg for stack pointer */\n-#define REG_RA  26  /* hard reg for return address */\n-\n-#define MD_FALLBACK_FRAME_STATE_FOR alpha_fallback_frame_state\n-\n-static _Unwind_Reason_Code\n-alpha_fallback_frame_state (struct _Unwind_Context *context,\n-\t\t\t    _Unwind_FrameState *fs)\n-{\n-  /* Return address and CFA of the frame we're attempting to unwind through,\n-     possibly a signal handler.  */\n-  void *ctx_ra  = (void *)context->ra;\n-  void *ctx_cfa = (void *)context->cfa;\n-\n-  /* CFA of the intermediate abstract kernel frame between the interrupted\n-     code and the signal handler, if we're indeed unwinding through a signal\n-     handler.  */\n-  void *k_cfa;\n-\n-  /* Pointer to the sigcontext structure pushed by the kernel when we're\n-     unwinding through a signal handler.  */\n-  struct sigcontext *sigctx;\n-  int i;\n-\n-  COMPUTE_SIGCONTEXT_FOR (ctx_ra, ctx_cfa, sigctx);\n-\n-  if (sigctx == 0)\n-    return _URC_END_OF_STACK;\n-\n-  /* The kernel frame's CFA is exactly the stack pointer value at the\n-     interruption point.  */\n-  k_cfa = (void *) sigctx->sc_regs [REG_SP];\n-\n-  /* State the rules to compute the CFA we have the value of: use the\n-     previous CFA and offset by the difference between the two.  See\n-     uw_update_context_1 for the supporting details.  */\n-  fs->regs.cfa_how = CFA_REG_OFFSET;\n-  fs->regs.cfa_reg = __builtin_dwarf_sp_column ();\n-  fs->regs.cfa_offset = k_cfa - ctx_cfa;\n-\n-  /* Fill the internal frame_state structure with information stating\n-     where each register of interest in the saved context can be found\n-     from the CFA.  */\n-\n-  /* The general registers are in sigctx->sc_regs.  Leave out r31, which\n-     is read-as-zero. It makes no sense restoring it, and we are going to\n-     use the state entry for the kernel return address rule below.\n-\n-     This loop must cover at least all the callee-saved registers, and\n-     we just don't bother specializing the set here.  */\n-  for (i = 0; i <= 30; i ++)\n-    {\n-      fs->regs.reg[i].how = REG_SAVED_OFFSET;\n-      fs->regs.reg[i].loc.offset\n-\t= (void *) &sigctx->sc_regs[i] - (void *) k_cfa;\n-    }\n-\n-  /* Ditto for the floating point registers in sigctx->sc_fpregs.  */\n-  for (i = 0; i <= 31; i ++)\n-    {\n-      fs->regs.reg[32+i].how = REG_SAVED_OFFSET;\n-      fs->regs.reg[32+i].loc.offset\n-\t= (void *) &sigctx->sc_fpregs[i] - (void *) k_cfa;\n-    }\n-\n-  /* State the rules to find the kernel's code \"return address\", which\n-     is the address of the active instruction when the signal was caught,\n-     in sigctx->sc_pc. Use DWARF_ALT_FRAME_RETURN_COLUMN since the return\n-     address register is a general register and should be left alone.  */\n-  fs->retaddr_column = DWARF_ALT_FRAME_RETURN_COLUMN;\n-  fs->regs.reg[DWARF_ALT_FRAME_RETURN_COLUMN].how = REG_SAVED_OFFSET;\n-  fs->regs.reg[DWARF_ALT_FRAME_RETURN_COLUMN].loc.offset\n-    = (void *) &sigctx->sc_pc - (void *) k_cfa;\n-  fs->signal_frame = 1;\n-\n-  return _URC_NO_REASON;\n-}"}, {"sha": "9a175dbeb9e4eab12902cc13d8461da887800cdc", "filename": "libgcc/config/alpha/t-osf-pthread", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgcc%2Fconfig%2Falpha%2Ft-osf-pthread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgcc%2Fconfig%2Falpha%2Ft-osf-pthread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Ft-osf-pthread?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,5 +0,0 @@\n-# Compile libgcc2 with POSIX threads supports\n-HOST_LIBGCC2_CFLAGS += -pthread\n-\n-# Provide dummy POSIX threads functions\n-LIB2ADD += $(srcdir)/config/alpha/gthr-posix.c"}, {"sha": "66e5cf12aa17665b09892fa40121964c02a57fee", "filename": "libgcc/config/alpha/t-slibgcc-osf", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgcc%2Fconfig%2Falpha%2Ft-slibgcc-osf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgcc%2Fconfig%2Falpha%2Ft-slibgcc-osf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Ft-slibgcc-osf?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,29 +0,0 @@\n-# Copyright (C) 2000, 2001, 2003, 2004, 2005, 2011\n-# Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# Build a shared libgcc library with the Tru64 UNIX linker.\n-\n-SHLIB_LDFLAGS = -Wl,-msym -Wl,-set_version,gcc.1 -Wl,-soname,$(SHLIB_SONAME) \\\n-\t-Wl,-hidden -Wl,-input,$(SHLIB_MAP)\n-\n-SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n-SHLIB_MKMAP_OPTS = -v osf_export=1\n-# Needed so mkmap-flat.awk can parse the nm output.\n-SHLIB_NM_FLAGS = -Bg\n-SHLIB_MAPFILES = libgcc-std.ver $(srcdir)/config/alpha/libgcc-osf5.ver"}, {"sha": "61e62696bfd843f65d619c7d437e040dc4f4c3af", "filename": "libgcc/config/t-crtfm", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgcc%2Fconfig%2Ft-crtfm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgcc%2Fconfig%2Ft-crtfm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-crtfm?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,2 @@\n-# -frandom-seed is necessary to avoid bootstrap comparison failures due to\n-# changing mangled names of the constructor on Tru64 Unix, but harmless\n-# otherwise.\n crtfastmath.o: $(srcdir)/config/$(cpu_type)/crtfastmath.c\n-\t$(gcc_compile) -frandom-seed=gcc-crtfastmath -c $<\n+\t$(gcc_compile) -c $<"}, {"sha": "67d79ff3e7c293086137d82787dc94c89b166809", "filename": "libgcc/gthr-posix.h", "status": "modified", "additions": 1, "deletions": 44, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgcc%2Fgthr-posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgcc%2Fgthr-posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fgthr-posix.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,7 +1,7 @@\n /* Threads compatibility routines for libgcc2 and libobjc.  */\n /* Compile this one with gcc.  */\n /* Copyright (C) 1997, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,\n-   2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n+   2008, 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -33,11 +33,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define __GTHREADS 1\n #define __GTHREADS_CXX0X 1\n \n-/* Some implementations of <pthread.h> require this to be defined.  */\n-#if !defined(_REENTRANT) && defined(__osf__)\n-#define _REENTRANT 1\n-#endif\n-\n #include <pthread.h>\n \n #if ((defined(_LIBOBJC) || defined(_LIBOBJC_WEAK)) \\\n@@ -105,39 +100,6 @@ typedef struct timespec __gthread_time_t;\n /* Typically, __gthrw_foo is a weak reference to symbol foo.  */\n #define __gthrw(name) __gthrw2(__gthrw_ ## name,name,name)\n \n-/* On Tru64, /usr/include/pthread.h uses #pragma extern_prefix \"__\" to\n-   map a subset of the POSIX pthread API to mangled versions of their\n-   names.  */\n-#if defined(__osf__) && defined(_PTHREAD_USE_MANGLED_NAMES_)\n-#define __gthrw3(name) __gthrw2(__gthrw_ ## name, __ ## name, name)\n-__gthrw3(pthread_once)\n-__gthrw3(pthread_getspecific)\n-__gthrw3(pthread_setspecific)\n-\n-__gthrw3(pthread_create)\n-__gthrw3(pthread_join)\n-__gthrw3(pthread_detach)\n-__gthrw3(pthread_equal)\n-__gthrw3(pthread_self)\n-__gthrw3(pthread_cancel)\n-__gthrw3(sched_yield)\n-\n-__gthrw3(pthread_mutex_lock)\n-__gthrw3(pthread_mutex_trylock)\n-#if _GTHREAD_USE_MUTEX_TIMEDLOCK\n-__gthrw3(pthread_mutex_timedlock)\n-#endif\n-__gthrw3(pthread_mutex_unlock)\n-__gthrw3(pthread_mutex_init)\n-__gthrw3(pthread_mutex_destroy)\n-\n-__gthrw3(pthread_cond_init)\n-__gthrw3(pthread_cond_broadcast)\n-__gthrw3(pthread_cond_signal)\n-__gthrw3(pthread_cond_wait)\n-__gthrw3(pthread_cond_timedwait)\n-__gthrw3(pthread_cond_destroy)\n-#else\n __gthrw(pthread_once)\n __gthrw(pthread_getspecific)\n __gthrw(pthread_setspecific)\n@@ -167,7 +129,6 @@ __gthrw(pthread_cond_signal)\n __gthrw(pthread_cond_wait)\n __gthrw(pthread_cond_timedwait)\n __gthrw(pthread_cond_destroy)\n-#endif\n \n __gthrw(pthread_key_create)\n __gthrw(pthread_key_delete)\n@@ -178,11 +139,7 @@ __gthrw(pthread_mutexattr_destroy)\n \n #if defined(_LIBOBJC) || defined(_LIBOBJC_WEAK)\n /* Objective-C.  */\n-#if defined(__osf__) && defined(_PTHREAD_USE_MANGLED_NAMES_)\n-__gthrw3(pthread_exit)\n-#else\n __gthrw(pthread_exit)\n-#endif /* __osf__ && _PTHREAD_USE_MANGLED_NAMES_ */\n #ifdef _POSIX_PRIORITY_SCHEDULING\n #ifdef _POSIX_THREAD_PRIORITY_SCHEDULING\n __gthrw(sched_get_priority_max)"}, {"sha": "234de223c644b4bdd21f808a75a8187ad85782fb", "filename": "libgcc/mkmap-flat.awk", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgcc%2Fmkmap-flat.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgcc%2Fmkmap-flat.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fmkmap-flat.awk?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,6 @@\n # Generate a flat list of symbols to export.\n-#\tCopyright (C) 2007, 2008, 2009, 2011  Free Software Foundation, Inc.\n+#\tCopyright (C) 2007, 2008, 2009, 2011, 2012\n+#\tFree Software Foundation, Inc.\n #\tContributed by Richard Henderson <rth@cygnus.com>\n #\n # This file is part of GCC.\n@@ -20,8 +21,6 @@\n \n # Options:\n #   \"-v leading_underscore=1\" : Symbols in map need leading underscore.\n-#   \"-v osf_export=1\"\t      : Create -input file for Tru64 UNIX linker\n-#\t\t\t\tinstead of map file.\n #   \"-v pe_dll=1\"             : Create .DEF file for Windows PECOFF\n #                               DLL link instead of map file.\n \n@@ -100,10 +99,6 @@ END {\n   }\n \n   for (sym in export)\n-    if (def[sym] || (pe_dll && def[\"_\" sym])) {\n-      if (!osf_export)\n-\tprint sym;\n-      else\n-\tprint \"-exported_symbol \" sym;\n-    }\n+    if (def[sym] || (pe_dll && def[\"_\" sym]))\n+      print sym;\n }"}, {"sha": "ef81d3104c56baf774670634b684ef6a0d9244ea", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,11 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac: Remove Tru64 reference.\n+\t* acinclude.m4 (LIBGFOR_GTHREAD_WEAK): Remove alpha*-dec-osf*\n+\thandling.\n+\t* configure: Regenerate.\n+\t* intrinsics/c99_functions.c [__osf__]: Remove.\n+\n 2012-03-10  Tobias Burnus  <burnus@net-b.de>\n \n \t* libgfortran.h (descriptor_dimension, GFC_DIMENSION_LBOUND,"}, {"sha": "d4acf76ba4202925034d0097aec8a1fc11511a7a", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -99,7 +99,7 @@ void foo (void);\n \t      [Define to 1 if the target supports #pragma weak])\n   fi\n   case \"$host\" in\n-    *-*-darwin* | *-*-hpux* | *-*-cygwin* | *-*-mingw* | alpha*-dec-osf* )\n+    *-*-darwin* | *-*-hpux* | *-*-cygwin* | *-*-mingw* )\n       AC_DEFINE(GTHREAD_USE_WEAK, 0,\n \t\t[Define to 0 if the target shouldn't use #pragma weak])\n       ;;"}, {"sha": "ff524eef4eef0ed66f8725d5d8350cb163ca9623", "filename": "libgfortran/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -25196,7 +25196,7 @@ $as_echo \"#define HAVE_FEENABLEEXCEPT 1\" >>confdefs.h\n fi\n \n \n-# At least for glibc and Tru64, clock_gettime is in librt.  But don't\n+# At least for glibc, clock_gettime is in librt.  But don't\n # pull that in if it still doesn't give us the function we want.  This\n # test is copied from libgomp, and modified to not link in -lrt as\n # libgfortran calls clock_gettime via a weak reference if it's found\n@@ -25564,7 +25564,7 @@ $as_echo \"#define SUPPORTS_WEAK 1\" >>confdefs.h\n \n   fi\n   case \"$host\" in\n-    *-*-darwin* | *-*-hpux* | *-*-cygwin* | *-*-mingw* | alpha*-dec-osf* )\n+    *-*-darwin* | *-*-hpux* | *-*-cygwin* | *-*-mingw* )\n \n $as_echo \"#define GTHREAD_USE_WEAK 0\" >>confdefs.h\n "}, {"sha": "7011a937bbadd5e8a0d42ad1e57ec166a863414b", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -484,7 +484,7 @@ LIBGFOR_CHECK_FLOAT128\n # Check for GNU libc feenableexcept\n AC_CHECK_LIB([m],[feenableexcept],[have_feenableexcept=yes AC_DEFINE([HAVE_FEENABLEEXCEPT],[1],[libm includes feenableexcept])])\n \n-# At least for glibc and Tru64, clock_gettime is in librt.  But don't\n+# At least for glibc, clock_gettime is in librt.  But don't\n # pull that in if it still doesn't give us the function we want.  This\n # test is copied from libgomp, and modified to not link in -lrt as\n # libgfortran calls clock_gettime via a weak reference if it's found"}, {"sha": "b65723c9baaa5e8d51c435b3b670eaaa83f4c2c0", "filename": "libgfortran/intrinsics/c99_functions.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgfortran%2Fintrinsics%2Fc99_functions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgfortran%2Fintrinsics%2Fc99_functions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fc99_functions.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n /* Implementation of various C99 functions \n-   Copyright (C) 2004, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2009, 2010, 2012 Free Software Foundation, Inc.\n \n This file is part of the GNU Fortran 95 runtime library (libgfortran).\n \n@@ -41,19 +41,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define cabsl __gfc_cabsl\n #endif\n         \n-/* Tru64's <math.h> declares a non-C99 compliant implementation of cabs,\n-   which takes two floating point arguments instead of a single complex.\n-   To work around this we redirect cabs{,f,l} calls to __gfc_cabs{,f,l}.  */\n-\n-#ifdef __osf__\n-#undef HAVE_CABS\n-#undef HAVE_CABSF\n-#undef HAVE_CABSL\n-#define cabs __gfc_cabs\n-#define cabsf __gfc_cabsf\n-#define cabsl __gfc_cabsl\n-#endif\n-\n /* On a C99 system \"I\" (with I*I = -1) should be defined in complex.h;\n    if not, we define a fallback version here.  */\n #ifndef I"}, {"sha": "315e43482a234a852fdc83a63a6e9e35f6820a6d", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,10 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.tgt (alpha*-dec-osf*): Remove.\n+\n+\t* config/osf/sem.h: Remove.\n+\t* config/posix/lock.c (_XOPEN_SOURCE): Define unconditionally.\n+\n 2012-02-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/linux/sparc/futex.h (cpu_relax): Read from CC register."}, {"sha": "7dcb542d55c017955856b6df3730c579d5ee6d03", "filename": "libgomp/config/osf/sem.h", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgomp%2Fconfig%2Fosf%2Fsem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libgomp%2Fconfig%2Fosf%2Fsem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fosf%2Fsem.h?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,53 +0,0 @@\n-/* Copyright (C) 2011 Free Software Foundation, Inc.\n-\n-   This file is part of the GNU OpenMP Library (libgomp).\n-\n-   Libgomp is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   Libgomp is distributed in the hope that it will be useful, but WITHOUT ANY\n-   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n-   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n-   more details.\n-\n-   Under Section 7 of GPL version 3, you are granted additional\n-   permissions described in the GCC Runtime Library Exception, version\n-   3.1, as published by the Free Software Foundation.\n-\n-   You should have received a copy of the GNU General Public License and\n-   a copy of the GCC Runtime Library Exception along with this program;\n-   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* This is a variant of config/posix/sem.h for Tru64 UNIX.  The librt\n-   sem_init implementation assumes int (4-byte) alignment for sem_t, while\n-   the type only requires short (2-byte) alignment.  This mismatch causes\n-   lots of unaligned access warnings from the kernel, so enforce that\n-   alignment.  */\n-\n-#ifndef GOMP_SEM_H\n-#define GOMP_SEM_H 1\n-\n-#include <semaphore.h>\n-\n-typedef sem_t gomp_sem_t __attribute__((aligned (__alignof__ (int))));\n-\n-static inline void gomp_sem_init (gomp_sem_t *sem, int value)\n-{\n-  sem_init (sem, 0, value);\n-}\n-\n-extern void gomp_sem_wait (gomp_sem_t *sem);\n-\n-static inline void gomp_sem_post (gomp_sem_t *sem)\n-{\n-  sem_post (sem);\n-}\n-\n-static inline void gomp_sem_destroy (gomp_sem_t *sem)\n-{\n-  sem_destroy (sem);\n-}\n-#endif /* GOMP_SEM_H  */"}, {"sha": "258af015f15951e8fa206853756d409f39b31ba5", "filename": "libgomp/config/posix/lock.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgomp%2Fconfig%2Fposix%2Flock.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgomp%2Fconfig%2Fposix%2Flock.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fposix%2Flock.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2005, 2008, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2005, 2008, 2009, 2012 Free Software Foundation, Inc.\n    Contributed by Richard Henderson <rth@redhat.com>.\n \n    This file is part of the GNU OpenMP Library (libgomp).\n@@ -30,12 +30,8 @@\n    to do better and streamline the locking as well as reduce the size\n    of the types exported.  */\n \n-/* We need Unix98 extensions to get recursive locks.  On Tru64 UNIX V4.0F,\n-   the declarations are available without _XOPEN_SOURCE, which actually\n-   breaks compilation.  */\n-#ifndef __osf__\n+/* We need Unix98 extensions to get recursive locks.  */\n #define _XOPEN_SOURCE 500\n-#endif\n \n #include \"libgomp.h\"\n "}, {"sha": "6fd55a232dc32afc379d3fb7d509a8d638eb3835", "filename": "libgomp/configure.tgt", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libgomp%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libgomp%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.tgt?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -133,11 +133,6 @@ case \"${target}\" in\n \tXLDFLAGS=\"${XLDFLAGS} -lpthread\"\n \t;;\n \n-  alpha*-dec-osf*)\n-\t# Use Tru64 UNIX-specific sem.h version.\n-\tconfig_path=\"osf posix\"\n-\t;;\n-\n   mips-sgi-irix6*)\n \t# Need to link with -lpthread so libgomp.so is self-contained.\n \tXLDFLAGS=\"${XLDFLAGS} -lpthread\""}, {"sha": "5df1380f606a199b7c2e8d71d90c6177fd257c78", "filename": "libitm/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,8 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.tgt (*-*-osf*): Remove.\n+\t* configure: Regenerate.\n+\n 2012-03-05  Torvald Riegel  <triegel@redhat.com>\n \n \t* dispatch.h (CREATE_DISPATCH_METHODS_MEM): Don't execute"}, {"sha": "76d11c42dd744d575330d74d9e88e15ee76428ab", "filename": "libitm/configure", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -17332,7 +17332,6 @@ else\n   if test \"$cross_compiling\" = yes; then :\n \n case \"${host}\" in\n-  alpha*-dec-osf*) ac_cv_have_elf_style_weakref=no ;;\n   *-apple-darwin[89]*) ac_cv_have_elf_style_weakref=no ;;\n   *) ac_cv_have_elf_style_weakref=yes;;\n esac"}, {"sha": "e60e7449e6a2ddac7dde907dbe8acc701c5b64df", "filename": "libitm/configure.tgt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libitm%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libitm%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.tgt?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -130,7 +130,7 @@ case \"${target}\" in\n \n   *-*-gnu* | *-*-k*bsd*-gnu \\\n   | *-*-netbsd* | *-*-freebsd* | *-*-openbsd* \\\n-  | *-*-solaris2* | *-*-sysv4* | *-*-irix6* | *-*-osf* | *-*-hpux11* \\\n+  | *-*-solaris2* | *-*-sysv4* | *-*-irix6* | *-*-hpux11* \\\n   | *-*-darwin* | *-*-aix*)\n \t# POSIX system.  The OS is supported.\n \t;;"}, {"sha": "989d7704a3a3567249b256f285472a3275bcc9ab", "filename": "libjava/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,37 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (alpha*-dec-osf*): Remove.\n+\t* configure: Regenerate.\n+\t* configure.host (alpha*-dec-osf*): Remove.\n+\n+\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc (setOption): Use\n+\tIPV6_MULTICAST_IF unconditionally.\n+\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc (setOption):\n+\tLikewise.\n+\t* gnu/java/net/natPlainSocketImplPosix.cc\n+\t(gnu::java::net::PlainSocketImpl::accept): Use ::accept instead of\n+\t_Jv_accept.\n+\t* include/posix-signal.h [__alpha__ && __osf__]: Remove.\n+\t* include/posix.h (_POSIX_PII_SOCKET): Don't define.\n+\t(_Jv_accept): Remove.\n+\n+\t* java/io/File.java (File._access): Rename to access.\n+\tChange callers.\n+\t(File._stat): Likewise.\n+\t* java/io/File.h: Regenerate.\n+\t* classpath/lib/java/io/File.class: Regenerate.\n+\t* java/io/natFilePosix.cc (java::io::File::_access): Rename to\n+\taccess.\n+\t(java::io::File::_stat): Rename to stat.\n+\t* java/io/natFileWin32.cc: Likewise.\n+\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation):\n+\tRemove alpha*-dec-osf* handling.\n+\t* testsuite/libjava.jvmti/jvmti-interp.exp\n+\t(gcj_jni_compile_c_to_so): Likewise.\n+\t* testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_compile_cxx_to_o):\n+\tLikewise.\n+\n 2012-02-23  Patrick Marlier  <patrick.marlier@gmail.com>\n \t    Jack Howarth  <howarth@bromo.med.uc.edu>\n "}, {"sha": "3481ccff47f0628dc043330d0d4dd64c93a64c77", "filename": "libjava/classpath/lib/java/io/File.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FFile.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FFile.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fio%2FFile.class?ref=5c30094f4820c9798d60403a53fea2c8b2935de6"}, {"sha": "2d80c8067f6a70e0bff011f39028cb6613e9ad4d", "filename": "libjava/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -20744,7 +20744,7 @@ case \"$THREADS\" in\n \tTHREADLDFLAGS=-pthread\n \tTHREADSPEC=-lpthread\n \t;;\n-     alpha*-dec-osf* | hppa*-hp-hpux*)\n+     hppa*-hp-hpux*)\n \tTHREADCXXFLAGS=-pthread\n \t# boehm-gc needs some functions from librt, so link that too.\n \tTHREADLIBS='-lpthread -lrt'\n@@ -24220,7 +24220,7 @@ SYSDEP_SOURCES=\n SIGNAL_HANDLER_AUX=\n \n case \"${host}\" in\n- alpha*-dec-osf* | mips-sgi-irix* | *-*-solaris2*)\n+ mips-sgi-irix* | *-*-solaris2*)\n     SIGNAL_HANDLER=include/posix-signal.h\n     ;;\n  i?86-*-linux*)"}, {"sha": "434f92364dd9cd9a83b769788db353b280c5bc0f", "filename": "libjava/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1088,7 +1088,7 @@ case \"$THREADS\" in\n \tTHREADLDFLAGS=-pthread\n \tTHREADSPEC=-lpthread\n \t;;\n-     alpha*-dec-osf* | hppa*-hp-hpux*)\n+     hppa*-hp-hpux*)\n \tTHREADCXXFLAGS=-pthread\n \t# boehm-gc needs some functions from librt, so link that too.\n \tTHREADLIBS='-lpthread -lrt'\n@@ -1732,7 +1732,7 @@ SYSDEP_SOURCES=\n SIGNAL_HANDLER_AUX=\n \n case \"${host}\" in\n- alpha*-dec-osf* | mips-sgi-irix* | *-*-solaris2*)\n+ mips-sgi-irix* | *-*-solaris2*)\n     SIGNAL_HANDLER=include/posix-signal.h\n     ;;\n  i?86-*-linux*)"}, {"sha": "8ce7044a57403510f71fc721bf0696f164c0630f", "filename": "libjava/configure.host", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -277,9 +277,6 @@ EOF\n \t  rm -f conftest conftest.c\n \tfi\n \t;;\n-  alpha*-dec-osf*)\n-\tcan_unwind_signal=yes\n-\t;;\n   i[34567]86*-kfreebsd*-gnu | x86_64*-kfreebsd*-gnu)\n         libgcj_ld_symbolic='-Wl,-Bsymbolic'\n         slow_pthread_self="}, {"sha": "65a42f95d429f1c2c06d5c67cf9e461c0a9512fa", "filename": "libjava/gnu/java/net/natPlainDatagramSocketImplPosix.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2003, 2005, 2006  Free Software Foundation\n+/* Copyright (C) 2003, 2005, 2006, 2012 Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -660,8 +660,6 @@ gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n \t    len = sizeof (struct in_addr);\n \t    ptr = (const char *) &u.addr;\n \t  }\n-// Tru64 UNIX V5.0 has struct sockaddr_in6, but no IPV6_MULTICAST_IF\n-#if defined (HAVE_INET6) && defined (IPV6_MULTICAST_IF)\n \telse if (len == 16)\n \t  {\n \t    level = IPPROTO_IPV6;\n@@ -670,7 +668,6 @@ gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n \t    len = sizeof (struct in6_addr);\n \t    ptr = (const char *) &u.addr6;\n \t  }\n-#endif\n \telse\n \t  throw\n \t    new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));"}, {"sha": "8d83720fffe2f9b2e12d66fa2789d8d8edc591c0", "filename": "libjava/gnu/java/net/natPlainDatagramSocketImplWin32.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2003, 2006 Free Software Foundation\n+/* Copyright (C) 2003, 2006, 2012 Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -545,8 +545,6 @@ gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n       len = sizeof (struct in_addr);\n       ptr = (const char *) &u.addr;\n     }\n-// Tru64 UNIX V5.0 has struct sockaddr_in6, but no IPV6_MULTICAST_IF\n-#if defined (HAVE_INET6) && defined (IPV6_MULTICAST_IF)\n   else if (len == 16)\n     {\n       level = IPPROTO_IPV6;\n@@ -555,7 +553,6 @@ gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n       len = sizeof (struct in6_addr);\n       ptr = (const char *) &u.addr6;\n     }\n-#endif\n   else\n     throw\n       new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));"}, {"sha": "dabf6e65fc059b2a44750d8e2bd777f913be181f", "filename": "libjava/gnu/java/net/natPlainSocketImplPosix.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplPosix.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2003, 2004, 2005, 2006, 2007  Free Software Foundation\n+/* Copyright (C) 2003, 2004, 2005, 2006, 2007, 2012  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -277,7 +277,7 @@ gnu::java::net::PlainSocketImpl::accept (gnu::java::net::PlainSocketImpl *s)\n \t                                  JvNewStringUTF(\"Accept timed out\"));\n     }\n \n-  new_socket = _Jv_accept (native_fd, (sockaddr*) &u, &addrlen);\n+  new_socket = ::accept (native_fd, (sockaddr*) &u, &addrlen);\n \n   if (new_socket < 0)\n     goto error;"}, {"sha": "7be37f59b1fd57030ba2e1140842f744ed15b2e8", "filename": "libjava/include/posix-signal.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Finclude%2Fposix-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Finclude%2Fposix-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fposix-signal.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n // posix-signal.h - Catch runtime signals and turn them into exceptions.\n \n-/* Copyright (C) 1998, 1999, 2000, 2009, 2011  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2009, 2011, 2012 Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -20,8 +20,7 @@ details.  */\n    SA_SIGINFO being set or fail if so.  Cf. gcc/ada/init.c\n    (__gnat_install_handler) for details.  */\n \n-#if (defined __alpha__ && defined __osf__) \\\n-  || (defined __sun__ && defined __svr4__)\n+#if defined __sun__ && defined __svr4__\n #define SA_FLAGS SA_NODEFER | SA_SIGINFO\n #elif defined __sgi__\n #define SA_FLAGS SA_NODEFER"}, {"sha": "6bd560c5a23961ac0d533f6892c60c7c8c34ff81", "filename": "libjava/include/posix.h", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Finclude%2Fposix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Finclude%2Fposix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fposix.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n // posix.h -- Helper functions for POSIX-flavored OSs.\n \n-/* Copyright (C) 2000, 2002, 2003, 2006, 2010  Free Software Foundation\n+/* Copyright (C) 2000, 2002, 2003, 2006, 2010, 2012  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -11,11 +11,6 @@ details.  */\n #ifndef __JV_POSIX_H__\n #define __JV_POSIX_H__\n \n-/* Required on Tru64 UNIX V4/V5 so <sys/socket.h> defines prototypes of\n-   socket functions with socklen_t instead of size_t.  This must be defined\n-   early so <standards.h> defines the correct version of __PIIX.  */\n-#define _POSIX_PII_SOCKET\n-\n #include <time.h>\n #include <sys/types.h>\n \n@@ -155,15 +150,6 @@ _Jv_bind (int fd, struct sockaddr *addr, int addrlen)\n \n #undef bind\n \n-// Same problem with accept on Tru64 UNIX with _POSIX_PII_SOCKET\n-inline int\n-_Jv_accept (int fd, struct sockaddr *addr, socklen_t *addrlen)\n-{\n-  return ::accept (fd, addr, addrlen);\n-}\n-\n-#undef accept\n-\n inline int\n _Jv_listen (int fd, int backlog)\n {"}, {"sha": "f1365361bce711704a0b4cbb571f8771cf80212d", "filename": "libjava/java/io/File.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fjava%2Fio%2FFile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fjava%2Fio%2FFile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFile.h?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -25,8 +25,8 @@ class java::io::File : public ::java::lang::Object\n {\n \n   jlong attr(jint);\n-  jboolean _access(jint);\n-  jboolean _stat(jint);\n+  jboolean access(jint);\n+  jboolean stat(jint);\n   static void init_native();\n public:\n   virtual jboolean canRead();"}, {"sha": "ff008e0643dbcde6a1e85a9ad91eed0016dbedd2", "filename": "libjava/java/io/File.java", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fjava%2Fio%2FFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fjava%2Fio%2FFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFile.java?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n /* File.java -- Class representing a file on disk\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -79,11 +79,8 @@ public class File implements Serializable, Comparable<File>\n   private final static int LENGTH = 1;\n   \n   private final native long attr (int query);\n-  // On OSF1 V5.0, `stat' is a macro.  It is easiest to use the name\n-  // `_stat' instead.  We do the same thing for `_access' just in\n-  // case.\n-  private final native boolean _access (int query);\n-  private final native boolean _stat (int query);\n+  private final native boolean access (int query);\n+  private final native boolean stat (int query);\n \n   /**\n    * This is the path separator string for the current host. This field\n@@ -161,7 +158,7 @@ public class File implements Serializable, Comparable<File>\n   public boolean canRead()\n   {\n     checkRead();\n-    return _access (READ);\n+    return access (READ);\n   }\n \n   /**\n@@ -181,7 +178,7 @@ public boolean canRead()\n   public boolean canWrite()\n   {\n     checkWrite();\n-    return _access (WRITE);\n+    return access (WRITE);\n   }\n   \n   /**\n@@ -202,7 +199,7 @@ public boolean canExecute()\n     if (!exists())\n       return false;\n     checkExec();\n-    return _access (EXEC);\n+    return access (EXEC);\n   }\n \n   private native boolean performCreate() throws IOException;\n@@ -288,7 +285,7 @@ public boolean equals(Object obj)\n    */\n   private boolean internalExists()\n   {\n-    return _access (EXISTS);\n+    return access (EXISTS);\n   }\n   \n   /**\n@@ -725,7 +722,7 @@ public int hashCode()\n    */\n   private boolean internalIsDirectory()\n   {\n-    return _stat (DIRECTORY);\n+    return stat (DIRECTORY);\n   }\n   \n   /**\n@@ -757,7 +754,7 @@ public boolean isDirectory()\n   public boolean isFile()\n   {\n     checkRead();\n-    return _stat (ISFILE);\n+    return stat (ISFILE);\n   }\n \n   /**\n@@ -774,7 +771,7 @@ public boolean isFile()\n   public boolean isHidden()\n   {\n     checkRead();\n-    return _stat (ISHIDDEN);\n+    return stat (ISHIDDEN);\n   }\n \n   /**"}, {"sha": "2c255beacee6ee03aeee601996682d29f74c0f77", "filename": "libjava/java/io/natFilePosix.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fjava%2Fio%2FnatFilePosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fjava%2Fio%2FnatFilePosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFilePosix.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n // natFile.cc - Native part of File class for POSIX.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2006, 2008\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2006, 2008, 2012\n    Free Software Foundation\n \n    This file is part of libgcj.\n@@ -38,7 +38,7 @@ details.  */\n #include <java/lang/System.h>\n \n jboolean\n-java::io::File::_access (jint query)\n+java::io::File::access (jint query)\n {\n   char *buf = (char *) __builtin_alloca (JvGetStringUTFLength (path) + 1);\n   jsize total = JvGetStringUTFRegion (path, 0, path->length(), buf);\n@@ -62,7 +62,7 @@ java::io::File::_access (jint query)\n }\n \n jboolean\n-java::io::File::_stat (jint query)\n+java::io::File::stat (jint query)\n {\n   if (query == ISHIDDEN)\n     return getName()->charAt(0) == '.';"}, {"sha": "a8e88789222f0cd7cbf36405b63a542ab8fdc9db", "filename": "libjava/java/io/natFileWin32.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fjava%2Fio%2FnatFileWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Fjava%2Fio%2FnatFileWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileWin32.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n // natFileWin32.cc - Native part of File class for Win32.\n \n-/* Copyright (C) 1998, 1999, 2002, 2003  Free Software Foundation, Inc.\n+/* Copyright (C) 1998, 1999, 2002, 2003, 2012 Free Software Foundation, Inc.\n \n    This file is part of libgcj.\n \n@@ -38,7 +38,7 @@ details.  */\n #define WIN32_EPOCH_MILLIS 11644473600000LL\n \n jboolean\n-java::io::File::_access (jint query)\n+java::io::File::access (jint query)\n {\n   JV_TEMP_STRING_WIN32 (canon, getCanonicalPath());\n   if (!canon)\n@@ -63,7 +63,7 @@ java::io::File::_access (jint query)\n }\n \n jboolean\n-java::io::File::_stat (jint query)\n+java::io::File::stat (jint query)\n {\n   JV_TEMP_STRING_WIN32 (canon, getCanonicalPath());\n   if (!canon)"}, {"sha": "ebdee1b44c96c18cb7b7ec9fc5bf26d336d07346", "filename": "libjava/testsuite/libjava.jni/jni.exp", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -280,11 +280,6 @@ proc gcj_jni_get_cxxflags_invocation {} {\n     lappend cxxflags \"-shared-libgcc\"\n   }\n \n-  # Tru64 UNIX needs -liconv linked explicitly since gcc does the linking.\n-  if { [istarget \"alpha*-dec-osf*\"] } {\n-    lappend cxxflags $libiconv\n-  }\n-\n   return $cxxflags\n }\n "}, {"sha": "62c82e92afc1616fbf07034360c153bfabf8b9bf", "filename": "libjava/testsuite/libjava.jvmti/jvmti-interp.exp", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Ftestsuite%2Flibjava.jvmti%2Fjvmti-interp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Ftestsuite%2Flibjava.jvmti%2Fjvmti-interp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jvmti%2Fjvmti-interp.exp?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -37,10 +37,6 @@ proc gcj_jni_compile_c_to_so {file {options {}}} {\n   if { [istarget \"arm*\"] } {\n       lappend options \"additional_flags=-Wno-abi\"\n   }\n-  # Tru64 UNIX requires <pthread.h> to be compiled with -pthread.\n-  if { [istarget \"alpha*-dec-osf*\"] } {\n-      lappend options \"additional_flags=-pthread\"\n-  }\n \n   set filename [file tail $file]\n   set name [file rootname $filename]"}, {"sha": "571952e807cf3a470d63325be1bd79dfd964b474", "filename": "libjava/testsuite/libjava.jvmti/jvmti.exp", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Ftestsuite%2Flibjava.jvmti%2Fjvmti.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libjava%2Ftestsuite%2Flibjava.jvmti%2Fjvmti.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jvmti%2Fjvmti.exp?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -20,10 +20,6 @@ proc gcj_jvmti_compile_cxx_to_o {file {options {}}} {\n   if { [istarget \"arm*\"] } {\n       lappend options \"additional_flags=-Wno-abi\"\n   }\n-  # Tru64 UNIX requires <pthread.h> to be compiled with -pthread.\n-  if { [istarget \"alpha*-dec-osf*\"] } {\n-      lappend options \"additional_flags=-pthread\"\n-  }\n \n   set x [libjava_prune_warnings \\\n \t   [target_compile $file $oname object $options]]"}, {"sha": "704981d9c1322d4d3f2b424ab6f5315e87ffc995", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,10 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (enable_objc_gc): Remove alpha*-dec-osf* handling.\n+\t* configure: Regenerate.\n+\n+\t* thr.c (_XOPEN_SOURCE): Define unconditionally.\n+\n 2011-11-21  Andreas Tobler  <andreast@fgznet.ch>\n \n \t* configure: Regenerate."}, {"sha": "2807d7394f9d1937a80e3db850f58681184626c3", "filename": "libobjc/configure", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -2329,13 +2329,6 @@ if test \"${enable_objc_gc+set}\" = set; then :\n     OBJC_GCFLAGS='-DOBJC_WITH_GC=1'\n     OBJC_BOEHM_GC='libobjc_gc$(libsuffix).la'\n     OBJC_BOEHM_GC_INCLUDES='-I$(top_srcdir)/../boehm-gc/include -I../boehm-gc/include'\n-    case \"${host}\" in\n-      alpha*-dec-osf*)\n-        # boehm-gc headers include <pthread.h>, which needs to be compiled\n-\t# with -pthread on Tru64 UNIX.\n-        OBJC_GCFLAGS=\"${OBJC_GCFLAGS} -pthread\"\n-\t;;\n-    esac\n     ;;\n esac\n else\n@@ -10594,7 +10587,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10597 \"configure\"\n+#line 10590 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10700,7 +10693,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10703 \"configure\"\n+#line 10696 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11471,7 +11464,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then :\n   enableval=$enable_sjlj_exceptions; :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 11474 \"configure\"\n+#line 11467 \"configure\"\n @interface Frob\n @end\n @implementation Frob"}, {"sha": "42db163e0aed3eec3ba91178bbb2518047434dd5", "filename": "libobjc/configure.ac", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libobjc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libobjc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure.ac?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n # Process this file with autoconf to produce a configure script.\n #   Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004\n-#   2005, 2006, 2009, 2011 Free Software Foundation, Inc.\n+#   2005, 2006, 2009, 2011, 2012 Free Software Foundation, Inc.\n #   Originally contributed by Dave Love (d.love@dl.ac.uk).\n #\n #This file is part of GCC.\n@@ -71,13 +71,6 @@ AC_ARG_ENABLE(objc-gc,\n     OBJC_GCFLAGS='-DOBJC_WITH_GC=1'\n     OBJC_BOEHM_GC='libobjc_gc$(libsuffix).la'\n     OBJC_BOEHM_GC_INCLUDES='-I$(top_srcdir)/../boehm-gc/include -I../boehm-gc/include'\n-    case \"${host}\" in\n-      alpha*-dec-osf*)\n-        # boehm-gc headers include <pthread.h>, which needs to be compiled\n-\t# with -pthread on Tru64 UNIX.\n-        OBJC_GCFLAGS=\"${OBJC_GCFLAGS} -pthread\"\n-\t;;\n-    esac\n     ;;\n esac],\n [OBJC_GCFLAGS=''; OBJC_BOEHM_GC=''; OBJC_BOEHM_GC_INCLUDES=''])"}, {"sha": "e8a8f5e84c31e44934336718e2da450710094866", "filename": "libobjc/thr.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libobjc%2Fthr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libobjc%2Fthr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fthr.c?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n /* GNU Objective C Runtime Thread Interface\n-   Copyright (C) 1996, 1997, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2009, 2010, 2012 Free Software Foundation, Inc.\n    Contributed by Galen C. Hunt (gchunt@cs.rochester.edu)\n \n This file is part of GCC.\n@@ -27,11 +27,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define _LIBOBJC\n /* The line below is needed for declarations of functions such as\n    pthread_mutexattr_settype, without which gthr-posix.h may fail to\n-   compile within libobjc.  Unfortunately, this breaks compilation on\n-   Tru64 UNIX V4.0F, so disable it there.  */\n-#ifndef __osf__\n+   compile within libobjc.  */\n #define _XOPEN_SOURCE 500\n-#endif\n #include \"config.h\"\n #include \"tconfig.h\"\n #include \"coretypes.h\""}, {"sha": "76da6880be70a5e11879df8c6338f2f5154b4357", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 254, "deletions": 0, "changes": 254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,3 +1,257 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.host: Remove osf* handling.\n+\t* config/os/osf: Remove.\n+\t* doc/xml/manual/using.xml: Remove OSF reference.\n+\n+\t* testsuite/18_support/pthread_guard.cc: Remove alpha*-*-osf*\n+\thandling.\n+\t* testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/pthread18185.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/pthread4.cc: Likewise.\n+\t* testsuite/22_locale/locale/cons/12658_thread-1.cc: Likewise.\n+\t* testsuite/22_locale/locale/cons/12658_thread-2.cc: Likewise.\n+\t* testsuite/23_containers/list/pthread1.cc: Likewise.\n+\t* testsuite/23_containers/list/pthread5.cc: Likewise.\n+\t* testsuite/23_containers/map/pthread6.cc: Likewise.\n+\t* testsuite/23_containers/vector/debug/multithreaded_swap.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_ofstream/pthread2.cc: Likewise.\n+\t* testsuite/27_io/basic_ostringstream/pthread3.cc: Likewise.\n+\t* testsuite/30_threads/async/42819.cc: Likewise.\n+\n+\t* libstdc++-v3/testsuite/30_threads/async/49668.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/async/any.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/async/async.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/async/launch.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/async/sync.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/call_once/39909.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/call_once/49668.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/call_once/call_once1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/condition_variable/cons/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/condition_variable/members/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/condition_variable/members/2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/condition_variable/native_handle/typesizes.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/condition_variable_any/50862.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/condition_variable_any/cons/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/condition_variable_any/members/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/condition_variable_any/members/2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/future/cons/move.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/future/members/45133.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/future/members/get.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/future/members/get2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/future/members/share.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/future/members/valid.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/future/members/wait.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/future/members/wait_for.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/future/members/wait_until.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/lock/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/lock/2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/lock/3.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/lock/4.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/lock_guard/cons/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/mutex/cons/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/mutex/dest/destructor_locked.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/mutex/lock/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/mutex/native_handle/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/mutex/native_handle/typesizes.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/mutex/try_lock/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/mutex/try_lock/2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/mutex/unlock/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/49668.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/3.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/alloc.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/move.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/cons/move_assign.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/get_future.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/get_future2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke3.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke4.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke5.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/reset.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/reset2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/swap.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/packaged_task/members/valid.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/cons/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/cons/alloc.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/cons/move.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/cons/move_assign.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/members/get_future.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/members/get_future2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/members/set_exception.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/members/set_exception2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/members/set_value.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/members/set_value2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/members/set_value3.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/promise/members/swap.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/cons/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/dest/destructor_locked.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/lock/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/native_handle/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/native_handle/typesizes.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/try_lock/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/try_lock/2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_mutex/unlock/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/cons/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/dest/destructor_locked.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/lock/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/lock/2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/native_handle/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/native_handle/typesizes.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock/2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_for/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_for/2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_for/3.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_until/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_until/2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/unlock/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/shared_future/cons/move.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/shared_future/members/45133.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/shared_future/members/get.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/shared_future/members/get2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/shared_future/members/valid.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/shared_future/members/wait.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/shared_future/members/wait_for.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/shared_future/members/wait_until.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/this_thread/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/this_thread/2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/this_thread/3.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/this_thread/4.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/3.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/4.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/49668.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/5.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/6.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/7.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/8.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/9.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/cons/moveable.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/members/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/members/2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/members/3.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/members/4.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/members/5.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/members/hardware_concurrency.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/thread/swap/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/cons/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/dest/destructor_locked.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/lock/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/native_handle/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/native_handle/typesizes.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock/2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock_for/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock_for/2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock_for/3.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock_until/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/try_lock_until/2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/timed_mutex/unlock/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/try_lock/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/try_lock/2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/try_lock/3.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/try_lock/4.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/3.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/4.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/5.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/cons/6.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/locking/1.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/locking/2.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/locking/3.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/locking/4.cc: Likewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/modifiers/1.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/30_threads/unique_lock/modifiers/2.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/ext/rope/pthread7-rope.cc: Likewise.\n+\t* libstdc++-v3/testsuite/tr1/2_general_utilities/shared_ptr/thread/default_weaktoshared.cc:\n+\tLikewise.\n+\t* libstdc++-v3/testsuite/tr1/2_general_utilities/shared_ptr/thread/mutex_weaktoshared.cc: Likewise.\n+\n 2012-03-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/52562"}, {"sha": "72aa6f2ccb02d63fa35bc2d47d2f66bc4eae38b1", "filename": "libstdc++-v3/config/os/osf/ctype_base.h", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fctype_base.h?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,59 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997, 1998, 1999, 2003, 2009, 2010\n-// Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-\n-// Default information, may not be appropriate for specific host.\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n-\n-  /// @brief  Base class for ctype.\n-  struct ctype_base\n-  {\n-    // Non-standard typedefs.\n-    typedef const int* \t\t__to_type;\n-\n-    // NB: Offsets into ctype<char>::_M_table force a particular size\n-    // on the mask type. Because of this, we don't use an enum.\n-    typedef unsigned int \tmask;\n-    static const mask upper    \t= 1 << 0;\n-    static const mask lower \t= 1 << 1;\n-    static const mask alpha \t= 1 << 2;\n-    static const mask digit \t= 1 << 3;\n-    static const mask xdigit \t= 1 << 4;\n-    static const mask space \t= 1 << 5;\n-    static const mask print \t= 1 << 6;\n-    static const mask graph \t= (1 << 2) | (1 << 3) | (1 << 9); // alnum|punct\n-    static const mask cntrl \t= 1 << 8;\n-    static const mask punct \t= 1 << 9;\n-    static const mask alnum \t= (1 << 2) | (1 << 3);  // alpha|digit\n-  };\n-\n-_GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace"}, {"sha": "0daedf54356b486946e10245c56d7209ee4c7eaa", "filename": "libstdc++-v3/config/os/osf/ctype_configure_char.cc", "status": "removed", "additions": 0, "deletions": 99, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fctype_configure_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fctype_configure_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fctype_configure_char.cc?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,99 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2011 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file ctype_configure_char.cc */\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-\n-#include <locale>\n-#include <cstdlib>\n-#include <cstring>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n-\n-// Information as gleaned from /usr/include/ctype.h\n-\n-  const ctype_base::mask*\n-  ctype<char>::classic_table() throw()\n-  { return 0; }\n-\n-  ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n-\t\t     size_t __refs) \n-  : facet(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), \n-  _M_table(__table ? __table : classic_table()) \n-  { \n-    memset(_M_widen, 0, sizeof(_M_widen));\n-    _M_widen_ok = 0;\n-    memset(_M_narrow, 0, sizeof(_M_narrow));\n-    _M_narrow_ok = 0;\n-  }\n-\n-  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n-  : facet(__refs), _M_del(__table != 0 && __del), \n-  _M_toupper(NULL), _M_tolower(NULL), \n-  _M_table(__table ? __table : classic_table())\n-  { \n-    memset(_M_widen, 0, sizeof(_M_widen));\n-    _M_widen_ok = 0;\n-    memset(_M_narrow, 0, sizeof(_M_narrow));\n-    _M_narrow_ok = 0;\n-  }\n-\n-  char\n-  ctype<char>::do_toupper(char __c) const\n-  { return ::toupper((int) __c); }\n-\n-  const char*\n-  ctype<char>::do_toupper(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = ::toupper((int) *__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-  char\n-  ctype<char>::do_tolower(char __c) const\n-  { return ::tolower((int) __c); }\n-\n-  const char* \n-  ctype<char>::do_tolower(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = ::tolower((int) *__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-_GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace"}, {"sha": "ae54f2968bedd00c7f909d90b835d9d7e56114d9", "filename": "libstdc++-v3/config/os/osf/ctype_inline.h", "status": "removed", "additions": 0, "deletions": 168, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fctype_inline.h?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,168 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000, 2003, 2009, 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file bits/ctype_inline.h\n- *  This is an internal header file, included by other library headers.\n- *  Do not attempt to use it directly. @headername{locale}\n- */\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-// The following definitions are portable, but insanely slow. If one\n-// cares at all about performance, then specialized ctype\n-// functionality should be added for the native os in question: see\n-// the config/os/bits/ctype_*.h files.\n-\n-// Constructing a synthetic \"C\" table should be seriously considered...\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n-\n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const\n-  { \n-    if (_M_table)\n-      return _M_table[static_cast<unsigned char>(__c)] & __m;\n-    else\n-      {\n-\tbool __ret = false;\n-\tconst size_t __bitmasksize = 15; \n-\tsize_t __bitcur = 0; // Lowest bitmask in ctype_base == 0\n-\tfor (; __bitcur <= __bitmasksize; ++__bitcur)\n-\t  {\n-\t    const mask __bit = static_cast<mask>(1 << __bitcur);\n-\t    if (__m & __bit)\n-\t      {\n-\t\tbool __testis;\n-\t\tswitch (__bit)\n-\t\t  {\n-\t\t  case space:\n-\t\t    __testis = isspace(__c);\n-\t\t    break;\n-\t\t  case print:\n-\t\t    __testis = isprint(__c);\n-\t\t    break;\n-\t\t  case cntrl:\n-\t\t    __testis = iscntrl(__c);\n-\t\t    break;\n-\t\t  case upper:\n-\t\t    __testis = isupper(__c);\n-\t\t    break;\n-\t\t  case lower:\n-\t\t    __testis = islower(__c);\n-\t\t    break;\n-\t\t  case alpha:\n-\t\t    __testis = isalpha(__c);\n-\t\t    break;\n-\t\t  case digit:\n-\t\t    __testis = isdigit(__c);\n-\t\t    break;\n-\t\t  case punct:\n-\t\t    __testis = ispunct(__c);\n-\t\t    break;\n-\t\t  case xdigit:\n-\t\t    __testis = isxdigit(__c);\n-\t\t    break;\n-\t\t  case alnum:\n-\t\t    __testis = isalnum(__c);\n-\t\t    break;\n-\t\t  case graph:\n-\t\t    __testis = isgraph(__c);\n-\t\t    break;\n-\t\t  default:\n-\t\t    __testis = false;\n-\t\t    break;\n-\t\t  }\n-\t\t__ret |= __testis;\n-\t      }\n-\t  }\n-\treturn __ret;\n-      }\n-  }\n-   \n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const\n-  {\n-    if (_M_table)\n-      while (__low < __high)\n-\t*__vec++ = _M_table[static_cast<unsigned char>(*__low++)];\n-    else\n-      {\n-\t// Highest bitmask in ctype_base == 10.\n-\tconst size_t __bitmasksize = 15; \n-\tfor (;__low < __high; ++__vec, ++__low)\n-\t  {\n-\t    mask __m = 0;\n-\t    // Lowest bitmask in ctype_base == 0\n-\t    size_t __i = 0; \n-\t    for (;__i <= __bitmasksize; ++__i)\n-\t      {\n-\t\tconst mask __bit = static_cast<mask>(1 << __i);\n-\t\tif (this->is(__bit, *__low))\n-\t\t  __m |= __bit;\n-\t      }\n-\t    *__vec = __m;\n-\t  }\n-      }\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const\n-  {\n-    if (_M_table)\n-      while (__low < __high\n-\t     && !(_M_table[static_cast<unsigned char>(*__low)] & __m))\n-\t++__low;\n-    else\n-      while (__low < __high && !this->is(__m, *__low))\n-\t++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const\n-  {\n-    if (_M_table)\n-      while (__low < __high\n-\t     && (_M_table[static_cast<unsigned char>(*__low)] & __m) != 0)\n-\t++__low;\n-    else\n-      while (__low < __high && this->is(__m, *__low) != 0)\n-\t++__low;\n-    return __low;\n-  }\n-\n-_GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace"}, {"sha": "88ea56506c23a7f891fb8c838ca7029b02848f08", "filename": "libstdc++-v3/config/os/osf/error_constants.h", "status": "removed", "additions": 0, "deletions": 178, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Ferror_constants.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Ferror_constants.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Ferror_constants.h?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,178 +0,0 @@\n-// Specific definitions for generic platforms  -*- C++ -*-\n-\n-// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file bits/error_constants.h\n- *  This is an internal header file, included by other library headers.\n- *  Do not attempt to use it directly. @headername{system_error}\n- */\n-\n-#ifndef _GLIBCXX_ERROR_CONSTANTS\n-#define _GLIBCXX_ERROR_CONSTANTS 1\n-\n-#include <bits/c++config.h>\n-#include <cerrno>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n-\n-  enum class errc\n-    {\n-      address_family_not_supported = \t\tEAFNOSUPPORT,\n-      address_in_use = \t\t\t\tEADDRINUSE,\n-      address_not_available = \t\t\tEADDRNOTAVAIL,\n-      already_connected = \t\t\tEISCONN,\n-      argument_list_too_long = \t\t\tE2BIG,\n-      argument_out_of_domain = \t\t\tEDOM,\n-      bad_address = \t\t\t\tEFAULT,\n-      bad_file_descriptor = \t\t\tEBADF,\n-\n-#ifdef _GLIBCXX_HAVE_EBADMSG\n-      bad_message = \t\t\t\tEBADMSG,\n-#endif\n-\n-      broken_pipe = \t\t\t\tEPIPE,\n-      connection_aborted = \t\t\tECONNABORTED,\n-      connection_already_in_progress = \t\tEALREADY,\n-      connection_refused = \t\t\tECONNREFUSED,\n-      connection_reset = \t\t\tECONNRESET,\n-      cross_device_link = \t\t\tEXDEV,\n-      destination_address_required = \t\tEDESTADDRREQ,\n-      device_or_resource_busy = \t\tEBUSY,\n-      directory_not_empty = \t\t\tENOTEMPTY,\n-      executable_format_error = \t\tENOEXEC,\n-      file_exists = \t       \t\t\tEEXIST,\n-      file_too_large = \t\t\t\tEFBIG,\n-      filename_too_long = \t\t\tENAMETOOLONG,\n-      function_not_supported = \t\t\tENOSYS,\n-      host_unreachable = \t\t\tEHOSTUNREACH,\n-\n-#ifdef _GLIBCXX_HAVE_EIDRM\n-      identifier_removed = \t\t\tEIDRM,\n-#endif\n-\n-      illegal_byte_sequence = \t\t\tEILSEQ,\n-      inappropriate_io_control_operation = \tENOTTY,\n-      interrupted = \t\t\t\tEINTR,\n-      invalid_argument = \t\t\tEINVAL,\n-      invalid_seek = \t\t\t\tESPIPE,\n-      io_error = \t\t\t\tEIO,\n-      is_a_directory = \t\t\t\tEISDIR,\n-      message_size = \t\t\t\tEMSGSIZE,\n-      network_down = \t\t\t\tENETDOWN,\n-      network_reset = \t\t\t\tENETRESET,\n-      network_unreachable = \t\t\tENETUNREACH,\n-      no_buffer_space = \t\t\tENOBUFS,\n-      no_child_process = \t\t\tECHILD,\n-\n-#ifdef _GLIBCXX_HAVE_ENOLINK\n-      no_link = \t\t\t\tENOLINK,\n-#endif\n-\n-      no_lock_available = \t\t\tENOLCK,\n-\n-#ifdef _GLIBCXX_HAVE_ENODATA\n-      no_message_available = \t\t\tENODATA, \n-#endif\n-\n-      no_message = \t\t\t\tENOMSG, \n-      no_protocol_option = \t\t\tENOPROTOOPT,\n-      no_space_on_device = \t\t\tENOSPC,\n-\n-#ifdef _GLIBCXX_HAVE_ENOSR\n-      no_stream_resources = \t\t\tENOSR,\n-#endif\n-\n-      no_such_device_or_address = \t\tENXIO,\n-      no_such_device = \t\t\t\tENODEV,\n-      no_such_file_or_directory = \t\tENOENT,\n-      no_such_process = \t\t\tESRCH,\n-      not_a_directory = \t\t\tENOTDIR,\n-      not_a_socket = \t\t\t\tENOTSOCK,\n-\n-#ifdef _GLIBCXX_HAVE_ENOSTR\n-      not_a_stream = \t\t\t\tENOSTR,\n-#endif\n-\n-      not_connected = \t\t\t\tENOTCONN,\n-      not_enough_memory = \t\t\tENOMEM,\n-\n-#ifdef _GLIBCXX_HAVE_ENOTSUP\n-      not_supported = \t\t\t\tENOTSUP,\n-#endif\n-\n-#ifdef _GLIBCXX_HAVE_ECANCELED\n-      operation_canceled = \t\t\tECANCELED,\n-#endif\n-\n-      operation_in_progress = \t\t\tEINPROGRESS,\n-      operation_not_permitted = \t\tEPERM,\n-      operation_not_supported = \t\tEOPNOTSUPP,\n-      operation_would_block = \t\t\tEWOULDBLOCK,\n-\n-#ifdef _GLIBCXX_HAVE_EOWNERDEAD\n-      owner_dead = \t\t\t\tEOWNERDEAD,\n-#endif\n-\n-      permission_denied = \t\t\tEACCES,\n-\n-#ifdef _GLIBCXX_HAVE_EPROTO\n-      protocol_error = \t\t\t\tEPROTO,\n-#endif\n-\n-      protocol_not_supported = \t\t\tEPROTONOSUPPORT,\n-      read_only_file_system = \t\t\tEROFS,\n-      resource_deadlock_would_occur = \t\tEDEADLK,\n-      resource_unavailable_try_again = \t\tEAGAIN,\n-      result_out_of_range = \t\t\tERANGE,\n-\n-#ifdef _GLIBCXX_HAVE_ENOTRECOVERABLE\n-      state_not_recoverable = \t\t\tENOTRECOVERABLE,\n-#endif\n-\n-#ifdef _GLIBCXX_HAVE_ETIME\n-      stream_timeout = \t\t\t\tETIME,\n-#endif\n-\n-#ifdef _GLIBCXX_HAVE_ETXTBSY\n-      text_file_busy = \t\t\t\tETXTBSY,\n-#endif\n-\n-      timed_out = \t\t\t\tETIMEDOUT,\n-      too_many_files_open_in_system = \t\tENFILE,\n-      too_many_files_open = \t\t\tEMFILE,\n-      too_many_links = \t\t\t\tEMLINK,\n-      too_many_symbolic_link_levels = \t\tELOOP,\n-\n-#ifdef _GLIBCXX_HAVE_EOVERFLOW\n-      value_too_large = \t\t\tEOVERFLOW,\n-#endif\n-\n-      wrong_protocol_type = \t\t\tEPROTOTYPE\n-    };\n-\n-_GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace\n-\n-#endif"}, {"sha": "68c278d87bc4b85540c987a5f4b522a0871a21f8", "filename": "libstdc++-v3/config/os/osf/os_defines.h", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370d8a3d6bd6f72598eed3474d2817b1af77d961/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370d8a3d6bd6f72598eed3474d2817b1af77d961/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fos_defines.h?ref=370d8a3d6bd6f72598eed3474d2817b1af77d961", "patch": "@@ -1,41 +0,0 @@\n-// Specific definitions for Tru64 UNIX  -*- C++ -*-\n-\n-// Copyright (C) 2000, 2009, 2010, 2012 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file bits/os_defines.h\n- *  This is an internal header file, included by other library headers.\n- *  Do not attempt to use it directly. @headername{iosfwd}\n- */\n-\n-#ifndef _GLIBCXX_OS_DEFINES\n-#define _GLIBCXX_OS_DEFINES 1\n-\n-// System-specific #define, typedefs, corrections, etc, go here.  This\n-// file will come before all others.\n-\n-// Tru64 UNIX requires using pthread_mutex_init()/pthread_cond_init() to\n-// initialized non-statically allocated mutexes/condvars.\n-#define _GTHREAD_USE_MUTEX_INIT_FUNC\n-#define _GTHREAD_USE_COND_INIT_FUNC\n-\n-#endif"}, {"sha": "689f19d824a8cece918dd39d8ae2e0aa8d29b02f", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -279,13 +279,6 @@ case \"${host_os}\" in\n   netbsd*)\n     os_include_dir=\"os/bsd/netbsd\"\n     ;;\n-  osf*)\n-    os_include_dir=\"os/osf\"\n-    # libstdc++.so relies on emutls on Tru64 UNIX, which only works with the\n-    # real functions implemented in libpthread.so, not with the dummies in\n-    # libgcc, so always pass -lpthread.\n-    OPT_LDFLAGS=\"${OPT_LDFLAGS} -lpthread\"\n-    ;;\n   qnx6.[12]*)\n     os_include_dir=\"os/qnx/qnx6.1\"\n     c_model=c"}, {"sha": "89174c5a6c21aa518bbd52dd4416c6fed964e76d", "filename": "libstdc++-v3/doc/xml/manual/using.xml", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1267,9 +1267,8 @@ A quick read of the relevant part of the GCC\n       just linking) and link-library additions and/or replacements at\n       link time.  The documentation is weak.  Here is a quick summary\n       to display how ad hoc this is: On Solaris, both -pthreads and\n-      -threads (with subtly different meanings) are honored.  On OSF,\n-      -pthread and -threads (with subtly different meanings) are\n-      honored.  On GNU/Linux x86, -pthread is honored.  On FreeBSD,\n+      -threads (with subtly different meanings) are honored.  \n+      On GNU/Linux x86, -pthread is honored.  On FreeBSD,\n       -pthread is honored.  Some other ports use other switches.\n       AFAIK, none of this is properly documented anywhere other than\n       in ``gcc -dumpspecs'' (look at lib and cpp entries)."}, {"sha": "883b089248d46c6657f862d5d5be42c25c9e9a78", "filename": "libstdc++-v3/testsuite/18_support/pthread_guard.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fpthread_guard.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fpthread_guard.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fpthread_guard.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n //\n-// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -16,8 +16,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n-// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-darwin* alpha*-*-osf* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-darwin* } }\n \n #include <cstdlib>\n #include <pthread.h>"}, {"sha": "29c23cf3d732f1580776b55e6bd09d1e16289511", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2006, 2007, 2008, 2009, 2012 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -17,8 +17,8 @@\n \n // 20.6.6.2 Template class shared_ptr [util.smartptr.shared]\n \n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \"-pthread -std=gnu++0x\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \"-pthread -std=gnu++0x\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \"-pthreads -std=gnu++0x\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n "}, {"sha": "b8f14922d0681bbc498bd09143525f51eb8168a7", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2006, 2007, 2008, 2009, 2012 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -17,8 +17,8 @@\n \n // 20.6.6.2 Template class shared_ptr [util.smartptr.shared]\n \n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n "}, {"sha": "b3290a633c7c0089f06bc05adc8945be7a10cb92", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/pthread18185.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fpthread18185.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fpthread18185.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fpthread18185.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n //\n-// Copyright (C) 2004, 2005, 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2007, 2009, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -16,8 +16,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n \n #include <ext/new_allocator.h>"}, {"sha": "f1b3ea95dd9d50b4abebb34f62cccff150f8a68d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/pthread4.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fpthread4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fpthread4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fpthread4.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -2,7 +2,7 @@\n // Adapted from http://gcc.gnu.org/ml/gcc-bugs/2002-01/msg00679.html\n // which was adapted from pthread1.cc by Mike Lu <MLu@dynamicsoft.com>\n //\n-// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2012\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -20,8 +20,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n \n #include <string>"}, {"sha": "66c0b0d44bc21666d0e6a6529c6bb03b7facfe31", "filename": "libstdc++-v3/testsuite/22_locale/locale/cons/12658_thread-1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F12658_thread-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F12658_thread-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F12658_thread-1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,10 +1,10 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n // { dg-require-namedlocale \"en_US\" }\n // { dg-require-namedlocale \"fr_FR\" }\n \n-// Copyright (C) 2004, 2005, 2007, 2009, 2010 Free Software Foundation\n+// Copyright (C) 2004, 2005, 2007, 2009, 2010, 2012 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "7097675b5497223f3ef1bea90fc58cb82665243a", "filename": "libstdc++-v3/testsuite/22_locale/locale/cons/12658_thread-2.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F12658_thread-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F12658_thread-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F12658_thread-2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,10 +1,10 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n // { dg-require-namedlocale \"en_US\" }\n // { dg-require-namedlocale \"fr_FR\" }\n \n-// Copyright (C) 2004, 2005, 2007, 2009, 2010 Free Software Foundation\n+// Copyright (C) 2004, 2005, 2007, 2009, 2010, 2012 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "e0700a26b8a6579c77215f5d9c019d672b121964", "filename": "libstdc++-v3/testsuite/23_containers/list/pthread1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fpthread1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fpthread1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fpthread1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,6 +1,6 @@\n // 2002-01-23  Loren J. Rittle <rittle@labs.mot.com> <ljrittle@acm.org>\n //\n-// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2012\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -18,8 +18,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n \n // This multi-threading C++/STL/POSIX code adheres to rules outlined here:"}, {"sha": "85f5763520c01df24a64f4dc0c3399f74ae182a7", "filename": "libstdc++-v3/testsuite/23_containers/list/pthread5.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fpthread5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fpthread5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fpthread5.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -2,7 +2,7 @@\n // Adpated from libstdc++/5464 submitted by jjessel@amadeus.net\n // Jean-Francois JESSEL (Amadeus SAS Development) \n //\n-// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2012\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -20,8 +20,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n \n #include <vector>"}, {"sha": "1291ea450078b40e39fe630501f7738c721d1959", "filename": "libstdc++-v3/testsuite/23_containers/map/pthread6.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fpthread6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fpthread6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fpthread6.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,7 +1,7 @@\n // 2002-01-23  Loren J. Rittle <rittle@labs.mot.com> <ljrittle@acm.org>\n // Adpated from libstdc++/5444 submitted by markus.breuer@materna.de\n //\n-// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2012\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -19,8 +19,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n \n #include <string>"}, {"sha": "8cd7f0a6d3ea2553cd89c3a234734f899ddbf20f", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug/multithreaded_swap.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fmultithreaded_swap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fmultithreaded_swap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug%2Fmultithreaded_swap.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,11 +1,11 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }\n // { dg-require-gthreads \"\" }\n // { dg-require-debug-mode \"\" }\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2010, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "5cdb8b702f096a480dd7fb9ca67426560cb9ba4d", "filename": "libstdc++-v3/testsuite/27_io/basic_ofstream/pthread2.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ofstream%2Fpthread2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ofstream%2Fpthread2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ofstream%2Fpthread2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,7 +1,7 @@\n // 2002-01-23  Loren J. Rittle <rittle@labs.mot.com> <ljrittle@acm.org>\n // Adpated from libstdc++/5347 submitted by markus.breuer@materna.de\n //\n-// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2012\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -19,8 +19,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n \n #include <fstream>"}, {"sha": "8bd21a58c56714cc8e027d416a6912156c14281d", "filename": "libstdc++-v3/testsuite/27_io/basic_ostringstream/pthread3.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fpthread3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fpthread3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fpthread3.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,7 +1,7 @@\n // 2002-01-23  Loren J. Rittle <rittle@labs.mot.com> <ljrittle@acm.org>\n // Adpated from libstdc++/5347 submitted by markus.breuer@materna.de\n //\n-// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010, 2012\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -19,8 +19,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* } }\n-// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n \n #include <sstream>"}, {"sha": "43665c212f033b7fd419dc1f5fb3e64b3eddb3a2", "filename": "libstdc++-v3/testsuite/30_threads/async/42819.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F42819.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F42819.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F42819.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "b0a9348aa56f2da595ade2fd62c26cf4b9d58598", "filename": "libstdc++-v3/testsuite/30_threads/async/49668.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F49668.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F49668.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F49668.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "7033890b36e1d0c9b43e578b3e68b97dafe009cf", "filename": "libstdc++-v3/testsuite/30_threads/async/any.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Fany.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Fany.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Fany.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "0ce92a90dfe0ea0bd035b768a1b814d16ae79e0e", "filename": "libstdc++-v3/testsuite/30_threads/async/async.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Fasync.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Fasync.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Fasync.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "54ced9cf4407c63602096743f561f90e526dd2de", "filename": "libstdc++-v3/testsuite/30_threads/async/launch.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Flaunch.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Flaunch.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Flaunch.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "5a1ac244002c062464e020d658719cec203ba8c4", "filename": "libstdc++-v3/testsuite/30_threads/async/sync.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Fsync.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Fsync.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2Fsync.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "c5fe7fa8ca490440ce926c73e8456df0dcf17c09", "filename": "libstdc++-v3/testsuite/30_threads/call_once/39909.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2F39909.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2F39909.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2F39909.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "30337cf1e837b4ebf3e6674917a44d76d1dd77fc", "filename": "libstdc++-v3/testsuite/30_threads/call_once/49668.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2F49668.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2F49668.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2F49668.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "b5c07da7c644815c73264d191faa8a7bfd9bab04", "filename": "libstdc++-v3/testsuite/30_threads/call_once/call_once1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2Fcall_once1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2Fcall_once1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcall_once%2Fcall_once1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "a7f4bbbba2d0528834255afeaf4b03316c141e10", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "7194fb87ca1c2ad11e057910a0abc979e2be8be6", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/members/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "87db514af42a14e5087bace8c1edf97b88ee064a", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/members/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "039b480e77697b281c5652192bbdebaa54e2b4fb", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/native_handle/typesizes.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fnative_handle%2Ftypesizes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fnative_handle%2Ftypesizes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fnative_handle%2Ftypesizes.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "884787ccafadc329cf3bb3e5b1abe56cfb4bc003", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable_any/50862.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2F50862.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2F50862.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2F50862.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "7b12d8f5313d716e4464ae8b2e513ed307fc0bd3", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable_any/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "27b1e0827d76a620db6a5cab9f7701e967e592e8", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable_any/members/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fmembers%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fmembers%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fmembers%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "7a642cc8a93cad5bb4acc5a7d3802f50b4cb42fc", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable_any/members/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fmembers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fmembers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fmembers%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "da9768035f88fc5c213bcd2c1856c6456b360f1a", "filename": "libstdc++-v3/testsuite/30_threads/future/cons/move.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fcons%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fcons%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fcons%2Fmove.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "165e1d4a1ada72765a1675f0f4e7d3fe30a73c9c", "filename": "libstdc++-v3/testsuite/30_threads/future/members/45133.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2F45133.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2F45133.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2F45133.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "0649d785f452c6ece143b863b2a3640520ce8900", "filename": "libstdc++-v3/testsuite/30_threads/future/members/get.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fget.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fget.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fget.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "631f939252627f8859e6e420fdd90bff3f0f8302", "filename": "libstdc++-v3/testsuite/30_threads/future/members/get2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fget2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fget2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fget2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "215d28197041e2f6163d6a4815e0e2721762d3f5", "filename": "libstdc++-v3/testsuite/30_threads/future/members/share.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fshare.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fshare.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fshare.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "8e42918d50f05db12186ad2a77d9ad05e41c997b", "filename": "libstdc++-v3/testsuite/30_threads/future/members/valid.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fvalid.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fvalid.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fvalid.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "5e91d7fb8e2c8f29191dc121e16ad967937949da", "filename": "libstdc++-v3/testsuite/30_threads/future/members/wait.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fwait.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fwait.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fwait.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "57a426e6cbaa1c0300e4587e2674c74966ca31ea", "filename": "libstdc++-v3/testsuite/30_threads/future/members/wait_for.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fwait_for.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fwait_for.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fwait_for.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "a880bbb1c4022d4a945e7d71cc9f85acd944b60e", "filename": "libstdc++-v3/testsuite/30_threads/future/members/wait_until.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fwait_until.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fwait_until.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ffuture%2Fmembers%2Fwait_until.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "45d84b330ce94e667ad067b40f9bc42096035034", "filename": "libstdc++-v3/testsuite/30_threads/lock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "8a78889998d363464578159fed434c9e12cf0f2c", "filename": "libstdc++-v3/testsuite/30_threads/lock/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "25c453a9f9c9b6b61c45fe2cdaf693818d037db4", "filename": "libstdc++-v3/testsuite/30_threads/lock/3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F3.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "8ba18448ca779169c0e3de3d1ace41293490a2a9", "filename": "libstdc++-v3/testsuite/30_threads/lock/4.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock%2F4.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "463a7e5676fad478d72a9bc75ff7485159d10536", "filename": "libstdc++-v3/testsuite/30_threads/lock_guard/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock_guard%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock_guard%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock_guard%2Fcons%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "a7bb148c4da606b85a5e3d3a8806438b45b4a591", "filename": "libstdc++-v3/testsuite/30_threads/mutex/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "c80d8e36a6c85e907865dac79eb1debc567a2238", "filename": "libstdc++-v3/testsuite/30_threads/mutex/dest/destructor_locked.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fdest%2Fdestructor_locked.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fdest%2Fdestructor_locked.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fdest%2Fdestructor_locked.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "66157ad85c00399e7e649d847b41cf4c46c67cf6", "filename": "libstdc++-v3/testsuite/30_threads/mutex/lock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Flock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Flock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Flock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "a2fb9ab8ddf200ed6a031fac2be7528301b1c006", "filename": "libstdc++-v3/testsuite/30_threads/mutex/native_handle/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fnative_handle%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fnative_handle%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fnative_handle%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "5a4a32d19054f0d691ef784dcc280b6c1c51e8c9", "filename": "libstdc++-v3/testsuite/30_threads/mutex/native_handle/typesizes.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fnative_handle%2Ftypesizes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fnative_handle%2Ftypesizes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fnative_handle%2Ftypesizes.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "4607e881092d86909eb9dbc4a48ebb775dd3d6a3", "filename": "libstdc++-v3/testsuite/30_threads/mutex/try_lock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "a6fd3757305ea145ca703eeb303d65ab58572110", "filename": "libstdc++-v3/testsuite/30_threads/mutex/try_lock/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "57d4945b78de8dd2a4ceb4919c346ab6402d4cb4", "filename": "libstdc++-v3/testsuite/30_threads/mutex/unlock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Funlock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Funlock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Funlock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "4516e57ba80025ba8438a8449f47404471e912a6", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/49668.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2F49668.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2F49668.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2F49668.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "1c678a8e711654e62df394daaf53bfdce1e1105c", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "a3fe4e799f799c700db6a6508b13794eaaa7f21a", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "1d0b79b70043663ed3d3cae18b928b161f9024ff", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2F3.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "12ade1de3184d6cf23ad0cacb18e187e5241be56", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/alloc.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Falloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Falloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Falloc.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "9f4a7812ca334c5031c3ff394c53c8907a943958", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/move.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fmove.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "4ecd0ff699a4744ed8aa66e83afb129458b622d5", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/move_assign.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fmove_assign.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "8cd84990bf606d097bfca0d89e6b7dae300fd381", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/get_future.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fget_future.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fget_future.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fget_future.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "b1e9e4758c3d32458a4098e1deb24ce970d69c04", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/get_future2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fget_future2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fget_future2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fget_future2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "1082082dbae791a4d020abca54b07d0f4c0271de", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "6fcdd1761607ed4c3356870bd86534c9ad9d526a", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "cdc18f747d1389e2969dce7a01069b7a4fb00bf6", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke3.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "ce6e4b1377dfeffe09ba5dbf274b10828b3268e1", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke4.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke4.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "78e3cfd3946b62aba9574c88ea4f01c610eca55d", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/invoke5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Finvoke5.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "06fc9f0ba0186a77682c613a72050d8841f3614d", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/reset.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Freset.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Freset.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Freset.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "ef2608ed74c2d155b28a9648341660554a66fe10", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/reset2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Freset2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Freset2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Freset2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "1babdab5794685b21b06c133c98a9008d87c7835", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/swap.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fswap.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "c9adef5cc5963280f70e98cf0e0dbc00679c16f3", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/members/valid.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fvalid.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fvalid.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fmembers%2Fvalid.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "f2c4a43797e82fba19f380d6d46347a580cfdf57", "filename": "libstdc++-v3/testsuite/30_threads/promise/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "de5d4713d629859e2ead4cdd74b450672d381d62", "filename": "libstdc++-v3/testsuite/30_threads/promise/cons/alloc.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Falloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Falloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Falloc.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "980a0a153712faf5defc73f03e266c97981f6cf2", "filename": "libstdc++-v3/testsuite/30_threads/promise/cons/move.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fmove.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "7a2a8e26e9e1fd318d27632dc94eaeb000b5d561", "filename": "libstdc++-v3/testsuite/30_threads/promise/cons/move_assign.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fmove_assign.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "3cca2e235d3dc1c539c492834c40636078d117d6", "filename": "libstdc++-v3/testsuite/30_threads/promise/members/get_future.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fget_future.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fget_future.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fget_future.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "87691c77d526652d94b1fc4b181c4d063398638c", "filename": "libstdc++-v3/testsuite/30_threads/promise/members/get_future2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fget_future2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fget_future2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fget_future2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "a10d4fba6d1d5cdfe9bfcc792fdcdb2eab7cba7b", "filename": "libstdc++-v3/testsuite/30_threads/promise/members/set_exception.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_exception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_exception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_exception.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "dcdda73c9d90ee2c7464416ab5728de18424ee73", "filename": "libstdc++-v3/testsuite/30_threads/promise/members/set_exception2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_exception2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_exception2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_exception2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "4383e3c56ff60ac7261ca2c07c4f5ed2ae7f1fd2", "filename": "libstdc++-v3/testsuite/30_threads/promise/members/set_value.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_value.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "03c8092faaab960530c25098624f1816d003d254", "filename": "libstdc++-v3/testsuite/30_threads/promise/members/set_value2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_value2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_value2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_value2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "6ae175695d33ce447d40883ef8690a2e4c21621e", "filename": "libstdc++-v3/testsuite/30_threads/promise/members/set_value3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_value3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_value3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fset_value3.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "a4f6d0ceb1fb42fd278366e16f8f8d4a5e003c14", "filename": "libstdc++-v3/testsuite/30_threads/promise/members/swap.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fmembers%2Fswap.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "733f8faba56f76e38dec7a4b25135ff2d0a594b5", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "0bde7beeb9269e4d61d18ffa223c482efe6d3839", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/dest/destructor_locked.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fdest%2Fdestructor_locked.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fdest%2Fdestructor_locked.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fdest%2Fdestructor_locked.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "ca17b7162f6a16655e879556509790b0dcdde49b", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/lock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Flock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Flock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Flock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "eebaaf1818346899e0f593fbd289c525b0294c50", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/native_handle/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fnative_handle%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fnative_handle%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fnative_handle%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "7dd337865f8748e6cced68e4d7104a7a37fcdc03", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/native_handle/typesizes.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fnative_handle%2Ftypesizes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fnative_handle%2Ftypesizes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fnative_handle%2Ftypesizes.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "0506af284c25877944afbc95576f60b389562151", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/try_lock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Ftry_lock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Ftry_lock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Ftry_lock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "c6366886ca54c7d91c4f1dd4b7a7bb5a8b08109f", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/try_lock/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Ftry_lock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Ftry_lock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Ftry_lock%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "2aeb322c2f1edd62cc53c726be36169ce8db8bdf", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/unlock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Funlock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Funlock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Funlock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "44fc029b67471cf64088a9e659d8c5cc8261e989", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fcons%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "3998bf8daca2b83fe908cc9d575db4cccf8dbe6e", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/dest/destructor_locked.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fdest%2Fdestructor_locked.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fdest%2Fdestructor_locked.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fdest%2Fdestructor_locked.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "415ad3276a6137e44a5eaa2fefac25b26bc3cd3f", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/lock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Flock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Flock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Flock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "c563961e3012d6dbb23a14040aae2d04532bb100", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/lock/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Flock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Flock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Flock%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "2487407300e52dc0197f750e7db9345f42fef9ba", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/native_handle/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fnative_handle%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fnative_handle%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fnative_handle%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "be598d03fafe04092cbac1094949f0e63d570972", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/native_handle/typesizes.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fnative_handle%2Ftypesizes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fnative_handle%2Ftypesizes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Fnative_handle%2Ftypesizes.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "4b5cccbd738a391cde17dcc0a1274c926dd2611b", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "70ba42ac344585e7ceb4a7b21873a872076a9c62", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \"-std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \"-std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \"-std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \"-std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "8f5916d18b4b943c4fdcf78e4a87947f1c03a352", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_for/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_for%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_for%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_for%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "e70b4e08d1cf893f6747588877f2a81e28daefee", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_for/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_for%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_for%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_for%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "9b258e47a7714835ad1d77042c49a232bacb3bb9", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_for/3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_for%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_for%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_for%2F3.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "4b5cccbd738a391cde17dcc0a1274c926dd2611b", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_until/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_until%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_until%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_until%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "ca4b4a3953508d0c2c881971c3effffc8a9eb6ea", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/try_lock_until/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_until%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_until%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Ftry_lock_until%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "732f357ca7d0a593982460f4e515b8316fcd5370", "filename": "libstdc++-v3/testsuite/30_threads/recursive_timed_mutex/unlock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Funlock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Funlock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_timed_mutex%2Funlock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "5006f7ade932f54c9a30cd3b8cf57347636b710c", "filename": "libstdc++-v3/testsuite/30_threads/shared_future/cons/move.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fcons%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fcons%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fcons%2Fmove.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "6497b65f3b97d4cbee4e1a45d4abefb01270b4da", "filename": "libstdc++-v3/testsuite/30_threads/shared_future/members/45133.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2F45133.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2F45133.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2F45133.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "2b38a36801c8b58bc9680abe3a51bc76ec6d03dc", "filename": "libstdc++-v3/testsuite/30_threads/shared_future/members/get.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fget.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fget.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fget.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "7f819255081e57ecccaab7a395fa28d3ea48e2e4", "filename": "libstdc++-v3/testsuite/30_threads/shared_future/members/get2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fget2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fget2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fget2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "f5a23f5d6345a98679a291431ba3d55c7400894d", "filename": "libstdc++-v3/testsuite/30_threads/shared_future/members/valid.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fvalid.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fvalid.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fvalid.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "460a369a80fb98b73b98148c0b0ea8d90413d282", "filename": "libstdc++-v3/testsuite/30_threads/shared_future/members/wait.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fwait.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fwait.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fwait.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "8ddb0f41aa3aeba47e628c4575bf1079b524a1aa", "filename": "libstdc++-v3/testsuite/30_threads/shared_future/members/wait_for.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fwait_for.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fwait_for.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fwait_for.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "62b04c18e9916494cca53f83b08ceb473aa71957", "filename": "libstdc++-v3/testsuite/30_threads/shared_future/members/wait_until.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fwait_until.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fwait_until.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fmembers%2Fwait_until.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "06da152f695eef0fc3cbbd647878064940aa4e32", "filename": "libstdc++-v3/testsuite/30_threads/this_thread/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "e8cd665625bfe1aeef5c642402c716d4a57ede66", "filename": "libstdc++-v3/testsuite/30_threads/this_thread/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "b96bbdd5d414561fd6390922a7684d7c9babf238", "filename": "libstdc++-v3/testsuite/30_threads/this_thread/3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F3.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "e87afab4cf7baa028ebff242d80d475205f4b213", "filename": "libstdc++-v3/testsuite/30_threads/this_thread/4.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthis_thread%2F4.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "95dc6ae454ffca176d52f8f4893a14d99b64a8b9", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "8d0be65a088f9631410b6e329a730686b5f1448f", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "af3b5c9844573f673b224ce6b43780068b934ab4", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F3.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "a78c4d77c79af18aa4225cc9263f89868df3bef8", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/4.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F4.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "f6d6bf8d13ff971d7c1beb349405bd1f17d75cd6", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/49668.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F49668.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F49668.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F49668.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "c9785209b784b16eeffd335f110bf61d9f9de695", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F5.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "f9ba8caedf5bf1db7bddb60432e5e1dcf7ce27e8", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/6.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F6.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "aafb6d8435f9366b74cccd2943ccd200a7173d62", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/7.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F7.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "1a3b9f6d131d237bbdff14d452535b0b4bc0632b", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/8.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F8.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "8f8e9176debf5c686c61e27f0b58df5b84f8ead7", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/9.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2F9.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "c18c09fb40f7ab599bdeb03b28e952878fe07c8f", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/moveable.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fmoveable.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "ba1a685b9c295497d82766ea051ea8be7185996b", "filename": "libstdc++-v3/testsuite/30_threads/thread/members/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "d01cc6cbd118892cda820646690ef447700a9a7d", "filename": "libstdc++-v3/testsuite/30_threads/thread/members/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F2.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "818db13063274e4bc97762eb85d7520eff68fca9", "filename": "libstdc++-v3/testsuite/30_threads/thread/members/3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F3.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "53721dda9d22b2fc455f78729c9936a1937849da", "filename": "libstdc++-v3/testsuite/30_threads/thread/members/4.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F4.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "cddb4027414dbc58fc85f5563c71a8415946b232", "filename": "libstdc++-v3/testsuite/30_threads/thread/members/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2F5.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "94188453786c708c23c7f03ef8761eacab585052", "filename": "libstdc++-v3/testsuite/30_threads/thread/members/hardware_concurrency.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2Fhardware_concurrency.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2Fhardware_concurrency.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fmembers%2Fhardware_concurrency.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "8d37a3518b77d670da58b8a4edb84066dbb0ecf8", "filename": "libstdc++-v3/testsuite/30_threads/thread/swap/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fswap%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "f538bedc4288dbffc510ab925dd6d574de9cc347", "filename": "libstdc++-v3/testsuite/30_threads/timed_mutex/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fcons%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "e4d92a9c63d02e9ed3d5d24dd05b349e9c118128", "filename": "libstdc++-v3/testsuite/30_threads/timed_mutex/dest/destructor_locked.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fdest%2Fdestructor_locked.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fdest%2Fdestructor_locked.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fdest%2Fdestructor_locked.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "530f4744a96eb5eb3e5f03beec294d890276874c", "filename": "libstdc++-v3/testsuite/30_threads/timed_mutex/lock/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Flock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Flock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Flock%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}, {"sha": "c0f7dbc8b334b12b66383d6632df67929509e235", "filename": "libstdc++-v3/testsuite/30_threads/timed_mutex/native_handle/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fnative_handle%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c30094f4820c9798d60403a53fea2c8b2935de6/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fnative_handle%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Fnative_handle%2F1.cc?ref=5c30094f4820c9798d60403a53fea2c8b2935de6", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* mips-sgi-irix6* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* mips-sgi-irix6* powerpc-ibm-aix* } }\n // { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n // { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n // { dg-require-cstdint \"\" }"}]}