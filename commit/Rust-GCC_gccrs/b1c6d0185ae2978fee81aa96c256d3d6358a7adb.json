{"sha": "b1c6d0185ae2978fee81aa96c256d3d6358a7adb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjNmQwMTg1YWUyOTc4ZmVlODFhYTk2YzI1NmQzZDYzNThhN2FkYg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-06-24T18:35:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-06-24T18:35:52Z"}, "message": "i386.md (XFmode push splitter): Use GET_MODE_SIZE to determine size of XFmode operand.\n\n\t* config/i386/i386.md (XFmode push splitter): Use GET_MODE_SIZE to\n\tdetermine size of XFmode operand.\n\t(XFmode extended DFmode push splitter): Ditto.\n\t(XFmode extended SFmode push splitter): Ditto.\n\nFrom-SVN: r161332", "tree": {"sha": "adfbfb834dbbc5c48d2acea3d18f6c30c71d8aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adfbfb834dbbc5c48d2acea3d18f6c30c71d8aaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1c6d0185ae2978fee81aa96c256d3d6358a7adb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c6d0185ae2978fee81aa96c256d3d6358a7adb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c6d0185ae2978fee81aa96c256d3d6358a7adb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c6d0185ae2978fee81aa96c256d3d6358a7adb/comments", "author": null, "committer": null, "parents": [{"sha": "969fd17d1e9902bd79436a718d6dd9304d3b6c34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/969fd17d1e9902bd79436a718d6dd9304d3b6c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/969fd17d1e9902bd79436a718d6dd9304d3b6c34"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "740029ce6eb91179bec0f739c6f9a71796701553", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c6d0185ae2978fee81aa96c256d3d6358a7adb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c6d0185ae2978fee81aa96c256d3d6358a7adb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1c6d0185ae2978fee81aa96c256d3d6358a7adb", "patch": "@@ -1,3 +1,10 @@\n+2010-06-24  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (XFmode push splitter): Use GET_MODE_SIZE to\n+\tdetermine size of XFmode operand.\n+\t(XFmode extended DFmode push splitter): Ditto.\n+\t(XFmode extended SFmode push splitter): Ditto.\n+\n 2010-06-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/44588\n@@ -19,9 +26,9 @@\n \n 2010-06-24  Andi Kleen  <ak@linux.intel.com>\n \n-\t* c-parser.c (c_parser_conditional_expression):\n-        Call warn_for_omitted_condop.\n-        * doc/invoke.texi: Document omitted condop warning.\n+\t* c-parser.c (c_parser_conditional_expression): Call\n+\twarn_for_omitted_condop.\n+\t* doc/invoke.texi: Document omitted condop warning.\n \n 2010-06-24  Nick Clifton<nickc@redhat.com>\n \n@@ -38,7 +45,7 @@\n \n 2010-06-23  Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* config/i386/i386 (mov<mode>): Macroize expander from mov{sf,df,xf}\n+\t* config/i386/i386.md (mov<mode>): Macroize expander from mov{sf,df,xf}\n \tusing X87MODEF mode iterator.\n \t(pushsf splitter): Macroize splitter using P mode iterator.\n \t(*swap<mode>): Macroize insn from *swap{sf,df} using MODEF"}, {"sha": "93843b365dff866b8a89623535c4f9c2a3c856cb", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c6d0185ae2978fee81aa96c256d3d6358a7adb/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c6d0185ae2978fee81aa96c256d3d6358a7adb/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b1c6d0185ae2978fee81aa96c256d3d6358a7adb", "patch": "@@ -2685,7 +2685,7 @@\n   \"reload_completed\"\n   [(set (reg:P SP_REG) (plus:P (reg:P SP_REG) (match_dup 2)))\n    (set (mem:XF (reg:P SP_REG)) (match_dup 1))]\n-  \"operands[2] = GEN_INT (TARGET_128BIT_LONG_DOUBLE ? -16 : -12);\")\n+  \"operands[2] = GEN_INT (-GET_MODE_SIZE (XFmode));\")\n \n (define_split\n   [(set (match_operand:XF 0 \"push_operand\" \"\")\n@@ -4127,15 +4127,15 @@\n   \"\"\n   [(set (reg:P SP_REG) (plus:P (reg:P SP_REG) (match_dup 2)))\n    (set (mem:XF (reg:P SP_REG)) (float_extend:XF (match_dup 1)))]\n-  \"operands[2] = GEN_INT (TARGET_128BIT_LONG_DOUBLE ? -16 : -12);\")\n+  \"operands[2] = GEN_INT (-GET_MODE_SIZE (XFmode));\")\n \n (define_split\n   [(set (match_operand:XF 0 \"push_operand\" \"\")\n \t(float_extend:XF (match_operand:DF 1 \"fp_register_operand\" \"\")))]\n   \"\"\n   [(set (reg:P SP_REG) (plus:P (reg:P SP_REG) (match_dup 2)))\n    (set (mem:DF (reg:P SP_REG)) (float_extend:XF (match_dup 1)))]\n-  \"operands[2] = GEN_INT (TARGET_128BIT_LONG_DOUBLE ? -16 : -12);\")\n+  \"operands[2] = GEN_INT (-GET_MODE_SIZE (XFmode));\")\n \n (define_expand \"extendsfdf2\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")"}]}