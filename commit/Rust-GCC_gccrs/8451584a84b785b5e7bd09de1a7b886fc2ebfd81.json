{"sha": "8451584a84b785b5e7bd09de1a7b886fc2ebfd81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ1MTU4NGE4NGI3ODViNWU3YmQwOWRlMWE3Yjg4NmZjMmViZmQ4MQ==", "commit": {"author": {"name": "Erik Edelmann", "email": "erik.edelmann@iki.fi", "date": "2005-09-22T21:52:09Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-09-22T21:52:09Z"}, "message": "re PR fortran/23843 (Access restrictions on derived types in modules too strict.)\n\nfortran/\n2005-09-22  Erik Edelmann  <erik.edelmann@iki.fi>\n\n\tPR fortran/23843\n\t* resolve.c (derived_inaccessible): New function.\n\t(resolve_transfer): Use it to check for private\n\tcomponents.\ntestsuite/\n2005-09-22  Erik Edelmann  <erik.edelmann@iki.fi>\n\tTobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n\n\tPR fortran/23843\n\t* gfortran.dg/der_io_2.f90, gfortran.dg/der_io_3.f90: New test.\n\nCo-Authored-By: Tobias Schl\u00fcter <tobias.schlueter@physik.uni-muenchen.de>\n\nFrom-SVN: r104542", "tree": {"sha": "e7c9727f15518f8de8f925e32a509c78025a4d2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7c9727f15518f8de8f925e32a509c78025a4d2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8451584a84b785b5e7bd09de1a7b886fc2ebfd81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8451584a84b785b5e7bd09de1a7b886fc2ebfd81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8451584a84b785b5e7bd09de1a7b886fc2ebfd81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/comments", "author": null, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6445dc54f8c1b453e8c15900049b9e852b2b5651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6445dc54f8c1b453e8c15900049b9e852b2b5651", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6445dc54f8c1b453e8c15900049b9e852b2b5651"}], "stats": {"total": 136, "additions": 134, "deletions": 2}, "files": [{"sha": "76b52e8dbee4efeed1c65c3438b1f6882fb7b992", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8451584a84b785b5e7bd09de1a7b886fc2ebfd81", "patch": "@@ -1,3 +1,10 @@\n+2005-09-22  Erik Edelmann  <erik.edelmann@iki.fi>\n+\n+\tPR fortran/23843\n+\t* resolve.c (derived_inaccessible): New function.\n+\t(resolve_transfer): Use it to check for private\n+\tcomponents.\n+\n 2005-09-22  Steven G. Kargl  <kargls@comcast.net>\n \n \tPR fortran/23516"}, {"sha": "88e7d185280bbb4882d31c0d2707fbea596ad5f6", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=8451584a84b785b5e7bd09de1a7b886fc2ebfd81", "patch": "@@ -2518,6 +2518,29 @@ derived_pointer (gfc_symbol * sym)\n }\n \n \n+/* Given a pointer to a symbol that is a derived type, see if it's\n+   inaccessible, i.e. if it's defined in another module and the components are\n+   PRIVATE.  The search is recursive if necessary.  Returns zero if no\n+   inaccessible components are found, nonzero otherwise.  */\n+\n+static int\n+derived_inaccessible (gfc_symbol *sym)\n+{\n+  gfc_component *c;\n+\n+  if (sym->attr.use_assoc && sym->component_access == ACCESS_PRIVATE)\n+    return 1;\n+\n+  for (c = sym->components; c; c = c->next)\n+    {\n+        if (c->ts.type == BT_DERIVED && derived_inaccessible (c->ts.derived))\n+          return 1;\n+    }\n+\n+  return 0;\n+}\n+\n+\n /* Resolve the argument of a deallocate expression.  The expression must be\n    a pointer or a full array.  */\n \n@@ -3184,7 +3207,8 @@ resolve_select (gfc_code * code)\n \n /* Resolve a transfer statement. This is making sure that:\n    -- a derived type being transferred has only non-pointer components\n-   -- a derived type being transferred doesn't have private components\n+   -- a derived type being transferred doesn't have private components, unless \n+      it's being transferred from the module where the type was defined\n    -- we're not trying to transfer a whole assumed size array.  */\n \n static void\n@@ -3219,7 +3243,7 @@ resolve_transfer (gfc_code * code)\n \t  return;\n \t}\n \n-      if (ts->derived->component_access == ACCESS_PRIVATE)\n+      if (derived_inaccessible (ts->derived))\n \t{\n \t  gfc_error (\"Data transfer element at %L cannot have \"\n \t\t     \"PRIVATE components\",&code->loc);"}, {"sha": "ab82adcf84df469d3911093e6e20d2b67638fc28", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8451584a84b785b5e7bd09de1a7b886fc2ebfd81", "patch": "@@ -1,3 +1,9 @@\n+2005-09-22  Erik Edelmann  <erik.edelmann@iki.fi>\n+\tTobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/23843\n+\t* gfortran.dg/der_io_2.f90, gfortran.dg/der_io_3.f90: New test.\n+\n 2005-09-22  Steven G. Kargl  <kargls@comcast.net>\n \n \tPR fortran/23516"}, {"sha": "08afc02fd40ff9b4a39b5c2ac4f7d722e1f2b2bf", "filename": "gcc/testsuite/gfortran.dg/der_io_2.f90", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_2.f90?ref=8451584a84b785b5e7bd09de1a7b886fc2ebfd81", "patch": "@@ -0,0 +1,55 @@\n+! { dg-do compile }\n+! PR 23843\n+! IO of derived types with private components is allowed in the module itself,\n+! but not elsewhere\n+module gfortran2\n+    type :: tp1\n+        private\n+        integer :: i\n+    end type tp1\n+\n+    type :: tp1b\n+        integer :: i\n+    end type tp1b\n+\n+    type :: tp2\n+        real :: a\n+        type(tp1) :: t\n+    end type tp2\n+    \n+contains\n+    \n+    subroutine test()\n+        type(tp1) :: x\n+        type(tp2) :: y\n+\n+        write (*, *) x\n+        write (*, *) y\n+    end subroutine test\n+\n+end module gfortran2\n+\n+program prog\n+\n+    use gfortran2\n+\n+    implicit none\n+    type :: tp3\n+        type(tp2) :: t\n+    end type tp3\n+    type :: tp3b\n+        type(tp1b) :: t\n+    end type tp3b\n+\n+    type(tp1) :: x\n+    type(tp2) :: y\n+    type(tp3) :: z\n+    type(tp3b) :: zb\n+\n+    write (*, *) x   ! { dg-error \"PRIVATE components\" }\n+    write (*, *) y   ! { dg-error \"PRIVATE components\" }\n+    write (*, *) z   ! { dg-error \"PRIVATE components\" }\n+    write (*, *) zb\n+end program prog\n+\n+"}, {"sha": "5fdc72454222bf4d24dbe9cdb5a389caefa8b46f", "filename": "gcc/testsuite/gfortran.dg/der_io_3.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8451584a84b785b5e7bd09de1a7b886fc2ebfd81/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_3.f90?ref=8451584a84b785b5e7bd09de1a7b886fc2ebfd81", "patch": "@@ -0,0 +1,40 @@\n+! PR23843\n+! Make sure derived type I/O with PRIVATE components works where it's allowed\n+module m1\n+  type t1\n+     integer i\n+  end type t1\n+end module m1\n+\n+module m2\n+  use m1\n+\n+  type t2\n+     private\n+     type (t1) t\n+  end type t2\n+\n+  type t3\n+     private\n+     integer i\n+  end type t3\n+\n+contains\n+  subroutine test\n+    character*20 c\n+    type(t2) :: a\n+    type(t3) :: b\n+\n+    a % t % i = 31337\n+    b % i = 255\n+    \n+    write(c,*) a\n+    if (trim(adjustl(c)) /= \"31337\") call abort\n+    write(c,*) b\n+    if (trim(adjustl(c)) /= \"255\") call abort\n+  end subroutine test\n+end module m2\n+\n+use m2\n+call test\n+end"}]}