{"sha": "1faf92ae7981649ecfab6499ab2212a0d2d15540", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZhZjkyYWU3OTgxNjQ5ZWNmYWI2NDk5YWIyMjEyYTBkMmQxNTU0MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-10-21T10:05:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-10-21T10:05:21Z"}, "message": "re PR target/29512 (compile time hog / deadloop.)\n\n2006-10-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR target/29512\n\t* config/i386/i386.c (classify_argument): Remove redundant\n\twalking of the BINFOs.\n\t(contains_128bit_aligned_vector_p): Likewise.\n\nFrom-SVN: r117927", "tree": {"sha": "0c964e4831bfaf0f06d9cad8b2ccf66d3c0c1c4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c964e4831bfaf0f06d9cad8b2ccf66d3c0c1c4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1faf92ae7981649ecfab6499ab2212a0d2d15540", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1faf92ae7981649ecfab6499ab2212a0d2d15540", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1faf92ae7981649ecfab6499ab2212a0d2d15540", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1faf92ae7981649ecfab6499ab2212a0d2d15540/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b0c64fdcd254550b8af2e03db6718c6e42a7e62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0c64fdcd254550b8af2e03db6718c6e42a7e62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b0c64fdcd254550b8af2e03db6718c6e42a7e62"}], "stats": {"total": 50, "additions": 8, "deletions": 42}, "files": [{"sha": "9719982f39694eed6233053cb47ad3cee446a7bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1faf92ae7981649ecfab6499ab2212a0d2d15540/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1faf92ae7981649ecfab6499ab2212a0d2d15540/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1faf92ae7981649ecfab6499ab2212a0d2d15540", "patch": "@@ -1,3 +1,10 @@\n+2006-10-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR target/29512\n+\t* config/i386/i386.c (classify_argument): Remove redundant\n+\twalking of the BINFOs.\n+\t(contains_128bit_aligned_vector_p): Likewise.\n+\n 2006-10-20  Mark Mitchell  <mark@codesourcery.com>\n \n \t* BASE-VER: Set to 4.3.0."}, {"sha": "6be47cdb410243750bc937970e0aeae1e1f33241", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 42, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1faf92ae7981649ecfab6499ab2212a0d2d15540/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1faf92ae7981649ecfab6499ab2212a0d2d15540/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1faf92ae7981649ecfab6499ab2212a0d2d15540", "patch": "@@ -2951,32 +2951,6 @@ classify_argument (enum machine_mode mode, tree type,\n       switch (TREE_CODE (type))\n \t{\n \tcase RECORD_TYPE:\n-\t  /* For classes first merge in the field of the subclasses.  */\n-\t  if (TYPE_BINFO (type))\n-\t    {\n-\t      tree binfo, base_binfo;\n-\t      int basenum;\n-\n-\t      for (binfo = TYPE_BINFO (type), basenum = 0;\n-\t\t   BINFO_BASE_ITERATE (binfo, basenum, base_binfo); basenum++)\n-\t\t{\n-\t\t   int num;\n-\t\t   int offset = tree_low_cst (BINFO_OFFSET (base_binfo), 0) * 8;\n-\t\t   tree type = BINFO_TYPE (base_binfo);\n-\n-\t\t   num = classify_argument (TYPE_MODE (type),\n-\t\t\t\t\t    type, subclasses,\n-\t\t\t\t\t    (offset + bit_offset) % 256);\n-\t\t   if (!num)\n-\t\t     return 0;\n-\t\t   for (i = 0; i < num; i++)\n-\t\t     {\n-\t\t       int pos = (offset + (bit_offset % 64)) / 8 / 8;\n-\t\t       classes[i + pos] =\n-\t\t\t merge_classes (subclasses[i], classes[i + pos]);\n-\t\t     }\n-\t\t}\n-\t    }\n \t  /* And now merge the fields of structure.  */\n \t  for (field = TYPE_FIELDS (type); field; field = TREE_CHAIN (field))\n \t    {\n@@ -3044,10 +3018,6 @@ classify_argument (enum machine_mode mode, tree type,\n \tcase QUAL_UNION_TYPE:\n \t  /* Unions are similar to RECORD_TYPE but offset is always 0.\n \t     */\n-\n-\t  /* Unions are not derived.  */\n-\t  gcc_assert (!TYPE_BINFO (type)\n-\t\t      || !BINFO_N_BASE_BINFOS (TYPE_BINFO (type)));\n \t  for (field = TYPE_FIELDS (type); field; field = TREE_CHAIN (field))\n \t    {\n \t      if (TREE_CODE (field) == FIELD_DECL)\n@@ -3735,18 +3705,7 @@ contains_128bit_aligned_vector_p (tree type)\n \t  {\n \t    tree field;\n \n-\t    if (TYPE_BINFO (type))\n-\t      {\n-\t\ttree binfo, base_binfo;\n-\t\tint i;\n-\n-\t\tfor (binfo = TYPE_BINFO (type), i = 0;\n-\t\t     BINFO_BASE_ITERATE (binfo, i, base_binfo); i++)\n-\t\t  if (contains_128bit_aligned_vector_p\n-\t\t      (BINFO_TYPE (base_binfo)))\n-\t\t    return true;\n-\t      }\n-\t    /* And now merge the fields of structure.  */\n+\t    /* Walk all the structure fields.  */\n \t    for (field = TYPE_FIELDS (type); field; field = TREE_CHAIN (field))\n \t      {\n \t\tif (TREE_CODE (field) == FIELD_DECL"}]}