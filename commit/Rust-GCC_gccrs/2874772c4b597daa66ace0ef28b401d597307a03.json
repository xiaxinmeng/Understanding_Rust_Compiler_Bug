{"sha": "2874772c4b597daa66ace0ef28b401d597307a03", "node_id": "C_kwDOANBUbNoAKDI4NzQ3NzJjNGI1OTdkYWE2NmFjZTBlZjI4YjQwMWQ1OTczMDdhMDM", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2022-04-01T18:28:05Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2022-04-05T06:43:45Z"}, "message": "testsuite/s390: Adapt test expections.\n\nSome tests expect a convert instruction but nowadays\n(r12-4475-g247c407c83f001) the conversion is already done at compile\ntime.  This results in a literal-pool load.  Change the tests accordingly.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/s390/zvector/vec-double-compile.c: Expect vl\n\t  instead of vc*.\n\t* gcc.target/s390/zvector/vec-float-compile.c: Dito.\n\t* gcc.target/s390/zvector/vec-signed-compile.c: Dito.\n\t* gcc.target/s390/zvector/vec-unsigned-compile.c: Dito.", "tree": {"sha": "c55c29a0ab6ec114e9b5c0ea86a30398c3be5461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c55c29a0ab6ec114e9b5c0ea86a30398c3be5461"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2874772c4b597daa66ace0ef28b401d597307a03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2874772c4b597daa66ace0ef28b401d597307a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2874772c4b597daa66ace0ef28b401d597307a03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2874772c4b597daa66ace0ef28b401d597307a03/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "042f85346674bc4dac1d63fbae8db2fb7e8a0103", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042f85346674bc4dac1d63fbae8db2fb7e8a0103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/042f85346674bc4dac1d63fbae8db2fb7e8a0103"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "3c7805f9d7a626c430d1e1c3a5402b523e5d758d", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-double-compile.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2874772c4b597daa66ace0ef28b401d597307a03/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-double-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2874772c4b597daa66ace0ef28b401d597307a03/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-double-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-double-compile.c?ref=2874772c4b597daa66ace0ef28b401d597307a03", "patch": "@@ -31,6 +31,10 @@ vcdlgb_mem (vector unsigned long long *a)\n   return vec_double (*a);\n }\n \n+/* The following immediates are being converted and directly stored\n+   in the literal pool so no explicit conversion is necessary.   */\n+/* { dg-final { scan-assembler-times \"vl\\t%v\\[0-9\\]+,\\.L\\[0-9\\]+\\-\\.L\\[0-9\\]+\\\\(%r\\[0-9\\]+\\\\)\" 2 } } */\n+\n vector double\n vcdgb_imm ()\n {\n@@ -43,5 +47,5 @@ vcdlgb_imm ()\n   return vec_double ((vector unsigned long long){ 1, 2 });\n }\n \n-/* { dg-final { scan-assembler-times \"vcdgb\\t\" 3 } } */\n-/* { dg-final { scan-assembler-times \"vcdlgb\\t\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vcdgb\\t\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vcdlgb\\t\" 2 } } */"}, {"sha": "aeb802d1acc951f447134101262061ebca403fc3", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-float-compile.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2874772c4b597daa66ace0ef28b401d597307a03/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-float-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2874772c4b597daa66ace0ef28b401d597307a03/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-float-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-float-compile.c?ref=2874772c4b597daa66ace0ef28b401d597307a03", "patch": "@@ -31,6 +31,10 @@ vcelfb_mem (vector unsigned int *a)\n   return vec_float (*a);\n }\n \n+/* The following immediates are being converted and directly stored\n+   in the literal pool so no explicit conversion is necessary.   */\n+/* { dg-final { scan-assembler-times \"vl\\t%v\\[0-9\\]+,\\.L\\[0-9\\]+\\-\\.L\\[0-9\\]+\\\\(%r\\[0-9\\]+\\\\)\" 2 } } */\n+\n vector float\n vcefb_imm ()\n {\n@@ -43,5 +47,5 @@ vcelfb_imm ()\n   return vec_float ((vector unsigned int){ 1, 2 });\n }\n \n-/* { dg-final { scan-assembler-times \"vcefb\\t\" 3 } } */\n-/* { dg-final { scan-assembler-times \"vcelfb\\t\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vcefb\\t\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vcelfb\\t\" 2 } } */"}, {"sha": "ca6737e6c64c70ada275b6795c9fffc72c5ad11e", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-signed-compile.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2874772c4b597daa66ace0ef28b401d597307a03/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-signed-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2874772c4b597daa66ace0ef28b401d597307a03/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-signed-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-signed-compile.c?ref=2874772c4b597daa66ace0ef28b401d597307a03", "patch": "@@ -31,6 +31,10 @@ vcgdb_mem (vector double *a)\n   return vec_signed (*a);\n }\n \n+/* The following immediates are being converted and directly stored\n+   in the literal pool so no explicit conversion is necessary.   */\n+/* { dg-final { scan-assembler-times \"vl\\t%v\\[0-9\\]+,\\.L\\[0-9\\]+\\-\\.L\\[0-9\\]+\\\\(%r\\[0-9\\]+\\\\)\" 2 } } */\n+\n vector signed int\n vcfeb_imm ()\n {\n@@ -43,5 +47,5 @@ vcgdb_imm ()\n   return vec_signed ((vector double){ 1.0, 2.0 });\n }\n \n-/* { dg-final { scan-assembler-times \"vcfeb\\t\" 3 } } */\n-/* { dg-final { scan-assembler-times \"vcgdb\\t\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vcfeb\\t\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vcgdb\\t\" 2 } } */"}, {"sha": "d87108fcf8f25258a9a400b9876281bed4a8a36b", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-unsigned-compile.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2874772c4b597daa66ace0ef28b401d597307a03/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-unsigned-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2874772c4b597daa66ace0ef28b401d597307a03/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-unsigned-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-unsigned-compile.c?ref=2874772c4b597daa66ace0ef28b401d597307a03", "patch": "@@ -31,6 +31,10 @@ vclgdb_mem (vector double *a)\n   return vec_unsigned (*a);\n }\n \n+/* The following immediates are being converted and directly stored\n+   in the literal pool so no explicit conversion is necessary.   */\n+/* { dg-final { scan-assembler-times \"vl\\t%v\\[0-9\\]+,\\.L\\[0-9\\]+\\-\\.L\\[0-9\\]+\\\\(%r\\[0-9\\]+\\\\)\" 2 } } */\n+\n vector unsigned int\n vclfeb_imm ()\n {\n@@ -43,5 +47,5 @@ vclgdb_imm ()\n   return vec_unsigned ((vector double){ 1.0, 2.0 });\n }\n \n-/* { dg-final { scan-assembler-times \"vclfeb\\t\" 3 } } */\n-/* { dg-final { scan-assembler-times \"vclgdb\\t\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vclfeb\\t\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vclgdb\\t\" 2 } } */"}]}