{"sha": "10256cf5f62a636e4ceed09ff624edc3cb4fc52e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAyNTZjZjVmNjJhNjM2ZTRjZWVkMDlmZjYyNGVkYzNjYjRmYzUyZQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2003-04-30T12:54:29Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2003-04-30T12:54:29Z"}, "message": "diagnostic.h (output_formatted_scalar): Tweak.\n\n        * diagnostic.h (output_formatted_scalar): Tweak.\n        * diagnostic.c (output_long_decimal): Likewise.\n        (output_unsigned_decimal): Likewise.\n        (output_long_unsigned_decimal): Likewise.\n        (output_octal): Likewise.\n        (output_long_octal): Likewise.\n        (output_hexadecimal): Likewise.\n        (output_long_hexadecimal): Likewise.\n        (output_pointer): New function.\n        (output_format): Use it.  Recognize \"%p\" format specifier.\n\nFrom-SVN: r66287", "tree": {"sha": "a2666498880556a83ff9f0c75bb3670739099bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2666498880556a83ff9f0c75bb3670739099bdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10256cf5f62a636e4ceed09ff624edc3cb4fc52e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10256cf5f62a636e4ceed09ff624edc3cb4fc52e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10256cf5f62a636e4ceed09ff624edc3cb4fc52e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10256cf5f62a636e4ceed09ff624edc3cb4fc52e/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2a7fa89ee52438c78715ca70f236a5f348b35f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a7fa89ee52438c78715ca70f236a5f348b35f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a7fa89ee52438c78715ca70f236a5f348b35f2"}], "stats": {"total": 72, "additions": 41, "deletions": 31}, "files": [{"sha": "eb02424f853dc1abb7815c6123a3cc7c2a7f212a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10256cf5f62a636e4ceed09ff624edc3cb4fc52e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10256cf5f62a636e4ceed09ff624edc3cb4fc52e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10256cf5f62a636e4ceed09ff624edc3cb4fc52e", "patch": "@@ -1,3 +1,16 @@\n+2003-04-30  Gabriel Dos Reis <gdr@integrable-solutions.net>\n+\n+\t* diagnostic.h (output_formatted_scalar): Tweak.\n+\t* diagnostic.c (output_long_decimal): Likewise.\n+\t(output_unsigned_decimal): Likewise.\n+\t(output_long_unsigned_decimal): Likewise.\n+\t(output_octal): Likewise.\n+\t(output_long_octal): Likewise.\n+\t(output_hexadecimal): Likewise.\n+\t(output_long_hexadecimal): Likewise.\n+\t(output_pointer): New function.\n+\t(output_format): Use it.  Recognize \"%p\" format specifier.\n+\n 2003-04-30  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* function.c (purge_addressof_1): Postpone insn in fewer cases."}, {"sha": "901484a12439e123dc644239dcdf6a6944ad9938", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 26, "deletions": 29, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10256cf5f62a636e4ceed09ff624edc3cb4fc52e/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10256cf5f62a636e4ceed09ff624edc3cb4fc52e/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=10256cf5f62a636e4ceed09ff624edc3cb4fc52e", "patch": "@@ -307,62 +307,54 @@ output_decimal (buffer, i)\n   output_formatted_scalar (buffer, \"%d\", i);\n }\n \n-static void\n-output_long_decimal (buffer, i)\n-     output_buffer *buffer;\n-     long int i;\n+static inline void\n+output_long_decimal (output_buffer *buffer, long int i)\n {\n   output_formatted_scalar (buffer, \"%ld\", i);\n }\n \n-static void\n-output_unsigned_decimal (buffer, i)\n-     output_buffer *buffer;\n-     unsigned int i;\n+static inline void\n+output_unsigned_decimal (output_buffer *buffer, unsigned int i)\n {\n   output_formatted_scalar (buffer, \"%u\", i);\n }\n \n-static void\n-output_long_unsigned_decimal (buffer, i)\n-     output_buffer *buffer;\n-     long unsigned int i;\n+static inline void\n+output_long_unsigned_decimal (output_buffer *buffer, long unsigned int i)\n {\n   output_formatted_scalar (buffer, \"%lu\", i);\n }\n \n-static void\n-output_octal (buffer, i)\n-     output_buffer *buffer;\n-     unsigned int i;\n+static inline void\n+output_octal (output_buffer *buffer, unsigned int i)\n {\n   output_formatted_scalar (buffer, \"%o\", i);\n }\n \n-static void\n-output_long_octal (buffer, i)\n-     output_buffer *buffer;\n-     unsigned long int i;\n+static inline void\n+output_long_octal (output_buffer *buffer, long unsigned int i)\n {\n   output_formatted_scalar (buffer, \"%lo\", i);\n }\n \n-static void\n-output_hexadecimal (buffer, i)\n-     output_buffer *buffer;\n-     unsigned int i;\n+static inline void\n+output_hexadecimal (output_buffer *buffer, unsigned int i)\n {\n   output_formatted_scalar (buffer, \"%x\", i);\n }\n \n-static void\n-output_long_hexadecimal (buffer, i)\n-     output_buffer *buffer;\n-     unsigned long int i;\n+static inline void\n+output_long_hexadecimal (output_buffer *buffer, long unsigned int i)\n {\n   output_formatted_scalar (buffer, \"%lx\", i);\n }\n \n+static inline void\n+output_pointer (output_buffer *buffer, void *p)\n+{\n+  output_formatted_scalar (buffer, \"%p\", p);\n+}\n+\n /* Append to BUFFER a string specified by its STARTING character\n    and LENGTH.  */\n static void\n@@ -497,6 +489,7 @@ output_buffer_to_stream (buffer)\n    %ld, %li, %lo, %lu, %lx: long versions of the above.\n    %c: character.\n    %s: string.\n+   %p: pointer.\n    %%: `%'.\n    %*.s: a substring the length of which is specified by an integer.\n    %H: location_t.  */\n@@ -530,7 +523,7 @@ output_format (buffer, text)\n \t}\n \n       /* Handle %c, %d, %i, %ld, %li, %lo, %lu, %lx, %o, %s, %u,\n-         %x, %.*s; %%.  And nothing else.  Front-ends should install\n+         %x, %p, %.*s; %%.  And nothing else.  Front-ends should install\n          printers to grok language specific format specifiers.  */\n       switch (*text->format_spec)\n \t{\n@@ -558,6 +551,10 @@ output_format (buffer, text)\n \t  output_add_string (buffer, va_arg (*text->args_ptr, const char *));\n \t  break;\n \n+        case 'p':\n+          output_pointer (buffer, va_arg (*text->args_ptr, void *));\n+          break;\n+\n \tcase 'u':\n \t  if (long_integer)\n \t    output_long_unsigned_decimal"}, {"sha": "acbb6280e2d427e7bb9965a50c64e0441407b274", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10256cf5f62a636e4ceed09ff624edc3cb4fc52e/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10256cf5f62a636e4ceed09ff624edc3cb4fc52e/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=10256cf5f62a636e4ceed09ff624edc3cb4fc52e", "patch": "@@ -160,10 +160,10 @@ struct output_buffer\n /* True if BUFFER is in line-wrapping mode.  */\n #define output_is_line_wrapping(BUFFER) (output_line_cutoff (BUFFER) > 0)\n \n-#define output_formatted_scalar(BUFFER, FORMAT, INTEGER)\t\\\n+#define output_formatted_scalar(BUFFER, FORMAT, SCALAR)\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      sprintf ((BUFFER)->digit_buffer, FORMAT, INTEGER);\t\\\n+      sprintf ((BUFFER)->digit_buffer, FORMAT, SCALAR);\t\\\n       output_add_string (BUFFER, (BUFFER)->digit_buffer);\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)"}]}