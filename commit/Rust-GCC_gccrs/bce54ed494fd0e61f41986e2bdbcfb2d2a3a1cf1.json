{"sha": "bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNlNTRlZDQ5NGZkMGU2MWY0MTk4NmUyYmRiY2ZiMmQyYTNhMWNmMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-04-28T16:27:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-04-28T18:37:36Z"}, "message": "c++: Redeclaration of implicit operator== [PR94583]\n\nMy last patch rejected a namespace-scope declaration of the\nimplicitly-declared friend operator== before the class, but redeclaring it\nafter the class should be OK.\n\ngcc/cp/ChangeLog\n2020-04-28  Jason Merrill  <jason@redhat.com>\n\n\tPR c++/94583\n\t* decl.c (use_eh_spec_block): Check nothrow type after\n\tDECL_DEFAULTED_FN.\n\t* pt.c (maybe_instantiate_noexcept): Call synthesize_method for\n\tDECL_MAYBE_DELETED fns here.\n\t* decl2.c (mark_used): Not here.\n\t* method.c (get_defaulted_eh_spec): Reject DECL_MAYBE_DELETED here.", "tree": {"sha": "6f38b1eb92da669605d2d65982ae70939c525b64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f38b1eb92da669605d2d65982ae70939c525b64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eae0ac76dcb6aac1d1d6c4edd8852e0035792e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eae0ac76dcb6aac1d1d6c4edd8852e0035792e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eae0ac76dcb6aac1d1d6c4edd8852e0035792e4"}], "stats": {"total": 59, "additions": 38, "deletions": 21}, "files": [{"sha": "8728389be831cf669c9621939e0017deecd3c210", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "patch": "@@ -1,3 +1,13 @@\n+2020-04-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/94583\n+\t* decl.c (use_eh_spec_block): Check nothrow type after\n+\tDECL_DEFAULTED_FN.\n+\t* pt.c (maybe_instantiate_noexcept): Call synthesize_method for\n+\tDECL_MAYBE_DELETED fns here.\n+\t* decl2.c (mark_used): Not here.\n+\t* method.c (get_defaulted_eh_spec): Reject DECL_MAYBE_DELETED here.\n+\n 2020-04-28  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR c++/94760"}, {"sha": "e115a8a1d25484765f138b5de44c9945d53d6742", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "patch": "@@ -3169,7 +3169,7 @@ struct GTY(()) lang_decl {\n   (LANG_DECL_FN_CHECK (NODE)->has_dependent_explicit_spec_p)\n \n /* Nonzero for a defaulted FUNCTION_DECL for which we haven't decided yet if\n-   it's deleted.  */\n+   it's deleted; we will decide in synthesize_method.  */\n #define DECL_MAYBE_DELETED(NODE) \\\n   (LANG_DECL_FN_CHECK (NODE)->maybe_deleted)\n "}, {"sha": "4c0ae1cfa2ed455d224aaffa37ee4b319a14016b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "patch": "@@ -16503,7 +16503,6 @@ use_eh_spec_block (tree fn)\n {\n   return (flag_exceptions && flag_enforce_eh_specs\n \t  && !processing_template_decl\n-\t  && !type_throw_all_p (TREE_TYPE (fn))\n \t  /* We insert the EH_SPEC_BLOCK only in the original\n \t     function; then, it is copied automatically to the\n \t     clones.  */\n@@ -16516,7 +16515,8 @@ use_eh_spec_block (tree fn)\n \t     not creating the EH_SPEC_BLOCK we save a little memory,\n \t     and we avoid spurious warnings about unreachable\n \t     code.  */\n-\t  && !DECL_DEFAULTED_FN (fn));\n+\t  && !DECL_DEFAULTED_FN (fn)\n+\t  && !type_throw_all_p (TREE_TYPE (fn)));\n }\n \n /* Helper function to push ARGS into the current lexical scope.  DECL"}, {"sha": "8d3ac31a0c93f3bd3fc849827b9c5ccc41a60f34", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "patch": "@@ -5512,17 +5512,6 @@ mark_used (tree decl, tsubst_flags_t complain)\n   if (TREE_CODE (decl) == CONST_DECL)\n     used_types_insert (DECL_CONTEXT (decl));\n \n-  if (TREE_CODE (decl) == FUNCTION_DECL\n-      && DECL_MAYBE_DELETED (decl))\n-    {\n-      /* ??? Switch other defaulted functions to use DECL_MAYBE_DELETED?  */\n-      gcc_assert (special_function_p (decl) == sfk_comparison);\n-\n-      ++function_depth;\n-      synthesize_method (decl);\n-      --function_depth;\n-    }\n-\n   if (TREE_CODE (decl) == FUNCTION_DECL\n       && !maybe_instantiate_noexcept (decl, complain))\n     return false;"}, {"sha": "fb2dd47013f4f7f15e38dec8aa03b703c2460f99", "filename": "gcc/cp/method.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "patch": "@@ -2411,16 +2411,13 @@ synthesized_method_walk (tree ctype, special_function_kind sfk, bool const_p,\n tree\n get_defaulted_eh_spec (tree decl, tsubst_flags_t complain)\n {\n+  /* For DECL_MAYBE_DELETED this should already have been handled by\n+     synthesize_method.  */\n+  gcc_assert (!DECL_MAYBE_DELETED (decl));\n+\n   if (DECL_CLONED_FUNCTION_P (decl))\n     decl = DECL_CLONED_FUNCTION (decl);\n   special_function_kind sfk = special_function_p (decl);\n-  if (sfk == sfk_comparison)\n-    {\n-      /* We're in synthesize_method. Start with NULL_TREE, build_comparison_op\n-\t will adjust as needed.  */\n-      gcc_assert (decl == current_function_decl);\n-      return NULL_TREE;\n-    }\n   tree ctype = DECL_CONTEXT (decl);\n   tree parms = FUNCTION_FIRST_USER_PARMTYPE (decl);\n   tree parm_type = TREE_VALUE (parms);"}, {"sha": "ba22d9ec538835818cfa51ce8b489a973b6672eb", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "patch": "@@ -25180,6 +25180,18 @@ maybe_instantiate_noexcept (tree fn, tsubst_flags_t complain)\n       && (!flag_noexcept_type || type_dependent_expression_p (fn)))\n     return true;\n \n+  if (DECL_MAYBE_DELETED (fn))\n+    {\n+      if (fn == current_function_decl)\n+\t/* We're in start_preparsed_function, keep going.  */\n+\treturn true;\n+\n+      ++function_depth;\n+      synthesize_method (fn);\n+      --function_depth;\n+      return !DECL_MAYBE_DELETED (fn);\n+    }\n+\n   if (DECL_CLONED_FUNCTION_P (fn))\n     fn = DECL_CLONED_FUNCTION (fn);\n "}, {"sha": "86b661ca6e00db42bb1b618e8b65f4498a3aefc9", "filename": "gcc/testsuite/g++.dg/cpp2a/spaceship-synth7.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fspaceship-synth7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fspaceship-synth7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fspaceship-synth7.C?ref=bce54ed494fd0e61f41986e2bdbcfb2d2a3a1cf1", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/94583\n+// { dg-do compile { target c++2a } }\n+\n+namespace std { struct strong_ordering { }; }\n+\n+struct Q {\n+  friend std::strong_ordering operator<=>(const Q&, const Q&) = default;\n+};\n+bool operator==(const Q&, const Q&) noexcept;"}]}