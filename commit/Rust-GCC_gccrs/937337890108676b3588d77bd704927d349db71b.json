{"sha": "937337890108676b3588d77bd704927d349db71b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM3MzM3ODkwMTA4Njc2YjM1ODhkNzdiZDcwNDkyN2QzNDlkYjcxYg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2019-07-29T15:31:53Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2019-07-29T15:31:53Z"}, "message": "[arm] Make ACLE builtins use arm_* namespace for expanders\n\nThe builtins from <arm_acle.h> use fairly general expander names such as\n\"crc\", \"mcr\" etc.\nThese run the risk of being reserved by the midend in the future.\nLet's namespace them to arm_* as is convention.\n\n\t* config/arm/arm-builtins.c (acle_builtin_data): Expand VAR1 to\n\tCODE_FOR_arm_##.\n\t* config/arm/arm.md (<crc_variant>): Rename to...\n\t(arm_<crc_variant>): ... This.\n\t(<cdp>): Rename to...\n\t(arm_<cdp>): ... This.\n\t(<ldc>): Rename to...\n\t(arm_<ldc>): ... This.\n\t(<stc>): Rename to...\n\t(arm_<stc>): ... This.\n\t(<mcr>): Rename to...\n\t(arm_<mcr>): ... This.\n\t(<mrc>): Rename to...\n\t(arm_<mrc>): ... This.\n\t(<mcrr>): Rename to...\n\t(arm_<mcrr>): ... This.\n\t(<mrrc>): Rename to...\n\t(arm_<mrrc>): ... This.\n\nFrom-SVN: r273879", "tree": {"sha": "2f20f6b47231e0a3aa85bbab5f8f45f98aa22482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f20f6b47231e0a3aa85bbab5f8f45f98aa22482"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/937337890108676b3588d77bd704927d349db71b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937337890108676b3588d77bd704927d349db71b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/937337890108676b3588d77bd704927d349db71b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937337890108676b3588d77bd704927d349db71b/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50c2df93a6a450228b75901fad7e20cd2e7a8ee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50c2df93a6a450228b75901fad7e20cd2e7a8ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50c2df93a6a450228b75901fad7e20cd2e7a8ee7"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "2d981f61fd86ae21077c8952b77d9463083983ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/937337890108676b3588d77bd704927d349db71b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/937337890108676b3588d77bd704927d349db71b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=937337890108676b3588d77bd704927d349db71b", "patch": "@@ -1,3 +1,24 @@\n+2019-07-29  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm-builtins.c (acle_builtin_data): Expand VAR1 to\n+\tCODE_FOR_arm_##.\n+\t* config/arm/arm.md (<crc_variant>): Rename to...\n+\t(arm_<crc_variant>): ... This.\n+\t(<cdp>): Rename to...\n+\t(arm_<cdp>): ... This.\n+\t(<ldc>): Rename to...\n+\t(arm_<ldc>): ... This.\n+\t(<stc>): Rename to...\n+\t(arm_<stc>): ... This.\n+\t(<mcr>): Rename to...\n+\t(arm_<mcr>): ... This.\n+\t(<mrc>): Rename to...\n+\t(arm_<mrc>): ... This.\n+\t(<mcrr>): Rename to...\n+\t(arm_<mcrr>): ... This.\n+\t(<mrrc>): Rename to...\n+\t(arm_<mrrc>): ... This.\n+\n 2019-07-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91257"}, {"sha": "07da55e10a36fd50adbac9b69eb9c77c6513465f", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/937337890108676b3588d77bd704927d349db71b/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/937337890108676b3588d77bd704927d349db71b/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=937337890108676b3588d77bd704927d349db71b", "patch": "@@ -376,7 +376,7 @@ static arm_builtin_datum neon_builtin_data[] =\n #undef CF\n #undef VAR1\n #define VAR1(T, N, A) \\\n-  {#N, UP (A), CODE_FOR_##N, 0, T##_QUALIFIERS},\n+  {#N, UP (A), CODE_FOR_arm_##N, 0, T##_QUALIFIERS},\n \n static arm_builtin_datum acle_builtin_data[] =\n {"}, {"sha": "ccc48a57dda8a7b7df4fcb9802aac013e9262390", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/937337890108676b3588d77bd704927d349db71b/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/937337890108676b3588d77bd704927d349db71b/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=937337890108676b3588d77bd704927d349db71b", "patch": "@@ -12062,7 +12062,7 @@\n    (set_attr \"predicable\" \"yes\")])\n \n ;; ARMv8 CRC32 instructions.\n-(define_insn \"<crc_variant>\"\n+(define_insn \"arm_<crc_variant>\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n         (unspec:SI [(match_operand:SI 1 \"s_register_operand\" \"r\")\n                     (match_operand:<crc_mode> 2 \"s_register_operand\" \"r\")]\n@@ -12178,7 +12178,7 @@\n   DONE;\n })\n \n-(define_insn \"<cdp>\"\n+(define_insn \"arm_<cdp>\"\n   [(unspec_volatile [(match_operand:SI 0 \"immediate_operand\" \"n\")\n \t\t     (match_operand:SI 1 \"immediate_operand\" \"n\")\n \t\t     (match_operand:SI 2 \"immediate_operand\" \"n\")\n@@ -12224,19 +12224,19 @@\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"coproc\")])\n \n-(define_expand \"<ldc>\"\n+(define_expand \"arm_<ldc>\"\n   [(unspec_volatile [(match_operand:SI 0 \"immediate_operand\")\n \t\t     (match_operand:SI 1 \"immediate_operand\")\n \t\t     (mem:SI (match_operand:SI 2 \"s_register_operand\"))] LDCI)]\n   \"arm_coproc_builtin_available (VUNSPEC_<LDC>)\")\n \n-(define_expand \"<stc>\"\n+(define_expand \"arm_<stc>\"\n   [(unspec_volatile [(match_operand:SI 0 \"immediate_operand\")\n \t\t     (match_operand:SI 1 \"immediate_operand\")\n \t\t     (mem:SI (match_operand:SI 2 \"s_register_operand\"))] STCI)]\n   \"arm_coproc_builtin_available (VUNSPEC_<STC>)\")\n \n-(define_insn \"<mcr>\"\n+(define_insn \"arm_<mcr>\"\n   [(unspec_volatile [(match_operand:SI 0 \"immediate_operand\" \"n\")\n \t\t     (match_operand:SI 1 \"immediate_operand\" \"n\")\n \t\t     (match_operand:SI 2 \"s_register_operand\" \"r\")\n@@ -12256,7 +12256,7 @@\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"coproc\")])\n \n-(define_insn \"<mrc>\"\n+(define_insn \"arm_<mrc>\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(unspec_volatile:SI [(match_operand:SI 1 \"immediate_operand\" \"n\")\n \t\t\t  (match_operand:SI 2 \"immediate_operand\" \"n\")\n@@ -12275,7 +12275,7 @@\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"coproc\")])\n \n-(define_insn \"<mcrr>\"\n+(define_insn \"arm_<mcrr>\"\n   [(unspec_volatile [(match_operand:SI 0 \"immediate_operand\" \"n\")\n \t\t     (match_operand:SI 1 \"immediate_operand\" \"n\")\n \t\t     (match_operand:DI 2 \"s_register_operand\" \"r\")\n@@ -12291,7 +12291,7 @@\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"coproc\")])\n \n-(define_insn \"<mrrc>\"\n+(define_insn \"arm_<mrrc>\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=r\")\n \t(unspec_volatile:DI [(match_operand:SI 1 \"immediate_operand\" \"n\")\n \t\t\t  (match_operand:SI 2 \"immediate_operand\" \"n\")"}]}