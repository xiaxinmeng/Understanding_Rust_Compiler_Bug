{"sha": "ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY5ZTFlZmY1MWQ2ZGE3MjgwMGVlN2NhMjE3OWQwZjg4MTZkZmEzMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-06T10:08:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-06T10:08:09Z"}, "message": "Makefile.in, [...]: Remove GNAT.Sockets.Constants.\n\n2008-08-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* gcc-interface/Makefile.in,\n\tg-socthi-vxworks.adb, g-socthi-mingw.adb, g-sttsne-vxworks.adb,\n\tg-socthi.adb, g-socket.adb, g-socket.ads, g-sothco.ads,\n\tg-soccon-linux-x86.ads, g-soccon-vxworks.ads, g-soccon-mingw.ads,\n\tg-soccon-hpux-ia64.ads, g-soccon-irix.ads, g-soccon-linux-64.ads,\n\tg-soccon-aix.ads, g-soccon-solaris.ads, g-soccon-lynxos.ads,\n\tg-soccon-vms.ads, g-soccon.ads, g-soccon-freebsd.ads,\n\tg-soccon-linux-ppc.ads, g-soccon-tru64.ads, g-soccon-hpux.ads,\n\tg-soccon-solaris-64.ads, gen-oscons.c, g-soccon-darwin.ads,\n\tg-soccon-mingw-64.ads, g-soccon-linux-mips.ads, g-soccon-rtems.ads:\n\tRemove GNAT.Sockets.Constants. This internal package is replaced by\n\tSystem.OS_Constants.\n\nFrom-SVN: r138792", "tree": {"sha": "893b28af7023ca23f4a32b97ed58aa33c168083d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/893b28af7023ca23f4a32b97ed58aa33c168083d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/comments", "author": null, "committer": null, "parents": [{"sha": "e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610"}], "stats": {"total": 5397, "additions": 43, "deletions": 5354}, "files": [{"sha": "436c2fe138c5efa0232b5cc0cb70a942243d6189", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "patch": "@@ -1,3 +1,31 @@\n+2008-08-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Component_Declaration): Protect against misuse\n+\tof incomplete type.\n+\n+\t* sem_ch8.adb (Analyze_Object_Renaming): Diagnose properly a renaming\n+\tof a formal parameter of an incomplete type. Improve error message for\n+\tother improper uses of incomplete types.\n+\n+2008-08-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Clarify -gnato documentation\n+\n+2008-08-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gcc-interface/Makefile.in,\n+\tg-socthi-vxworks.adb, g-socthi-mingw.adb, g-sttsne-vxworks.adb,\n+\tg-socthi.adb, g-socket.adb, g-socket.ads, g-sothco.ads,\n+\tg-soccon-linux-x86.ads, g-soccon-vxworks.ads, g-soccon-mingw.ads,\n+\tg-soccon-hpux-ia64.ads, g-soccon-irix.ads, g-soccon-linux-64.ads,\n+\tg-soccon-aix.ads, g-soccon-solaris.ads, g-soccon-lynxos.ads,\n+\tg-soccon-vms.ads, g-soccon.ads, g-soccon-freebsd.ads,\n+\tg-soccon-linux-ppc.ads, g-soccon-tru64.ads, g-soccon-hpux.ads,\n+\tg-soccon-solaris-64.ads, gen-oscons.c, g-soccon-darwin.ads,\n+\tg-soccon-mingw-64.ads, g-soccon-linux-mips.ads, g-soccon-rtems.ads:\n+\tRemove GNAT.Sockets.Constants. This internal package is replaced by\n+\tSystem.OS_Constants.\n+\n 2008-08-06  Thomas Quinot  <quinot@adacore.com>\n \n \t* gcc-interface/Makefile.in, gcc-interface/Make-lang.in:"}, {"sha": "c0a1503f3635fbb73ff3490a39397d9984fba5ea", "filename": "gcc/ada/g-soccon-aix.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-aix.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for powerpc-ibm-aix5.3.0.0\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          24; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           1; --  Stream socket\n-   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=          67; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=          68; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=          66; --  Addr family not supported\n-   EALREADY            : constant :=          56; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=          72; --  Connection aborted\n-   ECONNREFUSED        : constant :=          79; --  Connection refused\n-   ECONNRESET          : constant :=          73; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=          58; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=          80; --  Host is down\n-   EHOSTUNREACH        : constant :=          81; --  No route to host\n-   EINPROGRESS         : constant :=          55; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=          75; --  Socket already connected\n-   ELOOP               : constant :=          85; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=          59; --  Message too long\n-   ENAMETOOLONG        : constant :=          86; --  Name too long\n-   ENETDOWN            : constant :=          69; --  Network is down\n-   ENETRESET           : constant :=          71; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=          70; --  Network is unreachable\n-   ENOBUFS             : constant :=          74; --  No buffer space available\n-   ENOPROTOOPT         : constant :=          61; --  Protocol not available\n-   ENOTCONN            : constant :=          76; --  Socket not connected\n-   ENOTSOCK            : constant :=          57; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=          64; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=          65; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=          62; --  Unknown protocol\n-   EPROTOTYPE          : constant :=          60; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=          77; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=          63; --  Socket type not supported\n-   ETIMEDOUT           : constant :=          78; --  Connection timed out\n-   ETOOMANYREFS        : constant :=         115; --  Too many references\n-   EWOULDBLOCK         : constant :=          11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=           8; --  Send end of record\n-   MSG_WAITALL         : constant :=          64; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         512; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=           9; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          11; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          13; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=          16; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=        8192; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           0; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "7e7922405eb5154ad16223d706685f4972c46f02", "filename": "gcc/ada/g-soccon-darwin.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-darwin.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for i386-apple-darwin8.8.4\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          30; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           1; --  Stream socket\n-   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=          48; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=          49; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=          47; --  Addr family not supported\n-   EALREADY            : constant :=          37; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=          53; --  Connection aborted\n-   ECONNREFUSED        : constant :=          61; --  Connection refused\n-   ECONNRESET          : constant :=          54; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=          39; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=          64; --  Host is down\n-   EHOSTUNREACH        : constant :=          65; --  No route to host\n-   EINPROGRESS         : constant :=          36; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=          56; --  Socket already connected\n-   ELOOP               : constant :=          62; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=          40; --  Message too long\n-   ENAMETOOLONG        : constant :=          63; --  Name too long\n-   ENETDOWN            : constant :=          50; --  Network is down\n-   ENETRESET           : constant :=          52; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=          51; --  Network is unreachable\n-   ENOBUFS             : constant :=          55; --  No buffer space available\n-   ENOPROTOOPT         : constant :=          42; --  Protocol not available\n-   ENOTCONN            : constant :=          57; --  Socket not connected\n-   ENOTSOCK            : constant :=          38; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=          45; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=          46; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=          43; --  Unknown protocol\n-   EPROTOTYPE          : constant :=          41; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=          58; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=          44; --  Socket type not supported\n-   ETIMEDOUT           : constant :=          60; --  Connection timed out\n-   ETOOMANYREFS        : constant :=          59; --  Too many references\n-   EWOULDBLOCK         : constant :=          35; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=           8; --  Send end of record\n-   MSG_WAITALL         : constant :=          64; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         512; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=           9; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          11; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          13; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=        1024; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=         128; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           0; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "8af0908ef979002f8b8b1aa013a11d272643fbec", "filename": "gcc/ada/g-soccon-freebsd.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-freebsd.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for i386-unknown-freebsd6.2\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          28; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           1; --  Stream socket\n-   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=          48; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=          49; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=          47; --  Addr family not supported\n-   EALREADY            : constant :=          37; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=          53; --  Connection aborted\n-   ECONNREFUSED        : constant :=          61; --  Connection refused\n-   ECONNRESET          : constant :=          54; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=          39; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=          64; --  Host is down\n-   EHOSTUNREACH        : constant :=          65; --  No route to host\n-   EINPROGRESS         : constant :=          36; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=          56; --  Socket already connected\n-   ELOOP               : constant :=          62; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=          40; --  Message too long\n-   ENAMETOOLONG        : constant :=          63; --  Name too long\n-   ENETDOWN            : constant :=          50; --  Network is down\n-   ENETRESET           : constant :=          52; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=          51; --  Network is unreachable\n-   ENOBUFS             : constant :=          55; --  No buffer space available\n-   ENOPROTOOPT         : constant :=          42; --  Protocol not available\n-   ENOTCONN            : constant :=          57; --  Socket not connected\n-   ENOTSOCK            : constant :=          38; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=          45; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=          46; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=          43; --  Unknown protocol\n-   EPROTOTYPE          : constant :=          41; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=          58; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=          44; --  Socket type not supported\n-   ETIMEDOUT           : constant :=          60; --  Connection timed out\n-   ETOOMANYREFS        : constant :=          59; --  Too many references\n-   EWOULDBLOCK         : constant :=          35; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=           8; --  Send end of record\n-   MSG_WAITALL         : constant :=          64; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=      131072; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         512; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=           9; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          11; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          13; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=        1024; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=         128; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           0; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           1; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "4c364bd95323244fafebddbbe271e0b3382abfec", "filename": "gcc/ada/g-soccon-hpux-ia64.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-hpux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-hpux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-hpux-ia64.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for ia64-hp-hpux11.23\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          22; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           1; --  Stream socket\n-   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=         226; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=         227; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=         225; --  Addr family not supported\n-   EALREADY            : constant :=         244; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=         231; --  Connection aborted\n-   ECONNREFUSED        : constant :=         239; --  Connection refused\n-   ECONNRESET          : constant :=         232; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=         217; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=         241; --  Host is down\n-   EHOSTUNREACH        : constant :=         242; --  No route to host\n-   EINPROGRESS         : constant :=         245; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=         234; --  Socket already connected\n-   ELOOP               : constant :=         249; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=         218; --  Message too long\n-   ENAMETOOLONG        : constant :=         248; --  Name too long\n-   ENETDOWN            : constant :=         228; --  Network is down\n-   ENETRESET           : constant :=         230; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=         229; --  Network is unreachable\n-   ENOBUFS             : constant :=         233; --  No buffer space available\n-   ENOPROTOOPT         : constant :=         220; --  Protocol not available\n-   ENOTCONN            : constant :=         235; --  Socket not connected\n-   ENOTSOCK            : constant :=         216; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=         223; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=         224; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=         221; --  Unknown protocol\n-   EPROTOTYPE          : constant :=         219; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=         236; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=         222; --  Socket type not supported\n-   ETIMEDOUT           : constant :=         238; --  Connection timed out\n-   ETOOMANYREFS        : constant :=         237; --  Too many references\n-   EWOULDBLOCK         : constant :=         246; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=           8; --  Send end of record\n-   MSG_WAITALL         : constant :=          64; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         512; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=           2; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=           3; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=           4; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=           5; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=           6; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=          16; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           8; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           8; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=         256; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           0; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "c49075def5a238f2fdb77eb4d4471c743c01c2ff", "filename": "gcc/ada/g-soccon-hpux.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-hpux.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for hppa1.1-hp-hpux11.00\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          -1; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           1; --  Stream socket\n-   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=         226; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=         227; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=         225; --  Addr family not supported\n-   EALREADY            : constant :=         244; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=         231; --  Connection aborted\n-   ECONNREFUSED        : constant :=         239; --  Connection refused\n-   ECONNRESET          : constant :=         232; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=         217; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=         241; --  Host is down\n-   EHOSTUNREACH        : constant :=         242; --  No route to host\n-   EINPROGRESS         : constant :=         245; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=         234; --  Socket already connected\n-   ELOOP               : constant :=         249; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=         218; --  Message too long\n-   ENAMETOOLONG        : constant :=         248; --  Name too long\n-   ENETDOWN            : constant :=         228; --  Network is down\n-   ENETRESET           : constant :=         230; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=         229; --  Network is unreachable\n-   ENOBUFS             : constant :=         233; --  No buffer space available\n-   ENOPROTOOPT         : constant :=         220; --  Protocol not available\n-   ENOTCONN            : constant :=         235; --  Socket not connected\n-   ENOTSOCK            : constant :=         216; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=         223; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=         224; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=         221; --  Unknown protocol\n-   EPROTOTYPE          : constant :=         219; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=         236; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=         222; --  Socket type not supported\n-   ETIMEDOUT           : constant :=         238; --  Connection timed out\n-   ETOOMANYREFS        : constant :=         237; --  Too many references\n-   EWOULDBLOCK         : constant :=         246; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=           8; --  Send end of record\n-   MSG_WAITALL         : constant :=          64; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         512; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=           2; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=           3; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=           4; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=           5; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=           6; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=          16; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=           0; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=         256; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           0; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "3952a599efe4de7bb4b6c574590eef95c7564b7d", "filename": "gcc/ada/g-soccon-irix.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-irix.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for mips-sgi-irix6.5\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          24; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           2; --  Stream socket\n-   SOCK_DGRAM          : constant :=           1; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=         125; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=         126; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=         124; --  Addr family not supported\n-   EALREADY            : constant :=         149; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=         130; --  Connection aborted\n-   ECONNREFUSED        : constant :=         146; --  Connection refused\n-   ECONNRESET          : constant :=         131; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=          96; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=         147; --  Host is down\n-   EHOSTUNREACH        : constant :=         148; --  No route to host\n-   EINPROGRESS         : constant :=         150; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=         133; --  Socket already connected\n-   ELOOP               : constant :=          90; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=          97; --  Message too long\n-   ENAMETOOLONG        : constant :=          78; --  Name too long\n-   ENETDOWN            : constant :=         127; --  Network is down\n-   ENETRESET           : constant :=         129; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=         128; --  Network is unreachable\n-   ENOBUFS             : constant :=         132; --  No buffer space available\n-   ENOPROTOOPT         : constant :=          99; --  Protocol not available\n-   ENOTCONN            : constant :=         134; --  Socket not connected\n-   ENOTSOCK            : constant :=          95; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=         122; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=         123; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=         120; --  Unknown protocol\n-   EPROTOTYPE          : constant :=          98; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=         143; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=         121; --  Socket type not supported\n-   ETIMEDOUT           : constant :=         145; --  Connection timed out\n-   ETOOMANYREFS        : constant :=         144; --  Too many references\n-   EWOULDBLOCK         : constant :=          11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=           8; --  Send end of record\n-   MSG_WAITALL         : constant :=          64; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         512; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=          20; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          21; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          22; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          23; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          24; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=  2147483647; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          32; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=         128; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           1; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "3d82b326ecf56fb7176db2bcddd58e2641900fe6", "filename": "gcc/ada/g-soccon-linux-64.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-linux-64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-linux-64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-64.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for x86_64-pc-linux-gnu\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=          2; --  IPv4 address family\n-   AF_INET6            : constant :=         10; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=          1; --  Stream socket\n-   SOCK_DGRAM          : constant :=          2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=         13; --  Permission denied\n-   EADDRINUSE          : constant :=         98; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=         99; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=         97; --  Addr family not supported\n-   EALREADY            : constant :=        114; --  Operation in progress\n-   EBADF               : constant :=          9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=        103; --  Connection aborted\n-   ECONNREFUSED        : constant :=        111; --  Connection refused\n-   ECONNRESET          : constant :=        104; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=         89; --  Destination addr required\n-   EFAULT              : constant :=         14; --  Bad address\n-   EHOSTDOWN           : constant :=        112; --  Host is down\n-   EHOSTUNREACH        : constant :=        113; --  No route to host\n-   EINPROGRESS         : constant :=        115; --  Operation now in progress\n-   EINTR               : constant :=          4; --  Interrupted system call\n-   EINVAL              : constant :=         22; --  Invalid argument\n-   EIO                 : constant :=          5; --  Input output error\n-   EISCONN             : constant :=        106; --  Socket already connected\n-   ELOOP               : constant :=         40; --  Too many symbolic links\n-   EMFILE              : constant :=         24; --  Too many open files\n-   EMSGSIZE            : constant :=         90; --  Message too long\n-   ENAMETOOLONG        : constant :=         36; --  Name too long\n-   ENETDOWN            : constant :=        100; --  Network is down\n-   ENETRESET           : constant :=        102; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=        101; --  Network is unreachable\n-   ENOBUFS             : constant :=        105; --  No buffer space available\n-   ENOPROTOOPT         : constant :=         92; --  Protocol not available\n-   ENOTCONN            : constant :=        107; --  Socket not connected\n-   ENOTSOCK            : constant :=         88; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=         95; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=         96; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=         93; --  Unknown protocol\n-   EPROTOTYPE          : constant :=         91; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=        108; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=         94; --  Socket type not supported\n-   ETIMEDOUT           : constant :=        110; --  Connection timed out\n-   ETOOMANYREFS        : constant :=        109; --  Too many references\n-   EWOULDBLOCK         : constant :=         11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=          1; --  Unknown host\n-   TRY_AGAIN           : constant :=          2; --  Host name lookup failure\n-   NO_DATA             : constant :=          4; --  No data record for name\n-   NO_RECOVERY         : constant :=          3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant :=      21537; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=      21531; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=          0; --  No more recv\n-   SHUT_WR             : constant :=          1; --  No more send\n-   SHUT_RDWR           : constant :=          2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=          1; --  Options for socket level\n-   IPPROTO_IP          : constant :=          0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=         17; --  UDP\n-   IPPROTO_TCP         : constant :=          6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=          1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=          2; --  Peek at incoming data\n-   MSG_EOR             : constant :=        128; --  Send end of record\n-   MSG_WAITALL         : constant :=        256; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=      16384; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant := MSG_NOSIGNAL;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=          1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=          2; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         -1; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=          9; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         13; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          6; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=          7; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=          8; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=         21; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=         20; --  Reception timeout\n-   SO_ERROR            : constant :=          4; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=         32; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=         33; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=         34; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=         35; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=         36; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          8; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant := 2147483647; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=          8; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=          8; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=         16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=         28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=        128; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=          1; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=          0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "0f8822e2a07736c88fa90dd9e8a6c2e865860456", "filename": "gcc/ada/g-soccon-linux-mips.ads", "status": "removed", "additions": 0, "deletions": 197, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-linux-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-linux-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-mips.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,197 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for mips-linux, manually edited for the first shot\n---  no mips hardware at hand\n---  using http://www.gelato.unsw.edu.au/lxr/source/include/asm-mips/socket.h\n---  in order to find different values.\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=           10; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM        : constant :=            1; --  Stream socket\n-   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES             : constant :=           13; --  Permission denied\n-   EADDRINUSE         : constant :=           98; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=           99; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=           97; --  Addr family not supported\n-   EALREADY           : constant :=          114; --  Operation in progress\n-   EBADF              : constant :=            9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=          103; --  Connection aborted\n-   ECONNREFUSED       : constant :=          111; --  Connection refused\n-   ECONNRESET         : constant :=          104; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=           89; --  Destination addr required\n-   EFAULT             : constant :=           14; --  Bad address\n-   EHOSTDOWN          : constant :=          112; --  Host is down\n-   EHOSTUNREACH       : constant :=          113; --  No route to host\n-   EINPROGRESS        : constant :=          115; --  Operation now in progress\n-   EINTR              : constant :=            4; --  Interrupted system call\n-   EINVAL             : constant :=           22; --  Invalid argument\n-   EIO                : constant :=            5; --  Input output error\n-   EISCONN            : constant :=          106; --  Socket already connected\n-   ELOOP              : constant :=           40; --  Too many symbolic links\n-   EMFILE             : constant :=           24; --  Too many open files\n-   EMSGSIZE           : constant :=           90; --  Message too long\n-   ENAMETOOLONG       : constant :=           36; --  Name too long\n-   ENETDOWN           : constant :=          100; --  Network is down\n-   ENETRESET          : constant :=          102; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=          101; --  Network is unreachable\n-   ENOBUFS            : constant :=          105; --  No buffer space available\n-   ENOPROTOOPT        : constant :=           92; --  Protocol not available\n-   ENOTCONN           : constant :=          107; --  Socket not connected\n-   ENOTSOCK           : constant :=           88; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=           95; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=           96; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=           93; --  Unknown protocol\n-   EPROTOTYPE         : constant :=           91; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=          108; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=           94; --  Socket type not supported\n-   ETIMEDOUT          : constant :=          110; --  Connection timed out\n-   ETOOMANYREFS       : constant :=          109; --  Too many references\n-   EWOULDBLOCK        : constant :=           11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n-   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n-   NO_DATA            : constant :=            4; --  No data record for name\n-   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO            : constant :=     16#667e#; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=     16#467f#; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET         : constant :=            1; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=          128; --  Send end of record\n-   MSG_WAITALL        : constant :=          256; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=        16384; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant := MSG_NOSIGNAL;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=       16#80#; --  Defer close to flush data\n-   SO_BROADCAST       : constant :=       16#20#; --  Can send broadcast msgs\n-   SO_SNDBUF          : constant :=     16#1001#; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=     16#1002#; --  Set/get recv buffer size\n-   SO_SNDTIMEO        : constant :=     16#1005#; --  Emission timeout\n-   SO_RCVTIMEO        : constant :=     16#1006#; --  Reception timeout\n-   SO_ERROR           : constant :=     16#1007#; --  Get/clear error status\n-   IP_MULTICAST_IF    : constant :=           32; --  Set/get mcast interface\n-   IP_MULTICAST_TTL   : constant :=           33; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=           34; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP  : constant :=           35; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=           36; --  Leave a multicast group\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX            : constant :=   2147483647; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec      : constant :=            4; --  tv_sec\n-   SIZEOF_tv_usec     : constant :=            4; --  tv_usec\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer  : constant :=            1; --  Need buffer for Netdb ops\n-\n-   ----------------------\n-   -- Additional flags --\n-   ----------------------\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "7a8c2e260b3f4cc81bdc735115da9e4fbb74f736", "filename": "gcc/ada/g-soccon-linux-ppc.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-linux-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-linux-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-ppc.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for ppc-unknown-linux-gnu\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          10; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           1; --  Stream socket\n-   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=          98; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=          99; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=          97; --  Addr family not supported\n-   EALREADY            : constant :=         114; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=         103; --  Connection aborted\n-   ECONNREFUSED        : constant :=         111; --  Connection refused\n-   ECONNRESET          : constant :=         104; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=          89; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=         112; --  Host is down\n-   EHOSTUNREACH        : constant :=         113; --  No route to host\n-   EINPROGRESS         : constant :=         115; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=         106; --  Socket already connected\n-   ELOOP               : constant :=          40; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=          90; --  Message too long\n-   ENAMETOOLONG        : constant :=          36; --  Name too long\n-   ENETDOWN            : constant :=         100; --  Network is down\n-   ENETRESET           : constant :=         102; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=         101; --  Network is unreachable\n-   ENOBUFS             : constant :=         105; --  No buffer space available\n-   ENOPROTOOPT         : constant :=          92; --  Protocol not available\n-   ENOTCONN            : constant :=         107; --  Socket not connected\n-   ENOTSOCK            : constant :=          88; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=          95; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=          96; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=          93; --  Unknown protocol\n-   EPROTOTYPE          : constant :=          91; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=         108; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=          94; --  Socket type not supported\n-   ETIMEDOUT           : constant :=         110; --  Connection timed out\n-   ETOOMANYREFS        : constant :=         109; --  Too many references\n-   EWOULDBLOCK         : constant :=          11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=           1; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=         128; --  Send end of record\n-   MSG_WAITALL         : constant :=         256; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=       16384; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant := MSG_NOSIGNAL;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           2; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=          -1; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           9; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=          13; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=           6; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=           7; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=           8; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=          19; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=          18; --  Reception timeout\n-   SO_ERROR            : constant :=           4; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=          32; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          33; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          34; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          35; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          36; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=           8; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=  2147483647; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=         128; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           1; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "ed2b8d9624d4b0d7d7566bd15e174a3b73e0e003", "filename": "gcc/ada/g-soccon-linux-x86.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-x86.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for i686-pc-linux-gnu\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=          2; --  IPv4 address family\n-   AF_INET6            : constant :=         10; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=          1; --  Stream socket\n-   SOCK_DGRAM          : constant :=          2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=         13; --  Permission denied\n-   EADDRINUSE          : constant :=         98; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=         99; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=         97; --  Addr family not supported\n-   EALREADY            : constant :=        114; --  Operation in progress\n-   EBADF               : constant :=          9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=        103; --  Connection aborted\n-   ECONNREFUSED        : constant :=        111; --  Connection refused\n-   ECONNRESET          : constant :=        104; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=         89; --  Destination addr required\n-   EFAULT              : constant :=         14; --  Bad address\n-   EHOSTDOWN           : constant :=        112; --  Host is down\n-   EHOSTUNREACH        : constant :=        113; --  No route to host\n-   EINPROGRESS         : constant :=        115; --  Operation now in progress\n-   EINTR               : constant :=          4; --  Interrupted system call\n-   EINVAL              : constant :=         22; --  Invalid argument\n-   EIO                 : constant :=          5; --  Input output error\n-   EISCONN             : constant :=        106; --  Socket already connected\n-   ELOOP               : constant :=         40; --  Too many symbolic links\n-   EMFILE              : constant :=         24; --  Too many open files\n-   EMSGSIZE            : constant :=         90; --  Message too long\n-   ENAMETOOLONG        : constant :=         36; --  Name too long\n-   ENETDOWN            : constant :=        100; --  Network is down\n-   ENETRESET           : constant :=        102; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=        101; --  Network is unreachable\n-   ENOBUFS             : constant :=        105; --  No buffer space available\n-   ENOPROTOOPT         : constant :=         92; --  Protocol not available\n-   ENOTCONN            : constant :=        107; --  Socket not connected\n-   ENOTSOCK            : constant :=         88; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=         95; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=         96; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=         93; --  Unknown protocol\n-   EPROTOTYPE          : constant :=         91; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=        108; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=         94; --  Socket type not supported\n-   ETIMEDOUT           : constant :=        110; --  Connection timed out\n-   ETOOMANYREFS        : constant :=        109; --  Too many references\n-   EWOULDBLOCK         : constant :=         11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=          1; --  Unknown host\n-   TRY_AGAIN           : constant :=          2; --  Host name lookup failure\n-   NO_DATA             : constant :=          4; --  No data record for name\n-   NO_RECOVERY         : constant :=          3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant :=      21537; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=      21531; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=          0; --  No more recv\n-   SHUT_WR             : constant :=          1; --  No more send\n-   SHUT_RDWR           : constant :=          2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=          1; --  Options for socket level\n-   IPPROTO_IP          : constant :=          0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=         17; --  UDP\n-   IPPROTO_TCP         : constant :=          6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=          1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=          2; --  Peek at incoming data\n-   MSG_EOR             : constant :=        128; --  Send end of record\n-   MSG_WAITALL         : constant :=        256; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=      16384; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant := MSG_NOSIGNAL;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=          1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=          2; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         -1; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=          9; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         13; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          6; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=          7; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=          8; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=         21; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=         20; --  Reception timeout\n-   SO_ERROR            : constant :=          4; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=         32; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=         33; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=         34; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=         35; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=         36; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          8; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant := 2147483647; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=          4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=          4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=         16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=         28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=        128; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=          1; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=          0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "04c75bf63e458e51e262e299a4120958b404b418", "filename": "gcc/ada/g-soccon-lynxos.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-lynxos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-lynxos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-lynxos.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for i386-elf-lynxos\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=          2; --  IPv4 address family\n-   AF_INET6            : constant :=         28; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=          1; --  Stream socket\n-   SOCK_DGRAM          : constant :=          2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=         13; --  Permission denied\n-   EADDRINUSE          : constant :=         98; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=         99; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=         97; --  Addr family not supported\n-   EALREADY            : constant :=        114; --  Operation in progress\n-   EBADF               : constant :=          9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=        103; --  Connection aborted\n-   ECONNREFUSED        : constant :=        111; --  Connection refused\n-   ECONNRESET          : constant :=        104; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=         89; --  Destination addr required\n-   EFAULT              : constant :=         14; --  Bad address\n-   EHOSTDOWN           : constant :=        112; --  Host is down\n-   EHOSTUNREACH        : constant :=        113; --  No route to host\n-   EINPROGRESS         : constant :=        115; --  Operation now in progress\n-   EINTR               : constant :=          4; --  Interrupted system call\n-   EINVAL              : constant :=         22; --  Invalid argument\n-   EIO                 : constant :=          5; --  Input output error\n-   EISCONN             : constant :=        106; --  Socket already connected\n-   ELOOP               : constant :=         40; --  Too many symbolic links\n-   EMFILE              : constant :=         24; --  Too many open files\n-   EMSGSIZE            : constant :=         90; --  Message too long\n-   ENAMETOOLONG        : constant :=         36; --  Name too long\n-   ENETDOWN            : constant :=        100; --  Network is down\n-   ENETRESET           : constant :=        102; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=        101; --  Network is unreachable\n-   ENOBUFS             : constant :=        105; --  No buffer space available\n-   ENOPROTOOPT         : constant :=         92; --  Protocol not available\n-   ENOTCONN            : constant :=        107; --  Socket not connected\n-   ENOTSOCK            : constant :=         88; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=         95; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=         96; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=         93; --  Unknown protocol\n-   EPROTOTYPE          : constant :=         91; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=        108; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=         94; --  Socket type not supported\n-   ETIMEDOUT           : constant :=        110; --  Connection timed out\n-   ETOOMANYREFS        : constant :=        109; --  Too many references\n-   EWOULDBLOCK         : constant :=         11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=          1; --  Unknown host\n-   TRY_AGAIN           : constant :=          2; --  Host name lookup failure\n-   NO_DATA             : constant :=          4; --  No data record for name\n-   NO_RECOVERY         : constant :=          3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant :=      21537; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=      21531; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=          0; --  No more recv\n-   SHUT_WR             : constant :=          1; --  No more send\n-   SHUT_RDWR           : constant :=          2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=      65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=          0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=         17; --  UDP\n-   IPPROTO_TCP         : constant :=          6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=          1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=          2; --  Peek at incoming data\n-   MSG_EOR             : constant :=        128; --  Send end of record\n-   MSG_WAITALL         : constant :=        256; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=         -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=          0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=          1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=          4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=        512; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=          8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=        128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=         32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=       4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=       4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=       4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=       4102; --  Reception timeout\n-   SO_ERROR            : constant :=       4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=          9; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=         10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=         11; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=         12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=         13; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=         -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant := 2147483647; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=          4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=          4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=         16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=         28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=        512; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=          1; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=          0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "cc84740b15f4ca9be2a519599d667512b6745726", "filename": "gcc/ada/g-soccon-mingw-64.ads", "status": "removed", "additions": 0, "deletions": 220, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-mingw-64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-mingw-64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-mingw-64.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,220 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for x86_64-mingw32msv\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          23; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           1; --  Stream socket\n-   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=       10013; --  Permission denied\n-   EADDRINUSE          : constant :=       10048; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=       10049; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=       10047; --  Addr family not supported\n-   EALREADY            : constant :=       10037; --  Operation in progress\n-   EBADF               : constant :=       10009; --  Bad file descriptor\n-   ECONNABORTED        : constant :=       10053; --  Connection aborted\n-   ECONNREFUSED        : constant :=       10061; --  Connection refused\n-   ECONNRESET          : constant :=       10054; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=       10039; --  Destination addr required\n-   EFAULT              : constant :=       10014; --  Bad address\n-   EHOSTDOWN           : constant :=       10064; --  Host is down\n-   EHOSTUNREACH        : constant :=       10065; --  No route to host\n-   EINPROGRESS         : constant :=       10036; --  Operation now in progress\n-   EINTR               : constant :=       10004; --  Interrupted system call\n-   EINVAL              : constant :=       10022; --  Invalid argument\n-   EIO                 : constant :=       10101; --  Input output error\n-   EISCONN             : constant :=       10056; --  Socket already connected\n-   ELOOP               : constant :=       10062; --  Too many symbolic links\n-   EMFILE              : constant :=       10024; --  Too many open files\n-   EMSGSIZE            : constant :=       10040; --  Message too long\n-   ENAMETOOLONG        : constant :=       10063; --  Name too long\n-   ENETDOWN            : constant :=       10050; --  Network is down\n-   ENETRESET           : constant :=       10052; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=       10051; --  Network is unreachable\n-   ENOBUFS             : constant :=       10055; --  No buffer space available\n-   ENOPROTOOPT         : constant :=       10042; --  Protocol not available\n-   ENOTCONN            : constant :=       10057; --  Socket not connected\n-   ENOTSOCK            : constant :=       10038; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=       10045; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=       10046; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=       10043; --  Unknown protocol\n-   EPROTOTYPE          : constant :=       10041; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=       10058; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=       10044; --  Socket type not supported\n-   ETIMEDOUT           : constant :=       10060; --  Connection timed out\n-   ETOOMANYREFS        : constant :=       10059; --  Too many references\n-   EWOULDBLOCK         : constant :=       10035; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=       11001; --  Unknown host\n-   TRY_AGAIN           : constant :=       11002; --  Host name lookup failure\n-   NO_DATA             : constant :=       11004; --  No data record for name\n-   NO_RECOVERY         : constant :=       11003; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=          -1; --  Send end of record\n-   MSG_WAITALL         : constant :=           8; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=          -1; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=           9; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          11; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          13; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          19; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=  2147483647; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=        8200; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.short;\n-   subtype H_Length_T   is Interfaces.C.short;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           0; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-   ------------------------------\n-   -- MinGW-specific constants --\n-   ------------------------------\n-\n-   --  These constants may be used only within the MinGW version of\n-   --  GNAT.Sockets.Thin.\n-\n-   WSASYSNOTREADY      : constant :=       10091; --  System not ready\n-   WSAVERNOTSUPPORTED  : constant :=       10092; --  Version not supported\n-   WSANOTINITIALISED   : constant :=       10093; --  Winsock not initialized\n-   WSAEDISCON          : constant :=       10101; --  Disconnected\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "732ef67e2e5d1dfc61be6f5ea5003ec0c039e515", "filename": "gcc/ada/g-soccon-mingw.ads", "status": "removed", "additions": 0, "deletions": 220, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-mingw.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,220 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for pentium-mingw32msv\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          23; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           1; --  Stream socket\n-   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=       10013; --  Permission denied\n-   EADDRINUSE          : constant :=       10048; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=       10049; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=       10047; --  Addr family not supported\n-   EALREADY            : constant :=       10037; --  Operation in progress\n-   EBADF               : constant :=       10009; --  Bad file descriptor\n-   ECONNABORTED        : constant :=       10053; --  Connection aborted\n-   ECONNREFUSED        : constant :=       10061; --  Connection refused\n-   ECONNRESET          : constant :=       10054; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=       10039; --  Destination addr required\n-   EFAULT              : constant :=       10014; --  Bad address\n-   EHOSTDOWN           : constant :=       10064; --  Host is down\n-   EHOSTUNREACH        : constant :=       10065; --  No route to host\n-   EINPROGRESS         : constant :=       10036; --  Operation now in progress\n-   EINTR               : constant :=       10004; --  Interrupted system call\n-   EINVAL              : constant :=       10022; --  Invalid argument\n-   EIO                 : constant :=       10101; --  Input output error\n-   EISCONN             : constant :=       10056; --  Socket already connected\n-   ELOOP               : constant :=       10062; --  Too many symbolic links\n-   EMFILE              : constant :=       10024; --  Too many open files\n-   EMSGSIZE            : constant :=       10040; --  Message too long\n-   ENAMETOOLONG        : constant :=       10063; --  Name too long\n-   ENETDOWN            : constant :=       10050; --  Network is down\n-   ENETRESET           : constant :=       10052; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=       10051; --  Network is unreachable\n-   ENOBUFS             : constant :=       10055; --  No buffer space available\n-   ENOPROTOOPT         : constant :=       10042; --  Protocol not available\n-   ENOTCONN            : constant :=       10057; --  Socket not connected\n-   ENOTSOCK            : constant :=       10038; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=       10045; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=       10046; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=       10043; --  Unknown protocol\n-   EPROTOTYPE          : constant :=       10041; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=       10058; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=       10044; --  Socket type not supported\n-   ETIMEDOUT           : constant :=       10060; --  Connection timed out\n-   ETOOMANYREFS        : constant :=       10059; --  Too many references\n-   EWOULDBLOCK         : constant :=       10035; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=       11001; --  Unknown host\n-   TRY_AGAIN           : constant :=       11002; --  Host name lookup failure\n-   NO_DATA             : constant :=       11004; --  No data record for name\n-   NO_RECOVERY         : constant :=       11003; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=          -1; --  Send end of record\n-   MSG_WAITALL         : constant :=           8; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=          -1; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=           9; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          11; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          13; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          19; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=  2147483647; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=        4100; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.short;\n-   subtype H_Length_T   is Interfaces.C.short;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           0; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-   ------------------------------\n-   -- MinGW-specific constants --\n-   ------------------------------\n-\n-   --  These constants may be used only within the MinGW version of\n-   --  GNAT.Sockets.Thin.\n-\n-   WSASYSNOTREADY      : constant :=       10091; --  System not ready\n-   WSAVERNOTSUPPORTED  : constant :=       10092; --  Version not supported\n-   WSANOTINITIALISED   : constant :=       10093; --  Winsock not initialized\n-   WSAEDISCON          : constant :=       10101; --  Disconnected\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "a404eec9b33f78db8f97f1c9ca1fc6621c07448d", "filename": "gcc/ada/g-soccon-rtems.ads", "status": "removed", "additions": 0, "deletions": 196, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-rtems.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,196 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for RTEMS\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET            : constant :=           2; --  IPv4 address family\n-   AF_INET6           : constant :=          28; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM        : constant :=           1; --  Stream socket\n-   SOCK_DGRAM         : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES             : constant :=          13; --  Permission denied\n-   EADDRINUSE         : constant :=         112; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=         125; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=         106; --  Addr family not supported\n-   EALREADY           : constant :=         120; --  Operation in progress\n-   EBADF              : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=         113; --  Connection aborted\n-   ECONNREFUSED       : constant :=         111; --  Connection refused\n-   ECONNRESET         : constant :=         104; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=         121; --  Destination addr required\n-   EFAULT             : constant :=          14; --  Bad address\n-   EHOSTDOWN          : constant :=         117; --  Host is down\n-   EHOSTUNREACH       : constant :=         118; --  No route to host\n-   EINPROGRESS        : constant :=         119; --  Operation now in progress\n-   EINTR              : constant :=           4; --  Interrupted system call\n-   EINVAL             : constant :=          22; --  Invalid argument\n-   EIO                : constant :=           5; --  Input output error\n-   EISCONN            : constant :=         127; --  Socket already connected\n-   ELOOP              : constant :=          92; --  Too many symbolic links\n-   EMFILE             : constant :=          24; --  Too many open files\n-   EMSGSIZE           : constant :=         122; --  Message too long\n-   ENAMETOOLONG       : constant :=          91; --  Name too long\n-   ENETDOWN           : constant :=         115; --  Network is down\n-   ENETRESET          : constant :=         126; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=         114; --  Network is unreachable\n-   ENOBUFS            : constant :=         105; --  No buffer space available\n-   ENOPROTOOPT        : constant :=         109; --  Protocol not available\n-   ENOTCONN           : constant :=         128; --  Socket not connected\n-   ENOTSOCK           : constant :=         108; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=          95; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=          96; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=         123; --  Unknown protocol\n-   EPROTOTYPE         : constant :=         107; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=         110; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=         124; --  Socket type not supported\n-   ETIMEDOUT          : constant :=         116; --  Connection timed out\n-   ETOOMANYREFS       : constant :=         129; --  Too many references\n-   EWOULDBLOCK        : constant :=          11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n-   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n-   NO_DATA            : constant :=           4; --  No data record for name\n-   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD            : constant :=           0; --  No more recv\n-   SHUT_WR            : constant :=           1; --  No more send\n-   SHUT_RDWR          : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=          17; --  UDP\n-   IPPROTO_TCP        : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB            : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n-   MSG_EOR            : constant :=           8; --  Send end of record\n-   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT       : constant :=          -1; --  Bind reuse port number\n-   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n-   SO_ERROR           : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF    : constant :=           9; --  Set/get mcast interface\n-   IP_MULTICAST_TTL   : constant :=          10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=          11; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP  : constant :=          12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=          13; --  Leave a multicast group\n-   IP_PKTINFO         : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX            : constant :=        1024; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer  : constant :=           1; --  Need buffer for Netdb ops\n-\n-   ----------------------\n-   -- Additional flags --\n-   ----------------------\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "2d5f2d98affa9ebccee54ff5b73d45e93c4bea56", "filename": "gcc/ada/g-soccon-solaris-64.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-solaris-64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-solaris-64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-solaris-64.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for sparc-sun-solaris2.8\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          26; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           2; --  Stream socket\n-   SOCK_DGRAM          : constant :=           1; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=         125; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=         126; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=         124; --  Addr family not supported\n-   EALREADY            : constant :=         149; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=         130; --  Connection aborted\n-   ECONNREFUSED        : constant :=         146; --  Connection refused\n-   ECONNRESET          : constant :=         131; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=          96; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=         147; --  Host is down\n-   EHOSTUNREACH        : constant :=         148; --  No route to host\n-   EINPROGRESS         : constant :=         150; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=         133; --  Socket already connected\n-   ELOOP               : constant :=          90; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=          97; --  Message too long\n-   ENAMETOOLONG        : constant :=          78; --  Name too long\n-   ENETDOWN            : constant :=         127; --  Network is down\n-   ENETRESET           : constant :=         129; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=         128; --  Network is unreachable\n-   ENOBUFS             : constant :=         132; --  No buffer space available\n-   ENOPROTOOPT         : constant :=          99; --  Protocol not available\n-   ENOTCONN            : constant :=         134; --  Socket not connected\n-   ENOTSOCK            : constant :=          95; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=         122; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=         123; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=         120; --  Unknown protocol\n-   EPROTOTYPE          : constant :=          98; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=         143; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=         121; --  Socket type not supported\n-   ETIMEDOUT           : constant :=         145; --  Connection timed out\n-   ETOOMANYREFS        : constant :=         144; --  Too many references\n-   EWOULDBLOCK         : constant :=          11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=           8; --  Send end of record\n-   MSG_WAITALL         : constant :=          64; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=          -1; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=          16; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          17; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          18; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          19; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          20; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=          16; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          32; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=         128; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           1; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "2d5f2d98affa9ebccee54ff5b73d45e93c4bea56", "filename": "gcc/ada/g-soccon-solaris.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-solaris.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for sparc-sun-solaris2.8\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          26; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           2; --  Stream socket\n-   SOCK_DGRAM          : constant :=           1; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=         125; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=         126; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=         124; --  Addr family not supported\n-   EALREADY            : constant :=         149; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=         130; --  Connection aborted\n-   ECONNREFUSED        : constant :=         146; --  Connection refused\n-   ECONNRESET          : constant :=         131; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=          96; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=         147; --  Host is down\n-   EHOSTUNREACH        : constant :=         148; --  No route to host\n-   EINPROGRESS         : constant :=         150; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=         133; --  Socket already connected\n-   ELOOP               : constant :=          90; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=          97; --  Message too long\n-   ENAMETOOLONG        : constant :=          78; --  Name too long\n-   ENETDOWN            : constant :=         127; --  Network is down\n-   ENETRESET           : constant :=         129; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=         128; --  Network is unreachable\n-   ENOBUFS             : constant :=         132; --  No buffer space available\n-   ENOPROTOOPT         : constant :=          99; --  Protocol not available\n-   ENOTCONN            : constant :=         134; --  Socket not connected\n-   ENOTSOCK            : constant :=          95; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=         122; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=         123; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=         120; --  Unknown protocol\n-   EPROTOTYPE          : constant :=          98; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=         143; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=         121; --  Socket type not supported\n-   ETIMEDOUT           : constant :=         145; --  Connection timed out\n-   ETOOMANYREFS        : constant :=         144; --  Too many references\n-   EWOULDBLOCK         : constant :=          11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=           8; --  Send end of record\n-   MSG_WAITALL         : constant :=          64; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=          -1; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=          16; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          17; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          18; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          19; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          20; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=          16; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          32; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=         128; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           1; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "a14e6106d4a46f4d3d1f1f1ed79c1a2bb93fda79", "filename": "gcc/ada/g-soccon-tru64.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-tru64.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for alphaev56-dec-osf5.1\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          26; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           1; --  Stream socket\n-   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=          48; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=          49; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=          47; --  Addr family not supported\n-   EALREADY            : constant :=          37; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=          53; --  Connection aborted\n-   ECONNREFUSED        : constant :=          61; --  Connection refused\n-   ECONNRESET          : constant :=          54; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=          39; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=          64; --  Host is down\n-   EHOSTUNREACH        : constant :=          65; --  No route to host\n-   EINPROGRESS         : constant :=          36; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=          56; --  Socket already connected\n-   ELOOP               : constant :=          62; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=          40; --  Message too long\n-   ENAMETOOLONG        : constant :=          63; --  Name too long\n-   ENETDOWN            : constant :=          50; --  Network is down\n-   ENETRESET           : constant :=          52; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=          51; --  Network is unreachable\n-   ENOBUFS             : constant :=          55; --  No buffer space available\n-   ENOPROTOOPT         : constant :=          42; --  Protocol not available\n-   ENOTCONN            : constant :=          57; --  Socket not connected\n-   ENOTSOCK            : constant :=          38; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=          45; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=          46; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=          43; --  Unknown protocol\n-   EPROTOTYPE          : constant :=          41; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=          58; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=          44; --  Socket type not supported\n-   ETIMEDOUT           : constant :=          60; --  Connection timed out\n-   ETOOMANYREFS        : constant :=          59; --  Too many references\n-   EWOULDBLOCK         : constant :=          35; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=           8; --  Send end of record\n-   MSG_WAITALL         : constant :=          64; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         512; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=           9; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          11; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          13; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=        1024; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          32; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=         512; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           0; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "072ee499c3c8be15474258daee24a2182f0b0534", "filename": "gcc/ada/g-soccon-vms.ads", "status": "removed", "additions": 0, "deletions": 208, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vms.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,208 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for OpenVMS\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=           2; --  IPv4 address family\n-   AF_INET6            : constant :=          26; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=           1; --  Stream socket\n-   SOCK_DGRAM          : constant :=           2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=          13; --  Permission denied\n-   EADDRINUSE          : constant :=          48; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=          49; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=          47; --  Addr family not supported\n-   EALREADY            : constant :=          37; --  Operation in progress\n-   EBADF               : constant :=           9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=          53; --  Connection aborted\n-   ECONNREFUSED        : constant :=          61; --  Connection refused\n-   ECONNRESET          : constant :=          54; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=          39; --  Destination addr required\n-   EFAULT              : constant :=          14; --  Bad address\n-   EHOSTDOWN           : constant :=          64; --  Host is down\n-   EHOSTUNREACH        : constant :=          65; --  No route to host\n-   EINPROGRESS         : constant :=          36; --  Operation now in progress\n-   EINTR               : constant :=           4; --  Interrupted system call\n-   EINVAL              : constant :=          22; --  Invalid argument\n-   EIO                 : constant :=           5; --  Input output error\n-   EISCONN             : constant :=          56; --  Socket already connected\n-   ELOOP               : constant :=          62; --  Too many symbolic links\n-   EMFILE              : constant :=          24; --  Too many open files\n-   EMSGSIZE            : constant :=          40; --  Message too long\n-   ENAMETOOLONG        : constant :=          63; --  Name too long\n-   ENETDOWN            : constant :=          50; --  Network is down\n-   ENETRESET           : constant :=          52; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=          51; --  Network is unreachable\n-   ENOBUFS             : constant :=          55; --  No buffer space available\n-   ENOPROTOOPT         : constant :=          42; --  Protocol not available\n-   ENOTCONN            : constant :=          57; --  Socket not connected\n-   ENOTSOCK            : constant :=          38; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=          45; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=          46; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=          43; --  Unknown protocol\n-   EPROTOTYPE          : constant :=          41; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=          58; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=          44; --  Socket type not supported\n-   ETIMEDOUT           : constant :=          60; --  Connection timed out\n-   ETOOMANYREFS        : constant :=          59; --  Too many references\n-   EWOULDBLOCK         : constant :=          35; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=           1; --  Unknown host\n-   TRY_AGAIN           : constant :=           2; --  Host name lookup failure\n-   NO_DATA             : constant :=           4; --  No data record for name\n-   NO_RECOVERY         : constant :=           3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant := -2147195266; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=  1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=           0; --  No more recv\n-   SHUT_WR             : constant :=           1; --  No more send\n-   SHUT_RDWR           : constant :=           2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=       65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=           0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=          17; --  UDP\n-   IPPROTO_TCP         : constant :=           6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=           1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=           2; --  Peek at incoming data\n-   MSG_EOR             : constant :=           8; --  Send end of record\n-   MSG_WAITALL         : constant :=         128; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=          -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=           0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=           1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=           4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         512; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=           8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=        4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=        4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=        4102; --  Reception timeout\n-   SO_ERROR            : constant :=        4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=           9; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=          10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=          11; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=          12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=          13; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant :=        1024; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=           4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=           4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=          16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=          28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=         512; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=           1; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=           0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "8af174351dc37ff9e8da301a90b132c5303454f8", "filename": "gcc/ada/g-soccon-vxworks.ads", "status": "removed", "additions": 0, "deletions": 218, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vxworks.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,218 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for VxWorks\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=          2; --  IPv4 address family\n-   AF_INET6            : constant :=         28; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=          1; --  Stream socket\n-   SOCK_DGRAM          : constant :=          2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=         13; --  Permission denied\n-   EADDRINUSE          : constant :=         48; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=         49; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=         47; --  Addr family not supported\n-   EALREADY            : constant :=         69; --  Operation in progress\n-   EBADF               : constant :=          9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=         53; --  Connection aborted\n-   ECONNREFUSED        : constant :=         61; --  Connection refused\n-   ECONNRESET          : constant :=         54; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=         40; --  Destination addr required\n-   EFAULT              : constant :=         14; --  Bad address\n-   EHOSTDOWN           : constant :=         67; --  Host is down\n-   EHOSTUNREACH        : constant :=         65; --  No route to host\n-   EINPROGRESS         : constant :=         68; --  Operation now in progress\n-   EINTR               : constant :=          4; --  Interrupted system call\n-   EINVAL              : constant :=         22; --  Invalid argument\n-   EIO                 : constant :=          5; --  Input output error\n-   EISCONN             : constant :=         56; --  Socket already connected\n-   ELOOP               : constant :=         64; --  Too many symbolic links\n-   EMFILE              : constant :=         24; --  Too many open files\n-   EMSGSIZE            : constant :=         36; --  Message too long\n-   ENAMETOOLONG        : constant :=         26; --  Name too long\n-   ENETDOWN            : constant :=         62; --  Network is down\n-   ENETRESET           : constant :=         52; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=         51; --  Network is unreachable\n-   ENOBUFS             : constant :=         55; --  No buffer space available\n-   ENOPROTOOPT         : constant :=         42; --  Protocol not available\n-   ENOTCONN            : constant :=         57; --  Socket not connected\n-   ENOTSOCK            : constant :=         50; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=         45; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=         46; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=         43; --  Unknown protocol\n-   EPROTOTYPE          : constant :=         41; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=         58; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=         44; --  Socket type not supported\n-   ETIMEDOUT           : constant :=         60; --  Connection timed out\n-   ETOOMANYREFS        : constant :=         59; --  Too many references\n-   EWOULDBLOCK         : constant :=         70; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=          1; --  Unknown host\n-   TRY_AGAIN           : constant :=          2; --  Host name lookup failure\n-   NO_DATA             : constant :=          4; --  No data record for name\n-   NO_RECOVERY         : constant :=          3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant :=         16; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=          1; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=          0; --  No more recv\n-   SHUT_WR             : constant :=          1; --  No more send\n-   SHUT_RDWR           : constant :=          2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=      65535; --  Options for socket level\n-   IPPROTO_IP          : constant :=          0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=         17; --  UDP\n-   IPPROTO_TCP         : constant :=          6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=          1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=          2; --  Peek at incoming data\n-   MSG_EOR             : constant :=          8; --  Send end of record\n-   MSG_WAITALL         : constant :=         64; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=         -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant :=          0;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=          1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=          4; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=        512; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=          8; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=        128; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=         32; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=       4097; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=       4098; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=       4101; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=       4102; --  Reception timeout\n-   SO_ERROR            : constant :=       4103; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=          9; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=         10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=         11; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=         12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=         13; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=         -1; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant := 2147483647; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=          4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=          4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=         16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=         28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=        256; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=          1; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=          1; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-   --------------------------------\n-   -- VxWorks-specific constants --\n-   --------------------------------\n-\n-   --  These constants may be used only within the VxWorks version of\n-   --  GNAT.Sockets.Thin.\n-\n-   OK                  : constant :=          0; --  VxWorks generic success\n-   ERROR               : constant :=         -1; --  VxWorks generic error\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "b7f8fe4be77950f5582ad97e330b3b2bacc9a8c4", "filename": "gcc/ada/g-soccon.ads", "status": "removed", "additions": 0, "deletions": 215, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fg-soccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon.ads?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,215 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  WARNING! This file is a default version that must be replaced for\n---  each platform by running gen-soccon.c which automatically generates\n---  the appropriate target specific values.\n-\n---  The values below were computed from a i686-pc-linux-gnu environment,\n---  but are for illustration purposes only. As noted above, part of a port\n---  to a new target is to replace this file appropriately.\n-\n---  This file is generated automatically, do not modify it by hand! Instead,\n---  make changes to gen-soccon.c and re-run it on each target.\n-\n-with Interfaces.C;\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET             : constant :=          2; --  IPv4 address family\n-   AF_INET6            : constant :=         10; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM         : constant :=          1; --  Stream socket\n-   SOCK_DGRAM          : constant :=          2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES              : constant :=         13; --  Permission denied\n-   EADDRINUSE          : constant :=         98; --  Address already in use\n-   EADDRNOTAVAIL       : constant :=         99; --  Cannot assign address\n-   EAFNOSUPPORT        : constant :=         97; --  Addr family not supported\n-   EALREADY            : constant :=        114; --  Operation in progress\n-   EBADF               : constant :=          9; --  Bad file descriptor\n-   ECONNABORTED        : constant :=        103; --  Connection aborted\n-   ECONNREFUSED        : constant :=        111; --  Connection refused\n-   ECONNRESET          : constant :=        104; --  Connection reset by peer\n-   EDESTADDRREQ        : constant :=         89; --  Destination addr required\n-   EFAULT              : constant :=         14; --  Bad address\n-   EHOSTDOWN           : constant :=        112; --  Host is down\n-   EHOSTUNREACH        : constant :=        113; --  No route to host\n-   EINPROGRESS         : constant :=        115; --  Operation now in progress\n-   EINTR               : constant :=          4; --  Interrupted system call\n-   EINVAL              : constant :=         22; --  Invalid argument\n-   EIO                 : constant :=          5; --  Input output error\n-   EISCONN             : constant :=        106; --  Socket already connected\n-   ELOOP               : constant :=         40; --  Too many symbolic links\n-   EMFILE              : constant :=         24; --  Too many open files\n-   EMSGSIZE            : constant :=         90; --  Message too long\n-   ENAMETOOLONG        : constant :=         36; --  Name too long\n-   ENETDOWN            : constant :=        100; --  Network is down\n-   ENETRESET           : constant :=        102; --  Disconn. on network reset\n-   ENETUNREACH         : constant :=        101; --  Network is unreachable\n-   ENOBUFS             : constant :=        105; --  No buffer space available\n-   ENOPROTOOPT         : constant :=         92; --  Protocol not available\n-   ENOTCONN            : constant :=        107; --  Socket not connected\n-   ENOTSOCK            : constant :=         88; --  Operation on non socket\n-   EOPNOTSUPP          : constant :=         95; --  Operation not supported\n-   EPFNOSUPPORT        : constant :=         96; --  Unknown protocol family\n-   EPROTONOSUPPORT     : constant :=         93; --  Unknown protocol\n-   EPROTOTYPE          : constant :=         91; --  Unknown protocol type\n-   ESHUTDOWN           : constant :=        108; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT     : constant :=         94; --  Socket type not supported\n-   ETIMEDOUT           : constant :=        110; --  Connection timed out\n-   ETOOMANYREFS        : constant :=        109; --  Too many references\n-   EWOULDBLOCK         : constant :=         11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND      : constant :=          1; --  Unknown host\n-   TRY_AGAIN           : constant :=          2; --  Host name lookup failure\n-   NO_DATA             : constant :=          4; --  No data record for name\n-   NO_RECOVERY         : constant :=          3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO             : constant :=      21537; --  Set/clear non-blocking io\n-   FIONREAD            : constant :=      21531; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD             : constant :=          0; --  No more recv\n-   SHUT_WR             : constant :=          1; --  No more send\n-   SHUT_RDWR           : constant :=          2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET          : constant :=          1; --  Options for socket level\n-   IPPROTO_IP          : constant :=          0; --  Dummy protocol for IP\n-   IPPROTO_UDP         : constant :=         17; --  UDP\n-   IPPROTO_TCP         : constant :=          6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB             : constant :=          1; --  Process out-of-band data\n-   MSG_PEEK            : constant :=          2; --  Peek at incoming data\n-   MSG_EOR             : constant :=        128; --  Send end of record\n-   MSG_WAITALL         : constant :=        256; --  Wait for full reception\n-   MSG_NOSIGNAL        : constant :=      16384; --  No SIGPIPE on send\n-   MSG_Forced_Flags    : constant := MSG_NOSIGNAL;\n-   --  Flags set on all send(2) calls\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY         : constant :=          1; --  Do not coalesce packets\n-   SO_REUSEADDR        : constant :=          2; --  Bind reuse local address\n-   SO_REUSEPORT        : constant :=         -1; --  Bind reuse port number\n-   SO_KEEPALIVE        : constant :=          9; --  Enable keep-alive msgs\n-   SO_LINGER           : constant :=         13; --  Defer close to flush data\n-   SO_BROADCAST        : constant :=          6; --  Can send broadcast msgs\n-   SO_SNDBUF           : constant :=          7; --  Set/get send buffer size\n-   SO_RCVBUF           : constant :=          8; --  Set/get recv buffer size\n-   SO_SNDTIMEO         : constant :=         21; --  Emission timeout\n-   SO_RCVTIMEO         : constant :=         20; --  Reception timeout\n-   SO_ERROR            : constant :=          4; --  Get/clear error status\n-   IP_MULTICAST_IF     : constant :=         32; --  Set/get mcast interface\n-   IP_MULTICAST_TTL    : constant :=         33; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP   : constant :=         34; --  Set/get mcast loopback\n-   IP_ADD_MEMBERSHIP   : constant :=         35; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP  : constant :=         36; --  Leave a multicast group\n-   IP_PKTINFO          : constant :=          8; --  Get datagram info\n-\n-   -------------------\n-   -- System limits --\n-   -------------------\n-\n-   IOV_MAX             : constant := 2147483647; --  Maximum writev iovcnt\n-\n-   ----------------------\n-   -- Type definitions --\n-   ----------------------\n-\n-   --  Sizes (in bytes) of the components of struct timeval\n-\n-   SIZEOF_tv_sec       : constant :=          4; --  tv_sec\n-   SIZEOF_tv_usec      : constant :=          4; --  tv_usec\n-\n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n-\n-   SIZEOF_sockaddr_in  : constant :=         16; --  struct sockaddr_in\n-   SIZEOF_sockaddr_in6 : constant :=         28; --  struct sockaddr_in6\n-\n-   --  Size of file descriptor sets\n-\n-   SIZEOF_fd_set       : constant :=        128; --  fd_set\n-\n-   --  Fields of struct hostent\n-\n-   subtype H_Addrtype_T is Interfaces.C.int;\n-   subtype H_Length_T   is Interfaces.C.int;\n-\n-   ----------------------------------------\n-   -- Properties of supported interfaces --\n-   ----------------------------------------\n-\n-   Need_Netdb_Buffer   : constant :=          1; --  Need buffer for Netdb ops\n-   Has_Sockaddr_Len    : constant :=          0; --  Sockaddr has sa_len field\n-\n-   Thread_Blocking_IO : constant Boolean := True;\n-   --  Set False for contexts where socket i/o are process blocking\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "e1fc4099308a636b3138a942cfe79263bb636e22", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "patch": "@@ -37,7 +37,6 @@ with Ada.Unchecked_Conversion;\n \n with Interfaces.C.Strings;\n \n-with GNAT.Sockets.Constants;\n with GNAT.Sockets.Thin_Common;          use GNAT.Sockets.Thin_Common;\n with GNAT.Sockets.Thin;                 use GNAT.Sockets.Thin;\n with GNAT.Sockets.Thin.Task_Safe_NetDB; use GNAT.Sockets.Thin.Task_Safe_NetDB;"}, {"sha": "5ec8405642370ed29551c27de350630f39e8aaea", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "patch": "@@ -52,6 +52,8 @@ with Ada.Exceptions;\n with Ada.Streams;\n with Ada.Unchecked_Deallocation;\n \n+with System.OS_Constants;\n+\n package GNAT.Sockets is\n \n    --  Sockets are designed to provide a consistent communication facility\n@@ -367,6 +369,12 @@ package GNAT.Sockets is\n    --     Finalize;\n    --  end PingPong;\n \n+   package Constants renames System.OS_Constants;\n+   --  Renaming used to provide short-hand notations thoughout the sockets\n+   --  binding. Note that System.OS_Constants is an internal unit, and the\n+   --  entities declared therein are not meant for direct access by users,\n+   --  including through this renaming.\n+\n    procedure Initialize;\n    --  Initialize must be called before using any other socket routines.\n    --  Note that this operation is a no-op on UNIX platforms, but applications\n@@ -404,9 +412,12 @@ package GNAT.Sockets is\n    --  structure. Moreover, negative values are not allowed to avoid system\n    --  incompatibilities.\n \n-   Immediate : constant := 0.0;\n-   Forever   : constant := Duration (Integer'Last) * 1.0;\n-   --  Should be Duration 2 ** (Constants.SIZEOF_tv_sec * 8 - 1) - 1 ???\n+   Immediate : constant Duration := 0.0;\n+\n+   Timeval_Forever : constant :=\n+                       2.0 ** (Constants.SIZEOF_tv_sec * 8 - 1) - 1.0;\n+   Forever   : constant Duration :=\n+                 Duration'Min (Duration'Last, Timeval_Forever);\n \n    subtype Timeval_Duration is Duration range Immediate .. Forever;\n "}, {"sha": "3e13641d34fd7a83e59a865a88637bff3b77ce7b", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "patch": "@@ -39,7 +39,6 @@\n \n with Interfaces.C.Strings; use Interfaces.C.Strings;\n with System;               use System;\n-with GNAT.Sockets.Constants;\n \n package body GNAT.Sockets.Thin is\n "}, {"sha": "b94e0d0f4be119b00715292fe57751bf32a32704", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "patch": "@@ -34,7 +34,6 @@\n --  Temporary version for Alpha/VMS\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n-with GNAT.Sockets.Constants;\n with GNAT.Task_Lock;\n \n with Interfaces.C; use Interfaces.C;"}, {"sha": "1872b8b560f384e299e5f21b3835afb9beeb97a4", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "patch": "@@ -38,7 +38,6 @@\n --  This version is for VxWorks\n \n with GNAT.OS_Lib;  use GNAT.OS_Lib;\n-with GNAT.Sockets.Constants;\n with GNAT.Task_Lock;\n \n with Interfaces.C; use Interfaces.C;"}, {"sha": "cc90c640a04d925756ddd868c394841973dea4b1", "filename": "gcc/ada/g-socthi.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-socthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.adb?ref=ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "patch": "@@ -38,7 +38,6 @@\n --  This is the default version\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n-with GNAT.Sockets.Constants;\n with GNAT.Task_Lock;\n \n with Interfaces.C; use Interfaces.C;"}, {"sha": "5780c035414ff1f436df4f21cf9fff86a7c242a2", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "patch": "@@ -40,8 +40,6 @@ with Interfaces.C;\n with Interfaces.C.Pointers;\n with Interfaces.C.Strings;\n \n-with GNAT.Sockets.Constants;\n-\n package GNAT.Sockets.Thin_Common is\n \n    package C renames Interfaces.C;"}, {"sha": "161029d51becbe5bac584ee52dac51400d43d3bd", "filename": "gcc/ada/g-sttsne-vxworks.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-sttsne-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fg-sttsne-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sttsne-vxworks.adb?ref=ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "patch": "@@ -36,7 +36,6 @@\n \n with Ada.Unchecked_Conversion;\n with Interfaces.C; use Interfaces.C;\n-with GNAT.Sockets.Constants;\n \n package body GNAT.Sockets.Thin.Task_Safe_NetDB is\n "}, {"sha": "49a32cc917154cc5424d0879b85f60073e182690", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9e1eff51d6da72800ee7ca2179d0f8816dfa30/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=ef9e1eff51d6da72800ee7ca2179d0f8816dfa30", "patch": "@@ -368,7 +368,7 @@ PREFIX_REAL_OBJS = ../prefix.o \\\n # sockets, reset this variable to empty and add DUMMY_SOCKETS_TARGET_PAIRS \n # to LIBGNAT_TARGET_PAIRS.\n \n-GNATRTL_SOCKETS_OBJS = g-soccon$(objext) g-socket$(objext) g-socthi$(objext) \\\n+GNATRTL_SOCKETS_OBJS = g-socket$(objext) g-socthi$(objext) \\\n   g-soliop$(objext) g-sothco$(objext) g-sttsne$(objext)\n \n DUMMY_SOCKETS_TARGET_PAIRS = \\\n@@ -405,7 +405,6 @@ ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwork.ads<s-vxwork-m68k.ads \\\n-  g-soccon.ads<g-soccon-vxworks.ads \\\n   g-socthi.ads<g-socthi-vxworks.ads \\\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n@@ -446,7 +445,6 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n   s-taprop.adb<s-taprop-vxworks.adb \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-vxwork.ads<s-vxwork-ppc.ads \\\n-  g-soccon.ads<g-soccon-vxworks.ads \\\n   g-socthi.ads<g-socthi-vxworks.ads \\\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n@@ -519,7 +517,6 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwork.ads<s-vxwork-ppc.ads \\\n-  g-soccon.ads<g-soccon-vxworks.ads \\\n   g-socthi.ads<g-socthi-vxworks.ads \\\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n@@ -568,7 +565,6 @@ ifeq ($(strip $(filter-out sparc% wrs vx%,$(targ))),)\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwork.ads<s-vxwork-sparcv9.ads \\\n-  g-soccon.ads<g-soccon-vxworks.ads \\\n   g-socthi.ads<g-socthi-vxworks.ads \\\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n@@ -603,7 +599,6 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-vxwork.ads<s-vxwork-x86.ads \\\n   g-bytswa.adb<g-bytswa-x86.adb \\\n-  g-soccon.ads<g-soccon-vxworks.ads \\\n   g-socthi.ads<g-socthi-vxworks.ads \\\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n@@ -673,7 +668,6 @@ ifeq ($(strip $(filter-out arm% coff wrs vx%,$(targ))),)\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwork.ads<s-vxwork-arm.ads \\\n-  g-soccon.ads<g-soccon-vxworks.ads \\\n   g-socthi.ads<g-socthi-vxworks.ads \\\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n@@ -709,7 +703,6 @@ ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwork.ads<s-vxwork-mips.ads \\\n-  g-soccon.ads<g-soccon-vxworks.ads \\\n   g-socthi.ads<g-socthi-vxworks.ads \\\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n@@ -739,7 +732,6 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(targ))),)\n   s-tasinf.ads<s-tasinf-solaris.ads \\\n   s-taspri.ads<s-taspri-solaris.ads \\\n   s-tpopsp.adb<s-tpopsp-solaris.adb \\\n-  g-soccon.ads<g-soccon-solaris.ads \\\n   g-soliop.ads<g-soliop-solaris.ads \\\n   system.ads<system-solaris-sparc.ads\n \n@@ -755,7 +747,6 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(targ))),)\n   s-tasinf.ads<s-tasinf-solaris.ads \\\n   s-taspri.ads<s-taspri-solaris.ads \\\n   s-tpopsp.adb<s-tpopsp-solaris.adb \\\n-  g-soccon.ads<g-soccon-solaris-64.ads \\\n   g-soliop.ads<g-soliop-solaris.ads \\\n   system.ads<system-solaris-sparcv9.ads\n \n@@ -787,7 +778,6 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(targ))),)\n     s-taprop.adb<s-taprop-posix.adb \\\n     s-taspri.ads<s-taspri-posix.ads \\\n     s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-    g-soccon.ads<g-soccon-solaris.ads \\\n     g-soliop.ads<g-soliop-solaris.ads \\\n     system.ads<system-solaris-sparc.ads\n \n@@ -815,7 +805,6 @@ ifeq ($(strip $(filter-out %86 solaris2%,$(arch) $(osys))),)\n   s-taspri.ads<s-taspri-solaris.ads \\\n   s-tpopsp.adb<s-tpopsp-solaris.adb \\\n   g-bytswa.adb<g-bytswa-x86.adb \\\n-  g-soccon.ads<g-soccon-solaris.ads \\\n   g-soliop.ads<g-soliop-solaris.ads \\\n   system.ads<system-solaris-x86.ads\n \n@@ -853,7 +842,6 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n     a-extiti.ads<a-extiti-linux-marte.ads \\\n     a-rttiev.adb<a-rttiev-linux-marte.adb \\\n     a-rttiev.ads<a-rttiev-linux-marte.ads \\\n-    g-soccon.ads<g-soccon-linux-x86-marte.ads \\\n     s-osinte.adb<s-osinte-linux-marte.adb \\\n     s-osinte.ads<s-osinte-linux-marte.ads \\\n     s-taprop.adb<s-taprop-linux-marte.adb\n@@ -864,7 +852,6 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n     THREADSLIB = -lmarte\n   else\n     LIBGNAT_TARGET_PAIRS += \\\n-    g-soccon.ads<g-soccon-linux-x86.ads \\\n     s-linux.ads<s-linux.ads \\\n     s-osinte.adb<s-osinte-posix.adb\n \n@@ -905,7 +892,6 @@ ifeq ($(strip $(filter-out %86 kfreebsd%,$(arch) $(osys))),)\n   a-numaux.ads<a-numaux-x86.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n-  g-soccon.ads<g-soccon-freebsd.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osinte.ads<s-osinte-kfreebsd-gnu.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n@@ -934,7 +920,6 @@ ifeq ($(strip $(filter-out %86 freebsd%,$(arch) $(osys))),)\n   a-numaux.adb<a-numaux-x86.adb \\\n   a-numaux.ads<a-numaux-x86.ads \\\n   g-bytswa.adb<g-bytswa-x86.adb \\\n-  g-soccon.ads<g-soccon-freebsd.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n   s-osinte.adb<s-osinte-freebsd.adb \\\n@@ -1017,7 +1002,6 @@ ifeq ($(strip $(filter-out mips sgi irix%,$(targ))),)\n     s-taspri.ads<s-taspri-posix.ads \\\n     s-tpopsp.adb<s-tpopsp-posix.adb \\\n     s-traceb.adb<s-traceb-mastop.adb \\\n-    g-soccon.ads<g-soccon-irix.ads \\\n     system.ads<system-irix-n32.ads\n \n     THREADSLIB = -lpthread\n@@ -1028,7 +1012,6 @@ ifeq ($(strip $(filter-out mips sgi irix%,$(targ))),)\n     s-mastop.adb<s-mastop-irix.adb \\\n     s-osprim.adb<s-osprim-posix.adb \\\n     s-traceb.adb<s-traceb-mastop.adb \\\n-    g-soccon.ads<g-soccon-irix.ads \\\n     system.ads<system-irix-o32.ads\n   endif\n \n@@ -1055,7 +1038,6 @@ ifeq ($(strip $(filter-out hppa% hp hpux10%,$(targ))),)\n   s-taprop.adb<s-taprop-hpux-dce.adb \\\n   s-taspri.ads<s-taspri-hpux-dce.ads \\\n   s-tpopsp.adb<s-tpopsp-posix.adb \\\n-  g-soccon.ads<g-soccon-hpux.ads \\\n   system.ads<system-hpux.ads\n \n   EH_MECHANISM=-gcc\n@@ -1075,7 +1057,6 @@ ifeq ($(strip $(filter-out hppa% hp hpux11%,$(targ))),)\n   s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  g-soccon.ads<g-soccon-hpux.ads \\\n   system.ads<system-hpux.ads\n \n   TOOLS_TARGET_PAIRS = mlib-tgt-specific.adb<mlib-tgt-specific-hpux.adb\n@@ -1101,7 +1082,6 @@ ifeq ($(strip $(filter-out ibm aix%,$(manu) $(osys))),)\n   s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix.adb \\\n-  g-soccon.ads<g-soccon-aix.ads \\\n   system.ads<system-aix.ads\n \n   THREADSLIB = -lpthreads\n@@ -1125,7 +1105,6 @@ ifeq ($(strip $(filter-out lynxos,$(osys))),)\n     a-numaux.ads<a-numaux-x86.ads \\\n     a-intnam.ads<a-intnam-lynxos.ads \\\n     g-bytswa.adb<g-bytswa-x86.adb \\\n-    g-soccon.ads<g-soccon-lynxos.ads \\\n     g-sttsne.adb<g-sttsne-locking.adb \\\n     g-sttsne.ads<g-sttsne-locking.ads \\\n     s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1143,7 +1122,6 @@ ifeq ($(strip $(filter-out lynxos,$(osys))),)\n   else\n     LIBGNAT_TARGET_PAIRS = \\\n     a-intnam.ads<a-intnam-lynxos.ads \\\n-    g-soccon.ads<g-soccon-lynxos.ads \\\n     g-sttsne.adb<g-sttsne-locking.adb \\\n     g-sttsne.ads<g-sttsne-locking.ads \\\n     s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1171,7 +1149,6 @@ ifeq ($(strip $(filter-out rtems%,$(osys))),)\n   s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-rtems.adb \\\n-  g-soccon.ads<g-soccon-rtems.ads \\\n   s-stchop.adb<s-stchop-rtems.adb\n endif\n \n@@ -1189,7 +1166,6 @@ ifeq ($(strip $(filter-out alpha% dec osf%,$(targ))),)\n   s-taspri.ads<s-taspri-tru64.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   s-traceb.adb<s-traceb-mastop.adb \\\n-  g-soccon.ads<g-soccon-tru64.ads \\\n   system.ads<system-tru64.ads\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-tru64.adb\n@@ -1260,7 +1236,6 @@ endif\n   a-intnam.ads<a-intnam-vms.ads \\\n   a-numaux.ads<a-numaux-vms.ads \\\n   g-expect.adb<g-expect-vms.adb \\\n-  g-soccon.ads<g-soccon-vms.ads \\\n   g-socthi.ads<g-socthi-vms.ads \\\n   g-socthi.adb<g-socthi-vms.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n@@ -1349,7 +1324,6 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n \n   ifeq ($(strip $(filter-out rtx_w32 rtx_rtss,$(THREAD_KIND))),)\n     LIBGNAT_TARGET_PAIRS += \\\n-    g-soccon.ads<g-soccon-mingw.ads \\\n     s-intman.adb<s-intman-dummy.adb \\\n     s-osinte.ads<s-osinte-rtx.ads \\\n     s-osprim.adb<s-osprim-rtx.adb \\\n@@ -1383,11 +1357,9 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n \n     ifeq ($(strip $(filter-out x86_64%,$(arch))),)\n       LIBGNAT_TARGET_PAIRS += \\\n-        g-soccon.ads<g-soccon-mingw-64.ads \\\n         system.ads<system-mingw-x86_64.ads\n     else\n       LIBGNAT_TARGET_PAIRS += \\\n-        g-soccon.ads<g-soccon-mingw.ads \\\n         system.ads<system-mingw.ads\n     endif\n \n@@ -1418,7 +1390,6 @@ endif\n ifeq ($(strip $(filter-out mips linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n-  g-soccon.ads<g-soccon-linux-mips.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n   s-linux.ads<s-linux.ads \\\n@@ -1443,7 +1414,6 @@ endif\n ifeq ($(strip $(filter-out mipsel linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n-  g-soccon.ads<g-soccon-linux-mips.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n   s-linux.ads<s-linux.ads \\\n@@ -1468,7 +1438,6 @@ endif\n ifeq ($(strip $(filter-out powerpc% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n-  g-soccon.ads<g-soccon-linux-ppc.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n   s-linux.ads<s-linux.ads \\\n@@ -1588,7 +1557,6 @@ ifeq ($(strip $(filter-out %ia64 linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   a-numaux.ads<a-numaux-libc-x86.ads \\\n-  g-soccon.ads<g-soccon-linux-64.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n   s-linux.ads<s-linux.ads \\\n@@ -1651,7 +1619,6 @@ ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n   a-intnam.ads<a-intnam-linux.ads \\\n   a-numaux.adb<a-numaux-x86.adb \\\n   a-numaux.ads<a-numaux-x86.ads \\\n-  g-soccon.ads<g-soccon-linux-64.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n   s-linux.ads<s-linux.ads \\\n@@ -1691,7 +1658,6 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n     s-taprop.adb<s-taprop-posix.adb \\\n     s-taspri.ads<s-taspri-posix.ads \\\n     s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-    g-soccon.ads<g-soccon-darwin.ads \\\n     a-numaux.ads<a-numaux-x86.ads \\\n     a-numaux.adb<a-numaux-x86.adb \\\n     system.ads<system-darwin-x86.ads\n@@ -1706,7 +1672,6 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n     s-taprop.adb<s-taprop-posix.adb \\\n     s-taspri.ads<s-taspri-posix.ads \\\n     s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-    g-soccon.ads<g-soccon-darwin.ads \\\n     a-numaux.ads<a-numaux-darwin.ads \\\n     a-numaux.adb<a-numaux-darwin.adb \\\n     system.ads<system-darwin-ppc.ads"}, {"sha": "594964b7f9aed97210e7297069b7c986d886ecdc", "filename": "gcc/ada/gen-oscons.c", "status": "removed", "additions": 0, "deletions": 1129, "changes": 1129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fgen-oscons.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610/gcc%2Fada%2Fgen-oscons.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen-oscons.c?ref=e3cb64d4063a6e51c0aaf0d33f3aa4cb388d2610", "patch": "@@ -1,1129 +0,0 @@\n-/****************************************************************************\n- *                                                                          *\n- *                          GNAT SYSTEM UTILITIES                           *\n- *                                                                          *\n- *                            G E N - O S C O N                             *\n- *                                                                          *\n- *          Copyright (C) 2004-2008, Free Software Foundation, Inc.         *\n- *                                                                          *\n- * GNAT is free software;  you can  redistribute it  and/or modify it under *\n- * terms of the  GNU General Public License as published  by the Free Soft- *\n- * ware  Foundation;  either version 2,  or (at your option) any later ver- *\n- * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n- * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *\n- * for  more details.  You should have  received  a copy of the GNU General *\n- * Public License  distributed with GNAT;  see file COPYING.  If not, write *\n- * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *\n- * Boston, MA 02110-1301, USA.                                              *\n- *                                                                          *\n- * GNAT was originally developed  by the GNAT team at  New York University. *\n- * Extensive contributions were provided by Ada Core Technologies Inc.      *\n- *                                                                          *\n- ****************************************************************************/\n-\n-/* This program generates s-oscons.ads */\n-\n-/*\n- * To build using DEC C:\n- *\n- * CC/DEFINE=\"TARGET=\"\"OpenVMS\"\"\" gen-oscon\n- * LINK gen-oscon\n- * RUN gen-oscon\n- *\n- * Note: OpenVMS versions older than 8.3 provide an incorrect value in\n- * the DEC C header files for MSG_WAITALL. To generate the VMS version\n- * of s-oscons.ads, gen-oscon should be run on an 8.3 or later machine.\n- */\n-\n-#ifndef TARGET\n-# error Please define TARGET\n-#endif\n-\n-#include <stdlib.h>\n-#include <stdio.h>\n-#include <string.h>\n-#include <limits.h>\n-#include <fcntl.h>\n-\n-#if !defined (__vxworks) && !defined (__VMS)\n-# include <termios.h>\n-#endif\n-\n-#include \"gsocket.h\"\n-\n-typedef enum { NUM, TXT } kind_t;\n-\n-struct line {\n-  char *text;\n-  char *value;\n-  char *comment;\n-  kind_t kind;\n-  struct line *next;\n-};\n-\n-struct line *first = NULL, *last = NULL;\n-\n-#define TXT(_text) add_line(_text, NULL, NULL, TXT);\n-/* Plain text */\n-\n-#define _NL TXT(\"\")\n-/* Empty line */\n-\n-#define itoad(n) f_itoa (\"%d\", (n))\n-#define itoax(n) f_itoa (\"16#%08x#\", (n))\n-\n-#define CND(name,comment) add_line(#name, itoad (name), comment, NUM);\n-/* Constant (decimal) */\n-\n-#define CNX(name,comment) add_line(#name, itoax (name), comment, NUM);\n-/* Constant (hexadecimal) */\n-\n-#define CN_(name,comment) add_line(#name, name, comment, TXT);\n-/* Constant (generic) */\n-\n-#define STR(p) STR1(p)\n-#define STR1(p) #p\n-\n-void output (void);\n-/* Generate output spec */\n-\n-char *f_itoa (char *, int);\n-/* int to string */\n-\n-void add_line (char *, char*, char*, kind_t);\n-\n-#ifdef __MINGW32__\n-unsigned int _CRT_fmode = _O_BINARY;\n-#endif\n-\n-int\n-main (void) {\n-\n-TXT(\"------------------------------------------------------------------------------\")\n-TXT(\"--                                                                          --\")\n-TXT(\"--                         GNAT COMPILER COMPONENTS                         --\")\n-TXT(\"--                                                                          --\")\n-TXT(\"--                  S Y S T E M . O S _ C O N S T A N T S                   --\")\n-TXT(\"--                                                                          --\")\n-TXT(\"--                                 S p e c                                  --\")\n-TXT(\"--                                                                          --\")\n-TXT(\"--          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\")\n-TXT(\"--                                                                          --\")\n-TXT(\"-- GNAT is free software;  you can  redistribute it  and/or modify it under --\")\n-TXT(\"-- terms of the  GNU General Public License as published  by the Free Soft- --\")\n-TXT(\"-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\")\n-TXT(\"-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\")\n-TXT(\"-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\")\n-TXT(\"-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\")\n-TXT(\"-- for  more details.  You should have  received  a copy of the GNU General --\")\n-TXT(\"-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\")\n-TXT(\"-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\")\n-TXT(\"-- Boston, MA 02110-1301, USA.                                              --\")\n-TXT(\"--                                                                          --\")\n-TXT(\"-- As a special exception,  if other files  instantiate  generics from this --\")\n-TXT(\"-- unit, or you link  this unit with other files  to produce an executable, --\")\n-TXT(\"-- this  unit  does not  by itself cause  the resulting  executable  to  be --\")\n-TXT(\"-- covered  by the  GNU  General  Public  License.  This exception does not --\")\n-TXT(\"-- however invalidate  any other reasons why  the executable file  might be --\")\n-TXT(\"-- covered by the  GNU Public License.                                      --\")\n-TXT(\"--                                                                          --\")\n-TXT(\"-- GNAT was originally developed  by the GNAT team at  New York University. --\")\n-TXT(\"-- Extensive contributions were provided by Ada Core Technologies Inc.      --\")\n-TXT(\"--                                                                          --\")\n-TXT(\"------------------------------------------------------------------------------\")\n-_NL\n-TXT(\"--  This package provides target dependent definitions of constant for use\")\n-TXT(\"--  by the GNAT runtime library. This package should not be directly with'd\")\n-TXT(\"--  by an application program.\")\n-_NL\n-TXT(\"--  This is the version for \" TARGET)\n-TXT(\"--  This file is generated automatically, do not modify it by hand! Instead,\")\n-TXT(\"--  make changes to gen-oscon.c and re-run it on each target.\")\n-_NL\n-TXT(\"with Interfaces.C;\")\n-TXT(\"package System.OS_Constants is\")\n-_NL\n-TXT(\"   pragma Pure;\")\n-_NL\n-TXT(\"   ---------------------\")\n-TXT(\"   -- File open modes --\")\n-TXT(\"   ---------------------\")\n-_NL\n-\n-#ifndef O_RDWR\n-# define O_RDWR -1\n-#endif\n-CND(O_RDWR, \"Read/write\")\n-\n-#ifndef O_NOCTTY\n-# define O_NOCTTY -1\n-#endif\n-CND(O_NOCTTY, \"Don't change ctrl tty\")\n-\n-#ifndef O_NDELAY\n-# define O_NDELAY -1\n-#endif\n-CND(O_NDELAY, \"Nonblocking\")\n-\n-_NL\n-TXT(\"   ----------------------\")\n-TXT(\"   -- Fcntl operations --\")\n-TXT(\"   ----------------------\")\n-_NL\n-\n-#ifndef F_GETFL\n-# define F_GETFL -1\n-#endif\n-CND(F_GETFL, \"Get flags\")\n-\n-#ifndef F_SETFL\n-# define F_SETFL -1\n-#endif\n-CND(F_SETFL, \"Set flags\")\n-\n-_NL\n-TXT(\"   -----------------\")\n-TXT(\"   -- Fcntl flags --\")\n-TXT(\"   -----------------\")\n-_NL\n-\n-#ifndef FNDELAY\n-# define FNDELAY -1\n-#endif\n-CND(FNDELAY, \"Nonblocking\")\n-\n-#if !defined(__vxworks) && !defined(__VMS)\n-\n-_NL\n-TXT(\"   ----------------------\")\n-TXT(\"   -- Termical control --\")\n-TXT(\"   ----------------------\")\n-_NL\n-\n-#ifndef TCSANOW\n-# define TCSANOW -1\n-#endif\n-CND(TCSANOW, \"Immediate\")\n-\n-#ifndef TCIFLUSH\n-# define TCIFLUSH -1\n-#endif\n-CND(TCIFLUSH, \"Flush input\")\n-\n-#ifndef CLOCAL\n-# define CLOCAL -1\n-#endif\n-CND(CLOCAL, \"Local\")\n-\n-#ifndef CRTSCTS\n-# define CRTSCTS -1\n-#endif\n-CND(CRTSCTS, \"Hardware flow control\")\n-\n-#ifndef CREAD\n-# define CREAD -1\n-#endif\n-CND(CREAD, \"Read\")\n-\n-#ifndef CS5\n-# define CS5 -1\n-#endif\n-CND(CS5, \"5 data bits\")\n-\n-#ifndef CS6\n-# define CS6 -1\n-#endif\n-CND(CS6, \"6 data bits\")\n-\n-#ifndef CS7\n-# define CS7 -1\n-#endif\n-CND(CS7, \"7 data bits\")\n-\n-#ifndef CS8\n-# define CS8 -1\n-#endif\n-CND(CS8, \"8 data bits\")\n-\n-#ifndef CSTOPB\n-# define CSTOPB -1\n-#endif\n-CND(CSTOPB, \"2 stop bits\")\n-\n-#ifndef PARENB\n-# define PARENB -1\n-#endif\n-CND(PARENB, \"Parity enable\")\n-\n-#ifndef PARODD\n-# define PARODD -1\n-#endif\n-CND(PARODD, \"Parity odd\")\n-\n-#ifndef B0\n-# define B0 -1\n-#endif\n-CND(B0, \"0 bps\")\n-\n-#ifndef B50\n-# define B50 -1\n-#endif\n-CND(B50, \"50 bps\")\n-\n-#ifndef B75\n-# define B75 -1\n-#endif\n-CND(B75, \"75 bps\")\n-\n-#ifndef B110\n-# define B110 -1\n-#endif\n-CND(B110, \"110 bps\")\n-\n-#ifndef B134\n-# define B134 -1\n-#endif\n-CND(B134, \"134 bps\")\n-\n-#ifndef B150\n-# define B150 -1\n-#endif\n-CND(B150, \"150 bps\")\n-\n-#ifndef B200\n-# define B200 -1\n-#endif\n-CND(B200, \"200 bps\")\n-\n-#ifndef B300\n-# define B300 -1\n-#endif\n-CND(B300, \"300 bps\")\n-\n-#ifndef B600\n-# define B600 -1\n-#endif\n-CND(B600, \"600 bps\")\n-\n-#ifndef B1200\n-# define B1200 -1\n-#endif\n-CND(B1200, \"1200 bps\")\n-\n-#ifndef B1800\n-# define B1800 -1\n-#endif\n-CND(B1800, \"1800 bps\")\n-\n-#ifndef B2400\n-# define B2400 -1\n-#endif\n-CND(B2400, \"2400 bps\")\n-\n-#ifndef B4800\n-# define B4800 -1\n-#endif\n-CND(B4800, \"4800 bps\")\n-\n-#ifndef B9600\n-# define B9600 -1\n-#endif\n-CND(B9600, \"9600 bps\")\n-\n-#ifndef B19200\n-# define B19200 -1\n-#endif\n-CND(B19200, \"19200 bps\")\n-\n-#ifndef B38400\n-# define B38400 -1\n-#endif\n-CND(B38400, \"38400 bps\")\n-\n-#ifndef B57600\n-# define B57600 -1\n-#endif\n-CND(B57600, \"57600 bps\")\n-\n-#ifndef B115200\n-# define B115200 -1\n-#endif\n-CND(B115200, \"115200 bps\")\n-\n-#ifndef B230400\n-# define B230400 -1\n-#endif\n-CND(B230400, \"230400 bps\")\n-\n-#ifndef B460800\n-# define B460800 -1\n-#endif\n-CND(B460800, \"460800 bps\")\n-\n-#ifndef B500000\n-# define B500000 -1\n-#endif\n-CND(B500000, \"500000 bps\")\n-\n-#ifndef B576000\n-# define B576000 -1\n-#endif\n-CND(B576000, \"576000 bps\")\n-\n-#ifndef B921600\n-# define B921600 -1\n-#endif\n-CND(B921600, \"921600 bps\")\n-\n-#ifndef B1000000\n-# define B1000000 -1\n-#endif\n-CND(B1000000, \"1000000 bps\")\n-\n-#ifndef B1152000\n-# define B1152000 -1\n-#endif\n-CND(B1152000, \"1152000 bps\")\n-\n-#ifndef B1500000\n-# define B1500000 -1\n-#endif\n-CND(B1500000, \"1500000 bps\")\n-\n-#ifndef B2000000\n-# define B2000000 -1\n-#endif\n-CND(B2000000, \"2000000 bps\")\n-\n-#ifndef B2500000\n-# define B2500000 -1\n-#endif\n-CND(B2500000, \"2500000 bps\")\n-\n-#ifndef B3000000\n-# define B3000000 -1\n-#endif\n-CND(B3000000, \"3000000 bps\")\n-\n-#ifndef B3500000\n-# define B3500000 -1\n-#endif\n-CND(B3500000, \"3500000 bps\")\n-\n-#ifndef B4000000\n-# define B4000000 -1\n-#endif\n-CND(B4000000, \"4000000 bps\")\n-\n-_NL\n-TXT(\"   ---------------------------------\")\n-TXT(\"   -- Terminal control characters --\")\n-TXT(\"   ---------------------------------\")\n-_NL\n-\n-#ifndef VINTR\n-# define VINTR -1\n-#endif\n-CND(VINTR, \"Interrupt\")\n-\n-#ifndef VQUIT\n-# define VQUIT -1\n-#endif\n-CND(VQUIT, \"Quit\")\n-\n-#ifndef VERASE\n-# define VERASE -1\n-#endif\n-CND(VERASE, \"Erase\")\n-\n-#ifndef VKILL\n-# define VKILL -1\n-#endif\n-CND(VKILL, \"Kill\")\n-\n-#ifndef VEOF\n-# define VEOF -1\n-#endif\n-CND(VEOF, \"EOF\")\n-\n-#ifndef VTIME\n-# define VTIME -1\n-#endif\n-CND(VTIME, \"Read timeout\")\n-\n-#ifndef VMIN\n-# define VMIN -1\n-#endif\n-CND(VMIN, \"Read min chars\")\n-\n-#ifndef VSWTC\n-# define VSWTC -1\n-#endif\n-CND(VSWTC, \"Switch\")\n-\n-#ifndef VSTART\n-# define VSTART -1\n-#endif\n-CND(VSTART, \"Flow control start\")\n-\n-#ifndef VSTOP\n-# define VSTOP -1\n-#endif\n-CND(VSTOP, \"Flow control stop\")\n-\n-#ifndef VSUSP\n-# define VSUSP -1\n-#endif\n-CND(VSUSP, \"Suspend\")\n-\n-#ifndef VEOL\n-# define VEOL -1\n-#endif\n-CND(VEOL, \"EOL\")\n-\n-#ifndef VREPRINT\n-# define VREPRINT -1\n-#endif\n-CND(VREPRINT, \"Reprint unread\")\n-\n-#ifndef VDISCARD\n-# define VDISCARD -1\n-#endif\n-CND(VDISCARD, \"Discard pending\")\n-\n-#ifndef VWERASE\n-# define VWERASE -1\n-#endif\n-CND(VWERASE, \"Word erase\")\n-\n-#ifndef VLNEXT\n-# define VLNEXT -1\n-#endif\n-CND(VLNEXT, \"Literal next\")\n-\n-#ifndef VEOL2\n-# define VEOL2 -1\n-#endif\n-CND(VEOL2, \"Alternative EOL\")\n-\n-#endif /* !defined(__vxworks) && !defined(__VMS) */\n-\n-_NL\n-TXT(\"   --------------\")\n-TXT(\"   -- Families --\")\n-TXT(\"   --------------\")\n-_NL\n-\n-#ifndef AF_INET\n-# define AF_INET -1\n-#endif\n-CND(AF_INET, \"IPv4 address family\")\n-\n-#ifndef AF_INET6\n-# define AF_INET6 -1\n-#else\n-# define HAVE_AF_INET6 1\n-#endif\n-CND(AF_INET6, \"IPv6 address family\")\n-_NL\n-TXT(\"   ------------------\")\n-TXT(\"   -- Socket modes --\")\n-TXT(\"   ------------------\")\n-_NL\n-\n-#ifndef SOCK_STREAM\n-# define SOCK_STREAM -1\n-#endif\n-CND(SOCK_STREAM, \"Stream socket\")\n-\n-#ifndef SOCK_DGRAM\n-# define SOCK_DGRAM -1\n-#endif\n-CND(SOCK_DGRAM, \"Datagram socket\")\n-_NL\n-TXT(\"   ------------------\")\n-TXT(\"   -- Errno values --\")\n-TXT(\"   ------------------\")\n-_NL\n-\n-#ifndef EACCES\n-# define EACCES -1\n-#endif\n-CND(EACCES, \"Permission denied\")\n-\n-#ifndef EADDRINUSE\n-# define EADDRINUSE -1\n-#endif\n-CND(EADDRINUSE, \"Address already in use\")\n-\n-#ifndef EADDRNOTAVAIL\n-# define EADDRNOTAVAIL -1\n-#endif\n-CND(EADDRNOTAVAIL, \"Cannot assign address\")\n-\n-#ifndef EAFNOSUPPORT\n-# define EAFNOSUPPORT -1\n-#endif\n-CND(EAFNOSUPPORT, \"Addr family not supported\")\n-\n-#ifndef EAGAIN\n-# define EAGAIN -1\n-#endif\n-CND(EAGAIN, \"Try again\")\n-\n-#ifndef EALREADY\n-# define EALREADY -1\n-#endif\n-CND(EALREADY, \"Operation in progress\")\n-\n-#ifndef EBADF\n-# define EBADF -1\n-#endif\n-CND(EBADF, \"Bad file descriptor\")\n-\n-#ifndef ECONNABORTED\n-# define ECONNABORTED -1\n-#endif\n-CND(ECONNABORTED, \"Connection aborted\")\n-\n-#ifndef ECONNREFUSED\n-# define ECONNREFUSED -1\n-#endif\n-CND(ECONNREFUSED, \"Connection refused\")\n-\n-#ifndef ECONNRESET\n-# define ECONNRESET -1\n-#endif\n-CND(ECONNRESET, \"Connection reset by peer\")\n-\n-#ifndef EDESTADDRREQ\n-# define EDESTADDRREQ -1\n-#endif\n-CND(EDESTADDRREQ, \"Destination addr required\")\n-\n-#ifndef EFAULT\n-# define EFAULT -1\n-#endif\n-CND(EFAULT, \"Bad address\")\n-\n-#ifndef EHOSTDOWN\n-# define EHOSTDOWN -1\n-#endif\n-CND(EHOSTDOWN, \"Host is down\")\n-\n-#ifndef EHOSTUNREACH\n-# define EHOSTUNREACH -1\n-#endif\n-CND(EHOSTUNREACH, \"No route to host\")\n-\n-#ifndef EINPROGRESS\n-# define EINPROGRESS -1\n-#endif\n-CND(EINPROGRESS, \"Operation now in progress\")\n-\n-#ifndef EINTR\n-# define EINTR -1\n-#endif\n-CND(EINTR, \"Interrupted system call\")\n-\n-#ifndef EINVAL\n-# define EINVAL -1\n-#endif\n-CND(EINVAL, \"Invalid argument\")\n-\n-#ifndef EIO\n-# define EIO -1\n-#endif\n-CND(EIO, \"Input output error\")\n-\n-#ifndef EISCONN\n-# define EISCONN -1\n-#endif\n-CND(EISCONN, \"Socket already connected\")\n-\n-#ifndef ELOOP\n-# define ELOOP -1\n-#endif\n-CND(ELOOP, \"Too many symbolic links\")\n-\n-#ifndef EMFILE\n-# define EMFILE -1\n-#endif\n-CND(EMFILE, \"Too many open files\")\n-\n-#ifndef EMSGSIZE\n-# define EMSGSIZE -1\n-#endif\n-CND(EMSGSIZE, \"Message too long\")\n-\n-#ifndef ENAMETOOLONG\n-# define ENAMETOOLONG -1\n-#endif\n-CND(ENAMETOOLONG, \"Name too long\")\n-\n-#ifndef ENETDOWN\n-# define ENETDOWN -1\n-#endif\n-CND(ENETDOWN, \"Network is down\")\n-\n-#ifndef ENETRESET\n-# define ENETRESET -1\n-#endif\n-CND(ENETRESET, \"Disconn. on network reset\")\n-\n-#ifndef ENETUNREACH\n-# define ENETUNREACH -1\n-#endif\n-CND(ENETUNREACH, \"Network is unreachable\")\n-\n-#ifndef ENOBUFS\n-# define ENOBUFS -1\n-#endif\n-CND(ENOBUFS, \"No buffer space available\")\n-\n-#ifndef ENOENT\n-# define ENOENT -1\n-#endif\n-CND(ENOENT, \"File not found\")\n-\n-#ifndef ENOMEM\n-# define ENOMEM -1\n-#endif\n-CND(ENOMEM, \"Out of memory\")\n-\n-#ifndef ENOPROTOOPT\n-# define ENOPROTOOPT -1\n-#endif\n-CND(ENOPROTOOPT, \"Protocol not available\")\n-\n-#ifndef ENOTCONN\n-# define ENOTCONN -1\n-#endif\n-CND(ENOTCONN, \"Socket not connected\")\n-\n-#ifndef ENOTSOCK\n-# define ENOTSOCK -1\n-#endif\n-CND(ENOTSOCK, \"Operation on non socket\")\n-\n-#ifndef EOPNOTSUPP\n-# define EOPNOTSUPP -1\n-#endif\n-CND(EOPNOTSUPP, \"Operation not supported\")\n-\n-#ifndef EPFNOSUPPORT\n-# define EPFNOSUPPORT -1\n-#endif\n-CND(EPFNOSUPPORT, \"Unknown protocol family\")\n-\n-#ifndef EPROTONOSUPPORT\n-# define EPROTONOSUPPORT -1\n-#endif\n-CND(EPROTONOSUPPORT, \"Unknown protocol\")\n-\n-#ifndef EPROTOTYPE\n-# define EPROTOTYPE -1\n-#endif\n-CND(EPROTOTYPE, \"Unknown protocol type\")\n-\n-#ifndef ESHUTDOWN\n-# define ESHUTDOWN -1\n-#endif\n-CND(ESHUTDOWN, \"Cannot send once shutdown\")\n-\n-#ifndef ESOCKTNOSUPPORT\n-# define ESOCKTNOSUPPORT -1\n-#endif\n-CND(ESOCKTNOSUPPORT, \"Socket type not supported\")\n-\n-#ifndef ETIMEDOUT\n-# define ETIMEDOUT -1\n-#endif\n-CND(ETIMEDOUT, \"Connection timed out\")\n-\n-#ifndef ETOOMANYREFS\n-# define ETOOMANYREFS -1\n-#endif\n-CND(ETOOMANYREFS, \"Too many references\")\n-\n-#ifndef EWOULDBLOCK\n-# define EWOULDBLOCK -1\n-#endif\n-CND(EWOULDBLOCK, \"Operation would block\")\n-_NL\n-TXT(\"   -----------------\")\n-TXT(\"   -- Host errors --\")\n-TXT(\"   -----------------\")\n-_NL\n-\n-#ifndef HOST_NOT_FOUND\n-# define HOST_NOT_FOUND -1\n-#endif\n-CND(HOST_NOT_FOUND, \"Unknown host\")\n-\n-#ifndef TRY_AGAIN\n-# define TRY_AGAIN -1\n-#endif\n-CND(TRY_AGAIN, \"Host name lookup failure\")\n-\n-#ifndef NO_DATA\n-# define NO_DATA -1\n-#endif\n-CND(NO_DATA, \"No data record for name\")\n-\n-#ifndef NO_RECOVERY\n-# define NO_RECOVERY -1\n-#endif\n-CND(NO_RECOVERY, \"Non recoverable errors\")\n-_NL\n-TXT(\"   ----------------------\")\n-TXT(\"   -- Ioctl operatings --\")\n-TXT(\"   ----------------------\")\n-_NL\n-\n-#ifndef FIONBIO\n-# define FIONBIO -1\n-#endif\n-CND(FIONBIO, \"Set/clear non-blocking io\")\n-\n-#ifndef FIONREAD\n-# define FIONREAD -1\n-#endif\n-CND(FIONREAD, \"How many bytes to read\")\n-_NL\n-TXT(\"   --------------------\")\n-TXT(\"   -- Shutdown modes --\")\n-TXT(\"   --------------------\")\n-_NL\n-\n-#ifndef SHUT_RD\n-# define SHUT_RD -1\n-#endif\n-CND(SHUT_RD, \"No more recv\")\n-\n-#ifndef SHUT_WR\n-# define SHUT_WR -1\n-#endif\n-CND(SHUT_WR, \"No more send\")\n-\n-#ifndef SHUT_RDWR\n-# define SHUT_RDWR -1\n-#endif\n-CND(SHUT_RDWR, \"No more recv/send\")\n-_NL\n-TXT(\"   ---------------------\")\n-TXT(\"   -- Protocol levels --\")\n-TXT(\"   ---------------------\")\n-_NL\n-\n-#ifndef SOL_SOCKET\n-# define SOL_SOCKET -1\n-#endif\n-CND(SOL_SOCKET, \"Options for socket level\")\n-\n-#ifndef IPPROTO_IP\n-# define IPPROTO_IP -1\n-#endif\n-CND(IPPROTO_IP, \"Dummy protocol for IP\")\n-\n-#ifndef IPPROTO_UDP\n-# define IPPROTO_UDP -1\n-#endif\n-CND(IPPROTO_UDP, \"UDP\")\n-\n-#ifndef IPPROTO_TCP\n-# define IPPROTO_TCP -1\n-#endif\n-CND(IPPROTO_TCP, \"TCP\")\n-_NL\n-TXT(\"   -------------------\")\n-TXT(\"   -- Request flags --\")\n-TXT(\"   -------------------\")\n-_NL\n-\n-#ifndef MSG_OOB\n-# define MSG_OOB -1\n-#endif\n-CND(MSG_OOB, \"Process out-of-band data\")\n-\n-#ifndef MSG_PEEK\n-# define MSG_PEEK -1\n-#endif\n-CND(MSG_PEEK, \"Peek at incoming data\")\n-\n-#ifndef MSG_EOR\n-# define MSG_EOR -1\n-#endif\n-CND(MSG_EOR, \"Send end of record\")\n-\n-#ifndef MSG_WAITALL\n-# define MSG_WAITALL -1\n-#endif\n-CND(MSG_WAITALL, \"Wait for full reception\")\n-\n-#ifndef MSG_NOSIGNAL\n-# define MSG_NOSIGNAL -1\n-#endif\n-CND(MSG_NOSIGNAL, \"No SIGPIPE on send\")\n-\n-#ifdef __linux__\n-# define MSG_Forced_Flags \"MSG_NOSIGNAL\"\n-#else\n-# define MSG_Forced_Flags \"0\"\n-#endif\n-CN_(MSG_Forced_Flags, \"\")\n-TXT(\"   --  Flags set on all send(2) calls\")\n-\n-_NL\n-TXT(\"   --------------------\")\n-TXT(\"   -- Socket options --\")\n-TXT(\"   --------------------\")\n-_NL\n-\n-#ifndef TCP_NODELAY\n-# define TCP_NODELAY -1\n-#endif\n-CND(TCP_NODELAY, \"Do not coalesce packets\")\n-\n-#ifndef SO_REUSEADDR\n-# define SO_REUSEADDR -1\n-#endif\n-CND(SO_REUSEADDR, \"Bind reuse local address\")\n-\n-#ifndef SO_REUSEPORT\n-# define SO_REUSEPORT -1\n-#endif\n-CND(SO_REUSEPORT, \"Bind reuse port number\")\n-\n-#ifndef SO_KEEPALIVE\n-# define SO_KEEPALIVE -1\n-#endif\n-CND(SO_KEEPALIVE, \"Enable keep-alive msgs\")\n-\n-#ifndef SO_LINGER\n-# define SO_LINGER -1\n-#endif\n-CND(SO_LINGER, \"Defer close to flush data\")\n-\n-#ifndef SO_BROADCAST\n-# define SO_BROADCAST -1\n-#endif\n-CND(SO_BROADCAST, \"Can send broadcast msgs\")\n-\n-#ifndef SO_SNDBUF\n-# define SO_SNDBUF -1\n-#endif\n-CND(SO_SNDBUF, \"Set/get send buffer size\")\n-\n-#ifndef SO_RCVBUF\n-# define SO_RCVBUF -1\n-#endif\n-CND(SO_RCVBUF, \"Set/get recv buffer size\")\n-\n-#ifndef SO_SNDTIMEO\n-# define SO_SNDTIMEO -1\n-#endif\n-CND(SO_SNDTIMEO, \"Emission timeout\")\n-\n-#ifndef SO_RCVTIMEO\n-# define SO_RCVTIMEO -1\n-#endif\n-CND(SO_RCVTIMEO, \"Reception timeout\")\n-\n-#ifndef SO_ERROR\n-# define SO_ERROR -1\n-#endif\n-CND(SO_ERROR, \"Get/clear error status\")\n-\n-#ifndef IP_MULTICAST_IF\n-# define IP_MULTICAST_IF -1\n-#endif\n-CND(IP_MULTICAST_IF, \"Set/get mcast interface\")\n-\n-#ifndef IP_MULTICAST_TTL\n-# define IP_MULTICAST_TTL -1\n-#endif\n-CND(IP_MULTICAST_TTL, \"Set/get multicast TTL\")\n-\n-#ifndef IP_MULTICAST_LOOP\n-# define IP_MULTICAST_LOOP -1\n-#endif\n-CND(IP_MULTICAST_LOOP, \"Set/get mcast loopback\")\n-\n-#ifndef IP_ADD_MEMBERSHIP\n-# define IP_ADD_MEMBERSHIP -1\n-#endif\n-CND(IP_ADD_MEMBERSHIP, \"Join a multicast group\")\n-\n-#ifndef IP_DROP_MEMBERSHIP\n-# define IP_DROP_MEMBERSHIP -1\n-#endif\n-CND(IP_DROP_MEMBERSHIP, \"Leave a multicast group\")\n-\n-#ifndef IP_PKTINFO\n-# define IP_PKTINFO -1\n-#endif\n-CND(IP_PKTINFO, \"Get datagram info\")\n-\n-_NL\n-TXT(\"   -------------------\")\n-TXT(\"   -- System limits --\")\n-TXT(\"   -------------------\")\n-_NL\n-\n-#ifndef IOV_MAX\n-# define IOV_MAX INT_MAX\n-#endif\n-CND(IOV_MAX, \"Maximum writev iovcnt\")\n-\n-_NL\n-TXT(\"   ----------------------\")\n-TXT(\"   -- Type definitions --\")\n-TXT(\"   ----------------------\")\n-_NL\n-\n-{\n-  struct timeval tv;\n-TXT(\"   --  Sizes (in bytes) of the components of struct timeval\")\n-_NL\n-#define SIZEOF_tv_sec (sizeof tv.tv_sec)\n-CND(SIZEOF_tv_sec, \"tv_sec\")\n-#define SIZEOF_tv_usec (sizeof tv.tv_usec)\n-CND(SIZEOF_tv_usec, \"tv_usec\")\n-}\n-_NL\n-TXT(\"   --  Sizes of protocol specific address types (for sockaddr.sa_len)\")\n-_NL\n-#define SIZEOF_sockaddr_in (sizeof (struct sockaddr_in))\n-CND(SIZEOF_sockaddr_in, \"struct sockaddr_in\")\n-#ifdef HAVE_AF_INET6\n-# define SIZEOF_sockaddr_in6 (sizeof (struct sockaddr_in6))\n-#else\n-# define SIZEOF_sockaddr_in6 0\n-#endif\n-CND(SIZEOF_sockaddr_in6, \"struct sockaddr_in6\")\n-_NL\n-TXT(\"   --  Size of file descriptor sets\")\n-_NL\n-#define SIZEOF_fd_set (sizeof (fd_set))\n-CND(SIZEOF_fd_set, \"fd_set\");\n-_NL\n-TXT(\"   --  Fields of struct hostent\")\n-_NL\n-#ifdef __MINGW32__\n-# define h_addrtype_t \"short\"\n-# define h_length_t   \"short\"\n-#else\n-# define h_addrtype_t \"int\"\n-# define h_length_t   \"int\"\n-#endif\n-TXT(\"   subtype H_Addrtype_T is Interfaces.C.\" h_addrtype_t \";\")\n-TXT(\"   subtype H_Length_T   is Interfaces.C.\" h_length_t \";\")\n-_NL\n-TXT(\"   ----------------------------------------\")\n-TXT(\"   -- Properties of supported interfaces --\")\n-TXT(\"   ----------------------------------------\")\n-_NL\n-\n-CND(Need_Netdb_Buffer, \"Need buffer for Netdb ops\")\n-CND(Has_Sockaddr_Len,  \"Sockaddr has sa_len field\")\n-_NL\n-TXT(\"   Thread_Blocking_IO : constant Boolean := True;\")\n-TXT(\"   --  Set False for contexts where socket i/o are process blocking\")\n-\n-#ifdef __vxworks\n-_NL\n-TXT(\"   --------------------------------\")\n-TXT(\"   -- VxWorks-specific constants --\")\n-TXT(\"   --------------------------------\")\n-_NL\n-TXT(\"   --  These constants may be used only within the VxWorks version of\")\n-TXT(\"   --  GNAT.Sockets.Thin.\")\n-_NL\n-\n-CND(OK,    \"VxWorks generic success\")\n-CND(ERROR, \"VxWorks generic error\")\n-#endif\n-\n-#ifdef __MINGW32__\n-_NL\n-TXT(\"   ------------------------------\")\n-TXT(\"   -- MinGW-specific constants --\")\n-TXT(\"   ------------------------------\")\n-_NL\n-TXT(\"   --  These constants may be used only within the MinGW version of\")\n-TXT(\"   --  GNAT.Sockets.Thin.\")\n-_NL\n-\n-CND(WSASYSNOTREADY,     \"System not ready\")\n-CND(WSAVERNOTSUPPORTED, \"Version not supported\")\n-CND(WSANOTINITIALISED,  \"Winsock not initialized\")\n-CND(WSAEDISCON,         \"Disconnected\")\n-#endif\n-\n-_NL\n-TXT(\"end System.OS_Constants;\")\n-\n-  output ();\n-  return 0;\n-}\n-\n-void\n-output (void) {\n-  int text_max = 0, value_max = 0, l;\n-  struct line *p;\n-  char fmt[64];\n-#define UPD_MAX(x) do { \\\n-  l = strlen (p->x); \\\n-  if (l > x ## _max) x ## _max = l; \\\n-} while (0)\n-\n-  for (p = first; p != NULL; p = p->next) {\n-    if (p->value != NULL) {\n-      UPD_MAX(text);\n-      if (p->kind == NUM)\n-        UPD_MAX(value);\n-    }\n-  }\n-  sprintf (fmt, \"   %%-%ds : constant := %%%ds;%%s%%s\\n\",\n-    text_max, value_max);\n-\n-  for (p = first; p != NULL; p = p->next) {\n-    if (p->value == NULL) {\n-      printf (\"%s\\n\", p->text);\n-    } else {\n-      char *comment_sep = (strlen (p->comment) > 0)\n-                          ? \" --  \" : \"\";\n-      printf (fmt, p->text, p->value, comment_sep, p->comment);\n-    }\n-  }\n-}\n-\n-char *\n-f_itoa (char *fmt, int n) {\n-  char buf[32], *ret;\n-  sprintf (buf, fmt, n);\n-  ret = malloc (strlen (buf) + 1);\n-  if (ret != NULL)\n-    strcpy (ret, buf);\n-  return ret;\n-}\n-\n-void\n-add_line (char *_text, char *_value, char *_comment, kind_t _kind) {\n-  struct line *l = (struct line *) malloc (sizeof (struct line));\n-\n-  l->text    = _text;\n-  l->value   = _value;\n-  l->comment = _comment;\n-  l->kind    = _kind;\n-  l->next    = NULL;\n-\n-  if (last == NULL)\n-    first = last = l;\n-  else {\n-    last->next = l;\n-    last = l;\n-  }\n-}"}]}