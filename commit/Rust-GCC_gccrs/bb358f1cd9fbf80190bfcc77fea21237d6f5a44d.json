{"sha": "bb358f1cd9fbf80190bfcc77fea21237d6f5a44d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIzNThmMWNkOWZiZjgwMTkwYmZjYzc3ZmVhMjEyMzdkNmY1YTQ0ZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-04-30T08:11:42Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-04-30T08:11:42Z"}, "message": "i386.c (ix86_handle_struct_attribute): Use the proper predicate to discriminate types.\n\n\t* config/i386/i386.c (ix86_handle_struct_attribute): Use the proper\n\tpredicate to discriminate types.\nada/\n\t* gcc-interface/utils.c (finish_record_type): Force the traditional GCC\n\tlayout for bitfields on the type if it is packed or has a representation\n\tclause and an alternate layout is available.\n\nFrom-SVN: r186958", "tree": {"sha": "cc1f10d4695dbe5e903294475a85da745e09e326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc1f10d4695dbe5e903294475a85da745e09e326"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d/comments", "author": null, "committer": null, "parents": [{"sha": "e6c69da096bf607239e04f97ad2a402bcac924c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6c69da096bf607239e04f97ad2a402bcac924c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6c69da096bf607239e04f97ad2a402bcac924c0"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "86a2f2d01dbae4c551d6c4e5138da371a3a657bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb358f1cd9fbf80190bfcc77fea21237d6f5a44d", "patch": "@@ -1,3 +1,8 @@\n+2012-04-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/i386/i386.c (ix86_handle_struct_attribute): Use the proper\n+\tpredicate to discriminate types.\n+\n 2012-04-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* doc/invoke.texi (Wmissing-format-attribute): Document as an"}, {"sha": "838e4d0f6a8acc54accf32c20f624dd7abba6eb7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bb358f1cd9fbf80190bfcc77fea21237d6f5a44d", "patch": "@@ -1,3 +1,9 @@\n+2012-04-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c (finish_record_type): Force the traditional GCC\n+\tlayout for bitfields on the type if it is packed or has a representation\n+\tclause and an alternate layout is available.\n+\n 2012-04-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/gigi.h (mark_out_of_scope): Delete."}, {"sha": "03d7cb011aab4c31dfd44210ef3cd35294755cb0", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=bb358f1cd9fbf80190bfcc77fea21237d6f5a44d", "patch": "@@ -721,6 +721,19 @@ finish_record_type (tree record_type, tree field_list, int rep_level,\n \t case where there is a rep clause but all fields have errors and\n \t no longer have a position.  */\n       TYPE_SIZE (record_type) = 0;\n+\n+      /* Ensure we use the traditional GCC layout for bitfields when we need\n+\t to pack the record type or have a representation clause.  The other\n+\t possible layout (Microsoft C compiler), if available, would prevent\n+\t efficient packing in almost all cases.  */\n+#ifdef TARGET_MS_BITFIELD_LAYOUT\n+      if (TARGET_MS_BITFIELD_LAYOUT && TYPE_PACKED (record_type))\n+\tdecl_attributes (&record_type,\n+\t\t\t tree_cons (get_identifier (\"gcc_struct\"),\n+\t\t\t\t    NULL_TREE, NULL_TREE),\n+\t\t\t ATTR_FLAG_TYPE_IN_PLACE);\n+#endif\n+\n       layout_type (record_type);\n     }\n "}, {"sha": "903683e3500e6c8e4cb3ce03fd181e7eab9a6711", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb358f1cd9fbf80190bfcc77fea21237d6f5a44d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=bb358f1cd9fbf80190bfcc77fea21237d6f5a44d", "patch": "@@ -32465,8 +32465,7 @@ ix86_handle_struct_attribute (tree *node, tree name,\n   else\n     type = node;\n \n-  if (!(type && (TREE_CODE (*type) == RECORD_TYPE\n-\t\t || TREE_CODE (*type) == UNION_TYPE)))\n+  if (!(type && RECORD_OR_UNION_TYPE_P (*type)))\n     {\n       warning (OPT_Wattributes, \"%qE attribute ignored\",\n \t       name);"}]}