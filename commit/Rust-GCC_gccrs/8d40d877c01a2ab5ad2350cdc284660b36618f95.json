{"sha": "8d40d877c01a2ab5ad2350cdc284660b36618f95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ0MGQ4NzdjMDFhMmFiNWFkMjM1MGNkYzI4NDY2MGIzNjYxOGY5NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-09T20:38:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-09T20:38:54Z"}, "message": "* decl.c (decls_match): Check versions later.\n\nFrom-SVN: r195921", "tree": {"sha": "fca52d3558017f9fc27923b66d71ab8fdbdb62e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fca52d3558017f9fc27923b66d71ab8fdbdb62e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d40d877c01a2ab5ad2350cdc284660b36618f95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d40d877c01a2ab5ad2350cdc284660b36618f95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d40d877c01a2ab5ad2350cdc284660b36618f95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d40d877c01a2ab5ad2350cdc284660b36618f95/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d982e0246a48b79c822ee7e06c074f2041b6cea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d982e0246a48b79c822ee7e06c074f2041b6cea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d982e0246a48b79c822ee7e06c074f2041b6cea7"}], "stats": {"total": 61, "additions": 31, "deletions": 30}, "files": [{"sha": "26e130c9db14fa02cf31de15e1c493d212e27e67", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d40d877c01a2ab5ad2350cdc284660b36618f95/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d40d877c01a2ab5ad2350cdc284660b36618f95/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8d40d877c01a2ab5ad2350cdc284660b36618f95", "patch": "@@ -1,5 +1,7 @@\n 2013-02-09  Jason Merrill  <jason@redhat.com>\n \n+\t* decl.c (decls_match): Check versions later.\n+\n \tPR c++/56238\n \t* pt.c (build_non_dependent_expr): Don't try to fold\n \tinstantiation-dependent expressions."}, {"sha": "5a9ad2c3743ae761218af32acaa0d4c53f362c79", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 29, "deletions": 30, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d40d877c01a2ab5ad2350cdc284660b36618f95/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d40d877c01a2ab5ad2350cdc284660b36618f95/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=8d40d877c01a2ab5ad2350cdc284660b36618f95", "patch": "@@ -976,36 +976,6 @@ decls_match (tree newdecl, tree olddecl)\n       if (t1 != t2)\n \treturn 0;\n \n-      /* The decls dont match if they correspond to two different versions\n-\t of the same function.   Disallow extern \"C\" functions to be\n-\t versions for now.  */\n-      if (compparms (p1, p2)\n-\t  && same_type_p (TREE_TYPE (f1), TREE_TYPE (f2))\n-\t  && !DECL_EXTERN_C_P (newdecl)\n-\t  && !DECL_EXTERN_C_P (olddecl)\n-\t  && targetm.target_option.function_versions (newdecl, olddecl))\n-\t{\n-\t  /* Mark functions as versions if necessary.  Modify the mangled decl\n-\t     name if necessary.  */\n-\t  if (DECL_FUNCTION_VERSIONED (newdecl)\n-\t      && DECL_FUNCTION_VERSIONED (olddecl))\n-\t    return 0;\n-\t  if (!DECL_FUNCTION_VERSIONED (newdecl))\n-\t    {\n-\t      DECL_FUNCTION_VERSIONED (newdecl) = 1;\n-\t      if (DECL_ASSEMBLER_NAME_SET_P (newdecl))\n-\t        mangle_decl (newdecl);\n-\t    }\n-\t  if (!DECL_FUNCTION_VERSIONED (olddecl))\n-\t    {\n-\t      DECL_FUNCTION_VERSIONED (olddecl) = 1;\n-\t      if (DECL_ASSEMBLER_NAME_SET_P (olddecl))\n-\t       mangle_decl (olddecl);\n-\t    }\n-\t  record_function_versions (olddecl, newdecl);\n-\t  return 0;\n-\t}\n-\n       if (CP_DECL_CONTEXT (newdecl) != CP_DECL_CONTEXT (olddecl)\n \t  && ! (DECL_EXTERN_C_P (newdecl)\n \t\t&& DECL_EXTERN_C_P (olddecl)))\n@@ -1063,6 +1033,35 @@ decls_match (tree newdecl, tree olddecl)\n \t}\n       else\n \ttypes_match = 0;\n+\n+      /* The decls dont match if they correspond to two different versions\n+\t of the same function.   Disallow extern \"C\" functions to be\n+\t versions for now.  */\n+      if (types_match\n+\t  && !DECL_EXTERN_C_P (newdecl)\n+\t  && !DECL_EXTERN_C_P (olddecl)\n+\t  && targetm.target_option.function_versions (newdecl, olddecl))\n+\t{\n+\t  /* Mark functions as versions if necessary.  Modify the mangled decl\n+\t     name if necessary.  */\n+\t  if (DECL_FUNCTION_VERSIONED (newdecl)\n+\t      && DECL_FUNCTION_VERSIONED (olddecl))\n+\t    return 0;\n+\t  if (!DECL_FUNCTION_VERSIONED (newdecl))\n+\t    {\n+\t      DECL_FUNCTION_VERSIONED (newdecl) = 1;\n+\t      if (DECL_ASSEMBLER_NAME_SET_P (newdecl))\n+\t        mangle_decl (newdecl);\n+\t    }\n+\t  if (!DECL_FUNCTION_VERSIONED (olddecl))\n+\t    {\n+\t      DECL_FUNCTION_VERSIONED (olddecl) = 1;\n+\t      if (DECL_ASSEMBLER_NAME_SET_P (olddecl))\n+\t       mangle_decl (olddecl);\n+\t    }\n+\t  record_function_versions (olddecl, newdecl);\n+\t  return 0;\n+\t}\n     }\n   else if (TREE_CODE (newdecl) == TEMPLATE_DECL)\n     {"}]}