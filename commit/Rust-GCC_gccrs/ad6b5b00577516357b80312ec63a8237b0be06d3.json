{"sha": "ad6b5b00577516357b80312ec63a8237b0be06d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ2YjViMDA1Nzc1MTYzNTdiODAzMTJlYzYzYTgyMzdiMGJlMDZkMw==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-03-02T22:39:38Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-03-02T22:39:38Z"}, "message": "gnatfind.adb, [...]: Fix argument parsing typos.\n\ngcc/ada\n\n\t* gnatfind.adb, gnatxref.adb: Fix argument parsing typos.\n\t* s-auxdec-empty.adb, s-auxdec.adb: Fix typos in copyright\n\tstatement.\n\t* a-ngcoar.adb, a-ngrear.adb, g-awk.adb, g-debpoo.adb,\n\tgprep.adb, make.adb, makegpr.adb, par-ch6.adb, prj-nmsc.adb,\n\tsem_attr.adb, sem_ch4.adb, sem_ch8.adb: Fix typos in ada source\n\tcode output strings.\n\t* sem_type.adb, system-vms-ia64.ads, system-vms.ads,\n\tsystem-vms_64.ads: Fix typos in ada source code comments.\n\t* sinfo-cn.adb: Remove incomplete sentence.\n\nFrom-SVN: r132822", "tree": {"sha": "f51f541111caad86b98dda22d8dced7cac13f96d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f51f541111caad86b98dda22d8dced7cac13f96d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad6b5b00577516357b80312ec63a8237b0be06d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad6b5b00577516357b80312ec63a8237b0be06d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad6b5b00577516357b80312ec63a8237b0be06d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad6b5b00577516357b80312ec63a8237b0be06d3/comments", "author": null, "committer": null, "parents": [{"sha": "4d0e46128bcdfbca7f1bcd9bbd6c55fdaaf5722a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d0e46128bcdfbca7f1bcd9bbd6c55fdaaf5722a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d0e46128bcdfbca7f1bcd9bbd6c55fdaaf5722a"}], "stats": {"total": 60, "additions": 35, "deletions": 25}, "files": [{"sha": "d990e1005e835183b6f476a952736a98cf792c46", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -1,5 +1,16 @@\n 2008-03-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n+\t* gnatfind.adb, gnatxref.adb: Fix argument parsing typos.\n+\t* s-auxdec-empty.adb, s-auxdec.adb: Fix typos in copyright\n+\tstatement.\n+\t* a-ngcoar.adb, a-ngrear.adb, g-awk.adb, g-debpoo.adb,\n+\tgprep.adb, make.adb, makegpr.adb, par-ch6.adb, prj-nmsc.adb,\n+\tsem_attr.adb, sem_ch4.adb, sem_ch8.adb: Fix typos in ada source\n+\tcode output strings.\n+\t* sem_type.adb, system-vms-ia64.ads, system-vms.ads,\n+\tsystem-vms_64.ads: Fix typos in ada source code comments.\n+\t* sinfo-cn.adb: Remove incomplete sentence.\n+\n \tPR documentation/15479\n \t* gnat_rm.texi, gnat_ugn.texi: Avoid standalone `non' word.\n "}, {"sha": "4d875283a60f7b23a6e2615c0d9e3be4d72ada95", "filename": "gcc/ada/a-ngcoar.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fa-ngcoar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fa-ngcoar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcoar.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -1194,7 +1194,7 @@ package body Ada.Numerics.Generic_Complex_Arrays is\n             Info     => Info'Access);\n \n          if Info /= 0 then\n-            raise Constraint_Error with \"inverting non-Hermetian matrix\";\n+            raise Constraint_Error with \"inverting non-Hermitian matrix\";\n          end if;\n \n          for J in Values'Range loop"}, {"sha": "30eb1365b1dafd81edc0bc8ef2275b69a1f0081b", "filename": "gcc/ada/a-ngrear.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fa-ngrear.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fa-ngrear.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngrear.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -368,7 +368,7 @@ package body Ada.Numerics.Generic_Real_Arrays is\n    begin\n       if Left'Length (2) /= Right'Length (1) then\n          raise Constraint_Error with\n-            \"incompatible dimensions in matrix-matrix multipication\";\n+            \"incompatible dimensions in matrix-matrix multiplication\";\n       end if;\n \n       gemm (Trans_A => No_Trans'Access,"}, {"sha": "57045bf5661c41a6cd494196c3b00364561e75c0", "filename": "gcc/ada/g-awk.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fg-awk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fg-awk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-awk.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -644,7 +644,7 @@ package body GNAT.AWK is\n       when others =>\n          Raise_With_Info\n            (File_Error'Identity,\n-            \"Error scaning directory \" & Directory\n+            \"Error scanning directory \" & Directory\n             & \" for files \" & Filenames & '.',\n             Session);\n    end Add_Files;"}, {"sha": "dc4896c4621da436372e218ba9732e8b29e3e1a1", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -1388,7 +1388,7 @@ package body GNAT.Debug_Pools is\n \n       if Pool.Marked_Blocks_Deallocated then\n          Put_Line (\"Marked blocks were physically deallocated. This is\");\n-         Put_Line (\"potentially dangereous, and you might want to run\");\n+         Put_Line (\"potentially dangerous, and you might want to run\");\n          Put_Line (\"again with a lower value of Minimum_To_Free\");\n       end if;\n "}, {"sha": "a0e05a88d2df984f34662785ae20b96a193fbc23", "filename": "gcc/ada/gnatfind.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fgnatfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fgnatfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatfind.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -131,7 +131,7 @@ procedure Gnatfind is\n             when 'n'    =>\n                if GNAT.Command_Line.Full_Switch = \"nostdinc\" then\n                   Opt.No_Stdinc := True;\n-               elsif GNAT.Command_Line.Full_Switch = \"nostlib\" then\n+               elsif GNAT.Command_Line.Full_Switch = \"nostdlib\" then\n                   Opt.No_Stdlib := True;\n                end if;\n "}, {"sha": "b2225ff458c8547b16a2397c5c3133a2c122d0e5", "filename": "gcc/ada/gnatxref.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fgnatxref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fgnatxref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatxref.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -114,7 +114,7 @@ procedure Gnatxref is\n             when 'n' =>\n                if GNAT.Command_Line.Full_Switch = \"nostdinc\" then\n                   Opt.No_Stdinc := True;\n-               elsif GNAT.Command_Line.Full_Switch = \"nostlib\" then\n+               elsif GNAT.Command_Line.Full_Switch = \"nostdlib\" then\n                   Opt.No_Stdlib := True;\n                end if;\n "}, {"sha": "a08ea7dce3d5b555ab67c87ed700ef48b81fec7e", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -778,7 +778,7 @@ package body GPrep is\n             elsif Deffile_Name = No_Name then\n                Deffile_Name := Name_Find;\n             else\n-               Fail (\"too many arguments specifed\");\n+               Fail (\"too many arguments specified\");\n             end if;\n          end;\n       end loop;"}, {"sha": "ff14dc40a2967ed1b94e541e842feecabfa7e1c7", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -6716,7 +6716,7 @@ package body Make is\n       --  Test for simultaneity of -i and -D\n \n       if Object_Directory_Path /= null and then In_Place_Mode then\n-         Make_Failed (\"-i and -D cannot be used simutaneously\");\n+         Make_Failed (\"-i and -D cannot be used simultaneously\");\n       end if;\n \n       --  Deal with -C= switch"}, {"sha": "c6c39cd74b0b4502a04978cb122a17c959f103f8", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -3030,7 +3030,7 @@ package body Makegpr is\n \n             else\n                Osint.Fail\n-                 (\"unknow compiler name for language \"\"\",\n+                 (\"unknown compiler name for language \"\"\",\n                   Get_Name_String (Language_Names.Table (For_Language)),\n                   \"\"\"\");\n             end if;"}, {"sha": "b2ae242c5179143b8d56659ced18dbe06c9a5dde", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -280,7 +280,7 @@ package body Ch6 is\n \n          if Token = Tok_New then\n             if not Pf_Flags.Gins then\n-               Error_Msg_SC (\"generic instantation not allowed here!\");\n+               Error_Msg_SC (\"generic instantiation not allowed here!\");\n             end if;\n \n             Scan; -- past NEW\n@@ -1289,7 +1289,7 @@ package body Ch6 is\n       end if;\n \n       if Token = Tok_In then\n-         Error_Msg_SC (\"IN must preceed OUT in parameter mode\");\n+         Error_Msg_SC (\"IN must precede OUT in parameter mode\");\n          Scan; -- past IN\n          Set_In_Present (Node, True);\n       end if;"}, {"sha": "ecad20dd8c23a0de150a0530c301b17e27d3f8f7", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -5171,7 +5171,7 @@ package body Prj.Nmsc is\n                   Error_Msg\n                     (Project, In_Tree,\n                      \"symbol file name { is illegal. \" &\n-                     \"Name canot include directory info.\",\n+                     \"Name cannot include directory info.\",\n                      Lib_Symbol_File.Location);\n                end if;\n             end if;"}, {"sha": "dd380a812a4615276624cebf7529a0f32c844219", "filename": "gcc/ada/s-auxdec-empty.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fs-auxdec-empty.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fs-auxdec-empty.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec-empty.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -13,8 +13,8 @@\n -- ware  Foundation;  either version 2,  Or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n -- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- Or FITNESS FOr A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- fOr  mOre details.  You should have  received  a copy of the GNU General --\n+-- OR FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n -- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n -- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n -- Boston, MA 02110-1301, USA.                                              --"}, {"sha": "ed72432295863d2d0c3e671be90e59a480d20acf", "filename": "gcc/ada/s-auxdec.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fs-auxdec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fs-auxdec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -13,8 +13,8 @@\n -- ware  Foundation;  either version 2,  Or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n -- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- Or FITNESS FOr A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- fOr  mOre details.  You should have  received  a copy of the GNU General --\n+-- OR FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n -- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n -- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n -- Boston, MA 02110-1301, USA.                                              --"}, {"sha": "8fc203333a945e49d7449c850edd6692778208cb", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -2191,7 +2191,7 @@ package body Sem_Attr is\n            and then Warn_On_Redundant_Constructs\n          then\n                Error_Msg_NE\n-                 (\"?redudant attribute, & is its own base type\", N, Typ);\n+                 (\"?redundant attribute, & is its own base type\", N, Typ);\n          end if;\n \n          Set_Etype (N, Base_Type (Entity (P)));"}, {"sha": "49a1699be5133dfbd37bd691cf590701e6805c0c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -1781,7 +1781,7 @@ package body Sem_Ch4 is\n          end loop;\n \n          if Etype (N) = Any_Type then\n-            Error_Msg_N (\"no legal interpetation for indexed component\", N);\n+            Error_Msg_N (\"no legal interpretation for indexed component\", N);\n             Set_Is_Overloaded (N, False);\n          end if;\n "}, {"sha": "609f5575320d6eca9f9cf8c5833b7078237bfe89", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -5257,7 +5257,7 @@ package body Sem_Ch8 is\n                     and then False\n                   then\n                      Error_Msg_N\n-                       (\"applying 'Class to an untagged imcomplete type\"\n+                       (\"applying 'Class to an untagged incomplete type\"\n                          & \" is an obsolescent feature  (RM J.11)\", N);\n                   end if;\n \n@@ -5347,7 +5347,7 @@ package body Sem_Ch8 is\n                  and then Warn_On_Redundant_Constructs\n                then\n                   Error_Msg_NE\n-                    (\"?redudant attribute, & is its own base type\", N, Typ);\n+                    (\"?redundant attribute, & is its own base type\", N, Typ);\n                end if;\n \n                T := Base_Type (Typ);"}, {"sha": "bff22c411bcee4742e9f4231b28a16849390e7d3", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -1515,7 +1515,7 @@ package body Sem_Type is\n       end if;\n \n       --  Check for overloaded CIL convention stuff because the CIL libraries\n-      --  do sick things like Console.WriteLine where it matches\n+      --  do sick things like Console.Write_Line where it matches\n       --  two different overloads, so just pick the first ???\n \n       if Convention (Nam1) = Convention_CIL"}, {"sha": "14f6e11134ffb672ab84b6d19be4d125e9178bf3", "filename": "gcc/ada/sinfo-cn.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsinfo-cn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsinfo-cn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo-cn.adb?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -29,7 +29,6 @@\n --  record discriminant part, such alterations cannot be permitted in a\n --  general manner, but in some specific cases, the fields of related nodes\n --  have been deliberately layed out in a manner that permits such alteration.\n---  that determin\n \n with Atree; use Atree;\n "}, {"sha": "6ba59a3bd3e8968d39917809d2bd9ee63397ac07", "filename": "gcc/ada/system-vms-ia64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsystem-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsystem-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms-ia64.ads?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -250,7 +250,7 @@ private\n \n    ADA_GNAT : constant Boolean := True;\n    pragma Export_Object (ADA_GNAT, \"ADA$GNAT\");\n-   --  Uniquitous global symbol identifing a GNAT compiled image to VMS Debug.\n+   --  Ubiquitous global symbol identifying a GNAT compiled image to VMS Debug.\n    --  Do not remove!\n \n end System;"}, {"sha": "7f95154fa3924c46c25946685735148e8c89cf8d", "filename": "gcc/ada/system-vms.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsystem-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsystem-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms.ads?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -233,7 +233,7 @@ private\n \n    ADA_GNAT : constant Boolean := True;\n    pragma Export_Object (ADA_GNAT, \"ADA$GNAT\");\n-   --  Uniquitous global symbol identifing a GNAT compiled image to VMS Debug.\n+   --  Ubiquitous global symbol identifying a GNAT compiled image to VMS Debug.\n    --  Do not remove!\n \n end System;"}, {"sha": "4830378f2fc7c6c5a8fd84fabd278a10ed132953", "filename": "gcc/ada/system-vms_64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsystem-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6b5b00577516357b80312ec63a8237b0be06d3/gcc%2Fada%2Fsystem-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms_64.ads?ref=ad6b5b00577516357b80312ec63a8237b0be06d3", "patch": "@@ -250,7 +250,7 @@ private\n \n    ADA_GNAT : constant Boolean := True;\n    pragma Export_Object (ADA_GNAT, \"ADA$GNAT\");\n-   --  Uniquitous global symbol identifing a GNAT compiled image to VMS Debug.\n+   --  Ubiquitous global symbol identifying a GNAT compiled image to VMS Debug.\n    --  Do not remove!\n \n end System;"}]}