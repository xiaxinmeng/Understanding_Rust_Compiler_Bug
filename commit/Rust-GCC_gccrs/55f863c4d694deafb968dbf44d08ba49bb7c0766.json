{"sha": "55f863c4d694deafb968dbf44d08ba49bb7c0766", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVmODYzYzRkNjk0ZGVhZmI5NjhkYmY0NGQwOGJhNDliYjdjMDc2Ng==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-08-05T16:47:04Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-08-05T16:47:04Z"}, "message": "Make function_code a 32-bit field\n\nAdding SVE intrinsics on top of the existing AArch64 intrinsics blows\nthe 12-bit function_code in tree_function_decl.  That bitfield has no\nspare bits, but it comes at the end of the structure and is preceded\nby a pointer, so on LP64 hosts there's currently a 32-bit hole at end.\n\nThis patch therefore makes function_code an independent field and\nmoves the bitfield to the 32-bit hole.\n\nI wondered about instead making function_code 16 bits, so that the\npatch leaves 28 spare bits instead of just 12.  That seemed a bit\nshort-term though; I can't guarantee that we won't blow 16 bits once\nthe SVE2 functions are added...\n\nIf we run out of bits again, we can start chomping from the top\nof the enum.  E.g. 24 bits should surely be enough, but there's\nno point paying the overhead of the masking until we need it.\n\n2019-08-05  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-core.h (tree_function_decl): Make function_code an\n\tindependent field.  Group the remaining bitfields into bytes\n\tand move decl_type so that it contines to be at a byte boundary.\n\tLeave 12 bits for future expansion.\n\nFrom-SVN: r274119", "tree": {"sha": "b91b78d2e7f918030c3c7acca8d54fdac5c67f83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b91b78d2e7f918030c3c7acca8d54fdac5c67f83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55f863c4d694deafb968dbf44d08ba49bb7c0766", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f863c4d694deafb968dbf44d08ba49bb7c0766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55f863c4d694deafb968dbf44d08ba49bb7c0766", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f863c4d694deafb968dbf44d08ba49bb7c0766/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "868363d4f52df19d8d5e9529b8906fa25c8d0c95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868363d4f52df19d8d5e9529b8906fa25c8d0c95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/868363d4f52df19d8d5e9529b8906fa25c8d0c95"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "959d15b5041698b63fd2f1d5807e60ec3a761b26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55f863c4d694deafb968dbf44d08ba49bb7c0766/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55f863c4d694deafb968dbf44d08ba49bb7c0766/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55f863c4d694deafb968dbf44d08ba49bb7c0766", "patch": "@@ -1,3 +1,10 @@\n+2019-08-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-core.h (tree_function_decl): Make function_code an\n+\tindependent field.  Group the remaining bitfields into bytes\n+\tand move decl_type so that it contines to be at a byte boundary.\n+\tLeave 12 bits for future expansion.\n+\n 2019-08-05  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gimple-fold.c (gimple_fold_mask_load_store_mem_ref)"}, {"sha": "471956269121f96fbe27d72ff75876e8d65b298d", "filename": "gcc/tree-core.h", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55f863c4d694deafb968dbf44d08ba49bb7c0766/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55f863c4d694deafb968dbf44d08ba49bb7c0766/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=55f863c4d694deafb968dbf44d08ba49bb7c0766", "patch": "@@ -1857,36 +1857,32 @@ struct GTY(()) tree_function_decl {\n   tree vindex;\n \n   /* In a FUNCTION_DECL for which DECL_BUILT_IN holds, this is\n-     DECL_FUNCTION_CODE.  Otherwise unused.\n-     ???  The bitfield needs to be able to hold all target function\n-\t  codes as well.  */\n-  ENUM_BITFIELD(built_in_function) function_code : 12;\n-  ENUM_BITFIELD(built_in_class) built_in_class : 2;\n+     DECL_FUNCTION_CODE.  Otherwise unused.  */\n+  enum built_in_function function_code;\n \n+  ENUM_BITFIELD(built_in_class) built_in_class : 2;\n   unsigned static_ctor_flag : 1;\n   unsigned static_dtor_flag : 1;\n-\n   unsigned uninlinable : 1;\n   unsigned possibly_inlined : 1;\n   unsigned novops_flag : 1;\n   unsigned returns_twice_flag : 1;\n+\n   unsigned malloc_flag : 1;\n   unsigned declared_inline_flag : 1;\n   unsigned no_inline_warning_flag : 1;\n-\n   unsigned no_instrument_function_entry_exit : 1;\n-\n-  /* Align the bitfield to boundary of a byte.  */\n-  ENUM_BITFIELD(function_decl_type) decl_type: 2;\n-\n   unsigned no_limit_stack : 1;\n   unsigned disregard_inline_limits : 1;\n   unsigned pure_flag : 1;\n   unsigned looping_const_or_pure_flag : 1;\n+\n+  /* Align the bitfield to boundary of a byte.  */\n+  ENUM_BITFIELD(function_decl_type) decl_type: 2;\n   unsigned has_debug_args_flag : 1;\n   unsigned versioned_function : 1;\n \n-  /* 0 bits left.  */\n+  /* 12 bits left for future expansion.  */\n };\n \n struct GTY(()) tree_translation_unit_decl {"}]}