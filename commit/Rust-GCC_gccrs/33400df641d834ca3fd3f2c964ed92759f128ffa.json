{"sha": "33400df641d834ca3fd3f2c964ed92759f128ffa", "node_id": "C_kwDOANBUbNoAKDMzNDAwZGY2NDFkODM0Y2EzZmQzZjJjOTY0ZWQ5Mjc1OWYxMjhmZmE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-03-30T10:00:20Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-17T08:25:50Z"}, "message": "[Ada] Restore defensive guard in checks for volatile actuals\n\nWhen flagging names of volatile objects occurring in actual parameters\nit is safer to guard against identifiers without entity. This is\nredundant (because earlier in the resolution of actual parameters we\nalready guard against actuals with Any_Type), but perhaps such\nidentifiers will become allowed in constructs like:\n\n   Subprogram_Call\n     (Actual =>\n        (declare\n           X : Boolean := ...\n             with Annotate (GNATprove, ...)));\n                            ^^^^^^^^^\n\nwhich include an identifier that does not denote any entity.\n\nCode cleanup related to handling of volatile components; behaviour is\nunaffected.\n\ngcc/ada/\n\n\t* sem_res.adb (Flag_Effectively_Volatile_Objects): Restore\n\tredundant guard.", "tree": {"sha": "14e5905daaa447e42c06a1a8ee38a566b3544ff7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14e5905daaa447e42c06a1a8ee38a566b3544ff7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33400df641d834ca3fd3f2c964ed92759f128ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33400df641d834ca3fd3f2c964ed92759f128ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33400df641d834ca3fd3f2c964ed92759f128ffa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33400df641d834ca3fd3f2c964ed92759f128ffa/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de0665fc7f195e12ede10abb6a98b10011e70807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0665fc7f195e12ede10abb6a98b10011e70807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de0665fc7f195e12ede10abb6a98b10011e70807"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "33f445d69b9c2866e2997da5e5da071c30ea3ba9", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33400df641d834ca3fd3f2c964ed92759f128ffa/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33400df641d834ca3fd3f2c964ed92759f128ffa/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=33400df641d834ca3fd3f2c964ed92759f128ffa", "patch": "@@ -3873,7 +3873,8 @@ package body Sem_Res is\n                   --  selector_name in selected_component or as a choice in\n                   --  component_association.\n \n-                  if Is_Object (Id)\n+                  if Present (Id)\n+                    and then Is_Object (Id)\n                     and then Ekind (Id) not in E_Component | E_Discriminant\n                     and then Is_Effectively_Volatile_For_Reading (Id)\n                     and then"}]}