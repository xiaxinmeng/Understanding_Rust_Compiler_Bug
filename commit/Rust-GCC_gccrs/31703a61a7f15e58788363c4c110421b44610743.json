{"sha": "31703a61a7f15e58788363c4c110421b44610743", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE3MDNhNjFhN2YxNWU1ODc4ODM2M2M0YzExMDQyMWI0NDYxMDc0Mw==", "commit": {"author": {"name": "Per Bothner", "email": "pbothner@apple.com", "date": "2003-10-02T07:25:03Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2003-10-02T07:25:03Z"}, "message": "c-opts.c (c_common_post_options): Don't call cpp_find_main_file yet.\n\n\n\t* c-opts.c (c_common_post_options):  Don't call cpp_find_main_file yet.\n\t(c_common_parse_file):  No longer need to call cpp_read_main_file\n\twhen file_index > 0 (as in multi-file or server compiation).\n\t(finish_options):  Change to <built-in> is an LC_ENTER, not LC_RENAME\n\tas this now happens before cpp_push_main_file.\n\t(push_command_line_include):  When done with options, pass LC_LEAVE\n\tinstead of LC_RENAME to cpp_change_file and finally cpp_push_main_file.\n\t(fe_file_change):  Handle NULL new_map, and simplify.\n\nFrom-SVN: r72015", "tree": {"sha": "84e0eefb07ad753e3c78543a164d0520082734c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84e0eefb07ad753e3c78543a164d0520082734c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31703a61a7f15e58788363c4c110421b44610743", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31703a61a7f15e58788363c4c110421b44610743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31703a61a7f15e58788363c4c110421b44610743", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31703a61a7f15e58788363c4c110421b44610743/comments", "author": null, "committer": null, "parents": [{"sha": "4dc299fbbed1b96ca647123280ffd3874666460b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc299fbbed1b96ca647123280ffd3874666460b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dc299fbbed1b96ca647123280ffd3874666460b"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "d31591aba20b433f08fbf58d33150a22a58ae196", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31703a61a7f15e58788363c4c110421b44610743/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31703a61a7f15e58788363c4c110421b44610743/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31703a61a7f15e58788363c4c110421b44610743", "patch": "@@ -24,6 +24,14 @@\n \t* cpphash.h:  Update function declarations.\n \t* cpplib.h:  Update function declarations.\n \n+\t* c-opts.c (c_common_post_options):  Don't call cpp_find_main_file yet.\n+\t(c_common_parse_file):  No longer need to call cpp_read_main_file\n+\twhen file_index > 0 (as in multi-file or server compiation).\n+\t(finish_options):  Change to <built-in> is an LC_ENTER, not LC_RENAME\n+\tas this now happens before cpp_push_main_file.\n+\t(push_command_line_include):  When done with options, pass LC_LEAVE\n+\tinstead of LC_RENAME to cpp_change_file and finally cpp_push_main_file.\n+\t(fe_file_change):  Handle NULL new_map, and simplify.\n \t* cpplex.c (_cpp_get_fresh_line):  Revert my no-longer-needed\n \t08-28 change, since we're never called with a NULL buffer.\n \t(_cpp_lex_direct):  Likewise."}, {"sha": "b15f31ce78e505af5e449d645ba5fa236e77906c", "filename": "gcc/c-opts.c", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31703a61a7f15e58788363c4c110421b44610743/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31703a61a7f15e58788363c4c110421b44610743/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=31703a61a7f15e58788363c4c110421b44610743", "patch": "@@ -1060,7 +1060,7 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n \n /* Post-switch processing.  */\n bool\n-c_common_post_options (const char **pfilename)\n+c_common_post_options (const char **pfilename ATTRIBUTE_UNUSED)\n {\n   /* Canonicalize the input and output filenames.  */\n   if (in_fnames == NULL)\n@@ -1152,9 +1152,6 @@ c_common_post_options (const char **pfilename)\n   cpp_get_callbacks (parse_in)->file_change = cb_file_change;\n   cpp_post_options (parse_in);\n \n-  /* NOTE: we use in_fname here, not the one supplied.  */\n-  *pfilename = cpp_read_main_file (parse_in, in_fnames[0]);\n-\n   saved_lineno = input_line;\n   input_line = 0;\n \n@@ -1221,7 +1218,6 @@ c_common_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n \n \t  /* Reset cpplib's macros and start a new file.  */\n \t  cpp_undef_all (parse_in);\n-\t  cpp_read_main_file (parse_in, in_fnames[file_index]);\n \t}\n \n       finish_options(in_fnames[file_index]);\n@@ -1399,7 +1395,7 @@ finish_options (const char *tif)\n     {\n       size_t i;\n \n-      cpp_change_file (parse_in, LC_RENAME, _(\"<built-in>\"));\n+      cpp_change_file (parse_in, LC_ENTER, _(\"<built-in>\"));\n       cpp_init_builtins (parse_in, flag_hosted);\n       c_cpp_builtins (parse_in);\n \n@@ -1445,31 +1441,32 @@ finish_options (const char *tif)\n \n   include_cursor = 0;\n   this_input_filename = tif;\n+  cpp_find_main_file (parse_in, this_input_filename);\n   push_command_line_include ();\n }\n \n /* Give CPP the next file given by -include, if any.  */\n static void\n push_command_line_include (void)\n {\n-  if (cpp_opts->preprocessed)\n-    return;\n-\n   while (include_cursor < deferred_count)\n     {\n       struct deferred_opt *opt = &deferred_opts[include_cursor++];\n \n-      if (opt->code == OPT_include && cpp_push_include (parse_in, opt->arg))\n+      if (! cpp_opts->preprocessed && opt->code == OPT_include\n+\t  && cpp_push_include (parse_in, opt->arg))\n \treturn;\n     }\n \n   if (include_cursor == deferred_count)\n     {\n+      include_cursor++;\n       /* Restore the line map from <command line>.  */\n-      cpp_change_file (parse_in, LC_RENAME, this_input_filename);\n+      if (! cpp_opts->preprocessed)\n+\tcpp_change_file (parse_in, LC_LEAVE, NULL);\n       /* -Wunused-macros should only warn about macros defined hereafter.  */\n       cpp_opts->warn_unused_macros = warn_unused_macros;\n-      include_cursor++;\n+      cpp_push_main_file (parse_in);\n     }\n }\n \n@@ -1483,7 +1480,7 @@ cb_file_change (cpp_reader *pfile ATTRIBUTE_UNUSED,\n   else\n     fe_file_change (new_map);\n \n-  if (new_map->reason == LC_LEAVE && MAIN_FILE_P (new_map))\n+  if (new_map == 0 || (new_map->reason == LC_LEAVE && MAIN_FILE_P (new_map)))\n     push_command_line_include ();\n }\n "}]}