{"sha": "aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE5YjBhY2E2YTY5NTg3NmRjMDdlMWQ3ZDZlMmRlMGM1MTc3NjEyMQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2003-06-10T19:08:33Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2003-06-10T19:08:33Z"}, "message": "compat-common.h: New file.\n\n\t* gcc.dg/compat/compat-common.h: New file.\n\t* gcc.dg/compat/fp-struct-check.h: Improve debugging output.\n\t* gcc.dg/compat/fp-struct-test-by-value-x.h: Ditto.\n\t* gcc.dg/compat/fp-struct-test-by-value-y.h: Ditto.\n\t* gcc.dg/compat/scalar-by-value-1_main.c: Ditto.\n\t* gcc.dg/compat/scalar-by-value-1_x.c: Ditto.\n\t* gcc.dg/compat/scalar-by-value-1_y.c: Ditto.\n\t* gcc.dg/compat/scalar-by-value-2_main.c: Ditto.\n\t* gcc.dg/compat/scalar-by-value-2_x.c: Ditto.\n\t* gcc.dg/compat/scalar-by-value-2_y.c: Ditto.\n\t* gcc.dg/compat/scalar-return-1_main.c: Ditto.\n\t* gcc.dg/compat/scalar-return-1_x.c: Ditto.\n\t* gcc.dg/compat/scalar-return-1_y.c: Ditto.\n\t* gcc.dg/compat/scalar-return-2_main.c: Ditto.\n\t* gcc.dg/compat/scalar-return-2_x.c: Ditto.\n\t* gcc.dg/compat/scalar-return-2_y.c: Ditto.\n\t* gcc.dg/compat/small-struct-check.h: Ditto.\n\t* gcc.dg/compat/struct-by-value-2_main.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-2_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-2_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-3_main.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-3_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-3_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-4_main.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-4_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-4_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-5_main.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-5_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-5_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-6_main.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-6_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-6_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-7_main.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-7_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-7_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-8_main.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-8_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-8_y.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-9_main.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-9_x.c: Ditto.\n\t* gcc.dg/compat/struct-by-value-9_y.c: Ditto.\n\t* gcc.dg/compat/struct-return-2_main.c: Ditto.\n\t* gcc.dg/compat/struct-return-2_x.c: Ditto.\n\t* gcc.dg/compat/struct-return-2_y.c: Ditto.\n\t* gcc.dg/compat/struct-return-3_main.c: Ditto.\n\t* gcc.dg/compat/struct-return-3_x.c: Ditto.\n\t* gcc.dg/compat/struct-return-3_y.c: Ditto.\n\nFrom-SVN: r67724", "tree": {"sha": "0ffd92e9f1a3f2aafea272bd1d3957dbffea8ba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ffd92e9f1a3f2aafea272bd1d3957dbffea8ba5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/comments", "author": null, "committer": null, "parents": [{"sha": "0c16e8d6c12270f671dbc59ed0379dd695454afb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c16e8d6c12270f671dbc59ed0379dd695454afb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c16e8d6c12270f671dbc59ed0379dd695454afb"}], "stats": {"total": 1099, "additions": 476, "deletions": 623}, "files": [{"sha": "af4f80792a3338af807a876b4c0103a3e8a6553b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,3 +1,53 @@\n+2003-06-10  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* gcc.dg/compat/compat-common.h: New file.\n+\t* gcc.dg/compat/fp-struct-check.h: Improve debugging output.\n+\t* gcc.dg/compat/fp-struct-test-by-value-x.h: Ditto.\n+\t* gcc.dg/compat/fp-struct-test-by-value-y.h: Ditto.\n+\t* gcc.dg/compat/scalar-by-value-1_main.c: Ditto.\n+\t* gcc.dg/compat/scalar-by-value-1_x.c: Ditto.\n+\t* gcc.dg/compat/scalar-by-value-1_y.c: Ditto.\n+\t* gcc.dg/compat/scalar-by-value-2_main.c: Ditto.\n+\t* gcc.dg/compat/scalar-by-value-2_x.c: Ditto.\n+\t* gcc.dg/compat/scalar-by-value-2_y.c: Ditto.\n+\t* gcc.dg/compat/scalar-return-1_main.c: Ditto.\n+\t* gcc.dg/compat/scalar-return-1_x.c: Ditto.\n+\t* gcc.dg/compat/scalar-return-1_y.c: Ditto.\n+\t* gcc.dg/compat/scalar-return-2_main.c: Ditto.\n+\t* gcc.dg/compat/scalar-return-2_x.c: Ditto.\n+\t* gcc.dg/compat/scalar-return-2_y.c: Ditto.\n+\t* gcc.dg/compat/small-struct-check.h: Ditto.\n+\t* gcc.dg/compat/struct-by-value-2_main.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-2_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-2_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-3_main.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-3_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-3_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-4_main.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-4_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-4_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-5_main.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-5_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-5_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-6_main.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-6_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-6_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-7_main.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-7_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-7_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-8_main.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-8_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-8_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-9_main.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-9_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-9_y.c: Ditto.\n+\t* gcc.dg/compat/struct-return-2_main.c: Ditto.\n+\t* gcc.dg/compat/struct-return-2_x.c: Ditto.\n+\t* gcc.dg/compat/struct-return-2_y.c: Ditto.\n+\t* gcc.dg/compat/struct-return-3_main.c: Ditto.\n+\t* gcc.dg/compat/struct-return-3_x.c: Ditto.\n+\t* gcc.dg/compat/struct-return-3_y.c: Ditto.\n+\n 2003-06-10  Geoffrey Keating  <geoffk@apple.com>\n \n \t* g++.dg/pch/static-1.C: New file."}, {"sha": "46eaf42b9a871a75056ac7393f60ff031469f506", "filename": "gcc/testsuite/gcc.dg/compat/compat-common.h", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fcompat-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fcompat-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fcompat-common.h?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -0,0 +1,23 @@\n+/*  Several of the binary compatibility tests use these macros to\n+    allow debugging the test or tracking down a failure by getting an\n+    indication of whether each individual check passed or failed.\n+    When DBG is defined, each check is shown by a dot (pass) or 'F'\n+    (fail) rather than aborting as soon as a failure is detected.  */\n+ \n+#ifdef DBG\n+#include <stdio.h>\n+#define DEBUG_FPUTS(x) fputs (x, stdout)\n+#define DEBUG_DOT putc ('.', stdout)\n+#define DEBUG_NL putc ('\\n', stdout)\n+#define DEBUG_FAIL putc ('F', stdout); fails++\n+#define DEBUG_CHECK { DEBUG_FAIL; } else { DEBUG_DOT; }\n+#else\n+#define DEBUG_FPUTS(x)\n+#define DEBUG_DOT\n+#define DEBUG_NL\n+#define DEBUG_FAIL abort ()\n+#define DEBUG_CHECK abort ();\n+#endif\n+\n+extern void abort (void);\n+extern int fails;"}, {"sha": "bd3283b6b0ebfc0fd6fdadaf8fbfdfeb9fa12062", "filename": "gcc/testsuite/gcc.dg/compat/fp-struct-check.h", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-check.h?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -2,70 +2,70 @@\n \n #define CHECKS(NAME,TYPEM)\t\t\t\t\t\\\n void checkS##NAME##1 (S##NAME##1 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y) { DEBUG_NL; DEBUG_NL; abort (); } }\t\t\\\n+{ if (x.a != y) DEBUG_CHECK }\t\t\t\t\t\\\n void checkS##NAME##2 (S##NAME##2 x, TYPEM y)\t\t\t\\\n-{ if (x.a != y || x.b != y+1 ) { DEBUG_NL; abort (); } }\t\\\n+{ if (x.a != y || x.b != y+1 ) DEBUG_CHECK }\t\t\t\\\n void checkS##NAME##3 (S##NAME##3 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 )\t\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n+    DEBUG_CHECK }\t\t\t\t\t\t\\\n void checkS##NAME##4 (S##NAME##4 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3)\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n+    DEBUG_CHECK }\t\t\t\t\t\t\\\n void checkS##NAME##5 (S##NAME##5 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4) { DEBUG_NL; abort (); } }\t\t\t\\\n+      || x.e != y+4) DEBUG_CHECK }\t\t\t\t\\\n void checkS##NAME##6 (S##NAME##6 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n-      || x.e != y+4 || x.f != y+5) { DEBUG_NL; abort (); } }\t\\\n+      || x.e != y+4 || x.f != y+5) DEBUG_CHECK }\t\t\\\n void checkS##NAME##7 (S##NAME##7 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n       || x.e != y+4 || x.f != y+5 || x.g != y+6)\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n+    DEBUG_CHECK }\t\t\t\t\t\t\\\n void checkS##NAME##8 (S##NAME##8 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n       || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7) { DEBUG_NL; abort (); } }\t\t\t\\\n+      || x.h != y+7) DEBUG_CHECK }\t\t\t\t\\\n void checkS##NAME##9 (S##NAME##9 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n       || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n-      || x.h != y+7 || x.i != y+8) { DEBUG_NL; abort (); } }\t\\\n+      || x.h != y+7 || x.i != y+8) DEBUG_CHECK }\t\t\\\n void checkS##NAME##10 (S##NAME##10 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n       || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n       || x.h != y+7 || x.i != y+8 || x.j != y+9)\t\t\\\n-   { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n+   DEBUG_CHECK }\t\t\t\t\t\t\\\n void checkS##NAME##11 (S##NAME##11 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n       || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n       || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10) { DEBUG_NL; abort (); } }\t\t\t\\\n+      || x.k != y+10) DEBUG_CHECK }\t\t\t\t\\\n void checkS##NAME##12 (S##NAME##12 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n       || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n       || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n-      || x.k != y+10 || x.l != y+11) { DEBUG_NL; abort (); } }\t\\\n+      || x.k != y+10 || x.l != y+11) DEBUG_CHECK }\t\t\\\n void checkS##NAME##13 (S##NAME##13 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n       || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n       || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n       || x.k != y+10 || x.l != y+11 || x.m != y+12)\t\t\\\n-    { DEBUG_NL; abort (); } }\t\t\t\t\t\\\n+    DEBUG_CHECK }\t\t\t\t\t\t\\\n void checkS##NAME##14 (S##NAME##14 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n       || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n       || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n       || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13) { DEBUG_NL; abort (); } }\t\t\t\\\n+      || x.n != y+13) DEBUG_CHECK }\t\t\t\t\\\n void checkS##NAME##15 (S##NAME##15 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n       || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n       || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n       || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n-      || x.n != y+13 || x.o != y+14) { DEBUG_NL; abort (); } }\t\\\n+      || x.n != y+13 || x.o != y+14) DEBUG_CHECK }\t\t\\\n void checkS##NAME##16 (S##NAME##16 x, TYPEM y)\t\t\t\\\n { if (x.a != y || x.b != y+1 || x.c != y+2 || x.d != y+3\t\\\n       || x.e != y+4 || x.f != y+5 || x.g != y+6\t\t\t\\\n       || x.h != y+7 || x.i != y+8 || x.j != y+9\t\t\t\\\n       || x.k != y+10 || x.l != y+11 || x.m != y+12\t\t\\\n       || x.n != y+13 || x.o != y+14 || x.p != y+15)\t\t\\\n-    { DEBUG_NL; abort (); } }\n+    DEBUG_CHECK }"}, {"sha": "876f1b3556cee0847fa09daede4034ff20ee1111", "filename": "gcc/testsuite/gcc.dg/compat/fp-struct-test-by-value-x.h", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-x.h?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -27,6 +27,7 @@ void\t\t\t\t\t\t\t\t\\\n testit##TYPE (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##TYPE  ( &g1s##TYPE,  (MTYPE)1);\t\t\t\t\\\n   init##TYPE  ( &g2s##TYPE,  (MTYPE)2);\t\t\t\t\\\n   init##TYPE  ( &g3s##TYPE,  (MTYPE)3);\t\t\t\t\\\n@@ -44,69 +45,91 @@ testit##TYPE (void)\t\t\t\t\t\t\\\n   init##TYPE  (&g15s##TYPE, (MTYPE)15);\t\t\t\t\\\n   init##TYPE  (&g16s##TYPE, (MTYPE)16);\t\t\t\t\\\n   checkg##TYPE ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n   test##TYPE (g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t      g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t      g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n \t      g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE);\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (1,\t\t\t\t\t\t\\\n \t\tg1s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (2,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (3,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (4,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (5,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (6,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (7,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (8,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (9,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (10,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (11,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (12,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (13,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n \t\tg13s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (14,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n \t\tg13s##TYPE, g14s##TYPE);\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (15,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n \t\tg13s##TYPE, g14s##TYPE, g15s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (16,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n \t\tg13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE); \\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2: \");\t\t\t\t\t\\\n   test2_##TYPE (g1s##TYPE, g3s##TYPE, g5s##TYPE, g7s##TYPE,\t\\\n \t\tg9s##TYPE, g11s##TYPE, g13s##TYPE, g15s##TYPE);\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\"}, {"sha": "49fccdd0931fb61fdcaebcf8dfb2c67fb6f17666", "filename": "gcc/testsuite/gcc.dg/compat/fp-struct-test-by-value-y.h", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-y.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-y.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp-struct-test-by-value-y.h?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -33,37 +33,21 @@ test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n \t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n \t    TYPE s13, TYPE s14, TYPE s15, TYPE s16)\t\t\\\n {\t\t\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s1, (TYPE2)1);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s2, (TYPE2)2);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s3, (TYPE2)3);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s4, (TYPE2)4);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s5, (TYPE2)5);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s6, (TYPE2)6);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s7, (TYPE2)7);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s8, (TYPE2)8);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s9, (TYPE2)9);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s10, (TYPE2)10);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s11, (TYPE2)11);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s12, (TYPE2)12);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s13, (TYPE2)13);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s14, (TYPE2)14);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s15, (TYPE2)15);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s16, (TYPE2)16);\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n@@ -78,7 +62,6 @@ testva##TYPE (int n, ...)\t\t\t\t\t\\\n       for (i = 0; i < n; i++)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  TYPE t = va_arg (ap, TYPE);\t\t\t\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n \t  check##TYPE (t, (TYPE2)i+1);\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n       va_end (ap);\t\t\t\t\t\t\\"}, {"sha": "5272a379f4cb5ff5797b3107c02c6ac111a64f01", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-1_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -3,6 +3,7 @@\n \n extern void scalar_by_value_1_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "51b5abd3d77be319cf88bf82c46a2d0de7ffac6d", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-1_x.c", "status": "modified", "additions": 31, "deletions": 19, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,13 +1,4 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #define T(NAME, TYPE, INITVAL) \t\t\t\t\t\\\n TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n@@ -28,10 +19,7 @@ void\t\t\t\t\t\t\t\t\\\n check##NAME (TYPE x, TYPE v)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   if (x != v + INITVAL)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      DEBUG_NL;\t\t\t\t\t\t\t\\\n-      abort ();\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n+    DEBUG_CHECK\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\\\n@@ -48,6 +36,7 @@ void\t\t\t\t\t\t\t\t\\\n testit##NAME (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##NAME (&g01##NAME,  1);\t\t\t\t\t\\\n   init##NAME (&g02##NAME,  2);\t\t\t\t\t\\\n   init##NAME (&g03##NAME,  3);\t\t\t\t\t\\\n@@ -65,76 +54,96 @@ testit##NAME (void)\t\t\t\t\t\t\\\n   init##NAME (&g15##NAME, 15);\t\t\t\t\t\\\n   init##NAME (&g16##NAME, 16);\t\t\t\t\t\\\n   checkg##NAME ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n   test##NAME (g01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t      g05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n \t      g09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n \t      g13##NAME, g14##NAME, g15##NAME, g16##NAME);\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (1,\t\t\t\t\t\t\\\n \t\tg01##NAME);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (2,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (3,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (4,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (5,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (6,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (7,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME, g07##NAME);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (8,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (9,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n \t\tg09##NAME);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (10,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n \t\tg09##NAME, g10##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (11,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n \t\tg09##NAME, g10##NAME, g11##NAME);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (12,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n \t\tg09##NAME, g10##NAME, g11##NAME, g12##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (13,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n \t\tg09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n \t\tg13##NAME);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (14,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n \t\tg09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n \t\tg13##NAME, g14##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (15,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n \t\tg09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n \t\tg13##NAME, g14##NAME, g15##NAME);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##NAME (16,\t\t\t\t\t\t\\\n \t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n \t\tg09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n \t\tg13##NAME, g14##NAME, g15##NAME, g16##NAME);\t\\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2: \");\t\t\t\t\t\\\n   test2_##NAME (g01##NAME, g03##NAME, g05##NAME, g07##NAME,\t\\\n \t\tg09##NAME, g11##NAME, g13##NAME, g15##NAME);\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n-extern void abort (void);\n-\n T(ui, unsigned int, 51)\n T(si, int, (-55))\n T(ul, unsigned long, 61)\n@@ -160,5 +169,8 @@ T(sll)\n T(d)\n T(ld)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "7b4b60ea77f25eb552aa42953a1e459a53d8691d", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-1_y.c", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n /* Turn off checking for variable arguments with -DSKIPVA.  */\n #ifdef SKIPVA\n@@ -88,7 +79,6 @@ testva##NAME (int n, ...)\t\t\t\t\t\\\n       for (i = 0; i < n; i++)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  TYPE t = va_arg (ap, TYPE);\t\t\t\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n \t  check##NAME (t, i+1);\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n       va_end (ap);\t\t\t\t\t\t\\"}, {"sha": "8426b789434ecde3bb921f4c02a90ebff7d2064f", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-2_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-2_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-2_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-2_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -5,6 +5,7 @@\n \n extern void scalar_by_value_2_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "fae665f2ca17cdf751294d355d6dda8c6ddae927", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-2_x.c", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-2_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,13 +1,4 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #define T(NAME, TYPE, INITVAL) \t\t\t\t\t\\\n TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n@@ -27,10 +18,7 @@ void\t\t\t\t\t\t\t\t\\\n check##NAME (TYPE x, TYPE v)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   if (x != v + INITVAL)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      DEBUG_NL;\t\t\t\t\t\t\t\\\n-      abort ();\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n+    DEBUG_CHECK\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\\\n@@ -47,6 +35,7 @@ void\t\t\t\t\t\t\t\t\\\n testit##NAME (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##NAME (&g01##NAME,  1);\t\t\t\t\t\\\n   init##NAME (&g02##NAME,  2);\t\t\t\t\t\\\n   init##NAME (&g03##NAME,  3);\t\t\t\t\t\\\n@@ -64,19 +53,21 @@ testit##NAME (void)\t\t\t\t\t\t\\\n   init##NAME (&g15##NAME, 15);\t\t\t\t\t\\\n   init##NAME (&g16##NAME, 16);\t\t\t\t\t\\\n   checkg##NAME ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n   test##NAME (g01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n \t      g05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n \t      g09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n \t      g13##NAME, g14##NAME, g15##NAME, g16##NAME);\t\\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2: \");\t\t\t\t\t\\\n   test2_##NAME (g01##NAME, g03##NAME, g05##NAME, g07##NAME,\t\\\n \t\tg09##NAME, g11##NAME, g13##NAME, g15##NAME);\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n-extern void abort (void);\n-\n T(c, char, 21)\n T(uc, unsigned char, 22)\n T(sc, signed char, (-33))\n@@ -98,5 +89,8 @@ T(us)\n T(ss)\n T(f)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "2eea6135d74c293b4848bce530c7935891918107", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-2_y.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-2_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifndef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #define T(NAME, TYPE, INITVAL)\t\t\t\t\t\\\n extern TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\"}, {"sha": "0a27f5416b1d84157e7077fc83374bd49eba28dd", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-1_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -3,6 +3,7 @@\n \n extern void scalar_return_1_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "7e8f975f758f298baa2685ae601a016527804f45", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-1_x.c", "status": "modified", "additions": 39, "deletions": 33, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,12 +1,10 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n+#include \"compat-common.h\"\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n #else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n+const int test_va = 1;\n #endif\n \n #define T(NAME, TYPE, INITVAL) \t\t\t\t\t\\\n@@ -25,17 +23,15 @@ void\t\t\t\t\t\t\t\t\\\n check##NAME (TYPE x, TYPE v)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   if (x != v)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      DEBUG_NL;\t\t\t\t\t\t\t\\\n-      abort ();\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n+    DEBUG_CHECK\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\\\n testit##NAME (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   TYPE rslt;\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##NAME (&g01##NAME,  1);\t\t\t\t\t\\\n   init##NAME (&g02##NAME,  2);\t\t\t\t\t\\\n   init##NAME (&g03##NAME,  3);\t\t\t\t\t\\\n@@ -53,34 +49,41 @@ testit##NAME (void)\t\t\t\t\t\t\\\n   init##NAME (&g15##NAME, 15);\t\t\t\t\t\\\n   init##NAME (&g16##NAME, 16);\t\t\t\t\t\\\n   checkg##NAME ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test0\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0: \");\t\t\t\t\t\\\n   rslt = test0##NAME ();\t\t\t\t\t\\\n   check##NAME (rslt, g01##NAME);\t\t\t\t\\\n-  DEBUG_FPUTS (\" test1\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1: \");\t\t\t\t\t\\\n   rslt = test1##NAME (g01##NAME);\t\t\t\t\\\n   check##NAME (rslt, g01##NAME);\t\t\t\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n-  rslt = testva##NAME (1, g01##NAME);\t\t\t\t\\\n-  check##NAME (rslt, g01##NAME);\t\t\t\t\\\n-  rslt = testva##NAME (5, g01##NAME, g02##NAME, g03##NAME,\t\\\n-\t\t       g04##NAME, g05##NAME);\t\t\t\\\n-  check##NAME (rslt, g05##NAME);\t\t\t\t\\\n-  rslt = testva##NAME (9, g01##NAME, g02##NAME, g03##NAME,\t\\\n-\t\t       g04##NAME, g05##NAME, g06##NAME,\t\t\\\n-\t\t       g07##NAME, g08##NAME, g09##NAME);\t\\\n-  check##NAME (rslt, g09##NAME);\t\t\t\t\\\n-  rslt = testva##NAME (16, g01##NAME, g02##NAME, g03##NAME,\t\\\n-\t\t       g04##NAME, g05##NAME, g06##NAME,\t\t\\\n-\t\t       g07##NAME, g08##NAME, g09##NAME,\t\t\\\n-\t\t       g10##NAME, g11##NAME, g12##NAME,\t\t\\\n-\t\t       g13##NAME, g14##NAME, g15##NAME,\t\t\\\n-\t\t       g16##NAME);\t\t\t\t\\\n-  check##NAME (rslt, g16##NAME);\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      DEBUG_NL;\t\t\t\t\t\t\t\\\n+      DEBUG_FPUTS (#NAME);\t\t\t\t\t\\\n+      DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n+      rslt = testva##NAME (1, g01##NAME);\t\t\t\\\n+      check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+      rslt = testva##NAME (5, g01##NAME, g02##NAME, g03##NAME,\t\\\n+\t\t\t   g04##NAME, g05##NAME);\t\t\\\n+      check##NAME (rslt, g05##NAME);\t\t\t\t\\\n+      rslt = testva##NAME (9, g01##NAME, g02##NAME, g03##NAME,\t\\\n+\t\t\t   g04##NAME, g05##NAME, g06##NAME,\t\\\n+\t\t\t   g07##NAME, g08##NAME, g09##NAME);\t\\\n+      check##NAME (rslt, g09##NAME);\t\t\t\t\\\n+      rslt = testva##NAME (16, g01##NAME, g02##NAME, g03##NAME,\t\\\n+\t\t\t   g04##NAME, g05##NAME, g06##NAME,\t\\\n+\t\t\t   g07##NAME, g08##NAME, g09##NAME,\t\\\n+\t\t\t   g10##NAME, g11##NAME, g12##NAME,\t\\\n+\t\t\t   g13##NAME, g14##NAME, g15##NAME,\t\\\n+\t\t\t   g16##NAME);\t\t\t\t\\\n+      check##NAME (rslt, g16##NAME);\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n-extern void abort (void);\n-\n T(ui, unsigned int, 51)\n T(si, int, (-55))\n T(ul, unsigned long, 61)\n@@ -106,5 +109,8 @@ T(sll)\n T(d)\n T(ld)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "f913dbbb8917a05f6f155cc743669615e3e45ba7", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-1_y.c", "status": "modified", "additions": 5, "deletions": 27, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,22 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n-\n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n-const int test_va = 0;\n-#else\n-const int test_va = 1;\n-#endif\n+#include \"compat-common.h\"\n \n #define T(NAME, TYPE, INITVAL)\t\t\t\t\t\\\n extern TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n@@ -71,16 +55,10 @@ testva##NAME (int n, ...)\t\t\t\t\t\\\n   int i;\t\t\t\t\t\t\t\\\n   TYPE rslt;\t\t\t\t\t\t\t\\\n   va_list ap;\t\t\t\t\t\t\t\\\n-  if (test_va)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      va_start (ap, n);\t\t\t\t\t\t\\\n-      for (i = 0; i < n; i++)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  rslt = va_arg (ap, TYPE);\t\t\t\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      va_end (ap);\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n+  va_start (ap, n);\t\t\t\t\t\t\\\n+  for (i = 0; i < n; i++)\t\t\t\t\t\\\n+    rslt = va_arg (ap, TYPE);\t\t\t\t\t\\\n+  va_end (ap);\t\t\t\t\t\t\t\\\n   return rslt;\t\t\t\t\t\t\t\\\n }\n "}, {"sha": "11a5e5044fc754fb600b18ac2d099cce44f45875", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-2_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -3,6 +3,7 @@\n \n extern void scalar_return_2_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "2e68d59b7eae34582abc1fcdf79293f20adda9a3", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-2_x.c", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,13 +1,4 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #define T(NAME, TYPE, INITVAL) \t\t\t\t\t\\\n TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n@@ -24,17 +15,15 @@ void\t\t\t\t\t\t\t\t\\\n check##NAME (TYPE x, TYPE v)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   if (x != v)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      DEBUG_NL;\t\t\t\t\t\t\t\\\n-      abort ();\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n+    DEBUG_CHECK\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\\\n testit##NAME (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   TYPE rslt;\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##NAME (&g01##NAME,  1);\t\t\t\t\t\\\n   init##NAME (&g02##NAME,  2);\t\t\t\t\t\\\n   init##NAME (&g03##NAME,  3);\t\t\t\t\t\\\n@@ -52,17 +41,19 @@ testit##NAME (void)\t\t\t\t\t\t\\\n   init##NAME (&g15##NAME, 15);\t\t\t\t\t\\\n   init##NAME (&g16##NAME, 16);\t\t\t\t\t\\\n   checkg##NAME ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test0\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0: \");\t\t\t\t\t\\\n   rslt = test0##NAME ();\t\t\t\t\t\\\n   check##NAME (rslt, g01##NAME);\t\t\t\t\\\n-  DEBUG_FPUTS (\" test1\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1: \");\t\t\t\t\t\\\n   rslt = test1##NAME (g01##NAME);\t\t\t\t\\\n   check##NAME (rslt, g01##NAME);\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n-extern void abort (void);\n-\n T(c, char, 21)\n T(uc, unsigned char, 22)\n T(sc, signed char, (-33))\n@@ -84,5 +75,8 @@ T(us)\n T(ss)\n T(f)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "1f7d5493836cf0db708d9f303232ba57ddb8b4bf", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-2_y.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n /* Turn off checking for variable arguments with -DSKIPVA.  */\n #ifdef SKIPVA"}, {"sha": "85b334c44c23ea7dcb5190da63260a1bea996677", "filename": "gcc/testsuite/gcc.dg/compat/small-struct-check.h", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fsmall-struct-check.h?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,29 +1,29 @@\n /* Function definitions that are used by multiple tests.  */\n \n-void checkSc (Sc x, int i) { if (x.c != (char)i) { DEBUG_NL; abort (); } }\n-void checkSs (Ss x, int i) { if (x.s != i) { DEBUG_NL; abort (); } }\n-void checkSi (Si x, int i) { if (x.i != i) { DEBUG_NL; abort (); } }\n+void checkSc (Sc x, int i) { if (x.c != (char)i) DEBUG_CHECK }\n+void checkSs (Ss x, int i) { if (x.s != i) DEBUG_CHECK }\n+void checkSi (Si x, int i) { if (x.i != i) DEBUG_CHECK }\n void checkSsc (Ssc x, int i)\n-{ if (x.s != i || x.c != (char)i+1) { DEBUG_NL; abort (); } }\n+{ if (x.s != i || x.c != (char)i+1) DEBUG_CHECK }\n void checkScs (Scs x, int i)\n-{ if (x.c != (char)i || x.s != i+1) { DEBUG_NL; abort (); } }\n+{ if (x.c != (char)i || x.s != i+1) DEBUG_CHECK }\n void checkSsi (Ssi x, int i)\n-{ if (x.s != i || x.i != i+1) { DEBUG_NL; abort (); } }\n+{ if (x.s != i || x.i != i+1) DEBUG_CHECK }\n void checkSis (Sis x, int i)\n-{ if (x.i != i || x.s != i+1) { DEBUG_NL; abort (); } }\n+{ if (x.i != i || x.s != i+1) DEBUG_CHECK }\n void checkSic (Sic x, int i)\n-{ if (x.i != i || x.c != (char)i+1) { DEBUG_NL; abort (); } }\n+{ if (x.i != i || x.c != (char)i+1) DEBUG_CHECK }\n void checkSci (Sci x, int i)\n-{ if (x.c != (char)i || x.i != i+1) { DEBUG_NL; abort (); } }\n+{ if (x.c != (char)i || x.i != i+1) DEBUG_CHECK }\n void checkScsi (Scsi x, int i)\n-{ if (x.c != (char)i || x.s != i+1 || x.i != i+2) { DEBUG_NL; abort (); } }\n+{ if (x.c != (char)i || x.s != i+1 || x.i != i+2) DEBUG_CHECK }\n void checkScis (Scis x, int i)\n-{ if (x.c != (char)i || x.i != i+1 || x.s != i+2) { DEBUG_NL; abort (); } }\n+{ if (x.c != (char)i || x.i != i+1 || x.s != i+2) DEBUG_CHECK }\n void checkSsci (Ssci x, int i)\n-{ if (x.s != i || x.c != (char)i+1 || x.i != i+2) { DEBUG_NL; abort (); } }\n+{ if (x.s != i || x.c != (char)i+1 || x.i != i+2) DEBUG_CHECK }\n void checkSsic (Ssic x, int i)\n-{ if (x.s != i || x.i != i+1 || x.c != (char)i+2) { DEBUG_NL; abort (); } }\n+{ if (x.s != i || x.i != i+1 || x.c != (char)i+2) DEBUG_CHECK }\n void checkSisc (Sisc x, int i)\n-{ if (x.i != i || x.s != i+1 || x.c != (char)i+2) { DEBUG_NL; abort (); } }\n+{ if (x.i != i || x.s != i+1 || x.c != (char)i+2) DEBUG_CHECK }\n void checkSics (Sics x, int i)\n-{ if (x.i != i || x.c != (char)i+1 || x.s != i+2) { DEBUG_NL; abort (); } }\n+{ if (x.i != i || x.c != (char)i+1 || x.s != i+2) DEBUG_CHECK }"}, {"sha": "8cb6fc078289de75dabf785c2f9e816d48fa9cc3", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-2_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -4,6 +4,7 @@\n \n extern void struct_by_value_2_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "ce455bf5bc224f1126f37f0eb2d8f48a387e1e0d", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-2_x.c", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,13 +1,4 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #define T(N, NAME, TYPE)\t\t\t\t\t\\\n struct S##NAME##N { TYPE i[N]; };\t\t\t\t\\\n@@ -44,10 +35,7 @@ check##NAME##N (struct S##NAME##N *p, int i)\t\t\t\\\n   int j;\t\t\t\t\t\t\t\\\n   for (j = 0; j < N; j++)\t\t\t\t\t\\\n     if (p->i[j] != (TYPE) (i + j))\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-\tDEBUG_NL;\t\t\t\t\t\t\\\n-\tabort ();\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n+      DEBUG_CHECK\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\\\n@@ -66,6 +54,7 @@ void\t\t\t\t\t\t\t\t\\\n testit##NAME##N (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#NAME \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##NAME##N  ( &g1s##NAME##N,  1*16);\t\t\t\\\n   init##NAME##N  ( &g2s##NAME##N,  2*16);\t\t\t\\\n   init##NAME##N  ( &g3s##NAME##N,  3*16);\t\t\t\\\n@@ -83,7 +72,9 @@ testit##NAME##N (void)\t\t\t\t\t\t\\\n   init##NAME##N  (&g15s##NAME##N, 15*16);\t\t\t\\\n   init##NAME##N  (&g16s##NAME##N, 16*16);\t\t\t\\\n   checkg##NAME##N ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n   test##NAME##N (g1s##NAME##N, g2s##NAME##N,\t\t\t\\\n \t\t g3s##NAME##N, g4s##NAME##N,\t\t\t\\\n \t\t g5s##NAME##N, g6s##NAME##N,\t\t\t\\\n@@ -92,7 +83,9 @@ testit##NAME##N (void)\t\t\t\t\t\t\\\n \t\t g11s##NAME##N, g12s##NAME##N,\t\t\t\\\n \t\t g13s##NAME##N, g14s##NAME##N,\t\t\t\\\n \t\t g15s##NAME##N, g16s##NAME##N);\t\t\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n   testva##NAME##N (16,\t\t\t\t\t\t\\\n \t\t   g1s##NAME##N, g2s##NAME##N,\t\t\t\\\n \t\t   g3s##NAME##N, g4s##NAME##N,\t\t\t\\\n@@ -102,16 +95,16 @@ testit##NAME##N (void)\t\t\t\t\t\t\\\n \t\t   g11s##NAME##N, g12s##NAME##N,\t\t\\\n \t\t   g13s##NAME##N, g14s##NAME##N,\t\t\\\n \t\t   g15s##NAME##N, g16s##NAME##N);\t\t\\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2: \");\t\t\t\t\t\\\n   test2_##NAME##N (g1s##NAME##N, g3s##NAME##N,\t\t\t\\\n \t\t   g5s##NAME##N, g7s##NAME##N,\t\t\t\\\n \t\t   g9s##NAME##N, g11s##NAME##N,\t\t\t\\\n \t\t   g13s##NAME##N, g15s##NAME##N);\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n-extern void abort (void);\n-\n T(0, uc, unsigned char)\n T(1, uc, unsigned char)\n T(2, uc, unsigned char)\n@@ -217,5 +210,8 @@ T(13, ui, unsigned int)\n T(14, ui, unsigned int)\n T(15, ui, unsigned int)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "f5b3c713f1783dd3e669d22ea6db2f9f7f2bb6cc", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-2_y.c", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n /* Turn off checking for variable arguments with -DSKIPVA.  */\n #ifdef SKIPVA\n@@ -76,37 +67,21 @@ test##NAME##N (struct S##NAME##N s1, struct S##NAME##N s2,\t\\\n \t       struct S##NAME##N s13, struct S##NAME##N s14,\t\\\n \t       struct S##NAME##N s15, struct S##NAME##N s16)\t\\\n {\t\t\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s1, 1*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s2, 2*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s3, 3*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s4, 4*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s5, 5*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s6, 6*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s7, 7*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s8, 8*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s9, 9*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s10, 10*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s11, 11*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s12, 12*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s13, 13*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s14, 14*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s15, 15*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##NAME##N (&s16, 16*16);\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n@@ -121,7 +96,6 @@ testva##NAME##N (int n, ...)\t\t\t\t\t\\\n       for (i = 0; i < n; i++)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  struct S##NAME##N t = va_arg (ap, struct S##NAME##N);\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n \t  check##NAME##N (&t, (i+1)*16);\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n       va_end (ap);\t\t\t\t\t\t\\"}, {"sha": "0b720689531c2bc1ccc29375ac9b2a32e0e7d010", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-3_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -5,6 +5,7 @@\n \n extern void struct_by_value_3_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "4490f48563467e3ae65cfc61dfd2406a205ca61e", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-3_x.c", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,13 +1,4 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #define T(TYPE)\t\t\t\t\t\t\t\\\n TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n@@ -38,6 +29,7 @@ void\t\t\t\t\t\t\t\t\\\n testit##TYPE (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##TYPE  ( &g1s##TYPE,  1);\t\t\t\t\\\n   init##TYPE  ( &g2s##TYPE,  2);\t\t\t\t\\\n   init##TYPE  ( &g3s##TYPE,  3);\t\t\t\t\\\n@@ -55,76 +47,96 @@ testit##TYPE (void)\t\t\t\t\t\t\\\n   init##TYPE  (&g15s##TYPE, 15);\t\t\t\t\\\n   init##TYPE  (&g16s##TYPE, 16);\t\t\t\t\\\n   checkg##TYPE ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n   test##TYPE (g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t      g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t      g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n \t      g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE);\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (1,\t\t\t\t\t\t\\\n \t\tg1s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (2,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (3,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (4,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (5,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (6,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (7,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (8,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (9,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (10,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (11,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (12,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (13,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n \t\tg13s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (14,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n \t\tg13s##TYPE, g14s##TYPE);\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (15,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n \t\tg13s##TYPE, g14s##TYPE, g15s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE (16,\t\t\t\t\t\t\\\n \t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n \t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n \t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n \t\tg13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE); \\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2:\");\t\t\t\t\t\\\n   test2_##TYPE (g1s##TYPE, g3s##TYPE, g5s##TYPE, g7s##TYPE,\t\\\n \t\tg9s##TYPE, g11s##TYPE, g13s##TYPE, g15s##TYPE);\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n-extern void abort (void);\n-\n #include \"small-struct-defs.h\"\n #include \"small-struct-check.h\"\n \n@@ -167,5 +179,8 @@ T(Ssic)\n T(Sisc)\n T(Sics)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "571bea8d414163ee7d177f450a30c5775111423b", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-3_y.c", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n /* Turn off checking for variable arguments with -DSKIPVA.  */\n #ifdef SKIPVA\n@@ -71,37 +62,21 @@ test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n \t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n \t    TYPE s13, TYPE s14, TYPE s15, TYPE s16)\t\t\\\n {\t\t\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s1, 1);\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s2, 2);\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s3, 3);\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s4, 4);\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s5, 5);\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s6, 6);\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s7, 7);\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s8, 8);\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s9, 9);\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s10, 10);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s11, 11);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s12, 12);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s13, 13);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s14, 14);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s15, 15);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE (s16, 16);\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n@@ -116,7 +91,6 @@ testva##TYPE (int n, ...)\t\t\t\t\t\\\n       for (i = 0; i < n; i++)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  TYPE t = va_arg (ap, TYPE);\t\t\t\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n \t  check##TYPE (t, i+1);\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n       va_end (ap);\t\t\t\t\t\t\\"}, {"sha": "570eddc5d5e104404df8e8896c4502a50c4a9822", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-4_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -4,6 +4,7 @@\n \n extern void struct_by_value_4_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "4b24cd56a85de92a8443679d4ff6924efbea677f", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-4_x.c", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,13 +1,4 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #define T(N, TYPE)\t\t\t\t\t\t\\\n struct S##TYPE##N { TYPE i[N]; };\t\t\t\t\\\n@@ -67,6 +58,7 @@ void\t\t\t\t\t\t\t\t\\\n testit##TYPE##N (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##TYPE##N  ( &g1s##TYPE##N,  1*16);\t\t\t\\\n   init##TYPE##N  ( &g2s##TYPE##N,  2*16);\t\t\t\\\n   init##TYPE##N  ( &g3s##TYPE##N,  3*16);\t\t\t\\\n@@ -84,7 +76,9 @@ testit##TYPE##N (void)\t\t\t\t\t\t\\\n   init##TYPE##N  (&g15s##TYPE##N, 15*16);\t\t\t\\\n   init##TYPE##N  (&g16s##TYPE##N, 16*16);\t\t\t\\\n   checkg##TYPE##N ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n   test##TYPE##N (g1s##TYPE##N, g2s##TYPE##N,\t\t\t\\\n \t\t g3s##TYPE##N, g4s##TYPE##N,\t\t\t\\\n \t\t g5s##TYPE##N, g6s##TYPE##N,\t\t\t\\\n@@ -93,7 +87,9 @@ testit##TYPE##N (void)\t\t\t\t\t\t\\\n \t\t g11s##TYPE##N, g12s##TYPE##N,\t\t\t\\\n \t\t g13s##TYPE##N, g14s##TYPE##N,\t\t\t\\\n \t\t g15s##TYPE##N, g16s##TYPE##N);\t\t\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n   testva##TYPE##N (16,\t\t\t\t\t\t\\\n \t\t   g1s##TYPE##N, g2s##TYPE##N,\t\t\t\\\n \t\t   g3s##TYPE##N, g4s##TYPE##N,\t\t\t\\\n@@ -103,7 +99,9 @@ testit##TYPE##N (void)\t\t\t\t\t\t\\\n \t\t   g11s##TYPE##N, g12s##TYPE##N,\t\t\\\n \t\t   g13s##TYPE##N, g14s##TYPE##N,\t\t\\\n \t\t   g15s##TYPE##N, g16s##TYPE##N);\t\t\\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2: \");\t\t\t\t\t\\\n   test2_##TYPE##N (g1s##TYPE##N, g3s##TYPE##N,\t\t\t\\\n \t\t   g5s##TYPE##N, g7s##TYPE##N,\t\t\t\\\n \t\t   g9s##TYPE##N, g11s##TYPE##N,\t\t\t\\\n@@ -119,19 +117,17 @@ typedef struct { int i; short s; } Sis;\n typedef struct { char c; short s; int i; } Scsi;\n typedef struct { char c; int i; short s; } Scis;\n \n-extern void abort (void);\n-\n-void checkSc (Sc x, int i) { if (x.c != i/16) { DEBUG_NL; abort (); } }\n-void checkSs (Ss x, int i) { if (x.s != i) { DEBUG_NL; abort (); } }\n-void checkSi (Si x, int i) { if (x.i != i) { DEBUG_NL; abort (); } }\n+void checkSc (Sc x, int i) { if (x.c != i/16) DEBUG_CHECK }\n+void checkSs (Ss x, int i) { if (x.s != i) DEBUG_CHECK }\n+void checkSi (Si x, int i) { if (x.i != i) DEBUG_CHECK }\n void checkSsc (Ssc x, int i)\n-{ if (x.s != i || x.c != (i/16)+1) { DEBUG_NL; abort (); } }\n+{ if (x.s != i || x.c != (i/16)+1) DEBUG_CHECK }\n void checkSis (Sis x, int i)\n-{ if (x.i != i || x.s != i+1) { DEBUG_NL; abort (); } }\n+{ if (x.i != i || x.s != i+1) DEBUG_CHECK }\n void checkScsi (Scsi x, int i)\n-{ if (x.c != i/16 || x.s != i+1 || x.i != i+2) { DEBUG_NL; abort (); } }\n+{ if (x.c != i/16 || x.s != i+1 || x.i != i+2) DEBUG_CHECK }\n void checkScis (Scis x, int i)\n-{ if (x.c != i/16 || x.i != i+1 || x.s != i+2) { DEBUG_NL; abort (); } }\n+{ if (x.c != i/16 || x.i != i+1 || x.s != i+2) DEBUG_CHECK }\n \n T(0, Sc)\n T(1, Sc)\n@@ -238,5 +234,8 @@ T(13, Si)\n T(14, Si)\n T(15, Si)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "2541dd06d52e36c4d1a3063c31ec0fb63ed83d54", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-4_y.c", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n /* Turn off checking for variable arguments with -DSKIPVA.  */\n #ifdef SKIPVA\n@@ -81,37 +72,21 @@ test##TYPE##N (struct S##TYPE##N s1, struct S##TYPE##N s2,\t\\\n \t       struct S##TYPE##N s13, struct S##TYPE##N s14,\t\\\n \t       struct S##TYPE##N s15, struct S##TYPE##N s16)\t\\\n {\t\t\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s1, 1*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s2, 2*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s3, 3*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s4, 4*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s5, 5*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s6, 6*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s7, 7*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s8, 8*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s9, 9*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s10, 10*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s11, 11*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s12, 12*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s13, 13*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s14, 14*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s15, 15*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s16, 16*16);\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n@@ -126,7 +101,6 @@ testva##TYPE##N (int n, ...)\t\t\t\t\t\\\n       for (i = 0; i < n; i++)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  struct S##TYPE##N t = va_arg (ap, struct S##TYPE##N);\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n \t  check##TYPE##N (&t, (i+1)*16);\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n       va_end (ap);\t\t\t\t\t\t\\"}, {"sha": "32eaafbe23b3c5c7433a314497225bc51b9bddce", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-5_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -4,6 +4,7 @@\n \n extern void struct_by_value_5_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "6db7771bc3a5492e2addddad68c6fed93527e00b", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-5_x.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,20 +1,9 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\"\n #include \"fp-struct-check.h\"\n #include \"fp-struct-test-by-value-x.h\"\n \n-extern void abort (void);\n-\n DEFS(f, float)\n CHECKS(f, float)\n \n@@ -59,5 +48,8 @@ T(Sf14, float)\n T(Sf15, float)\n T(Sf16, float)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "9290b8fa92e1c76fe850a6e07792bd597a008161", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-5_y.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n /* Turn off checking for variable arguments with -DSKIPVA.  */\n #ifdef SKIPVA"}, {"sha": "39dc31f4a6a9628d47882c23d1066bde9ff9845c", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-6_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -4,6 +4,7 @@\n \n extern void struct_by_value_6_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "cef1523b3ff31d64800931db9e9f359597019a11", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-6_x.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,20 +1,9 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\"\n #include \"fp-struct-check.h\"\n #include \"fp-struct-test-by-value-x.h\"\n \n-extern void abort (void);\n-\n DEFS(d, double)\n CHECKS(d, double)\n \n@@ -59,5 +48,8 @@ T(Sd14, double)\n T(Sd15, double)\n T(Sd16, double)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "b5bc10025a0b8dc27b9bfbb869fbdb1a19412aad", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-6_y.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n /* Turn off checking for variable arguments with -DSKIPVA.  */\n #ifdef SKIPVA"}, {"sha": "98caf4286a41cdefeca60796edc2bc3f6316c8e3", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-7_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -4,6 +4,7 @@\n \n extern void struct_by_value_7_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "30d945082f7cbbedb24056f66f0ebf64f3821d2e", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-7_x.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,20 +1,9 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #include \"fp-struct-defs.h\"\n #include \"fp-struct-check.h\"\n #include \"fp-struct-test-by-value-x.h\"\n \n-extern void abort (void);\n-\n DEFS(ld, long double)\n CHECKS(ld, long double)\n \n@@ -59,5 +48,8 @@ T(Sld14, long double)\n T(Sld15, long double)\n T(Sld16, long double)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "ca52a9b10f7132de224a7503fcbf3530e71a6868", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-7_y.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n /* Turn off checking for variable arguments with -DSKIPVA.  */\n #ifdef SKIPVA"}, {"sha": "cc094fcc9ad39c9d258b788ed3baca164dd773f5", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-8_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -4,6 +4,7 @@\n \n extern void struct_by_value_8_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "6c983c58cb9e0a65ff9108bb5ad13330440612bb", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-8_x.c", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,13 +1,4 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #define T(N, TYPE)\t\t\t\t\t\t\\\n struct S##TYPE##N { TYPE i[N]; };\t\t\t\t\\\n@@ -67,6 +58,7 @@ void\t\t\t\t\t\t\t\t\\\n testit##TYPE##N (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##TYPE##N  ( &g1s##TYPE##N,  1*16);\t\t\t\\\n   init##TYPE##N  ( &g2s##TYPE##N,  2*16);\t\t\t\\\n   init##TYPE##N  ( &g3s##TYPE##N,  3*16);\t\t\t\\\n@@ -84,7 +76,9 @@ testit##TYPE##N (void)\t\t\t\t\t\t\\\n   init##TYPE##N  (&g15s##TYPE##N, 15*16);\t\t\t\\\n   init##TYPE##N  (&g16s##TYPE##N, 16*16);\t\t\t\\\n   checkg##TYPE##N ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n   test##TYPE##N (g1s##TYPE##N, g2s##TYPE##N,\t\t\t\\\n \t\t g3s##TYPE##N, g4s##TYPE##N,\t\t\t\\\n \t\t g5s##TYPE##N, g6s##TYPE##N,\t\t\t\\\n@@ -93,7 +87,9 @@ testit##TYPE##N (void)\t\t\t\t\t\t\\\n \t\t g11s##TYPE##N, g12s##TYPE##N,\t\t\t\\\n \t\t g13s##TYPE##N, g14s##TYPE##N,\t\t\t\\\n \t\t g15s##TYPE##N, g16s##TYPE##N);\t\t\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n   testva##TYPE##N (16,\t\t\t\t\t\t\\\n \t\t   g1s##TYPE##N, g2s##TYPE##N,\t\t\t\\\n \t\t   g3s##TYPE##N, g4s##TYPE##N,\t\t\t\\\n@@ -103,7 +99,9 @@ testit##TYPE##N (void)\t\t\t\t\t\t\\\n \t\t   g11s##TYPE##N, g12s##TYPE##N,\t\t\\\n \t\t   g13s##TYPE##N, g14s##TYPE##N,\t\t\\\n \t\t   g15s##TYPE##N, g16s##TYPE##N);\t\t\\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2: \");\t\t\t\t\t\\\n   test2_##TYPE##N (g1s##TYPE##N, g3s##TYPE##N,\t\t\t\\\n \t\t   g5s##TYPE##N, g7s##TYPE##N,\t\t\t\\\n \t\t   g9s##TYPE##N, g11s##TYPE##N,\t\t\t\\\n@@ -119,19 +117,17 @@ typedef struct { int i; short s; } Sis;\n typedef struct { char c; short s; int i; } Scsi;\n typedef struct { char c; int i; short s; } Scis;\n \n-extern void abort (void);\n-\n-void checkSc (Sc x, int i) { if (x.c != i/16) { DEBUG_NL; abort (); } }\n-void checkSs (Ss x, int i) { if (x.s != i) { DEBUG_NL; abort (); } }\n-void checkSi (Si x, int i) { if (x.i != i) { DEBUG_NL; abort (); } }\n+void checkSc (Sc x, int i) { if (x.c != i/16) DEBUG_CHECK }\n+void checkSs (Ss x, int i) { if (x.s != i) DEBUG_CHECK }\n+void checkSi (Si x, int i) { if (x.i != i) DEBUG_CHECK }\n void checkSsc (Ssc x, int i)\n-{ if (x.s != i || x.c != (i/16)+1) { DEBUG_NL; abort (); } }\n+{ if (x.s != i || x.c != (i/16)+1) DEBUG_CHECK }\n void checkSis (Sis x, int i)\n-{ if (x.i != i || x.s != i+1) { DEBUG_NL; abort (); } }\n+{ if (x.i != i || x.s != i+1) DEBUG_CHECK }\n void checkScsi (Scsi x, int i)\n-{ if (x.c != i/16 || x.s != i+1 || x.i != i+2) { DEBUG_NL; abort (); } }\n+{ if (x.c != i/16 || x.s != i+1 || x.i != i+2) DEBUG_CHECK }\n void checkScis (Scis x, int i)\n-{ if (x.c != i/16 || x.i != i+1 || x.s != i+2) { DEBUG_NL; abort (); } }\n+{ if (x.c != i/16 || x.i != i+1 || x.s != i+2) DEBUG_CHECK }\n \n T(0, Ssc)\n T(1, Ssc)\n@@ -206,5 +202,8 @@ T(13, Sis)\n T(14, Sis)\n T(15, Sis)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "9dadfb03c1fbe3099e7d8345561643d6c43a7f61", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-8_y.c", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n /* Turn off checking for variable arguments with -DSKIPVA.  */\n #ifdef SKIPVA\n@@ -81,37 +72,21 @@ test##TYPE##N (struct S##TYPE##N s1, struct S##TYPE##N s2,\t\\\n \t       struct S##TYPE##N s13, struct S##TYPE##N s14,\t\\\n \t       struct S##TYPE##N s15, struct S##TYPE##N s16)\t\\\n {\t\t\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s1, 1*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s2, 2*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s3, 3*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s4, 4*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s5, 5*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s6, 6*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s7, 7*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s8, 8*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s9, 9*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s10, 10*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s11, 11*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s12, 12*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s13, 13*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s14, 14*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s15, 15*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s16, 16*16);\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n@@ -126,7 +101,6 @@ testva##TYPE##N (int n, ...)\t\t\t\t\t\\\n       for (i = 0; i < n; i++)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  struct S##TYPE##N t = va_arg (ap, struct S##TYPE##N);\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n \t  check##TYPE##N (&t, (i+1)*16);\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n       va_end (ap);\t\t\t\t\t\t\\"}, {"sha": "942de1355083a6ffe908e5b2dd7bdfa7d165721d", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-9_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -4,6 +4,7 @@\n \n extern void struct_by_value_9_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "3cd7ca74f048b6d661e80759f68db1f1c955992f", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-9_x.c", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,13 +1,4 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n #define T(N, TYPE)\t\t\t\t\t\t\\\n struct S##TYPE##N { TYPE i[N]; };\t\t\t\t\\\n@@ -67,6 +58,7 @@ void\t\t\t\t\t\t\t\t\\\n testit##TYPE##N (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##TYPE##N  ( &g1s##TYPE##N,  1*16);\t\t\t\\\n   init##TYPE##N  ( &g2s##TYPE##N,  2*16);\t\t\t\\\n   init##TYPE##N  ( &g3s##TYPE##N,  3*16);\t\t\t\\\n@@ -84,7 +76,9 @@ testit##TYPE##N (void)\t\t\t\t\t\t\\\n   init##TYPE##N  (&g15s##TYPE##N, 15*16);\t\t\t\\\n   init##TYPE##N  (&g16s##TYPE##N, 16*16);\t\t\t\\\n   checkg##TYPE##N ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n   test##TYPE##N (g1s##TYPE##N, g2s##TYPE##N,\t\t\t\\\n \t\t g3s##TYPE##N, g4s##TYPE##N,\t\t\t\\\n \t\t g5s##TYPE##N, g6s##TYPE##N,\t\t\t\\\n@@ -93,7 +87,10 @@ testit##TYPE##N (void)\t\t\t\t\t\t\\\n \t\t g11s##TYPE##N, g12s##TYPE##N,\t\t\t\\\n \t\t g13s##TYPE##N, g14s##TYPE##N,\t\t\t\\\n \t\t g15s##TYPE##N, g16s##TYPE##N);\t\t\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n   testva##TYPE##N (16,\t\t\t\t\t\t\\\n \t\t   g1s##TYPE##N, g2s##TYPE##N,\t\t\t\\\n \t\t   g3s##TYPE##N, g4s##TYPE##N,\t\t\t\\\n@@ -103,7 +100,9 @@ testit##TYPE##N (void)\t\t\t\t\t\t\\\n \t\t   g11s##TYPE##N, g12s##TYPE##N,\t\t\\\n \t\t   g13s##TYPE##N, g14s##TYPE##N,\t\t\\\n \t\t   g15s##TYPE##N, g16s##TYPE##N);\t\t\\\n-  DEBUG_FPUTS (\" test2\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2: \");\t\t\t\t\t\\\n   test2_##TYPE##N (g1s##TYPE##N, g3s##TYPE##N,\t\t\t\\\n \t\t   g5s##TYPE##N, g7s##TYPE##N,\t\t\t\\\n \t\t   g9s##TYPE##N, g11s##TYPE##N,\t\t\t\\\n@@ -121,17 +120,17 @@ typedef struct { char c; int i; short s; } Scis;\n \n extern void abort (void);\n \n-void checkSc (Sc x, int i) { if (x.c != i/16) { DEBUG_NL; abort (); } }\n-void checkSs (Ss x, int i) { if (x.s != i) { DEBUG_NL; abort (); } }\n-void checkSi (Si x, int i) { if (x.i != i) { DEBUG_NL; abort (); } }\n+void checkSc (Sc x, int i) { if (x.c != i/16) DEBUG_CHECK }\n+void checkSs (Ss x, int i) { if (x.s != i) DEBUG_CHECK }\n+void checkSi (Si x, int i) { if (x.i != i) DEBUG_CHECK }\n void checkSsc (Ssc x, int i)\n-{ if (x.s != i || x.c != (i/16)+1) { DEBUG_NL; abort (); } }\n+{ if (x.s != i || x.c != (i/16)+1) DEBUG_CHECK }\n void checkSis (Sis x, int i)\n-{ if (x.i != i || x.s != i+1) { DEBUG_NL; abort (); } }\n+{ if (x.i != i || x.s != i+1) DEBUG_CHECK }\n void checkScsi (Scsi x, int i)\n-{ if (x.c != i/16 || x.s != i+1 || x.i != i+2) { DEBUG_NL; abort (); } }\n+{ if (x.c != i/16 || x.s != i+1 || x.i != i+2) DEBUG_CHECK }\n void checkScis (Scis x, int i)\n-{ if (x.c != i/16 || x.i != i+1 || x.s != i+2) { DEBUG_NL; abort (); } }\n+{ if (x.c != i/16 || x.i != i+1 || x.s != i+2) DEBUG_CHECK }\n \n T(0, Scsi)\n T(1, Scsi)\n@@ -206,5 +205,8 @@ T(13, Scis)\n T(14, Scis)\n T(15, Scis)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "5d034048c1a9a955cdeeaef9cc70e949a546174c", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-9_y.c", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,15 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n+#include \"compat-common.h\"\n \n /* Turn off checking for variable arguments with -DSKIPVA.  */\n #ifdef SKIPVA\n@@ -81,37 +72,21 @@ test##TYPE##N (struct S##TYPE##N s1, struct S##TYPE##N s2,\t\\\n \t       struct S##TYPE##N s13, struct S##TYPE##N s14,\t\\\n \t       struct S##TYPE##N s15, struct S##TYPE##N s16)\t\\\n {\t\t\t\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s1, 1*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s2, 2*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s3, 3*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s4, 4*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s5, 5*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s6, 6*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s7, 7*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s8, 8*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s9, 9*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s10, 10*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s11, 11*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s12, 12*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s13, 13*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s14, 14*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s15, 15*16);\t\t\t\t\t\\\n-  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   check##TYPE##N (&s16, 16*16);\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n@@ -126,7 +101,6 @@ testva##TYPE##N (int n, ...)\t\t\t\t\t\\\n       for (i = 0; i < n; i++)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  struct S##TYPE##N t = va_arg (ap, struct S##TYPE##N);\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n \t  check##TYPE##N (&t, (i+1)*16);\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n       va_end (ap);\t\t\t\t\t\t\\"}, {"sha": "22a1f6ef7c89c36884fa98a58e9bdc18e9fb1f88", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-2_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -3,6 +3,7 @@\n \n extern void struct_return_2_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "ff83e95f064b63e957b86e0c480d0c6df447bc75", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-2_x.c", "status": "modified", "additions": 48, "deletions": 39, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,12 +1,10 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n+#include \"compat-common.h\"\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n #else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n+const int test_va = 1;\n #endif\n \n #define T(N, NAME, TYPE)\t\t\t\t\t\\\n@@ -30,11 +28,11 @@ void\t\t\t\t\t\t\t\t\\\n check##NAME##N (struct S##NAME##N *p, int i)\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   int j;\t\t\t\t\t\t\t\\\n+  DEBUG_DOT;\t\t\t\t\t\t\t\\\n   for (j = 0; j < N; j++)\t\t\t\t\t\\\n     if (p->i[j] != (TYPE) (i + j))\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n-\tDEBUG_NL;\t\t\t\t\t\t\\\n-\tabort ();\t\t\t\t\t\t\\\n+\tDEBUG_FAIL;\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n@@ -43,6 +41,7 @@ testit##NAME##N (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   struct S##NAME##N rslt;\t\t\t\t\t\\\n   DEBUG_FPUTS (#NAME \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##NAME##N  ( &g1s##NAME##N,  1*16);\t\t\t\\\n   init##NAME##N  ( &g2s##NAME##N,  2*16);\t\t\t\\\n   init##NAME##N  ( &g3s##NAME##N,  3*16);\t\t\t\\\n@@ -60,42 +59,49 @@ testit##NAME##N (void)\t\t\t\t\t\t\\\n   init##NAME##N  (&g15s##NAME##N, 15*16);\t\t\t\\\n   init##NAME##N  (&g16s##NAME##N, 16*16);\t\t\t\\\n   checkg##NAME##N ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test0\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0: \");\t\t\t\t\t\\\n   rslt = test0##NAME##N ();\t\t\t\t\t\\\n   check##NAME##N (&rslt, 1*16);\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test1\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME \"[\" #N \"]\");\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1: \");\t\t\t\t\t\\\n   rslt = test1##NAME##N (g1s##NAME##N);\t\t\t\t\\\n   check##NAME##N (&rslt, 1*16);\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n-  rslt = testva##NAME##N (1, g1s##NAME##N);\t\t\t\\\n-  check##NAME##N (&rslt, 1*16);\t\t\t\t\t\\\n-  rslt = testva##NAME##N (5,\t\t\t\t\t\\\n-\t\t\t  g1s##NAME##N, g2s##NAME##N,\t\t\\\n-\t\t\t  g3s##NAME##N, g4s##NAME##N,\t\t\\\n-\t\t\t  g5s##NAME##N);\t\t\t\\\n-  check##NAME##N (&rslt, 5*16);\t\t\t\t\t\\\n-  rslt = testva##NAME##N (9,\t\t\t\t\t\\\n-\t\t\t  g1s##NAME##N, g2s##NAME##N,\t\t\\\n-\t\t\t  g3s##NAME##N, g4s##NAME##N,\t\t\\\n-\t\t\t  g5s##NAME##N, g6s##NAME##N,\t\t\\\n-\t\t\t  g7s##NAME##N, g8s##NAME##N,\t\t\\\n-\t\t\t  g9s##NAME##N);\t\t\t\\\n-  check##NAME##N (&rslt, 9*16);\t\t\t\t\t\\\n-  rslt = testva##NAME##N (16,\t\t\t\t\t\\\n-\t\t\t  g1s##NAME##N, g2s##NAME##N,\t\t\\\n-\t\t\t  g3s##NAME##N, g4s##NAME##N,\t\t\\\n-\t\t\t  g5s##NAME##N, g6s##NAME##N,\t\t\\\n-\t\t\t  g7s##NAME##N, g8s##NAME##N,\t\t\\\n-\t\t\t  g9s##NAME##N, g10s##NAME##N,\t\t\\\n-\t\t\t  g11s##NAME##N, g12s##NAME##N,\t\t\\\n-\t\t\t  g13s##NAME##N, g14s##NAME##N,\t\t\\\n-\t\t\t  g15s##NAME##N, g16s##NAME##N);\t\\\n-  check##NAME##N (&rslt, 16*16);\t\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      DEBUG_NL;\t\t\t\t\t\t\t\\\n+      DEBUG_FPUTS (#NAME \"[\" #N \"]\");\t\t\t\t\\\n+      DEBUG_FPUTS (\" testva: \");\t\t\t\t\\\n+      rslt = testva##NAME##N (1, g1s##NAME##N);\t\t\t\\\n+      check##NAME##N (&rslt, 1*16);\t\t\t\t\\\n+      rslt = testva##NAME##N (5,\t\t\t\t\\\n+\t\t\t      g1s##NAME##N, g2s##NAME##N,\t\\\n+\t\t\t      g3s##NAME##N, g4s##NAME##N,\t\\\n+\t\t\t      g5s##NAME##N);\t\t\t\\\n+      check##NAME##N (&rslt, 5*16);\t\t\t\t\\\n+      rslt = testva##NAME##N (9,\t\t\t\t\\\n+\t\t\t      g1s##NAME##N, g2s##NAME##N,\t\\\n+\t\t\t      g3s##NAME##N, g4s##NAME##N,\t\\\n+\t\t\t      g5s##NAME##N, g6s##NAME##N,\t\\\n+\t\t\t      g7s##NAME##N, g8s##NAME##N,\t\\\n+\t\t\t      g9s##NAME##N);\t\t\t\\\n+      check##NAME##N (&rslt, 9*16);\t\t\t\t\\\n+      rslt = testva##NAME##N (16,\t\t\t\t\\\n+\t\t\t      g1s##NAME##N, g2s##NAME##N,\t\\\n+\t\t\t      g3s##NAME##N, g4s##NAME##N,\t\\\n+\t\t\t      g5s##NAME##N, g6s##NAME##N,\t\\\n+\t\t\t      g7s##NAME##N, g8s##NAME##N,\t\\\n+\t\t\t      g9s##NAME##N, g10s##NAME##N,\t\\\n+\t\t\t      g11s##NAME##N, g12s##NAME##N,\t\\\n+\t\t\t      g13s##NAME##N, g14s##NAME##N,\t\\\n+\t\t\t      g15s##NAME##N, g16s##NAME##N);\t\\\n+      check##NAME##N (&rslt, 16*16);\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n-extern void abort (void);\n-\n T(0, uc, unsigned char)\n T(1, uc, unsigned char)\n T(2, uc, unsigned char)\n@@ -201,5 +207,8 @@ T(13, ui, unsigned int)\n T(14, ui, unsigned int)\n T(15, ui, unsigned int)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "d8bdcc240de63d8a7acdc4d2c80b20503672016a", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-2_y.c", "status": "modified", "additions": 5, "deletions": 27, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,22 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n-\n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n-const int test_va = 0;\n-#else\n-const int test_va = 1;\n-#endif\n+#include \"compat-common.h\"\n \n #define T(N, NAME, TYPE)\t\t\t\t\t\\\n struct S##NAME##N { TYPE i[N]; };\t\t\t\t\\\n@@ -79,16 +63,10 @@ testva##NAME##N (int n, ...)\t\t\t\t\t\\\n   int i;\t\t\t\t\t\t\t\\\n   struct S##NAME##N rslt;\t\t\t\t\t\\\n   va_list ap;\t\t\t\t\t\t\t\\\n-  if (test_va)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      va_start (ap, n);\t\t\t\t\t\t\\\n-      for (i = 0; i < n; i++)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  rslt = va_arg (ap, struct S##NAME##N);\t\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      va_end (ap);\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n+  va_start (ap, n);\t\t\t\t\t\t\\\n+  for (i = 0; i < n; i++)\t\t\t\t\t\\\n+    rslt = va_arg (ap, struct S##NAME##N);\t\t\t\\\n+  va_end (ap);\t\t\t\t\t\t\t\\\n   return rslt;\t\t\t\t\t\t\t\\\n }\n "}, {"sha": "83f0d119a534ae9144c17ecaf5300dafe4c7f2c7", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-3_main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_main.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -4,6 +4,7 @@\n \n extern void struct_return_3_x (void);\n extern void exit (int);\n+int fails;\n \n int\n main ()"}, {"sha": "62e9a94f5aba157327bf18fdb582b0e42b809a28", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-3_x.c", "status": "modified", "additions": 43, "deletions": 34, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_x.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,12 +1,10 @@\n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n+#include \"compat-common.h\"\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n #else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n+const int test_va = 1;\n #endif\n \n #define T(TYPE)\t\t\t\t\t\t\t\\\n@@ -26,6 +24,7 @@ testit##TYPE (void)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   TYPE rslt;\t\t\t\t\t\t\t\\\n   DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n   init##TYPE  (&g01##TYPE,  1);\t\t\t\t\t\\\n   init##TYPE  (&g02##TYPE,  2);\t\t\t\t\t\\\n   init##TYPE  (&g03##TYPE,  3);\t\t\t\t\t\\\n@@ -43,39 +42,46 @@ testit##TYPE (void)\t\t\t\t\t\t\\\n   init##TYPE  (&g15##TYPE, 15);\t\t\t\t\t\\\n   init##TYPE  (&g16##TYPE, 16);\t\t\t\t\t\\\n   checkg##TYPE ();\t\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test0\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0: \");\t\t\t\t\t\\\n   rslt = test0##TYPE ();\t\t\t\t\t\\\n   check##TYPE (rslt, 1);\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" test1\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1: \");\t\t\t\t\t\\\n   rslt = test1##TYPE (g01##TYPE);\t\t\t\t\\\n   check##TYPE (rslt, 1);\t\t\t\t\t\\\n-  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n-  rslt = testva##TYPE (1, g01##TYPE);\t\t\t\t\\\n-  check##TYPE (rslt, 1);\t\t\t\t\t\\\n-  rslt = testva##TYPE (5, g01##TYPE, g02##TYPE,\t\t\t\\\n-\t\t\t  g03##TYPE, g04##TYPE,\t\t\t\\\n-\t\t\t  g05##TYPE);\t\t\t\t\\\n-  check##TYPE (rslt, 5);\t\t\t\t\t\\\n-  rslt = testva##TYPE (9, g01##TYPE, g02##TYPE,\t\t\t\\\n-\t\t\t  g03##TYPE, g04##TYPE,\t\t\t\\\n-\t\t\t  g05##TYPE, g06##TYPE,\t\t\t\\\n-\t\t\t  g07##TYPE, g08##TYPE,\t\t\t\\\n-\t\t\t  g09##TYPE);\t\t\t\t\\\n-  check##TYPE (rslt, 9);\t\t\t\t\t\\\n-  rslt = testva##TYPE (16, g01##TYPE, g02##TYPE,\t\t\\\n-\t\t\t  g03##TYPE, g04##TYPE,\t\t\t\\\n-\t\t\t  g05##TYPE, g06##TYPE,\t\t\t\\\n-\t\t\t  g07##TYPE, g08##TYPE,\t\t\t\\\n-\t\t\t  g09##TYPE, g10##TYPE,\t\t\t\\\n-\t\t\t  g11##TYPE, g12##TYPE,\t\t\t\\\n-\t\t\t  g13##TYPE, g14##TYPE,\t\t\t\\\n-\t\t\t  g15##TYPE, g16##TYPE);\t\t\\\n-  check##TYPE (rslt, 16);\t\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      DEBUG_NL;\t\t\t\t\t\t\t\\\n+      DEBUG_FPUTS (#TYPE);\t\t\t\t\t\\\n+      DEBUG_FPUTS (\" testva: \");\t\t\t\t\\\n+      rslt = testva##TYPE (1, g01##TYPE);\t\t\t\\\n+      check##TYPE (rslt, 1);\t\t\t\t\t\\\n+      rslt = testva##TYPE (5, g01##TYPE, g02##TYPE,\t\t\\\n+\t\t\t   g03##TYPE, g04##TYPE,\t\t\\\n+\t\t\t   g05##TYPE);\t\t\t\t\\\n+      check##TYPE (rslt, 5);\t\t\t\t\t\\\n+      rslt = testva##TYPE (9, g01##TYPE, g02##TYPE,\t\t\\\n+\t\t\t   g03##TYPE, g04##TYPE,\t\t\\\n+\t\t\t   g05##TYPE, g06##TYPE,\t\t\\\n+\t\t\t   g07##TYPE, g08##TYPE,\t\t\\\n+\t\t\t   g09##TYPE);\t\t\t\t\\\n+      check##TYPE (rslt, 9);\t\t\t\t\t\\\n+      rslt = testva##TYPE (16, g01##TYPE, g02##TYPE,\t\t\\\n+\t\t\t   g03##TYPE, g04##TYPE,\t\t\\\n+\t\t\t   g05##TYPE, g06##TYPE,\t\t\\\n+\t\t\t   g07##TYPE, g08##TYPE,\t\t\\\n+\t\t\t   g09##TYPE, g10##TYPE,\t\t\\\n+\t\t\t   g11##TYPE, g12##TYPE,\t\t\\\n+\t\t\t   g13##TYPE, g14##TYPE,\t\t\\\n+\t\t\t   g15##TYPE, g16##TYPE);\t\t\\\n+      check##TYPE (rslt, 16);\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n-extern void abort (void);\n-\n #include \"small-struct-defs.h\"\n #include \"small-struct-check.h\"\n \n@@ -118,5 +124,8 @@ T(Ssic)\n T(Sisc)\n T(Sics)\n \n+if (fails != 0)\n+  abort ();\n+\n #undef T\n }"}, {"sha": "dbd471351008f00e9a617ebca36b1c77dca85832", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-3_y.c", "status": "modified", "additions": 5, "deletions": 27, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9b0aca6a695876dc07e1d7d6e2de0c51776121/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_y.c?ref=aa9b0aca6a695876dc07e1d7d6e2de0c51776121", "patch": "@@ -1,22 +1,6 @@\n #include <stdarg.h>\n \n-#ifdef DBG\n-#include <stdio.h>\n-#define DEBUG_FPUTS(x) fputs (x, stdout)\n-#define DEBUG_DOT putc ('.', stdout)\n-#define DEBUG_NL putc ('\\n', stdout)\n-#else\n-#define DEBUG_FPUTS(x)\n-#define DEBUG_DOT\n-#define DEBUG_NL\n-#endif\n-\n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n-const int test_va = 0;\n-#else\n-const int test_va = 1;\n-#endif\n+#include \"compat-common.h\"\n \n #include \"small-struct-defs.h\"\n #include \"small-struct-init.h\"\n@@ -68,16 +52,10 @@ testva##TYPE (int n, ...)\t\t\t\t\t\\\n   int i;\t\t\t\t\t\t\t\\\n   TYPE rslt;\t\t\t\t\t\t\t\\\n   va_list ap;\t\t\t\t\t\t\t\\\n-  if (test_va)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      va_start (ap, n);\t\t\t\t\t\t\\\n-      for (i = 0; i < n; i++)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  rslt = va_arg (ap, TYPE);\t\t\t\t\\\n-\t  DEBUG_DOT;\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      va_end (ap);\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n+  va_start (ap, n);\t\t\t\t\t\t\\\n+  for (i = 0; i < n; i++)\t\t\t\t\t\\\n+      rslt = va_arg (ap, TYPE);\t\t\t\t\t\\\n+  va_end (ap);\t\t\t\t\t\t\t\\\n   return rslt;\t\t\t\t\t\t\t\\\n }\n "}]}