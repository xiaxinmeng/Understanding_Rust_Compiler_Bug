{"sha": "2caafc4476400a74b975f65228e91ecffc769761", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhYWZjNDQ3NjQwMGE3NGI5NzVmNjUyMjhlOTFlY2ZmYzc2OTc2MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-10-26T10:40:22Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-10-26T10:40:22Z"}, "message": "sh.c (sh_contains_memref_p_1): Delete.\n\ngcc/\n\t* config/sh/sh.c (sh_contains_memref_p_1): Delete.\n\t(sh_contains_memref_p): Use FOR_EACH_SUBRTX.\n\nFrom-SVN: r216702", "tree": {"sha": "e841dd94ee2597f8fb3e2addc09389a8e757b4af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e841dd94ee2597f8fb3e2addc09389a8e757b4af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2caafc4476400a74b975f65228e91ecffc769761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2caafc4476400a74b975f65228e91ecffc769761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2caafc4476400a74b975f65228e91ecffc769761", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2caafc4476400a74b975f65228e91ecffc769761/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5dabe5a94ef83a96f437f9f3425caf0f5280f08d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dabe5a94ef83a96f437f9f3425caf0f5280f08d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dabe5a94ef83a96f437f9f3425caf0f5280f08d"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "b7a51a418792321d353e9a2a946d62b8b9dff848", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2caafc4476400a74b975f65228e91ecffc769761/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2caafc4476400a74b975f65228e91ecffc769761/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2caafc4476400a74b975f65228e91ecffc769761", "patch": "@@ -1,3 +1,8 @@\n+2014-10-26  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/sh/sh.c (sh_contains_memref_p_1): Delete.\n+\t(sh_contains_memref_p): Use FOR_EACH_SUBRTX.\n+\n 2014-10-26  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/sh/sh-protos.h (shmedia_cleanup_truncate): Take an"}, {"sha": "2b1f98bba493bbb0291a14e21b177b837f00c379", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2caafc4476400a74b975f65228e91ecffc769761/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2caafc4476400a74b975f65228e91ecffc769761/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=2caafc4476400a74b975f65228e91ecffc769761", "patch": "@@ -12972,18 +12972,15 @@ shmedia_cleanup_truncate (rtx x)\n    so we must look at the rtl ourselves to see if any of the feeding\n    registers is used in a memref.\n \n-   Called by sh_contains_memref_p via for_each_rtx.  */\n-static int\n-sh_contains_memref_p_1 (rtx *loc, void *data ATTRIBUTE_UNUSED)\n-{\n-  return (MEM_P (*loc));\n-}\n-\n-/* Return true iff INSN contains a MEM.  */\n+   Return true iff INSN contains a MEM.  */\n bool\n sh_contains_memref_p (rtx insn)\n {\n-  return for_each_rtx (&PATTERN (insn), &sh_contains_memref_p_1, NULL);\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, PATTERN (insn), NONCONST)\n+    if (MEM_P (*iter))\n+      return true;\n+  return false;\n }\n \n /* Return true iff INSN loads a banked register.  */"}]}