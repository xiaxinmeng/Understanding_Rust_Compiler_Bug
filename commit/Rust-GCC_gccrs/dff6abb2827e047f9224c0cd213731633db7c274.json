{"sha": "dff6abb2827e047f9224c0cd213731633db7c274", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZmNmFiYjI4MjdlMDQ3ZjkyMjRjMGNkMjEzNzMxNjMzZGI3YzI3NA==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2007-10-08T06:45:56Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2007-10-08T06:45:56Z"}, "message": "re PR ada/33454 (Wrong system.ads for --with-cpu=default32)\n\n\tPR ada/33454\n\tRevert:\n\t2007-08-31  Ben Elliston  <bje@au.ibm.com>\n\n\t* Makefile.in (LIBGNAT_TARGET_PAIRS): Use system-linux-ppc64.ads\n\twhen compiling for powerpc64-*-linux.\n\t* system-linux-ppc64.ads: New file.\n\nFrom-SVN: r129121", "tree": {"sha": "5d9760b25b5082f14fbfa46088bb8cca59bb2901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d9760b25b5082f14fbfa46088bb8cca59bb2901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dff6abb2827e047f9224c0cd213731633db7c274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff6abb2827e047f9224c0cd213731633db7c274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dff6abb2827e047f9224c0cd213731633db7c274", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff6abb2827e047f9224c0cd213731633db7c274/comments", "author": null, "committer": null, "parents": [{"sha": "ed0940e3aab72df9b68547cc392c24710ec103d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0940e3aab72df9b68547cc392c24710ec103d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed0940e3aab72df9b68547cc392c24710ec103d5"}], "stats": {"total": 172, "additions": 12, "deletions": 160}, "files": [{"sha": "976534de92f166504da89640f464f006da6b7022", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff6abb2827e047f9224c0cd213731633db7c274/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff6abb2827e047f9224c0cd213731633db7c274/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dff6abb2827e047f9224c0cd213731633db7c274", "patch": "@@ -1,3 +1,13 @@\n+2007-10-08  Ben Elliston  <bje@au.ibm.com>\n+\n+\tPR ada/33454\n+\tRevert:\n+\t2007-08-31  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* Makefile.in (LIBGNAT_TARGET_PAIRS): Use system-linux-ppc64.ads\n+\twhen compiling for powerpc64-*-linux.\n+\t* system-linux-ppc64.ads: New file.\n+\n 2007-09-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tMapped location support"}, {"sha": "240688084969826df96f526e7ed36889712cb9f7", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff6abb2827e047f9224c0cd213731633db7c274/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff6abb2827e047f9224c0cd213731633db7c274/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=dff6abb2827e047f9224c0cd213731633db7c274", "patch": "@@ -1324,13 +1324,8 @@ ifeq ($(strip $(filter-out powerpc% linux%,$(arch) $(osys))),)\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n-  s-tpopsp.adb<s-tpopsp-posix-foreign.adb\n-\n-  ifeq ($(strip $(filter-out powerpc64,$(arch))),)\n-    LIBGNAT_TARGET_PAIRS += system.ads<system-linux-ppc64.ads\n-  else\n-    LIBGNAT_TARGET_PAIRS += system.ads<system-linux-ppc.ads\n-  endif\n+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+  system.ads<system-linux-ppc.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-linux.adb \\"}, {"sha": "2d9e528185a16eb7b24f4fc70015c85606ffa998", "filename": "gcc/ada/system-linux-ppc64.ads", "status": "removed", "additions": 0, "deletions": 153, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0940e3aab72df9b68547cc392c24710ec103d5/gcc%2Fada%2Fsystem-linux-ppc64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0940e3aab72df9b68547cc392c24710ec103d5/gcc%2Fada%2Fsystem-linux-ppc64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ppc64.ads?ref=ed0940e3aab72df9b68547cc392c24710ec103d5", "patch": "@@ -1,153 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                        (GNU-Linux/PPC64 Version)                         --\n---                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.000_001;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  0 .. 98 corresponds to the system priority range 1 .. 99.\n-   --\n-   --  If the scheduling policy is SCHED_FIFO or SCHED_RR the runtime makes use\n-   --  of the entire range provided by the system.\n-   --\n-   --  If the scheduling policy is SCHED_OTHER the only valid system priority\n-   --  is 1 and other values are simply ignored.\n-\n-   Max_Priority           : constant Positive := 97;\n-   Max_Interrupt_Priority : constant Positive := 98;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 98;\n-   subtype Priority           is Any_Priority range  0 .. 97;\n-   subtype Interrupt_Priority is Any_Priority range 98 .. 98;\n-\n-   Default_Priority : constant Priority := 48;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := False;\n-   Support_64_Bit_Divides    : constant Boolean := True;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-   GCC_ZCX_Support           : constant Boolean := True;\n-\n-end System;"}]}