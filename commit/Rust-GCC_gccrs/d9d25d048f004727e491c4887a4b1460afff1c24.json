{"sha": "d9d25d048f004727e491c4887a4b1460afff1c24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlkMjVkMDQ4ZjAwNDcyN2U0OTFjNDg4N2E0YjE0NjBhZmZmMWMyNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T09:20:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T09:20:56Z"}, "message": "[multiple changes]\n\n2016-04-18  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_prag.adb (Process_Convention): Relax rule on exporting\n\tIntrinsic types if Relaxed_RM_Semantics is True.\n\n2016-04-18  Vincent Celier  <celier@adacore.com>\n\n\t* sem_ch3.adb, lib.ads, sinfo.ads, sem_ch10.adb, einfo.adb, einfo.ads,\n\tchecks.ads, sem_ch12.adb, sem.adb, sem_util.adb, sem_util.ads,\n\tsem_res.adb, sem_attr.adb, par.adb, exp_ch4.adb, errout.ads,\n\tsem_ch4.adb, atree.adb, atree.ads, sem_warn.adb, treepr.adb,\n\texp_ch3.ads, exp_unst.adb: Change \"descendent\" to\n\t\"descendant\" in comments, error messages and identifiers.\n\n2016-04-18  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_type.adb (Operator_Matches_Spec): Call First_Formal on\n\tNew_S only once at the beginning of the function.\n\nFrom-SVN: r235100", "tree": {"sha": "7c869e526e305e1e30c821d62503bbbb521755c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c869e526e305e1e30c821d62503bbbb521755c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9d25d048f004727e491c4887a4b1460afff1c24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9d25d048f004727e491c4887a4b1460afff1c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9d25d048f004727e491c4887a4b1460afff1c24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9d25d048f004727e491c4887a4b1460afff1c24/comments", "author": null, "committer": null, "parents": [{"sha": "939264d3a37d0645de08143b4c4660637ba2a127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/939264d3a37d0645de08143b4c4660637ba2a127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/939264d3a37d0645de08143b4c4660637ba2a127"}], "stats": {"total": 342, "additions": 184, "deletions": 158}, "files": [{"sha": "465294be441c4d930369389d70d9cbf81e33363b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -1,3 +1,22 @@\n+2016-04-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_prag.adb (Process_Convention): Relax rule on exporting\n+\tIntrinsic types if Relaxed_RM_Semantics is True.\n+\n+2016-04-18  Vincent Celier  <celier@adacore.com>\n+\n+\t* sem_ch3.adb, lib.ads, sinfo.ads, sem_ch10.adb, einfo.adb, einfo.ads,\n+\tchecks.ads, sem_ch12.adb, sem.adb, sem_util.adb, sem_util.ads,\n+\tsem_res.adb, sem_attr.adb, par.adb, exp_ch4.adb, errout.ads,\n+\tsem_ch4.adb, atree.adb, atree.ads, sem_warn.adb, treepr.adb,\n+\texp_ch3.ads, exp_unst.adb: Change \"descendent\" to\n+\t\"descendant\" in comments, error messages and identifiers.\n+\n+2016-04-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_type.adb (Operator_Matches_Spec): Call First_Formal on\n+\tNew_S only once at the beginning of the function.\n+\n 2016-04-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (components_to_record): Restrict the previous"}, {"sha": "97f014eb9fb00b8266fa940a3ebc6a9dad263caa", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -905,7 +905,7 @@ package body Atree is\n       else\n          New_Id := New_Copy (Source);\n \n-         --  Recursively copy descendents\n+         --  Recursively copy descendants\n \n          Set_Field1 (New_Id, Possible_Copy (Field1 (New_Id)));\n          Set_Field2 (New_Id, Possible_Copy (Field2 (New_Id)));\n@@ -2305,11 +2305,11 @@ package body Atree is\n          if Fld = Union_Id (Empty) then\n             return OK;\n \n-         --  Descendent is a node\n+         --  Descendant is a node\n \n          elsif Fld in Node_Range then\n \n-            --  Traverse descendent that is syntactic subtree node\n+            --  Traverse descendant that is syntactic subtree node\n \n             if Is_Syntactic_Field (Nkind (Nod), FN) then\n                return Traverse_Func (Node_Id (Fld));\n@@ -2320,11 +2320,11 @@ package body Atree is\n                return OK;\n             end if;\n \n-         --  Descendent is a list\n+         --  Descendant is a list\n \n          elsif Fld in List_Range then\n \n-            --  Traverse descendent that is a syntactic subtree list\n+            --  Traverse descendant that is a syntactic subtree list\n \n             if Is_Syntactic_Field (Nkind (Nod), FN) then\n                declare"}, {"sha": "8d02bb7d7cb2bc1911743292b94d2fded3da5e49", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -474,8 +474,8 @@ package Atree is\n    --  The contents of the source node is not affected. If the source node\n    --  has an extension, then the destination must have an extension also.\n    --  The parent pointer of the destination and its list link, if any, are\n-   --  not affected by the copy. Note that parent pointers of descendents\n-   --  are not adjusted, so the descendents of the destination node after\n+   --  not affected by the copy. Note that parent pointers of descendants\n+   --  are not adjusted, so the descendants of the destination node after\n    --  the Copy_Node is completed have dubious parent pointers. Note that\n    --  this routine does NOT copy aspect specifications, the Has_Aspects\n    --  flag in the returned node will always be False. The caller must deal\n@@ -489,16 +489,16 @@ package Atree is\n    --  overloaded. The new node will have an extension if the source has\n    --  an extension. New_Copy (Empty) returns Empty, and New_Copy (Error)\n    --  returns Error. Note that, unlike Copy_Separate_Tree, New_Copy does not\n-   --  recursively copy any descendents, so in general parent pointers are not\n-   --  set correctly for the descendents of the copied node. Both normal and\n+   --  recursively copy any descendants, so in general parent pointers are not\n+   --  set correctly for the descendants of the copied node. Both normal and\n    --  extended nodes (entities) may be copied using New_Copy.\n \n    function Relocate_Node (Source : Node_Id) return Node_Id;\n    --  Source is a non-entity node that is to be relocated. A new node is\n    --  allocated, and the contents of Source are copied to this node, using\n-   --  New_Copy. The parent pointers of descendents of the node are then\n+   --  New_Copy. The parent pointers of descendants of the node are then\n    --  adjusted to point to the relocated copy. The original node is not\n-   --  modified, but the parent pointers of its descendents are no longer\n+   --  modified, but the parent pointers of its descendants are no longer\n    --  valid. The new copy is always marked as not overloaded. This routine is\n    --  used in conjunction with the tree rewrite routines (see descriptions of\n    --  Replace/Rewrite).\n@@ -1063,7 +1063,7 @@ package Atree is\n    --  original node). Neither Old_Node nor New_Node can be extended nodes.\n    --\n    --  Note: New_Node may not contain references to Old_Node, for example as\n-   --  descendents, since the rewrite would make such references invalid. If\n+   --  descendants, since the rewrite would make such references invalid. If\n    --  New_Node does need to reference Old_Node, then these references should\n    --  be to a relocated copy of Old_Node (see Relocate_Node procedure).\n    --\n@@ -1082,7 +1082,7 @@ package Atree is\n    --  preserves the setting of Comes_From_Source.\n    --\n    --  Note, New_Node may not contain references to Old_Node, for example as\n-   --  descendents, since the rewrite would make such references invalid. If\n+   --  descendants, since the rewrite would make such references invalid. If\n    --  New_Node does need to reference Old_Node, then these references should\n    --  be to a relocated copy of Old_Node (see Relocate_Node procedure).\n    --"}, {"sha": "2d7d203b0e569037e9c31230b7cf708426700111", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -949,7 +949,7 @@ private\n    --\n    --    For the static case the result is one or two nodes that should cause\n    --    a Constraint_Error. Typically these will include Expr itself or the\n-   --    direct descendents of Expr, such as Low/High_Bound (Expr)). It is the\n+   --    direct descendants of Expr, such as Low/High_Bound (Expr)). It is the\n    --    responsibility of the caller to rewrite and substitute the nodes with\n    --    N_Raise_Constraint_Error nodes.\n    --"}, {"sha": "a43bff5bf0786cf2c22cd0ba8050138a2a575b2e", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -528,7 +528,7 @@ package body Einfo is\n \n    --    Has_Pragma_Preelab_Init         Flag221\n    --    Used_As_Generic_Actual          Flag222\n-   --    Is_Descendent_Of_Address        Flag223\n+   --    Is_Descendant_Of_Address        Flag223\n    --    Is_Raised                       Flag224\n    --    Is_Thunk                        Flag225\n    --    Is_Only_Out_Parameter           Flag226\n@@ -2101,10 +2101,10 @@ package body Einfo is\n       return Flag132 (Id);\n    end Is_Default_Init_Cond_Procedure;\n \n-   function Is_Descendent_Of_Address (Id : E) return B is\n+   function Is_Descendant_Of_Address (Id : E) return B is\n    begin\n       return Flag223 (Id);\n-   end Is_Descendent_Of_Address;\n+   end Is_Descendant_Of_Address;\n \n    function Is_Discrim_SO_Function (Id : E) return B is\n    begin\n@@ -5102,11 +5102,11 @@ package body Einfo is\n       Set_Flag132 (Id, V);\n    end Set_Is_Default_Init_Cond_Procedure;\n \n-   procedure Set_Is_Descendent_Of_Address (Id : E; V : B := True) is\n+   procedure Set_Is_Descendant_Of_Address (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Type (Id));\n       Set_Flag223 (Id, V);\n-   end Set_Is_Descendent_Of_Address;\n+   end Set_Is_Descendant_Of_Address;\n \n    procedure Set_Is_Discrim_SO_Function (Id : E; V : B := True) is\n    begin\n@@ -7004,17 +7004,19 @@ package body Einfo is\n       else\n          Formal := First_Entity (Id);\n \n+         --  Deal with the common, non-generic case first\n+\n+         if No (Formal) or else Is_Formal (Formal) then\n+            return Formal;\n+         end if;\n+\n          --  The first/next entity chain of a generic subprogram contains all\n-         --  generic formal parameters, followed by the formal parameters. Go\n-         --  directly to the parameters by skipping the formal part.\n+         --  generic formal parameters, followed by the formal parameters.\n \n          if Is_Generic_Subprogram (Id) then\n             while Present (Formal) and then not Is_Formal (Formal) loop\n                Next_Entity (Formal);\n             end loop;\n-         end if;\n-\n-         if Present (Formal) and then Is_Formal (Formal) then\n             return Formal;\n          else\n             return Empty;\n@@ -8945,7 +8947,7 @@ package body Einfo is\n       W (\"Is_Controlled\",                   Flag42  (Id));\n       W (\"Is_Controlling_Formal\",           Flag97  (Id));\n       W (\"Is_Default_Init_Cond_Procedure\",  Flag132 (Id));\n-      W (\"Is_Descendent_Of_Address\",        Flag223 (Id));\n+      W (\"Is_Descendant_Of_Address\",        Flag223 (Id));\n       W (\"Is_Discrim_SO_Function\",          Flag176 (Id));\n       W (\"Is_Discriminant_Check_Function\",  Flag264 (Id));\n       W (\"Is_Dispatch_Table_Entity\",        Flag234 (Id));"}, {"sha": "deae1b98249236f2c9f149cfaeee28fc22a6f7c3", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -2368,7 +2368,7 @@ package Einfo is\n --       Defined in functions and procedures. Set for a generated procedure\n --       which verifies the assumption of pragma Default_Initial_Condition.\n \n---    Is_Descendent_Of_Address (Flag223)\n+--    Is_Descendant_Of_Address (Flag223)\n --       Defined in all entities. True if the entity is type System.Address,\n --       or (recursively) a subtype or derived type of System.Address.\n \n@@ -2929,7 +2929,7 @@ package Einfo is\n --    Is_Private_Descendant (Flag53)\n --       Defined in entities that can represent library units (packages,\n --       functions, procedures). Set if the library unit is itself a private\n---       child unit, or if it is the descendent of a private child unit.\n+--       child unit, or if it is the descendant of a private child unit.\n \n --    Is_Private_Primitive (Flag245)\n --       Defined in subprograms. Set if the operation is a primitive of a\n@@ -5341,7 +5341,7 @@ package Einfo is\n    --    Is_Checked_Ghost_Entity             (Flag277)\n    --    Is_Child_Unit                       (Flag73)\n    --    Is_Compilation_Unit                 (Flag149)\n-   --    Is_Descendent_Of_Address            (Flag223)\n+   --    Is_Descendant_Of_Address            (Flag223)\n    --    Is_Discrim_SO_Function              (Flag176)\n    --    Is_Discriminant_Check_Function      (Flag264)\n    --    Is_Dispatch_Table_Entity            (Flag234)\n@@ -6965,7 +6965,7 @@ package Einfo is\n    function Is_Controlling_Formal               (Id : E) return B;\n    function Is_CPP_Class                        (Id : E) return B;\n    function Is_Default_Init_Cond_Procedure      (Id : E) return B;\n-   function Is_Descendent_Of_Address            (Id : E) return B;\n+   function Is_Descendant_Of_Address            (Id : E) return B;\n    function Is_Discrim_SO_Function              (Id : E) return B;\n    function Is_Discriminant_Check_Function      (Id : E) return B;\n    function Is_Dispatch_Table_Entity            (Id : E) return B;\n@@ -7628,7 +7628,7 @@ package Einfo is\n    procedure Set_Is_Controlling_Formal           (Id : E; V : B := True);\n    procedure Set_Is_CPP_Class                    (Id : E; V : B := True);\n    procedure Set_Is_Default_Init_Cond_Procedure  (Id : E; V : B := True);\n-   procedure Set_Is_Descendent_Of_Address        (Id : E; V : B := True);\n+   procedure Set_Is_Descendant_Of_Address        (Id : E; V : B := True);\n    procedure Set_Is_Discrim_SO_Function          (Id : E; V : B := True);\n    procedure Set_Is_Discriminant_Check_Function  (Id : E; V : B := True);\n    procedure Set_Is_Dispatch_Table_Entity        (Id : E; V : B := True);\n@@ -8422,7 +8422,7 @@ package Einfo is\n    pragma Inline (Is_CPP_Class);\n    pragma Inline (Is_Decimal_Fixed_Point_Type);\n    pragma Inline (Is_Default_Init_Cond_Procedure);\n-   pragma Inline (Is_Descendent_Of_Address);\n+   pragma Inline (Is_Descendant_Of_Address);\n    pragma Inline (Is_Digits_Type);\n    pragma Inline (Is_Discrete_Or_Fixed_Point_Type);\n    pragma Inline (Is_Discrete_Type);\n@@ -8917,7 +8917,7 @@ package Einfo is\n    pragma Inline (Set_Is_Controlling_Formal);\n    pragma Inline (Set_Is_CPP_Class);\n    pragma Inline (Set_Is_Default_Init_Cond_Procedure);\n-   pragma Inline (Set_Is_Descendent_Of_Address);\n+   pragma Inline (Set_Is_Descendant_Of_Address);\n    pragma Inline (Set_Is_Discrim_SO_Function);\n    pragma Inline (Set_Is_Discriminant_Check_Function);\n    pragma Inline (Set_Is_Dispatch_Table_Entity);"}, {"sha": "706691475307d768cb6902d21fc35ff5bd632544", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -793,7 +793,7 @@ package Errout is\n \n    procedure Remove_Warning_Messages (N : Node_Id);\n    --  Remove any warning messages corresponding to the Sloc of N or any\n-   --  of its descendent nodes. No effect if no such warnings. Note that\n+   --  of its descendant nodes. No effect if no such warnings. Note that\n    --  style messages (identified by the fact that they start with \"(style)\")\n    --  are not removed by this call. Basically the idea behind this procedure\n    --  is to remove warnings about execution conditions from known dead code."}, {"sha": "e42fc821f397963a4158b3b006ede7c70d3ad8de", "filename": "gcc/ada/exp_ch3.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fexp_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fexp_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.ads?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,7 +119,7 @@ package Exp_Ch3 is\n    --  initialization routine:\n    --    Access types (which need initializing to null)\n    --    All scalar types if Normalize_Scalars mode set\n-   --    Descendents of standard string types if Normalize_Scalars mode set\n+   --    Descendants of standard string types if Normalize_Scalars mode set\n    --    Scalar types having a Default_Value attribute\n    --  Regarding Initialize_Scalars mode, this is ignored if Consider_IS is\n    --  set to False, but if Consider_IS is set to True, then the cases above"}, {"sha": "125fa1284ab0a10e82ab145b47272dcd59e7756e", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -11243,8 +11243,8 @@ package body Exp_Ch4 is\n \n                   Set_Do_Overflow_Check (N, False);\n \n-                  if not Is_Descendent_Of_Address (Etype (Expr))\n-                    and then not Is_Descendent_Of_Address (Target_Type)\n+                  if not Is_Descendant_Of_Address (Etype (Expr))\n+                    and then not Is_Descendant_Of_Address (Target_Type)\n                   then\n                      Generate_Range_Check\n                        (Expr, Target_Type, CE_Range_Check_Failed);\n@@ -11364,7 +11364,7 @@ package body Exp_Ch4 is\n                --  spurious type error on the literal when Address is a visible\n                --  integer type.\n \n-               if Is_Descendent_Of_Address (Target_Type) then\n+               if Is_Descendant_Of_Address (Target_Type) then\n                   Set_Etype (N, Target_Type);\n                else\n                   Analyze_And_Resolve (N, Target_Type);"}, {"sha": "d7053086587bad6843e57d079522b926092042e3", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -589,7 +589,7 @@ package body Exp_Unst is\n                end;\n \n                --  Now at this level, return skipping the subprogram body\n-               --  descendents, since we already took care of them!\n+               --  descendants, since we already took care of them!\n \n                return Skip;\n "}, {"sha": "50825a86be671480a7925354201f9d786bf9d8a2", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -580,7 +580,7 @@ package Lib is\n    function In_Predefined_Unit (N : Node_Or_Entity_Id) return Boolean;\n    --  Returns True if the given node or entity appears within the source text\n    --  of a predefined unit (i.e. within Ada, Interfaces, System or within one\n-   --  of the descendent packages of one of these three packages).\n+   --  of the descendant packages of one of these three packages).\n \n    function In_Predefined_Unit (S : Source_Ptr) return Boolean;\n    --  Same function as above but argument is a source pointer"}, {"sha": "f720b69d457a94daf9e694605be9f3b3092594b4", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -1611,7 +1611,7 @@ begin\n                          Name (Name'First .. Name'First + 3) = \"ada.\"\n                      then\n                         Error_Msg\n-                          (\"user-defined descendents of package Ada \" &\n+                          (\"user-defined descendants of package Ada \" &\n                              \"are not allowed\",\n                            Sloc (Unit (Comp_Unit_Node)));\n \n@@ -1620,7 +1620,7 @@ begin\n                          Name (Name'First .. Name'First + 10) = \"interfaces.\"\n                      then\n                         Error_Msg\n-                          (\"user-defined descendents of package Interfaces \" &\n+                          (\"user-defined descendants of package Interfaces \" &\n                              \"are not allowed\",\n                            Sloc (Unit (Comp_Unit_Node)));\n \n@@ -1633,7 +1633,7 @@ begin\n                                                                  \"system.rpc.\")\n                      then\n                         Error_Msg\n-                          (\"user-defined descendents of package System \" &\n+                          (\"user-defined descendants of package System \" &\n                              \"are not allowed\",\n                            Sloc (Unit (Comp_Unit_Node)));\n                      end if;"}, {"sha": "f6f4a91b43f06903a1ce7a41ddd8707c430040e3", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -2062,9 +2062,9 @@ package body Sem is\n                   end if;\n \n                   --  It's a spec, process it, and the units it depends on,\n-                  --  unless it is a descendent of the main unit.  This can\n+                  --  unless it is a descendant of the main unit.  This can\n                   --  happen when the body of a parent depends on some other\n-                  --  descendent.\n+                  --  descendant.\n \n                when others =>\n                   Par := Scope (Defining_Entity (Unit (CU)));"}, {"sha": "717a4b1d09b85c9b9e529fecab66e0ec4dccea4d", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -9278,7 +9278,7 @@ package body Sem_Attr is\n          Id  : RE_Id;\n \n       begin\n-         if Is_Descendent_Of_Address (Typ) then\n+         if Is_Descendant_Of_Address (Typ) then\n             Id := RE_Type_Class_Address;\n \n          elsif Is_Enumeration_Type (Typ) then"}, {"sha": "022edfe03e3fc250da5674ae374094903c099067", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -612,7 +612,7 @@ package body Sem_Ch10 is\n \n       --  If the unit is a subunit whose parent has not been analyzed (which\n       --  indicates that the main unit is a subunit, either the current one or\n-      --  one of its descendents) then the subunit is compiled as part of the\n+      --  one of its descendants) then the subunit is compiled as part of the\n       --  analysis of the parent, which we proceed to do. Basically this gets\n       --  handled from the top down and we don't want to do anything at this\n       --  level (i.e. this subunit will be handled on the way down from the"}, {"sha": "b6256e1ef01a02efaf2dfb963602a7ee18352913", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -13880,7 +13880,7 @@ package body Sem_Ch12 is\n       --  so that it can be properly resolved in a subsequent instantiation.\n \n       procedure Save_Global_Descendant (D : Union_Id);\n-      --  Apply Save_References recursively to the descendents of node D\n+      --  Apply Save_References recursively to the descendants of node D\n \n       procedure Save_References (N : Node_Id);\n       --  This is the recursive procedure that does the work, once the"}, {"sha": "5f28a14ba4a2db26a9e626351959cd66ed93ae00", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -2915,9 +2915,9 @@ package body Sem_Ch3 is\n         and then Chars (Def_Id) = Name_Address\n         and then Is_Predefined_File_Name (Unit_File_Name (Get_Source_Unit (N)))\n       then\n-         Set_Is_Descendent_Of_Address (Def_Id);\n-         Set_Is_Descendent_Of_Address (Base_Type (Def_Id));\n-         Set_Is_Descendent_Of_Address (Prev);\n+         Set_Is_Descendant_Of_Address (Def_Id);\n+         Set_Is_Descendant_Of_Address (Base_Type (Def_Id));\n+         Set_Is_Descendant_Of_Address (Prev);\n       end if;\n \n       Set_Optimize_Alignment_Flags (Def_Id);\n@@ -5063,7 +5063,7 @@ package body Sem_Ch3 is\n \n       Set_Is_Immediately_Visible   (Id, True);\n       Set_Depends_On_Private       (Id, Has_Private_Component (T));\n-      Set_Is_Descendent_Of_Address (Id, Is_Descendent_Of_Address (T));\n+      Set_Is_Descendant_Of_Address (Id, Is_Descendant_Of_Address (T));\n \n       if Is_Interface (T) then\n          Set_Is_Interface (Id);\n@@ -6745,10 +6745,10 @@ package body Sem_Ch3 is\n          Set_Is_Known_Valid (Derived_Type, Is_Known_Valid (Parent_Type));\n       end if;\n \n-      Set_Is_Descendent_Of_Address (Derived_Type,\n-        Is_Descendent_Of_Address (Parent_Type));\n-      Set_Is_Descendent_Of_Address (Implicit_Base,\n-        Is_Descendent_Of_Address (Parent_Type));\n+      Set_Is_Descendant_Of_Address (Derived_Type,\n+        Is_Descendant_Of_Address (Parent_Type));\n+      Set_Is_Descendant_Of_Address (Implicit_Base,\n+        Is_Descendant_Of_Address (Parent_Type));\n \n       --  Set remaining type-specific fields, depending on numeric type\n "}, {"sha": "d84ef6638db39084065045084ea7fb07eff7832d", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -3124,10 +3124,10 @@ package body Sem_Ch4 is\n          --  a visible integer type.\n \n          return Hides_Op (Fun, Nam)\n-           or else Is_Descendent_Of_Address (Etype (Form1))\n+           or else Is_Descendant_Of_Address (Etype (Form1))\n            or else\n              (Present (Form2)\n-               and then Is_Descendent_Of_Address (Etype (Form2)));\n+               and then Is_Descendant_Of_Address (Etype (Form2)));\n       end Operator_Hidden_By;\n \n    --  Start of processing for Analyze_One_Call\n@@ -3316,13 +3316,13 @@ package body Sem_Ch4 is\n                --  The actual can be compatible with the formal, but we must\n                --  also check that the context is not an address type that is\n                --  visibly an integer type. In this case the use of literals is\n-               --  illegal, except in the body of descendents of system, where\n+               --  illegal, except in the body of descendants of system, where\n                --  arithmetic operations on address are of course used.\n \n                if Has_Compatible_Type (Actual, Etype (Formal))\n                  and then\n                   (Etype (Actual) /= Universal_Integer\n-                    or else not Is_Descendent_Of_Address (Etype (Formal))\n+                    or else not Is_Descendant_Of_Address (Etype (Formal))\n                     or else\n                       Is_Predefined_File_Name\n                         (Unit_File_Name (Get_Source_Unit (N))))\n@@ -6673,8 +6673,8 @@ package body Sem_Ch4 is\n                   return;\n \n                elsif Allow_Integer_Address\n-                 and then Is_Descendent_Of_Address (Etype (L))\n-                 and then Is_Descendent_Of_Address (Etype (R))\n+                 and then Is_Descendant_Of_Address (Etype (L))\n+                 and then Is_Descendant_Of_Address (Etype (R))\n                  and then not Error_Posted (N)\n                then\n                   declare\n@@ -6909,7 +6909,7 @@ package body Sem_Ch4 is\n \n    procedure Remove_Abstract_Operations (N : Node_Id) is\n       Abstract_Op        : Entity_Id := Empty;\n-      Address_Descendent : Boolean := False;\n+      Address_Descendant : Boolean := False;\n       I                  : Interp_Index;\n       It                 : Interp;\n \n@@ -6946,8 +6946,8 @@ package body Sem_Ch4 is\n                   Formal := Next_Entity (Formal);\n                end if;\n \n-               if Is_Descendent_Of_Address (Etype (Formal)) then\n-                  Address_Descendent := True;\n+               if Is_Descendant_Of_Address (Etype (Formal)) then\n+                  Address_Descendant := True;\n                   Remove_Interp (I);\n                end if;\n \n@@ -6974,8 +6974,8 @@ package body Sem_Ch4 is\n             then\n                Abstract_Op := It.Nam;\n \n-               if Is_Descendent_Of_Address (It.Typ) then\n-                  Address_Descendent := True;\n+               if Is_Descendant_Of_Address (It.Typ) then\n+                  Address_Descendant := True;\n                   Remove_Interp (I);\n                   exit;\n \n@@ -7068,7 +7068,7 @@ package body Sem_Ch4 is\n \n                      Get_First_Interp (N, I, It);\n                      while Present (It.Nam) loop\n-                        if Is_Descendent_Of_Address (It.Typ) then\n+                        if Is_Descendant_Of_Address (It.Typ) then\n                            Remove_Interp (I);\n \n                         elsif not Is_Type (It.Nam) then\n@@ -7143,7 +7143,7 @@ package body Sem_Ch4 is\n             --  predefined operators when addresses are involved since this\n             --  case is handled separately.\n \n-            elsif Ada_Version >= Ada_2005 and then not Address_Descendent then\n+            elsif Ada_Version >= Ada_2005 and then not Address_Descendant then\n                while Present (It.Nam) loop\n                   if Is_Numeric_Type (It.Typ)\n                     and then Scope (It.Typ) = Standard_Standard"}, {"sha": "8cafd56df25f070a72c52ed7e2818296d465c7eb", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -7139,8 +7139,12 @@ package body Sem_Prag is\n          if C = Convention_Intrinsic\n            and then not Is_Subprogram_Or_Generic_Subprogram (E)\n          then\n-            Error_Pragma_Arg\n-              (\"second argument of pragma% must be a subprogram\", Arg2);\n+            --  Accept Intrinsic Export on types if Relaxed_RM_Semantics\n+\n+            if not (Is_Type (E) and then Relaxed_RM_Semantics) then\n+               Error_Pragma_Arg\n+                 (\"second argument of pragma% must be a subprogram\", Arg2);\n+            end if;\n          end if;\n \n          --  Deal with non-subprogram cases"}, {"sha": "8eb8ac04f582a2c77010835e09b4645a575c3589", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -12080,7 +12080,7 @@ package body Sem_Res is\n                   --  operations must be done explicitly here.\n \n                   if not Address_Is_Private\n-                    and then Is_Descendent_Of_Address (It.Typ)\n+                    and then Is_Descendant_Of_Address (It.Typ)\n                   then\n                      Remove_Interp (I);\n                   end if;"}, {"sha": "de8dbfb4c4c8c84615dc2d21a685a1b1b56e8444", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -3026,20 +3026,21 @@ package body Sem_Type is\n    ---------------------------\n \n    function Operator_Matches_Spec (Op, New_S : Entity_Id) return Boolean is\n-      Op_Name : constant Name_Id   := Chars (Op);\n-      T       : constant Entity_Id := Etype (New_S);\n-      New_F   : Entity_Id;\n-      Old_F   : Entity_Id;\n-      Num     : Int;\n-      T1      : Entity_Id;\n-      T2      : Entity_Id;\n+      Op_Name     : constant Name_Id   := Chars (Op);\n+      T           : constant Entity_Id := Etype (New_S);\n+      New_First_F : constant Entity_Id := First_Formal (New_S);\n+      New_F       : Entity_Id;\n+      Old_F       : Entity_Id;\n+      Num         : Int;\n+      T1          : Entity_Id;\n+      T2          : Entity_Id;\n \n    begin\n       --  To verify that a predefined operator matches a given signature,\n       --  do a case analysis of the operator classes. Function can have one\n       --  or two formals and must have the proper result type.\n \n-      New_F := First_Formal (New_S);\n+      New_F := New_First_F;\n       Old_F := First_Formal (Op);\n       Num := 0;\n       while Present (New_F) and then Present (Old_F) loop\n@@ -3056,7 +3057,7 @@ package body Sem_Type is\n       --  Unary operators\n \n       elsif Num = 1 then\n-         T1 := Etype (First_Formal (New_S));\n+         T1 := Etype (New_First_F);\n \n          if Nam_In (Op_Name, Name_Op_Subtract, Name_Op_Add, Name_Op_Abs) then\n             return Base_Type (T1) = Base_Type (T)\n@@ -3073,8 +3074,8 @@ package body Sem_Type is\n       --  Binary operators\n \n       else\n-         T1 := Etype (First_Formal (New_S));\n-         T2 := Etype (Next_Formal (First_Formal (New_S)));\n+         T1 := Etype (New_First_F);\n+         T2 := Etype (Next_Formal (New_First_F));\n \n          if Nam_In (Op_Name, Name_Op_And, Name_Op_Or, Name_Op_Xor) then\n             return Base_Type (T1) = Base_Type (T2)"}, {"sha": "f100a0764c0e5d95ae112eda92d86f4d6ada5424", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -272,11 +272,11 @@ package body Sem_Util is\n    function Address_Integer_Convert_OK (T1, T2 : Entity_Id) return Boolean is\n    begin\n       if Allow_Integer_Address\n-        and then ((Is_Descendent_Of_Address  (T1)\n+        and then ((Is_Descendant_Of_Address  (T1)\n                     and then Is_Private_Type (T1)\n                     and then Is_Integer_Type (T2))\n                             or else\n-                  (Is_Descendent_Of_Address  (T2)\n+                  (Is_Descendant_Of_Address  (T2)\n                     and then Is_Private_Type (T2)\n                     and then Is_Integer_Type (T1)))\n       then\n@@ -2128,7 +2128,7 @@ package body Sem_Util is\n             T := Full_View (T);\n          end if;\n \n-         if Is_Descendent_Of_Address (T) or else Is_Limited_Type (T) then\n+         if Is_Descendant_Of_Address (T) or else Is_Limited_Type (T) then\n             Set_Is_Pure (Subp_Id, False);\n             exit;\n          end if;\n@@ -11807,10 +11807,10 @@ package body Sem_Util is\n    end Is_Dereferenced;\n \n    ----------------------\n-   -- Is_Descendent_Of --\n+   -- Is_Descendant_Of --\n    ----------------------\n \n-   function Is_Descendent_Of (T1 : Entity_Id; T2 : Entity_Id) return Boolean is\n+   function Is_Descendant_Of (T1 : Entity_Id; T2 : Entity_Id) return Boolean is\n       T    : Entity_Id;\n       Etyp : Entity_Id;\n \n@@ -11863,7 +11863,7 @@ package body Sem_Util is\n             T := Base_Type (Etyp);\n          end loop;\n       end if;\n-   end Is_Descendent_Of;\n+   end Is_Descendant_Of;\n \n    ----------------------------------------\n    -- Is_Descendant_Of_Suspension_Object --\n@@ -15260,7 +15260,7 @@ package body Sem_Util is\n       procedure Copy_Itype_With_Replacement (New_Itype : Entity_Id);\n       --  Called during the second phase to process a copied Itype. The actual\n       --  copy happened during the first phase (so that we could make the entry\n-      --  in the mapping), but we still have to deal with the descendents of\n+      --  in the mapping), but we still have to deal with the descendants of\n       --  the copied Itype and copy them where necessary.\n \n       function Copy_List_With_Replacement (Old_List : List_Id) return List_Id;\n@@ -15274,7 +15274,7 @@ package body Sem_Util is\n \n       procedure Visit_Field (F : Union_Id; N : Node_Id);\n       --  Visit a single field, recursing to call Visit_Node or Visit_List\n-      --  if the field is a syntactic descendent of the current node (i.e.\n+      --  if the field is a syntactic descendant of the current node (i.e.\n       --  its parent is Node N).\n \n       procedure Visit_Itype (Old_Itype : Entity_Id);\n@@ -15662,7 +15662,7 @@ package body Sem_Util is\n                end;\n             end if;\n \n-            --  Recursively copy descendents\n+            --  Recursively copy descendants\n \n             Set_Field1\n               (New_Node, Copy_Field_With_Replacement (Field1 (New_Node)));\n@@ -15923,7 +15923,7 @@ package body Sem_Util is\n             Set_Cloned_Subtype (New_Itype, Old_Itype);\n          end if;\n \n-         --  Visit descendents that eventually get copied\n+         --  Visit descendants that eventually get copied\n \n          Visit_Field (Union_Id (Etype (Old_Itype)), Old_Itype);\n \n@@ -15980,7 +15980,7 @@ package body Sem_Util is\n \n             --  Nothing to do if already in the list. This can happen with an\n             --  Itype entity that appears more than once in the tree.\n-            --  Note that we do not want to visit descendents in this case.\n+            --  Note that we do not want to visit descendants in this case.\n \n             --  Test for already in list when hash table is used\n \n@@ -16011,7 +16011,7 @@ package body Sem_Util is\n             Visit_Itype (N);\n          end if;\n \n-         --  Visit descendents\n+         --  Visit descendants\n \n          Visit_Field (Field1 (N), N);\n          Visit_Field (Field2 (N), N);\n@@ -16053,12 +16053,12 @@ package body Sem_Util is\n       end if;\n \n       --  Hash table set up if required, now start phase one by visiting\n-      --  top node (we will recursively visit the descendents).\n+      --  top node (we will recursively visit the descendants).\n \n       Visit_Node (Source);\n \n       --  Now the second phase of the copy can start. First we process\n-      --  all the mapped entities, copying their descendents.\n+      --  all the mapped entities, copying their descendants.\n \n       if Present (Actual_Map) then\n          declare"}, {"sha": "d8a9b52d34aa5cf08f310ddcc77af79fbf623a47", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -62,7 +62,7 @@ package Sem_Util is\n \n    function Address_Integer_Convert_OK (T1, T2 : Entity_Id) return Boolean;\n    --  Given two types, returns True if we are in Allow_Integer_Address mode\n-   --  and one of the types is (a descendent of) System.Address (and this type\n+   --  and one of the types is (a descendant of) System.Address (and this type\n    --  is private), and the other type is any integer type.\n \n    function Addressable (V : Uint) return Boolean;\n@@ -1327,16 +1327,16 @@ package Sem_Util is\n    --  access value (selected/indexed component, explicit dereference or a\n    --  slice), and false otherwise.\n \n-   function Is_Descendent_Of (T1 : Entity_Id; T2 : Entity_Id) return Boolean;\n-   --  Returns True if type T1 is a descendent of type T2, and false otherwise.\n-   --  This is the RM definition, a type is a descendent of another type if it\n-   --  is the same type or is derived from a descendent of the other type.\n+   function Is_Descendant_Of (T1 : Entity_Id; T2 : Entity_Id) return Boolean;\n+   --  Returns True if type T1 is a descendant of type T2, and false otherwise.\n+   --  This is the RM definition, a type is a descendant of another type if it\n+   --  is the same type or is derived from a descendant of the other type.\n \n    function Is_Descendant_Of_Suspension_Object\n      (Typ : Entity_Id) return Boolean;\n    --  Determine whether type Typ is a descendant of type Suspension_Object\n    --  defined in Ada.Synchronous_Task_Control. This version is different from\n-   --  Is_Descendent_Of as the detection of Suspension_Object does not involve\n+   --  Is_Descendant_Of as the detection of Suspension_Object does not involve\n    --  an entity and by extension a call to RTSfind.\n \n    function Is_Double_Precision_Floating_Point_Type\n@@ -1778,10 +1778,10 @@ package Sem_Util is\n       New_Sloc  : Source_Ptr := No_Location;\n       New_Scope : Entity_Id  := Empty) return Node_Id;\n    --  Given a node that is the root of a subtree, Copy_Tree copies the entire\n-   --  syntactic subtree, including recursively any descendents whose parent\n-   --  field references a copied node (descendents not linked to a copied node\n+   --  syntactic subtree, including recursively any descendants whose parent\n+   --  field references a copied node (descendants not linked to a copied node\n    --  by the parent field are not copied, instead the copied tree references\n-   --  the same descendent as the original in this case, which is appropriate\n+   --  the same descendant as the original in this case, which is appropriate\n    --  for non-syntactic fields such as Etype). The parent pointers in the\n    --  copy are properly set. Copy_Tree (Empty/Error) returns Empty/Error.\n    --  The one exception to the rule of not copying semantic fields is that"}, {"sha": "18b4e91e554faf808748d23804fc4024d2de72b4", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -382,7 +382,7 @@ package body Sem_Warn is\n          Comp := First_Component (Rec);\n          while Present (Comp) loop\n             if Is_Access_Type (Etype (Comp))\n-              or else Is_Descendent_Of_Address (Etype (Comp))\n+              or else Is_Descendant_Of_Address (Etype (Comp))\n             then\n                return True;\n             end if;"}, {"sha": "c82bdecf02b6690451b857c05486984192b74c6d", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -5268,7 +5268,7 @@ package Sinfo is\n       --  argument expression has the Do_Range_Check flag set, and the range\n       --  check is done against the formal type. Note that this argument\n       --  expression may appear directly in the Parameter_Associations list,\n-      --  or may be a descendent of an N_Parameter_Association node that\n+      --  or may be a descendant of an N_Parameter_Association node that\n       --  appears in this list.\n \n       ------------------------"}, {"sha": "9933cf78a03c6ce0392fd34b8e029715918e2be1", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d25d048f004727e491c4887a4b1460afff1c24/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=d9d25d048f004727e491c4887a4b1460afff1c24", "patch": "@@ -126,10 +126,10 @@ package body Treepr is\n    --  value of the field.\n \n    procedure Print_Init;\n-   --  Initialize for printing of tree with descendents\n+   --  Initialize for printing of tree with descendants\n \n    procedure Print_Term;\n-   --  Clean up after printing of tree with descendents\n+   --  Clean up after printing of tree with descendants\n \n    procedure Print_Char (C : Character);\n    --  Print character C if currently in print phase, noop if in marking phase\n@@ -202,17 +202,17 @@ package body Treepr is\n      (N           : Node_Id;\n       Prefix_Str  : String;\n       Prefix_Char : Character);\n-   --  Called to process a single node in the case where descendents are to\n+   --  Called to process a single node in the case where descendants are to\n    --  be printed before every line, and Prefix_Char added to all lines\n    --  except the header line for the node.\n \n    procedure Visit_List (L : List_Id; Prefix_Str : String);\n-   --  Visit_List is called to process a list in the case where descendents\n+   --  Visit_List is called to process a list in the case where descendants\n    --  are to be printed. Prefix_Str is to be added to all printed lines.\n \n    procedure Visit_Elist (E : Elist_Id; Prefix_Str : String);\n    --  Visit_Elist is called to process an element list in the case where\n-   --  descendents are to be printed. Prefix_Str is to be added to all\n+   --  descendants are to be printed. Prefix_Str is to be added to all\n    --  printed lines.\n \n    -------\n@@ -1894,31 +1894,31 @@ package body Treepr is\n       New_Prefix : String (Prefix_Str'First .. Prefix_Str'Last + 2);\n       --  Prefix string for printing referenced fields\n \n-      procedure Visit_Descendent\n+      procedure Visit_Descendant\n         (D         : Union_Id;\n          No_Indent : Boolean := False);\n       --  This procedure tests the given value of one of the Fields referenced\n       --  by the current node to determine whether to visit it recursively.\n       --  Normally No_Indent is false, which means that the visited node will\n       --  be indented using New_Prefix. If No_Indent is set to True, then\n       --  this indentation is skipped, and Prefix_Str is used for the call\n-      --  to print the descendent. No_Indent is effective only if the\n-      --  referenced descendent is a node.\n+      --  to print the descendant. No_Indent is effective only if the\n+      --  referenced descendant is a node.\n \n       ----------------------\n-      -- Visit_Descendent --\n+      -- Visit_Descendant --\n       ----------------------\n \n-      procedure Visit_Descendent\n+      procedure Visit_Descendant\n         (D         : Union_Id;\n          No_Indent : Boolean := False)\n       is\n       begin\n-         --  Case of descendent is a node\n+         --  Case of descendant is a node\n \n          if D in Node_Range then\n \n-            --  Don't bother about Empty or Error descendents\n+            --  Don't bother about Empty or Error descendants\n \n             if D <= Union_Id (Empty_Or_Error) then\n                return;\n@@ -1928,7 +1928,7 @@ package body Treepr is\n                Nod : constant Node_Or_Entity_Id := Node_Or_Entity_Id (D);\n \n             begin\n-               --  Descendents in one of the standardly compiled internal\n+               --  Descendants in one of the standardly compiled internal\n                --  packages are normally ignored, unless the parent is also\n                --  in such a package (happens when Standard itself is output)\n                --  or if the -df switch is set which causes all links to be\n@@ -1941,7 +1941,7 @@ package body Treepr is\n                      return;\n                   end if;\n \n-               --  Don't bother about a descendent in a different unit than\n+               --  Don't bother about a descendant in a different unit than\n                --  the node we came from unless the -df switch is set. Note\n                --  that we know at this point that Sloc (D) > Standard_Location\n \n@@ -1992,7 +1992,7 @@ package body Treepr is\n                end if;\n             end;\n \n-         --  Case of descendent is a list\n+         --  Case of descendant is a list\n \n          elsif D in List_Range then\n \n@@ -2016,7 +2016,7 @@ package body Treepr is\n                Visit_List (List_Id (D), New_Prefix);\n             end if;\n \n-         --  Case of descendent is an element list\n+         --  Case of descendant is an element list\n \n          elsif D in Elist_Range then\n \n@@ -2033,15 +2033,15 @@ package body Treepr is\n                Visit_Elist (Elist_Id (D), New_Prefix);\n             end if;\n \n-         --  For all other kinds of descendents (strings, names, uints etc),\n+         --  For all other kinds of descendants (strings, names, uints etc),\n          --  there is nothing to visit (the contents of the field will be\n          --  printed when we print the containing node, but what concerns\n-         --  us now is looking for descendents in the tree.\n+         --  us now is looking for descendants in the tree.\n \n          else\n             null;\n          end if;\n-      end Visit_Descendent;\n+      end Visit_Descendant;\n \n    --  Start of processing for Visit_Node\n \n@@ -2100,44 +2100,44 @@ package body Treepr is\n          end if;\n       end if;\n \n-      --  Visit all descendents of this node\n+      --  Visit all descendants of this node\n \n       if Nkind (N) not in N_Entity then\n-         Visit_Descendent (Field1 (N));\n-         Visit_Descendent (Field2 (N));\n-         Visit_Descendent (Field3 (N));\n-         Visit_Descendent (Field4 (N));\n-         Visit_Descendent (Field5 (N));\n+         Visit_Descendant (Field1 (N));\n+         Visit_Descendant (Field2 (N));\n+         Visit_Descendant (Field3 (N));\n+         Visit_Descendant (Field4 (N));\n+         Visit_Descendant (Field5 (N));\n \n          if Has_Aspects (N) then\n-            Visit_Descendent (Union_Id (Aspect_Specifications (N)));\n+            Visit_Descendant (Union_Id (Aspect_Specifications (N)));\n          end if;\n \n       --  Entity case\n \n       else\n-         Visit_Descendent (Field1 (N));\n-         Visit_Descendent (Field3 (N));\n-         Visit_Descendent (Field4 (N));\n-         Visit_Descendent (Field5 (N));\n-         Visit_Descendent (Field6 (N));\n-         Visit_Descendent (Field7 (N));\n-         Visit_Descendent (Field8 (N));\n-         Visit_Descendent (Field9 (N));\n-         Visit_Descendent (Field10 (N));\n-         Visit_Descendent (Field11 (N));\n-         Visit_Descendent (Field12 (N));\n-         Visit_Descendent (Field13 (N));\n-         Visit_Descendent (Field14 (N));\n-         Visit_Descendent (Field15 (N));\n-         Visit_Descendent (Field16 (N));\n-         Visit_Descendent (Field17 (N));\n-         Visit_Descendent (Field18 (N));\n-         Visit_Descendent (Field19 (N));\n-         Visit_Descendent (Field20 (N));\n-         Visit_Descendent (Field21 (N));\n-         Visit_Descendent (Field22 (N));\n-         Visit_Descendent (Field23 (N));\n+         Visit_Descendant (Field1 (N));\n+         Visit_Descendant (Field3 (N));\n+         Visit_Descendant (Field4 (N));\n+         Visit_Descendant (Field5 (N));\n+         Visit_Descendant (Field6 (N));\n+         Visit_Descendant (Field7 (N));\n+         Visit_Descendant (Field8 (N));\n+         Visit_Descendant (Field9 (N));\n+         Visit_Descendant (Field10 (N));\n+         Visit_Descendant (Field11 (N));\n+         Visit_Descendant (Field12 (N));\n+         Visit_Descendant (Field13 (N));\n+         Visit_Descendant (Field14 (N));\n+         Visit_Descendant (Field15 (N));\n+         Visit_Descendant (Field16 (N));\n+         Visit_Descendant (Field17 (N));\n+         Visit_Descendant (Field18 (N));\n+         Visit_Descendant (Field19 (N));\n+         Visit_Descendant (Field20 (N));\n+         Visit_Descendant (Field21 (N));\n+         Visit_Descendant (Field22 (N));\n+         Visit_Descendant (Field23 (N));\n \n          --  Now an interesting special case. Normally parents are always\n          --  printed since we traverse the tree in a downwards direction.\n@@ -2146,7 +2146,7 @@ package body Treepr is\n          --  referenced elsewhere in the tree. The following catches this case.\n \n          if not Comes_From_Source (N) then\n-            Visit_Descendent (Union_Id (Parent (N)));\n+            Visit_Descendant (Union_Id (Parent (N)));\n          end if;\n \n          --  You may be wondering why we omitted Field2 above. The answer\n@@ -2171,7 +2171,7 @@ package body Treepr is\n             begin\n                Nod := N;\n                while Present (Nod) loop\n-                  Visit_Descendent (Union_Id (Next_Entity (Nod)));\n+                  Visit_Descendant (Union_Id (Next_Entity (Nod)));\n                   Nod := Next_Entity (Nod);\n                end loop;\n             end;"}]}