{"sha": "a7ff6e2725731539c2f122618c97847069a9a6aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdmZjZlMjcyNTczMTUzOWMyZjEyMjYxOGM5Nzg0NzA2OWE5YTZhYQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2012-02-15T00:29:06Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2012-02-15T00:29:06Z"}, "message": "+ PR middle-end/52142 + * ipa-inline.c (can_inline_edge_p): Do not inline...\n\n+       PR middle-end/52142\n+       * ipa-inline.c (can_inline_edge_p): Do not inline tm_pure\n+       functions into non-tm_pure functions.\n\nFrom-SVN: r184251", "tree": {"sha": "2c16b036b6df96a695142714e48c0d7df1a609a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c16b036b6df96a695142714e48c0d7df1a609a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7ff6e2725731539c2f122618c97847069a9a6aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ff6e2725731539c2f122618c97847069a9a6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ff6e2725731539c2f122618c97847069a9a6aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ff6e2725731539c2f122618c97847069a9a6aa/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6bb69d875917aeb57e2ef03a1c77532dd00b7b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb69d875917aeb57e2ef03a1c77532dd00b7b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bb69d875917aeb57e2ef03a1c77532dd00b7b45"}], "stats": {"total": 59, "additions": 56, "deletions": 3}, "files": [{"sha": "b3d1b9cdaa6fa127899f0a1d6cf6be0b29ae43e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ff6e2725731539c2f122618c97847069a9a6aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ff6e2725731539c2f122618c97847069a9a6aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7ff6e2725731539c2f122618c97847069a9a6aa", "patch": "@@ -1,3 +1,9 @@\n+2012-02-14  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR middle-end/52142\n+\t* ipa-inline.c (can_inline_edge_p): Do not inline tm_pure\n+\tfunctions into non-tm_pure functions.\n+\n 2012-02-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR lto/52178"}, {"sha": "d7ccf684f646580ae92e29cc296e30dc028e64e2", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ff6e2725731539c2f122618c97847069a9a6aa/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ff6e2725731539c2f122618c97847069a9a6aa/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=a7ff6e2725731539c2f122618c97847069a9a6aa", "patch": "@@ -284,10 +284,10 @@ can_inline_edge_p (struct cgraph_edge *e, bool report)\n       e->inline_failed = CIF_EH_PERSONALITY;\n       inlinable = false;\n     }\n-  /* TM pure functions should not get inlined if the outer function is\n-     a TM safe function.  */\n+  /* TM pure functions should not be inlined into non-TM_pure\n+     functions.  */\n   else if (is_tm_pure (callee->decl)\n-\t   && is_tm_safe (e->caller->decl))\n+\t   && !is_tm_pure (e->caller->decl))\n     {\n       e->inline_failed = CIF_UNSPECIFIED;\n       inlinable = false;"}, {"sha": "c5136f3e06492f430925a68db1ec7ac0b076e076", "filename": "gcc/testsuite/gcc.dg/tm/pr52141.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ff6e2725731539c2f122618c97847069a9a6aa/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fpr52141.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ff6e2725731539c2f122618c97847069a9a6aa/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fpr52141.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fpr52141.c?ref=a7ff6e2725731539c2f122618c97847069a9a6aa", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fgnu-tm -O1\" } */\n+\n+inline void asmfunc(void)\n+{\n+  __asm__ (\"\"); /* { dg-error \"asm not allowed in .transaction_safe\" } */\n+}\n+\n+__attribute__((transaction_safe))\n+static void f(void)\n+{\n+  asmfunc();\n+}\n+\n+int main()\n+{\n+  __transaction_atomic {\n+    f();\n+  }\n+  return 0;\n+}"}, {"sha": "21d4a0ca13a601b47d42927292924ac897cc0bf7", "filename": "gcc/testsuite/gcc.dg/tm/pr52142.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ff6e2725731539c2f122618c97847069a9a6aa/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fpr52142.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ff6e2725731539c2f122618c97847069a9a6aa/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fpr52142.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fpr52142.c?ref=a7ff6e2725731539c2f122618c97847069a9a6aa", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fgnu-tm -O1\" } */\n+static int global = 0;\n+\n+__attribute__((transaction_pure))\n+static inline void purefunc()\n+{\n+  global++;\n+}\n+\n+__attribute__((transaction_safe))\n+void f();\n+\n+void push()\n+{\n+  __transaction_atomic {\n+        f();\n+    purefunc();\n+  }\n+}\n+\n+/* { dg-final { scan-assembler-not \"_ITM_RfWU4\" } } */"}, {"sha": "b7320b5ee7243e6e3e13e13ec01c5c70e312f843", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ff6e2725731539c2f122618c97847069a9a6aa/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ff6e2725731539c2f122618c97847069a9a6aa/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=a7ff6e2725731539c2f122618c97847069a9a6aa", "patch": "@@ -3736,6 +3736,10 @@ ipa_tm_scan_irr_block (basic_block bb)\n \t     assembly statement is not relevant to the transaction\n \t     is to wrap it in a __tm_waiver block.  This is not\n \t     yet implemented, so we can't check for it.  */\n+\t  if (is_tm_safe (current_function_decl))\n+\t    error_at (gimple_location (stmt),\n+\t\t      \"asm not allowed in %<transaction_safe%> function %qE\",\n+\t\t      current_function_decl);\n \t  return true;\n \n \tdefault:"}]}