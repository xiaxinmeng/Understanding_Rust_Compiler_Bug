{"sha": "df6f4086b07f8ffe4cc6dd90cc21056d2cd54d86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY2ZjQwODZiMDdmOGZmZTRjYzZkZDkwY2MyMTA1NmQyY2Q1NGQ4Ng==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-04T00:45:44Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-04T00:45:44Z"}, "message": "(num_sign_bit_copies): At end, return 1 if NONZERO has the high bit set.\n\nFrom-SVN: r4627", "tree": {"sha": "66e30638748e5d3f9c90fa6254b1746bc5942a1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66e30638748e5d3f9c90fa6254b1746bc5942a1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df6f4086b07f8ffe4cc6dd90cc21056d2cd54d86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df6f4086b07f8ffe4cc6dd90cc21056d2cd54d86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df6f4086b07f8ffe4cc6dd90cc21056d2cd54d86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df6f4086b07f8ffe4cc6dd90cc21056d2cd54d86/comments", "author": null, "committer": null, "parents": [{"sha": "12194c388f00739381f3c75737275d6a2862cb37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12194c388f00739381f3c75737275d6a2862cb37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12194c388f00739381f3c75737275d6a2862cb37"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7aa534879f5bc1a7babcee0c10a1377538c7c5eb", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df6f4086b07f8ffe4cc6dd90cc21056d2cd54d86/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df6f4086b07f8ffe4cc6dd90cc21056d2cd54d86/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=df6f4086b07f8ffe4cc6dd90cc21056d2cd54d86", "patch": "@@ -6801,7 +6801,7 @@ num_sign_bit_copies (x, mode)\n     return 1;\n \n   nonzero = nonzero_bits (x, mode);\n-  return (nonzero == GET_MODE_MASK (mode)\n+  return (nonzero & ((HOST_WIDE_INT) 1 << (bitwidth - 1))\n \t  ? 1 : bitwidth - floor_log2 (nonzero) - 1);\n }\n \f"}]}