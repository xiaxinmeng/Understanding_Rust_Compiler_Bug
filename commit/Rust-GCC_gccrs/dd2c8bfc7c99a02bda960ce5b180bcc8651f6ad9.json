{"sha": "dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQyYzhiZmM3Yzk5YTAyYmRhOTYwY2U1YjE4MGJjYzg2NTFmNmFkOQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2012-10-02T14:53:28Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2012-10-02T14:53:28Z"}, "message": "rs6000.c (rs6000_option_override_internal): Do not set TARGET_ALTIVEC_VRSAVE for TARGET_ELF.\n\n        * config/rs6000/rs6000.c (rs6000_option_override_internal): Do not\n        set TARGET_ALTIVEC_VRSAVE for TARGET_ELF.\n        (rs6000_stack_info): Only set vrsave_mask if TARGET_ALTIVEC_VRSAVE.\n\nFrom-SVN: r191986", "tree": {"sha": "45ac2a1654f583b1da6435b74a0a65f6bed552c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45ac2a1654f583b1da6435b74a0a65f6bed552c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9/comments", "author": null, "committer": null, "parents": [{"sha": "13396b6e4da82e926e666e07fae9186825de65e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13396b6e4da82e926e666e07fae9186825de65e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13396b6e4da82e926e666e07fae9186825de65e8"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "61e4b532c62d1a4e1e391c5bf10dbb5d1601b8f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9", "patch": "@@ -1,3 +1,9 @@\n+2012-10-02  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Do not\n+\tset TARGET_ALTIVEC_VRSAVE for TARGET_ELF.\n+\t(rs6000_stack_info): Only set vrsave_mask if TARGET_ALTIVEC_VRSAVE.\n+\n 2012-10-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/54713\n@@ -29,7 +35,7 @@\n 2012-10-01  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (toplevel): Include dumpfile.h.\n-\t(rs6000_density_test): Rework to accomidate 09-30 change by\n+\t(rs6000_density_test): Rework to accommodate 09-30 change by\n \tSharad Singhai.\n \n \t* config/rs6000/t-rs6000 (rs6000.o): Add dumpfile.h dependency."}, {"sha": "a3f99092900e8e483a44c1545c305f7319aec111", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=dd2c8bfc7c99a02bda960ce5b180bcc8651f6ad9", "patch": "@@ -2726,10 +2726,6 @@ rs6000_option_override_internal (bool global_init_p)\n \t  else\n \t    rs6000_altivec_abi = 1;\n \t}\n-\n-      /* Enable VRSAVE for AltiVec ABI, unless explicitly overridden.  */\n-      if (!global_options_set.x_TARGET_ALTIVEC_VRSAVE)\n-\tTARGET_ALTIVEC_VRSAVE = rs6000_altivec_abi;\n     }\n \n   /* Set the Darwin64 ABI as default for 64-bit Darwin.  \n@@ -17843,7 +17839,8 @@ rs6000_stack_info (void)\n   else\n     info_ptr->spe_gp_size = 0;\n \n-  if (TARGET_ALTIVEC_ABI)\n+  /* Set VRSAVE register if it is saved and restored.  */\n+  if (TARGET_ALTIVEC_ABI && TARGET_ALTIVEC_VRSAVE)\n     info_ptr->vrsave_mask = compute_vrsave_mask ();\n   else\n     info_ptr->vrsave_mask = 0;"}]}