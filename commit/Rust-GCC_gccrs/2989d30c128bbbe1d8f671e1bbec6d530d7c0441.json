{"sha": "2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk4OWQzMGMxMjhiYmJlMWQ4ZjY3MWUxYmJlYzZkNTMwZDdjMDQ0MQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2006-12-13T09:28:16Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2006-12-13T09:28:16Z"}, "message": "mips-tdump.c: Replace CROSS_COMPILE with CROSS_DIRECTORY_STRUCTURE.\n\n\t* mips-tdump.c: Replace CROSS_COMPILE with\n\tCROSS_DIRECTORY_STRUCTURE.\n\t* mips-tfile.c: Likewise.\n\t* gcc.c: Likewise.\n\t* configure.ac: Likewise.\n\t* cppdefault.c: Likewise.\n\t* Makefile.in: Likewise.\n\t* config/alpha/osf.h: Likewise.\n\t* config/i386/cygwin.h: Likewise.\n\t* config/i386/beos-elf.h: Likewise.\n\t* config/i386/nto.h: Likewise.\n\t* config/fr30/fr30.h: Likewise.\n\t* config/svr4.h: Likewise.\n\t* config/rs6000/aix.h: Likewise.\n\t* config/rs6000/sysv4.h: Likewise.\n\t* config/pa/pa64-hpux.h: Likewise.\n\t* config/pa/pa-hpux10.h: Likewise.\n\t* config/pa/pa-hpux11.h: Likewise.\n\t* collect2.c: Likewise.\n\t* configure: Regenerate.\n\nFrom-SVN: r119820", "tree": {"sha": "2d6da3f3f03804cad64c9d8982687a0dd7a9cb42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d6da3f3f03804cad64c9d8982687a0dd7a9cb42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d9f4c465bfe7f70e946d2397e1d05496885ad3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d9f4c465bfe7f70e946d2397e1d05496885ad3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d9f4c465bfe7f70e946d2397e1d05496885ad3d"}], "stats": {"total": 114, "additions": 72, "deletions": 42}, "files": [{"sha": "2db866ce8389d49e56247cafff463b3bd453b9c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -25,6 +25,27 @@\n \n 2006-12-12  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* mips-tdump.c: Replace CROSS_COMPILE with\n+\tCROSS_DIRECTORY_STRUCTURE.\n+\t* mips-tfile.c: Likewise.\n+\t* gcc.c: Likewise.\n+\t* configure.ac: Likewise.\n+\t* cppdefault.c: Likewise.\n+\t* Makefile.in: Likewise.\n+\t* config/alpha/osf.h: Likewise.\n+\t* config/i386/cygwin.h: Likewise.\n+\t* config/i386/beos-elf.h: Likewise.\n+\t* config/i386/nto.h: Likewise.\n+\t* config/fr30/fr30.h: Likewise.\n+\t* config/svr4.h: Likewise.\n+\t* config/rs6000/aix.h: Likewise.\n+\t* config/rs6000/sysv4.h: Likewise.\n+\t* config/pa/pa64-hpux.h: Likewise.\n+\t* config/pa/pa-hpux10.h: Likewise.\n+\t* config/pa/pa-hpux11.h: Likewise.\n+\t* collect2.c: Likewise.\n+\t* configure: Regenerate.\n+\n \t* doc/tm.texi (Alignment Output): Document that ASM_OUTPUT_SKIP\n \tactually takes an unsigned HOST_WIDE_INT for its second parameter.\n "}, {"sha": "2fe3dbd0d87123474bd9978df9ef345d1f2726ef", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -820,7 +820,8 @@ REAL_H = real.h $(MACHMODE_H)\n \n # IN_GCC distinguishes between code compiled into GCC itself and other\n # programs built during a bootstrap.\n-# autoconf inserts -DCROSS_COMPILE if we are building a cross compiler.\n+# autoconf inserts -DCROSS_DIRECTORY_STRUCTURE if we are building a\n+# cross compiler which does not use the native headers and libraries.\n INTERNAL_CFLAGS = -DIN_GCC @CROSS@\n \n # This is the variable actually used when we compile. If you change this,"}, {"sha": "e8361c27d18fca7acc3dede877ec60ee7022db19", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -1,3 +1,8 @@\n+2006-12-07  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* Makefile.in: Replace CROSS_COMPILE with CROSS_DIRECTORY_STRUCTURE.\n+\t* adaint.c: Likewise.\n+\n 2006-12-05  Aldy Hernandez  <aldyh@redhat.com>\n \n \tMerge from gimple-tuples-branch."}, {"sha": "a0fb0ed43b37fa53780cad1c7ea4164c3199fafc", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -228,7 +228,8 @@ all.indirect: Makefile ../gnat1$(exeext)\n \n # IN_GCC distinguishes between code compiled into GCC itself and other\n # programs built during a bootstrap.\n-# autoconf inserts -DCROSS_COMPILE if we are building a cross compiler.\n+# autoconf inserts -DCROSS_DIRECTORY_STRUCTURE if we are building a cross\n+# compiler which does not use the native libraries and headers.\n INTERNAL_CFLAGS = @CROSS@ -DIN_GCC\n \n # This is the variable actually used when we compile."}, {"sha": "dd2e0d6555f274ff2b90c6cd103c28500089529d", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -197,7 +197,7 @@ struct vstring\n #endif\n \n /* Check for cross-compilation */\n-#ifdef CROSS_COMPILE\n+#ifdef CROSS_DIRECTORY_STRUCTURE\n int __gnat_is_cross_compiler = 1;\n #else\n int __gnat_is_cross_compiler = 0;\n@@ -614,7 +614,7 @@ __gnat_get_debuggable_suffix_ptr (int *len, const char **value)\n FILE *\n __gnat_fopen (char *path, char *mode)\n {\n-#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_COMPILE)\n+#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_DIRECTORY_STRUCTURE)\n   TCHAR wpath[GNAT_MAX_PATH_LEN];\n   TCHAR wmode[10];\n \n@@ -630,7 +630,7 @@ __gnat_fopen (char *path, char *mode)\n FILE *\n __gnat_freopen (char *path, char *mode, FILE *stream)\n {\n-#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_COMPILE)\n+#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_DIRECTORY_STRUCTURE)\n   TCHAR wpath[GNAT_MAX_PATH_LEN];\n   TCHAR wmode[10];\n \n@@ -1402,7 +1402,7 @@ __gnat_get_libraries_from_registry (void)\n {\n   char *result = (char *) \"\";\n \n-#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_COMPILE)\n+#if defined (_WIN32) && ! defined (__vxworks) && ! defined (CROSS_DIRECTORY_STRUCTURE)\n \n   HKEY reg_key;\n   DWORD name_size, value_size;\n@@ -2604,7 +2604,7 @@ _flush_cache()\n }\n #endif\n \n-#if defined (CROSS_COMPILE)  \\\n+#if defined (CROSS_DIRECTORY_STRUCTURE)  \\\n   || (! ((defined (sparc) || defined (i386)) && defined (sun) \\\n       && defined (__SVR4)) \\\n       && ! (defined (linux) && (defined (i386) || defined (__x86_64__))) \\"}, {"sha": "c6c1f3f4a2cebd7dc6c5b19c869edecff84f8e1f", "filename": "gcc/collect2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -53,7 +53,7 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n    the utilities are not correct for a cross-compiler; we have to hope that\n    cross-versions are in the proper directories.  */\n \n-#ifdef CROSS_COMPILE\n+#ifdef CROSS_DIRECTORY_STRUCTURE\n #undef OBJECT_FORMAT_COFF\n #undef MD_EXEC_PREFIX\n #undef REAL_LD_FILE_NAME\n@@ -553,7 +553,7 @@ is_ctor_dtor (const char *s)\n \n static struct path_prefix cpath, path;\n \n-#ifdef CROSS_COMPILE\n+#ifdef CROSS_DIRECTORY_STRUCTURE\n /* This is the name of the target machine.  We use it to form the name\n    of the files to execute.  */\n \n@@ -746,7 +746,7 @@ main (int argc, char **argv)\n   static const char *const strip_suffix = \"strip\";\n   static const char *const gstrip_suffix = \"gstrip\";\n \n-#ifdef CROSS_COMPILE\n+#ifdef CROSS_DIRECTORY_STRUCTURE\n   /* If we look for a program in the compiler directories, we just use\n      the short name, since these directories are already system-specific.\n      But it we look for a program in the system directories, we need to\n@@ -775,7 +775,7 @@ main (int argc, char **argv)\n #endif\n   const char *const full_strip_suffix\t= strip_suffix;\n   const char *const full_gstrip_suffix\t= gstrip_suffix;\n-#endif /* CROSS_COMPILE */\n+#endif /* CROSS_DIRECTORY_STRUCTURE */\n \n   const char *arg;\n   FILE *outf;\n@@ -957,7 +957,7 @@ main (int argc, char **argv)\n   c_file_name = getenv (\"COLLECT_GCC\");\n   if (c_file_name == 0)\n     {\n-#ifdef CROSS_COMPILE\n+#ifdef CROSS_DIRECTORY_STRUCTURE\n       c_file_name = concat (target_machine, \"-gcc\", NULL);\n #else\n       c_file_name = \"gcc\";"}, {"sha": "b62435aa6b7f561429ca02a45018c8d857cd1ea1", "filename": "gcc/config/alpha/osf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Falpha%2Fosf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Falpha%2Fosf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fosf.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -138,7 +138,7 @@ Boston, MA 02110-1301, USA.  */\n #define SUBTARGET_EXTRA_SPECS { \"asm_oldas\", ASM_OLDAS_SPEC }\n \n /* Indicate that we have a stamp.h to use.  */\n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #define HAVE_STAMP_H 1\n #endif\n "}, {"sha": "78fce68ab3d5057ab77ef5a03d35146ae7842e58", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -1110,7 +1110,7 @@ fprintf (STREAM, \"\\t.word .L%d\\n\", VALUE)\n #define FUNCTION_MODE QImode\n \n /* If cross-compiling, don't require stdio.h etc to build libgcc.a.  */\n-#if defined CROSS_COMPILE && ! defined inhibit_libc\n+#if defined CROSS_DIRECTORY_STRUCTURE && ! defined inhibit_libc\n #define inhibit_libc\n #endif\n "}, {"sha": "3acc830bfe1e9455be8eda5330311125d2318bf5", "filename": "gcc/config/i386/beos-elf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fi386%2Fbeos-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fi386%2Fbeos-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbeos-elf.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -135,7 +135,7 @@ Boston, MA 02110-1301, USA.  */\n    for the BeOS include files relative to TOOL_INCLUDE_DIR.  Yes, we\n    use ANSI string concatenation here (FIXME) */\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef INCLUDE_DEFAULTS\n #define INCLUDE_DEFAULTS \\\n     { \\\n@@ -177,7 +177,7 @@ Boston, MA 02110-1301, USA.  */\n     { \"/boot/develop/headers\", 0, 0, 0 }, \\\n     { 0, 0, 0, 0 } \\\n     }\n-#else /* CROSS_COMPILE */\n+#else /* CROSS_DIRECTORY_STRUCTURE */\n #undef\tINCLUDE_DEFAULTS\n #define INCLUDE_DEFAULTS\t\t\t\t\\\n     { \\"}, {"sha": "fe85a6df4cde8f75fa2eb9c81ce69ac7040e52f9", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -146,7 +146,7 @@ char cygwin_tool_include_dir[sizeof (TOOL_INCLUDE_DIR) + 1\n #undef TOOL_INCLUDE_DIR\n #define TOOL_INCLUDE_DIR ((const char *) cygwin_tool_include_dir)\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef STANDARD_INCLUDE_DIR\n #define STANDARD_INCLUDE_DIR \"/usr/include\"\n char cygwin_standard_include_dir[sizeof (STANDARD_INCLUDE_DIR) + 1"}, {"sha": "42ae5563d6787007755f17dccc2e36d1e28df73c", "filename": "gcc/config/i386/nto.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fi386%2Fnto.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fi386%2Fnto.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnto.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -43,7 +43,7 @@ Boston, MA 02110-1301, USA.  */\n #undef THREAD_MODEL_SPEC\n #define THREAD_MODEL_SPEC \"posix\"\n \n-#ifdef CROSS_COMPILE\n+#ifdef CROSS_DIRECTORY_STRUCTURE\n #define SYSROOT_SUFFIX_SPEC \"x86\"\n #endif\n "}, {"sha": "dbc7ff2c6cb96700a93110fc5da9d9141a1a3891", "filename": "gcc/config/pa/pa-hpux10.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -122,7 +122,7 @@ Boston, MA 02110-1301, USA.  */\n /* Under hpux10, the normal location of the `ld' and `as' programs is the\n    /usr/ccs/bin directory.  */\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef MD_EXEC_PREFIX\n #define MD_EXEC_PREFIX \"/usr/ccs/bin/\"\n #endif\n@@ -131,7 +131,7 @@ Boston, MA 02110-1301, USA.  */\n    the /usr/ccs/lib directory.  However, the profiling files are in\n    /opt/langtools/lib.  */\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef MD_STARTFILE_PREFIX\n #define MD_STARTFILE_PREFIX \"/usr/ccs/lib/\"\n #define MD_STARTFILE_PREFIX_1 \"/opt/langtools/lib/\""}, {"sha": "624a7c7334ff9336b7247a0aeb0c6f7285352945", "filename": "gcc/config/pa/pa-hpux11.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -147,7 +147,7 @@ Boston, MA 02110-1301, USA.  */\n /* Under hpux11, the normal location of the `ld' and `as' programs is the\n    /usr/ccs/bin directory.  */\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef MD_EXEC_PREFIX\n #define MD_EXEC_PREFIX \"/usr/ccs/bin/\"\n #endif\n@@ -156,7 +156,7 @@ Boston, MA 02110-1301, USA.  */\n    the /usr/ccs/lib directory.  However, the profiling files are in\n    /opt/langtools/lib.  */\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef MD_STARTFILE_PREFIX\n #define MD_STARTFILE_PREFIX \"/usr/ccs/lib/\"\n #define MD_STARTFILE_PREFIX_1 \"/opt/langtools/lib/\""}, {"sha": "d1b86d1f97e2ed79508bd3f2133e4285f8be75b1", "filename": "gcc/config/pa/pa64-hpux.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -88,7 +88,7 @@ Boston, MA 02110-1301, USA.  */\n /* Under hpux11, the normal location of the `ld' and `as' programs is the\n    /usr/ccs/bin directory.  */\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef MD_EXEC_PREFIX\n #define MD_EXEC_PREFIX \"/usr/ccs/bin\"\n #endif\n@@ -105,12 +105,12 @@ Boston, MA 02110-1301, USA.  */\n    is the /usr/ccs/lib/pa20_64 directory.  Some files may also be in the\n    /opt/langtools/lib/pa20_64 directory.  */\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef MD_STARTFILE_PREFIX\n #define MD_STARTFILE_PREFIX \"/usr/ccs/lib/pa20_64/\"\n #endif\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef MD_STARTFILE_PREFIX_1\n #define MD_STARTFILE_PREFIX_1 \"/opt/langtools/lib/pa20_64/\"\n #endif"}, {"sha": "242bd024177a4a1ec7ee75652c4e132c316650ed", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -124,14 +124,14 @@\n /* #define ASM_SPEC \"-u %(asm_cpu)\" */\n \n /* Default location of syscalls.exp under AIX */\n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #define LINK_SYSCALLS_SPEC \"-bI:/lib/syscalls.exp\"\n #else\n #define LINK_SYSCALLS_SPEC \"\"\n #endif\n \n /* Default location of libg.exp under AIX */\n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #define LINK_LIBG_SPEC \"-bexport:/usr/lib/libg.exp\"\n #else\n #define LINK_LIBG_SPEC \"\""}, {"sha": "29430c8270e49b6451bfe8cefd190dd4030dead3", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -640,7 +640,7 @@ extern int fixuplabelno;\n %{profile: -p}\"\n \n /* Don't put -Y P,<path> for cross compilers.  */\n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #define LINK_PATH_SPEC \"\\\n %{!R*:%{L*:-R %*}} \\\n %{!nostdlib: %{!YP,*: \\"}, {"sha": "216e9290e6fc4d831bb0e594a6ce2f4b6eb886b8", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -84,15 +84,15 @@ Boston, MA 02110-1301, USA.\n /* Under svr4, the normal location of the `ld' and `as' programs is the\n    /usr/ccs/bin directory.  */\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef  MD_EXEC_PREFIX\n #define MD_EXEC_PREFIX \"/usr/ccs/bin/\"\n #endif\n \n /* Under svr4, the normal location of the various *crt*.o files is the\n    /usr/ccs/lib directory.  */\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #undef  MD_STARTFILE_PREFIX\n #define MD_STARTFILE_PREFIX \"/usr/ccs/lib/\"\n #endif\n@@ -136,7 +136,7 @@ Boston, MA 02110-1301, USA.\n    not being done.  */\n \n #undef\tLINK_SPEC\n-#ifdef CROSS_COMPILE\n+#ifdef CROSS_DIRECTORY_STRUCTURE\n #define LINK_SPEC \"%{h*} %{v:-V} \\\n \t\t   %{b} \\\n \t\t   %{static:-dn -Bstatic} \\"}, {"sha": "62e489159c3edd0aeb1f70104cac156cd23188e9", "filename": "gcc/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -13167,7 +13167,8 @@ for f in $build_xm_file; do\n   esac\n done\n \n-# Define macro CROSS_COMPILE in compilation if this is a cross-compiler.\n+# Define macro CROSS_DIRECTORY_STRUCTURE in compilation if this is a\n+# cross-compiler which does not use the native headers and libraries.\n # Also use all.cross instead of all.internal and adjust SYSTEM_HEADER_DIR.\n CROSS=\n ALL=all.internal\n@@ -13184,7 +13185,7 @@ fi\n \n if test x$host != x$target\n then\n-\tCROSS=\"-DCROSS_COMPILE\"\n+\tCROSS=\"-DCROSS_DIRECTORY_STRUCTURE\"\n \tALL=all.cross\n \tSYSTEM_HEADER_DIR=$build_system_header_dir\n \tcase \"$host\",\"$target\" in"}, {"sha": "26560cf10a57d7b07156fda3e7cbce51ccc6bbf1", "filename": "gcc/configure.ac", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -1745,7 +1745,8 @@ for f in $build_xm_file; do\n   esac\n done\n \n-# Define macro CROSS_COMPILE in compilation if this is a cross-compiler.\n+# Define macro CROSS_DIRECTORY_STRUCTURE in compilation if this is a\n+# cross-compiler which does not use the native headers and libraries.\n # Also use all.cross instead of all.internal and adjust SYSTEM_HEADER_DIR.\n CROSS=\t\t\t\t\t\tAC_SUBST(CROSS)\n ALL=all.internal\t\t\t\tAC_SUBST(ALL)\n@@ -1762,7 +1763,7 @@ fi\n \n if test x$host != x$target\n then\n-\tCROSS=\"-DCROSS_COMPILE\"\n+\tCROSS=\"-DCROSS_DIRECTORY_STRUCTURE\"\n \tALL=all.cross\n \tSYSTEM_HEADER_DIR=$build_system_header_dir\n \tcase \"$host\",\"$target\" in"}, {"sha": "dfea0b8d51b92fe5487d9108b04b332775ca9757", "filename": "gcc/cppdefault.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fcppdefault.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fcppdefault.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppdefault.c?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -33,7 +33,7 @@ Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */\n #define STANDARD_INCLUDE_COMPONENT 0\n #endif\n \n-#if defined (CROSS_COMPILE) && !defined (TARGET_SYSTEM_ROOT)\n+#if defined (CROSS_DIRECTORY_STRUCTURE) && !defined (TARGET_SYSTEM_ROOT)\n # undef LOCAL_INCLUDE_DIR\n # undef SYSTEM_INCLUDE_DIR\n # undef STANDARD_INCLUDE_DIR"}, {"sha": "8830a498ed18fe9a4d5d3d22c91490331edb6bba", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -238,7 +238,7 @@ static const char *spec_machine = DEFAULT_TARGET_MACHINE;\n /* Nonzero if cross-compiling.\n    When -b is used, the value comes from the `specs' file.  */\n \n-#ifdef CROSS_COMPILE\n+#ifdef CROSS_DIRECTORY_STRUCTURE\n static const char *cross_compile = \"1\";\n #else\n static const char *cross_compile = \"0\";\n@@ -1455,7 +1455,7 @@ static const char *gcc_libexec_prefix;\n #define STANDARD_STARTFILE_PREFIX_2 \"/usr/lib/\"\n #endif\n \n-#ifdef CROSS_COMPILE  /* Don't use these prefixes for a cross compiler.  */\n+#ifdef CROSS_DIRECTORY_STRUCTURE  /* Don't use these prefixes for a cross compiler.  */\n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX\n #undef MD_STARTFILE_PREFIX_1"}, {"sha": "cd5df3887a112012c0899120ffe3f7723ca3c3a5", "filename": "gcc/mips-tdump.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fmips-tdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fmips-tdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tdump.c?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -29,11 +29,11 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #ifdef index\n #undef index\n #endif\n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #include <a.out.h>\n #else\n #include \"mips/a.out.h\"\n-#endif /* CROSS_COMPILE */\n+#endif /* CROSS_DIRECTORY_STRUCTURE */\n \n /* Include getopt.h for the sake of getopt_long.  */\n #include \"getopt.h\""}, {"sha": "c543f97815895eb20513ad8d6bcfe4d84307c7db", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989d30c128bbbe1d8f671e1bbec6d530d7c0441/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=2989d30c128bbbe1d8f671e1bbec6d530d7c0441", "patch": "@@ -667,11 +667,11 @@ main (void)\n \n #include <signal.h>\n \n-#ifndef CROSS_COMPILE\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n #include <a.out.h>\n #else\n #include \"mips/a.out.h\"\n-#endif /* CROSS_COMPILE */\n+#endif /* CROSS_DIRECTORY_STRUCTURE */\n \n #include \"gstab.h\"\n "}]}