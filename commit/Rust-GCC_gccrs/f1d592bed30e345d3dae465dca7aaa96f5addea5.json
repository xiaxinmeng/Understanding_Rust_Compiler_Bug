{"sha": "f1d592bed30e345d3dae465dca7aaa96f5addea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFkNTkyYmVkMzBlMzQ1ZDNkYWU0NjVkY2E3YWFhOTZmNWFkZGVhNQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2006-01-01T17:14:35Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2006-01-01T17:14:35Z"}, "message": "* Split the ChangeLog into years.\n\nFrom-SVN: r109225", "tree": {"sha": "a034ea972623e4f26d7c9cb1caf816f95fb8a7de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a034ea972623e4f26d7c9cb1caf816f95fb8a7de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1d592bed30e345d3dae465dca7aaa96f5addea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1d592bed30e345d3dae465dca7aaa96f5addea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1d592bed30e345d3dae465dca7aaa96f5addea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1d592bed30e345d3dae465dca7aaa96f5addea5/comments", "author": null, "committer": null, "parents": [{"sha": "5873154d20d44a71135a99c8a92f8389a3ce0bb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5873154d20d44a71135a99c8a92f8389a3ce0bb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5873154d20d44a71135a99c8a92f8389a3ce0bb5"}], "stats": {"total": 9250, "additions": 4627, "deletions": 4623}, "files": [{"sha": "36d412ce75d92ab19a396e68aa06be589da1ce57", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 4623, "changes": 4629, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d592bed30e345d3dae465dca7aaa96f5addea5/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d592bed30e345d3dae465dca7aaa96f5addea5/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=f1d592bed30e345d3dae465dca7aaa96f5addea5"}, {"sha": "2411f626ce8aba078d0b3bc2a6819e202176efdf", "filename": "libgfortran/ChangeLog-2002", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d592bed30e345d3dae465dca7aaa96f5addea5/libgfortran%2FChangeLog-2002", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d592bed30e345d3dae465dca7aaa96f5addea5/libgfortran%2FChangeLog-2002", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog-2002?ref=f1d592bed30e345d3dae465dca7aaa96f5addea5", "patch": "@@ -0,0 +1,60 @@\n+2002-12-29  Paul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/reshape.*: New files.\n+\t* gcc_config.patch: Update to new GCC configure system.\n+\n+2002-10-10  Paul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/size.c: New file.\n+\t* intrinsics/shape.m4: New file.\n+\t* Makefile.am: Add above files.\n+\n+2002-10-02  Paul Brook  <paul@nowt.org>\n+\n+\t* fmain.c (main): Move here.\n+\t* libgfor.c: From here.\n+\t* libgfor.h (gfor_init, gfor_runtime_cleanup): Declare.\n+\t* Makefile.am: Build libgforbegin.\n+\t* gcc_config.patch: Remove stray -march=athlon.\n+\t* dotprodl.m4: Fix use of L8_TO_L4 macro.\n+\t* ifunction.m4: Move variable declarations to allow compilation with\n+\tgcc < 3.0\n+\t* specific.m4, specific4.m4: Fix typo typecode->type_code.\n+\t* README: Document use of patch -p1.\n+\n+2002-09-12  Paul Brook  <paul@nowt.org>\n+\n+\t* math/*: Add complex math library functions.\n+\t* intrinsics/specific(2).m4: Generate Specific intrinsic functions.\n+\t* Makefile.am: Add details for above.\n+\t* configure.in: Use AC_PROG_F95.  Test for the presence of csin.\n+\n+2002-09-09  Paul Brook  <paul@nowt.org>\n+\n+\t* libgfor.c (determine_endianness): Use an array rather than a struct.\n+\t* intrinsics/dotprod*, matmul*: Implement DOT_PRODUCT and MATMUL.\n+\n+2002-09-09  Steven Bosscher  <s.bosscher@student.tudelft.nl>\n+\n+\t* libgfor.c: Add fatal signal handler.\n+\tRomove superfluous abort() calls.\n+\n+2002-09-07  Paul Brook <paul@nowt.org>\n+\n+\t* Makefile.am, intrinsics: Major rewrite.\n+\n+2002-09-02  Paul Brook <paul@nowt.org>\n+\n+\t* Makefile.am: Added -I$(srcdir) to m4 rule.\n+\n+2002-08-30  Paul Brook <paul@nowt.org>\n+\n+\t* io/*: Integrated libgforio.\n+\t* Makefile.am, configure.in: Make compatable with GCC. Build code for\n+\tintrinsics in the intrisics directory.\n+\t* intrinsics/intrinsics.m4: Move here. Strip directories from the\n+\tfilename. Add 'and' and 'all' intrinsics.\n+\n+2002-08-17  Paul Brook <paul@nowt.org>\n+\n+\t* ALL: First release as more than just a single file"}, {"sha": "1c8b99f45f29690193e1e4aa9854982548a89fed", "filename": "libgfortran/ChangeLog-2003", "status": "added", "additions": 542, "deletions": 0, "changes": 542, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d592bed30e345d3dae465dca7aaa96f5addea5/libgfortran%2FChangeLog-2003", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d592bed30e345d3dae465dca7aaa96f5addea5/libgfortran%2FChangeLog-2003", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog-2003?ref=f1d592bed30e345d3dae465dca7aaa96f5addea5", "patch": "@@ -0,0 +1,542 @@\n+2003-12-12  Huang Chun <chunhuang73@hotmal.com>\n+\n+\t* intrinsics/string_intrinsics.c (string_index): Fix logics thinko.\n+\n+2003-12-05  Melvin Hadasht  <melvin.hadasht@free.fr>\n+\n+\t* io/transfer.c (data_transfer_init): Give a runtime error for list\n+\tformatted reads and writes from/to files opened for unformatted IO.\n+\n+2003-11-30  Paul Brook  <paul@nowt.org>\n+\n+\t* runtime/memory.c (push_context): Remove.\n+\t(pop_context): Remove.\n+\t* libgfortran.h: Remove prototypes.\n+\n+2003-11-27  Paul Brook  <paul@nowt.org>\n+\n+\t* runtime/memory.c (deallocate): Nullify pointer after freeing.\n+\n+2003-11-27  Paul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/string_intrinsics.c: Use new memory allocation interface.\n+\t* libgfortran.h: Ditto.\n+\t* m4/in_pack.m4: Ditto.\n+\t* runtime/in_pack_generic.c: Ditto.\n+\t* runtime/memory.c: Ditto.\n+\n+2003-11-26  Richard Henderson  <rth@redhat.com>\n+\n+\t* m4/exponent.m4, m4/fraction.m4: New.\n+\t* m4/nearest.m4, m4/set_exponent.m4: New.\n+\t* generated/*: Update.\n+\t* Makefile.am: Add them.\n+\t(AM_CFLAGS): New.  Use -std=gnu99.\n+\t* Makefile.in: Regenerate.\n+\n+2003-11-08  Paul Brook  <paul@nowt.org>\n+\n+\tPR fortran/12704\n+\t* m4/maxloc0.m4: Use default value of 1. Handle zero sized arrays.\n+\t* m4/maxloc1.m4: Ditto.\n+\t* m4/minloc0.m4: Ditto.\n+\t* m4/minloc1.m4: Ditto.\n+\t* m4/ifunction.m4: Set return value for zero sized arrays.\n+\t* m4/iforeach.m4: Ditto.\n+\t* m4/all.m4, m4/any.m4, m4/count.m4, m4/maxloc1.m4, m4/minloc1.m4,\n+\tm4/mxaval.m4, m4/minval.m4, m4/product.m4, m4/sum.m4: Ditto.\n+\t* generated/*: Update.\n+\n+2003-10-30  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\tPR fortran/12702\n+\t* io/list_read.c (eat_spaces): Treat tab as space.\n+\n+2003-10-30  Lars Segerlund  <Lars.Segerlund@comsys.se>\n+\n+\t* intrinsics/random.c: Add reference to paper containing algorithm.\n+\t(random_seed): Extra error checking and proper handling of arrays.\n+\t(arandom_r4, arandom_r8): Implement.\n+\n+2003-10-29  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\tPR fortran/12703\n+\t* runtime/memory.c (allocate_size): Allow allocation\n+\tof zero-sized objects.\n+\n+2003-10-29  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\tPR fortran/12701\n+\t* open.c (new_unit): Open without a file name opens\n+\ta file with name fort.<unit>.\n+\n+2003-10-12  Feng Wang  <wf_cs@yahoo.com>\n+\n+\t* intrinsics/cshift0.c: New file.\n+\t* m4/cshift1.m4: New file\n+\t* generated/cshift*.c: New files.\n+\t* Makefile.am: Add them.\n+\t* Makefile.in: Regenerate.\n+\n+2003-10-12  XiaoQiang Zhang  <zhangapache@yahoo.com>\n+\n+\t* io/list_read.c (read_character): Remove unwanted call to free_saved.\n+\n+2003-10-11  Huang Chun  <jiwang@mail.edu.cn>\n+\n+\t* intrinsics/string_intrinsics.c (string_trim): New function.\n+\t(string_repeat): New function.\n+\n+2003-10-11  Paul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/dprod_r8.f90: New file.\n+\t* Makefile.am (gfor_specific_src): Add it.\n+\t(gfor_built_specific_src): Rename from gfor_build_specific_c.\n+\tAdd new intrinsics.\n+\t(gfor_specific2_src): Rename from gfor_built_specific2_c.\n+\tAdd new intrinsics.\n+\t* Makefile.in: Regenerate.\n+\t* generated/_aint_*.f90: New files.\n+\t* generated/_anint*.f90: New files.\n+\t* generated/_atan2*.f90: New files.\n+\t* generated/_mod*.f90: New files.\n+\n+2003-09-20  Kejia Zhao  <kejia_zh@yahoo.com.cn>\n+\n+\t* intrinsics/selected_kind.f90: New file.\n+\t* Makefile.am: Add it.\n+\t* Makefile.in: regenerate.\n+\n+2003-09-19  Lars Segerlund  <Lars.Segerlund@comsys.se>\n+\tPaul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/random.c: New file.\n+\t* Makefile.am (gfor_hemper_src): Add it.\n+\t(gfor_specific_c): Fix typo.\n+\n+2003-09-19  Paul Brook  <paul@nowt.org>\n+\n+\t* All: rename g95->gfc.\n+\n+2003-09-18  XiaoQiang Zhang  <zhangapache@yahoo.com>\n+\n+\t* io/write.c (output_float): Fix bug of FMT_E, Add comments.\n+\n+2003-09-09  XiaoQiang Zhang  <zhangapache@yahoo.com>\n+\n+\t* io/write.c (write_float): Dectection of positive infinite number,\n+\tNot a Number(NaN) and negative infinite number.\n+\t(ioutput_float): Bug fix for FMT_E and FMT_D processing to\n+\toutput a very_very small number ( < 0.1e-100 ).\n+\n+2003-09-07  XiaoQiang Zhang  <zhangapache@yahoo.com>\n+\n+\t* libgfortran.h (xtoa, itoa): Parameter modified.\n+\t* io/io.h (namelist_info): Declaration to support namelist I/O\n+\t(st_parameter): Add namelist related component\n+\t(ionml, empty_internal_buffer, st_set_nml_var_int,\n+\tst_set_nml_var_float, st_set_nml_var_char, st_set_nml_var_complex,\n+\tst_set_nml_var_log): Declaration\n+\t(set_integer, set_integer): Parameter changed\n+\t* io/format.c (free_nodes): Fix annoying bug of lefting \"deallocated\"\n+\t fnodes\n+\t(parse_format_list): Fix bug about FMT_SLASH\n+\t* io/list_read.c (push_char): Totally clear old saved_string, zeroize\n+\tnewly allocated saved_string\n+\t(next_char): Add detection of End_Of_Line support\n+\t(convert_integer): Now can process 64 bits interger\n+\t(read_real): Bug fixed\n+\t(init_at_eol, find_nml_node, match_namelist_name): Add new functions\n+\t(match_namelist_name): New implemention\n+\t* io/lock.c (ionml): New global variable\n+\t(library_end): Free memory in ionml\n+\t* io/open.c (st_open): Variable initializtion\n+\t* io/read.c (max_value): 64 bits interger support\n+\t(convert_precsion_real): New procedure to replace \"strtod\" with more\n+\t features\n+\t(read_f, read_radix): Input bug fix\n+\t* io/transfer.c: (sf_seen_eor): New static variable\n+\t(read_sf): Zeroize base buffer; fix bugs: single read statement can\n+\tnot get input in mutli line when read from stdin\n+\t(formatted_transfer): Fix bug of FMT_O, FMT_B, FMT_Z for INTEGER type\n+\t request\n+\t(data_transfer_init): Clear internal buffer for Internel File I/O.\n+\tInternal File now worked. Detect some error condition for namelist.\n+\tSome minor bug fix\n+\t(next_record_w): Internal file and Namelist I/O support.\n+\t(st_set_nml_var, st_set_nml_var_float, st_set_nml_var_char,\n+\tst_set_nml_var_complex, st_set_nml_var_log): Implemention.\n+\t* io/unit.c (implicit_unit): Deletion\n+\t(get_unit): Now cannot open a unit implicitly.\n+\t* io/unix.c (mmap_alloc): Fix fatal error in calculating the length of\n+\tmapped buffer.\n+\t(mem_alloc_r_at): Internal file I/O support added\n+\t(empty_internal_buffer): New function\n+\t* io/write.c (extract_int): Support 64 bits interger processing\n+\t(output_float): Varibale initialization\n+\t(write_float): Infinite real number detection.\n+\t(write_int): 64 bits integer I/O support\n+\t(write_decimal): New function to output decimal number\n+\t(otoa, btoa): Better implemention and 64 bits interger support\n+\t(namelist_write): New function\n+\t* runtime/error.c (itoa, xtoa): Better implemention and 64 bits\n+\tinterger support\n+\n+2003-08-15  Arnaud Desitter  <arnaud.desitter@geography.oxford.ac.uk>\n+\n+\t* libgfortran.h (os_error, runtime_error,internal_error, sys_exit,\n+\tget_mem ): Add attribute.\n+\t* intrinsics/spread_generic.c (__spread): Fix spelling.\n+\t* io/inquire.c (inquire_via_filename): Add const.\n+\t* io/io.h (sys_exit): Add attribute.\n+\t* io/io.h (move_pos_offset): Add move_pos_offset.\n+\t* io/io.h (compare_file_filename, inquire_sequential, inquire_direct,\n+\tinquire_formatted, inquire_unformatted, inquire_read, inquire_write,\n+\tinquire_readwrite, convert_real, write_a, write_b, write_d, write_e,\n+\twrite_en, write_es, write_f, write_i, write_l, write_o, write_x,\n+\twrite_z): Add const.\n+\t* io/read.c (convert_real): Add const.\n+\t* io/transfer.c (type_name): Add const.\n+\t* io/unix.c (unpack_filename, compare_file_filename,inquire_sequential,\n+\tinquire_direct, inquire_formatted, inquire_unformatted, inquire_access,\n+\tinquire_read, inquire_write, inquire_readwrite): Add const.\n+\t* io/write.c (output_float): Remove unused variable.\n+\t* io/write.c (write_a, extract_int, extract_real, output_float,\n+\twrite_float, write_int, write_i, write_b, write_o, write_z, write_d,\n+\twrite_e, write_f, write_en, write_es, write_logical, write_integer,\n+\twrite_character, write_real, write_complex): Add const.\n+\t* runtime/error.c (rtoa): Remove unused variable.\n+\t* runtime/select.c (select_string): Add const.\n+\t* runtime/stop.c (stop_string): Add const.\n+\n+2003-08-10  Paul Brook  <paul@nowt.org>\n+\n+\t* Makefile.am (gfor_helper_src): Add intrinsics/abort.c.\n+\t(FFLAGS): Add -fno-underscoring.\n+\t* Makefile.in: Regenerate.\n+\t* intrinsics/abort.c: New file.\n+\n+2003-08-10  Erik Schnetter  <schnetter@uni-tuebingen.de>\n+\n+\t* fmain.c (main): Do not call init and cleanup; call set_args instead.\n+\t* libgfortran.h (init, cleanup): Remove declarations.\n+\t(set_args): Add declaration.\n+\t* runtime/main.c (init, cleanup): Make them static, and give them\n+\tthe constructor and destructor attributes.\n+\t(set_args): New\tfunction.\n+\n+2003-08-10  Paul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/strinf_intrinsics.c (compare_string): Return value based\n+\ton which string is longest.\n+\n+2003-08-10  Paul Brook  <paul@nowt.org>\n+\n+\t* Makefile.am (EXTRA_DIST): Remove old files.\n+\t* Makefile.in: Regenerate.\n+\n+2003-07-26  Paul Brook  <paul@nowt.org>\n+\n+\tRename library to libgfortran.\n+\t* libgfortran.h: Change prefix to _libgfortran_.\n+\n+2003-07-24  Paul Brook  <paul@nowt.org>\n+\n+\t* configure.in: Don't pull in system libtool.  Use toplevel\n+\tauxiliary files.\n+\n+2003-07-22  Paul Brook  <paul@nowt.org>\n+\n+\tRegenerate all configury files.\n+\n+2003-07-09  Chun Huang  <compiler@sohu.com>\n+\n+\t* intrinsics/string_intrinsic.c (string_scan): New function.\n+\t(string_verify): New function.\n+\n+2003-06-25  Paul Brook  <paul@nowt.org>\n+\n+\t* io/unix.c (mem_alloc_r_at, mem_alloc_w_at): Advance logical_offset.\n+\t(mem_seek): Don't bother setting physical_offset.\n+\n+2003-06-20  Paul Brook  <paul@nowt.org>\n+\n+\t* libgfor.h (stop_numeric): Declare.\n+\t* runtime/pause.c: New file.\n+\t* Makefile.am: Add it.\n+\n+2003-06-08  Paul Brook  <paul@nowt.org>\n+\n+\t* m4/cexp.m4 (cabs): Use correct typed version.\n+\t(csqrt): New function.\n+\n+2003-06-07  Canqun Yang  <canqun@yahoo.com.cn>\n+\n+\tSpotted by Benjamin and Tobias:\n+\t* io/list_read.c: Add Separator '\\t'.\n+\t(parse_real, read_real): Accept real values starting with an optional\n+\tsign follows a decimal point.\n+\n+2003-06-06  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Makefile.am: Don't put cmath objects in subdir.\n+\t* configure.in: Rename MATHOBJ to MATH_OBJ.\n+\n+2003-06-02  Kejia Zhao  <Kejia_zh@yahoo.com.cn>\n+\n+\t* intrinsics/associated.c: New file.\n+\t* Makefile.am: Add it. Regenerate Makefile.in.\n+\t* libgfor.h: Define g95_array_void, G95_DESCRIPTOR_DATA, and\n+\tG95_DESCRIPTOR_DTYPE.\n+\n+2003-06-01  Canqun Yang  <canqun@yahoo.com.cn>\n+\n+\t* io/write.c (calcuate_exp): Rewrite it to avoid overflow.\n+\t(calculate_G_format): Rewrite it to eliminate an infinte loop and set\n+\tthe scale_factor to 0 for F editing.\n+\n+2003-05-11  Tobias Schlter  <innenminister@gmx.de>\n+\n+\t* libgfor.h: Only include stdint.h if it exists.\n+\n+2003-05-07  Paul Brook  <paul@nowt.org>\n+\n+\t* libgfor.h: Use stdint.h types.\n+\t* intrinsics/ishift.c: Ditto.\n+\t* runtime/memory.c (malloc_t): Reorder fields for better alignment.\n+\n+2003-05-05  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* libgfor.h (offsetof): Define if nobody else does.\n+\t* runtime/memory.c (HEADER_SIZE): Use it.\n+\n+2003-05-01  Tobias Schlter  <innenminister@gmx.de>\n+\n+\t* configure.in: Require autoconf 2.54.\n+\n+2003-04-28  Tobias Schlter  <innenminister@gmx.de>\n+\tPaul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/reshape_generic.c: Copy the whole element, not just the\n+\tfirst byte.\n+\t* m4/transpose.m4: New file.\n+\t* Makefile.am: Add them.\n+\tRegenerate generated files.\n+\n+2003-04-18  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* io/format.c (parse_format_list): Allow 'X' without integer\n+\tprefix.  This is an extension.  Interpretation is '1X'.\n+\n+2003-04-18  Tobias Schlter  <Tobias.Schlueter@physik.uni-muenchen.de>\n+\n+\t* io/format.c (parse_format_list): Allow '0P'.\n+\n+2003-04-18  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Makefile.in: Re-regenerate for automake 1.7.3.\n+\n+2003-04-18  Canqun Yang  <canqun@yahoo.com.cn>\n+\n+\tPort implementation for CHARACTER SELECT from Andy's tree.\n+\t* runtime/select.c: New file\n+\t* Makefile.am: Add it.\n+\t* Makefile.in: Regenerate.\n+\n+2003-04-17  Xiaoqiang Zhang <zhangapache@yahoo.com>\n+\n+\t* io/transfer.c (formatted_transfer): Modified\n+\t* io/unix.c (move_pos_offset): New Function.\n+\t* io/format.c (parse_format_list): Modified.\n+\n+2003-04-15  Xiaoqiang Zhang <zhangapache@yahoo.com>\n+\n+\t* io/write.c (write_float,write_real): New implemention of\n+\tFMT_G and default float editing.\n+\t(calculate_exp,calculate_G_format,output_float): New Function.\n+\t(write_float,write_real,write_logical): Modified\n+\t* libgfor.h (default_rtoa): Remove Declaration.\n+\t* runtime/error.c (default_rtoa): Remove Function.\n+\n+2003-04-15  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tSpotted by Yang:\n+\t* io/write.c (extract_real): Add missing break statement.\n+\n+2003-04-13  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* cpu_time.c: Make sure we have a definition of HZ.  Don't\n+\trely on CLOCKS_PER_SEC, it is always 1000000, on any system.\n+\n+2003-04-13  Steven Bosscher  <steven@gcc.gnu.org>\n+\t    Paul Brook  <paul@nowt.org>\n+\n+\t* configure.in: Check for process time headers and GETTIMEOFDAY.\n+\t* makefile.am: Add intrinsics/cpu_time.c.\n+\t* acinclude.m4: New file.\n+\t* intrinsics/cpu_time.c: New file.\n+\t* m4/dotprodl.m4: Fix typo.\n+\tRegenerate generated files.\n+\n+2003-04-11  Xiaoqiang Zhang <zhangapache@yahoo.com>\n+\n+\t* io/write.c (extract_real): Ouput floating point value.\n+\t(write_float): New Function.\n+\t(write_e, write_f, write_en, write_es): Modified\n+\t* io/transfer.c (formatted_transfer): Modified.\n+\t* libgfor.h (default_rtoa): Declaration.\n+\t(rtoa): Declaration.\n+\t* runtime/error.c (default_rtoa): New Function.\n+\t(rtoa): New Function.\n+\n+2003-04-05  Paul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/spread_generic.c: New file.\n+\t* Makefile.am: Add it. Regenerate Makefile.in.\n+\n+2003-03-29  Paul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/pack_generic.c: New file.\n+\t* intrinsics/unpack_generic.c: New file.\n+\t* Makefile.am: Add them. Regenerate Makefile.in.\n+\n+2003-03-25  Paul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/eoshift0.c: New file.\n+\t* intrinsics/eoshift2.c: New file.\n+\t* m4/eoshift1.m4: New file.\n+\t* m4/eoshift3.m4: New file.\n+\t* Makefile.am: Add them.\n+\t* in_unpack_generic.c: Initialize src.\n+\tRegenerate generated files.\n+\n+2003-03-14  Paul Brook  <paul@nowt.org>\n+\n+\t* m4/shape.m4: Work properly with array temporaries.\n+\t* m4/in_pack.m4: Skip redundant checks for array temporaries.\n+\t* runtime/in_pack_generic.c: Ditto.\n+\n+2003-03-12  Paul Brook  <paul@nowt.org>\n+\n+\t* m4/shape.m4: Work properly with noncontiguous arrays.\n+\n+2003-03-08  Paul Brook  <paul@nowt.org>\n+\n+\t* m4/in_pack.m4: Correctly handle zero sized and assumed size arrays.\n+\t* runtime/in_pack_generic.c: Ditto.\n+\n+2003-02-08  Paul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/reshape_generic.c: Use runtime_error to report errors.\n+\t* io/close.c (st_close): Return void.\n+\t* io/open.c (st_open): Return void.\n+\t* libgfor.h (g95_array_char): Declare.\n+\t(internal_malloc_size): Ditto.\n+\t(internal_pack*, internal_unpack*): Ditto.\n+\t* m4/in_pack.m4: Allocate storage if neccessary.  Fix logic for packed\n+\tarrays.\n+\t* m4/in_unpack.m4: Include file fixes.\n+\t* m4/reshape.m4: Increment the correct source pointer.\n+\t* Makefile.am (maxloc): Fix typo.\n+\t* runtime/in_pack_generic.c: Call optimized functions. Allocate\n+\tstorage if neccessary. Fix logic for packed arrays.\n+\t* runtime/in_unpack_generic.c: Call optimized functions.\n+\t* runtime/main.c: Use runtime_error to report errors.\n+\t* memory.c (internal_malloc_size): Make non-static.\n+\n+2003-02-02  Arnaud Desitter  <arnaud.desitter@geography.oxford.ac.uk>\n+\n+\t* reshape_packed.c, lock.c: Add #include <string.h>.\n+\t* libgfor.h, format.c, inquire.c, io.h, transfer.c, unix.c,\n+\tenviron.c, error.c, memory.c, string.c: Add const.\n+\t* error.c (show_locus): Add void.\n+\n+2003-02-21  Paul Brook  <paul@nowt.org>\n+\n+\t* m4/in_pack.m4: Avoid returning const * parameter.\n+\t* Makefile.am: Only regenerate files in maintainer mode.\n+\n+2003-02-20  Paul Brook  <paul@nowt.org>\n+\n+\tAdd array repacking support functions.\n+\t* m4/in_pack.m4, m4/in_unpack.m4: New files.\n+\t* runtime/in_pack_generic.c, runtime/in_unpack_generic.c: New files.\n+\t* Makefile.am: Build them.  Regenerate configury files.\n+\t* generated/: New directory for generated files (need to move\n+\teverything else there).\n+\n+2003-02-07  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* m4/cexp.m4: Fix typo.\n+\n+2003-01-26  Paul Brook  <paul@nowt.org>\n+\n+\t* intrinsics/: Add missing generated files.\n+\n+2003-01-26  Paul Brook  <paul@nowt.org>\n+\n+\t* Makefile.am: Put -I before the filename.\n+\n+2003-01-24  Paul Brook  <paul@nowt.org>\n+\n+\t* configure.in: Add AM_MAINTAINER_MODE.\n+\n+2003-01-23  Paul Brook  <paul@nowt.org>\n+\n+\t* configure.in, Makefile.am: Modify to work with unmodified autoconf\n+\tand auotmake.\n+\tAlso regenerate other configury files.\n+\n+2003-01-21  Paul Brook  <paul@nowt.org>\n+\n+\t* io/read.c: Don't use stdint.h, it doesn't exist on cygwin.\n+\n+2003-01-20  Steven Bosscher  <s.bosscher@student.tudelft.nl>\n+\n+\t* io/read.c (read_f): Don't use alloca, but safe get_mem instead.\n+\tDon't include \"alloca.h\".\n+\n+2003-01-20  Steven Bosscher  <s.bosscher@student.tudelft.nl>\n+\n+\t* intrinsics/string.c: Rename to intrinsics/string_intrinsics.c.\n+\t* Makefile.am: Adjust file name.\n+\t* Makefile.in: Regenerate.\n+\t* gfortypes.h: Kill, include everything in...\n+\t* libgfor.h: ...here.  Include config.h\n+\t* fmain.c, intrinsics/ishftc.c, intrinsic/reshape_generic.c,\n+\tintrinsics/reshape_i4.c, intrinsics/reshape_i8.c,\n+\tintrinsics/reshape_packed.c, intrinsics/size.c,\n+\tm4/reshape.m4, runtime/main.c, runtime/memory.c: Use macro\n+\tfor prefix for all functions instead of hardcoded.\n+\n+2003-01-19  Steven Bosscher  <s.bosscher@student.tudelft.nl>\n+\n+\t* io/lock.c (library_end): Propagate library return\n+\tcode.\n+\n+2003-01-19  Steven Bosscher  <s.bosscher@student.tudelft.nl>\n+\n+\tPort fixes from Andy's tree:\n+\t* io/read.c (read_decimal): Reverse sense of overflow\n+\tcomparison during integer reads.\n+\t* io/format.c (revert): Fix comment.\n+\t(next_format): Fix format revision.\n+\t* io/unix.c: Fix and simplify mmap version of stream\n+\tfunctions.\n+\n+2003-01-11  Paul Brook  <paul@nowt.org>\n+\n+\t* configure, Makefile.in: Regenerate.\n+\n+2003-01-11  Paul Brook  <paul@nowt.org>\n+\n+\t* runtime/stop.c: Rewrite.\n+\n+2003-01-08  Paul Brook  <paul@nowt.org>\n+\n+\t* configure, Makefile.in: Regenerate.\n+\n+2003-01-05  Paul Brook  <paul@nowt.org>\n+\n+\t* (*.m4) Move to m4/.\n+\t* intrinsics/string.c (_gfor_string_index): New Function."}, {"sha": "992848cfb213c2492f7ea23f2e32471878f7aed6", "filename": "libgfortran/ChangeLog-2004", "status": "added", "additions": 1104, "deletions": 0, "changes": 1104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d592bed30e345d3dae465dca7aaa96f5addea5/libgfortran%2FChangeLog-2004", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d592bed30e345d3dae465dca7aaa96f5addea5/libgfortran%2FChangeLog-2004", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog-2004?ref=f1d592bed30e345d3dae465dca7aaa96f5addea5", "patch": "@@ -0,0 +1,1104 @@\n+2004-12-27  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* libgfortran/libgfortran.h (GFC_UINTEGER_1, GFC_UINTEGER_2):\n+\tDefine.\n+\t* intrinsics/ishftc.c: Update copyright years.\n+\t(ishftc8): Change 'shift' and 'size' to GFC_INTEGER_4.\n+\t* intrinsics/mvbits.c: Correct non-ASCII character in my name.\n+\tAdd implementations for GFC_INTEGER_1 and GFC_INTEGER_2.\n+\n+2004-12-23  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/19071\n+\t* io/tranfer.c (formatted_transfer): moved check for\n+\tformat reversion inside the processing loop.\n+\n+2004-12-19  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n+\n+\tPR libfortran/19074\n+\t* libgfortran.h (itoa): Rename to gfc_itoa.\n+\t* io/write.c (itoa): Same.\n+\t* runtime/environ.c (itoa): Same.\n+\t* runtime/error.c (itoa): Same.\n+\n+2004-12-15  Bud Davis  <bdavis9659@comcast.net>\n+\t    Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/17597\n+\t* io/list_read.c (read_real): do not push back a comma when\n+\tit delimits a real value without a decimal point\n+\n+2004-12-14  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* libgfortran/io/transfer.c (us_read): Use memcpy/memset\n+\tinstead of assignment to fill unaligned buffer.\n+\t(us_write): Ditto.\n+\t(next_record_w): Ditto.\n+\n+2004-12-14  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR libfortran/18966\n+\t* gfortran.h: typedef GFC_INTEGER_1 and GFC_INTEGER_2\n+\t* intrinsics/cshift0.c (cshift0_1,cshift0_2): New functions.\n+\t* intrinsics/eoshift0.c (eoshift0_1,eoshift0_2): New functions.\n+\t* intrinsics/eoshift2.c (eoshift2_1,eoshift2_2): New functions.\n+\n+2004-12-13  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* io/transfer.c (read_sf): Change bitwise \"and\" to logical \"and\".\n+\n+2004-12-12  Richard Henderson  <rth@redhat.com>\n+\n+\t* intrinsics/cshift0.c, intrinsics/eoshift0.c, intrinsics/eoshift2.c,\n+\tintrinsics/pack_generic.c, intrinsics/reshape_generic.c,\n+\tintrinsics/spread_generic.c, intrinsics/transpose_generic.c,\n+\tintrinsics/unpack_generic.c, m4/cshift1.m4, m4/dotprod.m4,\n+\tm4/dotprodc.m4, m4/dotprodl.m4, m4/eoshift1.m4, m4/eoshift3.m4,\n+\tm4/iforeach.m4, m4/ifunction.m4, m4/matmul.m4, m4/matmull.m4,\n+\tm4/reshape.m4, m4/shape.m4, m4/transpose.m4: Use standard prefix\n+\tinstead of \"__\".\n+\t* generated/*: Rebuild.\n+\n+2004-12-12  Richard Henderson  <rth@redhat.com>\n+\n+\t* acinclude.m4 (LIBGFOR_CHECK_ATTRIBUTE_VISIBILITY): New.\n+\t(LIBGFOR_CHECK_ATTRIBUTE_DLLEXPORT): New.\n+\t(LIBGFOR_CHECK_ATTRIBUTE_ALIAS): New.\n+\t* configure.ac: Use them.\n+\t* configure, config.h.in, aclocal.m4: Rebuild.\n+\t* libgfortran.h (prefix): Remove.\n+\t(PREFIX, IPREFIX): New.\n+\t(sym_rename, sym_rename1, sym_rename2): New.\n+\t(internal_proto, export_proto, export_proto_np): New.\n+\t(iexport_proto, iexport): New.\n+\t(iexport_data_proto, iexport_data): New.\n+\t* intrinsics/abort.c, intrinsics/args.c, intrinsics/associated.c,\n+\tintrinsics/cpu_time.c, intrinsics/cshift0.c,\n+\tintrinsics/date_and_time.c, intrinsics/env.c, intrinsics/eoshift0.c,\n+\tintrinsics/eoshift2.c, intrinsics/etime.c, intrinsics/exit.c,\n+\tintrinsics/flush.c, intrinsics/fnum.c, intrinsics/getXid.c,\n+\tintrinsics/getcwd.c, intrinsics/ishftc.c, intrinsics/mvbits.c,\n+\tintrinsics/pack_generic.c, intrinsics/rand.c, intrinsics/random.c,\n+\tintrinsics/reshape_generic.c, intrinsics/size.c,\n+\tintrinsics/spread_generic.c, intrinsics/stat.c,\n+\tintrinsics/string_intrinsics.c, intrinsics/system.c,\n+\tintrinsics/system_clock.c, intrinsics/transpose_generic.c,\n+\tintrinsics/umask.c, intrinsics/unlink.c, intrinsics/unpack_generic.c,\n+\tio/backspace.c, io/close.c, io/endfile.c, io/inquire.c, io/io.h,\n+\tio/open.c, io/rewind.c, io/transfer.c, libgfortran.h, m4/cshift1.m4,\n+\tm4/dotprod.m4, m4/dotprodc.m4, m4/dotprodl.m4, m4/eoshift1.m4,\n+\tm4/eoshift3.m4, m4/exponent.m4, m4/fraction.m4, m4/iforeach.m4,\n+\tm4/ifunction.m4, m4/matmul.m4, m4/matmull.m4, m4/nearest.m4,\n+\tm4/pow.m4, m4/reshape.m4, m4/set_exponent.m4, m4/shape.m4,\n+\tm4/transpose.m4, runtime/environ.c, runtime/error.c,\n+\truntime/in_pack_generic.c, runtime/in_unpack_generic.c,\n+\truntime/main.c, runtime/memory.c, runtime/pause.c, runtime/select.c,\n+\truntime/stop.c: Use them to mark symbols internal or external.\n+\t* generated/*: Rebuild.\n+\n+2004-12-09  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR bootstrap/18895\n+\tRevert 2004-12-07 change.\n+\t* Makefile.am (AM_MAKEFLAGS): Delete.\n+\t* Makefile.in: Regenerate.\n+\n+2004-12-07  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* libgfortran/Makefile.am (AM_MAKEFLAGS): New.\n+\t* libgfortran/Makefile.in: Regenerate\n+\n+2004-12-07  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* io/io.h (open_external): Change prototype.\n+\t* io/unix.c (regular_file): Change prototype and set flags->action if\n+\tneeded.\n+\t(open_external): Ditto.\n+\t* io/open.c (new_unit): Let open_external set flags->action.\n+\n+2004-12-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* configure.ac: Check for ieeefp.h.  Check for fabsf in libm.\n+\t* configure: Regenerate.\n+\t* config.h.in: Likewise.\n+\t* c99_protos.h: New file.\n+\t* libgfortran.h: Include c99_protos.h and conditionally ieeefp.h.\n+\t* intrinsics/c99_functions.c (fabsf): New function.\n+\n+2004-12-06  Richard Henderson  <rth@redhat.com>\n+\n+\t* intrinsics/cshift0.c, intrinsics/eoshift0.c, intrinsics/eoshift2.c,\n+\tintrinsics/pack_generic.c, intrinsics/string_intrinsics.c,\n+\tintrinsics/transpose_generic.c, m4/ifunction.m4, m4/matmul.m4,\n+\tm4/matmull.m4, m4/transpose.m4: Use internal_malloc_size instead\n+\tof internal_malloc.\n+\t* generated/*: Rebuild.\n+\n+2004-12-06  Richard Henderson  <rth@redhat.com>\n+\n+\t* intrinsics/c99_functions.c, intrinsics/eoshift0.c,\n+\tintrinsics/eoshift2.c, intrinsics/exit.c, intrinsics/flush.c,\n+\tintrinsics/ishftc.c, intrinsics/mvbits.c, intrinsics/pack_generic.c,\n+\tintrinsics/random.c, intrinsics/reshape_generic.c, intrinsics/size.c,\n+\tintrinsics/spread_generic.c, intrinsics/stat.c,\n+\tintrinsics/string_intrinsics.c, intrinsics/system_clock.c,\n+\tintrinsics/transpose_generic.c, intrinsics/unlink.c,\n+\tintrinsics/unpack_generic.c, io/backspace.c, io/format.c,\n+\tio/list_read.c, io/lock.c, io/open.c, io/transfer.c, io/unix.c,\n+\tio/write.c, runtime/environ.c, runtime/error.c,\n+\truntime/in_pack_generic.c, runtime/in_unpack_generic.c, runtime/main.c,\n+\truntime/memory.c, runtime/pause.c, runtime/stop.c,\n+\truntime/string.c: Whitespace fixes.\n+\n+2004-12-06  Richard Henderson  <rth@redhat.com>\n+\n+\t* Makefile.am: Generate all m4 output under $(srcdir).\n+\t* Makefile.in: Regenerate.\n+\n+2004-12-02  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/18710\n+\t* io/transfer.c (unformatted_read, unformatted_write): width of\n+\ta COMPLEX is twice its kind.\n+\n+2004-12-02  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* configure.ac: Use TL_AC_GCC_VERSION to set gcc_version.\n+\t* configure, aclocal.m4, Makefile.in: Regenerate.\n+\n+2004-12-02  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR libfortran/18284\n+\t* io/unix.c (fd_alloc_w_at): Update file_length when extending.\n+\t* io/backspace.c (formatted_backspace): Reset endfile after backspace.\n+\n+2004-12-02  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* io/inquire.c (inquire_via_unit): do not allow a direct access\n+\tfile to be opened for sequential I/O.\n+\n+2004-12-02  Steven G. Kargl  <kargls@comcast.net>\n+\tPaul Brook  <paul@codesourcery.com>\n+\n+\t* intrinsics/flush.c: New file.\n+\t* intrinsics/fnum.c: ditto\n+\t* intrinsics/stat.c: ditto\n+\t* io/io.h (unit_to_fd): Add prototype.\n+\t* io/unix.c (unit_to_fd): New function.\n+\t* configure.ac: Add test for members of struct stat.  Check for\n+\tsys/types.h and sys/stat.h\n+\t* Makefile.am: Add intrinsics/{flush.c,fnum.c,stat.c}\n+\t* configure.in: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n+2004-12-01  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n+\n+\t* Makefile.am (AM_CPPFLAGS): Use -iquote instead of -I.\n+\n+2004-11-28  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* io/unix.c (mmap_alloc_w_a): check for a write to a location\n+\tless than the mapped area.\n+\n+2004-11-27  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/18364\n+\t*  io/endfile.c (st_endfile): flush the stream before truncating.\n+\n+2004-11-24  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* configure: Regenerate for libtool change.\n+\n+2004-11-22  Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR libfortran/15960\n+\t* configure.ac: Check for finite in libm.\n+\t* libgfortran.h: Define isfinite macro if not defined.\n+\t* intrinsics/c99_functions.c: Use defined(fpclassify) instead of\n+\tHAVE_FPCLASSIFY.\n+\t* io/write.c (write_float): Use isfinite instead of finite.\n+\t* configure, config.h.in: Rebuilt.\n+\n+2004-11-20  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* io/write.c (write_float, list_formatted_write): Fix indentation.\n+\n+2004-11-20  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR target/16135\n+\t* acinclude.m4 (LIBGFOR_TARGET_ILP32): New check.\n+\t* configure.ac: Include LIBGFOR_TARGET_ILP32.\n+\t* configure: Regenerate.\n+\t* config.h.in: Likewise.\n+\t* libgfortran.h: Provide default definitions for C99 types\n+\ton ILP32 targets that don't have them.\n+\n+\tPR target/17999\n+\t* configure.ac: Check for snprintf.\n+\t* configure: Regenerate.\n+\t* config.h.in: Likewise.\n+\t* intrinsics/date_and_time.c (date_and_time): Do not\n+\tuse snprinf if it is not available.\n+\t* io/write.c (output_float): Likewise.\n+\n+2004-11-20  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* Makefile.am: Add intrinsics/{umask.c,unlink.c,exit.c}\n+\t* Makefile.in: Regenerated\n+\t* intrinsics/umask.c: New file\n+\t* intrinsics/unlink.c: ditto\n+\t* intrinsics/exit.c: ditto\n+\n+2004-11-18  Victor Leikehman  <lei@il.ibm.com>\n+\n+\t* m4/matmul.m4: Loops reordered to improve cache behavior.\n+\t* generated/matmul_??.c: Regenerated.\n+\n+2004-11-10  Paul Brook  <paul@codesourcery.com>\n+\n+\tPR fortran/18218\n+\t* configure.ac: Check for strtof.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* io/read.c (convert_real): Use strtof if available.\n+\t(convert_precision_real): Remove.\n+\t(read_f): Avoid poor exponentiation algorithm.\n+\n+2004-11-05  Andreas Schwab  <schwab@suse.de>\n+\n+\t* configure.ac: Use AC_PROG_FC, FC and FCFLAGS instead of\n+\tAC_PROG_F77, F77 and FFLAGS.\n+\t* Makefile.am (selected_int_kind.inc, selected_real_kind.inc): Use\n+\tFCCOMPILE instead of F77COMPILE.\n+\t* configure, Makefile.in: Regenerate.\n+\n+2004-11-05  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* acinclude.m4: Properly quote AC_CACHE_CHECK.\n+\t* Makefile.am: Add in ACLOCAL_AMFLAGS.\n+\t* aclocal.m4, configure, Makefile.in: Regenerate.\n+\n+2004-10-30  Aaron W. LaFramboise <aaronavay62@aaronwl.com>\n+\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac (AC_CHECK_FUNCS): Add mkstemp.\n+\t* io/unix.c (S_IRGRP): Define if undefined.\n+\t(S_IWGRP): Same.\n+\t(S_IROTH): Same.\n+\t(S_IWOTH): Same.\n+\t(tempfile): Use mktemp if mkstemp missing, fix typos.\n+\n+2004-10-30  Aaron W. LaFramboise <aaronavay62@aaronwl.com>\n+\n+\t*  intrinsics/system.c (\"libgfortran.h\"): Move after system headers.\n+\n+2004-10-30  Canqun Yang  <canqun@nudt.edu.cn>\n+\n+\t* intrinsics/rand.c (irand): Handle NULL argument.\n+\n+2004-10-07  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/transfer.c (finalize_transfer): Free internal streams.\n+\t* io/unix.c (mem_close): Free stream object.\n+\n+2004-10-07  Paul Brook  <paul@codesourcery.com>\n+\n+\t* intrinsics/string_intrinsics.c (string_verify): Fix off by one\n+\terror.\n+\n+2004-10-06  Paul Brook  <paul@codesourcery.com>\n+\n+\tPR libfortran/17709\n+\t* io/transfer.c (data_transfer_init): Reset sf_seen_eor.\n+\n+2004-10-04  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* intrinsics/mvbits.c: Commit the file.\n+\n+2004-10-04  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/17283\n+\t* intrinsics/pack_generic.c (__pack): Allocate memory for return array\n+\tif not done by caller.\n+\t(__pack_s): New function.\n+\t* runtime/memory.c (internal_malloc, internal_malloc64): Allow\n+\tallocating zero memory.\n+\n+\tPR fortran/17631\n+\t* Makefile.am (gfor_helper_src): Add intrinsics/mvbits.h.\n+\t* Makefile.in: Regenerate.\n+\t* intrinsics/mvbits.h: New file.\n+\n+\tPR fortran/17776\n+\t* intrinsics/system.c: New file.\n+\t* Makefile.am: Add dependency for the new file.\n+\t* Makefile.in: Regenerate.\n+\n+2004-10-04  Paul Brook  <paul@codesourcery.com>\n+\tBud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/17706\n+\tPR fortran/16434\n+\t* io/format.c (parse_format_list): Set repeat count for S, SP, SS,\n+\tBN and BZ formats.\n+\t* io/write.c (output_float): Don't output minus zero.\n+\n+2004-10-03  Aaron W. LaFramboise <aaronavay62@aaronwl.com>\n+\n+\t* intrinsics/abort.c (\"libgfortran.h\"): Move.\n+\t* intrinsics/date_and_time.c (\"libgfortran.h\"): Same.\n+\t* intrinsics/write.c (\"libgfortran.h\"): Same.\n+\n+2004-09-26  Tobias Schlueter  <tobis.schlueter@physik.uni-muenchen.de>\n+\n+\tPR libfortran/16137\n+\t* config.h.in (HAVE_POWF): Undefine.\n+\t* configure.ac: Check for 'powf' in library.\n+\t* configure: Regenerate.\n+\t* intrinsics/c99_functions.c (powf): New function.\n+\n+2004-09-24  Tobias Schlueter  <tobis.schlueter@physik.uni-muenchen.de>\n+\n+\t* intrinsics/etime.c (etime_): New function.\n+\n+2004-09-21  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* libgfortran.h: define gfc_alloca()\n+\t* intrinsics/env.c (getenv, get_environment_variable_i4): Use it.\n+\n+2004-09-21  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/17286\n+\t* io/list_read.c (namelist_read): ignore spaces after\n+\tthe '=' for namelist reads.\n+\n+2004-09-15  Aaron W. LaFramboise <aaronavay62@aaronwl.com>\n+\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac (AC_CHECK_HEADERS): Check for sys/mman.h.\n+\t* unix.c: Include stdio.h.\n+\t(HAVE_SYS_MMAN_H): Check.\n+\t(PROT_READ, PROT_WRITE): Provide default definitions.\n+\n+2004-09-15  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* intrincics/getcwd.c: New file.\n+\t* Makefile.am: Add getcwd.c.\n+\t* Makefile.in: Regenerated.\n+\n+2004-09-15  Steven G. Kargl  <kargls@comcast.net>\n+\tPaul Brook  <paul@codesourcery.com>\n+\n+\t* intrinsics/env.c (getenv, get_environmental_variable): Remove\n+\ttrailing white space.  Use alloca.  Honour trim_name.\n+\n+2004-09-13  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/17090\n+\n+\t* io/list_read.c (list_formatted_read): Handle trailing spaces\n+\tat end of line.\n+\n+2004-09-06  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* io/write.c (output_float): Typo in comment.  Remove debugging\n+\tprintf.  Fix format for FP of form 1e10.\n+\n+2004-09-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* intrinsics/cshift0.c (DEF_COPY_LOOP, copy_loop_int, copy_loop_long,\n+\tcopy_loop_double, copy_loop_ldouble): New.\n+\t(__cshift0): Make shift type ssize_t.  Use % operator instead of\n+\tdiv.  Use specialized versions of copy loop depending on the shape.\n+\n+2004-09-02  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/format.c (parse_format_list): Set repeat count for P descriptors.\n+\t* write.c (output_float): Fix condition.  Correctly handle nonzero\n+\tscale factor.\n+\n+2004-09-01  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* mk-sik-inc.sh: Use a temporary string instead of 'echo -n'.\n+\t* mk-srk-inc.sh: Likewise.\n+\n+2004-09-01  Paul Brook  <paul@codesourcery.com>\n+\n+\t* runtime/error.c (generate_error): Set both iostat and\n+\tlibrary_return.\n+\n+2004-08-31  Paul Brook  <paul@codesourcery.com>\n+\n+\tPR libfortran/16805\n+\t* io/list_read.c (next_char): Don't signal EOF for internal files.\n+\t* io/unix.c (mem_alloc_r_at): Don't return NULL for incomplete reads.\n+\n+2004-08-31  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* io/unit.c: Separate copyright years by ','.\n+\t(compare, insert_unit, delete_unit, is_internal_unit, close_units):\n+\tRemove blank line in beginning of function.\n+\t(get_unit): Simplify code.\n+\n+2004-08-31  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/unit.c (get_unit): Remove superfluous if.\n+\n+2004-08-31  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/transfer.c (read_sf): Rename uinty to readlen.  Detect EOF.\n+\t(finalize_transfer): Move setjmp after namlist IO.\n+\t* io/unix.c (mem_alloc_r_at): Calculate remaining length correctly.\n+\n+2004-08-31  Paul Brook  <paul@codesourcery.com>\n+\n+\t* list_read.c (eat_separator): Set at_eo when a '/' is seen.\n+\n+2004-08-31  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* libgfortran.h: Replace 'gfc_strlen_type' by\n+\t'gfc_charlen_type'. Update comment accordingly.\n+\t* intrinsics/args.c, intrinsics/env.c, io/io.h, io/transfer.c:\n+\tReplace all occurences of 'gfc_strlen_type' by 'gfc_charlen_type'.\n+\n+2004-08-31  Paul Brook  <paul@codesourcery.com>\n+\n+\t* libgfortran.h: Add comments.\n+\n+2004-08-30  Richard Henderson  <rth@redhat.com>\n+\n+\t* Makefile.am (gfor_helper_src): Split selected_kind.f90.\n+\t(gfor_built_src): Add selected_int_kind.inc selected_real_kind.inc.\n+\t(selected_int_kind.inc selected_real_kind.inc): New rules.\n+\t* Makefile.in: Regenerate.\n+\t* mk-sik-inc.sh, mk-srk-inc.sh: New files.\n+\t* intrinsics/selected_int_kind.f90: Split from selected_kind.f90,\n+\tinclude table of detected kinds.\n+\t* intrinsics/selected_real_kind.f90: Similarly.\n+\n+2004-08-29  Steven G. Kargl  <kargls@comcast.net>\n+\tPaul Brook  <paul@codesourcery.com>\n+\n+\t* intrinsics/bessel.c: New file.\n+\t* intrinsics/erf.c: New file.\n+\t* Makefie.am: Add intrinsics/bessel.c and intrinsics/erf.c.\n+\t* configure.ac: Test for C99 Bessel and Error functions.\n+\t* Makefile.in: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2004-08-29  Steven G. Kargl  <kargls@comcast.net>\n+\tPaul Brook  <paul@codesourcery.com>\n+\n+\t* Makefile.am: Add intrinsics/getXid.c.\n+\t* configure.ac: Add tests for get{g,p,u}id.\n+\t* config.h.in: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2004-08-28  Paul Brook  <paul@codesourcery.com>\n+\n+\tPR libfortran/17195\n+\t* libgfortran.h (rtoa): Remove prototype.\n+\t* runtime/error.c (rtoa): Remove.\n+\t* io/write.c (calculate_G_format): Don't add blanks if E format is\n+\tused.  Add correct number of blanks when exponent width is specified.\n+\t(output_float): Rewrite.\n+\n+2004-08-27  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/rewind.c (st_rewind): Reset unit to read mode.\n+\n+2004-08-27  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/16597\n+\t* io/io.h: created typedef for unit_mode.\n+\t* io/io.h (gfc_unit): added mode to unit structure.\n+\t* io/transfer.c (data_transfer_init): flush if a write then\n+\tread is done on a unit (direct access files).\n+\t* io/rewind.c (st_rewind): Used unit mode instead of global.\n+\n+2004-08-24  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/17143\n+\t* runtime/error.c (itoa): keep from overflowing during\n+\tmod operation by using unsigned variable.\n+\n+2004-08-24  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/17164\n+\t* runtime/string_intrinsics.c (string_index):check for\n+\tsubstring longer than string.\n+\n+2004-08-24  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* Makefile.am (libgfortran_la_LDFLAGS): Add -lm.\n+\t* Makefile.in: Rebuilt.\n+\n+2004-08-23  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* io/io.h, io/list_read.c, io/open.c, io/transfer.c, io/write.c:\n+\tFix formatting issues, update copyright years.\n+\n+2004-08-21  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR 16908\n+\t* io/transfer.c (next_record_w): Do not blank pad.\n+\t* io/transfer.c (next_record): Take into account partial records.\n+\n+2004-08-18  Victor Leikehman  <lei@il.ibm.com>\n+\n+\tPR fortran/13278\n+\t* io/transfer.c (st_set_nml_var)\n+\t* io/write.c (namelist_write): Allow var_name and var_name_len to be\n+\tnull. For strings, use string_length field instead of len.\n+\t* io/io.h (struct namelist_type): New field string_length.\n+\t(st_set_nml_var_char): New argument string_length.\n+\n+2004-08-13  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/16935\n+\t* io/open.c (st_open): use flags instead of the unit structure.\n+\n+2004-08-10  Victor Leikehman  <lei@il.ibm.com>\n+\n+\t* io/list_read.c (namelist_read): Convert variable names\n+\tto lower case, so that mixed-case names are recognized.\n+\tDon't read beyond terminating slash.\n+\n+2004-08-09  Richard Henderson  <rth@redhat.com>\n+\t    Roger Sayle  <roger@eyesopen.com>\n+\n+\t* intrinsics/c99_functions.c (nextafterf): New implementation that\n+\tworks correctly with denormalized numbers.\n+\n+2004-08-09  Victor Leikehman  <lei@il.ibm.com>\n+\n+\t* m4/matmul.m4, m4/matmull.m4, intrinsics/eoshift0.c,\n+\tintrinsics/eoshift2.c, intrinsics/transpose_generic.c:\n+\tAllocate space if return value has NULL in its data field.\n+\t* generated/*.c: Regenerate.\n+\n+2004-08-06  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n+\n+\t* intrinsics/env.c: New file.\n+\t* Makefile.am: Add env.c to build.\n+\t* Makefile.in: Regenerate.\n+\n+2004-08-05  Victor Leikehman  <lei@il.ibm.com>\n+\n+\tPR libgfortran/16704\n+\t* io/read.c (read_radix): Understand letters f and F as hex digits.\n+\n+2004-08-04  Victor Leikehman  <lei@il.ibm.com>\n+\n+\t* libgfortran.h (array_t, size0) New declarations.\n+\t* m4/ifunction.m4, m4/transpose.m4, intrinsics/cshift0.c: Allocate\n+\tspace if return value descriptor has NULL in its data field,\n+\tand initialize bounds and stride.\n+\t* intrinsics/size.c (array_t, size0): Declarations moved to\n+\tlibgfortran.h.\n+\t* generated/*.c: Regenerate.\n+\n+2004-08-03  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR libgfortran/16137\n+\t* configure.ac: Add tests for acosf, asinf, atan2f, atanf, ceilf,\n+\tcopysignf, cosf, coshf, expf, floorf, frexpf, hypotf, logf, log10f,\n+\tscalbnf, sinf, sinhf, sqrtf, tanf and tanhf in libm.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+\t* instrinsics/c99_functions.c (acosf, asinf, atan2f, atanf, ceilf,\n+\tcopysignf, cosf, coshf, expf, floorf, frexpf, hypotf, logf, log10f,\n+\tnextafterf, scalbnf, sinf, sinhf, sqrtf, tanf, tanhf): New stub\n+\timplementations for targets that don't support C99 float functions.\n+\n+2004-08-01  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* io/write.c (write_float): Use the slightly more portable isnan\n+\tin preference to isinf.\n+\n+2004-07-18  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* configure.ac: Add check for LFS support.\n+\t* configure: Regenerate\n+\n+2004-07-11  Paul Brook  <paul@codesourcery.com>\n+\n+\tPR fortran/16303\n+\t* m4/cexp.m4 (carg): Return -pi to pi.\n+\t* generated/exp_c?.c: Regenerate.\n+\n+2004-07-08  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\tPR fortran/16291\n+\t* libgfortran/io/write.c: (write_float): Added length check.\n+\tRemove pointless memset calls.\n+\n+2004-07-04  Bud Davis  <bdavis9659@comcast.net>\n+\t    Paul Brook  <paul@codesourcery.com>\n+\n+\tPR fortran/15472\n+\t* io/transfer.c(us_write): set recl for seq unform writes to max size.\n+\t* io/transfer.c(data_transfer_init): handle un-opened seq unform unit.\n+\t* io/unix.c(fd_alloc_w_at): handle requests at start, fd_flush at\n+\tright time.\n+\t* io/unix.c(is_seekable): set based upon the file/device, not the\n+\tmethod being used to access it (fd or mmap).\n+\t* io/unix.c(fd_flush): don't set file_size if !seekable.\n+\t* io/unix.c(fd_truncate: ditto.\n+\n+2004-07-04  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n+\tPaul Brook  <paul@codesourcery.com>\n+\n+\tPR fortran/15280\n+\tPR fortran/15665\n+\t* libgfortran.h (gfc_strlen_type): Define.\n+\t* intrinsics/args.c (getarg): Rename ...\n+\t(getarg_i4): ... to this.\n+\t(getarg_i8, get_command_argument_i4, get_command_argument_i8,\n+\tget_command_i4, get_command_i8): New functions.\n+\n+2004-07-04  Matthias Klose  <doko@debian.org>\n+\n+\t* libtool-version: New.\n+\t* Makefile.am (libgfortran_la_LDFLAGS): Use -version-info for soname.\n+\t* Makefile.in: Regenerate.\n+\t* configure.ac: Remove libtool_VERSION macro\n+\t* configure: Regenerate\n+\n+2004-06-30  Steve Kargl  <sgk@troutmask.apl.washington.edu>\n+\t    Steven Bosscher  <stevenb@suse.de>\n+\n+\t* intrinsics/rand.c (rand): Wrap the irand() call from the previous\n+\tcommit in prefix.\n+\n+2004-06-29  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\tPaul Brook  <paul@codesourcery.com>\n+\n+\t* runtime/normalize.c (normalize_r4_i4, normalize_r8_i8): Fix\n+\tcomments.\n+\t* intrinsics/rand.c (rand): Call irand() in call to normalize_r4_i4.\n+\n+2004-06-27  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/12839\n+\t* io/write.c (write_float): check signbit for Infinity.\n+\n+2004-06-26  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/16196\n+\t* unix.c(regular_file): create file if it does not exist.\n+\n+2004-06-24  Andrew Pinski  <apinski@apple.com>\n+\n+\t* configure.ac: Remove check for libmx.\n+\t* configure: Regenerate.\n+\n+2004-06-22  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n+\n+\tPR fortran/15750\n+\t* inquire.c (st_inquire): Add comment\n+\t* io.h (st_parameter): Add iolength.\n+\t(st_iolength, st_iolength_done): Declare.\n+\t* transfer.c (iolength_transfer, iolength_transfer_init,\n+\tst_iolength, st_iolength_done): New functions.\n+\n+2004-06-21  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* etime.c (etime_sub): Remove array rank check;\n+\tAdd check for sufficient space.\n+\n+2004-06-19  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/16080\n+\t* io/list_read.c(set_value): fixed spelling.\n+\n+2004-06-19  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/16080\n+\t* io/list_read.c(set_value): don't copy if the string is null.\n+\n+2004-06-14  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/15292\n+\t* intrinsics/c99_functions.c: Use fpclassify if it exists.\n+\n+2004-06-13  Paul Brook  <paul@codesourcery.com>\n+\n+\t* Makefile.am (gfor_helper_src): Add runtime/normalize.f90.\n+\t* configure.ac: Add checks for nextafter and nextafterf.\n+\t* Makefile.in, config.h.in, configure: Regenerate.\n+\t* libgfortran.h (normalize_r4_i4, normalize_r8_i8): Declare.\n+\t* intrinsics/rand.c (rand): Use normalize_r4_i4.\n+\t* intrinsics/random.c (random_r4): Use normalize_r4_i4.\n+\t(random_r8): Use normalize_r8_i8.\n+\t* runtime/normalize.c: New file.\n+\n+2004-06-13  Steven G. Kargl  <kargls@comcast.net>\n+\t    Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* random.c: Fix several spelling and formatting mistakes in\n+\tcomments.\n+\t(random_r8): Fix loop to make random numbers range in [0,1(.\n+\n+\n+2004-06-13  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* random.c (random_r4): Burn a random number.\n+\t(random_r8): fix infinite loop.\n+\n+2004-06-12  Bud Davis  <bdavis9659@comcast.net>\n+\t    Steve Kargl  <sgk@troutmask.apl.washington.edu>\n+\n+\tPR gfortran/15292\n+\t* intrinsics/c99_functions.c: New file.\n+\t* Makefile.am: Add new file.\n+\t* configure.ac: Added test for round/roundf.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.h.in: Regenerate.\n+\n+2004-06-12  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* Makefile.am: Add rand.c and etime.c\n+\t* Makefile.in: Regenerated.\n+\t* aclocal.in: Regenerated.\n+\t* cpu_time.c (second_sub, second): New functions.\n+\t* rand.c (irand, rand, srand): New file.\n+\t* etime.c (etime_sub, etime): New file.\n+\n+2004-06-12  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\t    Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR fortran/14923\n+\t* intrinsics/date_and_time.c: New file.\n+\t* Makefile.am (gfor_helper_src): Add intrinsics/date_and_time.c.\n+\t* Makefile.in, aclocal.m4: Regenerate.\n+\t* libgfortran.h: Prototype date_and_time().\n+\n+2004-06-12  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/15665\n+\t* intrinsics/args.c: Implement GETARG and IARGC.\n+\t* Makefile.am: Add it.\n+\t* Makefile.in: Regenerate.\n+\n+2004-06-12  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/12839\n+\t* io/write.c(write_float): Format inf and nan IAW F2003.\n+\n+2004-06-09  Bud Davis  <bdavis9659@comcaste.net>\n+\n+\tPR gfortran/14897\n+\t* io/transfer.c (formatted_transfer): position is unique\n+\t for T and TL edit descriptors.\n+\t(data_transfer_init): set record length to size of internal\n+\t file.\n+\n+2004-06-09  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/15755\n+\t* io/backspace.c(st_backspace): call correct routine for\n+\tformatted and un-formatted units.\n+\n+2004-05-30  Andreas Jaeger  <aj@suse.de>, Steven Bosscher <stevenb@suse.de>\n+\n+\tPR gfortran/11800\n+\t* Makefile.am (AM_CPPFLAGS): Renamed from INCLUDES.\n+\t(lib_LTLIBRARIES): Rename to ...\n+\t(toolexeclib_LTLIBRARIES): this for multilib support.\n+\t* configure.in: Rename to ...\n+\t* configure.ac: this.  Update to modern autoconf style, enable\n+\tmultilibs, support --enable-version-specific-runtime-libs.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* aclocal.m4: Regenerated.\n+\n+2004-05-30  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* libgfortran.h (random_seed): Update prototype.\n+\t* intrinsics/random.c: Disable old implementation and add new one.\n+\n+2004-05-30  Andreas Jaeger  <aj@suse.de>\n+\n+\t* intrinsics/random.c: Include unistd.h for close and read\n+\tprototypes, remove unneeded inclusion of assert.h.\n+\n+\t* intrinsics/abort.c: Include stdlib.h for abort prototype, remove\n+\tunneeded inclusion of assert.h.\n+\n+2004-05-27  Tobias Schlueter  <tobias.shclueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/15234\n+\t* intrinsics/associated.c: Remove enum.\n+\t(associated): Replace TRUE/FALSE by 1/0.\n+\n+2004-05-23  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* random.c (random_seed): Use correct variable.\n+\n+2004-05-22  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* intrinsics/system_clock: New file.\n+\t* Makefile.am: Add intrinsics/system_clock.c.\n+\t* Makefile.in: Regenerate.\n+\n+2004-05-21  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* io/format.c (parse_format_list): Allow the comma after a string\n+\tliteral to be optional.\n+\n+2004-05-18  Paul Brook  <paul@codesourcery.com>\n+\tFeng Wang  <fengwang@nudt.edu.cn>\n+\n+\t* Makefile.am (i_pow_c): Set it. Add build rule.\n+\t(gfor_built_src): Use it.\n+\t(m4_files): add m4/pow.m4.\n+\t* Makefile.in: Regenerate.\n+\t* m4/pow.m4: New file.\n+\t* generated/pow_*.c: Regenerate.\n+\n+2004-05-18  Paul Brook  <paul@codesourcery.com>\n+\n+\t* Makefile.am: Remove references to types.m4.\n+\t* m4/iparm.m4: Merge with types.m4.\n+\t* m4/types.m4: Remove.\n+\t* m4/cshift1.m4, m4/dotprod.m4, m4/dotprodc.m4, m4/dotprodl.m4,\n+\tm4/eoshift1.m4, m4/eoshift3.m4, m4/iforeach.m4, m4/ifunction.m4,\n+\tm4/in_pack.m4, m4/in_unpack.m4, m4/iparm.m4, m4/matmul.m4,\n+\tm4/matmull.m4, m4/maxloc0.m4, m4/maxloc1.m4, m4/maxval.m4,\n+\tm4/minloc0.m4, m4/minloc1.m4, m4/minval.m4, m4/reshape.m4,\n+\tm4/shape.m4, m4/specific.m4, m4/specific2.m4, m4/transpose.m4):\n+\tUpdate to use new iparm.m4.\n+\t* generated/*.c: Regenerate.\n+\n+2004-05-18  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/15235\n+\t* gfortran.h (offset_t): Rename to ...\n+\t(gfc_offset): ... this.\n+\t* io/backspace.c (formatted_backspace, unformatted_backspace),\n+\tio/io.h (stream, gfc_unit, global_t, file_length, file_position),\n+\ttransfer.c (us_read, us_write, next_record_r, next_record_w),\n+\tio/unit.c (init_units), unix.c (unix_stream, fd_alloc,\n+\tfd_alloc_r_at, fd_alloc_w_at, fd_seek, mmap_alloc,\n+\tmmap_alloc_r_at, mmap_alloc_w_at, mmap_seek, mem_alloc_r_at,\n+\tmem_alloc_w_at, mem_seek, file_length, file_position): Replace all\n+\toccurences of offset_t by gfc_offset.\n+\n+2004-05-16  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/format.c (write_real): Don't include padding in format.\n+\n+2004-05-16  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/format.c (format_lex): Make c an int.\n+\n+2004-05-16  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n+\tPaul Brook  <paul@codesourcery.com>\n+\n+\t* io/write.c (write_logical): Don't print extra blank.\n+\t(write_integer): Base field width on kind.\n+\t(list_formatted_write): Output initial blank.\n+\n+2004-05-16  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n+\n+\t* io/io.h (flush): Add prototype.\n+\t* io/transfer.c (finalize_transfer): Flush partial records.\n+\t* io/unix.c (flush): New function.\n+\n+2004-05-15  Tobias Schlueter <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/15234\n+\t* io/io.h (unit_t): Rename to ...\n+\t(gfc_unit) ... this.\n+\t(unit_root, current_unit, find_file, find_unit, get_unit): Now\n+\tof type gfc_unit.\n+\t(delete_file, insert_unit, close_unit): Argument now of type\n+\tgfc_unit.\n+\t* backspace.c (st_backspace), close.c (st_close), endfile.c\n+\t(st_endfile), inquire.c (inquire_via_unit, st_inquire), open.c\n+\t(test_endfile, edit_modes, new_unit, already_open, st_open),\n+\trewind.c (st_rewind), transfer.c (current_unit), unit.c\n+\t(internal_unit, unit_cache, rotate_left, rotate_right, insert,\n+\tinsert_unit, delete_root, delete_treap, delete_unit, find_unit,\n+\tget_unit, init_units, close_unit), unix.c (find_file0,\n+\tfind_file, delete_file): Replace all occurences of unit_t by\n+\tgfc_unit.\n+\n+2004-05-15  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/15311\n+\t* io/write.c (write_a): right justify A edit output.\n+\n+2004-05-14  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/15149\n+\t* libgfortan.h,intrinsics/random.c: Made random_seed visible.\n+\t* runtime/main.c(init): Call random_seed as part of MAIN init.\n+\n+2004-05-13  Tobias Schlter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* io/format.c: (parse_format_list): No comma is required after\n+\tP descriptor.\n+\n+2004-05-13  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/15204\n+\t* io/intrinsic/string_intrinsics.c (adjustr): rework logic.\n+\n+2004-05-06  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\t    Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR libfortran/15234\n+\t* libgfortran.h: Include <inttypes.h> if available.\n+\n+2004-05-03  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* io/unix.c (MAP_FAILED): Define if missing.\n+\t(mmap_alloc): Cast MAP_FAILED to char *.\n+\t(mmap_open): Likewise.\n+\n+2004-04-26  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* generated/_abs_i8.f90: New file.\n+\t* generated/_abs_c4.f90: New file.\n+\t* generated/_abs_c8.f90: New file.\n+\t* Makefile.am: Add them.\n+\t* Makefile.in: Regenerate.\n+`\n+2004-04-26  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/14056\n+\t* generated/_abs_i4.f90: New file.\n+\t* Makefile.am: Add it.\n+\t* Makefile.in: Regenerate.\n+\n+2004-04-25  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/14942\n+\t* io/list_read.c(list_formatted_read): finish consuming the\n+\tspaces and seperators at eoln to get ready for next item.\n+\n+2004-04-23  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/15113\n+\t* io/read.c(read_a): Handle field width > destination and no field width.\n+\n+2004-04-22  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/14906\n+\t* io/format.c (format_item): gracefully handle a ')'\n+\twhen it is the first character encountered in the string.\n+\n+2004-04-11  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/14904\n+\t* io/transfer.c (next_record): Update last_record when\n+\tmore than one record is written to a direct access file\n+\twith one write statement.\n+\n+2004-04-11  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/14901\n+\t* io/transfer.c (next_record_w) : No '\\n' if internal.\n+\t* io/unix.c (empty_internal_buffer) : Init to spaces, not '\\n'.\n+\n+2004-04-11  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* io.h (ioparm): Interface from FE is 32 bit, irregardless of offset_t.\n+\tWill need to change this later to support direct access files > 2gb.\n+\n+2004-04-03  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/14762\n+\t* io/transfer.c (next_record_r) : Skip to next record.\n+\n+2004-04-03  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/14836\n+\t* io/transfer.c (next_record): Update last_record for DIRECT\n+\n+2004-04-03  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/14837\n+\t* io/unix.c (find_file0): Use fd field of struct\n+\n+2004-04-03  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR 14831\n+\t* io/inquire.c (inquire_via_unit): Changed return string for\n+\tBLANK=NULL. Use correct variable for ACTION.\n+\n+2004-04-01  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR 14746\n+\t* io/read.c (read_f): Allow a decimal without a leading digit.\n+\t* io/write.c (output_float): remove a leading '0' to keep from\n+\toverflowing the field (F edit descriptor).\n+\n+2004-04-01  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR gfortran/14565\n+\t* io/open.c (new_unit),\n+\t* io/io.h : new_unit is now visible\n+\t* io/transfer.c (data_transfer_init): open unit if no OPEN statement.\n+\t* io/transfer.c (data_transfer_init): remove compile warnings.\n+\t* io/rewind.c (st_rewind): ftruncate if writing.\n+\n+2004-03-24  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* write.c (write_l): Use extract_int for 'L' edit descriptor.\n+\n+2004-03-24  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR 13919\n+\t* io/io.h (global_t):\n+\t* io/list_read.c (next_char,list_formatted_read,ist_formatted_read):\n+\t  Move eof_jmp to a global structure.\n+\t* io/transfer.c(finalize_transfer) : Set up eof_jump for callers.\n+\n+2004-03-24  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* m4/cexp.m4 (csqrt): Actually use the passed value.\n+\t* generated/exp_c?.c: Regenerate.\n+\n+2004-03-24  Bud Davis  <bdavis9659@comcast.net>\n+\n+\tPR 12921\n+\t* io.h, transfer.c, open.c : recl_in changed from ptr to variable.\n+\t* open.c (new_unit): Moved test for positioned direct access error.\n+\t(init_units): Corrected calculation of max records.\n+\n+2004-02-06  Feng Wang  <fengwang@nudt.edu.cn>\n+\n+\t* Makefile.am: Add m4/dotprodc.m4. And fix spelling.\n+\t* Makefile.in: Regenerate.\n+\t* m4/dotprodc.m4: New file. Implement complex dot_product.\n+\t* m4/dotprod.m4: Delete the complex implementation.\n+\t* generated/dotprod_*: Update.\n+\n+2004-02-07  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* transfer.c (write_constant_string): Do not delete H's in hollerith\n+\tformats.\n+\n+2004-01-05  Andrew Pinski  <apinski@apple.com>\n+\n+\t* configure.in: Check for csin in -lmx also.\n+\t* configure: Regenerate.\n+\n+2004-01-01  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/list_read.c (find_nml_node): Make static.\n+\t(match_namelist_name): Ditto.\n+\t* io/read.c (convert_precision_real): Make static, fix spelling.\n+\t* io/transfer.c (extract_real): Remove unused prototype.\n+\t(st_set_nml_var): Make static.\n+\t* io/write.c (extract_real): Make static."}, {"sha": "56390fa5a6533d763e89e453695c34e055f670c2", "filename": "libgfortran/ChangeLog-2005", "status": "added", "additions": 2915, "deletions": 0, "changes": 2915, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1d592bed30e345d3dae465dca7aaa96f5addea5/libgfortran%2FChangeLog-2005", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1d592bed30e345d3dae465dca7aaa96f5addea5/libgfortran%2FChangeLog-2005", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog-2005?ref=f1d592bed30e345d3dae465dca7aaa96f5addea5"}]}