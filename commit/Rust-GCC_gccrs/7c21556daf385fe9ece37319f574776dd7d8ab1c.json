{"sha": "7c21556daf385fe9ece37319f574776dd7d8ab1c", "node_id": "C_kwDOANBUbNoAKDdjMjE1NTZkYWYzODVmZTllY2UzNzMxOWY1NzQ3NzZkZDdkOGFiMWM", "commit": {"author": {"name": "Thomas W Rodgers", "email": "trodgers@redhat.com", "date": "2022-04-22T22:46:19Z"}, "committer": {"name": "Thomas W Rodgers", "email": "trodgers@redhat.com", "date": "2022-04-22T22:53:41Z"}, "message": "libstdc++: Make atomic notify_one and notify_all non-const\n\n<recording this here for future reference>\nPR102994 \"atomics: std::atomic<ptr>::wait is not marked const\" raises the\nissue that the current libstdc++ implementation marks the notify members\nconst, the implementation strategy used by libstdc++, as well as libc++\nand the Microsoft STL, do not require the atomic to be mutable (it is hard\nto conceive of a desirable implementation approach that would require it).\nThe original paper proposing the wait/notify functionality for atomics\n(p1185) also had these members marked const for the first three revisions,\nbut that was changed without explanation in r3 and subsequent revisions of\nthe paper.\n\nAfter raising the issue to the authors of p1185 and the author of the\nlibc++ implementation, the consensus seems to be \"meh, it's harmless\" so\nthere seems little appetite for an LWG issue to revisit the subject.\n\nThis patch changes the libstdc++ implementation to be in agreement with\nthe standard by removing const from those notify_one/notify_all members.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/102994\n\t* include/bits/atomic_base.h (atomic_flag::notify_one,\n\tnotify_all): Remove const qualification.\n\t(__atomic_base::notify_one, notify_all): Likewise.\n\t* include/std/atomic (atomic<bool>::notify_one, notify_all):\n\tLikewise.\n\t(atomic::notify_one, notify_all): Likewise.\n\t(atomic<T*>::notify_one, notify_all): Likewise.\n\t(atomic_notify_one, atomic_notify_all): Likewise.\n\t* testsuite/29_atomics/atomic/wait_notify/102994.cc: Adjust test\n\tto account for change in notify_one/notify_all signature.", "tree": {"sha": "969c18b6a412d925b48d3bf17f58ce4dac32ca9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/969c18b6a412d925b48d3bf17f58ce4dac32ca9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c21556daf385fe9ece37319f574776dd7d8ab1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c21556daf385fe9ece37319f574776dd7d8ab1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c21556daf385fe9ece37319f574776dd7d8ab1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c21556daf385fe9ece37319f574776dd7d8ab1c/comments", "author": {"login": "rodgert", "id": 120839, "node_id": "MDQ6VXNlcjEyMDgzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/120839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodgert", "html_url": "https://github.com/rodgert", "followers_url": "https://api.github.com/users/rodgert/followers", "following_url": "https://api.github.com/users/rodgert/following{/other_user}", "gists_url": "https://api.github.com/users/rodgert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodgert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodgert/subscriptions", "organizations_url": "https://api.github.com/users/rodgert/orgs", "repos_url": "https://api.github.com/users/rodgert/repos", "events_url": "https://api.github.com/users/rodgert/events{/privacy}", "received_events_url": "https://api.github.com/users/rodgert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rodgert", "id": 120839, "node_id": "MDQ6VXNlcjEyMDgzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/120839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodgert", "html_url": "https://github.com/rodgert", "followers_url": "https://api.github.com/users/rodgert/followers", "following_url": "https://api.github.com/users/rodgert/following{/other_user}", "gists_url": "https://api.github.com/users/rodgert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodgert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodgert/subscriptions", "organizations_url": "https://api.github.com/users/rodgert/orgs", "repos_url": "https://api.github.com/users/rodgert/repos", "events_url": "https://api.github.com/users/rodgert/events{/privacy}", "received_events_url": "https://api.github.com/users/rodgert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7964ab6c364c410c34efe7ca2eba797d36525349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7964ab6c364c410c34efe7ca2eba797d36525349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7964ab6c364c410c34efe7ca2eba797d36525349"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "5cf217dbf28ac9ec151c79a4879df7d763dc63cc", "filename": "libstdc++-v3/include/bits/atomic_base.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c21556daf385fe9ece37319f574776dd7d8ab1c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c21556daf385fe9ece37319f574776dd7d8ab1c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h?ref=7c21556daf385fe9ece37319f574776dd7d8ab1c", "patch": "@@ -252,13 +252,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     // TODO add const volatile overload\n \n     _GLIBCXX_ALWAYS_INLINE void\n-    notify_one() const noexcept\n+    notify_one() noexcept\n     { std::__atomic_notify_address(&_M_i, false); }\n \n     // TODO add const volatile overload\n \n     _GLIBCXX_ALWAYS_INLINE void\n-    notify_all() const noexcept\n+    notify_all() noexcept\n     { std::__atomic_notify_address(&_M_i, true); }\n \n     // TODO add const volatile overload\n@@ -600,13 +600,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // TODO add const volatile overload\n \n       _GLIBCXX_ALWAYS_INLINE void\n-      notify_one() const noexcept\n+      notify_one() noexcept\n       { std::__atomic_notify_address(&_M_i, false); }\n \n       // TODO add const volatile overload\n \n       _GLIBCXX_ALWAYS_INLINE void\n-      notify_all() const noexcept\n+      notify_all() noexcept\n       { std::__atomic_notify_address(&_M_i, true); }\n \n       // TODO add const volatile overload"}, {"sha": "d819b6bf41ef306337f4e969cb18bf9fb7174b3c", "filename": "libstdc++-v3/include/std/atomic", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c21556daf385fe9ece37319f574776dd7d8ab1c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c21556daf385fe9ece37319f574776dd7d8ab1c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic?ref=7c21556daf385fe9ece37319f574776dd7d8ab1c", "patch": "@@ -172,11 +172,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     // TODO add const volatile overload\n \n     void\n-    notify_one() const noexcept\n+    notify_one() noexcept\n     { _M_base.notify_one(); }\n \n     void\n-    notify_all() const noexcept\n+    notify_all() noexcept\n     { _M_base.notify_all(); }\n #endif // __cpp_lib_atomic_wait\n   };\n@@ -399,11 +399,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     // TODO add const volatile overload\n \n     void\n-    notify_one() const noexcept\n+    notify_one() noexcept\n     { std::__atomic_notify_address(&_M_i, false); }\n \n     void\n-    notify_all() const noexcept\n+    notify_all() noexcept\n     { std::__atomic_notify_address(&_M_i, true); }\n #endif // __cpp_lib_atomic_wait \n \n@@ -654,11 +654,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     // TODO add const volatile overload\n \n     void\n-    notify_one() const noexcept\n+    notify_one() noexcept\n     { _M_b.notify_one(); }\n \n     void\n-    notify_all() const noexcept\n+    notify_all() noexcept\n     { _M_b.notify_all(); }\n #endif // __cpp_lib_atomic_wait\n \n@@ -1434,12 +1434,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<typename _Tp>\n     inline void\n-    atomic_notify_one(const atomic<_Tp>* __a) noexcept\n+    atomic_notify_one(atomic<_Tp>* __a) noexcept\n     { __a->notify_one(); }\n \n   template<typename _Tp>\n     inline void\n-    atomic_notify_all(const atomic<_Tp>* __a) noexcept\n+    atomic_notify_all(atomic<_Tp>* __a) noexcept\n     { __a->notify_all(); }\n #endif // __cpp_lib_atomic_wait\n "}, {"sha": "f572ce7ef11cc275effe52a8dd41859c7fd5a584", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/wait_notify/102994.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c21556daf385fe9ece37319f574776dd7d8ab1c/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fwait_notify%2F102994.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c21556daf385fe9ece37319f574776dd7d8ab1c/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fwait_notify%2F102994.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fwait_notify%2F102994.cc?ref=7c21556daf385fe9ece37319f574776dd7d8ab1c", "patch": "@@ -5,13 +5,13 @@\n #include <atomic>\n \n void\n-test1(const std::atomic<char*>& a, char* p)\n+test1(std::atomic<char*>& a, char* p)\n {\n   a.wait(p);\n }\n \n void\n-test2(const std::atomic<int>* a, int v)\n+test2(std::atomic<int>* a, int v)\n {\n   std::atomic_wait(a, v);\n   std::atomic_notify_one(a);"}]}