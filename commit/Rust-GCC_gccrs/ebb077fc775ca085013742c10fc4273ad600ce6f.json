{"sha": "ebb077fc775ca085013742c10fc4273ad600ce6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJiMDc3ZmM3NzVjYTA4NTAxMzc0MmMxMGZjNDI3M2FkNjAwY2U2Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-09-14T16:19:59Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-09-14T16:19:59Z"}, "message": "re PR c++/50391 ([C++0x] ICE on invalid code, pair with incomplete type)\n\n/cp\n2011-09-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50391\n\t* pt.c (regenerate_decl_from_template): Don't pass an error_mark_node\n\tto build_exception_variant.\n\n/testsuite\n2011-09-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50391\n\t* g++.dg/cpp0x/noexcept15.C: New.\n\nFrom-SVN: r178857", "tree": {"sha": "5cd44a33944cf17c50b93a41a53014daa9bc60b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cd44a33944cf17c50b93a41a53014daa9bc60b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebb077fc775ca085013742c10fc4273ad600ce6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb077fc775ca085013742c10fc4273ad600ce6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebb077fc775ca085013742c10fc4273ad600ce6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb077fc775ca085013742c10fc4273ad600ce6f/comments", "author": null, "committer": null, "parents": [{"sha": "5699cf3daddec68449397d03038e5afd51c0d7e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5699cf3daddec68449397d03038e5afd51c0d7e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5699cf3daddec68449397d03038e5afd51c0d7e3"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "8b15ca663c98f690355f5c189b49c3168b068f99", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebb077fc775ca085013742c10fc4273ad600ce6f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebb077fc775ca085013742c10fc4273ad600ce6f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ebb077fc775ca085013742c10fc4273ad600ce6f", "patch": "@@ -1,3 +1,9 @@\n+2011-09-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50391\n+\t* pt.c (regenerate_decl_from_template): Don't pass an error_mark_node\n+\tto build_exception_variant.\n+\n 2011-09-13  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/48320"}, {"sha": "ee33daf1fb9d578982745e9ac5d61ac426b9276d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebb077fc775ca085013742c10fc4273ad600ce6f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebb077fc775ca085013742c10fc4273ad600ce6f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ebb077fc775ca085013742c10fc4273ad600ce6f", "patch": "@@ -17729,7 +17729,7 @@ regenerate_decl_from_template (tree decl, tree tmpl)\n       specs = tsubst_exception_specification (TREE_TYPE (code_pattern),\n \t\t\t\t\t      args, tf_error, NULL_TREE,\n \t\t\t\t\t      /*defer_ok*/false);\n-      if (specs)\n+      if (specs && specs != error_mark_node)\n \tTREE_TYPE (decl) = build_exception_variant (TREE_TYPE (decl),\n \t\t\t\t\t\t    specs);\n "}, {"sha": "28d1102b18d8c7ff6660778f5198bc762fc9e1e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebb077fc775ca085013742c10fc4273ad600ce6f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebb077fc775ca085013742c10fc4273ad600ce6f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ebb077fc775ca085013742c10fc4273ad600ce6f", "patch": "@@ -1,3 +1,8 @@\n+2011-09-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50391\n+\t* g++.dg/cpp0x/noexcept15.C: New.\n+\n 2011-09-14  Tom de Vries  <tom@codesourcery.com>\n \n \tPR middle-end/50251"}, {"sha": "5e8c40c2774a212c2062adcfc17c9f737d2514f0", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept15.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebb077fc775ca085013742c10fc4273ad600ce6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebb077fc775ca085013742c10fc4273ad600ce6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept15.C?ref=ebb077fc775ca085013742c10fc4273ad600ce6f", "patch": "@@ -0,0 +1,34 @@\n+// PR c++/50391\n+// { dg-options -std=c++0x }\n+\n+#include <type_traits>\n+\n+template<class Tp>\n+  struct single\n+  {\n+    Tp elem;  // { dg-error \"incomplete type\" }\n+\n+    constexpr single(const Tp& e)\n+    : elem(e) { }   // { dg-error \"invalid field\" }\n+\n+    single(single&& s) // { dg-error \"not a member\" }\n+    noexcept(std::is_nothrow_move_constructible<Tp>::value) \n+    : elem(s.elem) { } // { dg-error \"invalid field|no member\" }\n+  };\n+\n+template<class Tp>\n+  constexpr single<typename std::decay<Tp>::type>\n+  make_single(Tp&& x)\n+  {\n+    return single<typename std::decay<Tp>::type>(x);\n+  }\n+\n+class Blob;  // { dg-error \"forward declaration\" }\n+\n+void\n+foo(Blob *b)\n+{\n+  make_single(*b);\n+}\n+\n+// { dg-prune-output \"include\" }"}]}