{"sha": "e3e2cdd182e890304a87adde7a107ca2220b1e82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNlMmNkZDE4MmU4OTAzMDRhODdhZGRlN2ExMDdjYTIyMjBiMWU4Mg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-02-04T01:49:41Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-02-04T01:49:41Z"}, "message": "re PR fortran/42901 (reading array of structures from namelist fails)\n\n2010-02-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/42901\n\t* io/list_read.c (nml_get_obj_data): Add new qualifier flag, clean up\n\tcode, and adjust logic to set namelist info pointer correctly for array\n\tqualifiers of derived type components.\n\nFrom-SVN: r156487", "tree": {"sha": "7c8261f1179c9d5327450575d57efb332c47f520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c8261f1179c9d5327450575d57efb332c47f520"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3e2cdd182e890304a87adde7a107ca2220b1e82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3e2cdd182e890304a87adde7a107ca2220b1e82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3e2cdd182e890304a87adde7a107ca2220b1e82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3e2cdd182e890304a87adde7a107ca2220b1e82/comments", "author": null, "committer": null, "parents": [{"sha": "264c5d9a0f1a24e88f5678cc33a8bb3ccb08f774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264c5d9a0f1a24e88f5678cc33a8bb3ccb08f774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264c5d9a0f1a24e88f5678cc33a8bb3ccb08f774"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "c77b018e8dd4486e8ae100d13a190a59b67cd01b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3e2cdd182e890304a87adde7a107ca2220b1e82/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3e2cdd182e890304a87adde7a107ca2220b1e82/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e3e2cdd182e890304a87adde7a107ca2220b1e82", "patch": "@@ -1,3 +1,10 @@\n+2010-02-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/42901\n+\t* io/list_read.c (nml_get_obj_data): Add new qualifier flag, clean up\n+\tcode, and adjust logic to set namelist info pointer correctly for array\n+\tqualifiers of derived type components.\n+\n 2010-01-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/42742"}, {"sha": "e918b30e697f295b47864d9758298175fde9dca4", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 23, "deletions": 15, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3e2cdd182e890304a87adde7a107ca2220b1e82/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3e2cdd182e890304a87adde7a107ca2220b1e82/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=e3e2cdd182e890304a87adde7a107ca2220b1e82", "patch": "@@ -2566,7 +2566,7 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n   namelist_info * first_nl = NULL;\n   namelist_info * root_nl = NULL;\n   int dim, parsed_rank;\n-  int component_flag;\n+  int component_flag, qualifier_flag;\n   index_type clow, chigh;\n   int non_zero_rank_count;\n \n@@ -2615,11 +2615,12 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n       break;\n     }\n \n-  /* Untouch all nodes of the namelist and reset the flag that is set for\n+  /* Untouch all nodes of the namelist and reset the flags that are set for\n      derived type components.  */\n \n   nml_untouch_nodes (dtp);\n   component_flag = 0;\n+  qualifier_flag = 0;\n   non_zero_rank_count = 0;\n \n   /* Get the object name - should '!' and '\\n' be permitted separators?  */\n@@ -2701,10 +2702,11 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n \t\t    \" for namelist variable %s\", nl->var_name);\n \t  goto nml_err_ret;\n \t}\n-\n       if (parsed_rank > 0)\n \tnon_zero_rank_count++;\n \n+      qualifier_flag = 1;\n+\n       c = next_char (dtp);\n       unget_char (dtp, c);\n     }\n@@ -2729,6 +2731,7 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n \n       root_nl = nl;\n       component_flag = 1;\n+\n       c = next_char (dtp);\n       goto get_name;\n     }\n@@ -2769,15 +2772,6 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n       unget_char (dtp, c);\n     }\n \n-  /* If a derived type touch its components and restore the root\n-     namelist_info if we have parsed a qualified derived type\n-     component.  */\n-\n-  if (nl->type == GFC_DTYPE_DERIVED)\n-    nml_touch_nodes (nl);\n-  if (component_flag && nl->var_rank > 0 && nl->next)\n-    nl = first_nl;\n-\n   /* Make sure no extraneous qualifiers are there.  */\n \n   if (c == '(')\n@@ -2822,10 +2816,24 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n \t\tnl->var_name);\n       goto nml_err_ret;\n     }\n+  /* If a derived type, touch its components and restore the root\n+     namelist_info if we have parsed a qualified derived type\n+     component.  */\n+\n+  if (nl->type == GFC_DTYPE_DERIVED)\n+    nml_touch_nodes (nl);\n+\n+  if (first_nl)\n+    {\n+      if (first_nl->var_rank == 0)\n+\t{\n+\t  if (component_flag && qualifier_flag)\n+\t    nl = first_nl;\n+\t}\n+      else\n+\tnl = first_nl;\n+    }\n \n-  if (first_nl != NULL && first_nl->var_rank > 0)\n-    nl = first_nl;\n-  \n   if (nml_read_obj (dtp, nl, 0, pprev_nl, nml_err_msg, nml_err_msg_size,\n \t\t    clow, chigh) == FAILURE)\n     goto nml_err_ret;"}]}