{"sha": "ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY3ZWQ1ZGY3MmZiMmNmYjZhMWRhYjM4ZTMzNWViNjVlMDJiNjIwNA==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-12-19T19:10:26Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-12-19T19:10:26Z"}, "message": "In libobjc/: 2010-12-19 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn libobjc/:\n2010-12-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\tPR libobjc/47012\n\t* accessors.m (objc_getProperty): If not atomic, do not\n\tretain/autorelease the returned value. (Problem reported by\n\nFrom-SVN: r168070", "tree": {"sha": "63711b581c7f71ba5f764a932841c3f7a401e022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63711b581c7f71ba5f764a932841c3f7a401e022"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6f468984d82a1d514b410ffc4d06efdb47a1e526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f468984d82a1d514b410ffc4d06efdb47a1e526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f468984d82a1d514b410ffc4d06efdb47a1e526"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "55f35dc39892210ff3ab67db7401572ef95b2bc1", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204", "patch": "@@ -1,3 +1,9 @@\n+2010-12-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR libobjc/47012\n+\t* accessors.m (objc_getProperty): If not atomic, do not\n+\tretain/autorelease the returned value. (Problem reported by\n+\n 2010-12-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-private/runtime.h (__objc_selector_max_index,"}, {"sha": "a47903a6c87bd31c8dca27307e8f91791371ec71", "filename": "libobjc/accessors.m", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204/libobjc%2Faccessors.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204/libobjc%2Faccessors.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Faccessors.m?ref=ef7ed5df72fb2cfb6a1dab38e335eb65e02b6204", "patch": "@@ -106,8 +106,18 @@ - (id) retain;\n     {\n       id *pointer_to_ivar = (id *)((char *)self + offset);\n \n+\n       if (is_atomic == NO)\n-\treturn AUTORELEASE (RETAIN (*pointer_to_ivar));\n+\t{\n+\t  /* Note that in this case, we do not RETAIN/AUTORELEASE the\n+\t     returned value.  The programmer should do it if it is\n+\t     needed.  Since access is non-atomic, other threads can be\n+\t     ignored and the caller has full control of what happens\n+\t     to the object and whether it needs to be RETAINed or not,\n+\t     so it makes sense to leave the decision to him/her.  This\n+\t     is also what the Apple/NeXT runtime does.  */\n+\t  return *pointer_to_ivar;\n+\t}\n       else\n \t{\n \t  objc_mutex_t lock = accessors_locks[ACCESSORS_HASH (pointer_to_ivar)];"}]}