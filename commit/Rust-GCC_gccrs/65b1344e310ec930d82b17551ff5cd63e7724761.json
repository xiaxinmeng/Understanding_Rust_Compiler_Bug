{"sha": "65b1344e310ec930d82b17551ff5cd63e7724761", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjViMTM0NGUzMTBlYzkzMGQ4MmIxNzU1MWZmNWNkNjNlNzcyNDc2MQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2005-12-13T05:05:29Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-12-13T05:05:29Z"}, "message": "980523-1.c, [...]: Don't use powerpc-*-* or powerpc64-*-* in target selection strings.\n\n\t* gcc.dg/980523-1.c, gcc.dg/980526-1.c, gcc.dg/20020103-1.c,\n\tgcc.dg/20040625-1.c, gcc.dg/asm-b.c, gcc.dg/iftrap-1.c,\n\tgcc.dg/iftrap-2.c, gcc.dg/simd-3.c, gcc.dg/switch-1.c,\n\tgcc.dg/tree-ssa/bool-1.c, gcc.dg/tree-ssa/bool-2.c,\n\tgcc.dg/tree-ssa/bool-4.c, gcc.dg/tree-ssa/bool-5.c,\n\tgcc.dg/tree-ssa/bool-6.c, gcc.dg/tree-ssa/bool-8.c,\n\tgcc.dg/tree-ssa/bool-9.c, gcc.target/powerpc/980827-1.c,\n\tgcc.target/powerpc/20040622-1.c, gcc.target/powerpc/20050603-3.c,\n\tgcc.target/powerpc/20050830-1.c, gcc.target/powerpc/altivec-6.c,\n\tgcc.target/powerpc/altivec-14.c, gcc.target/powerpc/altivec-22.c,\n\tgcc.target/powerpc/doloop-1.c, gcc.target/powerpc/ppc-and-1.c,\n\tgcc.target/powerpc/ppc-bitfield1.c, gcc.target/powerpc/ppc-compare-1.c,\n\tgcc.target/powerpc/ppc-mov-1.c, gcc.target/powerpc/ppc-sdata-1.c,\n\tgcc.target/powerpc/ppc-sdata-2.c,\n\tgcc.target/powerpc/ppc-stackalign-1.c,\n\tgcc.target/powerpc/ppc64-abi-1.c, gcc.target/powerpc/ppc64-abi-2.c,\n\tgcc.target/powerpc/ppc64-abi-3.c, gcc.target/powerpc/ppc64-toc.c,\n\tgcc.target/powerpc/pr18096-1.c, gcc.target/powerpc/rs6000-ldouble-1.c,\n\tgcc.target/powerpc/rs6000-ldouble-2.c,\n\tgcc.target/powerpc/rs6000-power2-1.c,\n\tgcc.target/powerpc/rs6000-power2-2.c: Don't use powerpc-*-* or\n\tpowerpc64-*-* in target selection strings.  Instead use powerpc*-*-*\n\tand ilp32 or lp64 as appropriate.  Merge dg-require-effective-target\n\toption into target selector.\n\t* gcc.dg/20020919-1.c: Compile for powerpc*-*-*.  Handle powerpc64.\n\t* gcc.misc-tests/linkage.exp: Set native_cflags for powerpc*-*-linux*.\n\nFrom-SVN: r108457", "tree": {"sha": "97e378d8cfdaacf7b81dfbc2d8d70a3afb95cab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97e378d8cfdaacf7b81dfbc2d8d70a3afb95cab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65b1344e310ec930d82b17551ff5cd63e7724761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b1344e310ec930d82b17551ff5cd63e7724761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65b1344e310ec930d82b17551ff5cd63e7724761", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b1344e310ec930d82b17551ff5cd63e7724761/comments", "author": null, "committer": null, "parents": [{"sha": "dbff657a3794268ca090d0df941e9c9631bf0681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbff657a3794268ca090d0df941e9c9631bf0681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbff657a3794268ca090d0df941e9c9631bf0681"}], "stats": {"total": 128, "additions": 77, "deletions": 51}, "files": [{"sha": "e8b94ae9adbd78604031316b47479e3b8e3de527", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,3 +1,32 @@\n+2005-12-13  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* gcc.dg/980523-1.c, gcc.dg/980526-1.c, gcc.dg/20020103-1.c,\n+\tgcc.dg/20040625-1.c, gcc.dg/asm-b.c, gcc.dg/iftrap-1.c,\n+\tgcc.dg/iftrap-2.c, gcc.dg/simd-3.c, gcc.dg/switch-1.c,\n+\tgcc.dg/tree-ssa/bool-1.c, gcc.dg/tree-ssa/bool-2.c,\n+\tgcc.dg/tree-ssa/bool-4.c, gcc.dg/tree-ssa/bool-5.c,\n+\tgcc.dg/tree-ssa/bool-6.c, gcc.dg/tree-ssa/bool-8.c,\n+\tgcc.dg/tree-ssa/bool-9.c, gcc.target/powerpc/980827-1.c,\n+\tgcc.target/powerpc/20040622-1.c, gcc.target/powerpc/20050603-3.c,\n+\tgcc.target/powerpc/20050830-1.c, gcc.target/powerpc/altivec-6.c,\n+\tgcc.target/powerpc/altivec-14.c, gcc.target/powerpc/altivec-22.c,\n+\tgcc.target/powerpc/doloop-1.c, gcc.target/powerpc/ppc-and-1.c,\n+\tgcc.target/powerpc/ppc-bitfield1.c, gcc.target/powerpc/ppc-compare-1.c,\n+\tgcc.target/powerpc/ppc-mov-1.c, gcc.target/powerpc/ppc-sdata-1.c,\n+\tgcc.target/powerpc/ppc-sdata-2.c,\n+\tgcc.target/powerpc/ppc-stackalign-1.c,\n+\tgcc.target/powerpc/ppc64-abi-1.c, gcc.target/powerpc/ppc64-abi-2.c,\n+\tgcc.target/powerpc/ppc64-abi-3.c, gcc.target/powerpc/ppc64-toc.c,\n+\tgcc.target/powerpc/pr18096-1.c, gcc.target/powerpc/rs6000-ldouble-1.c,\n+\tgcc.target/powerpc/rs6000-ldouble-2.c,\n+\tgcc.target/powerpc/rs6000-power2-1.c,\n+\tgcc.target/powerpc/rs6000-power2-2.c: Don't use powerpc-*-* or\n+\tpowerpc64-*-* in target selection strings.  Instead use powerpc*-*-*\n+\tand ilp32 or lp64 as appropriate.  Merge dg-require-effective-target\n+\toption into target selector.\n+\t* gcc.dg/20020919-1.c: Compile for powerpc*-*-*.  Handle powerpc64.\n+\t* gcc.misc-tests/linkage.exp: Set native_cflags for powerpc*-*-linux*.\n+\n 2005-12-12  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR objc/25348"}, {"sha": "c0612ae20db36f3753f729fa4b109d6c925d577c", "filename": "gcc/testsuite/gcc.dg/20020103-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2F20020103-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2F20020103-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020103-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,6 +1,6 @@\n /* Verify that constant equivalences get reloaded properly, either by being\n    spilled to the stack, or regenerated, but not dropped to memory.  */\n-/* { dg-do compile { target i?86-*-* powerpc-*-* rs6000-*-* alpha*-*-* x86_64-*-*} } */\n+/* { dg-do compile { target { { i?86-*-* rs6000-*-* alpha*-*-* x86_64-*-* } || { powerpc*-*-* && ilp32 } } } } */\n /* { dg-options \"-O2 -fpic -fno-omit-frame-pointer -fno-asynchronous-unwind-tables\" } */\n /* { dg-final { scan-assembler-not \"LC\\[0-9\\]\" } } */\n "}, {"sha": "1224199407bcb356680d904fa08957e1b0990542", "filename": "gcc/testsuite/gcc.dg/20020919-1.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2F20020919-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2F20020919-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020919-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -8,7 +8,7 @@\n    You must be this tall ---> fit two long longs in asm-declared registers\n    to enter this amusement.  */\n \n-/* { dg-do compile { target alpha-*-* cris-*-* i?86-*-* mmix-*-* powerpc-*-* rs6000-*-* x86_64-*-* } } */\n+/* { dg-do compile { target alpha-*-* cris-*-* i?86-*-* mmix-*-* powerpc*-*-* rs6000-*-* x86_64-*-* } } */\n /* { dg-options \"-O2\" } */\n \n /* Constructed examples; input/output (same register), output, input, and\n@@ -41,8 +41,10 @@\n \t|| defined (__POWERPC__) || defined (PPC) || defined (_IBMR2)\n # define REG1 \"6\"\n # define REG2 \"7\"\n-# define REG3 \"8\"\n-# define REG4 \"9\"\n+# ifndef __powerpc64__\n+#  define REG3 \"8\"\n+#  define REG4 \"9\"\n+# endif\n #elif defined (__x86_64__)\n # define REG1 \"rax\"\n # define REG2 \"rdx\""}, {"sha": "0a576a5b643ac861de94a0faa23eab76e264d393", "filename": "gcc/testsuite/gcc.dg/20040625-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2F20040625-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2F20040625-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040625-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-mminimal-toc\" { target powerpc64-*-* powerpc-ibm-aix* } } */\n+/* { dg-options \"-mminimal-toc\" { target { { powerpc*-*-* && lp64 } || { powerpc-ibm-aix* } } } } */\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "6ca79efff16585ce56c459104b9f100099f1835a", "filename": "gcc/testsuite/gcc.dg/980523-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2F980523-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2F980523-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F980523-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target rs6000-*-linux* powerpc-*-linux*} } */\n+/* { dg-do run { target rs6000-*-linux* powerpc*-*-linux*} } */\n /* { dg-options \"-O2 -fpic\" } */\n \n extern void exit (int);"}, {"sha": "b92f8883dfb08d666659851eb5a8a238a2c0b282", "filename": "gcc/testsuite/gcc.dg/980526-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2F980526-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2F980526-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F980526-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target rs6000-*-linux* powerpc-*-linux* } } */\n+/* { dg-do compile { target rs6000-*-linux* powerpc*-*-linux* } } */\n /* { dg-options \"-O2 -fpic\" } */\n \n int"}, {"sha": "cc3f9665db305a45a311115fddfffe82549948a3", "filename": "gcc/testsuite/gcc.dg/asm-b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-b.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run  { target powerpc-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-do run  { target powerpc*-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O1\" } */\n /* Test to make sure that inline-asm causes the tree optimizers to get the\n    V_MAY_DEFs and clobber memory.  */"}, {"sha": "142782042a52346adaac6f45a60138b6dc02ac70", "filename": "gcc/testsuite/gcc.dg/iftrap-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Fiftrap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Fiftrap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fiftrap-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,6 +1,6 @@\n /* Verify that we optimize to conditional traps.  */\n /* { dg-options \"-O\" } */\n-/* { dg-do compile { target rs6000-*-* powerpc-*-* sparc*-*-* ia64-*-* } } */\n+/* { dg-do compile { target rs6000-*-* powerpc*-*-* sparc*-*-* ia64-*-* } } */\n /* { dg-final { scan-assembler-not \"^\\t(trap|ta|break)\\[ \\t\\]\" } } */\n \n void f1(int p)"}, {"sha": "8c9c0577ca508b472fb431153eefe5b9f68ea469", "filename": "gcc/testsuite/gcc.dg/iftrap-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Fiftrap-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Fiftrap-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fiftrap-2.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,6 +1,6 @@\n /* Verify that we optimize to conditional traps.  */\n /* { dg-options \"-O\" } */\n-/* { dg-do compile { target rs6000-*-* powerpc-*-* sparc*-*-* ia64-*-* } } */\n+/* { dg-do compile { target rs6000-*-* powerpc*-*-* sparc*-*-* ia64-*-* } } */\n /* { dg-final { scan-assembler-not \"^\\t(trap|ta|break)\\[ \\t\\]\" } } */\n \n extern void abort(void);"}, {"sha": "a806633eaeb2380452eb81711d29be0fecfde3b0", "filename": "gcc/testsuite/gcc.dg/simd-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Fsimd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Fsimd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimd-3.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-maltivec\" { target powerpc-*-* } } */\n+/* { dg-options \"-maltivec\" { target powerpc*-*-* } } */\n \n __attribute__ ((vector_size (2))) signed char v1, v2, v3;\n void"}, {"sha": "e4f5ad6285914e2c3ab7290e962f0ed8d11f707f", "filename": "gcc/testsuite/gcc.dg/switch-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target rs6000-*-linux* powerpc-*-linux*} } */\n+/* { dg-do compile { target rs6000-*-linux* powerpc*-*-linux*} } */\n /* { dg-options \"-fpic -O2\" } */\n \n void f (char *s)"}, {"sha": "699f3aba33f91a53ecc4da8379dc6349ab3c4ae3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -14,6 +14,6 @@ int f(_Bool x)\n \n /* There should be no adde for powerpc. Checking if we actually optimizated\n    away the comparision.  */\n-/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc-*-* } } } */\n+/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "2fdd496ba690a89c9167e5074915e44400ed77e1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-2.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -17,6 +17,6 @@ int f(_Bool x)\n \n /* There should be no adde for powerpc. Checking if we actually optimizated\n    away the comparision.  */\n-/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc-*-* } } } */\n+/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "06356f6268980737998db400f5ca021e115b0e95", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-4.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -12,6 +12,6 @@ int f(_Bool x)\n \n /* There should be no adde for powerpc. Checking if we actually optimizated\n    away the comparision.  */\n-/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc-*-* } } } */\n+/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "5ea03878f66824ad593e6e63719e56e08c0cad3c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-5.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -14,6 +14,6 @@ int f(_Bool x)\n \n /* There should be no adde for powerpc. Checking if we actually optimizated\n    away the comparision.  */\n-/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc-*-* } } } */\n+/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "9340397abe9b2dc740d7d6395a91ed514988e961", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-6.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -17,6 +17,6 @@ int f(_Bool x)\n \n /* There should be no adde for powerpc. Checking if we actually optimizated\n    away the comparision.  */\n-/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc-*-* } } } */\n+/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "869f9b8e15fb4f262271d2a912e84c0fe0d789ee", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-8.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -12,6 +12,6 @@ int f(_Bool x)\n \n /* There should be no adde for powerpc. Checking if we actually optimizated\n    away the comparision.  */\n-/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc-*-* } } } */\n+/* { dg-final { scan-assembler-times \"adde\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "59e04178fadc531f1d16b44b6062fff7e00c6451", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bool-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbool-9.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -12,6 +12,6 @@ _Bool f1(_Bool x)\n \n /* There should be no subfe for powerpc. Checking if we actually optimizated\n    away the comparision.  */\n-/* { dg-final { scan-assembler-times \"subfe\" 0 { target powerpc-*-* } } } */\n+/* { dg-final { scan-assembler-times \"subfe\" 0 { target powerpc*-*-* } } } */\n \n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "6617023a46a56283b9a08a6eb36bd7863808fe81", "filename": "gcc/testsuite/gcc.misc-tests/linkage.exp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -66,10 +66,12 @@ if [isnative] then {\n \t    if [ string match \"*ELF-64*\" $file_string ] {\n \t\tset native_cflags \"+DD64\"\n \t    }\n-\t} elseif [istarget \"powerpc64*-*-linux*\"] {\n+\t} elseif [istarget \"powerpc*-*-linux*\"] {\n \t    set file_string [exec file \"linkage-x.o\"]\n \t    if [ string match \"*64-bit*\" $file_string ] {\n \t\tset native_cflags \"-m64\"\n+\t    } elseif [ string match \"*32-bit*\" $file_string ] {\n+\t\tset native_cflags \"-m32\"\n \t    }\n \t}\n "}, {"sha": "c699296d4642cc2e33c272192f32017b28523ed5", "filename": "gcc/testsuite/gcc.target/powerpc/20040622-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20040622-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20040622-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20040622-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,5 @@\n /* { dg-options \"-Os -mlong-double-128\" } */\n-/* { dg-do compile { target rs6000-*-* powerpc-*-* } } */\n+/* { dg-do compile { target { { rs6000-*-* } || { powerpc*-*-* && lp64 } } } } */\n /* Make sure compiler doesn't generate [reg+reg] address mode\n    for long doubles. */\n union arg {"}, {"sha": "0f328e1711faa0c674eb9d97072c876252a928d1", "filename": "gcc/testsuite/gcc.target/powerpc/20050603-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20050603-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20050603-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20050603-3.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target \"powerpc-*-*\" } } */\n+/* { dg-do compile { target { ilp32 } } } */\n /* { dg-options \"-O2\" } */\n struct Q \n {"}, {"sha": "4a8f71a98717f26f93a80c7d2f5eb91dd35abcde", "filename": "gcc/testsuite/gcc.target/powerpc/20050830-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20050830-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20050830-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20050830-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,5 @@\n /* Make sure the doloop optimization is done for this loop. */\n-/* { dg-do compile { target powerpc-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* } } */\n /* { dg-options \"-O2\" } */\n /* { dg-final { scan-assembler \"bdn\" } } */\n extern int a[];"}, {"sha": "5d526d38f0866170c3ec23c2a99f88a92968cc5e", "filename": "gcc/testsuite/gcc.target/powerpc/980827-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F980827-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F980827-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F980827-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target rs6000-*-linux* powerpc-*-linux*} } */\n+/* { dg-do run { target { *-*-linux* && ilp32 } } } */\n /* { dg-options -O2 } */\n \n extern void exit (int);"}, {"sha": "e3ca8845dfb1ab1856470190b03f99c10858714e", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-14.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc-*-* } } */\n+/* { dg-do compile { target { powerpc*-*-* && ilp32 } } } */\n /* { dg-xfail-if \"\" { \"powerpc-*-eabispe*\" \"powerpc-ibm-aix*\" } { \"*\" } { \"\" } } */\n /* { dg-options \"-maltivec\" } */\n "}, {"sha": "310007da40389a4ac573788708e192c86bf73bb6", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-22.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-22.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc-*-* } } */\n+/* { dg-do compile { target { powerpc*-*-* && ilp32 } } } */\n /* { dg-xfail-if \"\" { \"powerpc-*-eabispe*\" \"powerpc-ibm-aix*\" } { \"*\" } { \"\" } } */\n /* { dg-options \"-O3 -maltivec\" } */\n /* { dg-final { scan-assembler-not \"mfcr\" } } */"}, {"sha": "9d31046fa52374c0bebec869be0f55af10403cbd", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-6.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* } } */\n /* { dg-xfail-if \"\" { \"powerpc-ibm-aix*\" } { \"-maltivec\" } { \"\" } } */\n /* { dg-options \"-maltivec -O0 -Wall\" } */\n "}, {"sha": "d4bc454153a1e476b5327a90819835cd969b8f5e", "filename": "gcc/testsuite/gcc.target/powerpc/doloop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdoloop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdoloop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdoloop-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -2,7 +2,7 @@\n    If so, \"bdnz\" will be generated on ppc; if not,\n    you will get \"ble\" or \"blt\" or \"bge\".  */\n \n-/* { dg-do compile { target powerpc-*-* } } */\n+/* { dg-do compile { target powerpc*-*-* } } */\n /* { dg-options \"-O2\" } */\n void foo (int count, char* pca, char* pcb) {\n     int i;"}, {"sha": "8016768745773dbdba7041c22e958da45c918db2", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-and-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-and-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-and-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-and-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target powerpc64-*-* } } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n /* { dg-options \"-O2\" } */\n \n /* { dg-final { scan-assembler \"rlwinm \\[0-9\\]+,\\[0-9\\]+,0,0,30\"  } } */"}, {"sha": "34e5a28e12dacd4b457af5e4d22d56a390cd8565", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-bitfield1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-bitfield1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-bitfield1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-bitfield1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target powerpc64-*-* } } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n /* { dg-options \"-O2\" } */\n \n /* { dg-final { scan-assembler-not \"rlwinm \\[0-9\\]+,\\[0-9\\]+,\\[0-9\\]+,1,31\"  } } */"}, {"sha": "2566423a0ab43e0c4dbb84d22148c524e1300ec5", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-compare-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-compare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-compare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-compare-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target powerpc64-*-* } } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n /* { dg-options \"-O2\" } */\n \n /* { dg-final { scan-assembler-not \"cmpw\" } } */"}, {"sha": "750cf85f08d4b1cd257c9fb0e51d1ea24a0fcb16", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-mov-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-mov-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-mov-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-mov-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target powerpc64-*-* } } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n /* { dg-options \"-O2\" } */\n \n /* { dg-final { scan-assembler-not \"fmr \\[0-9\\]+,\\[0-9\\]+\" } }"}, {"sha": "15ccbc25e940b4e450d1549a23c48910f8290349", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-sdata-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc-*-linux* powerpc-*-sysv* powerpc-*-eabi* } } */\n+/* { dg-do compile { target { { powerpc*-*-linux* && ilp32 } || { powerpc-*-sysv* powerpc-*-eabi* } } } } */\n /* { dg-options \"-O2 -fno-common -G 8 -meabi -msdata=eabi\" } */\n /* { dg-final { scan-assembler \"\\\\.section\\[ \\t\\]\\\\.sdata,\" } } */\n /* { dg-final { scan-assembler \"\\\\.section\\[ \\t\\]\\\\.sdata2,\" } } */"}, {"sha": "b8ea9d2adf5583f3fd81e792b370825140e722a6", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-sdata-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-2.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc-*-linux* powerpc-*-sysv* powerpc-*-eabi* } } */\n+/* { dg-do compile { target { { powerpc*-*-linux* && ilp32 } || { powerpc-*-sysv* powerpc-*-eabi* } } } } */\n /* { dg-options \"-O2 -fno-common -G 8 -msdata=sysv\" } */\n /* { dg-final { scan-assembler \"\\\\.section\\[ \\t\\]\\\\.sdata,\" } } */\n /* { dg-final { scan-assembler-not \"\\\\.section\\[ \\t\\]\\\\.sdata2,\" } } */"}, {"sha": "fdced2a93221537ece9cfedb174eeb656cbbdfda", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-stackalign-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-stackalign-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-stackalign-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-stackalign-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target powerpc-*-linux* powerpc-*-sysv* } } */\n+/* { dg-do run { target powerpc*-*-linux* powerpc-*-sysv* } } */\n /* { dg-options {} } */\n \n /* Test stack pointer alignment against variable alloca.  */"}, {"sha": "c2c08a8605cd21bd7c5c94f00d29050ba64a2469", "filename": "gcc/testsuite/gcc.target/powerpc/ppc64-abi-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do run { target powerpc64-*-* } } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do run { target { powerpc*-*-* && lp64 } } } */\n /* { dg-options \"-O2\" } */\n #include <stdarg.h>\n #include <signal.h>"}, {"sha": "937dacb66e367ba7698d0f3e05abb9444a9a7e9f", "filename": "gcc/testsuite/gcc.target/powerpc/ppc64-abi-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-2.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do run { target powerpc64-*-linux* } } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do run { target { powerpc*-*-linux* && lp64 } } } */\n /* { dg-options \"-O2 -fprofile -mprofile-kernel -maltivec -mabi=altivec\" } */\n #include <stdarg.h>\n #include <signal.h>"}, {"sha": "51e636419fb6aa5d2b4def431b718cfff2823da8", "filename": "gcc/testsuite/gcc.target/powerpc/ppc64-abi-3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-3.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target powerpc64-*-linux* } } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { powerpc*-*-linux* && lp64 } } } */\n /* { dg-options \"-Wall\" } */\n /* Testcase to check for ABI compliance of parameter passing\n    for the PowerPC64 ABI.  */"}, {"sha": "21090af235ee83c474440daa04ec6eeb18b2d1aa", "filename": "gcc/testsuite/gcc.target/powerpc/ppc64-toc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-toc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-toc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-toc.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link } */\n-/* { dg-options \"-mminimal-toc\" { target { powerpc64-*-* && lp64 } } } */\n+/* { dg-options \"-mminimal-toc\" { target { powerpc*-*-* && lp64 } } } */\n \n char *strchr (const char *, int);\n "}, {"sha": "5da9705f680fc56779eb64ba1a06bf851c52122b", "filename": "gcc/testsuite/gcc.target/powerpc/pr18096-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr18096-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr18096-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr18096-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/18096  */\n-/* { dg-do compile { target powerpc-*-* } } */\n+/* { dg-do compile { target { powerpc*-*-* && ilp32 } } } */\n /* { dg-options \"-O2\" } */\n \n void f(char*);"}, {"sha": "e8d8bb7c116674805c431bfb030225490e610a14", "filename": "gcc/testsuite/gcc.target/powerpc/rs6000-ldouble-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-ldouble-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-ldouble-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-ldouble-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target powerpc*-*-darwin* powerpc*-*-aix* powerpc64-*-linux rs6000-*-* } } */\n+/* { dg-do run { target { { powerpc*-*-darwin* powerpc*-*-aix* rs6000-*-* } || { powerpc*-*-linux && lp64 } } } } */\n /* { dg-options \"-mlong-double-128\" } */\n \n /* Check that long double values are rounded correctly when being converted"}, {"sha": "eebb94e568f879036e379499272765bff254ca05", "filename": "gcc/testsuite/gcc.target/powerpc/rs6000-ldouble-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-ldouble-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-ldouble-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-ldouble-2.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target powerpc*-*-darwin* powerpc*-*-aix* powerpc64-*-linux rs6000-*-* } } */\n+/* { dg-do run { target { { powerpc*-*-darwin* powerpc*-*-aix* rs6000-*-* } || { powerpc*-*-linux && lp64 } } } } */\n /* { dg-options \"-mlong-double-128\" } */\n \n /* Check that LDBL_EPSILON is right for 'long double'.  */"}, {"sha": "375241ec658c8e5c017f43283cb7a554a11fc9b0", "filename": "gcc/testsuite/gcc.target/powerpc/rs6000-power2-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-power2-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-power2-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-power2-1.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc-*-* rs6000-*-* }  } */\n+/* { dg-do compile { target { ilp32 } } } */\n /* { dg-options \"-O3 -mcpu=power2 -fno-schedule-insns -w -mhard-float\" } */\n /* This used to ICE as the peephole was not checking to see\n    if the register is a floating point one (I think this cannot"}, {"sha": "88a243f59da265c4870eb9ccdb9014acd558c3aa", "filename": "gcc/testsuite/gcc.target/powerpc/rs6000-power2-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-power2-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b1344e310ec930d82b17551ff5cd63e7724761/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-power2-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-power2-2.c?ref=65b1344e310ec930d82b17551ff5cd63e7724761", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target powerpc-*-* rs6000-*-* }  } */\n+/* { dg-do compile { target { ilp32 } } } */\n /* { dg-options \"-O3 -mcpu=power2 -fno-schedule-insns -w -mhard-float\" } */\n /* { dg-final { scan-assembler-not \"lfd\" } } */\n /* { dg-final { scan-assembler-not \"sfd\" } } */"}]}