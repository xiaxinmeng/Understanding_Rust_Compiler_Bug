{"sha": "54f745023276e5025e34b2cc22530c78423a93cb", "node_id": "C_kwDOANBUbNoAKDU0Zjc0NTAyMzI3NmU1MDI1ZTM0YjJjYzIyNTMwYzc4NDIzYTkzY2I", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-07-30T14:15:25Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-02-22T16:53:10Z"}, "message": "Get rid of 'gcc/omp-oacc-neuter-broadcast.cc:oacc_build_component_ref'\n\nClean-up for commit e2a58ed6dc5293602d0d168475109caa81ad0f0d\n\"openacc: Middle-end worker-partitioning support\":\nas of commit 2a3f9f6532bb21d8ab6f16fbe9ee603f6b1405f2\n\"openacc: Shared memory layout optimisation\", we're no longer\nrunning into the vectorizer ICEs for '!ADDR_SPACE_GENERIC_P'.\n\n\tgcc/\n\t* omp-low.cc (omp_build_component_ref): Move function...\n\t* omp-general.cc (omp_build_component_ref): ... here.  Remove\n\t'static'.\n\t* omp-general.h (omp_build_component_ref): Declare function.\n\t* omp-oacc-neuter-broadcast.cc (oacc_build_component_ref): Remove\n\tfunction.\n\t(build_receiver_ref, build_sender_ref): Call\n\t'omp_build_component_ref' instead.", "tree": {"sha": "708bb9790120df12290d3bdff260a4e3dfda8715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/708bb9790120df12290d3bdff260a4e3dfda8715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54f745023276e5025e34b2cc22530c78423a93cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f745023276e5025e34b2cc22530c78423a93cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54f745023276e5025e34b2cc22530c78423a93cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f745023276e5025e34b2cc22530c78423a93cb/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fe9176f410accc767e0abab010aec843b2e7ea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fe9176f410accc767e0abab010aec843b2e7ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fe9176f410accc767e0abab010aec843b2e7ea6"}], "stats": {"total": 57, "additions": 18, "deletions": 39}, "files": [{"sha": "a406c578f331c052d0f9c7cca6c4a5f8f068cfb5", "filename": "gcc/omp-general.cc", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f745023276e5025e34b2cc22530c78423a93cb/gcc%2Fomp-general.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f745023276e5025e34b2cc22530c78423a93cb/gcc%2Fomp-general.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-general.cc?ref=54f745023276e5025e34b2cc22530c78423a93cb", "patch": "@@ -2980,4 +2980,18 @@ oacc_get_ifn_dim_arg (const gimple *stmt)\n   return (int) axis;\n }\n \n+/* Build COMPONENT_REF and set TREE_THIS_VOLATILE and TREE_READONLY on it\n+   as appropriate.  */\n+\n+tree\n+omp_build_component_ref (tree obj, tree field)\n+{\n+  tree ret = build3 (COMPONENT_REF, TREE_TYPE (field), obj, field, NULL);\n+  if (TREE_THIS_VOLATILE (field))\n+    TREE_THIS_VOLATILE (ret) |= 1;\n+  if (TREE_READONLY (field))\n+    TREE_READONLY (ret) |= 1;\n+  return ret;\n+}\n+\n #include \"gt-omp-general.h\""}, {"sha": "7a94831e8f58fa30d6c386d5025d0d2535e07b0e", "filename": "gcc/omp-general.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f745023276e5025e34b2cc22530c78423a93cb/gcc%2Fomp-general.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f745023276e5025e34b2cc22530c78423a93cb/gcc%2Fomp-general.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-general.h?ref=54f745023276e5025e34b2cc22530c78423a93cb", "patch": "@@ -149,4 +149,6 @@ get_openacc_privatization_dump_flags ()\n   return l_dump_flags;\n }\n \n+extern tree omp_build_component_ref (tree obj, tree field);\n+\n #endif /* GCC_OMP_GENERAL_H */"}, {"sha": "2294456b27d4f8f125fba1692fa45a65640eb829", "filename": "gcc/omp-low.cc", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f745023276e5025e34b2cc22530c78423a93cb/gcc%2Fomp-low.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f745023276e5025e34b2cc22530c78423a93cb/gcc%2Fomp-low.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.cc?ref=54f745023276e5025e34b2cc22530c78423a93cb", "patch": "@@ -621,21 +621,6 @@ omp_copy_decl_1 (tree var, omp_context *ctx)\n   return omp_copy_decl_2 (var, DECL_NAME (var), TREE_TYPE (var), ctx);\n }\n \n-/* Build COMPONENT_REF and set TREE_THIS_VOLATILE and TREE_READONLY on it\n-   as appropriate.  */\n-/* See also 'gcc/omp-oacc-neuter-broadcast.cc:oacc_build_component_ref'.  */\n-\n-static tree\n-omp_build_component_ref (tree obj, tree field)\n-{\n-  tree ret = build3 (COMPONENT_REF, TREE_TYPE (field), obj, field, NULL);\n-  if (TREE_THIS_VOLATILE (field))\n-    TREE_THIS_VOLATILE (ret) |= 1;\n-  if (TREE_READONLY (field))\n-    TREE_READONLY (ret) |= 1;\n-  return ret;\n-}\n-\n /* Build tree nodes to access the field for VAR on the receiver side.  */\n \n static tree"}, {"sha": "81e3223a94ca88ea766bb3e0e539c052781ef175", "filename": "gcc/omp-oacc-neuter-broadcast.cc", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f745023276e5025e34b2cc22530c78423a93cb/gcc%2Fomp-oacc-neuter-broadcast.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f745023276e5025e34b2cc22530c78423a93cb/gcc%2Fomp-oacc-neuter-broadcast.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-oacc-neuter-broadcast.cc?ref=54f745023276e5025e34b2cc22530c78423a93cb", "patch": "@@ -937,35 +937,13 @@ worker_single_simple (basic_block from, basic_block to,\n     }\n }\n \n-/* Build COMPONENT_REF and set TREE_THIS_VOLATILE and TREE_READONLY on it\n-   as appropriate.  */\n-/* Adapted from 'gcc/omp-low.cc:omp_build_component_ref'.  */\n-\n-static tree\n-oacc_build_component_ref (tree obj, tree field)\n-{\n-  tree field_type = TREE_TYPE (field);\n-  tree obj_type = TREE_TYPE (obj);\n-  if (!ADDR_SPACE_GENERIC_P (TYPE_ADDR_SPACE (obj_type)))\n-    field_type = build_qualified_type\n-\t\t\t(field_type,\n-\t\t\t KEEP_QUAL_ADDR_SPACE (TYPE_QUALS (obj_type)));\n-\n-  tree ret = build3 (COMPONENT_REF, field_type, obj, field, NULL);\n-  if (TREE_THIS_VOLATILE (field))\n-    TREE_THIS_VOLATILE (ret) |= 1;\n-  if (TREE_READONLY (field))\n-    TREE_READONLY (ret) |= 1;\n-  return ret;\n-}\n-\n static tree\n build_receiver_ref (tree var, tree receiver_decl, field_map_t *fields)\n {\n   tree x = build_simple_mem_ref (receiver_decl);\n   tree field = *fields->get (var);\n   TREE_THIS_NOTRAP (x) = 1;\n-  x = oacc_build_component_ref (x, field);\n+  x = omp_build_component_ref (x, field);\n   return x;\n }\n \n@@ -975,7 +953,7 @@ build_sender_ref (tree var, tree sender_decl, field_map_t *fields)\n   if (POINTER_TYPE_P (TREE_TYPE (sender_decl)))\n     sender_decl = build_simple_mem_ref (sender_decl);\n   tree field = *fields->get (var);\n-  return oacc_build_component_ref (sender_decl, field);\n+  return omp_build_component_ref (sender_decl, field);\n }\n \n static int"}]}