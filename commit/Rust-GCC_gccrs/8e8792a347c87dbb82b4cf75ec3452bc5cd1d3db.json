{"sha": "8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU4NzkyYTM0N2M4N2RiYjgyYjRjZjc1ZWMzNDUyYmM1Y2QxZDNkYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-07-29T07:59:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-07-29T10:34:29Z"}, "message": "tree-optimization/95679 - properly signal changes from propagate_into_phi_args\n\nThis restores a lost setting of something_changed with the\nrecent refactoring of the substitute and fold engine.  The\nreported ICE in the PR was meanwhile mitigated in other ways\nbut the issue can still result in missed optimizations via\nfailed runs of CFG cleanup.\n\n2020-07-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/95679\n\t* tree-ssa-propagate.h\n\t(substitute_and_fold_engine::propagate_into_phi_args): Return\n\twhether anything changed.\n\t* tree-ssa-propagate.c\n\t(substitute_and_fold_engine::propagate_into_phi_args): Likewise.\n\t(substitute_and_fold_dom_walker::before_dom_children): Update\n\tsomething_changed.", "tree": {"sha": "dbdb0c30128a41f48623c05e8b7dbc42641df2d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbdb0c30128a41f48623c05e8b7dbc42641df2d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6de5600a8bd1ef0ad3d57670efdcc68bb3484276", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6de5600a8bd1ef0ad3d57670efdcc68bb3484276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6de5600a8bd1ef0ad3d57670efdcc68bb3484276"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "1e05728415437d6ddb5e3189cb1fa2b1f4a2cbb4", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db", "patch": "@@ -1017,11 +1017,13 @@ substitute_and_fold_dom_walker::foreach_new_stmt_in_bb\n     }\n }\n \n-void\n+bool\n substitute_and_fold_engine::propagate_into_phi_args (basic_block bb)\n {\n   edge e;\n   edge_iterator ei;\n+  bool propagated = false;\n+\n   /* Visit BB successor PHI nodes and replace PHI args.  */\n   FOR_EACH_EDGE (e, ei, bb->succs)\n     {\n@@ -1035,11 +1037,16 @@ substitute_and_fold_engine::propagate_into_phi_args (basic_block bb)\n \t      || virtual_operand_p (arg))\n \t    continue;\n \t  tree val = get_value (arg, phi);\n-\t  if (val && is_gimple_min_invariant (val)\n+\t  if (val\n+\t      && is_gimple_min_invariant (val)\n \t      && may_propagate_copy (arg, val))\n-\t    propagate_value (use_p, val);\n+\t    {\n+\t      propagate_value (use_p, val);\n+\t      propagated = true;\n+\t    }\n \t}\n     }\n+  return propagated;\n }\n \n edge\n@@ -1229,7 +1236,7 @@ substitute_and_fold_dom_walker::before_dom_children (basic_block bb)\n \t}\n     }\n \n-  substitute_and_fold_engine->propagate_into_phi_args (bb);\n+  something_changed |= substitute_and_fold_engine->propagate_into_phi_args (bb);\n \n   return NULL;\n }"}, {"sha": "9406cdf8f515da98ec5427d9d96b567e1cf77d87", "filename": "gcc/tree-ssa-propagate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db/gcc%2Ftree-ssa-propagate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db/gcc%2Ftree-ssa-propagate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.h?ref=8e8792a347c87dbb82b4cf75ec3452bc5cd1d3db", "patch": "@@ -115,7 +115,7 @@ class substitute_and_fold_engine\n   virtual void pre_fold_stmt (gimple *) { }\n   virtual void post_new_stmt (gimple *) { }\n \n-  void propagate_into_phi_args (basic_block);\n+  bool propagate_into_phi_args (basic_block);\n \n   /* Users like VRP can set this when they want to perform\n      folding for every propagation.  */"}]}