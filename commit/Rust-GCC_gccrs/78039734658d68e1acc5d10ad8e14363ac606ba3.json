{"sha": "78039734658d68e1acc5d10ad8e14363ac606ba3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgwMzk3MzQ2NThkNjhlMWFjYzVkMTBhZDhlMTQzNjNhYzYwNmJhMw==", "commit": {"author": {"name": "Sriraman Tallam", "email": "tmsriram@google.com", "date": "2013-07-11T22:09:55Z"}, "committer": {"name": "Sriraman Tallam", "email": "tmsriram@gcc.gnu.org", "date": "2013-07-11T22:09:55Z"}, "message": "re PR c++/57362 (unsupported __attribute__((target())) values appear to cause loop and/or pathological behavior)\n\nPR 57362\n\n\tPR target/57362\n\t* config/i386/i386.c (dispatch_function_versions): Fix array\n\tindexing of function_version_info to match actual_versions.\n\n\tPR target/57362\n\t* g++.dg/ext/pr57362.C: New.\n\nFrom-SVN: r200913", "tree": {"sha": "8f9f514bcc5926df1b6a1b21cf6f61cefa69c737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f9f514bcc5926df1b6a1b21cf6f61cefa69c737"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78039734658d68e1acc5d10ad8e14363ac606ba3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78039734658d68e1acc5d10ad8e14363ac606ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78039734658d68e1acc5d10ad8e14363ac606ba3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78039734658d68e1acc5d10ad8e14363ac606ba3/comments", "author": {"login": "tmsri", "id": 38991943, "node_id": "MDQ6VXNlcjM4OTkxOTQz", "avatar_url": "https://avatars.githubusercontent.com/u/38991943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmsri", "html_url": "https://github.com/tmsri", "followers_url": "https://api.github.com/users/tmsri/followers", "following_url": "https://api.github.com/users/tmsri/following{/other_user}", "gists_url": "https://api.github.com/users/tmsri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmsri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmsri/subscriptions", "organizations_url": "https://api.github.com/users/tmsri/orgs", "repos_url": "https://api.github.com/users/tmsri/repos", "events_url": "https://api.github.com/users/tmsri/events{/privacy}", "received_events_url": "https://api.github.com/users/tmsri/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c6215249d06acdca6d7ba5c810f33b2b0395bd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c6215249d06acdca6d7ba5c810f33b2b0395bd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c6215249d06acdca6d7ba5c810f33b2b0395bd1"}], "stats": {"total": 216, "additions": 213, "deletions": 3}, "files": [{"sha": "613ede4f8fa5b90cf0d4790a29399fdea32546d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78039734658d68e1acc5d10ad8e14363ac606ba3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78039734658d68e1acc5d10ad8e14363ac606ba3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78039734658d68e1acc5d10ad8e14363ac606ba3", "patch": "@@ -1,3 +1,8 @@\n+2013-07-11  Sriraman Tallam  <tmsriram@google.com>\n+\n+\t* config/i386/i386.c (dispatch_function_versions): Fix array\n+\tindexing of function_version_info to match actual_versions.\n+\n 2013-07-11  Teresa Johnson  <tejohnson@google.com>\n \n \t* vec.h (struct va_gc): Move release out-of-line."}, {"sha": "5df6ab741daba1ec77cc1ca984fb3bdbc3f1c004", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78039734658d68e1acc5d10ad8e14363ac606ba3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78039734658d68e1acc5d10ad8e14363ac606ba3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=78039734658d68e1acc5d10ad8e14363ac606ba3", "patch": "@@ -29342,10 +29342,11 @@ dispatch_function_versions (tree dispatch_decl,\n       if (predicate_chain == NULL_TREE)\n \tcontinue;\n \n+      function_version_info [actual_versions].version_decl = version_decl;\n+      function_version_info [actual_versions].predicate_chain\n+\t = predicate_chain;\n+      function_version_info [actual_versions].dispatch_priority = priority;\n       actual_versions++;\n-      function_version_info [ix - 1].version_decl = version_decl;\n-      function_version_info [ix - 1].predicate_chain = predicate_chain;\n-      function_version_info [ix - 1].dispatch_priority = priority;\n     }\n \n   /* Sort the versions according to descending order of dispatch priority.  The"}, {"sha": "57ab286f6bf1965711e2a20f416968d6f167163f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78039734658d68e1acc5d10ad8e14363ac606ba3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78039734658d68e1acc5d10ad8e14363ac606ba3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78039734658d68e1acc5d10ad8e14363ac606ba3", "patch": "@@ -1,3 +1,8 @@\n+2013-07-11  Sriraman Tallam  <tmsriram@google.com>\n+\n+\tPR target/57362\n+\t* g++.dg/ext/pr57362.C: New.\n+\t\n 2013-07-11  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/57631"}, {"sha": "67f96857e8dae03fb1d362f811a9176721a1e200", "filename": "gcc/testsuite/g++.dg/ext/pr57362.C", "status": "added", "additions": 199, "deletions": 0, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78039734658d68e1acc5d10ad8e14363ac606ba3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr57362.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78039734658d68e1acc5d10ad8e14363ac606ba3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr57362.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr57362.C?ref=78039734658d68e1acc5d10ad8e14363ac606ba3", "patch": "@@ -0,0 +1,199 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-ifunc \"\" }  */\n+\n+__attribute__((target(\"default\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"128bit-long-double\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"80387\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"96bit-long-double\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"long-double-80\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"long-double-64\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"accumulate-outgoing-args\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"align-double\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"align-stringops\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"fancy-math-387\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"force-drap\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"fp-ret-in-387\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"hard-float\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"ieee-fp\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"inline-all-stringops\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"inline-stringops-dynamically\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"intel-syntax\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"ms-bitfields\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"no-align-stringops\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"no-fancy-math-387\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"no-push-args\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"no-red-zone\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"omit-leaf-frame-pointer\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"pc32\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"pc64\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"pc80\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"push-args\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"red-zone\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"rtd\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"soft-float\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sseregparm\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"stackrealign\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"stack-arg-probe\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"tls-direct-seg-refs\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"vect8-ret-in-mem\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"recip\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"cld\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"vzeroupper\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"dispatch-scheduler\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"prefer-avx128\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"32\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"64\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"x32\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"mmx\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"3dnow\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"3dnowa\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sse\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sse2\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sse3\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"ssse3\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sse4.1\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sse4.2\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sse4\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"no-sse4\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sse5\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"avx\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"avx2\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"fma\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sse4a\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"fma4\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"xop\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"lwp\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"abm\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"popcnt\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"bmi\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"bmi2\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"lzcnt\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"hle\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"rdseed\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"prfchw\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"adx\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"fxsr\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"xsave\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"xsaveopt\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"tbm\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"cx16\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sahf\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"movbe\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"crc32\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"aes\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"pclmul\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"sse2avx\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"fsgsbase\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"rdrnd\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"f16c\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"fentry\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"8bit-idiv\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"avx256-split-unaligned-load\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"avx256-split-unaligned-store\")))\n+int foo(void) { return 1; }\n+__attribute__((target(\"rtm\")))\n+int foo(void) { return 1; }\n+//---------------\n+\n+#include <stdio.h>\n+    int main (void)\n+    {\n+      int result;\n+      result = foo();\n+      printf(\"Result is %d\\n\", result);\n+      return result;\n+    }\n+\n+/* { dg-prune-output \"attribute.* is unknown\" } */\n+/* { dg-prune-output \"redefinition of int foo\" } */\n+/* { dg-prune-output \"previous declaration of int foo\" } */\n+/* { dg-prune-output \"int foo.* previously defined here\" } */\n+/* { dg-prune-output \"No dispatcher found for\" } */"}]}