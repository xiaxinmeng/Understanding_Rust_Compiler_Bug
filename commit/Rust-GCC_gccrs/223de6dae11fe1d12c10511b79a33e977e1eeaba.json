{"sha": "223de6dae11fe1d12c10511b79a33e977e1eeaba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIzZGU2ZGFlMTFmZTFkMTJjMTA1MTFiNzlhMzNlOTc3ZTFlZWFiYQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-04-30T00:34:16Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-04-30T00:34:16Z"}, "message": "[RS6000] PR69645, -ffixed-reg ignored\n\nTreat -ffixed-reg as we do for global asm regs.\n\n\tPR target/69645\n\t* config/rs6000/rs6000.c (fixed_reg_p): New function.\n\t(fixed_regs_p): Rename from global_regs_p.  Call fixed_reg_p.\n\tUpdate all uses.\n\nFrom-SVN: r235670", "tree": {"sha": "7859a6585634ae7871b9850b757d702a3a7d0126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7859a6585634ae7871b9850b757d702a3a7d0126"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/223de6dae11fe1d12c10511b79a33e977e1eeaba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/223de6dae11fe1d12c10511b79a33e977e1eeaba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/223de6dae11fe1d12c10511b79a33e977e1eeaba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/223de6dae11fe1d12c10511b79a33e977e1eeaba/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd1c95f7fb199ee3ab5dfe1c54a70df1b6fb6290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd1c95f7fb199ee3ab5dfe1c54a70df1b6fb6290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd1c95f7fb199ee3ab5dfe1c54a70df1b6fb6290"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "9f1ca044ff46266d2fbd13e514705335af5416e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/223de6dae11fe1d12c10511b79a33e977e1eeaba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/223de6dae11fe1d12c10511b79a33e977e1eeaba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=223de6dae11fe1d12c10511b79a33e977e1eeaba", "patch": "@@ -1,3 +1,10 @@\n+2016-04-30  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/69645\n+\t* config/rs6000/rs6000.c (fixed_reg_p): New function.\n+\t(fixed_regs_p): Rename from global_regs_p.  Call fixed_reg_p.\n+\tUpdate all uses.\n+\n 2016-04-30  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_conditional_register_usage):"}, {"sha": "2ca2c55d8a3318d9bc1118394154ef35806057dd", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/223de6dae11fe1d12c10511b79a33e977e1eeaba/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/223de6dae11fe1d12c10511b79a33e977e1eeaba/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=223de6dae11fe1d12c10511b79a33e977e1eeaba", "patch": "@@ -23230,17 +23230,34 @@ is_altivec_return_reg (rtx reg, void *xyes)\n }\n \n \f\n-/* Look for user-defined global regs in the range FIRST to LAST-1.\n-   We should not restore these, and so cannot use lmw or out-of-line\n-   restore functions if there are any.  We also can't save them\n-   (well, emit frame notes for them), because frame unwinding during\n-   exception handling will restore saved registers.  */\n+/* Return whether REG is a global user reg or has been specifed by\n+   -ffixed-REG.  */\n \n static bool\n-global_regs_p (unsigned first, unsigned last)\n+fixed_reg_p (int reg)\n+{\n+  /* Ignore fixed_regs[RS6000_PIC_OFFSET_TABLE_REGNUM] when the\n+     backend sets it, overriding anything the user might have given.  */\n+  if (reg == RS6000_PIC_OFFSET_TABLE_REGNUM\n+      && ((DEFAULT_ABI == ABI_V4 && flag_pic)\n+\t  || (DEFAULT_ABI == ABI_DARWIN && flag_pic)\n+\t  || (TARGET_TOC && TARGET_MINIMAL_TOC)))\n+    return false;\n+\n+  return fixed_regs[reg];\n+}\n+\n+/* Look for user-defined global regs or -ffixed-<reg> in the range\n+   FIRST to LAST-1.  We should not restore these, and so cannot use\n+   lmw or out-of-line restore functions if there are any.  We also\n+   can't save them (well, emit frame notes for them), because frame\n+   unwinding during exception handling will restore saved registers.  */\n+\n+static bool\n+fixed_regs_p (unsigned first, unsigned last)\n {\n   while (first < last)\n-    if (global_regs[first++])\n+    if (fixed_reg_p (first++))\n       return true;\n   return false;\n }\n@@ -23271,7 +23288,7 @@ rs6000_savres_strategy (rs6000_stack_t *info,\n       && !TARGET_POWERPC64\n       && !(TARGET_SPE_ABI && info->spe_64bit_regs_used)\n       && info->first_gp_reg_save < 31\n-      && !global_regs_p (info->first_gp_reg_save, 32))\n+      && !fixed_regs_p (info->first_gp_reg_save, 32))\n     strategy |= SAVRES_MULTIPLE;\n \n   if (crtl->calls_eh_return\n@@ -23284,16 +23301,16 @@ rs6000_savres_strategy (rs6000_stack_t *info,\n       /* The out-of-line FP routines use double-precision stores;\n \t we can't use those routines if we don't have such stores.  */\n       || (TARGET_HARD_FLOAT && !TARGET_DOUBLE_FLOAT)\n-      || global_regs_p (info->first_fp_reg_save, 64))\n+      || fixed_regs_p (info->first_fp_reg_save, 64))\n     strategy |= SAVE_INLINE_FPRS | REST_INLINE_FPRS;\n \n   if (info->first_gp_reg_save == 32\n       || (!(strategy & SAVRES_MULTIPLE)\n-\t  && global_regs_p (info->first_gp_reg_save, 32)))\n+\t  && fixed_regs_p (info->first_gp_reg_save, 32)))\n     strategy |= SAVE_INLINE_GPRS | REST_INLINE_GPRS;\n \n   if (info->first_altivec_reg_save == LAST_ALTIVEC_REGNO + 1\n-      || global_regs_p (info->first_altivec_reg_save, LAST_ALTIVEC_REGNO + 1))\n+      || fixed_regs_p (info->first_altivec_reg_save, LAST_ALTIVEC_REGNO + 1))\n     strategy |= SAVE_INLINE_VRS | REST_INLINE_VRS;\n \n   /* Define cutoff for using out-of-line functions to save registers.  */"}]}