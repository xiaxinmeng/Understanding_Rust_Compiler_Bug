{"sha": "a5b2a65b97966b01b2403e083a0bf49a4e05cf0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTViMmE2NWI5Nzk2NmIwMWIyNDAzZTA4M2EwYmY0OWE0ZTA1Y2YwYQ==", "commit": {"author": {"name": "Jeff Sturm", "email": "jsturm@one-point.com", "date": "2001-12-17T03:24:50Z"}, "committer": {"name": "Jeff Sturm", "email": "jsturm@gcc.gnu.org", "date": "2001-12-17T03:24:50Z"}, "message": "dyn_load.c: Define ElfW (if needed) for all targets, not just GNU/Linux.\n\n\t* dyn_load.c: Define ElfW (if needed) for all targets,\n\tnot just GNU/Linux.\n\t(GC_FirstDLOpenedLinkMap): Use it.\n\t(GC_register_dynamic_libraries_dl): Use it.\n\t* include/private/gcconfig.h: Define CPP_WORDSZ, ELF_CLASS\n\tfor sparcv9.\n\nFrom-SVN: r48086", "tree": {"sha": "8b76cba31f1da01ca75cbd4757362900e10e882d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b76cba31f1da01ca75cbd4757362900e10e882d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5b2a65b97966b01b2403e083a0bf49a4e05cf0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b2a65b97966b01b2403e083a0bf49a4e05cf0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b2a65b97966b01b2403e083a0bf49a4e05cf0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b2a65b97966b01b2403e083a0bf49a4e05cf0a/comments", "author": null, "committer": null, "parents": [{"sha": "8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118"}], "stats": {"total": 48, "additions": 29, "deletions": 19}, "files": [{"sha": "83e266a62329edb6e8ca980ae405e0bc406df663", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b2a65b97966b01b2403e083a0bf49a4e05cf0a/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b2a65b97966b01b2403e083a0bf49a4e05cf0a/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=a5b2a65b97966b01b2403e083a0bf49a4e05cf0a", "patch": "@@ -1,3 +1,12 @@\n+2001-12-16  Jeff Sturm  <jsturm@one-point.com>\n+\n+\t* dyn_load.c: Define ElfW (if needed) for all targets,\n+\tnot just GNU/Linux.\n+\t(GC_FirstDLOpenedLinkMap): Use it.\n+\t(GC_register_dynamic_libraries_dl): Use it.\n+\t* include/private/gcconfig.h: Define CPP_WORDSZ, ELF_CLASS\n+\tfor sparcv9.\n+\n 2001-12-16  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n \n \tPR other/3725"}, {"sha": "984253aa87394e62fc76f1860f26fcfcd92f4928", "filename": "boehm-gc/dyn_load.c", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b2a65b97966b01b2403e083a0bf49a4e05cf0a/boehm-gc%2Fdyn_load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b2a65b97966b01b2403e083a0bf49a4e05cf0a/boehm-gc%2Fdyn_load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fdyn_load.c?ref=a5b2a65b97966b01b2403e083a0bf49a4e05cf0a", "patch": "@@ -79,6 +79,15 @@\n #   define l_name\tlm_name\n #endif\n \n+/* Newer versions of GNU/Linux define this macro.  We\n+ * define it similarly for any ELF systems that don't.  */\n+#  ifndef ElfW\n+#    if !defined(ELF_CLASS) || ELF_CLASS == ELFCLASS32\n+#      define ElfW(type) Elf32_##type\n+#    else\n+#      define ElfW(type) Elf64_##type\n+#    endif\n+#  endif\n \n #if defined(SUNOS5DL) && !defined(USE_PROC_FOR_LIBRARIES)\n \n@@ -89,11 +98,11 @@\n static struct link_map *\n GC_FirstDLOpenedLinkMap()\n {\n-    extern Elf32_Dyn _DYNAMIC;\n-    Elf32_Dyn *dp;\n+    extern ElfW(Dyn) _DYNAMIC;\n+    ElfW(Dyn) *dp;\n     struct r_debug *r;\n     static struct link_map * cachedResult = 0;\n-    static Elf32_Dyn *dynStructureAddr = 0;\n+    static ElfW(Dyn) *dynStructureAddr = 0;\n     \t\t\t/* BTL: added to avoid Solaris 5.3 ld.so _DYNAMIC bug */\n \n #   ifdef SUNOS53_SHARED_LIB\n@@ -103,7 +112,7 @@ GC_FirstDLOpenedLinkMap()\n \t/* at program startup.\t\t\t\t\t\t*/\n \tif( dynStructureAddr == 0 ) {\n \t  void* startupSyms = dlopen(0, RTLD_LAZY);\n-\t  dynStructureAddr = (Elf32_Dyn*)dlsym(startupSyms, \"_DYNAMIC\");\n+\t  dynStructureAddr = (ElfW(Dyn)*)dlsym(startupSyms, \"_DYNAMIC\");\n \t\t}\n #   else\n \tdynStructureAddr = &_DYNAMIC;\n@@ -114,7 +123,7 @@ GC_FirstDLOpenedLinkMap()\n     }\n     if( cachedResult == 0 ) {\n         int tag;\n-        for( dp = ((Elf32_Dyn *)(&_DYNAMIC)); (tag = dp->d_tag) != 0; dp++ ) {\n+        for( dp = ((ElfW(Dyn) *)(&_DYNAMIC)); (tag = dp->d_tag) != 0; dp++ ) {\n             if( tag == DT_DEBUG ) {\n                 struct link_map *lm\n                         = ((struct r_debug *)(dp->d_un.d_ptr))->r_map;\n@@ -200,14 +209,14 @@ void GC_register_dynamic_libraries()\n \t\t    TRUE);\n #     endif\n #     ifdef SUNOS5DL\n-\tElf32_Ehdr * e;\n-        Elf32_Phdr * p;\n+\tElfW(Ehdr) * e;\n+        ElfW(Phdr) * p;\n         unsigned long offset;\n         char * start;\n         register int i;\n         \n-\te = (Elf32_Ehdr *) lm->l_addr;\n-        p = ((Elf32_Phdr *)(((char *)(e)) + e->e_phoff));\n+\te = (ElfW(Ehdr) *) lm->l_addr;\n+        p = ((ElfW(Phdr) *)(((char *)(e)) + e->e_phoff));\n         offset = ((unsigned long)(lm->l_addr));\n         for( i = 0; i < (int)(e->e_phnum); ((i++),(p++)) ) {\n           switch( p->p_type ) {\n@@ -516,16 +525,6 @@ GC_bool GC_register_dynamic_libraries_dl_iterate_phdr()\n \n # endif\n \n-/* Newer versions of Linux/Alpha and Linux/x86 define this macro.  We\n- * define it for those older versions that don't.  */\n-#  ifndef ElfW\n-#    if !defined(ELF_CLASS) || ELF_CLASS == ELFCLASS32\n-#      define ElfW(type) Elf32_##type\n-#    else\n-#      define ElfW(type) Elf64_##type\n-#    endif\n-#  endif\n-\n static struct link_map *\n GC_FirstDLOpenedLinkMap()\n {"}, {"sha": "75405dcd7af73e64826c49fe99acc4b5693a5580", "filename": "boehm-gc/include/private/gcconfig.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b2a65b97966b01b2403e083a0bf49a4e05cf0a/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b2a65b97966b01b2403e083a0bf49a4e05cf0a/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h?ref=a5b2a65b97966b01b2403e083a0bf49a4e05cf0a", "patch": "@@ -715,6 +715,8 @@\n #   define MACH_TYPE \"SPARC\"\n #   if defined(__arch64__) || defined(__sparcv9)\n #     define ALIGNMENT 8\n+#     define CPP_WORDSZ 64\n+#     define ELF_CLASS ELFCLASS64\n #   else\n #     define ALIGNMENT 4\t/* Required by hardware\t*/\n #   endif"}]}