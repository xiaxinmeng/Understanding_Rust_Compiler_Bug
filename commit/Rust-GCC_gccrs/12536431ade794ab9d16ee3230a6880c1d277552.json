{"sha": "12536431ade794ab9d16ee3230a6880c1d277552", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI1MzY0MzFhZGU3OTRhYjlkMTZlZTMyMzBhNjg4MGMxZDI3NzU1Mg==", "commit": {"author": {"name": "Edward Smith-Rowland", "email": "3dw4rd@verizon.net", "date": "2019-11-15T21:26:25Z"}, "committer": {"name": "Edward Smith-Rowland", "email": "emsr@gcc.gnu.org", "date": "2019-11-15T21:26:25Z"}, "message": "Implement the default_searcher part of C++20 p1032 Misc constexpr bits.\n\n2019-11-15  Edward Smith-Rowland  <3dw4rd@verizon.net>\n\n\tImplement the default_searcher part of C++20 p1032 Misc constexpr bits.\n\t* include/std/functional\n\t(default_searcher, default_searcher::operator()): Constexpr.\n\t* testsuite/20_util/function_objects/constexpr_searcher.cc: New.\n\nFrom-SVN: r278317", "tree": {"sha": "f82f75d676dc899ac7b6b7c125fb5f3ea4e097fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82f75d676dc899ac7b6b7c125fb5f3ea4e097fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12536431ade794ab9d16ee3230a6880c1d277552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12536431ade794ab9d16ee3230a6880c1d277552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12536431ade794ab9d16ee3230a6880c1d277552", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12536431ade794ab9d16ee3230a6880c1d277552/comments", "author": {"login": "emsr", "id": 1936479, "node_id": "MDQ6VXNlcjE5MzY0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1936479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emsr", "html_url": "https://github.com/emsr", "followers_url": "https://api.github.com/users/emsr/followers", "following_url": "https://api.github.com/users/emsr/following{/other_user}", "gists_url": "https://api.github.com/users/emsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/emsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emsr/subscriptions", "organizations_url": "https://api.github.com/users/emsr/orgs", "repos_url": "https://api.github.com/users/emsr/repos", "events_url": "https://api.github.com/users/emsr/events{/privacy}", "received_events_url": "https://api.github.com/users/emsr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae0b0fc6ae46c47ec5003db8cc3b6eff75423c18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0b0fc6ae46c47ec5003db8cc3b6eff75423c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0b0fc6ae46c47ec5003db8cc3b6eff75423c18"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "5e2cb545a28eaad6e9cd2eb9ccb3b1f26d3b4168", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12536431ade794ab9d16ee3230a6880c1d277552/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12536431ade794ab9d16ee3230a6880c1d277552/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=12536431ade794ab9d16ee3230a6880c1d277552", "patch": "@@ -1,3 +1,10 @@\n+2019-11-15  Edward Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\tImplement the default_searcher part of C++20 p1032 Misc constexpr bits.\n+\t* include/std/functional\n+\t(default_searcher, default_searcher::operator()): Constexpr.\n+\t* testsuite/20_util/function_objects/constexpr_searcher.cc: New.\n+\n 2019-11-15  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/iterator_concepts.h (weakly_incrementable): Adjust."}, {"sha": "93a3f9fecae54ff8699057f2612fc783dbecdd5e", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12536431ade794ab9d16ee3230a6880c1d277552/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12536431ade794ab9d16ee3230a6880c1d277552/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=12536431ade794ab9d16ee3230a6880c1d277552", "patch": "@@ -1000,14 +1000,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     class default_searcher\n     {\n     public:\n+      _GLIBCXX20_CONSTEXPR\n       default_searcher(_ForwardIterator1 __pat_first,\n \t\t       _ForwardIterator1 __pat_last,\n \t\t       _BinaryPredicate __pred = _BinaryPredicate())\n       : _M_m(__pat_first, __pat_last, std::move(__pred))\n       { }\n \n       template<typename _ForwardIterator2>\n-        pair<_ForwardIterator2, _ForwardIterator2>\n+\t_GLIBCXX20_CONSTEXPR\n+\tpair<_ForwardIterator2, _ForwardIterator2>\n \toperator()(_ForwardIterator2 __first, _ForwardIterator2 __last) const\n \t{\n \t  _ForwardIterator2 __first_ret ="}, {"sha": "e9fc0fc2204bae28abc73b9f04350a02e32c2e0e", "filename": "libstdc++-v3/testsuite/20_util/function_objects/constexpr_searcher.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12536431ade794ab9d16ee3230a6880c1d277552/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fconstexpr_searcher.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12536431ade794ab9d16ee3230a6880c1d277552/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fconstexpr_searcher.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fconstexpr_searcher.cc?ref=12536431ade794ab9d16ee3230a6880c1d277552", "patch": "@@ -0,0 +1,52 @@\n+// Copyright (C) 2014-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <functional>\n+#include <string_view>\n+\n+const std::string_view\n+patt = \"World\";\n+\n+constexpr std::string_view\n+greet = \"Hello, Humongous World of Wonder!!!\";\n+\n+const std::wstring_view\n+wpatt = L\"World\";\n+\n+constexpr std::wstring_view\n+wgreet = L\"Hello, Humongous World of Wonder!!!\";\n+\n+constexpr bool\n+test_searcher()\n+{\n+  auto ok = true;\n+\n+  const std::default_searcher search(patt.begin(), patt.end(),\n+\t\t\t\t     std::equal_to<>());\n+  const auto find = search(greet.begin(), greet.end());\n+\n+  const std::default_searcher wsearch(wpatt.begin(), wpatt.end(),\n+\t\t\t\t      std::equal_to<>());\n+  const auto wfind = wsearch(wgreet.begin(), wgreet.end());\n+\n+  return ok;\n+}\n+\n+static_assert(test_searcher());"}]}