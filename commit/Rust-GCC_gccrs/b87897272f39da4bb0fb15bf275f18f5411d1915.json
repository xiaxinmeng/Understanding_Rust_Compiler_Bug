{"sha": "b87897272f39da4bb0fb15bf275f18f5411d1915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg3ODk3MjcyZjM5ZGE0YmIwZmIxNWJmMjc1ZjE4ZjU0MTFkMTkxNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-31T09:27:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-31T09:27:37Z"}, "message": "[multiple changes]\n\n2011-08-31  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-rbtgbo.adb (Clear_Tree): Assert representation invariant for lock\n\tstatus.\n\n2011-08-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb: Set kind of loop parameter properly, to preserve all\n\terrors in B tests.\n\n2011-08-31  Jose Ruiz  <ruiz@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): For the Priority and\n\tInterrupt_Priority aspects, force the analysis of the aspect expression\n\t(when building the equivalent pragma). Otherwise, its analysis is done\n\ttoo late, after the task or protected object has been created.\n\t* sem_ch9.adb (Analyze_Single_Protected_Declaration,\n\tAnalyze_Single_Task_Declaration): Remove the code to move the aspects\n\tto the object declaration because they are needed in the type\n\tdeclaration.\n\nFrom-SVN: r178370", "tree": {"sha": "cfeb1fa47dde723b03a38b0ebdfac2394578e9a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfeb1fa47dde723b03a38b0ebdfac2394578e9a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b87897272f39da4bb0fb15bf275f18f5411d1915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87897272f39da4bb0fb15bf275f18f5411d1915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b87897272f39da4bb0fb15bf275f18f5411d1915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87897272f39da4bb0fb15bf275f18f5411d1915/comments", "author": null, "committer": null, "parents": [{"sha": "680fba0932753037dd955a7266a450f5800bc765", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/680fba0932753037dd955a7266a450f5800bc765", "html_url": "https://github.com/Rust-GCC/gccrs/commit/680fba0932753037dd955a7266a450f5800bc765"}], "stats": {"total": 51, "additions": 41, "deletions": 10}, "files": [{"sha": "6ced91054a747afaedb402e58c3186debaf45471", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87897272f39da4bb0fb15bf275f18f5411d1915/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87897272f39da4bb0fb15bf275f18f5411d1915/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b87897272f39da4bb0fb15bf275f18f5411d1915", "patch": "@@ -1,3 +1,24 @@\n+2011-08-31  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-rbtgbo.adb (Clear_Tree): Assert representation invariant for lock\n+\tstatus.\n+\n+2011-08-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb: Set kind of loop parameter properly, to preserve all\n+\terrors in B tests.\n+\n+2011-08-31  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): For the Priority and\n+\tInterrupt_Priority aspects, force the analysis of the aspect expression\n+\t(when building the equivalent pragma). Otherwise, its analysis is done\n+\ttoo late, after the task or protected object has been created.\n+\t* sem_ch9.adb (Analyze_Single_Protected_Declaration,\n+\tAnalyze_Single_Task_Declaration): Remove the code to move the aspects\n+\tto the object declaration because they are needed in the type\n+\tdeclaration.\n+\n 2011-08-31  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch5.adb, exp_ch7.ads, sem_ch5.adb, put_scos.adb, s-rannum.adb,"}, {"sha": "a2590e93390c5e0614c5060564622853601f1948", "filename": "gcc/ada/a-rbtgbo.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87897272f39da4bb0fb15bf275f18f5411d1915/gcc%2Fada%2Fa-rbtgbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87897272f39da4bb0fb15bf275f18f5411d1915/gcc%2Fada%2Fa-rbtgbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgbo.adb?ref=b87897272f39da4bb0fb15bf275f18f5411d1915", "patch": "@@ -59,15 +59,16 @@ package body Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n            \"attempt to tamper with cursors (container is busy)\";\n       end if;\n \n+      --  The lock status (which monitors \"element tampering\") always implies\n+      --  that the busy status (which monitors \"cursor tampering\") is set too;\n+      --  this is a representation invariant. Thus if the busy bit is not set,\n+      --  then the lock bit must not be set either.\n+      pragma Assert (Tree.Lock = 0);\n+\n       Tree.First  := 0;\n       Tree.Last   := 0;\n       Tree.Root   := 0;\n       Tree.Length := 0;\n-\n-      --  Why are the following commented out with no explanation ???\n-      --  Tree.Busy\n-      --  Tree.Lock\n-\n       Tree.Free   := -1;\n    end Clear_Tree;\n "}, {"sha": "a4b1024e3c92f9108d402c629e869cb21e296b7a", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87897272f39da4bb0fb15bf275f18f5411d1915/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87897272f39da4bb0fb15bf275f18f5411d1915/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=b87897272f39da4bb0fb15bf275f18f5411d1915", "patch": "@@ -1164,7 +1164,9 @@ package body Sem_Ch13 is\n                       Pragma_Identifier            =>\n                         Make_Identifier (Sloc (Id), Pname),\n                       Pragma_Argument_Associations =>\n-                        New_List (Relocate_Node (Expr)));\n+                        New_List\n+                          (Make_Pragma_Argument_Association\n+                            (Sloc (Id), Expression => Relocate_Node (Expr))));\n \n                   Set_From_Aspect_Specification (Aitem, True);\n \n@@ -1526,6 +1528,12 @@ package body Sem_Ch13 is\n                            end if;\n \n                            Prepend (Aitem, To => L);\n+\n+                           --  Analyze rewritten pragma. Otherwise, its\n+                           --  analysis is done too late, after the task or\n+                           --  protected object has been created.\n+\n+                           Analyze (Aitem);\n                         end;\n \n                      --  For all other cases, insert in sequence"}, {"sha": "50c9bb68f976eba87b775c6ff3759cfb514dbf6d", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87897272f39da4bb0fb15bf275f18f5411d1915/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87897272f39da4bb0fb15bf275f18f5411d1915/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=b87897272f39da4bb0fb15bf275f18f5411d1915", "patch": "@@ -1965,7 +1965,6 @@ package body Sem_Ch5 is\n \n             begin\n                Enter_Name (Id);\n-               Set_Ekind (Id, E_Constant);\n \n                --  We always consider the loop variable to be referenced, since\n                --  the loop may be used just for counting purposes.\n@@ -2058,6 +2057,11 @@ package body Sem_Ch5 is\n                            Analyze (DS);\n                         end if;\n \n+                        --  Set kind of loop parameter, which may be used in\n+                        --  the subsequent analysis of of the condition in a\n+                        --  quantified expression.\n+\n+                        Set_Ekind (Id, E_Loop_Parameter);\n                         return;\n                      end;\n "}, {"sha": "cdac2f787d3199db948acffb13a1a4fa800e51c7", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87897272f39da4bb0fb15bf275f18f5411d1915/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87897272f39da4bb0fb15bf275f18f5411d1915/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=b87897272f39da4bb0fb15bf275f18f5411d1915", "patch": "@@ -23,7 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Checks;   use Checks;\n with Einfo;    use Einfo;\n@@ -1726,7 +1725,6 @@ package body Sem_Ch9 is\n           Defining_Identifier => O_Name,\n           Object_Definition   => Make_Identifier (Loc,  Chars (T)));\n \n-      Move_Aspects (N, O_Decl);\n       Rewrite (N, T_Decl);\n       Insert_After (N, O_Decl);\n       Mark_Rewrite_Insertion (O_Decl);\n@@ -1796,7 +1794,6 @@ package body Sem_Ch9 is\n           Defining_Identifier => O_Name,\n           Object_Definition   => Make_Identifier (Loc, Chars (T)));\n \n-      Move_Aspects (N, O_Decl);\n       Rewrite (N, T_Decl);\n       Insert_After (N, O_Decl);\n       Mark_Rewrite_Insertion (O_Decl);"}]}