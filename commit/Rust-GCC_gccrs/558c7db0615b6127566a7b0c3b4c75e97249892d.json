{"sha": "558c7db0615b6127566a7b0c3b4c75e97249892d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU4YzdkYjA2MTViNjEyNzU2NmE3YjBjM2I0Yzc1ZTk3MjQ5ODkyZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-10-17T17:35:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-17T17:35:33Z"}, "message": "dwarf2.h (enum dwarf_calling_convention): Add new DWARF5 calling convention codes.\n\n\t* dwarf2.h (enum dwarf_calling_convention): Add new DWARF5\n\tcalling convention codes.\n\t(enum dwarf_line_number_content_type): New.\n\t(enum dwarf_location_list_entry_type): Add DWARF5 DW_LLE_*\n\tcodes.\n\t(enum dwarf_source_language): Add new DWARF5 DW_LANG_* codes.\n\t(enum dwarf_macro_record_type): Add DWARF5 DW_MACRO_* codes.\n\t(enum dwarf_name_index_attribute): New.\n\t(enum dwarf_range_list_entry): New.\n\t(enum dwarf_unit_type): New.\n\t* dwarf2.def: Add new DWARF5 DW_TAG_*, DW_FORM_*, DW_AT_*,\n\tDW_OP_* and DW_ATE_* entries.\n\nFrom-SVN: r241272", "tree": {"sha": "6f2a18d204389d77fe309fbb0e3b1e751f9a36e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f2a18d204389d77fe309fbb0e3b1e751f9a36e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/558c7db0615b6127566a7b0c3b4c75e97249892d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558c7db0615b6127566a7b0c3b4c75e97249892d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/558c7db0615b6127566a7b0c3b4c75e97249892d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558c7db0615b6127566a7b0c3b4c75e97249892d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d32d41768b8c3564de2c683a697014775c02813e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d32d41768b8c3564de2c683a697014775c02813e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d32d41768b8c3564de2c683a697014775c02813e"}], "stats": {"total": 198, "additions": 179, "deletions": 19}, "files": [{"sha": "5054b7e912aab7007cdb7cf637179d73f1da2618", "filename": "include/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558c7db0615b6127566a7b0c3b4c75e97249892d/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558c7db0615b6127566a7b0c3b4c75e97249892d/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=558c7db0615b6127566a7b0c3b4c75e97249892d", "patch": "@@ -1,3 +1,18 @@\n+2016-10-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dwarf2.h (enum dwarf_calling_convention): Add new DWARF5\n+\tcalling convention codes.\n+\t(enum dwarf_line_number_content_type): New.\n+\t(enum dwarf_location_list_entry_type): Add DWARF5 DW_LLE_*\n+\tcodes.\n+\t(enum dwarf_source_language): Add new DWARF5 DW_LANG_* codes.\n+\t(enum dwarf_macro_record_type): Add DWARF5 DW_MACRO_* codes.\n+\t(enum dwarf_name_index_attribute): New.\n+\t(enum dwarf_range_list_entry): New.\n+\t(enum dwarf_unit_type): New.\n+\t* dwarf2.def: Add new DWARF5 DW_TAG_*, DW_FORM_*, DW_AT_*,\n+\tDW_OP_* and DW_ATE_* entries.\n+\n 2016-10-14  Pedro Alves  <palves@redhat.com>\n \n \t* ansidecl.h [__cplusplus >= 201103 && GCC_VERSION < 4007] (FINAL,"}, {"sha": "bb916ca238221151cf49359c25fd92643c7e60af", "filename": "include/dwarf2.def", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558c7db0615b6127566a7b0c3b4c75e97249892d/include%2Fdwarf2.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558c7db0615b6127566a7b0c3b4c75e97249892d/include%2Fdwarf2.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.def?ref=558c7db0615b6127566a7b0c3b4c75e97249892d", "patch": "@@ -132,7 +132,14 @@ DW_TAG (DW_TAG_type_unit, 0x41)\n DW_TAG (DW_TAG_rvalue_reference_type, 0x42)\n DW_TAG (DW_TAG_template_alias, 0x43)\n /* DWARF 5.  */\n+DW_TAG (DW_TAG_coarray_type, 0x44)\n+DW_TAG (DW_TAG_generic_subrange, 0x45)\n+DW_TAG (DW_TAG_dynamic_type, 0x46)\n DW_TAG (DW_TAG_atomic_type, 0x47)\n+DW_TAG (DW_TAG_call_site, 0x48)\n+DW_TAG (DW_TAG_call_site_parameter, 0x49)\n+DW_TAG (DW_TAG_skeleton_unit, 0x4a)\n+DW_TAG (DW_TAG_immutable_type, 0x4b)\n \n DW_TAG_DUP (DW_TAG_lo_user, 0x4080)\n DW_TAG_DUP (DW_TAG_hi_user, 0xffff)\n@@ -202,6 +209,16 @@ DW_FORM (DW_FORM_sec_offset, 0x17)\n DW_FORM (DW_FORM_exprloc, 0x18)\n DW_FORM (DW_FORM_flag_present, 0x19)\n DW_FORM (DW_FORM_ref_sig8, 0x20)\n+/* DWARF 5.  */\n+DW_FORM (DW_FORM_strx, 0x1a)\n+DW_FORM (DW_FORM_addrx, 0x1b)\n+DW_FORM (DW_FORM_ref_sup, 0x1c)\n+DW_FORM (DW_FORM_strp_sup, 0x1d)\n+DW_FORM (DW_FORM_data16, 0x1e)\n+DW_FORM (DW_FORM_line_strp, 0x1f)\n+DW_FORM (DW_FORM_implicit_const, 0x21)\n+DW_FORM (DW_FORM_loclistx, 0x22)\n+DW_FORM (DW_FORM_rnglistx, 0x23)\n /* Extensions for Fission.  See http://gcc.gnu.org/wiki/DebugFission.  */\n DW_FORM (DW_FORM_GNU_addr_index, 0x1f01)\n DW_FORM (DW_FORM_GNU_str_index, 0x1f02)\n@@ -311,9 +328,33 @@ DW_AT (DW_AT_linkage_name, 0x6e)\n /* DWARF 5.  */\n DW_AT (DW_AT_string_length_bit_size, 0x6f)\n DW_AT (DW_AT_string_length_byte_size, 0x70)\n+DW_AT (DW_AT_rank, 0x71)\n+DW_AT (DW_AT_str_offsets_base, 0x72)\n+DW_AT (DW_AT_addr_base, 0x73)\n+DW_AT (DW_AT_rnglists_base, 0x74)\n+DW_AT (DW_AT_dwo_name, 0x76)\n+DW_AT (DW_AT_reference, 0x77)\n+DW_AT (DW_AT_rvalue_reference, 0x78)\n+DW_AT (DW_AT_macros, 0x79)\n+DW_AT (DW_AT_call_all_calls, 0x7a)\n+DW_AT (DW_AT_call_all_source_calls, 0x7b)\n+DW_AT (DW_AT_call_all_tail_calls, 0x7c)\n+DW_AT (DW_AT_call_return_pc, 0x7d)\n+DW_AT (DW_AT_call_value, 0x7e)\n+DW_AT (DW_AT_call_origin, 0x7f)\n+DW_AT (DW_AT_call_parameter, 0x80)\n+DW_AT (DW_AT_call_pc, 0x81)\n+DW_AT (DW_AT_call_tail_call, 0x82)\n+DW_AT (DW_AT_call_target, 0x83)\n+DW_AT (DW_AT_call_target_clobbered, 0x84)\n+DW_AT (DW_AT_call_data_location, 0x85)\n+DW_AT (DW_AT_call_data_value, 0x86)\n DW_AT (DW_AT_noreturn, 0x87)\n+DW_AT (DW_AT_alignment, 0x88)\n+DW_AT (DW_AT_export_symbols, 0x89)\n DW_AT (DW_AT_deleted, 0x8a)\n DW_AT (DW_AT_defaulted, 0x8b)\n+DW_AT (DW_AT_loclists_base, 0x8c)\n \n DW_AT_DUP (DW_AT_lo_user, 0x2000) /* Implementation-defined range start.  */\n DW_AT_DUP (DW_AT_hi_user, 0x3fff) /* Implementation-defined range end.  */\n@@ -595,6 +636,18 @@ DW_OP (DW_OP_bit_piece, 0x9d)\n DW_OP (DW_OP_implicit_value, 0x9e)\n DW_OP (DW_OP_stack_value, 0x9f)\n \n+/* DWARF 5 extensions.  */\n+DW_OP (DW_OP_implicit_pointer, 0xa0)\n+DW_OP (DW_OP_addrx, 0xa1)\n+DW_OP (DW_OP_constx, 0xa2)\n+DW_OP (DW_OP_entry_value, 0xa3)\n+DW_OP (DW_OP_const_type, 0xa4)\n+DW_OP (DW_OP_regval_type, 0xa5)\n+DW_OP (DW_OP_deref_type, 0xa6)\n+DW_OP (DW_OP_xderef_type, 0xa7)\n+DW_OP (DW_OP_convert, 0xa8)\n+DW_OP (DW_OP_reinterpret, 0xa9)\n+\n DW_OP_DUP (DW_OP_lo_user, 0xe0)\t/* Implementation-defined range start.  */\n DW_OP_DUP (DW_OP_hi_user, 0xff)\t/* Implementation-defined range end.  */\n \n@@ -652,6 +705,9 @@ DW_ATE (DW_ATE_unsigned_fixed, 0xe)\n DW_ATE (DW_ATE_decimal_float, 0xf)\n /* DWARF 4.  */\n DW_ATE (DW_ATE_UTF, 0x10)\n+/* DWARF 5.  */\n+DW_ATE (DW_ATE_UCS, 0x11)\n+DW_ATE (DW_ATE_ASCII, 0x12)\n \n DW_ATE_DUP (DW_ATE_lo_user, 0x80)\n DW_ATE_DUP (DW_ATE_hi_user, 0xff)"}, {"sha": "ca8ff3b6da11b2ec772347fc44af429c2c864631", "filename": "include/dwarf2.h", "status": "modified", "additions": 108, "deletions": 19, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558c7db0615b6127566a7b0c3b4c75e97249892d/include%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558c7db0615b6127566a7b0c3b4c75e97249892d/include%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.h?ref=558c7db0615b6127566a7b0c3b4c75e97249892d", "patch": "@@ -175,6 +175,10 @@ enum dwarf_calling_convention\n     DW_CC_program = 0x2,\n     DW_CC_nocall = 0x3,\n \n+    /* DWARF 5.  */\n+    DW_CC_pass_by_reference = 0x4,\n+    DW_CC_pass_by_value = 0x5,\n+\n     DW_CC_lo_user = 0x40,\n     DW_CC_hi_user = 0xff,\n \n@@ -257,15 +261,38 @@ enum dwarf_line_number_hp_sfc_ops\n     DW_LNE_HP_SFC_associate = 3\n   };\n \n-/* Type codes for location list entries.\n-   Extension for Fission.  See http://gcc.gnu.org/wiki/DebugFission.  */\n+/* Content type codes in line table directory_entry_format\n+   and file_name_entry_format sequences.  */\n+enum dwarf_line_number_content_type\n+  {\n+    DW_LNCT_path = 0x1,\n+    DW_LNCT_directory_index = 0x2,\n+    DW_LNCT_timestamp = 0x3,\n+    DW_LNCT_size = 0x4,\n+    DW_LNCT_MD5 = 0x5,\n+    DW_LNCT_lo_user = 0x2000,\n+    DW_LNCT_hi_user = 0x3fff\n+  };\n \n+/* Type codes for location list entries.  */\n enum dwarf_location_list_entry_type\n   {\n-    DW_LLE_GNU_end_of_list_entry = 0,\n-    DW_LLE_GNU_base_address_selection_entry = 1,\n-    DW_LLE_GNU_start_end_entry = 2,\n-    DW_LLE_GNU_start_length_entry = 3\n+    DW_LLE_end_of_list = 0x00,\n+    DW_LLE_base_addressx = 0x01,\n+    DW_LLE_startx_endx = 0x02,\n+    DW_LLE_startx_length = 0x03,\n+    DW_LLE_offset_pair = 0x04,\n+    DW_LLE_default_location = 0x05,\n+    DW_LLE_base_address = 0x06,\n+    DW_LLE_start_end = 0x07,\n+    DW_LLE_start_length = 0x08,\n+\n+    /* Former extension for Fission.\n+       See http://gcc.gnu.org/wiki/DebugFission.  */\n+    DW_LLE_GNU_end_of_list_entry = 0x00,\n+    DW_LLE_GNU_base_address_selection_entry = 0x01,\n+    DW_LLE_GNU_start_end_entry = 0x02,\n+    DW_LLE_GNU_start_length_entry = 0x03\n   };\n \n #define DW_CIE_ID\t  0xffffffff\n@@ -305,14 +332,22 @@ enum dwarf_source_language\n     /* DWARF 4.  */\n     DW_LANG_Python = 0x0014,\n     /* DWARF 5.  */\n+    DW_LANG_OpenCL = 0x0015,\n     DW_LANG_Go = 0x0016,\n-\n-    DW_LANG_C_plus_plus_11 = 0x001a, /* dwarf5.20141029.pdf DRAFT */\n+    DW_LANG_Modula3 = 0x0017,\n+    DW_LANG_Haskell = 0x0018,\n+    DW_LANG_C_plus_plus_03 = 0x0019,\n+    DW_LANG_C_plus_plus_11 = 0x001a,\n+    DW_LANG_OCaml = 0x001b,\n     DW_LANG_Rust = 0x001c,\n     DW_LANG_C11 = 0x001d,\n+    DW_LANG_Swift = 0x001e,\n+    DW_LANG_Julia = 0x001f,\n+    DW_LANG_Dylan = 0x0020,\n     DW_LANG_C_plus_plus_14 = 0x0021,\n     DW_LANG_Fortran03 = 0x0022,\n     DW_LANG_Fortran08 = 0x0023,\n+    DW_LANG_RenderScript = 0x0024,\n \n     DW_LANG_lo_user = 0x8000,\t/* Implementation-defined range start.  */\n     DW_LANG_hi_user = 0xffff,\t/* Implementation-defined range start.  */\n@@ -342,7 +377,7 @@ enum dwarf_macinfo_record_type\n     DW_MACINFO_vendor_ext = 255\n   };\n \n-/* DW_TAG_GNU_defaulted/DW_TAG_defaulted attributes.  */\n+/* DW_TAG_defaulted/DW_TAG_GNU_defaulted attributes.  */\n enum dwarf_defaulted_attribute\n   {\n     DW_DEFAULTED_no = 0x00,\n@@ -353,21 +388,75 @@ enum dwarf_defaulted_attribute\n /* Names and codes for new style macro information.  */\n enum dwarf_macro_record_type\n   {\n-    DW_MACRO_GNU_define = 1,\n-    DW_MACRO_GNU_undef = 2,\n-    DW_MACRO_GNU_start_file = 3,\n-    DW_MACRO_GNU_end_file = 4,\n-    DW_MACRO_GNU_define_indirect = 5,\n-    DW_MACRO_GNU_undef_indirect = 6,\n-    DW_MACRO_GNU_transparent_include = 7,\n+    DW_MACRO_define = 0x01,\n+    DW_MACRO_undef = 0x02,\n+    DW_MACRO_start_file = 0x03,\n+    DW_MACRO_end_file = 0x04,\n+    DW_MACRO_define_strp = 0x05,\n+    DW_MACRO_undef_strp = 0x06,\n+    DW_MACRO_import = 0x07,\n+    DW_MACRO_define_sup = 0x08,\n+    DW_MACRO_undef_sup = 0x09,\n+    DW_MACRO_import_sup = 0x0a,\n+    DW_MACRO_define_strx = 0x0b,\n+    DW_MACRO_undef_strx = 0x0c,\n+    DW_MACRO_lo_user = 0xe0,\n+    DW_MACRO_hi_user = 0xff,\n+\n+    /* Compatibility macros for the GNU .debug_macro extension.  */\n+    DW_MACRO_GNU_define = 0x01,\n+    DW_MACRO_GNU_undef = 0x02,\n+    DW_MACRO_GNU_start_file = 0x03,\n+    DW_MACRO_GNU_end_file = 0x04,\n+    DW_MACRO_GNU_define_indirect = 0x05,\n+    DW_MACRO_GNU_undef_indirect = 0x06,\n+    DW_MACRO_GNU_transparent_include = 0x07,\n     /* Extensions for DWZ multifile.\n        See http://www.dwarfstd.org/ShowIssue.php?issue=120604.1&type=open .  */\n-    DW_MACRO_GNU_define_indirect_alt = 8,\n-    DW_MACRO_GNU_undef_indirect_alt = 9,\n-    DW_MACRO_GNU_transparent_include_alt = 10,\n+    DW_MACRO_GNU_define_indirect_alt = 0x08,\n+    DW_MACRO_GNU_undef_indirect_alt = 0x09,\n+    DW_MACRO_GNU_transparent_include_alt = 0x0a,\n     DW_MACRO_GNU_lo_user = 0xe0,\n     DW_MACRO_GNU_hi_user = 0xff\n   };\n+\n+/* Index attributes in the Abbreviations Table.  */\n+enum dwarf_name_index_attribute\n+  {\n+    DW_IDX_compile_unit = 1,\n+    DW_IDX_type_unit = 2,\n+    DW_IDX_die_offset = 3,\n+    DW_IDX_parent = 4,\n+    DW_IDX_type_hash = 5,\n+    DW_IDX_lo_user = 0x2000,\n+    DW_IDX_hi_user = 0x3fff\n+  };\n+\n+/* Range list entry kinds in .debug_rnglists* section.  */\n+enum dwarf_range_list_entry\n+  {\n+    DW_RLE_end_of_list = 0x00,\n+    DW_RLE_base_addressx = 0x01,\n+    DW_RLE_startx_endx = 0x02,\n+    DW_RLE_startx_length = 0x03,\n+    DW_RLE_offset_pair = 0x04,\n+    DW_RLE_base_address = 0x05,\n+    DW_RLE_start_end = 0x06,\n+    DW_RLE_start_length = 0x07\n+  };\n+\n+/* Unit types in unit_type unit header field.  */\n+enum dwarf_unit_type\n+  {\n+    DW_UT_compile = 0x01,\n+    DW_UT_type = 0x02,\n+    DW_UT_partial = 0x03,\n+    DW_UT_skeleton = 0x04,\n+    DW_UT_split_compile = 0x05,\n+    DW_UT_split_type = 0x06,\n+    DW_UT_lo_user = 0x80,\n+    DW_UT_hi_user = 0xff\n+  };\n \f\n /* @@@ For use with GNU frame unwind information.  */\n "}]}