{"sha": "48c842ab84d4fc7b4bab94fe31f63ac6f534b23f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhjODQyYWI4NGQ0ZmM3YjRiYWI5NGZlMzFmNjNhYzZmNTM0YjIzZg==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2016-11-17T13:43:43Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2016-11-17T13:43:43Z"}, "message": "[ARC][libgcc] Add support for QuarkSE processor.\n\nlibgcc/\n2016-11-17  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/dp-hack.h (ARC_OPTFPE): Define.\n\t(__ARC_NORM__): Use instead ARC_OPTFPE.\n\t* config/arc/fp-hack.h: Likewise.\n\t* config/arc/lib1funcs.S (ARC_OPTFPE): Define.\n\t(__ARC_MPY__): Use it insetead of __ARC700__ and __HS__.\n\nFrom-SVN: r242547", "tree": {"sha": "399ed58fc35dfbf817c955b1b9cadd65614bd6ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/399ed58fc35dfbf817c955b1b9cadd65614bd6ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4014855e8fcdcd2b229448493c54587e1f98cdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4014855e8fcdcd2b229448493c54587e1f98cdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4014855e8fcdcd2b229448493c54587e1f98cdb"}], "stats": {"total": 148, "additions": 82, "deletions": 66}, "files": [{"sha": "b03a47c07f51d3ad2d31857c064365f2c2e24994", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=48c842ab84d4fc7b4bab94fe31f63ac6f534b23f", "patch": "@@ -1,3 +1,11 @@\n+2016-11-17  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/dp-hack.h (ARC_OPTFPE): Define.\n+\t(__ARC_NORM__): Use instead ARC_OPTFPE.\n+\t* config/arc/fp-hack.h: Likewise.\n+\t* config/arc/lib1funcs.S (ARC_OPTFPE): Define.\n+\t(__ARC_MPY__): Use it insetead of __ARC700__ and __HS__.\n+\n 2016-11-16  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* config/nvptx/crt0.c (__main): Setup __nvptx_stacks and __nvptx_uni."}, {"sha": "1f7f213288a2a297d4e0716db790313a01f02541", "filename": "libgcc/config/arc/dp-hack.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f/libgcc%2Fconfig%2Farc%2Fdp-hack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f/libgcc%2Fconfig%2Farc%2Fdp-hack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fdp-hack.h?ref=48c842ab84d4fc7b4bab94fe31f63ac6f534b23f", "patch": "@@ -30,21 +30,23 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #define FINE_GRAINED_LIBRARIES\n #define ARC_DP_DEBUG 1\n-#if !defined (__ARC_NORM__) || ARC_DP_DEBUG\n+#define ARC_OPTFPE (defined (__ARC700__) || defined (__ARC_FPX_QUARK__))\n+\n+#if !ARC_OPTFPE || ARC_DP_DEBUG\n #define L_pack_df\n #define L_unpack_df\n #define L_make_df\n #define L_thenan_df\n #define L_sf_to_df\n #endif\n-#ifndef __ARC_NORM__\n+#if !ARC_OPTFPE\n #define L_addsub_df\n #elif ARC_DP_DEBUG\n #define L_addsub_df\n #define __adddf3 __adddf3_c\n #define __subdf3 __subdf3_c\n #endif\n-#ifndef __ARC_NORM__\n+#if !ARC_OPTFPE\n #define L_mul_df\n #define L_div_df\n #elif (!defined (__ARC700__) && !defined (__ARC_MUL64__) \\\n@@ -59,7 +61,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define L_div_df\n #define __divdf3 __divdf3_c\n #endif\n-#ifndef __ARC_NORM__\n+#if !ARC_OPTFPE\n #define L_df_to_sf\n #define L_si_to_df\n #define L_df_to_si\n@@ -77,7 +79,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define L_usi_to_df\n #define __floatunsidf __floatunsidf_c\n #endif\n-#ifndef __ARC_NORM__\n+#if !ARC_OPTFPE\n #define L_fpcmp_parts_df\n #define L_compare_df\n #define L_eq_df"}, {"sha": "5144bb950960bcbdaba05e5a6688ea4dfd0d1080", "filename": "libgcc/config/arc/fp-hack.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f/libgcc%2Fconfig%2Farc%2Ffp-hack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f/libgcc%2Fconfig%2Farc%2Ffp-hack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Ffp-hack.h?ref=48c842ab84d4fc7b4bab94fe31f63ac6f534b23f", "patch": "@@ -30,13 +30,15 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #define ARC_FP_DEBUG 1\n #define FINE_GRAINED_LIBRARIES\n-#if !defined (__ARC_NORM__) || ARC_FP_DEBUG\n+#define ARC_OPTFPE (defined (__ARC700__) || defined (__ARC_FPX_QUARK__))\n+\n+#if !ARC_OPTFPE || ARC_FP_DEBUG\n #define L_pack_sf\n #define L_unpack_sf\n #define L_make_sf\n #define L_thenan_sf\n #endif\n-#ifndef __ARC_NORM__\n+#if !ARC_OPTFPE\n #define L_addsub_sf\n #define L_mul_sf\n #define L_div_sf\n@@ -61,7 +63,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define L_usi_to_sf\n #define __floatunsisf __floatunsisf_c\n #endif\n-#ifndef __ARC_NORM__\n+#if !ARC_OPTFPE\n #define L_fpcmp_parts_sf\n #define L_compare_sf\n #define L_eq_sf"}, {"sha": "422fd956457cb443d9dc1629bdf91445a1769396", "filename": "libgcc/config/arc/lib1funcs.S", "status": "modified", "additions": 62, "deletions": 58, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f/libgcc%2Fconfig%2Farc%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c842ab84d4fc7b4bab94fe31f63ac6f534b23f/libgcc%2Fconfig%2Farc%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Flib1funcs.S?ref=48c842ab84d4fc7b4bab94fe31f63ac6f534b23f", "patch": "@@ -32,29 +32,29 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n- \n+\n  /* ANSI concatenation macros.  */\n- \n+\n  #define CONCAT1(a, b) CONCAT2(a, b)\n  #define CONCAT2(a, b) a ## b\n- \n+\n  /* Use the right prefix for global labels.  */\n- \n+\n  #define SYM(x) CONCAT1 (__USER_LABEL_PREFIX__, x)\n- \n+\n #ifndef WORKING_ASSEMBLER\n #define abs_l abs\n #define asl_l asl\n #define mov_l mov\n #endif\n- \t\n+\n #define FUNC(X)         .type SYM(X),@function\n #define HIDDEN_FUNC(X)\tFUNC(X)` .hidden X\n #define ENDFUNC0(X)     .Lfe_##X: .size X,.Lfe_##X-X\n #define ENDFUNC(X)      ENDFUNC0(X)\n \n-\t\n-\t\n+\n+\n #ifdef  L_mulsi3\n \t.section .text\n \t.align 4\n@@ -64,10 +64,10 @@ SYM(__mulsi3):\n \n /* This the simple version.\n \n-  while (a) \n+  while (a)\n     {\n       if (a & 1)\n-        r += b;\n+\tr += b;\n       a >>= 1;\n       b <<= 1;\n     }\n@@ -132,7 +132,7 @@ SYM(__mulsi3):\n \tadd2.cs r0,r0,r1\n \tlsr.f r2,r2\n \tadd3.cs r0,r0,r1\n-\tbne.d .Loop\t\n+\tbne.d .Loop\n \tadd3 r1,r3,r1\n \tj_s\t[blink]\n \tENDFUNC(__mulsi3)\n@@ -143,17 +143,17 @@ SYM(__mulsi3):\n .Lloop:\n \tbbit0 r0,0,@.Ly\n \tadd_s r2,r2,r1\t\t; r += b\n-.Ly:\t\n+.Ly:\n \tlsr_s r0,r0\t\t; a >>= 1\n-\tasl_s r1,r1\t\t; b <<= 1\t\n-\tbrne_s r0,0,@.Lloop\t\n+\tasl_s r1,r1\t\t; b <<= 1\n+\tbrne_s r0,0,@.Lloop\n .Ldone:\n \tj_s.d [blink]\n \tmov_s r0,r2\n \tENDFUNC(__mulsi3)\n /********************************************************/\n #endif\n-\t\n+\n #endif /* L_mulsi3 */\n \n #ifdef  L_umulsidi3\n@@ -179,10 +179,10 @@ SYM(__umulsi3_highpart):\n \n /* This the simple version.\n \n-  while (a) \n+  while (a)\n     {\n       if (a & 1)\n-        r += b;\n+\tr += b;\n       a >>= 1;\n       b <<= 1;\n     }\n@@ -458,18 +458,18 @@ SYM(__udivmodsi4):\n \tmov_s r2,1\t\t; bit = 1\n \tmov_s r3,0\t\t; res = 0\n .Lloop1:\n-  \tbrhs r1,r0,@.Lloop2\n+\tbrhs r1,r0,@.Lloop2\n \tbbit1 r1,31,@.Lloop2\n \tasl_s r1,r1\t\t; den <<= 1\n \tb.d @.Lloop1\n \tasl_s r2,r2\t\t; bit <<= 1\n .Lloop2:\n-  \tbrlo r0,r1,@.Lshiftdown\n+\tbrlo r0,r1,@.Lshiftdown\n \tsub_s r0,r0,r1\t\t; num -= den\n \tor_s r3,r3,r2\t\t; res |= bit\n .Lshiftdown:\n \tlsr_s r2,r2\t\t; bit >>= 1\n-\tlsr_s r1,r1\t\t; den >>= 1\t\n+\tlsr_s r1,r1\t\t; den >>= 1\n \tbrne_s r2,0,@.Lloop2\n .Ldivmodend:\n \tmov_s r1,r0\t\t; r1 = mod\n@@ -788,15 +788,15 @@ __muldiv:\n \tneg\tr4,r2\n \tld.as\tr5,[pcl,r4]\n \tabs_s\tr12,r0\n-        bic.f\t0,r2,r4\n-        mpyhu.ne r12,r12,r5\n+\tbic.f\t0,r2,r4\n+\tmpyhu.ne r12,r12,r5\n \tnorm\tr3,r2\n \txor.f\t0,r0,r1\n-        ; write port allocation stall\n-        rsub\tr3,r3,30\n-        lsr\tr0,r12,r3\n-        j_s.d\t[blink]\n-        neg.mi\tr0,r0\n+\t; write port allocation stall\n+\trsub\tr3,r3,30\n+\tlsr\tr0,r12,r3\n+\tj_s.d\t[blink]\n+\tneg.mi\tr0,r0\n \n \t.balign\t4\n SYM(__divsi3):\n@@ -879,7 +879,7 @@ SYM(__divsi3):\n #endif\t/* ifndef __ARC700__ */\n \tENDFUNC(__divsi3)\n \n-\t\n+\n #endif /* L_divsi3 */\n \n #ifdef  L_umodsi3\n@@ -954,7 +954,7 @@ SYM(__modsi3):\n        .section .text\n        .align 4\n        .global SYM (__clzsi2)\n-SYM(__clzsi2):\t\n+SYM(__clzsi2):\n #ifdef __ARC_NORM__\n \tHIDDEN_FUNC(__clzsi2)\n \tnorm.f\tr0,r0\n@@ -1005,7 +1005,7 @@ SYM(__clzsi2):\n \n \n ;;; MILLICODE THUNK LIB ;***************\n-\t\n+\n ;;; \t.macro push_regs from, to, offset\n ;;; \t\tst_s \"\\from\", [sp, \\offset]\n ;;; \t\t.if \\to-\\from\n@@ -1022,34 +1022,34 @@ SYM(__clzsi2):\n ;;;;   \t\t.set regno, \\from+1\n ;;;;   \t\t.set shift, 32\n ;;;;   \t\t.set shift, shift - 1\n-;;;;   #\t\tst_s %shift @3 lsl #shift \n+;;;;   #\t\tst_s %shift @3 lsl #shift\n ;;;;   \t\t.if \\to-\\from\n ;;;;   \t\tsum \"(\\from+1)\", \\to, \"(\\three)\"\n-;;;;   \t\t.endif\t\t\n+;;;;   \t\t.endif\n ;;;;   \t.endm\n-;;;;   \t\n+;;;;\n ;;;;   \tSUM 0,5, 9\n-;;;;   \t\n-;\t.altmacro\t\t\n+;;;;\n+;\t.altmacro\n ;;  \t.macro push_regs from=0, to=3, offset\n ;;  \t\tst_s r\\from, [sp, \\offset]\n ;;  \t\t.if \\to-\\from\n ;;  \t\t\tpush_regs \"\\from+1 \",\\to,\"(\\offset+4)\"\n ;;  \t\t.endif\n ;;  \t.endm\n-;;  \n+;;\n ;;  \t.macro expand_to_push from=13, to\n ;;  ;\t\t.section .text\n ;;  ;\t\t.align 4\n ;;  ;\t\t.global st_\n ;;  ;\t\t.type foo,\n ;;  \tst_13_to_25:\n ;;  ;\t\tpush_regs \\from, \\to, 0\n-;;  \tpush_regs 0,3\t\t; \n+;;  \tpush_regs 0,3\t\t;\n ;;  \t.endm\n-;;  \n+;;\n ;;  \texpand_to_push 13,18\n-;;  \n+;;\n ;#endif\n \n #ifdef L_millicodethunk_st\n@@ -1080,33 +1080,33 @@ SYM(__clzsi2):\n \t.align 4\n SYM(__st_r13_to_r25):\n \tst r25, [sp,48]\n-SYM(__st_r13_to_r24):\t\n+SYM(__st_r13_to_r24):\n \tst r24, [sp,44]\n-SYM(__st_r13_to_r23):\t\n+SYM(__st_r13_to_r23):\n \tst r23, [sp,40]\n-SYM(__st_r13_to_r22):\t\n+SYM(__st_r13_to_r22):\n \tst r22, [sp,36]\n-SYM(__st_r13_to_r21):\t\n+SYM(__st_r13_to_r21):\n \tst r21, [sp,32]\n-SYM(__st_r13_to_r20):\t\n-\tst r20, [sp,28]\t\t\n-SYM(__st_r13_to_r19):\t\n+SYM(__st_r13_to_r20):\n+\tst r20, [sp,28]\n+SYM(__st_r13_to_r19):\n \tst r19, [sp,24]\n-SYM(__st_r13_to_r18):\t\n+SYM(__st_r13_to_r18):\n \tst r18, [sp,20]\n-SYM(__st_r13_to_r17):\t\n+SYM(__st_r13_to_r17):\n \tst r17, [sp,16]\n-SYM(__st_r13_to_r16):\t\n+SYM(__st_r13_to_r16):\n \tst r16, [sp,12]\n-SYM(__st_r13_to_r15):\t\n+SYM(__st_r13_to_r15):\n #ifdef __ARC700__\n \tst r15, [sp,8] ; minimum function size to avoid stall: 6 bytes.\n #else\n \tst_s r15, [sp,8]\n #endif\n \tst_s r14, [sp,4]\n \tj_s.d [%blink]\n-\tst_s r13, [sp,0]\t\n+\tst_s r13, [sp,0]\n \tENDFUNC(__st_r13_to_r15)\n \tENDFUNC(__st_r13_to_r16)\n \tENDFUNC(__st_r13_to_r17)\n@@ -1124,7 +1124,7 @@ SYM(__st_r13_to_r15):\n #ifdef L_millicodethunk_ld\n \t.section .text\n \t.align 4\n-;\t================================== \n+;\t==================================\n ;\tthe loads\n \n \t.global SYM(__ld_r13_to_r15)\n@@ -1160,7 +1160,7 @@ SYM(__ld_r13_to_r22):\n SYM(__ld_r13_to_r21):\n \tld r21, [sp,32]\n SYM(__ld_r13_to_r20):\n-\tld r20, [sp,28]\t\t\n+\tld r20, [sp,28]\n SYM(__ld_r13_to_r19):\n \tld r19, [sp,24]\n SYM(__ld_r13_to_r18):\n@@ -1229,7 +1229,7 @@ SYM(__ld_r13_to_r22_ret):\n SYM(__ld_r13_to_r21_ret):\n \tld r21, [sp,32]\n SYM(__ld_r13_to_r20_ret):\n-\tld r20, [sp,28]\t\t\n+\tld r20, [sp,28]\n SYM(__ld_r13_to_r19_ret):\n \tld r19, [sp,24]\n SYM(__ld_r13_to_r18_ret):\n@@ -1261,14 +1261,17 @@ SYM(__ld_r13_to_r14_ret):\n \n #endif /* L_millicodethunk_ret */\n \n+#define ARC_OPTFPE (defined (__ARC700__) || defined (__ARC_FPX_QUARK__))\n+\n+#if ARC_OPTFPE\n #ifdef  L_adddf3\n #ifdef __ARC_NORM__\n #include \"ieee-754/adddf3.S\"\n #endif\n #endif\n \n #ifdef  L_muldf3\n-#if defined (__ARC700__) || defined (__HS__)\n+#ifdef __ARC_MPY__\n #include \"ieee-754/muldf3.S\"\n #elif defined (__ARC_NORM__) && defined(__ARC_MUL64__)\n #include \"ieee-754/arc600-mul64/muldf3.S\"\n@@ -1284,7 +1287,7 @@ SYM(__ld_r13_to_r14_ret):\n #endif\n \n #ifdef  L_mulsf3\n-#if defined (__ARC700__) || defined (__HS__)\n+#ifdef  __ARC_MPY__\n #include \"ieee-754/mulsf3.S\"\n #elif defined (__ARC_NORM__) && defined(__ARC_MUL64__)\n #include \"ieee-754/arc600-mul64/mulsf3.S\"\n@@ -1296,7 +1299,7 @@ SYM(__ld_r13_to_r14_ret):\n #endif\n \n #ifdef  L_divdf3\n-#if defined (__ARC700__) || defined (__HS__)\n+#ifdef  __ARC_MPY__\n #include \"ieee-754/divdf3.S\"\n #elif defined (__ARC_NORM__) && defined(__ARC_MUL64__)\n #include \"ieee-754/arc600-mul64/divdf3.S\"\n@@ -1306,7 +1309,7 @@ SYM(__ld_r13_to_r14_ret):\n #endif\n \n #ifdef  L_divsf3\n-#if defined (__ARC700__) || defined (__HS__)\n+#ifdef  __ARC_MPY__\n #include \"ieee-754/divsf3-stdmul.S\"\n #elif defined (__ARC_NORM__) && defined(__ARC_MUL64__)\n #include \"ieee-754/arc600-mul64/divsf3.S\"\n@@ -1424,3 +1427,4 @@ SYM(__ld_r13_to_r14_ret):\n #include \"ieee-754/ordsf2.S\"\n #endif\n #endif\n+#endif /* ARC_OPTFPE */"}]}