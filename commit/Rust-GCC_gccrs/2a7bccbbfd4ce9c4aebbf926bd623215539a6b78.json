{"sha": "2a7bccbbfd4ce9c4aebbf926bd623215539a6b78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE3YmNjYmJmZDRjZTljNGFlYmJmOTI2YmQ2MjMyMTU1MzlhNmI3OA==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-07-07T18:27:34Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-07-07T18:27:34Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1500", "tree": {"sha": "bbd0c7003a1e9da7d6cdf06100918b71c7b29f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbd0c7003a1e9da7d6cdf06100918b71c7b29f12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a7bccbbfd4ce9c4aebbf926bd623215539a6b78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7bccbbfd4ce9c4aebbf926bd623215539a6b78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a7bccbbfd4ce9c4aebbf926bd623215539a6b78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7bccbbfd4ce9c4aebbf926bd623215539a6b78/comments", "author": null, "committer": null, "parents": [{"sha": "e6c5404dd4ccda564018b1bff41e46d2471d3e05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6c5404dd4ccda564018b1bff41e46d2471d3e05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6c5404dd4ccda564018b1bff41e46d2471d3e05"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1c163337e40cd87018215a1f528f8d0a5392dd17", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7bccbbfd4ce9c4aebbf926bd623215539a6b78/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7bccbbfd4ce9c4aebbf926bd623215539a6b78/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2a7bccbbfd4ce9c4aebbf926bd623215539a6b78", "patch": "@@ -33,7 +33,7 @@ LANGUAGES = c c++ objective-c proto\n \n ALLOCA =\n ALLOCA_FLAGS =\n-ALLOCA_FINISH =\n+ALLOCA_FINISH = true\n \n # Various ways of specifying flags for compilations:  \n # CFLAGS is for the user to override to, e.g., do a bootstrap with -O2.\n@@ -95,7 +95,7 @@ GCC_FOR_TARGET = ./xgcc\n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n # It also specifies -B$(tooldir)/ to find as and ld for a cross compiler.\n-GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -B./ -B$(tooldir)/bin/\n+GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -B./ $(CROSS_GCC_CFLAGS)\n \n # Special flags for compiling enquire.\n # We disable optimization to make floating point more reliable.\n@@ -391,7 +391,7 @@ LIB2FUNCS = _muldi3 _divdi3 _moddi3 _udivdi3 _umoddi3 _negdi2 \\\n \n # Header files that are made available under the same name\n # to programs compiled with GCC.\n-USER_H = assert.h va-hp800.h va-i860.h va-mips.h va-pyr.h va-sparc.h \\\n+USER_H = assert.h va-pa.h va-i860.h va-mips.h va-pyr.h va-sparc.h \\\n     va-spur.h va-m88k.h va-i960.h proto.h $(EXTRA_HEADERS)\n \n # All the header files that are installed for users from GCC itself.\n@@ -1378,8 +1378,8 @@ install-common: native install-dir xgcc $(srcdir)/g++ $(srcdir)/c++ $(EXTRA_PART\n # Don't mess with specs if it doesn't exist yet.\n # We can't make it a dependency because with a cross compiler\n # you have to make specs on the target machine or not at all.\n-\tif [ -f specs ] ; then \\\n-\t  -rm -f $(libsubdir)/specs; \\\n+\t-if [ -f specs ] ; then \\\n+\t  rm -f $(libsubdir)/specs; \\\n \t  $(INSTALL_DATA) specs $(libsubdir)/specs; \\\n \tfi\n # Install the driver program as gcc-$(target)"}]}