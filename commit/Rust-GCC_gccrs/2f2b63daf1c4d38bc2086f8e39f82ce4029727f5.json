{"sha": "2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYyYjYzZGFmMWM0ZDM4YmMyMDg2ZjhlMzlmODJjZTQwMjk3MjdmNQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-02-20T22:41:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-02-20T22:41:51Z"}, "message": "faq.html: Fix spelling.\n\n\t* doc/html/faq.html: Fix spelling.\n\t* doc/xml/faq.xml: Likewise.\n\t* include/bits/basic_ios.h: Likewise.\n\t* include/bits/regex.h: Likewise.\n\t* include/std/istream: Likewise.\n\t* include/std/streambuf: Likewise.\n\nFrom-SVN: r196184", "tree": {"sha": "22785089c7ab8d2f783247d070653065d918e6fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22785089c7ab8d2f783247d070653065d918e6fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4731c96644d4ef015d91b6385214ecdcd4742274", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4731c96644d4ef015d91b6385214ecdcd4742274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4731c96644d4ef015d91b6385214ecdcd4742274"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "f117cc5a6edf3b360cf519bd6b9aaed1edcd6406", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "patch": "@@ -1,3 +1,12 @@\n+2013-02-20  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* doc/html/faq.html: Fix spelling.\n+\t* doc/xml/faq.xml: Likewise.\n+\t* include/bits/basic_ios.h: Likewise.\n+\t* include/bits/regex.h: Likewise.\n+\t* include/std/istream: Likewise.\n+\t* include/std/streambuf: Likewise.\n+\n 2013-02-20  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* testsuite/23_containers/unordered_set/55043.cc: Add missing"}, {"sha": "91952071e875e5a78b14c878a10131c6ca377aab", "filename": "libstdc++-v3/doc/html/faq.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html?ref=2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "patch": "@@ -503,7 +503,7 @@\n     Short answer: Pretty much everything <span class=\"emphasis\"><em>works</em></span>\n     except for some corner cases.  Support for localization\n     in <code class=\"classname\">locale</code> may be incomplete on non-GNU\n-    platforms. Also dependant on the underlying platform is support\n+    platforms. Also dependent on the underlying platform is support\n     for <span class=\"type\">wchar_t</span> and <span class=\"type\">long\n     long</span> specializations, and details of thread support.\n     </p><p>    "}, {"sha": "4e3339260ee30994f668d6c693f312bb017836d0", "filename": "libstdc++-v3/doc/xml/faq.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml?ref=2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "patch": "@@ -685,7 +685,7 @@\n     Short answer: Pretty much everything <emphasis>works</emphasis>\n     except for some corner cases.  Support for localization\n     in <classname>locale</classname> may be incomplete on non-GNU\n-    platforms. Also dependant on the underlying platform is support\n+    platforms. Also dependent on the underlying platform is support\n     for <type>wchar_t</type> and <type>long\n     long</type> specializations, and details of thread support.\n     </para>"}, {"sha": "5325800df9077ba9ba729421a30740c7a557cf7d", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "patch": "@@ -69,7 +69,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       //@{\n       /**\n        *  These are standard types.  They permit a standardized way of\n-       *  referring to names of (or names dependant on) the template\n+       *  referring to names of (or names dependent on) the template\n        *  parameters, which are specific to the implementation.\n       */\n       typedef _CharT                                 char_type;"}, {"sha": "101925a66f8cae92fc57235fdb8f4144dab97b19", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "patch": "@@ -135,7 +135,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n \n       /**\n-       * @brief Gets a sort key for a character sequence, independant of case.\n+       * @brief Gets a sort key for a character sequence, independent of case.\n        *\n        * @param __first beginning of the character sequence.\n        * @param __last  one-past-the-end of the character sequence.\n@@ -185,7 +185,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * the returned mask identifies the classification regardless of\n        * the case of the characters to be matched (for example,\n        * [[:lower:]] is the same as [[:alpha:]]), otherwise a\n-       * case-dependant classification is returned.  The value\n+       * case-dependent classification is returned.  The value\n        * returned shall be independent of the case of the characters\n        * in the character sequence. If the name is not recognized then\n        * returns a value that compares equal to 0."}, {"sha": "861bca53adf3572954077f7dbdfc02ff130aaf3f", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "patch": "@@ -660,7 +660,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       bool _M_ok;\n \n     public:\n-      /// Easy access to dependant types.\n+      /// Easy access to dependent types.\n       typedef _Traits \t\t\t\t\ttraits_type;\n       typedef basic_streambuf<_CharT, _Traits> \t\t__streambuf_type;\n       typedef basic_istream<_CharT, _Traits> \t\t__istream_type;"}, {"sha": "00b3dd1f36dae3ea4e1c9b71b281c0e7196f744c", "filename": "libstdc++-v3/include/std/streambuf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf?ref=2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "patch": "@@ -123,7 +123,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       //@{\n       /**\n        *  These are standard types.  They permit a standardized way of\n-       *  referring to names of (or names dependant on) the template\n+       *  referring to names of (or names dependent on) the template\n        *  parameters, which are specific to the implementation.\n       */\n       typedef _CharT \t\t\t\t\tchar_type;"}]}