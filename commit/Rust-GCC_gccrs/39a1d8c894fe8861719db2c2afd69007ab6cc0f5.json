{"sha": "39a1d8c894fe8861719db2c2afd69007ab6cc0f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlhMWQ4Yzg5NGZlODg2MTcxOWRiMmMyYWZkNjkwMDdhYjZjYzBmNQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-01-13T16:25:56Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-01-13T16:25:56Z"}, "message": "Use ::isinf and ::isnan if libc defines them\n\n\tPR libstdc++/48891\n\t* acinclude.m4 (GLIBCXX_CHECK_MATH11_PROTO): Check for obsolete isinf\n\tand isnan functions.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* include/c_global/cmath (isinf(double), isnan(double))\n\t[_GLIBCXX_HAVE_OBSOLETE_ISINF_ISNAN]: Import via using-directive.\n\t* testsuite/26_numerics/headers/cmath/48891.cc: New.\n\nFrom-SVN: r232327", "tree": {"sha": "2670abc20fc46d91ae71b56219618a8ba707940b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2670abc20fc46d91ae71b56219618a8ba707940b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39a1d8c894fe8861719db2c2afd69007ab6cc0f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39a1d8c894fe8861719db2c2afd69007ab6cc0f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39a1d8c894fe8861719db2c2afd69007ab6cc0f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b4b6ef2272f7583e5475dd9bcd4acfac5857df1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b4b6ef2272f7583e5475dd9bcd4acfac5857df1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b4b6ef2272f7583e5475dd9bcd4acfac5857df1"}], "stats": {"total": 134, "additions": 134, "deletions": 0}, "files": [{"sha": "83669c31be5b47cc486e3a2b55ab0f769a876b17", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=39a1d8c894fe8861719db2c2afd69007ab6cc0f5", "patch": "@@ -1,3 +1,14 @@\n+2016-01-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/48891\n+\t* acinclude.m4 (GLIBCXX_CHECK_MATH11_PROTO): Check for obsolete isinf\n+\tand isnan functions.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* include/c_global/cmath (isinf(double), isnan(double))\n+\t[_GLIBCXX_HAVE_OBSOLETE_ISINF_ISNAN]: Import via using-directive.\n+\t* testsuite/26_numerics/headers/cmath/48891.cc: New.\n+\n 2016-01-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libstdc++/66006"}, {"sha": "b76e8d51b960beffa4fba96b5715c0024fe87211", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=39a1d8c894fe8861719db2c2afd69007ab6cc0f5", "patch": "@@ -2186,6 +2186,40 @@ AC_DEFUN([GLIBCXX_CHECK_MATH11_PROTO], [\n       fi\n       AC_MSG_RESULT([$glibcxx_cv_math11_overload])\n       ;;\n+    *-*-*gnu*)\n+      # If <math.h> defines the obsolete isinf(double) and isnan(double)\n+      # functions (instead of or as well as the C99 generic macros) then we\n+      # can't define std::isinf(double) and std::isnan(double) in <cmath>\n+      # and must use the ones from <math.h> instead.\n+      AC_MSG_CHECKING([for obsolete isinf and isnan functions in <math.h>])\n+        AC_CACHE_VAL(glibcxx_cv_obsolete_isinf_isnan, [\n+          AC_COMPILE_IFELSE([AC_LANG_SOURCE(\n+            [#include <math.h>\n+             #undef isinf\n+             #undef isnan\n+             namespace std {\n+               using ::isinf;\n+               bool isinf(float);\n+               bool isinf(long double);\n+               using ::isnan;\n+               bool isnan(float);\n+               bool isnan(long double);\n+             }\n+             using std::isinf;\n+             using std::isnan;\n+             bool b = isinf(0.0) || isnan(0.0);\n+          ])],\n+          [glibcxx_cv_obsolete_isinf_isnan=yes],\n+          [glibcxx_cv_obsolete_isinf_isnan=no]\n+        )])\n+\n+\n+      if test $glibcxx_cv_obsolete_isinf_isnan = yes; then\n+        AC_DEFINE(HAVE_OBSOLETE_ISINF_ISNAN, 1,\n+                  [Define if <math.h> defines obsolete isinf and isnan functions.])\n+      fi\n+      AC_MSG_RESULT([$glibcxx_cv_obsolete_isinf_isnan])\n+      ;;\n   esac\n \n   CXXFLAGS=\"$ac_save_CXXFLAGS\""}, {"sha": "5fb0cd3dc26574c51414ecb00e726106d970646c", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=39a1d8c894fe8861719db2c2afd69007ab6cc0f5", "patch": "@@ -300,6 +300,9 @@\n /* Define to 1 if you have the <nan.h> header file. */\n #undef HAVE_NAN_H\n \n+/* Define if <math.h> defines obsolete isinf and isnan functions. */\n+#undef HAVE_OBSOLETE_ISINF_ISNAN\n+\n /* Define if poll is available in <poll.h>. */\n #undef HAVE_POLL\n "}, {"sha": "38f14f6729ebfd76816ebf34d301eecc65ea0035", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=39a1d8c894fe8861719db2c2afd69007ab6cc0f5", "patch": "@@ -18174,6 +18174,54 @@ fi\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_math11_overload\" >&5\n $as_echo \"$glibcxx_cv_math11_overload\" >&6; }\n       ;;\n+    *-*-*gnu*)\n+      # If <math.h> defines the obsolete isinf(double) and isnan(double)\n+      # functions (instead of or as well as the C99 generic macros) then we\n+      # can't define std::isinf(double) and std::isnan(double) in <cmath>\n+      # and must use the ones from <math.h> instead.\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for obsolete isinf and isnan functions in <math.h>\" >&5\n+$as_echo_n \"checking for obsolete isinf and isnan functions in <math.h>... \" >&6; }\n+        if test \"${glibcxx_cv_obsolete_isinf_isnan+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+          cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <math.h>\n+             #undef isinf\n+             #undef isnan\n+             namespace std {\n+               using ::isinf;\n+               bool isinf(float);\n+               bool isinf(long double);\n+               using ::isnan;\n+               bool isnan(float);\n+               bool isnan(long double);\n+             }\n+             using std::isinf;\n+             using std::isnan;\n+             bool b = isinf(0.0) || isnan(0.0);\n+\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_obsolete_isinf_isnan=yes\n+else\n+  glibcxx_cv_obsolete_isinf_isnan=no\n+\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+\n+\n+\n+      if test $glibcxx_cv_obsolete_isinf_isnan = yes; then\n+\n+$as_echo \"#define HAVE_OBSOLETE_ISINF_ISNAN 1\" >>confdefs.h\n+\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_obsolete_isinf_isnan\" >&5\n+$as_echo \"$glibcxx_cv_obsolete_isinf_isnan\" >&6; }\n+      ;;\n   esac\n \n   CXXFLAGS=\"$ac_save_CXXFLAGS\""}, {"sha": "6269e3277707a928e8090c50737a257c2f24a275", "filename": "libstdc++-v3/include/c_global/cmath", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath?ref=39a1d8c894fe8861719db2c2afd69007ab6cc0f5", "patch": "@@ -606,9 +606,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   isinf(float __x)\n   { return __builtin_isinf(__x); }\n \n+#ifdef _GLIBCXX_HAVE_OBSOLETE_ISINF_ISNAN\n+  using ::isinf;\n+#else\n   constexpr bool\n   isinf(double __x)\n   { return __builtin_isinf(__x); }\n+#endif\n \n   constexpr bool\n   isinf(long double __x)\n@@ -626,9 +630,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   isnan(float __x)\n   { return __builtin_isnan(__x); }\n \n+#ifdef _GLIBCXX_HAVE_OBSOLETE_ISINF_ISNAN\n+  using ::isnan;\n+#else\n   constexpr bool\n   isnan(double __x)\n   { return __builtin_isnan(__x); }\n+#endif\n \n   constexpr bool\n   isnan(long double __x)"}, {"sha": "ef94fe10423486114bb93ba25113e82d175a0a96", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/48891.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F48891.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39a1d8c894fe8861719db2c2afd69007ab6cc0f5/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F48891.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F48891.cc?ref=39a1d8c894fe8861719db2c2afd69007ab6cc0f5", "patch": "@@ -0,0 +1,30 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// PR libstdc++/48891\n+\n+#include <math.h>\n+#include <cmath>\n+\n+using std::isinf;\n+using std::isnan;\n+\n+bool d1 = isinf(1.0);\n+bool d2 = isnan(1.0);"}]}