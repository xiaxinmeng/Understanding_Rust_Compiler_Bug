{"sha": "bed9e870f865f35c6411490c1e7bc137d389629b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVkOWU4NzBmODY1ZjM1YzY0MTE0OTBjMWU3YmMxMzdkMzg5NjI5Yg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-03-07T22:06:25Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2012-03-07T22:06:25Z"}, "message": "re PR target/52503 (sh-wrs-vxworks: too many target masks)\n\n\tPR target/52503\n\t* config/sh/sh.opt (msoft-atomic): Use Var instead of Mask.\n\t* config/sh/linux.h (TARGET_DEFAULT): Remove MASK_SOFT_ATOMIC.\n\t(SUBTARGET_OVERRIDE_OPTIONS): Define.\n\n\nCo-Authored-By: Kaz Kojima <kkojima@gcc.gnu.org>\n\nFrom-SVN: r185081", "tree": {"sha": "f5f8aa5f9fb0fa5c3f539acb0ccb158a924f56e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5f8aa5f9fb0fa5c3f539acb0ccb158a924f56e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bed9e870f865f35c6411490c1e7bc137d389629b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed9e870f865f35c6411490c1e7bc137d389629b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bed9e870f865f35c6411490c1e7bc137d389629b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed9e870f865f35c6411490c1e7bc137d389629b/comments", "author": null, "committer": null, "parents": [{"sha": "d111e30ef36f4c1f8e398fa48242eacb4b5da1b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d111e30ef36f4c1f8e398fa48242eacb4b5da1b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d111e30ef36f4c1f8e398fa48242eacb4b5da1b5"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "397ad1042b651b246e2f3e784f433dd331b79372", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed9e870f865f35c6411490c1e7bc137d389629b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed9e870f865f35c6411490c1e7bc137d389629b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bed9e870f865f35c6411490c1e7bc137d389629b", "patch": "@@ -1,3 +1,11 @@\n+2012-03-07  Oleg Endo  <olegendo@gcc.gnu.org>\n+\t    Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR target/52503\n+\t* config/sh/sh.opt (msoft-atomic): Use Var instead of Mask.\n+\t* config/sh/linux.h (TARGET_DEFAULT): Remove MASK_SOFT_ATOMIC.\n+\t(SUBTARGET_OVERRIDE_OPTIONS): Define.\n+\n 2012-03-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/predicates.md (x86_64_zext_general_operand): New."}, {"sha": "904a7823bf2a7616df845ec39c9a53ff219b11af", "filename": "gcc/config/sh/linux.h", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed9e870f865f35c6411490c1e7bc137d389629b/gcc%2Fconfig%2Fsh%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed9e870f865f35c6411490c1e7bc137d389629b/gcc%2Fconfig%2Fsh%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux.h?ref=bed9e870f865f35c6411490c1e7bc137d389629b", "patch": "@@ -1,5 +1,6 @@\n /* Definitions for SH running Linux-based GNU systems using ELF\n-   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2010, 2011\n+   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2010, 2011,\n+   2012\n    Free Software Foundation, Inc.\n    Contributed by Kazumoto Kojima <kkojima@rr.iij4u.or.jp>\n \n@@ -41,7 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT \\\n   (TARGET_CPU_DEFAULT | MASK_USERMODE | TARGET_ENDIAN_DEFAULT \\\n-   | TARGET_OPT_DEFAULT | MASK_SOFT_ATOMIC)\n+   | TARGET_OPT_DEFAULT)\n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack\n \n@@ -135,3 +136,13 @@ along with GCC; see the file COPYING3.  If not see\n /* Install the __sync libcalls.  */\n #undef TARGET_INIT_LIBFUNCS\n #define TARGET_INIT_LIBFUNCS  sh_init_sync_libfuncs\n+\n+#undef SUBTARGET_OVERRIDE_OPTIONS\n+#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      /* Defaulting to -msoft-atomic.  */\t\t\\\n+      if (global_options_set.x_TARGET_SOFT_ATOMIC == 0)\t\\\n+\tTARGET_SOFT_ATOMIC = 1;\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)"}, {"sha": "de23d5eb0b80484dbe09967b4f7246e5d7371fb3", "filename": "gcc/config/sh/sh.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed9e870f865f35c6411490c1e7bc137d389629b/gcc%2Fconfig%2Fsh%2Fsh.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed9e870f865f35c6411490c1e7bc137d389629b/gcc%2Fconfig%2Fsh%2Fsh.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.opt?ref=bed9e870f865f35c6411490c1e7bc137d389629b", "patch": "@@ -320,7 +320,7 @@ Target Mask(HITACHI) MaskExists\n Follow Renesas (formerly Hitachi) / SuperH calling conventions\n \n msoft-atomic\n-Target Report Mask(SOFT_ATOMIC)\n+Target Report Var(TARGET_SOFT_ATOMIC)\n Use software atomic sequences supported by kernel\n \n menable-tas"}]}