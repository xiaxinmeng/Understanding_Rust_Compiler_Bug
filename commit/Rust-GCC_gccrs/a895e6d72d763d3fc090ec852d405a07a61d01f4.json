{"sha": "a895e6d72d763d3fc090ec852d405a07a61d01f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg5NWU2ZDcyZDc2M2QzZmMwOTBlYzg1MmQ0MDVhMDdhNjFkMDFmNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2019-11-05T10:38:02Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-05T10:38:02Z"}, "message": "hsa-brig.c: Include alloc-pool.h\n\n\n\t* hsa-brig.c: Include alloc-pool.h\n\t* hsa-dump.c: Likewise.\n\t* hsa-gen.c: Likewise.\n\t* hse-regalloc.c: Likewise.\n\t* ipa-hsa.c: Likewise.\n\t* ipa-predicate.c: Likewise.\n\t* ipa-reference.c: Likewise.\n\t* ipa-sra.c: Likewise.\n\t* omp-expand.c: Likewise.\n\t* omp-general.c: Likewise.\n\t* omp-low.c: Likewise.\n\t* sumbol-summary.h (function_summary_base): Add allocator.\n\t(function_summary<T *>::function_summary): Update construction.\n\t(fast_function_summary<T *, V>::fast_function_summary): Likewise.\n\t(call_summary_base): Add allcator.\n\t(call_summary<T *>::call_summary): Update construction.\n\t(fast_call_summary<T *, V>::fast_call_summary): Likewise.\n\nFrom-SVN: r277821", "tree": {"sha": "13462c4162eec5805d855b1310222edd1d2fec61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13462c4162eec5805d855b1310222edd1d2fec61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a895e6d72d763d3fc090ec852d405a07a61d01f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a895e6d72d763d3fc090ec852d405a07a61d01f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a895e6d72d763d3fc090ec852d405a07a61d01f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a895e6d72d763d3fc090ec852d405a07a61d01f4/comments", "author": null, "committer": null, "parents": [{"sha": "f05b372429ba6fa6e2bba0f4145a11e8e4aee5cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f05b372429ba6fa6e2bba0f4145a11e8e4aee5cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f05b372429ba6fa6e2bba0f4145a11e8e4aee5cd"}], "stats": {"total": 70, "additions": 53, "deletions": 17}, "files": [{"sha": "cf4b36ff291729db42d45e6193ca24b1471267d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -1,3 +1,23 @@\n+2019-11-05  Jan Hubicka  <jh@suse.cz>\n+\n+\t* hsa-brig.c: Include alloc-pool.h\n+\t* hsa-dump.c: Likewise.\n+\t* hsa-gen.c: Likewise.\n+\t* hse-regalloc.c: Likewise.\n+\t* ipa-hsa.c: Likewise.\n+\t* ipa-predicate.c: Likewise.\n+\t* ipa-reference.c: Likewise.\n+\t* ipa-sra.c: Likewise.\n+\t* omp-expand.c: Likewise.\n+\t* omp-general.c: Likewise.\n+\t* omp-low.c: Likewise.\n+\t* sumbol-summary.h (function_summary_base): Add allocator.\n+\t(function_summary<T *>::function_summary): Update construction.\n+\t(fast_function_summary<T *, V>::fast_function_summary): Likewise.\n+\t(call_summary_base): Add allcator.\n+\t(call_summary<T *>::call_summary): Update construction.\n+\t(fast_call_summary<T *, V>::fast_call_summary): Likewise.\n+\n 2019-11-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/91945"}, {"sha": "14d5c52cc6f4d477b56b567e969367b38cb9fc08", "filename": "gcc/hsa-brig.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fhsa-brig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fhsa-brig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-brig.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -44,6 +44,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"dumpfile.h\"\n #include \"print-tree.h\"\n+#include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n #include \"hsa-common.h\"\n #include \"gomp-constants.h\""}, {"sha": "d91b474c02823b5239430f4cbfc120648f00a78c", "filename": "gcc/hsa-dump.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fhsa-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fhsa-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-dump.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -33,6 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-pretty-print.h\"\n #include \"cgraph.h\"\n #include \"print-tree.h\"\n+#include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n #include \"hsa-common.h\"\n "}, {"sha": "436f4c5f9f513de0c2da74f272552f812d10bbe5", "filename": "gcc/hsa-gen.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fhsa-gen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fhsa-gen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-gen.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -48,6 +48,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"cgraph.h\"\n #include \"print-tree.h\"\n+#include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n #include \"hsa-common.h\"\n #include \"cfghooks.h\""}, {"sha": "dd1937cdae822c37ec28c7cf1696c620dcf34545", "filename": "gcc/hsa-regalloc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fhsa-regalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fhsa-regalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-regalloc.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -35,6 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"print-tree.h\"\n #include \"cfghooks.h\"\n+#include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n #include \"hsa-common.h\"\n "}, {"sha": "369fe5a8de83edc73ab3f6d55d3f2915e331cdb0", "filename": "gcc/ipa-hsa.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fipa-hsa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fipa-hsa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-hsa.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -40,6 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"cgraph.h\"\n #include \"print-tree.h\"\n+#include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n #include \"hsa-common.h\"\n "}, {"sha": "f9ec7ab490c3ba225e678b5c18ed80ea6f12fedc", "filename": "gcc/ipa-predicate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fipa-predicate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fipa-predicate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-predicate.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -25,8 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cgraph.h\"\n #include \"tree-vrp.h\"\n-#include \"symbol-summary.h\"\n #include \"alloc-pool.h\"\n+#include \"symbol-summary.h\"\n #include \"ipa-prop.h\"\n #include \"ipa-fnsummary.h\"\n #include \"real.h\""}, {"sha": "6713e2b30db3dbaefd8344cfdc900d02f59bd006", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -48,6 +48,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"calls.h\"\n #include \"ipa-utils.h\"\n #include \"ipa-reference.h\"\n+#include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n \n /* The static variables defined within the compilation unit that are"}, {"sha": "aceb5c722ea64adc6c58c3eadd086294337e7abe", "filename": "gcc/ipa-sra.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fipa-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fipa-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -75,6 +75,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-walk.h\"\n #include \"tree-dfa.h\"\n #include \"tree-sra.h\"\n+#include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n #include \"params.h\"\n #include \"dbgcnt.h\""}, {"sha": "eadff6e50f86edcf07260dc0ab35758028e05073", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -52,6 +52,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"omp-general.h\"\n #include \"omp-offload.h\"\n #include \"tree-cfgcleanup.h\"\n+#include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n #include \"gomp-constants.h\"\n #include \"gimple-pretty-print.h\""}, {"sha": "72a0f20feeea53bb1e05be449c7ea58827a60c2e", "filename": "gcc/omp-general.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fomp-general.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fomp-general.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-general.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -37,6 +37,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"attribs.h\"\n #include \"gimplify.h\"\n #include \"cgraph.h\"\n+#include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n #include \"hsa-common.h\"\n #include \"tree-pass.h\""}, {"sha": "122f4278881310e4638e22838f56dc1970b024a9", "filename": "gcc/omp-low.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -52,6 +52,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"omp-low.h\"\n #include \"omp-grid.h\"\n #include \"gimple-low.h\"\n+#include \"alloc-pool.h\"\n #include \"symbol-summary.h\"\n #include \"tree-nested.h\"\n #include \"context.h\""}, {"sha": "d663cbb90fdd126cd0935c7e9673b36d39b87502", "filename": "gcc/symbol-summary.h", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fsymbol-summary.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a895e6d72d763d3fc090ec852d405a07a61d01f4/gcc%2Fsymbol-summary.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymbol-summary.h?ref=a895e6d72d763d3fc090ec852d405a07a61d01f4", "patch": "@@ -28,8 +28,10 @@ class function_summary_base\n {\n public:\n   /* Default construction takes SYMTAB as an argument.  */\n-  function_summary_base (symbol_table *symtab): m_symtab (symtab),\n-  m_insertion_enabled (true)\n+  function_summary_base (symbol_table *symtab CXX_MEM_STAT_INFO):\n+  m_symtab (symtab),\n+  m_insertion_enabled (true),\n+  allocator (\"function summary\" PASS_MEM_STAT)\n   {}\n \n   /* Basic implementation of insert operation.  */\n@@ -59,7 +61,8 @@ class function_summary_base\n   {\n     /* Call gcc_internal_because we do not want to call finalizer for\n        a type T.  We call dtor explicitly.  */\n-    return is_ggc () ? new (ggc_internal_alloc (sizeof (T))) T () : new T () ;\n+    return is_ggc () ? new (ggc_internal_alloc (sizeof (T))) T ()\n+\t\t     : allocator.allocate () ;\n   }\n \n   /* Release an item that is stored within map.  */\n@@ -71,7 +74,7 @@ class function_summary_base\n \tggc_free (item);\n       }\n     else\n-      delete item;\n+      allocator.remove (item);\n   }\n \n   /* Unregister all call-graph hooks.  */\n@@ -92,6 +95,7 @@ class function_summary_base\n private:\n   /* Return true when the summary uses GGC memory for allocation.  */\n   virtual bool is_ggc () = 0;\n+  object_allocator<T> allocator;\n };\n \n template <typename T>\n@@ -215,9 +219,8 @@ class GTY((user)) function_summary <T *>: public function_summary_base<T>\n template <typename T>\n function_summary<T *>::function_summary (symbol_table *symtab, bool ggc\n \t\t\t\t\t MEM_STAT_DECL):\n-  function_summary_base<T> (symtab), m_ggc (ggc), m_map (13, ggc, true,\n-\t\t\t\t\t\t\t GATHER_STATISTICS\n-\t\t\t\t\t\t\t PASS_MEM_STAT)\n+  function_summary_base<T> (symtab PASS_MEM_STAT), m_ggc (ggc),\n+  m_map (13, ggc, true, GATHER_STATISTICS PASS_MEM_STAT)\n {\n   this->m_symtab_insertion_hook\n     = this->m_symtab->add_cgraph_insertion_hook (function_summary::symtab_insertion,\n@@ -411,7 +414,7 @@ class GTY((user)) fast_function_summary <T *, V>\n \n template <typename T, typename V>\n fast_function_summary<T *, V>::fast_function_summary (symbol_table *symtab MEM_STAT_DECL):\n-  function_summary_base<T> (symtab), m_vector (NULL)\n+  function_summary_base<T> (symtab PASS_MEM_STAT), m_vector (NULL)\n {\n   vec_alloc (m_vector, 13 PASS_MEM_STAT);\n   this->m_symtab_insertion_hook\n@@ -531,8 +534,10 @@ class call_summary_base\n {\n public:\n   /* Default construction takes SYMTAB as an argument.  */\n-  call_summary_base (symbol_table *symtab): m_symtab (symtab),\n-  m_initialize_when_cloning (false)\n+  call_summary_base (symbol_table *symtab CXX_MEM_STAT_INFO):\n+  m_symtab (symtab),\n+  m_initialize_when_cloning (false),\n+  allocator (\"call summary\" PASS_MEM_STAT)\n   {}\n \n   /* Basic implementation of removal operation.  */\n@@ -547,7 +552,8 @@ class call_summary_base\n   {\n     /* Call gcc_internal_because we do not want to call finalizer for\n        a type T.  We call dtor explicitly.  */\n-    return is_ggc () ? new (ggc_internal_alloc (sizeof (T))) T () : new T () ;\n+    return is_ggc () ? new (ggc_internal_alloc (sizeof (T))) T ()\n+\t\t     : allocator.allocate ();\n   }\n \n   /* Release an item that is stored within map.  */\n@@ -559,7 +565,7 @@ class call_summary_base\n \tggc_free (item);\n       }\n     else\n-      delete item;\n+      allocator.remove (item);\n   }\n \n   /* Unregister all call-graph hooks.  */\n@@ -578,6 +584,7 @@ class call_summary_base\n private:\n   /* Return true when the summary uses GGC memory for allocation.  */\n   virtual bool is_ggc () = 0;\n+  object_allocator<T> allocator;\n };\n \n template <typename T>\n@@ -607,9 +614,8 @@ class GTY((user)) call_summary <T *>: public call_summary_base<T>\n   /* Default construction takes SYMTAB as an argument.  */\n   call_summary (symbol_table *symtab, bool ggc = false\n \t\tCXX_MEM_STAT_INFO)\n-  : call_summary_base<T> (symtab), m_ggc (ggc), m_map (13, ggc, true,\n-\t\t\t\t\t\t       GATHER_STATISTICS\n-\t\t\t\t\t\t       PASS_MEM_STAT)\n+  : call_summary_base<T> (symtab PASS_MEM_STAT), m_ggc (ggc),\n+    m_map (13, ggc, true, GATHER_STATISTICS PASS_MEM_STAT)\n   {\n     this->m_symtab_removal_hook\n       = this->m_symtab->add_edge_removal_hook (call_summary::symtab_removal,\n@@ -775,7 +781,7 @@ class GTY((user)) fast_call_summary <T *, V>: public call_summary_base<T>\n public:\n   /* Default construction takes SYMTAB as an argument.  */\n   fast_call_summary (symbol_table *symtab CXX_MEM_STAT_INFO)\n-  : call_summary_base<T> (symtab), m_vector (NULL)\n+  : call_summary_base<T> (symtab PASS_MEM_STAT), m_vector (NULL)\n   {\n     vec_alloc (m_vector, 13 PASS_MEM_STAT);\n     this->m_symtab_removal_hook"}]}