{"sha": "27d54b2a6c18ef1ae50f1a5b432d590438445b90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdkNTRiMmE2YzE4ZWYxYWU1MGYxYTViNDMyZDU5MDQzODQ0NWI5MA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2003-10-20T18:37:22Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2003-10-20T18:37:22Z"}, "message": "ffi.c: Use _ABIN32, _ABIO32 instead of external _MIPS_SIM_NABI32, _MIPS_SIM_ABI32.\n\n\tlibffi:\n\t* src/mips/ffi.c: Use _ABIN32, _ABIO32 instead of external\n\t_MIPS_SIM_NABI32, _MIPS_SIM_ABI32.\n\n\tlibstdc++-v3:\n\t* config/cpu/mips/atomicity.h (__atomic_add): Use _ABIO32 instead\n\tof external _MIPS_SIM_ABI32.\n\n\tboehm-gc:\n\t* mips_sgi_mach_dep.s: Use _ABIO32 instead of external\n\t_MIPS_SIM_ABI32.\n\n\tgcc:\n\t* config/mips/linux.h (TARGET_OS_CPP_BUILTINS): Define _ABIO32.\n\tUse it in _MIPS_SIM definition.\n\t* config/mips/mips.h (CRT_CALL_STATIC_FUNCTION): Likewise.\n\nFrom-SVN: r72713", "tree": {"sha": "13e03635b2317c29fc21a0e32a7788d86cf843a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13e03635b2317c29fc21a0e32a7788d86cf843a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27d54b2a6c18ef1ae50f1a5b432d590438445b90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d54b2a6c18ef1ae50f1a5b432d590438445b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d54b2a6c18ef1ae50f1a5b432d590438445b90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d54b2a6c18ef1ae50f1a5b432d590438445b90/comments", "author": null, "committer": null, "parents": [{"sha": "480feac0238a176178fb76a7ef2e0690ca74022c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/480feac0238a176178fb76a7ef2e0690ca74022c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/480feac0238a176178fb76a7ef2e0690ca74022c"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "5f5c2c0a2c42400cf7e9952e14d507da3029920a", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d54b2a6c18ef1ae50f1a5b432d590438445b90/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d54b2a6c18ef1ae50f1a5b432d590438445b90/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=27d54b2a6c18ef1ae50f1a5b432d590438445b90", "patch": "@@ -1,3 +1,8 @@\n+2003-10-20  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* mips_sgi_mach_dep.s: Use _ABIO32 instead of external\n+\t_MIPS_SIM_ABI32.\n+\n 2003-10-18  Alan Modra  <amodra@bigpond.net.au>\n \n \t* include/private/gcconfig.h (ALIGNMENT <powerpc linux>): Remove"}, {"sha": "cadacf5ed4d8888bec58bc8d9fd72041f51b574a", "filename": "boehm-gc/mips_sgi_mach_dep.s", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d54b2a6c18ef1ae50f1a5b432d590438445b90/boehm-gc%2Fmips_sgi_mach_dep.s", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d54b2a6c18ef1ae50f1a5b432d590438445b90/boehm-gc%2Fmips_sgi_mach_dep.s", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fmips_sgi_mach_dep.s?ref=27d54b2a6c18ef1ae50f1a5b432d590438445b90", "patch": "@@ -24,7 +24,7 @@\n #   endif\n     SAVE_GP(GPOFF)\n     REG_S \tra,RAOFF(sp)\n-#   if (_MIPS_SIM == _MIPS_SIM_ABI32)\n+#   if (_MIPS_SIM == _ABIO32)\n     \tcall_push($2)\n     \tcall_push($3)\n #   endif"}, {"sha": "6219b2897472510b30ca5db12a46ca7b2f1b194f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d54b2a6c18ef1ae50f1a5b432d590438445b90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d54b2a6c18ef1ae50f1a5b432d590438445b90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27d54b2a6c18ef1ae50f1a5b432d590438445b90", "patch": "@@ -1,3 +1,9 @@\n+2003-10-20  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* config/mips/linux.h (TARGET_OS_CPP_BUILTINS): Define _ABIO32.\n+\tUse it in _MIPS_SIM definition.\n+\t* config/mips/mips.h (CRT_CALL_STATIC_FUNCTION): Likewise.\n+\n 2003-10-20  Zack Weinberg  <zack@codesourcery.com>\n \n \t* config/i386/i386.c (print_reg): Abort if REGNO (x) is a"}, {"sha": "1785a147036d5d09bd76200a573d2225b73ab490", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d54b2a6c18ef1ae50f1a5b432d590438445b90/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d54b2a6c18ef1ae50f1a5b432d590438445b90/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=27d54b2a6c18ef1ae50f1a5b432d590438445b90", "patch": "@@ -81,7 +81,8 @@ Boston, MA 02111-1307, USA.  */\n       }\t\t\t\t\t\t\t\t\\\n      else\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n-        builtin_define (\"_MIPS_SIM=_MIPS_SIM_ABI32\");\t\t\\\n+\tbuiltin_define (\"_ABIO32=1\");\t\t\t\\\n+\tbuiltin_define (\"_MIPS_SIM=_ABIO32\");\t\t\\\n         builtin_define (\"_MIPS_SZLONG=32\");\t\t\t\\\n         builtin_define (\"_MIPS_SZPTR=32\");\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\"}, {"sha": "1b51913a0221598ac04d1a2c2b120df488b2531d", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d54b2a6c18ef1ae50f1a5b432d590438445b90/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d54b2a6c18ef1ae50f1a5b432d590438445b90/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=27d54b2a6c18ef1ae50f1a5b432d590438445b90", "patch": "@@ -3465,7 +3465,7 @@ while (0)\n    we need to load our GP.  We don't preserve $gp or $ra, since each\n    init/fini chunk is supposed to initialize $gp, and crti/crtn\n    already take care of preserving $ra and, when appropriate, $gp.  */\n-#if _MIPS_SIM == _MIPS_SIM_ABI32\n+#if (defined _ABIO32 && _MIPS_SIM == _ABIO32)\n #define CRT_CALL_STATIC_FUNCTION(SECTION_OP, FUNC)\t\\\n    asm (SECTION_OP \"\\n\\\n \t.set noreorder\\n\\"}, {"sha": "7d553b7fede1b2f1e508b9eef31c36ad22897bc8", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d54b2a6c18ef1ae50f1a5b432d590438445b90/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d54b2a6c18ef1ae50f1a5b432d590438445b90/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=27d54b2a6c18ef1ae50f1a5b432d590438445b90", "patch": "@@ -1,3 +1,8 @@\n+2003-10-20  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* src/mips/ffi.c: Use _ABIN32, _ABIO32 instead of external\n+\t_MIPS_SIM_NABI32, _MIPS_SIM_ABI32.\n+\n 2003-10-19  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* src/powerpc/ffi_darwin.c (ffi_prep_args): Declare bytes again."}, {"sha": "01ad20e4c0dd9efd45d3656ffd4c3f33ea4d6627", "filename": "libffi/src/mips/ffi.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d54b2a6c18ef1ae50f1a5b432d590438445b90/libffi%2Fsrc%2Fmips%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d54b2a6c18ef1ae50f1a5b432d590438445b90/libffi%2Fsrc%2Fmips%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fffi.c?ref=27d54b2a6c18ef1ae50f1a5b432d590438445b90", "patch": "@@ -29,7 +29,7 @@\n \n #include <stdlib.h>\n \n-#if _MIPS_SIM == _MIPS_SIM_NABI32\n+#if _MIPS_SIM == _ABIN32\n #define FIX_ARGP \\\n FFI_ASSERT(argp <= &stack[bytes]); \\\n if (argp == &stack[bytes]) \\\n@@ -55,7 +55,7 @@ static void ffi_prep_args(char *stack,\n   register char *argp;\n   register ffi_type **p_arg;\n \n-#if _MIPS_SIM == _MIPS_SIM_NABI32\n+#if _MIPS_SIM == _ABIN32\n   /* If more than 8 double words are used, the remainder go\n      on the stack. We reorder stuff on the stack here to \n      support this easily. */\n@@ -69,7 +69,7 @@ static void ffi_prep_args(char *stack,\n \n   memset(stack, 0, bytes);\n \n-#if _MIPS_SIM == _MIPS_SIM_NABI32\n+#if _MIPS_SIM == _ABIN32\n   if ( ecif->cif->rstruct_flag != 0 )\n #else\n   if ( ecif->cif->rtype->type == FFI_TYPE_STRUCT )\n@@ -92,7 +92,7 @@ static void ffi_prep_args(char *stack,\n \tFIX_ARGP;\n       }\n \n-#if _MIPS_SIM == _MIPS_SIM_ABI32\n+#if _MIPS_SIM == _ABIO32\n #define OFFSET 0\n #else\n #define OFFSET sizeof(int)\n@@ -146,7 +146,7 @@ static void ffi_prep_args(char *stack,\n \t    }\n \t  else\n \t    {\n-#if _MIPS_SIM == _MIPS_SIM_ABI32\t      \n+#if _MIPS_SIM == _ABIO32\t      \n \t      memcpy(argp, *p_argv, z);\n #else\n \t      {\n@@ -178,7 +178,7 @@ static void ffi_prep_args(char *stack,\n   return;\n }\n \n-#if _MIPS_SIM == _MIPS_SIM_NABI32\n+#if _MIPS_SIM == _ABIN32\n \n /* The n32 spec says that if \"a chunk consists solely of a double \n    float field (but not a double, which is part of a union), it\n@@ -267,7 +267,7 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n {\n   cif->flags = 0;\n \n-#if _MIPS_SIM == _MIPS_SIM_ABI32\n+#if _MIPS_SIM == _ABIO32\n   /* Set the flags necessary for O32 processing */\n \n   if (cif->rtype->type != FFI_TYPE_STRUCT)\n@@ -322,7 +322,7 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n     }\n #endif\n \n-#if _MIPS_SIM == _MIPS_SIM_NABI32\n+#if _MIPS_SIM == _ABIN32\n   /* Set the flags necessary for N32 processing */\n   {\n     unsigned shift = 0;\n@@ -441,14 +441,14 @@ void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n     \n   switch (cif->abi) \n     {\n-#if _MIPS_SIM == _MIPS_SIM_ABI32\n+#if _MIPS_SIM == _ABIO32\n     case FFI_O32:\n       ffi_call_O32(ffi_prep_args, &ecif, cif->bytes, \n \t\t   cif->flags, ecif.rvalue, fn);\n       break;\n #endif\n \n-#if _MIPS_SIM == _MIPS_SIM_NABI32\n+#if _MIPS_SIM == _ABIN32\n     case FFI_N32:\n       ffi_call_N32(ffi_prep_args, &ecif, cif->bytes, \n \t\t   cif->flags, ecif.rvalue, fn);"}, {"sha": "b93dac9bb370145bde7f51cfe60fb98c158d9723", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d54b2a6c18ef1ae50f1a5b432d590438445b90/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d54b2a6c18ef1ae50f1a5b432d590438445b90/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=27d54b2a6c18ef1ae50f1a5b432d590438445b90", "patch": "@@ -1,3 +1,8 @@\n+2003-10-20  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* config/cpu/mips/atomicity.h (__atomic_add): Use _ABIO32 instead\n+\tof external _MIPS_SIM_ABI32.\n+\n 2003-10-20  Phil Edwards  <phil@codesourcery.com>\n \n \t* configure.ac:  Fix comment typo."}, {"sha": "f24b059b8e9dbf81993ccde827d82a80c19ec977", "filename": "libstdc++-v3/config/cpu/mips/atomicity.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d54b2a6c18ef1ae50f1a5b432d590438445b90/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d54b2a6c18ef1ae50f1a5b432d590438445b90/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fatomicity.h?ref=27d54b2a6c18ef1ae50f1a5b432d590438445b90", "patch": "@@ -42,7 +42,7 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n     (\"/* Inline exchange & add */\\n\\t\"\n      \"1:\\n\\t\"\n      \".set\tpush\\n\\t\"\n-#if _MIPS_SIM == _MIPS_SIM_ABI32\n+#if _MIPS_SIM == _ABIO32\n      \".set\tmips2\\n\\t\"\n #endif\n      \"ll\t%0,%3\\n\\t\"\n@@ -68,7 +68,7 @@ __atomic_add (volatile _Atomic_word *__mem, int __val)\n     (\"/* Inline atomic add */\\n\\t\"\n      \"1:\\n\\t\"\n      \".set\tpush\\n\\t\"\n-#if _MIPS_SIM == _MIPS_SIM_ABI32\n+#if _MIPS_SIM == _ABIO32\n      \".set\tmips2\\n\\t\"\n #endif\n      \"ll\t%0,%2\\n\\t\""}]}