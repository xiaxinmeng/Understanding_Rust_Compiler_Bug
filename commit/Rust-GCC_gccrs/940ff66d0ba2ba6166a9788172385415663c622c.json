{"sha": "940ff66d0ba2ba6166a9788172385415663c622c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQwZmY2NmQwYmEyYmE2MTY2YTk3ODgxNzIzODU0MTU2NjNjNjIyYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-01-27T20:33:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-01-27T20:33:54Z"}, "message": "c-typeck.c (struct constructor_stack): Add range_stack member.\n\n\t* c-typeck.c (struct constructor_stack): Add range_stack member.\n\t(really_start_incremental_init): Clear it.\n\t(push_init_level): Save constructor_range_stack and clear it if\n\tpushing explicit braces.\n\t(pop_init_level): abort if constructor_range_stack is non-zero at\n\texplicit closing brace.  Restore saved constructor_range_stack if\n\tnot implicit.\n\n\t* gcc.dg/gnu99-init-1.c: Add 3 more designated range initializer\n\ttests.\n\nFrom-SVN: r39302", "tree": {"sha": "0fab0c3de38f363189bc2aeb562cad8a557ac642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fab0c3de38f363189bc2aeb562cad8a557ac642"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/940ff66d0ba2ba6166a9788172385415663c622c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/940ff66d0ba2ba6166a9788172385415663c622c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/940ff66d0ba2ba6166a9788172385415663c622c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/940ff66d0ba2ba6166a9788172385415663c622c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de1b33ddc0675f85ca11c28c735408794d133803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1b33ddc0675f85ca11c28c735408794d133803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de1b33ddc0675f85ca11c28c735408794d133803"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "74627719449302e73863d6c686c85669eb7858e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/940ff66d0ba2ba6166a9788172385415663c622c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/940ff66d0ba2ba6166a9788172385415663c622c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=940ff66d0ba2ba6166a9788172385415663c622c", "patch": "@@ -1,3 +1,13 @@\n+2001-01-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-typeck.c (struct constructor_stack): Add range_stack member.\n+\t(really_start_incremental_init): Clear it.\n+\t(push_init_level): Save constructor_range_stack and clear it if\n+\tpushing explicit braces.\n+\t(pop_init_level): abort if constructor_range_stack is non-zero at\n+\texplicit closing brace.  Restore saved constructor_range_stack if\n+\tnot implicit.\n+\n 2001-01-27  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* expr.c (emit_move_insn): Add REG_EQUAL note when constant loaded"}, {"sha": "2b769815a2d1c39168d4a05e1f7a6713c5197f1f", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/940ff66d0ba2ba6166a9788172385415663c622c/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/940ff66d0ba2ba6166a9788172385415663c622c/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=940ff66d0ba2ba6166a9788172385415663c622c", "patch": "@@ -4954,6 +4954,8 @@ static int designator_errorneous;\n    structuring in the initializer, including the outermost one.  It\n    saves the values of most of the variables above.  */\n \n+struct constructor_range_stack;\n+\n struct constructor_stack\n {\n   struct constructor_stack *next;\n@@ -4965,12 +4967,13 @@ struct constructor_stack\n   tree unfilled_fields;\n   tree bit_index;\n   tree elements;\n-  int offset;\n   struct init_node *pending_elts;\n+  int offset;\n   int depth;\n   /* If nonzero, this value should replace the entire\n      constructor at this level.  */\n   tree replacement_value;\n+  struct constructor_range_stack *range_stack;\n   char constant;\n   char simple;\n   char implicit;\n@@ -5159,6 +5162,7 @@ really_start_incremental_init (type)\n   p->depth = constructor_depth;\n   p->replacement_value = 0;\n   p->implicit = 0;\n+  p->range_stack = 0;\n   p->outer = 0;\n   p->incremental = constructor_incremental;\n   p->next = 0;\n@@ -5272,6 +5276,7 @@ push_init_level (implicit)\n   p->outer = 0;\n   p->incremental = constructor_incremental;\n   p->next = constructor_stack;\n+  p->range_stack = 0;\n   constructor_stack = p;\n \n   constructor_constant = 1;\n@@ -5282,6 +5287,8 @@ push_init_level (implicit)\n   constructor_pending_elts = 0;\n   if (!implicit)\n     {\n+      p->range_stack = constructor_range_stack;\n+      constructor_range_stack = 0;\n       designator_depth = 0;\n       designator_errorneous = 0;\n     }\n@@ -5404,6 +5411,9 @@ pop_init_level (implicit)\n \t pop any inner levels that didn't have explicit braces.  */\n       while (constructor_stack->implicit)\n \tprocess_init_element (pop_init_level (1));\n+\n+      if (constructor_range_stack)\n+\tabort ();\n     }\n \n   p = constructor_stack;\n@@ -5531,6 +5541,8 @@ pop_init_level (implicit)\n   constructor_incremental = p->incremental;\n   constructor_pending_elts = p->pending_elts;\n   constructor_depth = p->depth;\n+  if (!p->implicit)\n+    constructor_range_stack = p->range_stack;\n   RESTORE_SPELLING_DEPTH (constructor_depth);\n \n   constructor_stack = p->next;"}, {"sha": "fbfbe8ec842ce3e5c948011e472cc98ea82168d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/940ff66d0ba2ba6166a9788172385415663c622c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/940ff66d0ba2ba6166a9788172385415663c622c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=940ff66d0ba2ba6166a9788172385415663c622c", "patch": "@@ -1,3 +1,8 @@\n+2001-01-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/gnu99-init-1.c: Add 3 more designated range initializer\n+\ttests.\n+\n 2001-01-25  Jeffrey Oldham  <oldham@codesourcery.com>\n \n \t* gcc.c-torture/execute/ieee/20000320-1.c (main): For MIPS, change"}, {"sha": "9c22c90103b6969545e94ae487d6d72ead9729eb", "filename": "gcc/testsuite/gcc.dg/gnu99-init-1.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/940ff66d0ba2ba6166a9788172385415663c622c/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu99-init-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/940ff66d0ba2ba6166a9788172385415663c622c/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu99-init-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu99-init-1.c?ref=940ff66d0ba2ba6166a9788172385415663c622c", "patch": "@@ -19,6 +19,11 @@ struct H m = { .J = {}, 3 };\n struct I { int J; int K[3]; int L; };\n struct M { int N; struct I O[3]; int P; };\n struct M n[] = { [0 ... 5].O[1 ... 2].K[0 ... 1] = 4, 5, 6, 7 };\n+struct M o[] = { [0 ... 5].O = { [1 ... 2].K[0 ... 1] = 4 },\n+\t\t [5].O[2].K[2] = 5, 6, 7 };\n+struct M p[] = { [0 ... 5].O[1 ... 2].K = { [0 ... 1] = 4 },\n+\t\t [5].O[2].K[2] = 5, 6, 7 };\n+int q[3][3] = { [0 ... 1] = { [1 ... 2] = 23 }, [1][2] = 24 };\n \n int main (void)\n {\n@@ -58,5 +63,15 @@ int main (void)\n     }\n   if (n[5].O[2].K[2] != 5 || n[5].O[2].L != 6 || n[5].P != 7)\n     abort ();\n+  if (memcmp (n, o, sizeof (n)) || sizeof (n) != sizeof (o))\n+    abort ();\n+  if (memcmp (n, p, sizeof (n)) || sizeof (n) != sizeof (p))\n+    abort ();\n+  if (q[0][0] || q[0][1] != 23 || q[0][2] != 23)\n+    abort ();\n+  if (q[1][0] || q[1][1] != 23 || q[1][2] != 24)\n+    abort ();\n+  if (q[2][0] || q[2][1] || q[2][2])\n+    abort ();\n   exit (0);\n }"}]}