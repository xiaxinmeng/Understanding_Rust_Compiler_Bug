{"sha": "9f3dbd92d22772fead769678ce0d326a5e74e0f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYzZGJkOTJkMjI3NzJmZWFkNzY5Njc4Y2UwZDMyNmE1ZTc0ZTBmMw==", "commit": {"author": {"name": "Roman Lechtchinsky", "email": "rl@cs.tu-berlin.de", "date": "2002-05-22T20:57:15Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2002-05-22T20:57:15Z"}, "message": "configure.in: Fix typo in the code checking for sys_errlist.\n\n* configure.in: Fix typo in the code checking for sys_errlist.\n* configure: Regenerated.\n\nFrom-SVN: r53747", "tree": {"sha": "058658d20d6508c0ba67b3de3ae2b783eae81298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/058658d20d6508c0ba67b3de3ae2b783eae81298"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f3dbd92d22772fead769678ce0d326a5e74e0f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3dbd92d22772fead769678ce0d326a5e74e0f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f3dbd92d22772fead769678ce0d326a5e74e0f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3dbd92d22772fead769678ce0d326a5e74e0f3/comments", "author": null, "committer": null, "parents": [{"sha": "19f71cd70f56591f6971f9d592d1f883f4dd7ac4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19f71cd70f56591f6971f9d592d1f883f4dd7ac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19f71cd70f56591f6971f9d592d1f883f4dd7ac4"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "cd112f9875a28b450b8987be6e31dfe3bbace757", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3dbd92d22772fead769678ce0d326a5e74e0f3/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3dbd92d22772fead769678ce0d326a5e74e0f3/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=9f3dbd92d22772fead769678ce0d326a5e74e0f3", "patch": "@@ -1,3 +1,8 @@\n+2002-05-22  Roman Lechtchinsky  <rl@cs.tu-berlin.de>\n+\n+\t* configure.in: Fix typo in the code checking for sys_errlist.\n+\t* configure: Regenerated.\n+\n 2002-05-13  Andreas Schwab  <schwab@suse.de>\n \n \t* config.table: Use mh-x86pic also for x86-64."}, {"sha": "7f2c0a931a3d6c9c18ee9eea7b1d1b56444b33ad", "filename": "libiberty/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3dbd92d22772fead769678ce0d326a5e74e0f3/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3dbd92d22772fead769678ce0d326a5e74e0f3/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=9f3dbd92d22772fead769678ce0d326a5e74e0f3", "patch": "@@ -2860,7 +2860,7 @@ else\n #include \"confdefs.h\"\n int *p;\n int main() {\n-extern int $v []; p = &$v;\n+extern int $v []; p = $v;\n ; return 0; }\n EOF\n if { (eval echo configure:2867: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then"}, {"sha": "c84ece4ef41ba45435999145c2fd7040e2ae9dcc", "filename": "libiberty/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3dbd92d22772fead769678ce0d326a5e74e0f3/libiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3dbd92d22772fead769678ce0d326a5e74e0f3/libiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.in?ref=9f3dbd92d22772fead769678ce0d326a5e74e0f3", "patch": "@@ -401,7 +401,7 @@ if test -z \"${setobjs}\"; then\n   for v in $vars; do\n     AC_MSG_CHECKING([for $v])\n     AC_CACHE_VAL(libiberty_cv_var_$v,\n-      [AC_TRY_LINK([int *p;], [extern int $v []; p = &$v;],\n+      [AC_TRY_LINK([int *p;], [extern int $v []; p = $v;],\n \t\t   [eval \"libiberty_cv_var_$v=yes\"],\n \t\t   [eval \"libiberty_cv_var_$v=no\"])])\n     if eval \"test \\\"`echo '$libiberty_cv_var_'$v`\\\" = yes\"; then"}]}