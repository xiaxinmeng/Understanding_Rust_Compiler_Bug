{"sha": "8751a35c5340b87f372eddca038e75e28ed50bb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc1MWEzNWM1MzQwYjg3ZjM3MmVkZGNhMDM4ZTc1ZTI4ZWQ1MGJiOQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-11-04T11:00:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-11-04T11:00:33Z"}, "message": "sem_prag.adb: Minor reformatting.\n\n2011-11-04  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb: Minor reformatting.\n\t* gnat_rm.texi: Update documentation for pragma Warnings (Off,\n\t\"***\") usage.\n\t* exp_ch2.adb (Expand_Entity_Reference): Only set\n\tAtomic_Sync_Required on entities that are variables. Doesn't\n\tmake any sense on anything else.\n\nFrom-SVN: r180939", "tree": {"sha": "58fa7118237046ff85f0d87d8bae833f0bdac0be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58fa7118237046ff85f0d87d8bae833f0bdac0be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8751a35c5340b87f372eddca038e75e28ed50bb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8751a35c5340b87f372eddca038e75e28ed50bb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8751a35c5340b87f372eddca038e75e28ed50bb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8751a35c5340b87f372eddca038e75e28ed50bb9/comments", "author": null, "committer": null, "parents": [{"sha": "fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "fc3e12bc94bf3ece6a851750c2a722dde12160d0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8751a35c5340b87f372eddca038e75e28ed50bb9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8751a35c5340b87f372eddca038e75e28ed50bb9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8751a35c5340b87f372eddca038e75e28ed50bb9", "patch": "@@ -1,3 +1,12 @@\n+2011-11-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb: Minor reformatting.\n+\t* gnat_rm.texi: Update documentation for pragma Warnings (Off,\n+\t\"***\") usage.\n+\t* exp_ch2.adb (Expand_Entity_Reference): Only set\n+\tAtomic_Sync_Required on entities that are variables. Doesn't\n+\tmake any sense on anything else.\n+\n 2011-11-04  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch2.adb (Expand_Entity_Reference): Extend handling of"}, {"sha": "a1337aa725deebfecc5e1f463bb2e3b1fd26ca6e", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8751a35c5340b87f372eddca038e75e28ed50bb9/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8751a35c5340b87f372eddca038e75e28ed50bb9/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=8751a35c5340b87f372eddca038e75e28ed50bb9", "patch": "@@ -402,6 +402,7 @@ package body Exp_Ch2 is\n       --  Set Atomic_Sync_Required if necessary for atomic variable\n \n       if Nkind_In (N, N_Identifier, N_Expanded_Name)\n+        and then Ekind (E) = E_Variable\n         and then (Is_Atomic (E) or else Is_Atomic (Etype (E)))\n       then\n          declare"}, {"sha": "170a9128dd745d25bb42e616bc5160e00e09cbf2", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8751a35c5340b87f372eddca038e75e28ed50bb9/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8751a35c5340b87f372eddca038e75e28ed50bb9/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=8751a35c5340b87f372eddca038e75e28ed50bb9", "patch": "@@ -5575,7 +5575,7 @@ as possibly modified by compiler switches. Then each pragma Warning\n modifies this set of warnings as specified. This form of the pragma may\n also be used as a configuration pragma.\n \n-The fourth form, with an On|Off parameter and a string, is used to\n+The fourth form, with an @code{On|Off} parameter and a string, is used to\n control individual messages, based on their text. The string argument\n is a pattern that is used to match against the text of individual\n warning messages (not including the initial \"warning: \" tag).\n@@ -5587,7 +5587,7 @@ message @code{warning: 960 bits of \"a\" unused}. No other regular\n expression notations are permitted. All characters other than asterisk in\n these three specific cases are treated as literal characters in the match.\n \n-There are two ways to use this pragma. The OFF form can be used as a\n+There are two ways to use the pragma in this form. The OFF form can be used as a\n configuration pragma. The effect is to suppress all warnings (if any)\n that match the pattern string throughout the compilation.\n \n@@ -5604,6 +5604,13 @@ pragma Warnings (On, Pattern);\n In this usage, the pattern string must match in the Off and On pragmas,\n and at least one matching warning must be suppressed.\n \n+Note: to write a string that will match any warning, use the string\n+@code{\"***\"}. It will not work to use a single asterisk or two asterisks\n+since this looks like an operator name. This form with three asterisks\n+is similar in effect to specifying @code{pragma Warnings (Off)} except that a\n+matching @code{pragma Warnings (On, \"***\")} will be required. This can be\n+helpful in avoiding forgetting to turn warnings back on.\n+\n Note: the debug flag -gnatd.i (@code{/NOWARNINGS_PRAGMAS} in VMS) can be\n used to cause the compiler to entirely ignore all WARNINGS pragmas. This can\n be useful in checking whether obsolete pragmas in existing programs are hiding"}, {"sha": "e4c02d5adc4055b73e5451d6564414a1c1bb7e37", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8751a35c5340b87f372eddca038e75e28ed50bb9/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8751a35c5340b87f372eddca038e75e28ed50bb9/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=8751a35c5340b87f372eddca038e75e28ed50bb9", "patch": "@@ -14395,7 +14395,7 @@ package body Sem_Prag is\n                      --  actual is a conversion. Retrieve the real entity name.\n \n                      if (In_Instance_Body\n-                         or else In_Inlined_Body)\n+                          or else In_Inlined_Body)\n                        and then Nkind (E_Id) = N_Unchecked_Type_Conversion\n                      then\n                         E_Id := Expression (E_Id);"}]}