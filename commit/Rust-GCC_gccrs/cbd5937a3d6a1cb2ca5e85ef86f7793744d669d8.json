{"sha": "cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JkNTkzN2EzZDZhMWNiMmNhNWU4NWVmODZmNzc5Mzc0NGQ2NjlkOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-01-11T00:08:45Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-01-11T00:08:45Z"}, "message": "c-common.h (CTI_VOID_LIST): Remove.\n\n\t* c-common.h (CTI_VOID_LIST): Remove.\n\t(void_list_node): Likewise.\n\t* tree.h (TI_VOID_LIST_NODE): New enumeral.\n\t(void_list_node): New macro.\n\t* config/arm/arm.c (arm_init_builtins): Use void_list_node.\n\t* config/i386/i386.c (ix86_init_builtins): Likewise.\n\t* config/ia64a/ia64.c (ia64_init_builtins): Likewise.\n\n\t* class.c (finish_struct_1):  Remove last argument in call to\n\tmake_decl_rtl; use make_function_rtl instead of make_decl_rtl.\n\t* decl.c (builtin_function): Likewise.\n\t(build_cp_library_fn): Likewise.\n\t(check_initializer): Likewise.\n\t(make_rtl_for_nonlocal_decl): Likewise.\n\t(cp_finish_decl): Likewise.\n\t(start_function): Likewise.\n\t* decl2.c (finish_anon_union): Likewise.\n\t* friend.c (do_friend): Likewise.\n\t* init.c (build_java_class_ref): Likewise.\n\t* method.c (make_thunk): Likewise.\n\t* pt.c (tsubst_friend_function): Likewise.\n\t* semantics.c (expand_body): Likewise.\n\nFrom-SVN: r38887", "tree": {"sha": "f150c0d0016913715fc3aa21c3fe6ff2ab27eb29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f150c0d0016913715fc3aa21c3fe6ff2ab27eb29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/comments", "author": null, "committer": null, "parents": [{"sha": "d0be7718ed07a29a3cf6307101fc26c6f2a482fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0be7718ed07a29a3cf6307101fc26c6f2a482fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0be7718ed07a29a3cf6307101fc26c6f2a482fb"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "38524d0ac731edd2fbca6c56425b82683435e89d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "patch": "@@ -1,3 +1,13 @@\n+2001-01-10  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* c-common.h (CTI_VOID_LIST): Remove.\n+\t(void_list_node): Likewise.\n+\t* tree.h (TI_VOID_LIST_NODE): New enumeral.\n+\t(void_list_node): New macro.\n+\t* config/arm/arm.c (arm_init_builtins): Use void_list_node.\n+\t* config/i386/i386.c (ix86_init_builtins): Likewise.\n+\t* config/ia64a/ia64.c (ia64_init_builtins): Likewise.\n+\n 2001-01-10  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * Makefile.in (tradcpp0): Depend on mkdeps.h.  Link mkdeps.o"}, {"sha": "9ea2c6305ae96b89638d76f3a33bb7bdc2973109", "filename": "gcc/c-common.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "patch": "@@ -143,7 +143,6 @@ enum c_tree_index\n     CTI_C_BOOL_TRUE,\n     CTI_C_BOOL_FALSE,\n     CTI_DEFAULT_FUNCTION_TYPE,\n-    CTI_VOID_LIST,\n \n     CTI_VOID_FTYPE,\n     CTI_VOID_FTYPE_PTR,\n@@ -192,7 +191,6 @@ enum c_tree_index\n #define const_string_type_node\t\tc_global_trees[CTI_CONST_STRING_TYPE]\n \n #define default_function_type\t\tc_global_trees[CTI_DEFAULT_FUNCTION_TYPE]\n-#define void_list_node\t\t\tc_global_trees[CTI_VOID_LIST]\n #define void_ftype\t\t\tc_global_trees[CTI_VOID_FTYPE]\n #define void_ftype_ptr\t\t\tc_global_trees[CTI_VOID_FTYPE_PTR]\n #define int_ftype_int\t\t\tc_global_trees[CTI_INT_FTYPE_INT]"}, {"sha": "30335db2b19c38650ee0f4f5856c0149270f26ea", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "patch": "@@ -8794,7 +8794,7 @@ arm_init_builtins ()\n      front-end that causes a failure while building libstdc++-v3.  When\n      that bug is fixed, this code can be re-enabled.  */\n \n-  tree endlink = tree_cons (NULL_TREE, void_type_node, NULL_TREE);\n+  tree endlink = void_list_node;\n   tree int_endlink = tree_cons (NULL_TREE, integer_type_node, endlink);\n   tree pchar_type_node = build_pointer_type (char_type_node);\n "}, {"sha": "72dbb9a2c061e6c1ceb2d403dd7053fc03725623", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "patch": "@@ -7427,7 +7427,7 @@ ix86_init_builtins ()\n {\n   struct builtin_description * d;\n   int i;\n-  tree endlink = tree_cons (NULL_TREE, void_type_node, NULL_TREE);\n+  tree endlink = void_list_node;\n \n   tree pchar_type_node = build_pointer_type (char_type_node);\n   tree pfloat_type_node = build_pointer_type (float_type_node);"}, {"sha": "54888699b69f3c25e836fa87e5872f3000d53909", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by James E. Wilson <wilson@cygnus.com> and\n    \t\t  David Mosberger <davidm@hpl.hp.com>.\n \n@@ -6454,7 +6454,7 @@ ia64_init_builtins ()\n {\n   tree psi_type_node = build_pointer_type (integer_type_node);\n   tree pdi_type_node = build_pointer_type (long_integer_type_node);\n-  tree endlink = tree_cons (NULL_TREE, void_type_node, NULL_TREE);\n+  tree endlink = void_list_node;\n \n   /* __sync_val_compare_and_swap_si, __sync_bool_compare_and_swap_si */\n   tree si_ftype_psi_si_si"}, {"sha": "2c229540f8bbfc928dfb5c825eef4fcca0c6d706", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "patch": "@@ -61,6 +61,7 @@ Boston, MA 02111-1307, USA.  */\n       ICS_THIS_FLAG (in _CONV)\n       BINDING_HAS_LEVEL_P (in CPLUS_BINDING)\n       BINFO_OVERRIDE_ALONG_VIRTUAL_PATH_P (in BINFO)\n+      TREE_PARMLIST (in TREE_LIST)\n    3: TYPE_USES_VIRTUAL_BASECLASSES (in a class TYPE).\n       BINFO_VTABLE_PATH_MARKED.\n       BINFO_PUSHDECLS_MARKED.\n@@ -1755,7 +1756,7 @@ struct lang_type\n \f\n /* Nonzero for TREE_LIST node means that this list of things\n    is a list of parameters, as opposed to a list of expressions.  */\n-#define TREE_PARMLIST(NODE) ((NODE)->common.unsigned_flag) /* overloaded! */\n+#define TREE_PARMLIST(NODE) (TREE_LANG_FLAG_2 (NODE))\n \n /* Nonzero for a parmlist means that this parmlist ended in ...  */\n #define PARMLIST_ELLIPSIS_P(NODE) TREE_LANG_FLAG_0 (NODE)"}, {"sha": "b8bd02e1596b3c93c4baa1500961b818cb426381", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "patch": "@@ -6449,8 +6449,13 @@ tsubst (t, args, complain, in_decl)\n \t    && value == TREE_VALUE (t)\n \t    && chain == TREE_CHAIN (t))\n \t  return t;\n-\tresult = hash_tree_cons (purpose, value, chain);\n-\tTREE_PARMLIST (result) = TREE_PARMLIST (t);\n+\tif (TREE_PARMLIST (t))\n+\t  {\n+\t    result = tree_cons (purpose, value, chain);\n+\t    TREE_PARMLIST (result) = 1;\n+\t  }\n+\telse\n+\t  result = hash_tree_cons (purpose, value, chain);\n \treturn result;\n       }\n     case TREE_VEC:"}, {"sha": "60f787e2da20db38d418d6b53f42df7441a4cbed", "filename": "gcc/tree.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=cbd5937a3d6a1cb2ca5e85ef86f7793744d669d8", "patch": "@@ -1739,6 +1739,8 @@ enum tree_index\n   TI_PTRDIFF_TYPE,\n   TI_VA_LIST_TYPE,\n \n+  TI_VOID_LIST_NODE,\n+\n   TI_V4SF_TYPE,\n   TI_V4SI_TYPE,\n   TI_V8QI_TYPE,\n@@ -1793,6 +1795,13 @@ extern tree global_trees[TI_MAX];\n #define ptrdiff_type_node\t\tglobal_trees[TI_PTRDIFF_TYPE]\n #define va_list_type_node\t\tglobal_trees[TI_VA_LIST_TYPE]\n \n+/* The node that should be placed at the end of a parameter list to\n+   indicate that the function does not take a variable number of\n+   arguments.  The TREE_VALUE will be void_type_node and there will be\n+   no TREE_CHAIN.  Language-independent code should not assume\n+   anything else about this node.  */\n+#define void_list_node                  global_trees[TI_VOID_LIST_NODE]\n+\n #define main_identifier_node\t\tglobal_trees[TI_MAIN_IDENTIFIER]\n #define MAIN_NAME_P(NODE) (IDENTIFIER_NODE_CHECK (NODE) == main_identifier_node)\n "}]}