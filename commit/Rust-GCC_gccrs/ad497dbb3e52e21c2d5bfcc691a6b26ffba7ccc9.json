{"sha": "ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ0OTdkYmIzZTUyZTIxYzJkNWJmY2M2OTFhNmIyNmZmYmE3Y2NjOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-07-27T16:57:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-07-27T16:57:15Z"}, "message": "re PR lto/66468 (ICE in in check_die, at dwarf2out.c:5719)\n\n\tPR debug/66468\n\t* dwarf2out.c (gen_inlined_subroutine_die): Check\n\tcgraph_function_possibly_inlined_p.\n\nFrom-SVN: r226255", "tree": {"sha": "972ebed703276ce4f5c1ef55e3f2f0bfa69514e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/972ebed703276ce4f5c1ef55e3f2f0bfa69514e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5afeda1edd22be941bbf8bc6902feed4af2ccdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5afeda1edd22be941bbf8bc6902feed4af2ccdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5afeda1edd22be941bbf8bc6902feed4af2ccdf"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "c8a260027bda75df13f40c232621caa3fb42e56f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9", "patch": "@@ -1,3 +1,9 @@\n+2015-07-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR debug/66468\n+\t* dwarf2out.c (gen_inlined_subroutine_die): Check\n+\tcgraph_function_possibly_inlined_p.\n+\n 2015-07-27  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc/config/aarch64/aarch64.md (aarch64_lshr_sisd_or_int_<mode>3):"}, {"sha": "2c7dc710daea60c1133751459e13683fb25c4a8b", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=ad497dbb3e52e21c2d5bfcc691a6b26ffba7ccc9", "patch": "@@ -19905,6 +19905,10 @@ gen_inlined_subroutine_die (tree stmt, dw_die_ref context_die)\n \n   decl = block_ultimate_origin (stmt);\n \n+  /* Make sure any inlined functions are known to be inlineable.  */\n+  gcc_checking_assert (DECL_ABSTRACT_P (decl)\n+\t\t       || cgraph_function_possibly_inlined_p (decl));\n+\n   /* Emit info for the abstract instance first, if we haven't yet.  We\n      must emit this even if the block is abstract, otherwise when we\n      emit the block below (or elsewhere), we may end up trying to emit"}]}