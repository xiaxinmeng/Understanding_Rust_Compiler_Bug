{"sha": "30ed0c452949cd7acc6417e41971823674f8e843", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBlZDBjNDUyOTQ5Y2Q3YWNjNjQxN2U0MTk3MTgyMzY3NGY4ZTg0Mw==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2002-01-25T04:39:04Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-01-25T04:39:04Z"}, "message": "PixelGrabber.java (grabPixels()): Call grabPixels(0).\n\n\t* java/awt/image/PixelGrabber.java (grabPixels()): Call grabPixels(0).\n\t* java/awt/image/PixelGrabber.java (grabPixels(long)): Wait to be\n\tnotified that the ImageProducer has completed.\n\nFrom-SVN: r49201", "tree": {"sha": "8675bc8a9674cfeed66501fe34afcaedf774017c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8675bc8a9674cfeed66501fe34afcaedf774017c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30ed0c452949cd7acc6417e41971823674f8e843", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ed0c452949cd7acc6417e41971823674f8e843", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30ed0c452949cd7acc6417e41971823674f8e843", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ed0c452949cd7acc6417e41971823674f8e843/comments", "author": null, "committer": null, "parents": [{"sha": "70e531f52eba5ea2187e2d411fe9b5c1a9a945f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e531f52eba5ea2187e2d411fe9b5c1a9a945f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e531f52eba5ea2187e2d411fe9b5c1a9a945f1"}], "stats": {"total": 35, "additions": 12, "deletions": 23}, "files": [{"sha": "6e1f0967273ee97f33f15eda24102a4f8ef851da", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ed0c452949cd7acc6417e41971823674f8e843/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ed0c452949cd7acc6417e41971823674f8e843/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=30ed0c452949cd7acc6417e41971823674f8e843", "patch": "@@ -1,6 +1,10 @@\n 2002-01-25  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* java/lang/natObject.cc (X86 compare_and_swap): Use +m constraint.\n+\t\n+\t* java/awt/image/PixelGrabber.java (grabPixels()): Call grabPixels(0).\n+\t* java/awt/image/PixelGrabber.java (grabPixels(long)): Wait to be\n+\tnotified that the ImageProducer has completed.\n \n 2002-01-24  Per Bothner  <per@bothner.com>\n "}, {"sha": "65e831e980910346fc3340bea4e4f9078b86f020", "filename": "libjava/java/awt/image/PixelGrabber.java", "status": "modified", "additions": 8, "deletions": 23, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ed0c452949cd7acc6417e41971823674f8e843/libjava%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ed0c452949cd7acc6417e41971823674f8e843/libjava%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java?ref=30ed0c452949cd7acc6417e41971823674f8e843", "patch": "@@ -155,15 +155,7 @@ public synchronized void abortGrabbing()\n      */\n     public boolean grabPixels() throws InterruptedException\n     {\n-\tstartGrabbing();\n-\twhile ( (status != ImageObserver.ALLBITS ) ||\n-\t\t(status != ImageObserver.ERROR ) ||\n-\t\t(status != ImageObserver.ABORT ) );\n-\n-\tif( status == ImageObserver.ALLBITS )\n-\t    return true;\n-\telse\n-\t    return false;\n+      return grabPixels(0);\n     }\n \n     /**\n@@ -176,24 +168,17 @@ public boolean grabPixels() throws InterruptedException\n      */\n     public synchronized boolean grabPixels(long ms) throws InterruptedException\n     {\n-\tlong start = System.currentTimeMillis();\n \tstartGrabbing();\n-\twhile ( (status != ImageObserver.ALLBITS ) ||\n-\t\t(status != ImageObserver.ERROR ) ||\n-\t\t(status != ImageObserver.ABORT ) )\n-\t    {\n-\t\tif( (System.currentTimeMillis() - start ) >= ms )\n-\t\t    {\n-\t\t\tabortGrabbing();\n-\t\t\tthrow new InterruptedException();\n-\t\t    }\n-\t    }\n-\n-\tif( status == ImageObserver.ALLBITS )\n+\t\n+\tif (ms < 0)\n+\t  return (status == ImageObserver.ALLBITS);\n+\t\n+\twait(ms);\n+\t\n+\tif (status == ImageObserver.ALLBITS)\n \t    return true;\n \telse\n \t    return false;\n-\t\n     }\n \n     /**"}]}