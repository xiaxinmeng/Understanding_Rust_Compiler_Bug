{"sha": "f4f0a8eeb24a4413af1093c3d1dcf03e26b13847", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmMGE4ZWViMjRhNDQxM2FmMTA5M2MzZDFkY2YwM2UyNmIxMzg0Nw==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-10-07T20:20:00Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-10-07T20:20:00Z"}, "message": "Add the modules moveDI96x and moveDI41x through\n\tmoveDI47x.\n\nFrom-SVN: r2356", "tree": {"sha": "5bf90d3bc6d302b540ff09073ac4016a8c780082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bf90d3bc6d302b540ff09073ac4016a8c780082"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4f0a8eeb24a4413af1093c3d1dcf03e26b13847", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f0a8eeb24a4413af1093c3d1dcf03e26b13847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f0a8eeb24a4413af1093c3d1dcf03e26b13847", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f0a8eeb24a4413af1093c3d1dcf03e26b13847/comments", "author": null, "committer": null, "parents": [{"sha": "2c11c7126f11f1b2aba6d0b1e4e9561fb82479ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c11c7126f11f1b2aba6d0b1e4e9561fb82479ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c11c7126f11f1b2aba6d0b1e4e9561fb82479ed"}], "stats": {"total": 107, "additions": 57, "deletions": 50}, "files": [{"sha": "7da45a640965c3a850902937487dd21aa0f06c7f", "filename": "gcc/config/m88k/m88k-move.sh", "status": "modified", "additions": 57, "deletions": 50, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f0a8eeb24a4413af1093c3d1dcf03e26b13847/gcc%2Fconfig%2Fm88k%2Fm88k-move.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f0a8eeb24a4413af1093c3d1dcf03e26b13847/gcc%2Fconfig%2Fm88k%2Fm88k-move.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k-move.sh?ref=f4f0a8eeb24a4413af1093c3d1dcf03e26b13847", "patch": "@@ -3,7 +3,7 @@\n #\tIf your shell doesn't support functions (true for some BSD users),\n #\tyou might try using GNU's bash.\n #\n-#ident \"@(#) m88k-move.sh 3-Jan-92\"\n+#ident \"@(#) m88k-move.sh 1-Sep-92\"\n #\n #\tThis file provided by Data General, February 1990.\n #\n@@ -31,6 +31,7 @@\n #\n #.Revision History\n #\n+#\t 1-Sep-92   Stan Cox   Added moveDI96x, moveDI41x through moveDI47x.\n #\t 2-Jan-92   Tom Wood   Renamed files to comply with SVR3 14 char limit.\n #\t26-Oct-90   Tom Wood   Delete movstr.h; moved to out-m88k.c.\n #\t17-Oct-90   Tom Wood   Files are named *.asm rather than *.s.\n@@ -61,14 +62,17 @@ usage() {\n \n awk_flag=\"-F:\";\n awk_begin=\"BEGIN { \"\n+ps=\"\"; us=\"_\"; tf=\"x\"; la=\"@L\"; fb=\"8\"; nt=\"\";\n do_file() {\n     echo \"\tfile\t $1\";\n }\n \n while [ $# -gt 0 ] ; do\n     case $1 in\n-\t-no-tdesc) awk_begin=\"$awk_begin no_tdesc=1;\";;\n+\t-no-tdesc) awk_begin=\"$awk_begin no_tdesc=1;\"\n+\t      nt=\";\";;\n \t-abi) awk_begin=\"$awk_begin abi=1;\"\n+\t      ps=\"#\"; us=\"\"; tf=\"a\"; la=\".L\"; fb=\"16\";\n \t      do_file() {\n \t\techo '\tversion\t \"03.00\"';\n \t\techo \"\tfile\t $1\";\n@@ -99,9 +103,9 @@ rm -f move?I*[xn].s move?I*[xn].asm\n gen_movstrN() {\n   awk $awk_flag \"$awk_begin\"'\n     if (abi) {\n-      ps=\"#\"; us=\"\"; tf=\"a\";\n+      ps=\"#\"; us=\"\"; tf=\"a\"; la=\".L\"; fb=16;\n     } else {\n-      ps=\"\"; us=\"_\"; tf=\"x\";\n+      ps=\"\"; us=\"_\"; tf=\"x\"; la=\"@L\"; fb=8;\n     }\n   }\n   NR == 1 && NF == 4 {\n@@ -110,8 +114,8 @@ gen_movstrN() {\n \n     printf \"; The following was calculated using awk.\\n\";\n     printf \"\\ttext\\n\";\n-    printf \"\\talign\\t16\\n\";\n-    printf \"loop%s%d:\\n\", mode, count * align;\n+    printf \"\\talign\\t%d\\n\", fb;\n+    printf \"%sloop%s%d:\\n\", la, mode, count * align;\n     printf \"\\taddu\\t%sr3,%sr3,%d\\n\", ps, ps, count * align;\n     printf \"\\taddu\\t%sr2,%sr2,%d\\n\", ps, ps, count * align;\n     printf \"\\tsubu\\t%sr6,%sr6,1\\n\", ps, ps;\n@@ -127,7 +131,7 @@ gen_movstrN() {\n         printf \"\\tst%s\\t%sr%d,%sr2,%d\\n\", suffix, ps, 5 - evenp, ps, st;\n       } else if (r == 2) {\n \tprintf \"\\tld%s\\t%sr%d,%sr3,%d\\n\", suffix, ps, 4 + evenp, ps, ld;\n-\tprintf \"\\tbcnd.n\\t%sgt0,%sr6,loop%s%d\\n\", ps, ps, mode, count * align;\n+\tprintf \"\\tbcnd.n\\t%sgt0,%sr6,%sloop%s%d\\n\", ps, ps, la, mode, count * align;\n         printf \"\\tst%s\\t%sr%d,%sr2,%d\\n\", suffix, ps, 5 - evenp, ps, st;\n         printf \"\\tjmp.n\\t%sr1\\n\", ps;\n       } else {\n@@ -136,16 +140,11 @@ gen_movstrN() {\n       ld += align; st += align;\n     }\n     if (!no_tdesc) {\n-      printf \"end%s%d:\\n\", mode, count * align;\n+      printf \"%send%s%d:\\n\", la, mode, count * align;\n       printf \"\\tsection\\t.tdesc,\\\"%s\\\"\\n\", tf;\n-      printf \"\\tword\\t0x42\\n\";\n-      printf \"\\tword\\t1\\n\";\n-      printf \"\\tword\\tloop%s%d\\n\", mode, count * align;\n-      printf \"\\tword\\tend%s%d\\n\", mode, count * align;\n-      printf \"\\tword\\t0x0100001f\\n\";\n-      printf \"\\tword\\t0\\n\";\n-      printf \"\\tword\\t1\\n\";\n-      printf \"\\tword\\t0\\n\";\n+      printf \"\\tword\\t0x42,1,%sloop%s%d\", la, mode, count * align;\n+      printf \",%send%s%d\\n\", la, mode, count * align;\n+      printf \"\\tword\\t0x0100001f,0,1,0\\n\";\n       printf \"\\ttext\\n\";\n     }\n     printf \"; End of awk generated code.\\n\";\n@@ -175,17 +174,18 @@ gen_movstrN() {\n gen_movstrX0() {\n     awk $awk_flag \"$awk_begin\"'\n       if (abi) {\n-\tps=\"#\"; us=\"\"; tf=\"a\";\n+\tps=\"#\"; us=\"\"; tf=\"a\"; la=\".L\"; fb=16;\n       } else {\n-\tps=\"\"; us=\"_\"; tf=\"x\";\n+\tps=\"\"; us=\"_\"; tf=\"x\"; la=\"@L\"; fb=8;\n       }\n     }\n     NR == 1 && NF == 4 {\n     mode = $1; suffix = $2; align = $3; bytes = $4;\n     ld = align; st = 0; count = bytes / align;\n+    reg[0] = 4; if (align == 8) reg[1] = 6; else reg[1] = 5;\n     printf \"; The following was calculated using awk.\\n\";\n     printf \"\\ttext\\n\";\n-    printf \"\\talign\\t16\\n\";\n+    printf \"\\talign\\t%d\\n\", fb;\n     for (r = count; r >= 1; r--) {\n       evenp = r % 2;\n       name = sprintf(\"__%smovstr%s%dx%d\", us, mode, count * align, r * align);\n@@ -196,21 +196,16 @@ gen_movstrX0() {\n       if (r == 1)\n         printf \"\\tjmp.n\\t%sr1\\n\", ps;\n       else\n-        printf \"\\tld%s\\t%sr%d,%sr3,%d\\n\", suffix, ps, 4 + evenp, ps, ld;\n-      printf \"\\tst%s\\t%sr%d,%sr2,%d\\n\", suffix, ps, 5 - evenp, ps, st;\n+        printf \"\\tld%s\\t%sr%d,%sr3,%d\\n\", suffix, ps, reg[evenp], ps, ld;\n+      printf \"\\tst%s\\t%sr%d,%sr2,%d\\n\", suffix, ps, reg[1-evenp], ps, st;\n       ld += align; st += align;\n     }\n     if (!no_tdesc) {\n-      printf \"end%s%dx:\\n\", mode, count * align;\n+      printf \"%send%s%dx:\\n\", la, mode, count * align;\n       printf \"\\tsection\\t.tdesc,\\\"%s\\\"\\n\", tf;\n-      printf \"\\tword\\t0x42\\n\";\n-      printf \"\\tword\\t1\\n\";\n-      printf \"\\tword\\t__%smovstr%s%dx%d\\n\", us, mode, count * align, count * align;\n-      printf \"\\tword\\tend%s%dx\\n\", mode, count * align;\n-      printf \"\\tword\\t0x0100001f\\n\";\n-      printf \"\\tword\\t0\\n\";\n-      printf \"\\tword\\t1\\n\";\n-      printf \"\\tword\\t0\\n\";\n+      printf \"\\tword\\t0x42,1,__%smovstr%s%dx%d\", us, mode, count * align, count * align;\n+      printf \",%send%s%dx\\n\", la, mode, count * align;\n+      printf \"\\tword\\t0x0100001f,0,1,0\\n\";\n       printf \"\\ttext\\n\";\n     }\n     printf \"; End of awk generated code.\\n\"\n@@ -224,6 +219,8 @@ gen_movstrX0() {\n  echo 'HI:.h:2:48' | gen_movstrX0) > moveHI48x.asm\n (do_file '\"movstrSI96x.s\"';\n  echo 'SI::4:96'   | gen_movstrX0) > moveSI96x.asm\n+(do_file '\"movstrDI96x.s\"';\n+ echo 'DI:.d:8:96'   | gen_movstrX0) > moveDI96x.asm\n \n #.Implementation_continued[=-----------------------------------------------\n #\n@@ -235,24 +232,26 @@ gen_movstrX0() {\n gen_movstrXr() {\n     awk $awk_flag \"$awk_begin\"'\n       if (abi) {\n-\tps=\"#\"; us=\"\"; tf=\"a\";\n+\tps=\"#\"; us=\"\"; tf=\"a\"; la=\".L\"; fb=16;\n       } else {\n-\tps=\"\"; us=\"_\"; tf=\"x\";\n+\tps=\"\"; us=\"_\"; tf=\"x\"; la=\"@L\"; fb=8;\n       }\n     }\n     NR == 1 && NF == 4 {\n     mode = $1; rem = $2; most = $3; count = $4;\n-    suffix[1] = \".b\"; suffix[2] = \".h\"; suffix[4] = \"\";\n+    suffix[1] = \".b\"; suffix[2] = \".h\"; suffix[4] = \"\"; suffix[8] = \".d\";\n \n     prev = align = most;\n     ld = align; st = 0; total = count - rem - most;\n     evenp = int(total/align) % 2;\n+    reg[0] = 4; if (align == 8) reg[1] = 6; else reg[1] = 5;\n     printf \"; The following was calculated using awk.\\n\";\n     printf \"\\ttext\\n\";\n-    printf \"\\talign\\t16\\n\";\n+    printf \"\\talign\\t%d\\n\", fb;\n     for (bytes = total; bytes >= 0; bytes -= align) {\n       if (bytes < align) {\n-\tif (bytes >= 2) align = 2;\n+\tif (bytes >= 4) align = 4;\n+\telse if (bytes >= 2) align = 2;\n \telse align = 1;\n       }\n       name = sprintf(\"__%smovstr%s%dx%d\", us, mode, total + most, bytes + most);\n@@ -263,37 +262,45 @@ gen_movstrXr() {\n       if (bytes == 0)\n \tprintf \"\\tjmp.n\\t%sr1\\n\", ps;\n       else\n-\tprintf \"\\tld%s\\t%sr%d,%sr3,%d\\n\", suffix[align], ps, 4 + evenp, ps, ld;\n-      printf \"\\tst%s\\t%sr%d,%sr2,%d\\n\", suffix[prev], ps, 5 - evenp, ps, st;\n+\tprintf \"\\tld%s\\t%sr%d,%sr3,%d\\n\", suffix[align], ps, reg[evenp], ps, ld;\n+      printf \"\\tst%s\\t%sr%d,%sr2,%d\\n\", suffix[prev], ps, reg[1-evenp], ps, st;\n       ld += align; st += prev; prev = align;\n-      if (evenp)\n-\tevenp = 0;\n-      else\n-\tevenp = 1;\n+      evenp = 1 - evenp;\n     }\n     if (!no_tdesc) {\n-      printf \"end%s%dx:\\n\", mode, total + most;\n+      printf \"%send%s%dx:\\n\", la, mode, total + most;\n       printf \"\\tsection\\t.tdesc,\\\"%s\\\"\\n\", tf;\n-      printf \"\\tword\\t0x42\\n\";\n-      printf \"\\tword\\t1\\n\";\n-      printf \"\\tword\\t__%smovstr%s%dx%d\\n\", us, mode, total + most, total + most;\n-      printf \"\\tword\\tend%s%dx\\n\", mode, total + most;\n-      printf \"\\tword\\t0x0100001f\\n\";\n-      printf \"\\tword\\t0\\n\";\n-      printf \"\\tword\\t1\\n\";\n-      printf \"\\tword\\t0\\n\";\n+      printf \"\\tword\\t0x42,1,__%smovstr%s%dx%d\", us, mode, total + most, total + most;\n+      printf \",%send%s%dx\\n\", la, mode, total + most;\n+      printf \"\\tword\\t0x0100001f,0,1,0\\n\";\n       printf \"\\ttext\\n\";\n     }\n     printf \"; End of awk generated code.\\n\"\n     exit;\n   }'\n }\n \n+(do_file '\"movstrDI47x.s\"';\n+ echo 'DI:1:8:48' | gen_movstrXr) > moveDI47x.asm\n+(do_file '\"movstrDI46x.s\"';\n+ echo 'DI:2:8:48' | gen_movstrXr) > moveDI46x.asm\n+(do_file '\"movstrDI45x.s\"';\n+ echo 'DI:3:8:48' | gen_movstrXr) > moveDI45x.asm\n+(do_file '\"movstrDI44x.s\"';\n+ echo 'DI:4:8:48' | gen_movstrXr) > moveDI44x.asm\n+(do_file '\"movstrDI43x.s\"';\n+ echo 'DI:5:8:48' | gen_movstrXr) > moveDI43x.asm\n+(do_file '\"movstrDI42x.s\"';\n+ echo 'DI:6:8:48' | gen_movstrXr) > moveDI42x.asm\n+(do_file '\"movstrDI41x.s\"';\n+ echo 'DI:7:8:48' | gen_movstrXr) > moveDI41x.asm\n+\n (do_file '\"movstrSI47x.s\"';\n  echo 'SI:1:4:48' | gen_movstrXr) > moveSI47x.asm\n (do_file '\"movstrSI46x.s\"';\n  echo 'SI:2:4:48' | gen_movstrXr) > moveSI46x.asm\n (do_file '\"movstrSI45x.s\"';\n  echo 'SI:3:4:48' | gen_movstrXr) > moveSI45x.asm\n+\n (do_file '\"movstrHI15x.s\"';\n  echo 'HI:1:2:16' | gen_movstrXr) > moveHI15x.asm"}]}