{"sha": "87e91fca2d77911986c4107ea93ffaa4dfef0273", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdlOTFmY2EyZDc3OTExOTg2YzQxMDdlYTkzZmZhYTRkZmVmMDI3Mw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2011-05-12T10:33:57Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2011-05-12T10:33:57Z"}, "message": "(rx_builtins): New arrays - holds builtin functions.\n\n\t(ADD_RX_BUILTIN1, ADD_RX_BUILTIN2, ADD_RX_BUILTIN3): Install\n\tcreated builtin into rx_builtins array.\n\t(rx_builtin_decl): New function.\n\t(TARGET_BUITLIN_DECL): Define.\n\tInclude gt-rx.h.\n\nCo-Authored-By: Nick Clifton <nickc@redhat.com>\n\nFrom-SVN: r173696", "tree": {"sha": "f5633b9a35aaff35808d9580092ef812ffdd0a98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5633b9a35aaff35808d9580092ef812ffdd0a98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87e91fca2d77911986c4107ea93ffaa4dfef0273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e91fca2d77911986c4107ea93ffaa4dfef0273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87e91fca2d77911986c4107ea93ffaa4dfef0273", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e91fca2d77911986c4107ea93ffaa4dfef0273/comments", "author": null, "committer": null, "parents": [{"sha": "5f2f13fde25c838309d1bf6c23bf58bd92442822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2f13fde25c838309d1bf6c23bf58bd92442822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f2f13fde25c838309d1bf6c23bf58bd92442822"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "8dcd8b95fd8691787f130add9503f89d7d6f603b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e91fca2d77911986c4107ea93ffaa4dfef0273/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e91fca2d77911986c4107ea93ffaa4dfef0273/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87e91fca2d77911986c4107ea93ffaa4dfef0273", "patch": "@@ -1,3 +1,12 @@\n+2011-05-12  DJ Delorie  <dj@redhat.com>\n+\n+\t(rx_builtins): New arrays - holds builtin functions.\n+\t(ADD_RX_BUILTIN1, ADD_RX_BUILTIN2, ADD_RX_BUILTIN3): Install\n+\tcreated builtin into rx_builtins array.\n+\t(rx_builtin_decl): New function.\n+\t(TARGET_BUITLIN_DECL): Define.\n+\tInclude gt-rx.h.\n+\n 2011-05-12  DJ Delorie  <dj@redhat.com>\n \t    Nick Clifton  <nickc@redhat.com>\n \n@@ -6,18 +15,11 @@\n \t(rx_is_legitimate_address): Add pre-decrement and post-increment\n \taddressing in HImode and QImode.  Fix test for out of range\n \tREG+INT addressing.\n-\t(rx_legitimate_constant_p): Rename ro rx_is_legitimate_constant.\n+\t(rx_legitimate_constant_p): Rename to rx_is_legitimate_constant.\n \t(rx_align_for_label): Test label before extracting its usage\n \tcount.\n \t(rx_adjust_insn_lengths): Fix selection of insn codes.\n-\t(TARGET_LEGITIMNATE_CONSTANT_P): Use renamed function.\n-\n-\t(rx_builtins): New arrays - holds builtin functions.\n-\t(ADD_RX_BUILTIN1, ADD_RX_BUILTIN2, ADD_RX_BUILTIN3): Install\n-\tcreated builtin into rx_builtins array.\n-\t(rx_builtin_decl): New function.\n-\t(TARGET_BUITLIN_DECL): Define.\n-\tInclude gt-rx.h.\n+\t(TARGET_LEGITIMATE_CONSTANT_P): Use renamed function.\n \n 2011-05-11  Jason Merrill  <jason@redhat.com>\n "}, {"sha": "2889cebbc79732c303a849178356ad7cb4da5e4a", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e91fca2d77911986c4107ea93ffaa4dfef0273/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e91fca2d77911986c4107ea93ffaa4dfef0273/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=87e91fca2d77911986c4107ea93ffaa4dfef0273", "patch": "@@ -1930,10 +1930,13 @@ enum rx_builtin\n   RX_BUILTIN_max\n };\n \n+static GTY(()) tree rx_builtins[(int) RX_BUILTIN_max];\n+\n static void\n rx_init_builtins (void)\n {\n #define ADD_RX_BUILTIN1(UC_NAME, LC_NAME, RET_TYPE, ARG_TYPE)\t\t\\\n+   rx_builtins[RX_BUILTIN_##UC_NAME] =\t\t\t\t\t\\\n    add_builtin_function (\"__builtin_rx_\" LC_NAME,\t\t\t\\\n \t\t\tbuild_function_type_list (RET_TYPE##_type_node, \\\n \t\t\t\t\t\t  ARG_TYPE##_type_node, \\\n@@ -1942,6 +1945,7 @@ rx_init_builtins (void)\n \t\t\tBUILT_IN_MD, NULL, NULL_TREE)\n \n #define ADD_RX_BUILTIN2(UC_NAME, LC_NAME, RET_TYPE, ARG_TYPE1, ARG_TYPE2) \\\n+  rx_builtins[RX_BUILTIN_##UC_NAME] =\t\t\t\t\t\\\n   add_builtin_function (\"__builtin_rx_\" LC_NAME,\t\t\t\\\n \t\t\tbuild_function_type_list (RET_TYPE##_type_node, \\\n \t\t\t\t\t\t  ARG_TYPE1##_type_node,\\\n@@ -1951,6 +1955,7 @@ rx_init_builtins (void)\n \t\t\tBUILT_IN_MD, NULL, NULL_TREE)\n \n #define ADD_RX_BUILTIN3(UC_NAME,LC_NAME,RET_TYPE,ARG_TYPE1,ARG_TYPE2,ARG_TYPE3) \\\n+  rx_builtins[RX_BUILTIN_##UC_NAME] =\t\t\t\t\t\\\n   add_builtin_function (\"__builtin_rx_\" LC_NAME,\t\t\t\\\n \t\t\tbuild_function_type_list (RET_TYPE##_type_node, \\\n \t\t\t\t\t\t  ARG_TYPE1##_type_node,\\\n@@ -1982,6 +1987,17 @@ rx_init_builtins (void)\n   ADD_RX_BUILTIN1 (WAIT,    \"wait\",    void,  void);\n }\n \n+/* Return the RX builtin for CODE.  */\n+\n+static tree\n+rx_builtin_decl (unsigned code, bool initialize_p ATTRIBUTE_UNUSED)\n+{\n+  if (code >= RX_BUILTIN_max)\n+    return error_mark_node;\n+\n+  return rx_builtins[code];\n+}\n+\n static rtx\n rx_expand_void_builtin_1_arg (rtx arg, rtx (* gen_func)(rtx), bool reg)\n {\n@@ -2955,6 +2971,9 @@ rx_adjust_insn_length (rtx insn, int current_length)\n #undef  TARGET_INIT_BUILTINS\n #define TARGET_INIT_BUILTINS\t\trx_init_builtins\n \n+#undef  TARGET_BUILTIN_DECL\n+#define TARGET_BUILTIN_DECL\t\trx_builtin_decl\n+\n #undef  TARGET_EXPAND_BUILTIN\n #define TARGET_EXPAND_BUILTIN\t\trx_expand_builtin\n \n@@ -3068,4 +3087,4 @@ rx_adjust_insn_length (rtx insn, int current_length)\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \n-/* #include \"gt-rx.h\" */\n+#include \"gt-rx.h\""}]}