{"sha": "6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk2MWE1OTJiM2FlNWYzNGYxZDRmN2I5NmNhNDRiZjc3MzJjZjhiMg==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2003-12-09T17:49:28Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2003-12-09T17:49:28Z"}, "message": "init.c (build_new_1): Deal with an OVERLOAD set when looking up for _Jv_AllocObject.\n\n\t* init.c (build_new_1): Deal with an OVERLOAD set when\n\tlooking up for _Jv_AllocObject.\n\t* except.c (build_throw): Likewise for _Jv_Throw.\n\nFrom-SVN: r74474", "tree": {"sha": "4589e4bd8dfcb605d1f0a067e711a9049cba2032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4589e4bd8dfcb605d1f0a067e711a9049cba2032"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6975bd2cc4160b96ed664345d06e1cadcc590779", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6975bd2cc4160b96ed664345d06e1cadcc590779", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6975bd2cc4160b96ed664345d06e1cadcc590779"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "7f23f0fe4359a7fcb8452a7a7ffd45cf87231b42", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2", "patch": "@@ -1,3 +1,9 @@\n+2003-12-09  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\r\n+\r\n+\t* init.c (build_new_1): Deal with an OVERLOAD set when\r\n+\tlooking up for _Jv_AllocObject.\r\n+\t* except.c (build_throw): Likewise for _Jv_Throw.\r\n+\n 2003-12-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/11971"}, {"sha": "b684efbb02266a374f8f66b710ee6dedaa8f4e2e", "filename": "gcc/cp/except.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2", "patch": "@@ -645,6 +645,11 @@ build_throw (tree exp)\n \t  tmp = build_function_type (ptr_type_node, tmp);\n \t  fn = push_throw_library_fn (fn, tmp);\n \t}\n+      else if (really_overloaded_fn (fn))\n+\t{\r\n+\t  error (\"`%D' should never be overloaded\", fn);\n+\t  return error_mark_node;\r\n+\t}\n       fn = OVL_CURRENT (fn);\n       exp = build_function_call (fn, tree_cons (NULL_TREE, exp, NULL_TREE));\n     }"}, {"sha": "19642d6a29c22885c7ba53a705ca7487e7a4c32b", "filename": "gcc/cp/init.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=6961a592b3ae5f34f1d4f7b96ca44bf7732cf8b2", "patch": "@@ -2005,11 +2005,18 @@ build_new_1 (tree exp)\n       tree class_size = size_in_bytes (true_type);\n       static const char alloc_name[] = \"_Jv_AllocObject\";\n       use_java_new = 1;\n-      alloc_decl = IDENTIFIER_GLOBAL_VALUE (get_identifier (alloc_name));\n-      if (alloc_decl == NULL_TREE)\n-      fatal_error (\"call to Java constructor with `%s' undefined\",\n-                   alloc_name);\n-\n+      if (!get_global_value_if_present (get_identifier (alloc_name), \n+\t\t\t\t\t&alloc_decl))\n+\t{\r\n+\t  error (\"call to Java constructor with `%s' undefined\", alloc_name);\n+\t  return error_mark_node;\n+\t}\n+      else if (really_overloaded_fn (alloc_decl))\n+\t{\r\n+\t  error (\"`%D' should never be overloaded\", alloc_decl);\n+\t  return error_mark_node;\n+\t}\n+      alloc_decl = OVL_CURRENT (alloc_decl);\n       class_addr = build1 (ADDR_EXPR, jclass_node, class_decl);\n       alloc_call = (build_function_call\n \t\t    (alloc_decl,"}]}