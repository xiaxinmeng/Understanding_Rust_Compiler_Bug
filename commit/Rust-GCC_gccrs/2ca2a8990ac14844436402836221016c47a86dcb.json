{"sha": "2ca2a8990ac14844436402836221016c47a86dcb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhMmE4OTkwYWMxNDg0NDQzNjQwMjgzNjIyMTAxNmM0N2E4NmRjYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-11-18T17:21:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-11-18T17:21:35Z"}, "message": "PR libstdc++/26211 + N3168\n\n2010-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/26211 + N3168\n\t* include/bits/istream.tcc (basic_istream<>::tellg, seekg(pos_type),\n\tseekg(off_type, ios_base::seekdir)): Construct a sentry.\n\t(basic_istream<>::tellg, seekg(pos_type), seekg(off_type,\n\tios_base::seekdir, putback, unget)): Clear eofbit first, per N3168.  \n\t* testsuite/27_io/basic_istream/seekg/char/26211.cc: New.\n\t* testsuite/27_io/basic_istream/seekg/wchar_t/26211.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/char/26211.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/wchar_t/26211.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/char/8348.cc: Tweak.\n\t* testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc: Likewise.\n\nFrom-SVN: r166911", "tree": {"sha": "d06e9b1040ed5ba9967d91587e69b61545eafad5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d06e9b1040ed5ba9967d91587e69b61545eafad5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ca2a8990ac14844436402836221016c47a86dcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca2a8990ac14844436402836221016c47a86dcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca2a8990ac14844436402836221016c47a86dcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca2a8990ac14844436402836221016c47a86dcb/comments", "author": null, "committer": null, "parents": [{"sha": "275853ab387d1912647c4f367a7f7f33f47d0526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/275853ab387d1912647c4f367a7f7f33f47d0526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/275853ab387d1912647c4f367a7f7f33f47d0526"}], "stats": {"total": 358, "additions": 309, "deletions": 49}, "files": [{"sha": "49d7d4744175240c54273b15101e2a4407292318", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2ca2a8990ac14844436402836221016c47a86dcb", "patch": "@@ -1,3 +1,17 @@\n+2010-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/26211 + N3168\n+\t* include/bits/istream.tcc (basic_istream<>::tellg, seekg(pos_type),\n+\tseekg(off_type, ios_base::seekdir)): Construct a sentry.\n+\t(basic_istream<>::tellg, seekg(pos_type), seekg(off_type,\n+\tios_base::seekdir, putback, unget)): Clear eofbit first, per N3168.\n+\t* testsuite/27_io/basic_istream/seekg/char/26211.cc: New.\n+\t* testsuite/27_io/basic_istream/seekg/wchar_t/26211.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/char/26211.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/wchar_t/26211.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/char/8348.cc: Tweak.\n+\t* testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc: Likewise.\n+\n 2010-11-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR other/42670"}, {"sha": "e0a4cd3a0945d755cf6e89ac3ed73085dc1a3473", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 69, "deletions": 49, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=2ca2a8990ac14844436402836221016c47a86dcb", "patch": "@@ -1,7 +1,7 @@\n // istream classes -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2008, 2009\n+// 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -713,6 +713,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 60. What is a formatted input function?\n       _M_gcount = 0;\n+      // Clear eofbit per N3168.\n+      this->clear(this->rdstate() & ~ios_base::eofbit);\n       sentry __cerb(*this, true);\n       if (__cerb)\n \t{\n@@ -746,6 +748,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 60. What is a formatted input function?\n       _M_gcount = 0;\n+      // Clear eofbit per N3168.\n+      this->clear(this->rdstate() & ~ios_base::eofbit);\n       sentry __cerb(*this, true);\n       if (__cerb)\n \t{\n@@ -815,19 +819,23 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // DR60.  Do not change _M_gcount.\n       pos_type __ret = pos_type(-1);\n-      __try\n-\t{\n-\t  if (!this->fail())\n-\t    __ret = this->rdbuf()->pubseekoff(0, ios_base::cur,\n-\t\t\t\t\t      ios_base::in);\n-\t}\n-      __catch(__cxxabiv1::__forced_unwind&)\n+      sentry __cerb(*this, true);\n+      if (__cerb)\n \t{\n-\t  this->_M_setstate(ios_base::badbit);\n-\t  __throw_exception_again;\n+\t  __try\n+\t    {\n+\t      if (!this->fail())\n+\t\t__ret = this->rdbuf()->pubseekoff(0, ios_base::cur,\n+\t\t\t\t\t\t  ios_base::in);\n+\t    }\n+\t  __catch(__cxxabiv1::__forced_unwind&)\n+\t    {\n+\t      this->_M_setstate(ios_base::badbit);\n+\t      __throw_exception_again;\n+\t    }\n+\t  __catch(...)\n+\t    { this->_M_setstate(ios_base::badbit); }\n \t}\n-      __catch(...)\n-\t{ this->_M_setstate(ios_base::badbit); }\n       return __ret;\n     }\n \n@@ -838,29 +846,35 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     {\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // DR60.  Do not change _M_gcount.\n-      ios_base::iostate __err = ios_base::goodbit;\n-      __try\n+      // Clear eofbit per N3168.\n+      this->clear(this->rdstate() & ~ios_base::eofbit);\n+      sentry __cerb(*this, true);\n+      if (__cerb)\n \t{\n-\t  if (!this->fail())\n+\t  ios_base::iostate __err = ios_base::goodbit;\n+\t  __try\n \t    {\n-\t      // 136.  seekp, seekg setting wrong streams?\n-\t      const pos_type __p = this->rdbuf()->pubseekpos(__pos,\n-\t\t\t\t\t\t\t     ios_base::in);\n-\t      \n-\t      // 129.  Need error indication from seekp() and seekg()\n-\t      if (__p == pos_type(off_type(-1)))\n-\t\t__err |= ios_base::failbit;\n+\t      if (!this->fail())\n+\t\t{\n+\t\t  // 136.  seekp, seekg setting wrong streams?\n+\t\t  const pos_type __p = this->rdbuf()->pubseekpos(__pos,\n+\t\t\t\t\t\t\t\t ios_base::in);\n+\t\t  \n+\t\t  // 129.  Need error indication from seekp() and seekg()\n+\t\t  if (__p == pos_type(off_type(-1)))\n+\t\t    __err |= ios_base::failbit;\n+\t\t}\n \t    }\n+\t  __catch(__cxxabiv1::__forced_unwind&)\n+\t    {\n+\t      this->_M_setstate(ios_base::badbit);\n+\t      __throw_exception_again;\n+\t    }\n+\t  __catch(...)\n+\t    { this->_M_setstate(ios_base::badbit); }\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n-      __catch(__cxxabiv1::__forced_unwind&)\n-\t{\n-\t  this->_M_setstate(ios_base::badbit);\n-\t  __throw_exception_again;\n-\t}\n-      __catch(...)\n-\t{ this->_M_setstate(ios_base::badbit); }\n-      if (__err)\n-\tthis->setstate(__err);\n       return *this;\n     }\n \n@@ -871,29 +885,35 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     {\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // DR60.  Do not change _M_gcount.\n-      ios_base::iostate __err = ios_base::goodbit;\n-      __try\n+      // Clear eofbit per N3168.\n+      this->clear(this->rdstate() & ~ios_base::eofbit);\n+      sentry __cerb(*this, true);\n+      if (__cerb)\n \t{\n-\t  if (!this->fail())\n+\t  ios_base::iostate __err = ios_base::goodbit;\n+\t  __try\n \t    {\n-\t      // 136.  seekp, seekg setting wrong streams?\n-\t      const pos_type __p = this->rdbuf()->pubseekoff(__off, __dir,\n-\t\t\t\t\t\t\t     ios_base::in);\n+\t      if (!this->fail())\n+\t\t{\n+\t\t  // 136.  seekp, seekg setting wrong streams?\n+\t\t  const pos_type __p = this->rdbuf()->pubseekoff(__off, __dir,\n+\t\t\t\t\t\t\t\t ios_base::in);\n \t      \n-\t      // 129.  Need error indication from seekp() and seekg()\n-\t      if (__p == pos_type(off_type(-1)))\n-\t\t__err |= ios_base::failbit;\n+\t\t  // 129.  Need error indication from seekp() and seekg()\n+\t\t  if (__p == pos_type(off_type(-1)))\n+\t\t    __err |= ios_base::failbit;\n+\t\t}\n \t    }\n+\t  __catch(__cxxabiv1::__forced_unwind&)\n+\t    {\n+\t      this->_M_setstate(ios_base::badbit);\n+\t      __throw_exception_again;\n+\t    }\n+\t  __catch(...)\n+\t    { this->_M_setstate(ios_base::badbit); }\n+\t  if (__err)\n+\t    this->setstate(__err);\n \t}\n-      __catch(__cxxabiv1::__forced_unwind&)\n-\t{\n-\t  this->_M_setstate(ios_base::badbit);\n-\t  __throw_exception_again;\n-\t}\n-      __catch(...)\n-\t{ this->_M_setstate(ios_base::badbit); }\n-      if (__err)\n-\tthis->setstate(__err);\n       return *this;\n     }\n "}, {"sha": "be2865078c074ca04c389d998e160e0aaf5e6a6b", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/char/26211.cc", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fchar%2F26211.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fchar%2F26211.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fchar%2F26211.cc?ref=2ca2a8990ac14844436402836221016c47a86dcb", "patch": "@@ -0,0 +1,63 @@\n+// 2010-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/26211\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istringstream::pos_type pos_type;\n+\n+  istringstream iss(\"Duos for Doris\");\n+  ostringstream oss;\n+\n+  const pos_type p0 = iss.tellg();\n+  VERIFY( p0 == pos_type(0) );\n+\n+  iss >> oss.rdbuf();\n+  VERIFY( iss.rdstate() == iss.eofbit );\n+\n+  iss.seekg(0, ios_base::beg);\n+  VERIFY( iss.good() );\n+\n+  iss.seekg(0, ios_base::beg);\n+  VERIFY( !iss.fail() );\n+  VERIFY( iss.tellg() == p0 );\n+\n+  iss >> oss.rdbuf();\n+  VERIFY( iss.rdstate() == iss.eofbit );\n+\n+  iss.seekg(p0);\n+  VERIFY( iss.good() );\n+\n+  iss.seekg(p0);\n+  VERIFY( !iss.fail() );\n+  VERIFY( iss.tellg() == p0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "2a73e1ec7acd4e6b81b2eaf8aa3e4068a20ac2d8", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/wchar_t/26211.cc", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F26211.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F26211.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F26211.cc?ref=2ca2a8990ac14844436402836221016c47a86dcb", "patch": "@@ -0,0 +1,63 @@\n+// 2010-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/26211\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef wistringstream::pos_type pos_type;\n+\n+  wistringstream iss(L\"Duos for Doris\");\n+  wostringstream oss;\n+\n+  const pos_type p0 = iss.tellg();\n+  VERIFY( p0 == pos_type(0) );\n+\n+  iss >> oss.rdbuf();\n+  VERIFY( iss.rdstate() == iss.eofbit );\n+\n+  iss.seekg(0, ios_base::beg);\n+  VERIFY( iss.good() );\n+\n+  iss.seekg(0, ios_base::beg);\n+  VERIFY( !iss.fail() );\n+  VERIFY( iss.tellg() == p0 );\n+\n+  iss >> oss.rdbuf();\n+  VERIFY( iss.rdstate() == iss.eofbit );\n+\n+  iss.seekg(p0);\n+  VERIFY( iss.good() );\n+\n+  iss.seekg(p0);\n+  VERIFY( !iss.fail() );\n+  VERIFY( iss.tellg() == p0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "6677f941048d3e8ea72896fa0e049d5e9163b2f4", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/char/26211.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F26211.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F26211.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F26211.cc?ref=2ca2a8990ac14844436402836221016c47a86dcb", "patch": "@@ -0,0 +1,49 @@\n+// 2010-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/26211\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istringstream::pos_type pos_type;\n+\n+  istringstream iss(\"Duos for Doris\");\n+  ostringstream oss;\n+\n+  VERIFY( iss.tellg() == pos_type(0) );\n+\n+  iss >> oss.rdbuf();\n+  VERIFY( iss.rdstate() == iss.eofbit );\n+  VERIFY( iss.tellg() == pos_type(-1) );\n+\n+  iss.clear();\n+  VERIFY( iss.tellg() == pos_type(14) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "62bdd502597afbd20c4cbcb9b97a94658c9b10c7", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/char/8348.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F8348.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F8348.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F8348.cc?ref=2ca2a8990ac14844436402836221016c47a86dcb", "patch": "@@ -40,6 +40,7 @@ void test06(void)\n     iss >> asNum;\n     VERIFY( test = iss.eof() );\n     VERIFY( test = !iss.fail() );\n+    iss.clear();\n     iss.tellg();\n     VERIFY( test = !iss.fail() );\n   }"}, {"sha": "7d88d5c1f0f4ddff07bee58ef25d40780be5a4b9", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/wchar_t/26211.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F26211.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F26211.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F26211.cc?ref=2ca2a8990ac14844436402836221016c47a86dcb", "patch": "@@ -0,0 +1,49 @@\n+// 2010-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/26211\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef wistringstream::pos_type pos_type;\n+\n+  wistringstream iss(L\"Duos for Doris\");\n+  wostringstream oss;\n+\n+  VERIFY( iss.tellg() == pos_type(0) );\n+\n+  iss >> oss.rdbuf();\n+  VERIFY( iss.rdstate() == iss.eofbit );\n+  VERIFY( iss.tellg() == pos_type(-1) );\n+\n+  iss.clear();\n+  VERIFY( iss.tellg() == pos_type(14) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "6979b9c06f8bfefec9e467d4b2c56acc965e50a1", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F8348.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca2a8990ac14844436402836221016c47a86dcb/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F8348.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F8348.cc?ref=2ca2a8990ac14844436402836221016c47a86dcb", "patch": "@@ -37,6 +37,7 @@ void test06(void)\n     iss >> asNum;\n     VERIFY( test = iss.eof() );\n     VERIFY( test = !iss.fail() );\n+    iss.clear();\n     iss.tellg();\n     VERIFY( test = !iss.fail() );\n   }"}]}