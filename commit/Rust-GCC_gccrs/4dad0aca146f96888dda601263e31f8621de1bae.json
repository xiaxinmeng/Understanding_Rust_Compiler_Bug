{"sha": "4dad0aca146f96888dda601263e31f8621de1bae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRhZDBhY2ExNDZmOTY4ODhkZGE2MDEyNjNlMzFmODYyMWRlMWJhZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-05-26T12:17:52Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-05-26T12:17:52Z"}, "message": "c-typeck.c, [...]: Fix typos and follow spelling conventions in various warning/error/diagnostic...\n\n\t* c-typeck.c, config/arm/arm.c, config/darwin.c,\n\tconfig/sh/symbian.c, gcc.c, ipa-cp.c, ipa-inline.c, loop-iv.c,\n\tomega.c, tree-ssa-loop-niter.c, treestruct.def: Fix typos and\n\tfollow spelling conventions in various\n\twarning/error/diagnostic messages.\n\nFrom-SVN: r125089", "tree": {"sha": "903b6ffc6c810b13e3b3edeb9e468186e2ee4223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/903b6ffc6c810b13e3b3edeb9e468186e2ee4223"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dad0aca146f96888dda601263e31f8621de1bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dad0aca146f96888dda601263e31f8621de1bae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dad0aca146f96888dda601263e31f8621de1bae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dad0aca146f96888dda601263e31f8621de1bae/comments", "author": null, "committer": null, "parents": [{"sha": "0ee8e25059355c772a3e7c7eb88d502496bc7922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee8e25059355c772a3e7c7eb88d502496bc7922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ee8e25059355c772a3e7c7eb88d502496bc7922"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "386358495c29022072d3725f9714e2782c102e1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -1,3 +1,11 @@\n+2007-05-26  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* c-typeck.c, config/arm/arm.c, config/darwin.c,\n+\tconfig/sh/symbian.c, gcc.c, ipa-cp.c, ipa-inline.c, loop-iv.c,\n+\tomega.c, tree-ssa-loop-niter.c, treestruct.def: Fix typos and\n+\tfollow spelling conventions in various\n+\twarning/error/diagnostic messages.\n+\n 2007-05-25  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR tree-opt/32090"}, {"sha": "dccf9229965d4277f5fcd4a371128ed4710110e6", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -2662,11 +2662,11 @@ parser_build_binary_op (enum tree_code code, struct c_expr arg1,\n     {\n       if ((code1 == STRING_CST && !integer_zerop (arg2.value))\n \t  || (code2 == STRING_CST && !integer_zerop (arg1.value)))\n-\twarning (OPT_Waddress, \"comparison with string literal results in unspecified behaviour\");\n+\twarning (OPT_Waddress, \"comparison with string literal results in unspecified behavior\");\n     }\n   else if (TREE_CODE_CLASS (code) == tcc_comparison\n \t   && (code1 == STRING_CST || code2 == STRING_CST))\n-    warning (OPT_Waddress, \"comparison with string literal results in unspecified behaviour\");\n+    warning (OPT_Waddress, \"comparison with string literal results in unspecified behavior\");\n \n   if (TREE_OVERFLOW_P (result.value) \n       && !TREE_OVERFLOW_P (arg1.value) "}, {"sha": "cf7c62caaa8f48443bdc32a04134838da6ba04e3", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -11778,7 +11778,7 @@ arm_print_operand (FILE *stream, rtx x, int code)\n \t want to do that.  */\n       if (x == const_true_rtx)\n \t{\n-\t  output_operand_lossage (\"instruction never exectued\");\n+\t  output_operand_lossage (\"instruction never executed\");\n \t  return;\n \t}\n       if (!COMPARISON_P (x))"}, {"sha": "17a8d5995a7df1755e52658e8047779dd97e8ae0", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -1415,14 +1415,14 @@ darwin_handle_kext_attribute (tree *node, tree name,\n   /* APPLE KEXT stuff -- only applies with pure static C++ code.  */\n   if (! TARGET_KEXTABI)\n     {\n-      warning (0, \"%<%s%> 2.95 vtable-compatability attribute applies \"\n+      warning (0, \"%<%s%> 2.95 vtable-compatibility attribute applies \"\n \t       \"only when compiling a kext\", IDENTIFIER_POINTER (name));\n \n       *no_add_attrs = true;\n     }\n   else if (TREE_CODE (*node) != RECORD_TYPE)\n     {\n-      warning (0, \"%<%s%> 2.95 vtable-compatability attribute applies \"\n+      warning (0, \"%<%s%> 2.95 vtable-compatibility attribute applies \"\n \t       \"only to C++ classes\", IDENTIFIER_POINTER (name));\n \n       *no_add_attrs = true;"}, {"sha": "981202652074394eebbd1b4e5654f334c9551a03", "filename": "gcc/config/sh/symbian.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fconfig%2Fsh%2Fsymbian.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fconfig%2Fsh%2Fsymbian.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsymbian.c?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -381,7 +381,7 @@ symbian_add_attribute (tree node, const char *attr_name)\n     TYPE_ATTRIBUTES (node) = tree_cons (attr, NULL_TREE, attrs);\n \n #if SYMBIAN_DEBUG\n-  fprintf (stderr, \"propogate %s attribute\", attr_name);\n+  fprintf (stderr, \"propagate %s attribute\", attr_name);\n   print_node_brief (stderr, \" to\", node, 0);\n   fprintf (stderr, \"\\n\");\n #endif"}, {"sha": "14e3e7a618758f6556c354d8735cf6a233dad761", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -7963,7 +7963,7 @@ static const char *\n print_asm_header_spec_function (int arg ATTRIBUTE_UNUSED,\n \t\t\t\tconst char **argv ATTRIBUTE_UNUSED)\n {\n-  printf (_(\"Assember options\\n================\\n\\n\"));\n+  printf (_(\"Assembler options\\n=================\\n\\n\"));\n   printf (_(\"Use \\\"-Wa,OPTION\\\" to pass \\\"OPTION\\\" to the assembler.\\n\\n\"));\n   fflush (stdout);\n   return NULL;"}, {"sha": "ee989c14ee7a63043669748d426b44873343aa6f", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -792,7 +792,7 @@ ipcp_profile_bb_print (FILE * f)\n \t    ENTRY_BLOCK_PTR_FOR_FUNCTION (DECL_STRUCT_FUNCTION (node->decl));\n \t  fprintf (f, \"ENTRY: Count\");\n \t  fprintf (f, \" \" HOST_WIDE_INT_PRINT_DEC\n-\t\t   \" Frquency  %d\\n\", (HOST_WIDE_INT) bb->count,\n+\t\t   \" Frequency  %d\\n\", (HOST_WIDE_INT) bb->count,\n \t\t   bb->frequency);\n \n \t  FOR_EACH_BB_FN (bb, DECL_STRUCT_FUNCTION (node->decl))"}, {"sha": "ee9d7e6ca00404836c53adb1077c2a192c7e8aec", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -718,7 +718,7 @@ cgraph_decide_recursive_inlining (struct cgraph_node *node)\n \t{\n           if (dump_file)\n \t    fprintf (dump_file, \n-\t\t     \"   maxmal depth reached\\n\");\n+\t\t     \"   maximal depth reached\\n\");\n \t  continue;\n \t}\n "}, {"sha": "bdf1508d9ef951a609cd4af6a89032c09249336c", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -1026,7 +1026,7 @@ iv_analyze_def (struct df_ref *def, struct rtx_iv *iv)\n \n   if (dump_file)\n     {\n-      fprintf (dump_file, \"Analysing def of \");\n+      fprintf (dump_file, \"Analyzing def of \");\n       print_rtl (dump_file, reg);\n       fprintf (dump_file, \" in insn \");\n       print_rtl_single (dump_file, insn);\n@@ -1080,7 +1080,7 @@ iv_analyze_op (rtx insn, rtx op, struct rtx_iv *iv)\n \n   if (dump_file)\n     {\n-      fprintf (dump_file, \"Analysing operand \");\n+      fprintf (dump_file, \"Analyzing operand \");\n       print_rtl (dump_file, op);\n       fprintf (dump_file, \" of insn \");\n       print_rtl_single (dump_file, insn);"}, {"sha": "7b693005b4971867e0831b40c81e74d58b149b48", "filename": "gcc/omega.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fomega.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Fomega.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomega.c?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -1696,7 +1696,7 @@ normalize_omega_problem (omega_pb pb)\n \t\t\tif (dump_file && (dump_flags & TDF_DETAILS))\n \t\t\t  {\n \t\t\t    fprintf (dump_file,\n-\t\t\t\t     \"Removing Redudant Equation: \");\n+\t\t\t\t     \"Removing Redundant Equation: \");\n \t\t\t    omega_print_geq (dump_file, pb, &(pb->geqs[e2]));\n \t\t\t    fprintf (dump_file, \"\\n\");\n \t\t\t    fprintf (dump_file,\n@@ -1714,7 +1714,7 @@ normalize_omega_problem (omega_pb pb)\n \t\t  {\n \t\t    if (dump_file && (dump_flags & TDF_DETAILS))\n \t\t      {\n-\t\t\tfprintf (dump_file, \"Removing Redudant Equation: \");\n+\t\t\tfprintf (dump_file, \"Removing Redundant Equation: \");\n \t\t\tomega_print_geq (dump_file, pb, &(pb->geqs[e]));\n \t\t\tfprintf (dump_file, \"\\n\");\n \t\t\tfprintf (dump_file, \"[b]      Made Redundant by: \");\n@@ -1736,7 +1736,7 @@ normalize_omega_problem (omega_pb pb)\n \t\t  {\n \t\t    if (dump_file && (dump_flags & TDF_DETAILS))\n \t\t      {\n-\t\t\tfprintf (dump_file, \"Removing Redudant Equation: \");\n+\t\t\tfprintf (dump_file, \"Removing Redundant Equation: \");\n \t\t\tomega_print_geq (dump_file, pb, &(pb->geqs[e2]));\n \t\t\tfprintf (dump_file, \"\\n\");\n \t\t\tfprintf (dump_file, \"[c]      Made Redundant by: \");\n@@ -1750,7 +1750,7 @@ normalize_omega_problem (omega_pb pb)\n \t\t  {\n \t\t    if (dump_file && (dump_flags & TDF_DETAILS))\n \t\t      {\n-\t\t\tfprintf (dump_file, \"Removing Redudant Equation: \");\n+\t\t\tfprintf (dump_file, \"Removing Redundant Equation: \");\n \t\t\tomega_print_geq (dump_file, pb, &(pb->geqs[e]));\n \t\t\tfprintf (dump_file, \"\\n\");\n \t\t\tfprintf (dump_file, \"[d]      Made Redundant by: \");\n@@ -2094,7 +2094,7 @@ omega_eliminate_redundant (omega_pb pb, bool expensive)\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n-      fprintf (dump_file, \"in eliminate Redudant:\\n\");\n+      fprintf (dump_file, \"in eliminate Redundant:\\n\");\n       omega_print_problem (dump_file, pb);\n     }\n \n@@ -4663,7 +4663,7 @@ omega_solve_geq (omega_pb pb, enum omega_result desired_res)\n \n \t      if (dump_file && (dump_flags & TDF_DETAILS))\n \t\t{\n-\t\t  fprintf (dump_file, \"lower bound coeeficients = \");\n+\t\t  fprintf (dump_file, \"lower bound coefficients = \");\n \n \t\t  for (j = 0; j < lower_bounds; j++)\n \t\t    fprintf (dump_file, \" %d\",\n@@ -4950,7 +4950,7 @@ omega_problem_has_red_equations (omega_pb pb)\n     {\n       if (!result)\n \tfprintf (dump_file,\n-\t\t \"******************** Redudant Red Equations eliminated!!\\n\");\n+\t\t \"******************** Redundant Red Equations eliminated!!\\n\");\n       else\n \tfprintf (dump_file,\n \t\t \"******************** Red Equations remain\\n\");"}, {"sha": "0462e4e166f0ca17082a53ccab984aac65b94382", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -1247,7 +1247,7 @@ number_of_iterations_cond (struct loop *loop,\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file,\n-\t       \"Analysing # of iterations of loop %d\\n\", loop->num);\n+\t       \"Analyzing # of iterations of loop %d\\n\", loop->num);\n \n       fprintf (dump_file, \"  exit condition \");\n       dump_affine_iv (dump_file, iv0);"}, {"sha": "437e0ac867c85000792777146f05770c3ffea6c6", "filename": "gcc/treestruct.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Ftreestruct.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dad0aca146f96888dda601263e31f8621de1bae/gcc%2Ftreestruct.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreestruct.def?ref=4dad0aca146f96888dda601263e31f8621de1bae", "patch": "@@ -35,7 +35,7 @@ DEFTREESTRUCT(TS_REAL_CST, \"real cst\")\n DEFTREESTRUCT(TS_VECTOR, \"vector\")\n DEFTREESTRUCT(TS_STRING, \"string\")\n DEFTREESTRUCT(TS_COMPLEX, \"complex\")\n-DEFTREESTRUCT(TS_IDENTIFIER, \"indentifier\")\n+DEFTREESTRUCT(TS_IDENTIFIER, \"identifier\")\n DEFTREESTRUCT(TS_DECL_MINIMAL, \"decl minimal\")\n DEFTREESTRUCT(TS_DECL_COMMON, \"decl common\")\n DEFTREESTRUCT(TS_DECL_WRTL, \"decl with RTL\")"}]}