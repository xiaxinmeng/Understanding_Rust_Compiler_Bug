{"sha": "8c96ccceb27e96246ff474800c3d7350445bd6e9", "node_id": "C_kwDOANBUbNoAKDhjOTZjY2NlYjI3ZTk2MjQ2ZmY0NzQ4MDBjM2Q3MzUwNDQ1YmQ2ZTk", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-21T21:59:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-21T21:59:42Z"}, "message": "Merge #885\n\n885: Improve error message for failure in Method resolution r=philberty a=philberty\n\nUse the locus for the method name segment and print its name as part of the\r\nerror message improves the quality of the error handling in the method\r\nresolution.\r\n\r\nFixes #861\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "7e2742b8b3d9711e5cbaea5283c9647febf8d042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e2742b8b3d9711e5cbaea5283c9647febf8d042"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c96ccceb27e96246ff474800c3d7350445bd6e9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6yzOCRBK7hj4Ov3rIwAAjRwIAJ/zZ3PWG8MnPwbNqrHKbd1e\ng1hj8OVGOltUdMWMOcxLOmmNPgSitu7b7Wa9GSi03IBBPyOwiftYGhqtW+YIQvIL\n3JfCcdgU6dcxOQVzHswgc5YUCfo5u0d+RappR9wheRM627KTo6aE/ZABnRKedSQz\ns/3Eeoj1nfD+aozJpPmhU9E6HLJ2g2jeoQPzv7dEj0mx6GZFu3vNoxmkjqcjeM7Q\nudXN5q4WqEn9VniGTTv5ScP/tlG+avYAa6T/1o4P6qaiGkB4T5vo26qUgosV623s\nJ/+ftyE3TZ7+q/H4v8mJk0UDRXv0FJRUdfEtfQ6uNUzfUDnuZsLgYJS6d45VPT4=\n=fcZk\n-----END PGP SIGNATURE-----\n", "payload": "tree 7e2742b8b3d9711e5cbaea5283c9647febf8d042\nparent c11048a764d722894ee432466282cad8ae11b312\nparent d31c1bdaa8f0c08ec5517a0819b590e5650795ee\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1642802382 +0000\ncommitter GitHub <noreply@github.com> 1642802382 +0000\n\nMerge #885\n\n885: Improve error message for failure in Method resolution r=philberty a=philberty\n\nUse the locus for the method name segment and print its name as part of the\r\nerror message improves the quality of the error handling in the method\r\nresolution.\r\n\r\nFixes #861\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c96ccceb27e96246ff474800c3d7350445bd6e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c96ccceb27e96246ff474800c3d7350445bd6e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c96ccceb27e96246ff474800c3d7350445bd6e9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c11048a764d722894ee432466282cad8ae11b312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11048a764d722894ee432466282cad8ae11b312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c11048a764d722894ee432466282cad8ae11b312"}, {"sha": "d31c1bdaa8f0c08ec5517a0819b590e5650795ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d31c1bdaa8f0c08ec5517a0819b590e5650795ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d31c1bdaa8f0c08ec5517a0819b590e5650795ee"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "0ac924fa26e003a814d2abbb142ce0d5b0fc632c", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c96ccceb27e96246ff474800c3d7350445bd6e9/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c96ccceb27e96246ff474800c3d7350445bd6e9/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=8c96ccceb27e96246ff474800c3d7350445bd6e9", "patch": "@@ -299,17 +299,10 @@ class TypeCheckExpr : public TypeCheckBase\n       = MethodResolution::Select (candidates, receiver_tyty, adjustments);\n     if (resolved_candidate == nullptr)\n       {\n-\tif (candidates.size () > 1)\n-\t  {\n-\t    // not sure if this is the correct error here\n-\t    ReportMultipleCandidateError::Report (\n-\t      candidates, expr.get_method_name ().get_segment (),\n-\t      expr.get_method_name ().get_locus ());\n-\t  }\n-\telse\n-\t  {\n-\t    rust_error_at (expr.get_locus (), \"failed to resolve method\");\n-\t  }\n+\trust_error_at (\n+\t  expr.get_method_name ().get_locus (),\n+\t  \"failed to resolve method for %<%s%>\",\n+\t  expr.get_method_name ().get_segment ().as_string ().c_str ());\n \treturn;\n       }\n "}, {"sha": "18652406085b4444af203719dba49bf41edb4996", "filename": "gcc/testsuite/rust/compile/method1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c96ccceb27e96246ff474800c3d7350445bd6e9/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmethod1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c96ccceb27e96246ff474800c3d7350445bd6e9/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmethod1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmethod1.rs?ref=8c96ccceb27e96246ff474800c3d7350445bd6e9", "patch": "@@ -8,6 +8,6 @@ pub fn main() {\n     a = Foo(123);\n \n     a.test();\n-    // { dg-error \"failed to resolve method\" \"\" { target *-*-* } .-1 }\n+    // { dg-error \"failed to resolve method for .test.\" \"\" { target *-*-* } .-1 }\n     // { dg-error {failed to type resolve expression} \"\" { target *-*-* } .-2 }\n }"}]}