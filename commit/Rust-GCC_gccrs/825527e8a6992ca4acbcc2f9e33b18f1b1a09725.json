{"sha": "825527e8a6992ca4acbcc2f9e33b18f1b1a09725", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI1NTI3ZThhNjk5MmNhNGFjYmNjMmY5ZTMzYjE4ZjFiMWEwOTcyNQ==", "commit": {"author": {"name": "Edgar E. Iglesias", "email": "edgar.iglesias@gmail.com", "date": "2013-02-17T16:18:09Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2013-02-17T16:18:09Z"}, "message": "Free variable local allocs at block ends.\n\n * config/microblaze/microblaze.md (save_stack_block): Define.\n   (restore_stack_block): Likewise.\n\nFrom-SVN: r196110", "tree": {"sha": "3cbb1337af6c0831d72ee76622febbd3566468cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cbb1337af6c0831d72ee76622febbd3566468cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/825527e8a6992ca4acbcc2f9e33b18f1b1a09725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825527e8a6992ca4acbcc2f9e33b18f1b1a09725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/825527e8a6992ca4acbcc2f9e33b18f1b1a09725", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825527e8a6992ca4acbcc2f9e33b18f1b1a09725/comments", "author": {"login": "edgarigl", "id": 86901, "node_id": "MDQ6VXNlcjg2OTAx", "avatar_url": "https://avatars.githubusercontent.com/u/86901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgarigl", "html_url": "https://github.com/edgarigl", "followers_url": "https://api.github.com/users/edgarigl/followers", "following_url": "https://api.github.com/users/edgarigl/following{/other_user}", "gists_url": "https://api.github.com/users/edgarigl/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgarigl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgarigl/subscriptions", "organizations_url": "https://api.github.com/users/edgarigl/orgs", "repos_url": "https://api.github.com/users/edgarigl/repos", "events_url": "https://api.github.com/users/edgarigl/events{/privacy}", "received_events_url": "https://api.github.com/users/edgarigl/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "162ceab464a66006a52c0e6241a933f5104a58e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/162ceab464a66006a52c0e6241a933f5104a58e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/162ceab464a66006a52c0e6241a933f5104a58e7"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "dbf8a17332818f5149bfc25c76d2cba84f652e17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825527e8a6992ca4acbcc2f9e33b18f1b1a09725/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825527e8a6992ca4acbcc2f9e33b18f1b1a09725/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=825527e8a6992ca4acbcc2f9e33b18f1b1a09725", "patch": "@@ -1,3 +1,8 @@\n+2013-02-17  Edgar E. Iglesias  <edgar.iglesias@gmail.com>\n+\n+\t* config/microblaze/microblaze.md (save_stack_block): Define.\n+\t(restore_stack_block): Likewise.\n+\n 2013-02-16  Edgar E. Iglesias  <edgar.iglesias@gmail.com>\n \n \t* config/microblaze/linux.h (TARGET_SUPPORTS_PIC): Define as 1."}, {"sha": "1d55a167be4d216656519d685734553292a3d207", "filename": "gcc/config/microblaze/microblaze.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825527e8a6992ca4acbcc2f9e33b18f1b1a09725/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825527e8a6992ca4acbcc2f9e33b18f1b1a09725/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md?ref=825527e8a6992ca4acbcc2f9e33b18f1b1a09725", "patch": "@@ -1860,6 +1860,32 @@\n   }\n )\n \n+(define_expand \"save_stack_block\"\n+  [(match_operand 0 \"register_operand\" \"\")\n+   (match_operand 1 \"register_operand\" \"\")]\n+  \"\"\n+  {\n+    emit_move_insn (operands[0], operands[1]);\n+    DONE;\n+  }\n+)\n+\n+(define_expand \"restore_stack_block\"\n+  [(match_operand 0 \"register_operand\" \"\")\n+   (match_operand 1 \"register_operand\" \"\")]\n+  \"\"\n+  {\n+    rtx retaddr = gen_rtx_MEM (Pmode, stack_pointer_rtx);\n+    rtx rtmp    = gen_rtx_REG (SImode, R_TMP);\n+\n+    /* Move the retaddr.  */\n+    emit_move_insn (rtmp, retaddr);\n+    emit_move_insn (operands[0], operands[1]);\n+    emit_move_insn (gen_rtx_MEM (Pmode, operands[0]), rtmp);\n+    DONE;\n+  }\n+)\n+\n ;; Trivial return.  Make it look like a normal return insn as that\n ;; allows jump optimizations to work better .\n (define_expand \"return\""}]}