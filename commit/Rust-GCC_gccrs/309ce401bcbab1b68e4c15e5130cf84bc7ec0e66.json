{"sha": "309ce401bcbab1b68e4c15e5130cf84bc7ec0e66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA5Y2U0MDFiY2JhYjFiNjhlNGMxNWU1MTMwY2Y4NGJjN2VjMGU2Ng==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-06-03T19:15:23Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-06-03T19:15:23Z"}, "message": "In libobjc/: 2011-06-03 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn libobjc/:\n2011-06-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* Makefile.in (OBJC_DEPRECATED_H): Removed objc_valloc.h,\n\tobjc_malloc.h and objc_unexpected_exception.h.\n\t(exception.lo): Do not use -Wno-deprecated-declarations.\n\t(exception_gc.lo): Likewise.\n\t* objc/objc-api.h: Do not include deprecated/objc_valloc.h,\n\tdeprecated/objc_malloc.h and\n\tdeprecated/objc_unexpected_exception.h.\n\t* objc/deprecated/objc_valloc.h: Removed.\n\t* objc/deprecated/objc_malloc.h: Removed.\n\t* objc/deprecated/objc_unexpected_exception.h: Removed.\n\t* exception.c (_objc_unexpected_exception): Removed.\n\t(objc_exception_throw): Do not check for\n\t_objc_unexpected_exception.\n\t* memory.c (objc_valloc, _objc_malloc, _objc_atomic_malloc,\n\t_objc_valloc, _objc_realloc, _objc_calloc, _objc_free): Removed.\t\n\t* libobjc.def (_objc_unexpected_exception, objc_valloc): Removed.\n\nFrom-SVN: r174615", "tree": {"sha": "43cb298fe356fef3fd9afe487864fd08bd5a3f09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43cb298fe356fef3fd9afe487864fd08bd5a3f09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f570b66f187078ecf074830b0c56d29030e7a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f570b66f187078ecf074830b0c56d29030e7a8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f570b66f187078ecf074830b0c56d29030e7a8a"}], "stats": {"total": 111, "additions": 21, "deletions": 90}, "files": [{"sha": "735e0644bf5373dab29ef7ab2d4b1da69d86488b", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=309ce401bcbab1b68e4c15e5130cf84bc7ec0e66", "patch": "@@ -1,3 +1,22 @@\n+2011-06-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* Makefile.in (OBJC_DEPRECATED_H): Removed objc_valloc.h,\n+\tobjc_malloc.h and objc_unexpected_exception.h.\n+\t(exception.lo): Do not use -Wno-deprecated-declarations.\n+\t(exception_gc.lo): Likewise.\n+\t* objc/objc-api.h: Do not include deprecated/objc_valloc.h,\n+\tdeprecated/objc_malloc.h and\n+\tdeprecated/objc_unexpected_exception.h.\n+\t* objc/deprecated/objc_valloc.h: Removed.\n+\t* objc/deprecated/objc_malloc.h: Removed.\n+\t* objc/deprecated/objc_unexpected_exception.h: Removed.\n+\t* exception.c (_objc_unexpected_exception): Removed.\n+\t(objc_exception_throw): Do not check for\n+\t_objc_unexpected_exception.\n+\t* memory.c (objc_valloc, _objc_malloc, _objc_atomic_malloc,\n+\t_objc_valloc, _objc_realloc, _objc_calloc, _objc_free): Removed.\t\n+\t* libobjc.def (_objc_unexpected_exception, objc_valloc): Removed.\n+\t\n 2011-06-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc/objc.h: Do not include deprecated/STR.h."}, {"sha": "1d021e8b91f3b97af9998087abd3c280147a9073", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=309ce401bcbab1b68e4c15e5130cf84bc7ec0e66", "patch": "@@ -132,11 +132,8 @@ OBJC_DEPRECATED_H = \\\n   Object.h \\\n   Protocol.h \\\n   objc_get_uninstalled_dtable.h \\\n-  objc_malloc.h \\\n   objc_msg_sendv.h \\\n   objc_object_alloc.h \\\n-  objc_unexpected_exception.h \\\n-  objc_valloc.h \\\n   struct_objc_category.h \\\n   struct_objc_class.h \\\n   struct_objc_ivar.h \\\n@@ -268,16 +265,14 @@ sendmsg_gc.lo: sendmsg.c runtime-info.h\n # These files have separate rules because they require special\n # compiler flags.\n \n-# -Wno-deprecated-declarations is to silence warnings from using \n-# _objc_unexpected_exception.\n exception.lo: exception.c\n \t$(LIBTOOL_COMPILE) $(CC) $< -c \\\n-\t   $(ALL_CFLAGS) $(INCLUDES) -fexceptions -Wno-deprecated-declarations \\\n+\t   $(ALL_CFLAGS) $(INCLUDES) -fexceptions \\\n \t   -o $@\n \n exception_gc.lo: exception.c\n \t$(LIBTOOL_COMPILE) $(CC) $< -c \\\n-\t   $(ALL_CFLAGS) $(INCLUDES) $(OBJC_GCFLAGS) -fexceptions -Wno-deprecated-declarations \\\n+\t   $(ALL_CFLAGS) $(INCLUDES) $(OBJC_GCFLAGS) -fexceptions \\\n \t   -o $@\n \n doc: info dvi pdf html"}, {"sha": "37daed8f30c26b690127664c4cb3cb7074dc4db2", "filename": "libobjc/exception.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2Fexception.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2Fexception.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fexception.c?ref=309ce401bcbab1b68e4c15e5130cf84bc7ec0e66", "patch": "@@ -31,12 +31,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"unwind-pe.h\"\n #include <string.h> /* For memcpy */\n \n-/* This hook allows libraries to sepecify special actions when an\n-   exception is thrown without a handler in place.  This is deprecated\n-   in favour of objc_set_uncaught_exception_handler ().  */\n-void (*_objc_unexpected_exception) (id exception); /* !T:SAFE */\n-\n-\n /* 'is_kind_of_exception_matcher' is our default exception matcher -\n    it determines if the object 'exception' is of class 'catch_class',\n    or of a subclass.  */\n@@ -539,13 +533,6 @@ objc_exception_throw (id exception)\n       (*__objc_uncaught_exception_handler) (exception);\n     }\n \n-  /* As a last resort support the old, deprecated way of setting an\n-     uncaught exception handler.  */\n-  if (_objc_unexpected_exception != 0)\n-    {\n-      (*_objc_unexpected_exception) (exception);\n-    }\n-\n   abort ();\n }\n "}, {"sha": "b825e4e383117f7e23d32d25cf836998633e68a8", "filename": "libobjc/libobjc.def", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2Flibobjc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2Flibobjc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Flibobjc.def?ref=309ce401bcbab1b68e4c15e5130cf84bc7ec0e66", "patch": "@@ -26,7 +26,6 @@ objc_get_uninstalled_dtable\n _objc_load_callback\n objc_malloc\n objc_atomic_malloc\n-objc_valloc\n objc_realloc\n objc_calloc\n objc_free\n@@ -36,7 +35,6 @@ objc_mutex_deallocate\n objc_mutex_lock\n objc_mutex_trylock\n objc_mutex_unlock\n-_objc_unexpected_exception\n objc_thread_detach\n objc_thread_exit\n objc_thread_get_data"}, {"sha": "c02176ef874c1d696e2050d9a178438d57c5705e", "filename": "libobjc/memory.c", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2Fmemory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2Fmemory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fmemory.c?ref=309ce401bcbab1b68e4c15e5130cf84bc7ec0e66", "patch": "@@ -133,38 +133,3 @@ objc_free (void *mem)\n }\n \n #endif\t/* !OBJC_WITH_GC */\n-\n-/* The rest of the file contains deprecated code.  */\n-\n-#if OBJC_WITH_GC\n-\n-void *\n-objc_valloc (size_t size)\n-{\n-  void *res = (void *)(GC_malloc (size));\n-  if (! res)\n-    _objc_abort (\"Virtual memory exhausted\\n\");\n-  return res;\n-}\n-\n-#else\n-\n-void *\n-objc_valloc (size_t size)\n-{\n-  void *res = (void *)(malloc (size));\n-  if (! res)\n-    _objc_abort (\"Virtual memory exhausted\\n\");\n-  return res;\n-}\n-\n-#endif\t/* !OBJC_WITH_GC */\n-\n-/* Hook functions for memory allocation and disposal.  Deprecated and\n-   currently unused.  */\n-void *(*_objc_malloc) (size_t) = malloc;\n-void *(*_objc_atomic_malloc) (size_t) = malloc;\n-void *(*_objc_valloc) (size_t) = malloc;\n-void *(*_objc_realloc) (void *, size_t) = realloc;\n-void *(*_objc_calloc) (size_t, size_t) = calloc;\n-void (*_objc_free) (void *) = free;"}, {"sha": "cf6c6e9d092e81a1fef753f285e8afa0253381e8", "filename": "libobjc/objc/deprecated/objc_malloc.h", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f570b66f187078ecf074830b0c56d29030e7a8a/libobjc%2Fobjc%2Fdeprecated%2Fobjc_malloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f570b66f187078ecf074830b0c56d29030e7a8a/libobjc%2Fobjc%2Fdeprecated%2Fobjc_malloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fobjc_malloc.h?ref=4f570b66f187078ecf074830b0c56d29030e7a8a", "patch": "@@ -1,17 +0,0 @@\n-/*\n-** Hook functions for memory allocation and disposal.\n-** This makes it easy to substitute garbage collection systems\n-** such as Boehm's GC by assigning these function pointers\n-** to the GC's allocation routines.  By default these point\n-** to the ANSI standard malloc, realloc, free, etc.\n-**\n-** Users should call the normal objc routines above for\n-** memory allocation and disposal within their programs.\n-*/\n-objc_EXPORT void *(*_objc_malloc)(size_t);\n-objc_EXPORT void *(*_objc_atomic_malloc)(size_t);\n-objc_EXPORT void *(*_objc_valloc)(size_t);\n-objc_EXPORT void *(*_objc_realloc)(void *, size_t);\n-objc_EXPORT void *(*_objc_calloc)(size_t, size_t);\n-objc_EXPORT void (*_objc_free)(void *);\n-"}, {"sha": "69ffd4e87da1854a75ad47dd639c9fa79c3035eb", "filename": "libobjc/objc/deprecated/objc_unexpected_exception.h", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f570b66f187078ecf074830b0c56d29030e7a8a/libobjc%2Fobjc%2Fdeprecated%2Fobjc_unexpected_exception.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f570b66f187078ecf074830b0c56d29030e7a8a/libobjc%2Fobjc%2Fdeprecated%2Fobjc_unexpected_exception.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fobjc_unexpected_exception.h?ref=4f570b66f187078ecf074830b0c56d29030e7a8a", "patch": "@@ -1,9 +0,0 @@\n-/*\n-** Hook for uncaught exceptions.  This hook is called when an\n-** exception is thrown and no valid exception handler is in place.\n-** The function is expected never to return.  If the function returns\n-** the result is currently undefined.  This is deprecated.  Please use\n-** objc_set_uncaught_exception_handler() from objc/objc-exception.h\n-** instead.\n-*/\n-objc_EXPORT void (*_objc_unexpected_exception)(id) __attribute__ ((deprecated));"}, {"sha": "a715f1a733034394079b8ef4547e9a43dd68a5a9", "filename": "libobjc/objc/deprecated/objc_valloc.h", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f570b66f187078ecf074830b0c56d29030e7a8a/libobjc%2Fobjc%2Fdeprecated%2Fobjc_valloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f570b66f187078ecf074830b0c56d29030e7a8a/libobjc%2Fobjc%2Fdeprecated%2Fobjc_valloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fobjc_valloc.h?ref=4f570b66f187078ecf074830b0c56d29030e7a8a", "patch": "@@ -1,2 +0,0 @@\n-void *\n-objc_valloc(size_t size);"}, {"sha": "f0734d76e480b937149b5fcac2ed2e60894d920c", "filename": "libobjc/objc/objc-api.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2Fobjc%2Fobjc-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/309ce401bcbab1b68e4c15e5130cf84bc7ec0e66/libobjc%2Fobjc%2Fobjc-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc-api.h?ref=309ce401bcbab1b68e4c15e5130cf84bc7ec0e66", "patch": "@@ -218,11 +218,6 @@ objc_calloc(size_t nelem, size_t size);\n objc_EXPORT void\n objc_free(void *mem);\n \n-#include \"deprecated/objc_valloc.h\"\n-#include \"deprecated/objc_malloc.h\"\n-\n-#include \"deprecated/objc_unexpected_exception.h\"\n-\n objc_EXPORT Method_t class_get_class_method(MetaClass _class, SEL aSel);\n \n objc_EXPORT Method_t class_get_instance_method(Class _class, SEL aSel);"}]}