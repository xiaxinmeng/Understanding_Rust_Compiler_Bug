{"sha": "eb8543b35307e95a8f74645cea36a9153869fdda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4NTQzYjM1MzA3ZTk1YThmNzQ2NDVjZWEzNmE5MTUzODY5ZmRkYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-05-25T06:34:16Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-05-25T06:34:16Z"}, "message": "c-typeck.c (digest_init): Issue error messages about invalid constants, not warnings.\n\n\t* c-typeck.c (digest_init): Issue error messages about\n\tinvalid constants, not warnings.\n\nFrom-SVN: r42560", "tree": {"sha": "4639b32f032e98248f5d2e4e613de14e99564633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4639b32f032e98248f5d2e4e613de14e99564633"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb8543b35307e95a8f74645cea36a9153869fdda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8543b35307e95a8f74645cea36a9153869fdda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb8543b35307e95a8f74645cea36a9153869fdda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8543b35307e95a8f74645cea36a9153869fdda/comments", "author": null, "committer": null, "parents": [{"sha": "a16ad7794695d54a794e023556cebd61e20bd4c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a16ad7794695d54a794e023556cebd61e20bd4c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a16ad7794695d54a794e023556cebd61e20bd4c2"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "c2c6e2992e54321692c112fe28ad6d63274f06e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8543b35307e95a8f74645cea36a9153869fdda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8543b35307e95a8f74645cea36a9153869fdda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb8543b35307e95a8f74645cea36a9153869fdda", "patch": "@@ -1,3 +1,8 @@\n+2001-05-24  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* c-typeck.c (digest_init): Issue error messages about \n+\tinvalid constants, not warnings.\n+\n 2001-05-24  Mark Mitchell  <mark@codesourcery.com>\n \n \t* invoke.texi (-fno-builtin): Document that this is always on"}, {"sha": "71dae28e909cb630c5937587a0e432f09c4e88ea", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8543b35307e95a8f74645cea36a9153869fdda/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8543b35307e95a8f74645cea36a9153869fdda/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=eb8543b35307e95a8f74645cea36a9153869fdda", "patch": "@@ -4791,14 +4791,21 @@ digest_init (type, init, require_constant, constructor_constant)\n \t  if (flag_pedantic_errors)\n \t    inside_init = error_mark_node;\n \t}\n-      else if (require_constant && ! TREE_CONSTANT (inside_init))\n+      else if (require_constant \n+\t       && (!TREE_CONSTANT (inside_init)\n+\t\t   /* This test catches things like `7 / 0' which\n+\t\t      result in an expression for which TREE_CONSTANT\n+\t\t      is true, but which is not actually something\n+\t\t      that is a legal constant.  We really should not\n+\t\t      be using this function, because it is a part of\n+\t\t      the back-end.  Instead, the expression should\n+\t\t      already have been turned into ERROR_MARK_NODE.  */\n+\t\t   || !initializer_constant_valid_p (inside_init,\n+\t\t\t\t\t\t     TREE_TYPE (inside_init))))\n \t{\n \t  error_init (\"initializer element is not constant\");\n \t  inside_init = error_mark_node;\n \t}\n-      else if (require_constant\n-\t       && initializer_constant_valid_p (inside_init, TREE_TYPE (inside_init)) == 0)\n-\tpedwarn (\"initializer element is not computable at load time\");\n \n       return inside_init;\n     }"}, {"sha": "754a38c147f1839dc7a299fde4112c6f658033aa", "filename": "gcc/testsuite/gcc.dg/noncompile/20010524-1.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8543b35307e95a8f74645cea36a9153869fdda/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20010524-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8543b35307e95a8f74645cea36a9153869fdda/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20010524-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20010524-1.c?ref=eb8543b35307e95a8f74645cea36a9153869fdda", "patch": "@@ -0,0 +1,2 @@\n+int i = 7 / 0; /* { dg-error \"not constant\" } */\n+"}]}