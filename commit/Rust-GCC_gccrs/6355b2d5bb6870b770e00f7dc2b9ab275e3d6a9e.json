{"sha": "6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM1NWIyZDViYjY4NzBiNzcwZTAwZjdkYzJiOWFiMjc1ZTNkNmE5ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-06-14T17:45:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-06-14T17:45:08Z"}, "message": "re PR middle-end/15945 (Incorrect floating point optimization)\n\n\tPR middle-end/15945\n\t* simplify-rtx.c (simplify_binary_operation): Don't optimize out\n\tInf + -Inf, Inf - Inf, Inf / Inf and 0 * Inf if flag_trapping_math.\n\nFrom-SVN: r83121", "tree": {"sha": "84ea37e94f5eeb0a03216869549b532c423766c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84ea37e94f5eeb0a03216869549b532c423766c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44930935245c606dc826b43040603a71ad431e54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44930935245c606dc826b43040603a71ad431e54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44930935245c606dc826b43040603a71ad431e54"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "d7faa5d7818cd70fc8f178d61ae001f99d84fc5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e", "patch": "@@ -1,3 +1,9 @@\n+2004-06-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/15945\n+\t* simplify-rtx.c (simplify_binary_operation): Don't optimize out\n+\tInf + -Inf, Inf - Inf, Inf / Inf and 0 * Inf if flag_trapping_math.\n+\n 2004-06-14  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* opts.sh (var_args): Fix regexp."}, {"sha": "0d3b2bde45f0b3cee68314191fe298397b2d44e2", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e", "patch": "@@ -1277,6 +1277,41 @@ simplify_binary_operation (enum rtx_code code, enum machine_mode mode,\n \t      && (flag_trapping_math || ! MODE_HAS_INFINITIES (mode)))\n \t    return 0;\n \n+\t  if (MODE_HAS_INFINITIES (mode) && HONOR_NANS (mode)\n+\t      && flag_trapping_math\n+\t      && REAL_VALUE_ISINF (f0) && REAL_VALUE_ISINF (f1))\n+\t    {\n+\t      int s0 = REAL_VALUE_NEGATIVE (f0);\n+\t      int s1 = REAL_VALUE_NEGATIVE (f1);\n+\n+\t      switch (code)\n+\t\t{\n+\t\tcase PLUS:\n+\t\t  /* Inf + -Inf = NaN plus exception.  */\n+\t\t  if (s0 != s1)\n+\t\t    return 0;\n+\t\t  break;\n+\t\tcase MINUS:\n+\t\t  /* Inf - Inf = NaN plus exception.  */\n+\t\t  if (s0 == s1)\n+\t\t    return 0;\n+\t\t  break;\n+\t\tcase DIV:\n+\t\t  /* Inf / Inf = NaN plus exception.  */\n+\t\t  return 0;\n+\t\tdefault:\n+\t\t  break;\n+\t\t}\n+\t    }\n+\n+\t  if (code == MULT && MODE_HAS_INFINITIES (mode) && HONOR_NANS (mode)\n+\t      && flag_trapping_math\n+\t      && ((REAL_VALUE_ISINF (f0) && REAL_VALUES_EQUAL (f1, dconst0))\n+\t\t  || (REAL_VALUE_ISINF (f1)\n+\t\t      && REAL_VALUES_EQUAL (f0, dconst0))))\n+\t    /* Inf * 0 = NaN plus exception.  */\n+\t    return 0;\n+\n \t  REAL_ARITHMETIC (value, rtx_to_tree_code (code), f0, f1);\n \n \t  value = real_value_truncate (mode, value);"}]}