{"sha": "c7d97b2846c5647a81548caa3264d77c0a595010", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdkOTdiMjg0NmM1NjQ3YTgxNTQ4Y2FhMzI2NGQ3N2MwYTU5NTAxMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-02-28T09:17:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-02-28T09:17:20Z"}, "message": "re PR tree-optimization/79723 (Another case of dropped gs: prefix)\n\n2017-02-28  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/79723\n\t* tree-vect-stmts.c (get_vectype_for_scalar_type_and_size): Preserve\n\taddress-space properly.\n\n\t* gcc.target/i386/pr79723.c: New testcase.\n\nFrom-SVN: r245772", "tree": {"sha": "2a955532ce68b68328f58a3dfcbca6d4856dbd07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a955532ce68b68328f58a3dfcbca6d4856dbd07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7d97b2846c5647a81548caa3264d77c0a595010", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7d97b2846c5647a81548caa3264d77c0a595010", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7d97b2846c5647a81548caa3264d77c0a595010", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7d97b2846c5647a81548caa3264d77c0a595010/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d03958cfdfa01c3ad63ac50c190a056f1add4dc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d03958cfdfa01c3ad63ac50c190a056f1add4dc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d03958cfdfa01c3ad63ac50c190a056f1add4dc0"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "a98a08e2fb47b13bf2f55fc2cc6b7152500ef77b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d97b2846c5647a81548caa3264d77c0a595010/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d97b2846c5647a81548caa3264d77c0a595010/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7d97b2846c5647a81548caa3264d77c0a595010", "patch": "@@ -1,3 +1,9 @@\n+2017-02-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79723\n+\t* tree-vect-stmts.c (get_vectype_for_scalar_type_and_size): Preserve\n+\taddress-space properly.\n+\n 2017-02-28  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* doc/optinfo.texi (Optimization groups): Fix option used for"}, {"sha": "8c0514c7996dd8e8e2e0a2039f9ce14f126c75c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d97b2846c5647a81548caa3264d77c0a595010/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d97b2846c5647a81548caa3264d77c0a595010/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7d97b2846c5647a81548caa3264d77c0a595010", "patch": "@@ -1,3 +1,8 @@\n+2017-02-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79723\n+\t* gcc.target/i386/pr79723.c: New testcase.\n+\n 2017-02-27  Pat Haugen  <pthaugen@us.ibm.com>\n \n \tPR target/79544"}, {"sha": "0f1bdeee86aa4edb0707798a19e856066d0afe35", "filename": "gcc/testsuite/gcc.target/i386/pr79723.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d97b2846c5647a81548caa3264d77c0a595010/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79723.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d97b2846c5647a81548caa3264d77c0a595010/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79723.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79723.c?ref=c7d97b2846c5647a81548caa3264d77c0a595010", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -msse2 -mno-avx\" } */\n+\n+void memset_pattern_seg_gs(unsigned char * __seg_gs *s, long n)\n+{\n+  for (long i = 0; i < n; ++i)\n+    s[i] = 0;\n+}\n+\n+/* { dg-final { scan-assembler \"mov\\[au\\]p.\\[ \\t\\]\\[^,\\]+, %gs:\" } } */"}, {"sha": "c87f72c8af8e82ec569911ad785e36e38de93f3d", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d97b2846c5647a81548caa3264d77c0a595010/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d97b2846c5647a81548caa3264d77c0a595010/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=c7d97b2846c5647a81548caa3264d77c0a595010", "patch": "@@ -8957,6 +8957,7 @@ free_stmt_vec_info (gimple *stmt)\n static tree\n get_vectype_for_scalar_type_and_size (tree scalar_type, unsigned size)\n {\n+  tree orig_scalar_type = scalar_type;\n   machine_mode inner_mode = TYPE_MODE (scalar_type);\n   machine_mode simd_mode;\n   unsigned int nbytes = GET_MODE_SIZE (inner_mode);\n@@ -9017,6 +9018,12 @@ get_vectype_for_scalar_type_and_size (tree scalar_type, unsigned size)\n       && !INTEGRAL_MODE_P (TYPE_MODE (vectype)))\n     return NULL_TREE;\n \n+  /* Re-attach the address-space qualifier if we canonicalized the scalar\n+     type.  */\n+  if (TYPE_ADDR_SPACE (orig_scalar_type) != TYPE_ADDR_SPACE (vectype))\n+    return build_qualified_type\n+\t     (vectype, KEEP_QUAL_ADDR_SPACE (TYPE_QUALS (orig_scalar_type)));\n+\n   return vectype;\n }\n "}]}