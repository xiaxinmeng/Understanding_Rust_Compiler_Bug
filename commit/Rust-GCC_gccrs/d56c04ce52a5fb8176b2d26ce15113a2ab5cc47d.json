{"sha": "d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2YzA0Y2U1MmE1ZmI4MTc2YjJkMjZjZTE1MTEzYTJhYjVjYzQ3ZA==", "commit": {"author": {"name": "Dhananjay R. Deshpande", "email": "dhananjayd@kpit.com", "date": "2002-09-13T15:42:47Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-09-13T15:42:47Z"}, "message": "h8300.h (EIGHTBIT_CONSTANT_ADDRESS_P): Add support for H8/300, H8/S aa:8 mode.\n\n\t* config/h8300/h8300.h (EIGHTBIT_CONSTANT_ADDRESS_P): Add support\n\tfor H8/300, H8/S aa:8 mode.\n\t(TINY_CONSTANT_ADDRESS_P): Add support for H8/S aa:16 mode.\n\t* config/h8300/h8300.c (h8300_adjust_insn_length): Adjust length\n\tfor H8/300 aa:8 mode.\n\nFrom-SVN: r57108", "tree": {"sha": "6c7fc07b03a87e236e59742a9b7670863eb4d82b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c7fc07b03a87e236e59742a9b7670863eb4d82b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d/comments", "author": null, "committer": null, "parents": [{"sha": "69aeba4ed014799980dc331083b7030c5fa0ba9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69aeba4ed014799980dc331083b7030c5fa0ba9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69aeba4ed014799980dc331083b7030c5fa0ba9f"}], "stats": {"total": 48, "additions": 36, "deletions": 12}, "files": [{"sha": "e4998898b04dd840006979ea4ac2fb92d66a8aa9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d", "patch": "@@ -1,3 +1,11 @@\n+2002-09-13 Dhananjay Deshpande  <dhananjayd@kpit.com>\n+\n+\t* config/h8300/h8300.h (EIGHTBIT_CONSTANT_ADDRESS_P): Add support\n+\tfor H8/300, H8/S aa:8 mode.\n+\t(TINY_CONSTANT_ADDRESS_P): Add support for H8/S aa:16 mode.\n+\t* config/h8300/h8300.c (h8300_adjust_insn_length): Adjust length\n+\tfor H8/300 aa:8 mode.\n+\n 2002-09-13  Hartmut Penner  <hpenner@de.ibm.com>\n \n \t* config/s390/s390.md (\"trap\", \"conditional_trap\", \"*trap\"): New"}, {"sha": "a511518bbfa253ab167ac543aa1b0d4443cab698", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d", "patch": "@@ -3719,6 +3719,12 @@ h8300_adjust_insn_length (insn, length)\n \t  /* @Rs is 2 bytes shorter than the longest.  */\n \t  if (GET_CODE (addr) == REG)\n \t    return -2;\n+\n+\t  /* @aa:8 is 2 bytes shorter than the longest.  */\n+\t  if (GET_MODE (SET_SRC (pat)) == QImode\n+\t      && ((GET_CODE (addr) == SYMBOL_REF && SYMBOL_REF_FLAG (addr))\n+\t\t  || EIGHTBIT_CONSTANT_ADDRESS_P (addr)))\n+\t    return -2;\n \t}\n       else\n \t{"}, {"sha": "f291c12b09ad6436065002c448f28eef09d530ec", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=d56c04ce52a5fb8176b2d26ce15113a2ab5cc47d", "patch": "@@ -822,20 +822,30 @@ struct cum_arg\n    ? !h8300_shift_needs_scratch_p (INTVAL (OP), SImode)\t\\\n    : 0)\n \n-/* Nonzero if X is a constant address suitable as an 8-bit absolute on\n-   the H8/300H, which is a special case of the 'R' operand.  */\n-\n-#define EIGHTBIT_CONSTANT_ADDRESS_P(X)\t\t\t\\\n-  (GET_CODE (X) == CONST_INT && TARGET_H8300H\t\t\\\n-   && 0xffff00 <= INTVAL (X) && INTVAL (X) <= 0xffffff)\n+/* Nonzero if X is a constant address suitable as an 8-bit absolute,\n+   which is a special case of the 'R' operand.  */\n+\n+#define EIGHTBIT_CONSTANT_ADDRESS_P(X)\t\t\t\t\t\\\n+  ((GET_CODE (X) == CONST_INT)\t\t\t\t\t\t\\\n+   && ((TARGET_H8300H && 0xffff00 <= INTVAL (X)\t\t\t\t\\\n+\t&& INTVAL (X) <= 0xffffff)\t\t\t\t\t\\\n+       || (TARGET_H8300S && 0xffffff00 <= INTVAL (X)\t\t\t\\\n+\t   && INTVAL (X) <= 0xffffffff)\t\t\t\t\t\\\n+       || (TARGET_H8300 && 0xff00 <= (INTVAL (X) & 0x0000FFFF)\t\t\\\n+\t   && (INTVAL (X) & 0x0000FFFF) <= 0xffff)))\n \n /* Nonzero if X is a constant address suitable as an 16-bit absolute\n-   on the H8/300H.  */\n-\n-#define TINY_CONSTANT_ADDRESS_P(X)\t\t\t\t\\\n-  (GET_CODE (X) == CONST_INT && TARGET_H8300H\t\t\t\\\n-   && ((0xff8000 <= INTVAL (X) && INTVAL (X) <= 0xffffff)\t\\\n-       || (0x000000 <= INTVAL (X) && INTVAL (X) <= 0x007fff)))\n+   on H8/300H and H8/S.  */\n+\n+#define TINY_CONSTANT_ADDRESS_P(X)\t\t\t\t\t\\\n+  ((GET_CODE (X) == CONST_INT)\t\t\t\t\t\t\\\n+   && ((TARGET_H8300H\t\t\t\t\t\t\t\\\n+\t&& ((0xff8000 <= INTVAL (X) && INTVAL (X) <= 0xffffff)\t\t\\\n+\t    || (0x000000 <= INTVAL (X) && INTVAL (X) <= 0x007fff)))\t\\\n+       || (TARGET_H8300S\t\t\t\t\t\t\\\n+\t   && ((0xffff8000 <= INTVAL (X) && INTVAL (X) <= 0xffffffff)\t\\\n+\t       || (0x00000000 <= INTVAL (X)\t\t\t\t\\\n+\t\t   && INTVAL (X) <= 0x00007fff)))))\n \n /* 'U' if valid for a bset destination;\n    i.e. a register, register indirect, or the eightbit memory region"}]}