{"sha": "7bdff56f69a0192ec53594c6ff40e4646874041e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JkZmY1NmY2OWEwMTkyZWM1MzU5NGM2ZmY0MGU0NjQ2ODc0MDQxZQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-02-04T15:55:33Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-02-04T15:55:33Z"}, "message": "s390.md (\"*la_64\" + peepholes, [...]): Move to before adddi3 insn patterns.\n\n\t* config/s390/s390.md (\"*la_64\" + peepholes, \"reload_indi\"): Move\n\tto before adddi3 insn patterns.\n\t(\"*la_31\" + peepholes, \"*la_31_and\", \"*la_31_and_cc\", \"force_la_31\",\n\t\"reload_insi\"): Move to before addsi3 insn patterns.\n\nFrom-SVN: r77253", "tree": {"sha": "53044ede23d8a3941607bd0e6b3c57b2593d9725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53044ede23d8a3941607bd0e6b3c57b2593d9725"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bdff56f69a0192ec53594c6ff40e4646874041e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bdff56f69a0192ec53594c6ff40e4646874041e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bdff56f69a0192ec53594c6ff40e4646874041e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bdff56f69a0192ec53594c6ff40e4646874041e/comments", "author": null, "committer": null, "parents": [{"sha": "5ec473b9b361a0e7c9b7e50c7c9920cd57eccebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec473b9b361a0e7c9b7e50c7c9920cd57eccebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ec473b9b361a0e7c9b7e50c7c9920cd57eccebc"}], "stats": {"total": 265, "additions": 135, "deletions": 130}, "files": [{"sha": "e1934fa9d6bd5f5bd0b272a2a1e6dd3f4a93a963", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bdff56f69a0192ec53594c6ff40e4646874041e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bdff56f69a0192ec53594c6ff40e4646874041e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7bdff56f69a0192ec53594c6ff40e4646874041e", "patch": "@@ -1,3 +1,10 @@\n+2004-02-04  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"*la_64\" + peepholes, \"reload_indi\"): Move\n+\tto before adddi3 insn patterns.\n+\t(\"*la_31\" + peepholes, \"*la_31_and\", \"*la_31_and_cc\", \"force_la_31\",\n+\t\"reload_insi\"): Move to before addsi3 insn patterns.\n+\n 2004-02-04  Mark Mitchell  <mark@codesourcery.com>\n \n \t* calls.c (initialize_argument_information): Add CALL_FROM_THUNK_P"}, {"sha": "8cb2f250f815fc06a387d405e748e0d94d16d9a9", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 128, "deletions": 130, "changes": 258, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bdff56f69a0192ec53594c6ff40e4646874041e/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bdff56f69a0192ec53594c6ff40e4646874041e/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=7bdff56f69a0192ec53594c6ff40e4646874041e", "patch": "@@ -1171,6 +1171,52 @@\n   [(set (match_dup 0) (match_dup 2))]\n   \"operands[2] = get_pool_constant (operands[1]);\")\n \n+(define_insn \"*la_64\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n+        (match_operand:QI 1 \"address_operand\" \"U,W\"))]\n+  \"TARGET_64BIT\"\n+  \"@\n+   la\\t%0,%a1\n+   lay\\t%0,%a1\"\n+  [(set_attr \"op_type\" \"RX,RXY\")\n+   (set_attr \"type\"    \"la\")])\n+\n+(define_peephole2\n+  [(parallel\n+    [(set (match_operand:DI 0 \"register_operand\" \"\")\n+          (match_operand:QI 1 \"address_operand\" \"\"))\n+     (clobber (reg:CC 33))])]\n+  \"TARGET_64BIT\n+   && strict_memory_address_p (VOIDmode, operands[1])\n+   && preferred_la_operand_p (operands[1])\"\n+  [(set (match_dup 0) (match_dup 1))]\n+  \"\")\n+\n+(define_peephole2\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+        (match_operand:DI 1 \"register_operand\" \"\"))\n+   (parallel\n+    [(set (match_dup 0)\n+          (plus:DI (match_dup 0)\n+                   (match_operand:DI 2 \"nonmemory_operand\" \"\")))\n+     (clobber (reg:CC 33))])]\n+  \"TARGET_64BIT\n+   && !reg_overlap_mentioned_p (operands[0], operands[2])\n+   && strict_memory_address_p (VOIDmode, gen_rtx_PLUS (DImode, operands[1], operands[2]))\n+   && preferred_la_operand_p (gen_rtx_PLUS (DImode, operands[1], operands[2]))\"\n+  [(set (match_dup 0) (plus:DI (match_dup 1) (match_dup 2)))]\n+  \"\")\n+\n+(define_expand \"reload_indi\"\n+  [(parallel [(match_operand:DI 0 \"register_operand\" \"=a\")\n+              (match_operand:DI 1 \"s390_plus_operand\" \"\")\n+              (match_operand:DI 2 \"register_operand\" \"=&a\")])]\n+  \"TARGET_64BIT\"\n+{\n+  s390_expand_plus_operand (operands[0], operands[1], operands[2]);\n+  DONE;\n+})\n+\n ;\n ; movsi instruction pattern(s).\n ;\n@@ -1267,6 +1313,88 @@\n   [(set (match_dup 0) (match_dup 2))]\n   \"operands[2] = get_pool_constant (operands[1]);\")\n \n+(define_insn \"*la_31\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (match_operand:QI 1 \"address_operand\" \"U,W\"))]\n+  \"!TARGET_64BIT && legitimate_la_operand_p (operands[1])\"\n+  \"@\n+   la\\t%0,%a1\n+   lay\\t%0,%a1\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")\n+   (set_attr \"type\"     \"la\")])\n+\n+(define_peephole2\n+  [(parallel\n+    [(set (match_operand:SI 0 \"register_operand\" \"\")\n+          (match_operand:QI 1 \"address_operand\" \"\"))\n+     (clobber (reg:CC 33))])]\n+  \"!TARGET_64BIT\n+   && strict_memory_address_p (VOIDmode, operands[1])\n+   && preferred_la_operand_p (operands[1])\"\n+  [(set (match_dup 0) (match_dup 1))]\n+  \"\")\n+\n+(define_peephole2\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+        (match_operand:SI 1 \"register_operand\" \"\"))\n+   (parallel\n+    [(set (match_dup 0)\n+          (plus:SI (match_dup 0)\n+                   (match_operand:SI 2 \"nonmemory_operand\" \"\")))\n+     (clobber (reg:CC 33))])]\n+  \"!TARGET_64BIT\n+   && !reg_overlap_mentioned_p (operands[0], operands[2])\n+   && strict_memory_address_p (VOIDmode, gen_rtx_PLUS (SImode, operands[1], operands[2]))\n+   && preferred_la_operand_p (gen_rtx_PLUS (SImode, operands[1], operands[2]))\"\n+  [(set (match_dup 0) (plus:SI (match_dup 1) (match_dup 2)))]\n+  \"\")\n+\n+(define_insn \"*la_31_and\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (and:SI (match_operand:QI 1 \"address_operand\" \"U,W\")\n+                (const_int 2147483647)))]\n+  \"!TARGET_64BIT\"\n+  \"@\n+   la\\t%0,%a1\n+   lay\\t%0,%a1\"\n+  [(set_attr \"op_type\"  \"RX,RXY\")\n+   (set_attr \"type\"     \"la\")])\n+\n+(define_insn_and_split \"*la_31_and_cc\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+        (and:SI (match_operand:QI 1 \"address_operand\" \"p\")\n+                (const_int 2147483647)))\n+   (clobber (reg:CC 33))]\n+  \"!TARGET_64BIT\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 0)\n+        (and:SI (match_dup 1) (const_int 2147483647)))]\n+  \"\"\n+  [(set_attr \"op_type\"  \"RX\")\n+   (set_attr \"type\"     \"la\")])\n+\n+(define_insn \"force_la_31\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n+        (match_operand:QI 1 \"address_operand\" \"U,W\"))\n+   (use (const_int 0))]\n+  \"!TARGET_64BIT\"\n+  \"@\n+   la\\t%0,%a1\n+   lay\\t%0,%a1\"\n+  [(set_attr \"op_type\"  \"RX\")\n+   (set_attr \"type\"     \"la\")])\n+\n+(define_expand \"reload_insi\"\n+  [(parallel [(match_operand:SI 0 \"register_operand\" \"=a\")\n+              (match_operand:SI 1 \"s390_plus_operand\" \"\")\n+              (match_operand:SI 2 \"register_operand\" \"=&a\")])]\n+  \"!TARGET_64BIT\"\n+{\n+  s390_expand_plus_operand (operands[0], operands[1], operands[2]);\n+  DONE;\n+})\n+\n ;\n ; movhi instruction pattern(s).\n ;\n@@ -3403,53 +3531,6 @@\n   \"\"\n   \"\")\n \n-(define_insn \"*la_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (match_operand:QI 1 \"address_operand\" \"U,W\"))]\n-  \"TARGET_64BIT\"\n-  \"@\n-   la\\t%0,%a1\n-   lay\\t%0,%a1\"\n-  [(set_attr \"op_type\" \"RX,RXY\")\n-   (set_attr \"type\"    \"la\")])\n-\n-(define_peephole2\n-  [(parallel\n-    [(set (match_operand:DI 0 \"register_operand\" \"\")\n-          (match_operand:QI 1 \"address_operand\" \"\"))\n-     (clobber (reg:CC 33))])]\n-  \"TARGET_64BIT\n-   && strict_memory_address_p (VOIDmode, operands[1])\n-   && preferred_la_operand_p (operands[1])\"\n-  [(set (match_dup 0) (match_dup 1))]\n-  \"\")\n-\n-(define_peephole2\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-        (match_operand:DI 1 \"register_operand\" \"\"))\n-   (parallel\n-    [(set (match_dup 0)\n-          (plus:DI (match_dup 0)\n-                   (match_operand:DI 2 \"nonmemory_operand\" \"\")))\n-     (clobber (reg:CC 33))])]\n-  \"TARGET_64BIT\n-   && !reg_overlap_mentioned_p (operands[0], operands[2])\n-   && strict_memory_address_p (VOIDmode, gen_rtx_PLUS (DImode, operands[1], operands[2]))\n-   && preferred_la_operand_p (gen_rtx_PLUS (DImode, operands[1], operands[2]))\"\n-  [(set (match_dup 0) (plus:DI (match_dup 1) (match_dup 2)))]\n-  \"\")\n-\n-(define_expand \"reload_indi\"\n-  [(parallel [(match_operand:DI 0 \"register_operand\" \"=a\")\n-              (match_operand:DI 1 \"s390_plus_operand\" \"\")\n-              (match_operand:DI 2 \"register_operand\" \"=&a\")])]\n-  \"TARGET_64BIT\"\n-{\n-  s390_expand_plus_operand (operands[0], operands[1], operands[2]);\n-  DONE;\n-})\n-\n-\n ;\n ; addsi3 instruction pattern(s).\n ;\n@@ -3583,89 +3664,6 @@\n    ay\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RI,RX,RXY\")])\n \n-(define_insn \"*la_31\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (match_operand:QI 1 \"address_operand\" \"U,W\"))]\n-  \"!TARGET_64BIT && legitimate_la_operand_p (operands[1])\"\n-  \"@\n-   la\\t%0,%a1\n-   lay\\t%0,%a1\"\n-  [(set_attr \"op_type\"  \"RX,RXY\")\n-   (set_attr \"type\"     \"la\")])\n-\n-(define_peephole2\n-  [(parallel\n-    [(set (match_operand:SI 0 \"register_operand\" \"\")\n-          (match_operand:QI 1 \"address_operand\" \"\"))\n-     (clobber (reg:CC 33))])]\n-  \"!TARGET_64BIT\n-   && strict_memory_address_p (VOIDmode, operands[1])\n-   && preferred_la_operand_p (operands[1])\"\n-  [(set (match_dup 0) (match_dup 1))]\n-  \"\")\n-\n-(define_peephole2\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-        (match_operand:SI 1 \"register_operand\" \"\"))\n-   (parallel\n-    [(set (match_dup 0)\n-          (plus:SI (match_dup 0)\n-                   (match_operand:SI 2 \"nonmemory_operand\" \"\")))\n-     (clobber (reg:CC 33))])]\n-  \"!TARGET_64BIT\n-   && !reg_overlap_mentioned_p (operands[0], operands[2])\n-   && strict_memory_address_p (VOIDmode, gen_rtx_PLUS (SImode, operands[1], operands[2]))\n-   && preferred_la_operand_p (gen_rtx_PLUS (SImode, operands[1], operands[2]))\"\n-  [(set (match_dup 0) (plus:SI (match_dup 1) (match_dup 2)))]\n-  \"\")\n-\n-(define_insn \"*la_31_and\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (and:SI (match_operand:QI 1 \"address_operand\" \"U,W\")\n-                (const_int 2147483647)))]\n-  \"!TARGET_64BIT\"\n-  \"@\n-   la\\t%0,%a1\n-   lay\\t%0,%a1\"\n-  [(set_attr \"op_type\"  \"RX,RXY\")\n-   (set_attr \"type\"     \"la\")])\n-\n-(define_insn_and_split \"*la_31_and_cc\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (and:SI (match_operand:QI 1 \"address_operand\" \"p\")\n-                (const_int 2147483647)))\n-   (clobber (reg:CC 33))]\n-  \"!TARGET_64BIT\"\n-  \"#\"\n-  \"&& reload_completed\"\n-  [(set (match_dup 0)\n-        (and:SI (match_dup 1) (const_int 2147483647)))]\n-  \"\"\n-  [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"type\"     \"la\")])\n-\n-(define_insn \"force_la_31\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (match_operand:QI 1 \"address_operand\" \"U,W\"))\n-   (use (const_int 0))]\n-  \"!TARGET_64BIT\"\n-  \"@\n-   la\\t%0,%a1\n-   lay\\t%0,%a1\"\n-  [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"type\"     \"la\")])\n-\n-(define_expand \"reload_insi\"\n-  [(parallel [(match_operand:SI 0 \"register_operand\" \"=a\")\n-              (match_operand:SI 1 \"s390_plus_operand\" \"\")\n-              (match_operand:SI 2 \"register_operand\" \"=&a\")])]\n-  \"!TARGET_64BIT\"\n-{\n-  s390_expand_plus_operand (operands[0], operands[1], operands[2]);\n-  DONE;\n-})\n-\n-\n ;\n ; adddf3 instruction pattern(s).\n ;"}]}