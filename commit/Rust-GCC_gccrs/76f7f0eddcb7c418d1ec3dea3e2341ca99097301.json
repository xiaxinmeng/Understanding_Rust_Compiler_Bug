{"sha": "76f7f0eddcb7c418d1ec3dea3e2341ca99097301", "node_id": "C_kwDOANBUbNoAKDc2ZjdmMGVkZGNiN2M0MThkMWVjM2RlYTNlMjM0MWNhOTkwOTczMDE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-03T20:37:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-03T20:38:41Z"}, "message": "fortran: Fix up hash table usage in gfc_trans_use_stmts [PR108451]\n\nThe first testcase in the PR (which I haven't included in the patch because\nit is unclear to me if it is supposed to be valid or not) ICEs since extra\nhash table checking has been added recently.  The problem is that\ngfc_trans_use_stmts does\n          tree *slot = entry->decls->find_slot_with_hash (rent->use_name, hash,\n                                                          INSERT);\n          if (*slot == NULL)\nand later on doesn't store anything into *slot and continues.  Another spot\na few lines later correctly clears the slot if it decides not to use the\nslot, so the following patch does the same.\n\n2023-02-03  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR fortran/108451\n\t* trans-decl.cc (gfc_trans_use_stmts): Call clear_slot before\n\tdoing continue.", "tree": {"sha": "84e0398c34b4bfd348390cd8fdfd2c1f5912a59a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84e0398c34b4bfd348390cd8fdfd2c1f5912a59a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76f7f0eddcb7c418d1ec3dea3e2341ca99097301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f7f0eddcb7c418d1ec3dea3e2341ca99097301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f7f0eddcb7c418d1ec3dea3e2341ca99097301", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f7f0eddcb7c418d1ec3dea3e2341ca99097301/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e261fcefb71e1270673f0457fcc73711f13d3079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e261fcefb71e1270673f0457fcc73711f13d3079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e261fcefb71e1270673f0457fcc73711f13d3079"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "7a07780191997fa38c0ea61ef1939fac4e1cb5ab", "filename": "gcc/fortran/trans-decl.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f7f0eddcb7c418d1ec3dea3e2341ca99097301/gcc%2Ffortran%2Ftrans-decl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f7f0eddcb7c418d1ec3dea3e2341ca99097301/gcc%2Ffortran%2Ftrans-decl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.cc?ref=76f7f0eddcb7c418d1ec3dea3e2341ca99097301", "patch": "@@ -5350,7 +5350,11 @@ gfc_trans_use_stmts (gfc_namespace * ns)\n \t      /* Sometimes, generic interfaces wind up being over-ruled by a\n \t\t local symbol (see PR41062).  */\n \t      if (!st->n.sym->attr.use_assoc)\n-\t\tcontinue;\n+\t\t{\n+\t\t  *slot = error_mark_node;\n+\t\t  entry->decls->clear_slot (slot);\n+\t\t  continue;\n+\t\t}\n \n \t      if (st->n.sym->backend_decl\n \t\t  && DECL_P (st->n.sym->backend_decl)"}]}