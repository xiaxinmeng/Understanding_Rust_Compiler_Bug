{"sha": "31d206662a5603301bcd9596e86a6d76898e8344", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFkMjA2NjYyYTU2MDMzMDFiY2Q5NTk2ZTg2YTZkNzY4OThlODM0NA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2012-09-29T21:02:42Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2012-09-29T21:02:42Z"}, "message": "inclhack.def (AAB_aix_fcntl): New fix.\n\n        * inclhack.def (AAB_aix_fcntl): New fix.\n        * fixincl.x: Regenerate.\n\nFrom-SVN: r191859", "tree": {"sha": "10d8b34d6739e15e44643513f948ac3ca0e8b740", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10d8b34d6739e15e44643513f948ac3ca0e8b740"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31d206662a5603301bcd9596e86a6d76898e8344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d206662a5603301bcd9596e86a6d76898e8344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31d206662a5603301bcd9596e86a6d76898e8344", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d206662a5603301bcd9596e86a6d76898e8344/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b64ca2cebde1b42fbb52b7325af823cb41989125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b64ca2cebde1b42fbb52b7325af823cb41989125", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b64ca2cebde1b42fbb52b7325af823cb41989125"}], "stats": {"total": 114, "additions": 109, "deletions": 5}, "files": [{"sha": "dea4a96927e67e284f4ce7e719b9c505058ae035", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d206662a5603301bcd9596e86a6d76898e8344/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d206662a5603301bcd9596e86a6d76898e8344/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=31d206662a5603301bcd9596e86a6d76898e8344", "patch": "@@ -1,3 +1,8 @@\n+2012-09-29  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* inclhack.def (AAB_aix_fcntl): New fix.\n+\t* fixincl.x: Regenerate.\n+\n 2012-06-19  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* inclhack.def (aix_mutex_initializer_1): New fix."}, {"sha": "50a553fa125dfdae5493a2cae19aec75b3a6965d", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 65, "deletions": 5, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d206662a5603301bcd9596e86a6d76898e8344/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d206662a5603301bcd9596e86a6d76898e8344/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=31d206662a5603301bcd9596e86a6d76898e8344", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  June 19, 2012 at 09:23:54 AM by AutoGen 5.10\n+ * It has been AutoGen-ed  Saturday September 29, 2012 at 01:58:03 PM PDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Jun 19 09:23:54 EDT 2012\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Sep 29 13:58:03 PDT 2012\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 215 fixup descriptions.\n+ * This file contains 216 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -99,6 +99,60 @@ extern off64_t ftello(FILE *) __asm__(\\\"ftello64\\\");\\n\\\n #endif\\n\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aab_Aix_Fcntl fix\n+ */\n+tSCC zAab_Aix_FcntlName[] =\n+     \"AAB_aix_fcntl\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAab_Aix_FcntlList[] =\n+  \"fcntl.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAab_Aix_FcntlMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAab_Aix_FcntlSelect0[] =\n+       \"define open[ \\t]open64\";\n+\n+#define    AAB_AIX_FCNTL_TEST_CT  1\n+static tTestDesc aAab_Aix_FcntlTests[] = {\n+  { TT_EGREP,    zAab_Aix_FcntlSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aab_Aix_Fcntl\n+ */\n+static const char* apzAab_Aix_FcntlPatch[] = {\n+    \"wrap\",\n+    \"\",\n+    \"\\n\\\n+#if defined __GNUG__ && defined _LARGE_FILES && defined __cplusplus\\n\\\n+#define __need__aix_fcntl_h_fix\\n\\\n+#ifdef __need__aix_fcntl_h_fix\\n\\\n+#undef open\\n\\\n+#undef creat\\n\\\n+#undef openat\\n\\\n+/* Alias the symbols using asm */\\n\\\n+extern \\\"C\\\" {\\n\\\n+extern int open(const char *, int, ...) __asm__(\\\"open64\\\");\\n\\\n+extern int creat(const char *, mode_t) __asm__(\\\"creat64\\\");\\n\\\n+#if (_XOPEN_SOURCE >= 700)\\n\\\n+extern int openat(int, const char *, int, ...) __asm__(\\\"open64at\\\");\\n\\\n+#endif\\n\\\n+}\\n\\\n+#endif\\n\\\n+#endif\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aab_Darwin7_9_Long_Double_Funcs fix\n@@ -8746,15 +8800,16 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          258\n+#define REGEX_COUNT          259\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            215\n+#define FIX_COUNT            216\n \n /*\n  *  Enumerate the fixes\n  */\n typedef enum {\n     AAB_AIX_STDIO_FIXIDX,\n+    AAB_AIX_FCNTL_FIXIDX,\n     AAB_DARWIN7_9_LONG_DOUBLE_FUNCS_FIXIDX,\n     AAB_DARWIN7_9_LONG_DOUBLE_FUNCS_2_FIXIDX,\n     AAB_FD_ZERO_ASM_POSIX_TYPES_H_FIXIDX,\n@@ -8977,6 +9032,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AAB_AIX_STDIO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAab_Aix_StdioTests,   apzAab_Aix_StdioPatch, 0 },\n \n+  {  zAab_Aix_FcntlName,    zAab_Aix_FcntlList,\n+     apzAab_Aix_FcntlMachs,\n+     AAB_AIX_FCNTL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAab_Aix_FcntlTests,   apzAab_Aix_FcntlPatch, 0 },\n+\n   {  zAab_Darwin7_9_Long_Double_FuncsName,    zAab_Darwin7_9_Long_Double_FuncsList,\n      apzAab_Darwin7_9_Long_Double_FuncsMachs,\n      AAB_DARWIN7_9_LONG_DOUBLE_FUNCS_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,"}, {"sha": "a615194c743f685abb95e586f00b792fd8d71a02", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d206662a5603301bcd9596e86a6d76898e8344/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d206662a5603301bcd9596e86a6d76898e8344/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=31d206662a5603301bcd9596e86a6d76898e8344", "patch": "@@ -65,6 +65,45 @@ fix = {\n };\n \n \n+/* On AIX when _LARGE_FILES is defined fcntl.h defines open to\n+ * open64 and creat to creat64.  This fixes fcntl.h to\n+ * undef those defines and use __asm__ to alias the symbols if\n+ * building with g++ and -D_LARGE_FILES\n+ */\n+fix = {\n+    hackname  = AAB_aix_fcntl;\n+    files     = fcntl.h;\n+    select    = \"define open[ \\t]open64\";\n+    mach      = \"*-*-aix*\";\n+    test-text = ''; /* no way to test */\n+\n+    c_fix     = wrap;\n+\n+    c_fix_arg = \"\";\n+\n+    c_fix_arg = <<- _EOArg_\n+\n+\t#if defined __GNUG__ && defined _LARGE_FILES && defined __cplusplus\n+\t#define __need__aix_fcntl_h_fix\n+\t#ifdef __need__aix_fcntl_h_fix\n+\t#undef open\n+\t#undef creat\n+\t#undef openat\n+\t/* Alias the symbols using asm */\n+\textern \"C\" {\n+\textern int open(const char *, int, ...) __asm__(\"open64\");\n+\textern int creat(const char *, mode_t) __asm__(\"creat64\");\n+\t#if (_XOPEN_SOURCE >= 700)\n+\textern int openat(int, const char *, int, ...) __asm__(\"open64at\");\n+\t#endif\n+\t}\n+\t#endif\n+\t#endif\n+\n+\t_EOArg_;\n+};\n+\n+\n /*\n  *  On Mac OS 10.3.9, the 'long double' functions are available in\n  *  libSystem, but are not prototyped in math.h."}]}