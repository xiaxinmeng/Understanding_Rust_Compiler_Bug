{"sha": "3cc189f5e7d95a43aab520e9616fde990e95d95c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NjMTg5ZjVlN2Q5NWE0M2FhYjUyMGU5NjE2ZmRlOTkwZTk1ZDk1Yw==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2006-03-15T15:27:11Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-03-15T15:27:11Z"}, "message": "re PR c++/6634 (wrong parsing of \"long long double\")\n\n\tPR c++/6634\n\tdecl.c (grokdeclarator): Do not accept long long double.\n\tReorganize checks for invalid (combinations of) type modifiers.\n\tQuote modifiers in messages.\n\n\tg++.dg/parse/long1.C: New test.\n\nFrom-SVN: r112084", "tree": {"sha": "d3a7cea02a61470a82627bb9229b462119556fcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3a7cea02a61470a82627bb9229b462119556fcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cc189f5e7d95a43aab520e9616fde990e95d95c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cc189f5e7d95a43aab520e9616fde990e95d95c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cc189f5e7d95a43aab520e9616fde990e95d95c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cc189f5e7d95a43aab520e9616fde990e95d95c/comments", "author": null, "committer": null, "parents": [{"sha": "697701ad65fdb31eadfbd1927d6da6845b558bbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/697701ad65fdb31eadfbd1927d6da6845b558bbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/697701ad65fdb31eadfbd1927d6da6845b558bbd"}], "stats": {"total": 45, "additions": 33, "deletions": 12}, "files": [{"sha": "b3f411146eb41839a0b7ab127216ff889f819549", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cc189f5e7d95a43aab520e9616fde990e95d95c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cc189f5e7d95a43aab520e9616fde990e95d95c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3cc189f5e7d95a43aab520e9616fde990e95d95c", "patch": "@@ -1,3 +1,10 @@\n+2006-03-15  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/6634\n+\tdecl.c (grokdeclarator): Do not accept long long double.\n+\tReorganize checks for invalid (combinations of) type modifiers.\n+\tQuote modifiers in messages.\n+\n 2006-03-09  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/16387, c++/16389"}, {"sha": "bb6a59c4c55ac86bd50f378dd9256aba36b232a3", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cc189f5e7d95a43aab520e9616fde990e95d95c/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cc189f5e7d95a43aab520e9616fde990e95d95c/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3cc189f5e7d95a43aab520e9616fde990e95d95c", "patch": "@@ -7085,7 +7085,7 @@ grokdeclarator (const cp_declarator *declarator,\n      and check for invalid combinations.  */\n \n   /* Long double is a special combination.  */\n-  if (long_p && TYPE_MAIN_VARIANT (type) == double_type_node)\n+  if (long_p && !longlong && TYPE_MAIN_VARIANT (type) == double_type_node)\n     {\n       long_p = false;\n       type = build_qualified_type (long_double_type_node,\n@@ -7098,18 +7098,20 @@ grokdeclarator (const cp_declarator *declarator,\n     {\n       int ok = 0;\n \n-      if (TREE_CODE (type) == REAL_TYPE)\n-\terror (\"short, signed or unsigned invalid for %qs\", name);\n-      else if (TREE_CODE (type) != INTEGER_TYPE)\n-\terror (\"long, short, signed or unsigned invalid for %qs\", name);\n-      else if (long_p && short_p)\n-\terror (\"long and short specified together for %qs\", name);\n-      else if ((long_p || short_p) && explicit_char)\n-\terror (\"long or short specified with char for %qs\", name);\n-      else if ((long_p|| short_p) && TREE_CODE (type) == REAL_TYPE)\n-\terror (\"long or short specified with floating type for %qs\", name);\n+      if ((signed_p || unsigned_p) && TREE_CODE (type) != INTEGER_TYPE)\n+\terror (\"%<signed%> or %<unsigned%> invalid for %qs\", name);\n       else if (signed_p && unsigned_p)\n-\terror (\"signed and unsigned given together for %qs\", name);\n+\terror (\"%<signed%> and %<unsigned%> specified together for %qs\", name);\n+      else if (longlong && TREE_CODE (type) != INTEGER_TYPE)\n+\terror (\"%<long long%> invalid for %qs\", name);\n+      else if (long_p && TREE_CODE (type) == REAL_TYPE)\n+\terror (\"%<long%> invalid for %qs\", name);\n+      else if (short_p && TREE_CODE (type) == REAL_TYPE)\n+\terror (\"%<short%> invalid for %qs\", name);\n+      else if ((long_p || short_p) && explicit_char)\n+\terror (\"%<long%> or %<short%> specified with char for %qs\", name);\n+      else if (long_p && short_p)\n+\terror (\"%<long%> and %<short%> specified together for %qs\", name);\n       else\n \t{\n \t  ok = 1;"}, {"sha": "26255b308168777922afa3c72acee77209a5a8de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cc189f5e7d95a43aab520e9616fde990e95d95c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cc189f5e7d95a43aab520e9616fde990e95d95c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3cc189f5e7d95a43aab520e9616fde990e95d95c", "patch": "@@ -1,3 +1,8 @@\n+2006-03-15  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/6634\n+\tg++.dg/parse/long1.C: New test.\n+\n 2006-03-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/19101"}, {"sha": "628c86c98942f261f2f8ba8d95817f2eb9bf1cb0", "filename": "gcc/testsuite/g++.dg/parse/long1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cc189f5e7d95a43aab520e9616fde990e95d95c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Flong1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cc189f5e7d95a43aab520e9616fde990e95d95c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Flong1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Flong1.C?ref=3cc189f5e7d95a43aab520e9616fde990e95d95c", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/6634\n+// { dg-do compile }\n+// { dg-options \"\" }\n+\n+long long double x; // { dg-error \"long long\" }\n+long double y;\n+long float z;       // { dg-error \"long\" }"}]}