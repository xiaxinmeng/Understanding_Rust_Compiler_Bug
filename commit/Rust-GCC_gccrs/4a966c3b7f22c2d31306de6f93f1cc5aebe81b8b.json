{"sha": "4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE5NjZjM2I3ZjIyYzJkMzEzMDZkZTZmOTNmMWNjNWFlYmU4MWI4Yg==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-19T17:06:08Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-19T18:38:19Z"}, "message": "Reference Types can be mutable\n\nWe need to track mutability on Reference Types and check wether they\nactually match up.\n\nAddresses #576", "tree": {"sha": "2e2fc992eeb462b0bdc26a8c3736d5b93d9d8dfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e2fc992eeb462b0bdc26a8c3736d5b93d9d8dfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f7b803bcca98df8cba21c7107d777e8749a88cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f7b803bcca98df8cba21c7107d777e8749a88cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f7b803bcca98df8cba21c7107d777e8749a88cd"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "07498393ceb1480dd1cd586a4568afa45e1a5899", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b", "patch": "@@ -547,8 +547,9 @@ class TypeCheckExpr : public TypeCheckBase\n \t  auto ok = context->lookup_builtin (\"str\", &base);\n \t  rust_assert (ok);\n \n-\t  infered = new TyTy::ReferenceType (expr.get_mappings ().get_hirid (),\n-\t\t\t\t\t     TyTy::TyVar (base->get_ref ()));\n+\t  infered\n+\t    = new TyTy::ReferenceType (expr.get_mappings ().get_hirid (),\n+\t\t\t\t       TyTy::TyVar (base->get_ref ()), false);\n \t}\n \tbreak;\n \n@@ -1088,7 +1089,8 @@ class TypeCheckExpr : public TypeCheckBase\n     // FIXME double_reference\n \n     infered = new TyTy::ReferenceType (expr.get_mappings ().get_hirid (),\n-\t\t\t\t       TyTy::TyVar (resolved_base->get_ref ()));\n+\t\t\t\t       TyTy::TyVar (resolved_base->get_ref ()),\n+\t\t\t\t       expr.get_is_mut ());\n   }\n \n   void visit (HIR::DereferenceExpr &expr) override"}, {"sha": "567d482a13bf21a0393e9d640734854e2dc460e3", "filename": "gcc/rust/typecheck/rust-hir-type-check-type.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h?ref=4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b", "patch": "@@ -190,7 +190,8 @@ class TypeCheckType : public TypeCheckBase\n     TyTy::BaseType *base\n       = TypeCheckType::Resolve (type.get_base_type ().get ());\n     translated = new TyTy::ReferenceType (type.get_mappings ().get_hirid (),\n-\t\t\t\t\t  TyTy::TyVar (base->get_ref ()));\n+\t\t\t\t\t  TyTy::TyVar (base->get_ref ()),\n+\t\t\t\t\t  type.get_has_mut ());\n   }\n \n   void visit (HIR::InferredType &type) override"}, {"sha": "31d7191c351d6bca85874ef8316b8120a2ee15e8", "filename": "gcc/rust/typecheck/rust-tyty-rules.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/gcc%2Frust%2Ftypecheck%2Frust-tyty-rules.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/gcc%2Frust%2Ftypecheck%2Frust-tyty-rules.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty-rules.h?ref=4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b", "patch": "@@ -1081,8 +1081,15 @@ class ReferenceRules : public BaseRules\n \treturn;\n       }\n \n+    if (base->is_mutable () != type.is_mutable ())\n+      {\n+\tBaseRules::visit (type);\n+\treturn;\n+      }\n+\n     resolved = new ReferenceType (base->get_ref (), base->get_ty_ref (),\n-\t\t\t\t  TyVar (base_resolved->get_ref ()));\n+\t\t\t\t  TyVar (base_resolved->get_ref ()),\n+\t\t\t\t  base->is_mutable ());\n   }\n \n private:"}, {"sha": "0eceaef46612b4c4af1295fb93ceb67d500c696b", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b", "patch": "@@ -1355,7 +1355,8 @@ ReferenceType::accept_vis (TyConstVisitor &vis) const\n std::string\n ReferenceType::as_string () const\n {\n-  return \"&\" + get_base ()->as_string ();\n+  return std::string (\"&\") + (is_mutable () ? \"mut\" : \"\") + \" \"\n+\t + get_base ()->as_string ();\n }\n \n BaseType *\n@@ -1391,7 +1392,7 @@ ReferenceType::get_base () const\n BaseType *\n ReferenceType::clone ()\n {\n-  return new ReferenceType (get_ref (), get_ty_ref (), base,\n+  return new ReferenceType (get_ref (), get_ty_ref (), base, is_mutable (),\n \t\t\t    get_combined_refs ());\n }\n "}, {"sha": "e8db0321ad543166cabe626a0495db252b7358da", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=4a966c3b7f22c2d31306de6f93f1cc5aebe81b8b", "patch": "@@ -1364,14 +1364,14 @@ class CharType : public BaseType\n class ReferenceType : public BaseType\n {\n public:\n-  ReferenceType (HirId ref, TyVar base,\n+  ReferenceType (HirId ref, TyVar base, bool is_mut,\n \t\t std::set<HirId> refs = std::set<HirId> ())\n-    : BaseType (ref, ref, TypeKind::REF, refs), base (base)\n+    : BaseType (ref, ref, TypeKind::REF, refs), base (base), is_mut (is_mut)\n   {}\n \n-  ReferenceType (HirId ref, HirId ty_ref, TyVar base,\n+  ReferenceType (HirId ref, HirId ty_ref, TyVar base, bool is_mut,\n \t\t std::set<HirId> refs = std::set<HirId> ())\n-    : BaseType (ref, ty_ref, TypeKind::REF, refs), base (base)\n+    : BaseType (ref, ty_ref, TypeKind::REF, refs), base (base), is_mut (is_mut)\n   {}\n \n   BaseType *get_base () const;\n@@ -1397,8 +1397,11 @@ class ReferenceType : public BaseType\n \n   ReferenceType *handle_substitions (SubstitutionArgumentMappings mappings);\n \n+  bool is_mutable () const { return is_mut; }\n+\n private:\n   TyVar base;\n+  bool is_mut;\n };\n \n class StrType : public BaseType"}]}