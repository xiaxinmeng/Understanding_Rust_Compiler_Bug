{"sha": "7f5e81887717c4fe8b89c81720b94b5e93174c38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1ZTgxODg3NzE3YzRmZThiODljODE3MjBiOTRiNWU5MzE3NGMzOA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-02-20T15:20:26Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-02-20T15:20:26Z"}, "message": "re PR go/60288 (gccgo crashes compiling '*func_ptr(0)')\n\n\tPR go/60288\ncompiler: Avoid crash, give error for *&x when x is not addressable.\n\nFrom-SVN: r207960", "tree": {"sha": "19983422901df258e218c9312c39e5117d05c796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19983422901df258e218c9312c39e5117d05c796"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f5e81887717c4fe8b89c81720b94b5e93174c38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5e81887717c4fe8b89c81720b94b5e93174c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5e81887717c4fe8b89c81720b94b5e93174c38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5e81887717c4fe8b89c81720b94b5e93174c38/comments", "author": null, "committer": null, "parents": [{"sha": "efd2d3c8c4e1e6387304d85b3b12b8d623348330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd2d3c8c4e1e6387304d85b3b12b8d623348330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd2d3c8c4e1e6387304d85b3b12b8d623348330"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "6ac18f570e8694cebb3d0eab208562574f085dea", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e81887717c4fe8b89c81720b94b5e93174c38/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e81887717c4fe8b89c81720b94b5e93174c38/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=7f5e81887717c4fe8b89c81720b94b5e93174c38", "patch": "@@ -3792,6 +3792,12 @@ Unary_expression::do_lower(Gogo*, Named_object*, Statement_inserter*, int)\n \t      if (e == expr)\n \t\t{\n \t\t  // *&x == x.\n+\t\t  if (!ue->expr_->is_addressable() && !ue->create_temp_)\n+\t\t    {\n+\t\t      error_at(ue->location(),\n+\t\t\t       \"invalid operand for unary %<&%>\");\n+\t\t      this->set_is_error();\n+\t\t    }\n \t\t  return ue->expr_;\n \t\t}\n \t      ue->set_does_not_escape();\n@@ -3828,6 +3834,9 @@ Expression*\n Unary_expression::do_flatten(Gogo* gogo, Named_object*,\n                              Statement_inserter* inserter)\n {\n+  if (this->is_error_expression() || this->expr_->is_error_expression())\n+    return Expression::make_error(this->location());\n+\n   Location location = this->location();\n   if (this->op_ == OPERATOR_MULT\n       && !this->expr_->is_variable())\n@@ -4167,7 +4176,10 @@ Unary_expression::do_check_types(Gogo*)\n       if (!this->expr_->is_addressable())\n \t{\n \t  if (!this->create_temp_)\n-\t    this->report_error(_(\"invalid operand for unary %<&%>\"));\n+\t    {\n+\t      error_at(this->location(), \"invalid operand for unary %<&%>\");\n+\t      this->set_is_error();\n+\t    }\n \t}\n       else\n         {"}]}