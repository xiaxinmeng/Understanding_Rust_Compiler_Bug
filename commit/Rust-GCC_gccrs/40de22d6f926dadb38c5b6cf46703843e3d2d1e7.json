{"sha": "40de22d6f926dadb38c5b6cf46703843e3d2d1e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBkZTIyZDZmOTI2ZGFkYjM4YzViNmNmNDY3MDM4NDNlM2QyZDFlNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-05-04T12:41:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-05-04T12:41:52Z"}, "message": "combine.c (combine_simplify_rtx): If nonzero_bits on op shows all bits zero in mode of a lowpart subreg, return zero.\n\n\t* combine.c (combine_simplify_rtx) <case SUBREG>: If nonzero_bits\n\ton op shows all bits zero in mode of a lowpart subreg, return zero.\n\nFrom-SVN: r198595", "tree": {"sha": "268423f878efbc6f96e2577bc8b63cfd72fe0f6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/268423f878efbc6f96e2577bc8b63cfd72fe0f6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40de22d6f926dadb38c5b6cf46703843e3d2d1e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40de22d6f926dadb38c5b6cf46703843e3d2d1e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40de22d6f926dadb38c5b6cf46703843e3d2d1e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40de22d6f926dadb38c5b6cf46703843e3d2d1e7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "71871e37d9e1c8cd59943e9e1b94087f23e6333e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71871e37d9e1c8cd59943e9e1b94087f23e6333e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71871e37d9e1c8cd59943e9e1b94087f23e6333e"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "0a56d776b5f9a17419c70c0ed384bb8fcd6a28e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40de22d6f926dadb38c5b6cf46703843e3d2d1e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40de22d6f926dadb38c5b6cf46703843e3d2d1e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40de22d6f926dadb38c5b6cf46703843e3d2d1e7", "patch": "@@ -1,3 +1,8 @@\n+2013-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* combine.c (combine_simplify_rtx) <case SUBREG>: If nonzero_bits\n+\ton op shows all bits zero in mode of a lowpart subreg, return zero.\n+\n 2013-05-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/57150"}, {"sha": "b737bc5529fc9d5607aae6ae7288968d8d1ba2bf", "filename": "gcc/combine.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40de22d6f926dadb38c5b6cf46703843e3d2d1e7/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40de22d6f926dadb38c5b6cf46703843e3d2d1e7/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=40de22d6f926dadb38c5b6cf46703843e3d2d1e7", "patch": "@@ -5417,6 +5417,17 @@ combine_simplify_rtx (rtx x, enum machine_mode op0_mode, int in_dest,\n \t\t\t\tSUBREG_BYTE (x));\n \tif (temp)\n \t  return temp;\n+\n+\t/* If op is known to have all lower bits zero, the result is zero.  */\n+\tif (!in_dest\n+\t    && SCALAR_INT_MODE_P (mode)\n+\t    && SCALAR_INT_MODE_P (op0_mode)\n+\t    && GET_MODE_PRECISION (mode) < GET_MODE_PRECISION (op0_mode)\n+\t    && subreg_lowpart_offset (mode, op0_mode) == SUBREG_BYTE (x)\n+\t    && HWI_COMPUTABLE_MODE_P (op0_mode)\n+\t    && (nonzero_bits (SUBREG_REG (x), op0_mode)\n+\t\t& GET_MODE_MASK (mode)) == 0)\n+\t  return CONST0_RTX (mode);\n       }\n \n       /* Don't change the mode of the MEM if that would change the meaning"}]}