{"sha": "27edc6c3e296a3eea15be291b1f605a647e94107", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdlZGM2YzNlMjk2YTNlZWExNWJlMjkxYjFmNjA1YTY0N2U5NDEwNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-08-28T05:18:45Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-09-21T22:53:48Z"}, "message": "compiler: finalize methods for type aliases of struct types\n\nPreviously we would finalize the methods of the alias type itself, but\nsince its a type alias we really need to finalize the methods of the\naliased type.\n\nAlso, handle method expressions of unnamed struct types.\n\nTest case is https://golang.org/cl/251168.\n\nFixes golang/go#38125\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/251279", "tree": {"sha": "c6e4455454a14fbbb33edc4c31d941cd9c0797eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6e4455454a14fbbb33edc4c31d941cd9c0797eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27edc6c3e296a3eea15be291b1f605a647e94107", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27edc6c3e296a3eea15be291b1f605a647e94107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27edc6c3e296a3eea15be291b1f605a647e94107", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27edc6c3e296a3eea15be291b1f605a647e94107/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e19ecd79b45af6df87a6869d1936b857c9f71fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e19ecd79b45af6df87a6869d1936b857c9f71fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e19ecd79b45af6df87a6869d1936b857c9f71fc"}], "stats": {"total": 56, "additions": 35, "deletions": 21}, "files": [{"sha": "e4f8fac5ab3a09567cadf97b8df184db6614d3b9", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27edc6c3e296a3eea15be291b1f605a647e94107/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27edc6c3e296a3eea15be291b1f605a647e94107/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=27edc6c3e296a3eea15be291b1f605a647e94107", "patch": "@@ -1,4 +1,4 @@\n-6f309797e4f7eed635950687e902a294126e6fc6\n+a59167c29d6ad2ddf533b3a12b365f72df0e1476\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "0350e51d3a69cf681e8eb94a8bdf7d8fbb7bedc8", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 30, "deletions": 20, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27edc6c3e296a3eea15be291b1f605a647e94107/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27edc6c3e296a3eea15be291b1f605a647e94107/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=27edc6c3e296a3eea15be291b1f605a647e94107", "patch": "@@ -14529,38 +14529,48 @@ Selector_expression::lower_method_expression(Gogo* gogo)\n       is_pointer = true;\n       type = type->points_to();\n     }\n-  Named_type* nt = type->named_type();\n-  if (nt == NULL)\n-    {\n-      go_error_at(location,\n-                  (\"method expression requires named type or \"\n-                   \"pointer to named type\"));\n-      return Expression::make_error(location);\n-    }\n \n+  Named_type* nt = type->named_type();\n+  Struct_type* st = type->struct_type();\n   bool is_ambiguous;\n-  Method* method = nt->method_function(name, &is_ambiguous);\n+  Method* method = NULL;\n+  if (nt != NULL)\n+    method = nt->method_function(name, &is_ambiguous);\n+  else if (st != NULL)\n+    method = st->method_function(name, &is_ambiguous);\n   const Typed_identifier* imethod = NULL;\n   if (method == NULL && !is_pointer)\n     {\n-      Interface_type* it = nt->interface_type();\n+      Interface_type* it = type->interface_type();\n       if (it != NULL)\n \timethod = it->find_method(name);\n     }\n \n   if ((method == NULL && imethod == NULL)\n       || (left_type->named_type() != NULL && left_type->points_to() != NULL))\n     {\n-      if (!is_ambiguous)\n-\tgo_error_at(location, \"type %<%s%s%> has no method %<%s%>\",\n-                    is_pointer ? \"*\" : \"\",\n-                    nt->message_name().c_str(),\n-                    Gogo::message_name(name).c_str());\n+      if (nt != NULL)\n+\t{\n+\t  if (!is_ambiguous)\n+\t    go_error_at(location, \"type %<%s%s%> has no method %<%s%>\",\n+\t\t\tis_pointer ? \"*\" : \"\",\n+\t\t\tnt->message_name().c_str(),\n+\t\t\tGogo::message_name(name).c_str());\n+\t  else\n+\t    go_error_at(location, \"method %<%s%s%> is ambiguous in type %<%s%>\",\n+\t\t\tGogo::message_name(name).c_str(),\n+\t\t\tis_pointer ? \"*\" : \"\",\n+\t\t\tnt->message_name().c_str());\n+\t}\n       else\n-\tgo_error_at(location, \"method %<%s%s%> is ambiguous in type %<%s%>\",\n-                    Gogo::message_name(name).c_str(),\n-                    is_pointer ? \"*\" : \"\",\n-                    nt->message_name().c_str());\n+\t{\n+\t  if (!is_ambiguous)\n+\t    go_error_at(location, \"type has no method %<%s%>\",\n+\t\t\tGogo::message_name(name).c_str());\n+\t  else\n+\t    go_error_at(location, \"method %<%s%> is ambiguous\",\n+\t\t\tGogo::message_name(name).c_str());\n+\t}\n       return Expression::make_error(location);\n     }\n \n@@ -14657,7 +14667,7 @@ Selector_expression::lower_method_expression(Gogo* gogo)\n   Expression* ve = Expression::make_var_reference(vno, location);\n   Expression* bm;\n   if (method != NULL)\n-    bm = Type::bind_field_or_method(gogo, nt, ve, name, location);\n+    bm = Type::bind_field_or_method(gogo, type, ve, name, location);\n   else\n     bm = Expression::make_interface_field_reference(ve, name, location);\n "}, {"sha": "aef1c47d26e89e1c4ad6fd60e9a6edbc96a5d975", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27edc6c3e296a3eea15be291b1f605a647e94107/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27edc6c3e296a3eea15be291b1f605a647e94107/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=27edc6c3e296a3eea15be291b1f605a647e94107", "patch": "@@ -3508,6 +3508,10 @@ Finalize_methods::type(Type* t)\n     case Type::TYPE_NAMED:\n       {\n \tNamed_type* nt = t->named_type();\n+\n+\tif (nt->is_alias())\n+\t  return TRAVERSE_CONTINUE;\n+\n \tType* rt = nt->real_type();\n \tif (rt->classification() != Type::TYPE_STRUCT)\n \t  {"}]}