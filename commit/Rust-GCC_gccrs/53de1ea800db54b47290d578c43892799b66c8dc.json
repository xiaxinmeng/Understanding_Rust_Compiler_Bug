{"sha": "53de1ea800db54b47290d578c43892799b66c8dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNkZTFlYTgwMGRiNTRiNDcyOTBkNTc4YzQzODkyNzk5YjY2YzhkYw==", "commit": {"author": {"name": "Richard Henderson", "email": "richard.henderson@linaro.org", "date": "2018-10-31T23:11:22Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2018-10-31T23:11:22Z"}, "message": "aarch64: Remove early clobber from ATOMIC_LDOP scratch\n\n\t* config/aarch64/atomics.md (aarch64_atomic_<ATOMIC_LDOP><ALLI>_lse):\n\tThe scratch register need not be early-clobber.  Document the reason\n\twhy we cannot use ST<OP>.\n\nFrom-SVN: r265703", "tree": {"sha": "7e6aa0d2eed28621a627f57bccb596ebfae1c2f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e6aa0d2eed28621a627f57bccb596ebfae1c2f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53de1ea800db54b47290d578c43892799b66c8dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53de1ea800db54b47290d578c43892799b66c8dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53de1ea800db54b47290d578c43892799b66c8dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53de1ea800db54b47290d578c43892799b66c8dc/comments", "author": {"login": "rth7680", "id": 2529319, "node_id": "MDQ6VXNlcjI1MjkzMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2529319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rth7680", "html_url": "https://github.com/rth7680", "followers_url": "https://api.github.com/users/rth7680/followers", "following_url": "https://api.github.com/users/rth7680/following{/other_user}", "gists_url": "https://api.github.com/users/rth7680/gists{/gist_id}", "starred_url": "https://api.github.com/users/rth7680/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rth7680/subscriptions", "organizations_url": "https://api.github.com/users/rth7680/orgs", "repos_url": "https://api.github.com/users/rth7680/repos", "events_url": "https://api.github.com/users/rth7680/events{/privacy}", "received_events_url": "https://api.github.com/users/rth7680/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4911c15c97820eeccc97aa73563c9605bba073a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4911c15c97820eeccc97aa73563c9605bba073a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4911c15c97820eeccc97aa73563c9605bba073a1"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "8510ddd78519fdb49c3b1a19ce152c361da873f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53de1ea800db54b47290d578c43892799b66c8dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53de1ea800db54b47290d578c43892799b66c8dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53de1ea800db54b47290d578c43892799b66c8dc", "patch": "@@ -1,3 +1,9 @@\n+2018-10-31  Richard Henderson  <richard.henderson@linaro.org>\n+\n+\t* config/aarch64/atomics.md (aarch64_atomic_<ATOMIC_LDOP><ALLI>_lse):\n+\tscratch register need not be early-clobber.  Document the reason\n+\twhy we cannot use ST<OP>.\n+\n 2018-10-31  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR bootstrap/82856"}, {"sha": "00f7af4e4acd93893e3b4b3a1405b31755174f97", "filename": "gcc/config/aarch64/atomics.md", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53de1ea800db54b47290d578c43892799b66c8dc/gcc%2Fconfig%2Faarch64%2Fatomics.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53de1ea800db54b47290d578c43892799b66c8dc/gcc%2Fconfig%2Faarch64%2Fatomics.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fatomics.md?ref=53de1ea800db54b47290d578c43892799b66c8dc", "patch": "@@ -263,14 +263,26 @@\n   }\n )\n \n+;; It is tempting to want to use ST<OP> for relaxed and release\n+;; memory models here.  However, that is incompatible with the\n+;; C++ memory model for the following case:\n+;;\n+;;\tatomic_fetch_add(ptr, 1, memory_order_relaxed);\n+;;\tatomic_thread_fence(memory_order_acquire);\n+;;\n+;; The problem is that the architecture says that ST<OP> (and LD<OP>\n+;; insns where the destination is XZR) are not regarded as a read.\n+;; However we also implement the acquire memory barrier with DMB LD,\n+;; and so the ST<OP> is not blocked by the barrier.\n+\n (define_insn \"aarch64_atomic_<atomic_ldoptab><mode>_lse\"\n   [(set (match_operand:ALLI 0 \"aarch64_sync_memory_operand\" \"+Q\")\n \t(unspec_volatile:ALLI\n \t  [(match_dup 0)\n \t   (match_operand:ALLI 1 \"register_operand\" \"r\")\n \t   (match_operand:SI 2 \"const_int_operand\")]\n       ATOMIC_LDOP))\n-   (clobber (match_scratch:ALLI 3 \"=&r\"))]\n+   (clobber (match_scratch:ALLI 3 \"=r\"))]\n   \"TARGET_LSE\"\n   {\n    enum memmodel model = memmodel_from_int (INTVAL (operands[2]));"}]}