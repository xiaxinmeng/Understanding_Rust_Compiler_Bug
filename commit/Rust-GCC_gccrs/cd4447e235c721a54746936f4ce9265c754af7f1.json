{"sha": "cd4447e235c721a54746936f4ce9265c754af7f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q0NDQ3ZTIzNWM3MjFhNTQ3NDY5MzZmNGNlOTI2NWM3NTRhZjdmMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-09T23:39:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-09T23:39:06Z"}, "message": "re PR middle-end/59670 (ICE: expected gimple_call(error_mark), have gimple_assign(plus_expr) in gimple_call_internal_p, at gimple.h:2432)\n\n\tPR middle-end/59670\n\t* tree-vect-data-refs.c (vect_analyze_data_refs): Check\n\tis_gimple_call before calling gimple_call_internal_p.\n\n\t* gcc.dg/pr59670.c: New test.\n\nFrom-SVN: r206503", "tree": {"sha": "3376cef8332c75e667c4d25c2edd75bf0515e2de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3376cef8332c75e667c4d25c2edd75bf0515e2de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd4447e235c721a54746936f4ce9265c754af7f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd4447e235c721a54746936f4ce9265c754af7f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd4447e235c721a54746936f4ce9265c754af7f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd4447e235c721a54746936f4ce9265c754af7f1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bc44ceb91c0f7ad3250b8b01bdebe4e8b003f86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc44ceb91c0f7ad3250b8b01bdebe4e8b003f86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bc44ceb91c0f7ad3250b8b01bdebe4e8b003f86"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "ad1f55e10dac172cce4682e9cfec53d72195ec68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4447e235c721a54746936f4ce9265c754af7f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4447e235c721a54746936f4ce9265c754af7f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd4447e235c721a54746936f4ce9265c754af7f1", "patch": "@@ -1,3 +1,9 @@\n+2014-01-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/59670\n+\t* tree-vect-data-refs.c (vect_analyze_data_refs): Check\n+\tis_gimple_call before calling gimple_call_internal_p.\n+\n 2014-01-09  Steve Ellcey  <sellcey@mips.com>\n \n \t* Makefile.in (TREE_FLOW_H): Remove."}, {"sha": "9176d95ebe0bce19a8673cd50636cb7f4eb41511", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4447e235c721a54746936f4ce9265c754af7f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4447e235c721a54746936f4ce9265c754af7f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd4447e235c721a54746936f4ce9265c754af7f1", "patch": "@@ -1,3 +1,8 @@\n+2014-01-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/59670\n+\t* gcc.dg/pr59670.c: New test.\n+\n 2014-01-09  Steve Ellcey  <sellcey@mips.com>\n \n \t* gcc.dg/delay-slot-1.c: Restrict -mabi=64 to 64 bit processors."}, {"sha": "a68253b4b6373e3f8dc22059f4ee7db4686d4624", "filename": "gcc/testsuite/gcc.dg/pr59670.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4447e235c721a54746936f4ce9265c754af7f1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59670.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4447e235c721a54746936f4ce9265c754af7f1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59670.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59670.c?ref=cd4447e235c721a54746936f4ce9265c754af7f1", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/59670 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fopenmp-simd\" } */\n+\n+int d[1024];\n+\n+int\n+foo (int j, int b)\n+{\n+  int l, c = 0;\n+#pragma omp simd reduction(+: c)\n+  for (l = 0; l < b; ++l)\n+    c += d[j + l];\n+  return c;\n+}"}, {"sha": "165e41faff1498b0f972bedad2e2b6e6938e84bd", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4447e235c721a54746936f4ce9265c754af7f1/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4447e235c721a54746936f4ce9265c754af7f1/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=cd4447e235c721a54746936f4ce9265c754af7f1", "patch": "@@ -3320,9 +3320,10 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n \t\t\t    {\n \t\t\t      gimple def = SSA_NAME_DEF_STMT (off);\n \t\t\t      tree reft = TREE_TYPE (DR_REF (newdr));\n-\t\t\t      if (gimple_call_internal_p (def)\n-\t\t\t\t  && gimple_call_internal_fn (def)\n-\t\t\t\t  == IFN_GOMP_SIMD_LANE)\n+\t\t\t      if (is_gimple_call (def)\n+\t\t\t\t  && gimple_call_internal_p (def)\n+\t\t\t\t  && (gimple_call_internal_fn (def)\n+\t\t\t\t      == IFN_GOMP_SIMD_LANE))\n \t\t\t\t{\n \t\t\t\t  tree arg = gimple_call_arg (def, 0);\n \t\t\t\t  gcc_assert (TREE_CODE (arg) == SSA_NAME);"}]}