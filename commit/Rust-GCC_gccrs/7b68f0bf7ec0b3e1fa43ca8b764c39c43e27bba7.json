{"sha": "7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I2OGYwYmY3ZWMwYjNlMWZhNDNjYThiNzY0YzM5YzQzZTI3YmJhNw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2004-05-03T19:52:29Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-05-03T19:52:29Z"}, "message": "URLStreamHandler.java (toExternalForm): Removed unused variables.\n\n2004-05-03  Tom Tromey  <tromey@redhat.com>\n\n\t* java/net/URLStreamHandler.java (toExternalForm): Removed\n\tunused variables.\n\tunused constructor.\n\t* java/math/BigDecimal.java (divide): Removed unused variable.\n\t* java/lang/Throwable.java: Cleaned up imports.\n\t* java/lang/ClassLoader.java: Cleaned up imports.\n\t* java/io/FilePermission.java (implies): Removed unused\n\tvariable.\n\t* java/awt/TextComponent.java: Removed unused import.\n\t* gnu/java/util/prefs/NodeReader.java: Cleaned up imports.\n\t* gnu/java/util/DoubleEnumeration.java: Removed unused import.\n\t* gnu/java/text/WordBreakIterator.java: Removed unused import.\n\t* gnu/java/text/SentenceBreakIterator.java: Removed unused\n\timport.\n\t* gnu/java/text/LineBreakIterator.java: Removed unused import.\n\t* gnu/java/text/CharacterBreakIterator.java: Removed\n\tunused import.\n\t* gnu/java/security/provider/DSAKeyPairGenerator.java:\n\tCleaned up imports.\n\t* gnu/java/security/der/DERWriter.java: Cleaned up imports.\n\t* gnu/java/nio/charset/UTF_16Decoder.java (put): Removed\n\tunused method.\n\t* gnu/java/nio/SocketChannelImpl.java: Cleaned up imports.\n\t* gnu/java/nio/FileLockImpl.java: Cleaned up imports.\n\t* gnu/java/io/Base64InputStream.java: Cleaned up imports.\n\t* gnu/java/beans/info/ComponentBeanInfo.java: Cleaned up imports.\n\t* gnu/classpath/ServiceFactory.java: Cleaned up imports.\n\t(lookupProviders): Removed unused variable.\n\t(loadNextServiceProvider): Likewise.\n\t* gnu/java/beans/BeanInfoEmbryo.java: Cleaned up imports.\n\nFrom-SVN: r81450", "tree": {"sha": "03f92428f0c2e86247a13ecd437734b2dbf92032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03f92428f0c2e86247a13ecd437734b2dbf92032"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/comments", "author": null, "committer": null, "parents": [{"sha": "dc7c62aea4084270bcc366aba86bb735d9a7f6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc7c62aea4084270bcc366aba86bb735d9a7f6f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc7c62aea4084270bcc366aba86bb735d9a7f6f1"}], "stats": {"total": 152, "additions": 75, "deletions": 77}, "files": [{"sha": "cce65c54b2e70954b68d60abf6c06bd76baa3e1f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -1,3 +1,36 @@\n+2004-05-03  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/net/URLStreamHandler.java (toExternalForm): Removed\n+\tunused variables.\n+\tunused constructor.\n+\t* java/math/BigDecimal.java (divide): Removed unused variable.\n+\t* java/lang/Throwable.java: Cleaned up imports.\n+\t* java/lang/ClassLoader.java: Cleaned up imports.\n+\t* java/io/FilePermission.java (implies): Removed unused\n+\tvariable.\n+\t* java/awt/TextComponent.java: Removed unused import.\n+\t* gnu/java/util/prefs/NodeReader.java: Cleaned up imports.\n+\t* gnu/java/util/DoubleEnumeration.java: Removed unused import.\n+\t* gnu/java/text/WordBreakIterator.java: Removed unused import.\n+\t* gnu/java/text/SentenceBreakIterator.java: Removed unused\n+\timport.\n+\t* gnu/java/text/LineBreakIterator.java: Removed unused import.\n+\t* gnu/java/text/CharacterBreakIterator.java: Removed\n+\tunused import.\n+\t* gnu/java/security/provider/DSAKeyPairGenerator.java:\n+\tCleaned up imports.\n+\t* gnu/java/security/der/DERWriter.java: Cleaned up imports.\n+\t* gnu/java/nio/charset/UTF_16Decoder.java (put): Removed\n+\tunused method.\n+\t* gnu/java/nio/SocketChannelImpl.java: Cleaned up imports.\n+\t* gnu/java/nio/FileLockImpl.java: Cleaned up imports.\n+\t* gnu/java/io/Base64InputStream.java: Cleaned up imports.\n+\t* gnu/java/beans/info/ComponentBeanInfo.java: Cleaned up imports.\n+\t* gnu/classpath/ServiceFactory.java: Cleaned up imports.\n+\t(lookupProviders): Removed unused variable.\n+\t(loadNextServiceProvider): Likewise.\n+\t* gnu/java/beans/BeanInfoEmbryo.java: Cleaned up imports.\n+\n 2004-05-03  Michael Koch  <konqueror@gmx.de>\n \n \tFixes PR libgcj/14695:"}, {"sha": "5d1493414d0a37ee04711e98ec401e7206dbce90", "filename": "libjava/gnu/classpath/ServiceFactory.java", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fclasspath%2FServiceFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fclasspath%2FServiceFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2FServiceFactory.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,11 +38,9 @@\n \n package gnu.classpath;\n \n-import java.io.InputStream;\n-import java.io.IOException;\n import java.io.BufferedReader;\n+import java.io.IOException;\n import java.io.InputStreamReader;\n-import java.io.Reader;\n import java.net.URL;\n import java.security.AccessControlContext;\n import java.security.AccessController;\n@@ -52,8 +50,8 @@\n import java.util.Iterator;\n import java.util.NoSuchElementException;\n import java.util.logging.Level;\n-import java.util.logging.Logger;\n import java.util.logging.LogRecord;\n+import java.util.logging.Logger;\n \n \n /**\n@@ -227,7 +225,6 @@ private ServiceFactory()\n   public static Iterator lookupProviders(Class spi,\n                                          ClassLoader loader)\n   {\n-    InputStream stream;\n     String resourceName;\n     Enumeration urls;\n \n@@ -407,7 +404,6 @@ public void remove()\n     private Object loadNextServiceProvider()\n     {\n       String line;\n-      Class klass;\n       \n       if (reader == null)\n         advanceReader();"}, {"sha": "dd4f015b42aeb8db33213886cf45a6778f4c7c27", "filename": "libjava/gnu/java/awt/BitwiseXORComposite.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fawt%2FBitwiseXORComposite.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fawt%2FBitwiseXORComposite.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FBitwiseXORComposite.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -232,7 +232,7 @@ public void compose(Raster src, Raster dstIn,\n                         WritableRaster dstOut)\n     {\n       int aX, bX, dstX, aY, bY, dstY, width, height;\n-      int xorPixel, transferType;\n+      int xorPixel;\n       int[] srcLine, dstLine;\n \n       aX = src.getMinX();"}, {"sha": "16738fe60487b5b83f869257489cc1a149c59f3f", "filename": "libjava/gnu/java/beans/BeanInfoEmbryo.java", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fbeans%2FBeanInfoEmbryo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fbeans%2FBeanInfoEmbryo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fbeans%2FBeanInfoEmbryo.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,10 +38,17 @@\n \n package gnu.java.beans;\n \n-import java.beans.*;\n-import java.util.*;\n-import gnu.java.lang.*;\n-import java.lang.reflect.*;\n+import java.beans.BeanDescriptor;\n+import java.beans.BeanInfo;\n+import java.beans.EventSetDescriptor;\n+import java.beans.IndexedPropertyDescriptor;\n+import java.beans.MethodDescriptor;\n+import java.beans.PropertyDescriptor;\n+import java.lang.reflect.Method;\n+import java.util.Arrays;\n+import java.util.Enumeration;\n+import java.util.Hashtable;\n+import java.util.Vector;\n \n /**\n  ** A BeanInfoEmbryo accumulates information about a Bean"}, {"sha": "877a18d65d2b587380f83e444900c215381aff4f", "filename": "libjava/gnu/java/beans/info/ComponentBeanInfo.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fbeans%2Finfo%2FComponentBeanInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fbeans%2Finfo%2FComponentBeanInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fbeans%2Finfo%2FComponentBeanInfo.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,8 +38,9 @@\n \n package gnu.java.beans.info;\n \n-import gnu.java.beans.*;\n-import java.beans.*;\n+import java.beans.IntrospectionException;\n+import java.beans.PropertyDescriptor;\n+import java.beans.SimpleBeanInfo;\n \n /** BeanInfo class for java.awt.Component.\n  ** This provides a few properties, but that's"}, {"sha": "3780e952837029cfc2b5a53fe784ed6f9579e6fe", "filename": "libjava/gnu/java/io/Base64InputStream.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fio%2FBase64InputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fio%2FBase64InputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fio%2FBase64InputStream.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -39,9 +39,8 @@\n package gnu.java.io;\n \n import java.io.FilterInputStream;\n-import java.io.InputStream;\n import java.io.IOException;\n-import java.io.EOFException;\n+import java.io.InputStream;\n \n /**\n  * A filter input stream that decodes data encoded in the Base-64"}, {"sha": "bba5880e22ce6aec6fd7874f7accf867d5a1b586", "filename": "libjava/gnu/java/nio/FileLockImpl.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,10 +38,10 @@\n \n package gnu.java.nio;\n \n+import gnu.java.nio.channels.FileChannelImpl;\n+\n import java.io.IOException;\n import java.nio.channels.FileLock;\n-import gnu.classpath.Configuration;\n-import gnu.java.nio.channels.FileChannelImpl;\n \n /**\n  * @author Michael Koch"}, {"sha": "c67b7cb7bb72896af50a7be9e91ad0fa9fb9f991", "filename": "libjava/gnu/java/nio/SocketChannelImpl.java", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,12 +38,12 @@\n \n package gnu.java.nio;\n \n-import java.io.InputStream;\n+import gnu.java.net.PlainSocketImpl;\n+\n import java.io.IOException;\n+import java.io.InputStream;\n import java.io.OutputStream;\n-import java.net.InetAddress;\n import java.net.InetSocketAddress;\n-import gnu.java.net.PlainSocketImpl;\n import java.net.Socket;\n import java.net.SocketAddress;\n import java.net.SocketTimeoutException;\n@@ -53,13 +53,12 @@\n import java.nio.channels.ConnectionPendingException;\n import java.nio.channels.NoConnectionPendingException;\n import java.nio.channels.NotYetConnectedException;\n+import java.nio.channels.SelectionKey;\n+import java.nio.channels.Selector;\n+import java.nio.channels.SocketChannel;\n import java.nio.channels.UnresolvedAddressException;\n import java.nio.channels.UnsupportedAddressTypeException;\n-import java.nio.channels.SocketChannel;\n-import java.nio.channels.Selector;\n-import java.nio.channels.SelectionKey;\n import java.nio.channels.spi.SelectorProvider;\n-import gnu.classpath.Configuration;\n \n public final class SocketChannelImpl extends SocketChannel\n {"}, {"sha": "6ff9c2893daa8ff5c70d91901066560c1f796148", "filename": "libjava/gnu/java/nio/charset/UTF_16Decoder.java", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUTF_16Decoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUTF_16Decoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUTF_16Decoder.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -144,24 +144,6 @@ else if (c == REVERSED_BYTE_ORDER_MARK)\n       }\n   }\n \n-  /**\n-   * Writes <code>c</code> to <code>out</code> in the byte order\n-   * specified by <code>byteOrder</code>.\n-   **/\n-  private void put (ByteBuffer out, char c)\n-  {\n-    if (byteOrder == BIG_ENDIAN)\n-      {\n-        out.put ((byte) (c >> 8));\n-        out.put ((byte) (c & 0xFF));\n-      }\n-    else\n-      {\n-        out.put ((byte) (c & 0xFF));\n-        out.put ((byte) (c >> 8));\n-      }\n-  }\n-\n   protected void implReset ()\n   {\n     byteOrder = originalByteOrder;"}, {"sha": "4e679ec802c66464b60b00e0e844e47df8fc13e7", "filename": "libjava/gnu/java/security/der/DERWriter.java", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERWriter.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,28 +38,23 @@\n \n package gnu.java.security.der;\n \n+import gnu.java.security.OID;\n+\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n-\n import java.math.BigInteger;\n-\n import java.nio.ByteBuffer;\n import java.nio.CharBuffer;\n import java.nio.charset.Charset;\n import java.nio.charset.CharsetEncoder;\n-\n import java.text.SimpleDateFormat;\n-\n-import java.util.BitSet;\n import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Set;\n import java.util.TimeZone;\n \n-import gnu.java.security.OID;\n-\n /**\n  * Methods that allow various Java types to be written as a DER\n  * (Distinguished Encoding Rules) stream to the specified output stream."}, {"sha": "d4dff1671646177dd1ed8c2d81fa9547dbe918a5", "filename": "libjava/gnu/java/security/provider/DSAKeyPairGenerator.java", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyPairGenerator.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -39,20 +39,18 @@\n package gnu.java.security.provider;\n \n import java.math.BigInteger;\n-import java.security.AlgorithmParameters;\n import java.security.AlgorithmParameterGenerator;\n-import java.security.KeyPairGeneratorSpi;\n+import java.security.AlgorithmParameters;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidParameterException;\n import java.security.KeyPair;\n+import java.security.KeyPairGeneratorSpi;\n import java.security.SecureRandom;\n-import java.security.InvalidParameterException;\n-import java.security.InvalidAlgorithmParameterException;\n import java.security.interfaces.DSAParams;\n import java.security.spec.AlgorithmParameterSpec;\n import java.security.spec.DSAParameterSpec;\n import java.util.Random;\n \n-import gnu.java.security.util.Prime;\n-\n public class DSAKeyPairGenerator extends KeyPairGeneratorSpi \n \timplements java.security.interfaces.DSAKeyPairGenerator\n {"}, {"sha": "4db41f5d7d414d59a325d83f2f276e9c66c5ddeb", "filename": "libjava/gnu/java/text/CharacterBreakIterator.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Ftext%2FCharacterBreakIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Ftext%2FCharacterBreakIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Ftext%2FCharacterBreakIterator.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.java.text;\n \n-import java.text.BreakIterator;\n import java.text.CharacterIterator;\n \n /**"}, {"sha": "e1cb49c7d5684beddc038e06b70c77c8af93c812", "filename": "libjava/gnu/java/text/LineBreakIterator.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Ftext%2FLineBreakIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Ftext%2FLineBreakIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Ftext%2FLineBreakIterator.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.java.text;\n \n-import java.text.BreakIterator;\n import java.text.CharacterIterator;\n \n /**"}, {"sha": "405bbc5408d066cf9f2c9806da8f6427248b9591", "filename": "libjava/gnu/java/text/SentenceBreakIterator.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Ftext%2FSentenceBreakIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Ftext%2FSentenceBreakIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Ftext%2FSentenceBreakIterator.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.java.text;\n \n-import java.text.BreakIterator;\n import java.text.CharacterIterator;\n \n /**"}, {"sha": "39dbefe6e508219ce54b43114073bc6beb98a7e7", "filename": "libjava/gnu/java/text/WordBreakIterator.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Ftext%2FWordBreakIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Ftext%2FWordBreakIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Ftext%2FWordBreakIterator.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.java.text;\n \n-import java.text.BreakIterator;\n import java.text.CharacterIterator;\n \n /**"}, {"sha": "21eb605e7929a2a3611ed6e0be831c76619d7bee", "filename": "libjava/gnu/java/util/DoubleEnumeration.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Futil%2FDoubleEnumeration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Futil%2FDoubleEnumeration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Futil%2FDoubleEnumeration.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -37,7 +37,6 @@\n \n package gnu.java.util;\n \n-import java.io.*;\n import java.util.Enumeration;\n import java.util.NoSuchElementException;\n "}, {"sha": "e343b6b2b5c72604079e26f1ec6a18a9d635d8e2", "filename": "libjava/gnu/java/util/prefs/NodeReader.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Futil%2Fprefs%2FNodeReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fgnu%2Fjava%2Futil%2Fprefs%2FNodeReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Futil%2Fprefs%2FNodeReader.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,13 +38,13 @@\n package gnu.java.util.prefs;\n \n import java.io.BufferedReader;\n+import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n-import java.io.InputStream;\n-import java.io.IOException;\n import java.io.Reader;\n-\n-import java.util.prefs.*;\n+import java.util.prefs.InvalidPreferencesFormatException;\n+import java.util.prefs.Preferences;\n+import java.util.prefs.PreferencesFactory;\n \n /**\n  * Reads and imports preferences nodes from files."}, {"sha": "2b7317d8519e4663e11b3dd282532a779b4776db", "filename": "libjava/java/awt/TextComponent.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fjava%2Fawt%2FTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fjava%2Fawt%2FTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextComponent.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -41,7 +41,6 @@\n import java.awt.event.TextEvent;\n import java.awt.event.TextListener;\n import java.awt.peer.TextComponentPeer;\n-import java.awt.peer.ComponentPeer;\n import java.io.Serializable;\n import java.util.EventListener;\n "}, {"sha": "c34a2ecf9b2b8ed4b7cd5f3df9047d049878efcd", "filename": "libjava/java/io/FilePermission.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fjava%2Fio%2FFilePermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fjava%2Fio%2FFilePermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFilePermission.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -229,7 +229,6 @@ else if(f2.charAt(sub1.length() - 1) == File.separatorChar)\n \t        return false;\n \t      /* Make sure there are no subdirectories specified \n                  underneath this one */\n-\t      String sub2 = f2.substring(sub1.length()+1);\n \t      if(f2.substring(sub1.length()+1).indexOf(File.separatorChar) \n                  != -1)\n \t        return false;"}, {"sha": "60d7a7f9e021ec572a6fe00a2cb68635fc42fef0", "filename": "libjava/java/lang/ClassLoader.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassLoader.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -38,9 +38,11 @@\n \n package java.lang;\n \n-import java.io.InputStream;\n+import gnu.java.util.DoubleEnumeration;\n+import gnu.java.util.EmptyEnumeration;\n+\n import java.io.IOException;\n-import java.lang.reflect.Constructor;\n+import java.io.InputStream;\n import java.net.URL;\n import java.security.CodeSource;\n import java.security.PermissionCollection;\n@@ -49,8 +51,6 @@\n import java.util.Enumeration;\n import java.util.HashMap;\n import java.util.Map;\n-import gnu.java.util.DoubleEnumeration;\n-import gnu.java.util.EmptyEnumeration;\n \n /**\n  * The ClassLoader is a way of customizing the way Java gets its classes"}, {"sha": "1f236b085ed50078520260e10bb427d0d4376c6d", "filename": "libjava/java/lang/Throwable.java", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fjava%2Flang%2FThrowable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fjava%2Flang%2FThrowable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FThrowable.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -37,13 +37,9 @@\n \n package java.lang;\n \n-import java.io.Serializable;\n-import java.io.PrintWriter;\n import java.io.PrintStream;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream;\n-import java.io.IOException;\n-import java.io.OutputStream;\n+import java.io.PrintWriter;\n+import java.io.Serializable;\n \n /**\n  * Throwable is the superclass of all exceptions that can be raised."}, {"sha": "401ebe95d3c605b0947364807320868b54643e7f", "filename": "libjava/java/math/BigDecimal.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fjava%2Fmath%2FBigDecimal.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7/libjava%2Fjava%2Fmath%2FBigDecimal.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fmath%2FBigDecimal.java?ref=7b68f0bf7ec0b3e1fa43ca8b764c39c43e27bba7", "patch": "@@ -271,7 +271,6 @@ public BigDecimal divide(BigDecimal val, int newScale, int roundingMode)\n       return newScale == 0 ? ZERO : new BigDecimal (ZERO.intVal, newScale);\n     \n     // Ensure that pow gets a non-negative value.\n-    int valScale = val.scale;\n     BigInteger valIntVal = val.intVal;\n     int power = newScale - (scale - val.scale);\n     if (power < 0)"}]}