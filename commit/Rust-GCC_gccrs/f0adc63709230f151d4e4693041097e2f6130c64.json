{"sha": "f0adc63709230f151d4e4693041097e2f6130c64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBhZGM2MzcwOTIzMGYxNTFkNGU0NjkzMDQxMDk3ZTJmNjEzMGM2NA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-11-25T01:56:13Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-11-25T01:56:13Z"}, "message": "pt.c (tsubst_decl): Copy TREE_ASM_WRITTEN for VAR_DECLs.\n\n\t* pt.c (tsubst_decl): Copy TREE_ASM_WRITTEN for VAR_DECLs.\n\n\t* decl2.c (finish_vtable_vardecl): Don't prune vtables here.\n\nFrom-SVN: r30656", "tree": {"sha": "86b717901752066570c276c96561342b896a1d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86b717901752066570c276c96561342b896a1d43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0adc63709230f151d4e4693041097e2f6130c64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0adc63709230f151d4e4693041097e2f6130c64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0adc63709230f151d4e4693041097e2f6130c64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0adc63709230f151d4e4693041097e2f6130c64/comments", "author": null, "committer": null, "parents": [{"sha": "93d455621810ca1fcb759fcb6cc4c237ba02a584", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93d455621810ca1fcb759fcb6cc4c237ba02a584", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93d455621810ca1fcb759fcb6cc4c237ba02a584"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "f9ff0372ce696e93aa9f9964e310121baf3d2c59", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0adc63709230f151d4e4693041097e2f6130c64/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0adc63709230f151d4e4693041097e2f6130c64/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f0adc63709230f151d4e4693041097e2f6130c64", "patch": "@@ -1,3 +1,9 @@\n+1999-11-24  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* pt.c (tsubst_decl): Copy TREE_ASM_WRITTEN for VAR_DECLs.\n+\n+\t* decl2.c (finish_vtable_vardecl): Don't prune vtables here.\n+\n 1999-11-23  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* decl.c (pushdecl, grokdeclarator): Don't call a variadic"}, {"sha": "617d85426f5d8387402ae9b7e0b0eb8a69f53a8d", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0adc63709230f151d4e4693041097e2f6130c64/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0adc63709230f151d4e4693041097e2f6130c64/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=f0adc63709230f151d4e4693041097e2f6130c64", "patch": "@@ -2608,7 +2608,6 @@ finish_vtable_vardecl (t, data)\n     /* We don't know what to do with this one yet.  */\n     return 0;\n \n-  *t = TREE_CHAIN (vars);\n   return 0;\n }\n "}, {"sha": "dde6562cd982dd69f0e3191c8d71681fecf97577", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0adc63709230f151d4e4693041097e2f6130c64/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0adc63709230f151d4e4693041097e2f6130c64/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f0adc63709230f151d4e4693041097e2f6130c64", "patch": "@@ -5913,6 +5913,11 @@ tsubst_decl (t, args, type, in_decl)\n \t    TREE_TYPE (r) = TREE_TYPE (DECL_INITIAL (r));\n \t  }\n \n+\t/* If the template variable was marked TREE_ASM_WRITTEN, that\n+\t   means we don't need to write out any of the instantiations\n+\t   either.  (__FUNCTION__ and its ilk are marked thusly.)  */\n+\tTREE_ASM_WRITTEN (r) = TREE_ASM_WRITTEN (t);\n+\n \t/* Even if the original location is out of scope, the newly\n \t   substituted one is not.  */\n \tif (TREE_CODE (r) == VAR_DECL)"}, {"sha": "343cd670373176eaaf680a2166e392765fd37a4a", "filename": "gcc/testsuite/g++.old-deja/g++.pt/inline1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0adc63709230f151d4e4693041097e2f6130c64/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finline1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0adc63709230f151d4e4693041097e2f6130c64/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finline1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finline1.C?ref=f0adc63709230f151d4e4693041097e2f6130c64", "patch": "@@ -0,0 +1,14 @@\n+// Build don't link:\n+// Special g++ Options: -O2 -Winline\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+\n+template <class T>\n+inline void f ()\n+{\n+  \n+}\n+\n+void g ()\n+{\n+  f<int> ();\n+}"}]}