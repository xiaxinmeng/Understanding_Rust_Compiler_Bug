{"sha": "92191d7b1b6b791f85039ad0b63959f53cb0afe2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIxOTFkN2IxYjZiNzkxZjg1MDM5YWQwYjYzOTU5ZjUzY2IwYWZlMg==", "commit": {"author": {"name": "Terry Guo", "email": "terry.guo@arm.com", "date": "2014-11-18T02:20:47Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2014-11-18T02:20:47Z"}, "message": "arm.c (arm_issue_rate): Return 2 for cortex-m7.\n\n2014-11-17  Terry Guo  <terry.guo@arm.com>\n\n\t* config/arm/arm.c (arm_issue_rate): Return 2 for cortex-m7.\n\t* config/arm/arm.md (generic_sched): Exclude cortex-m7.\n\t(generic_vfp): Likewise.\n\t* config/arm/cortex-m7.md: Pipeline description for cortex-m7.\n\nFrom-SVN: r217687", "tree": {"sha": "db5872ac4ece301dcd2e536f4869ef3d82c65f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db5872ac4ece301dcd2e536f4869ef3d82c65f28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92191d7b1b6b791f85039ad0b63959f53cb0afe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92191d7b1b6b791f85039ad0b63959f53cb0afe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92191d7b1b6b791f85039ad0b63959f53cb0afe2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92191d7b1b6b791f85039ad0b63959f53cb0afe2/comments", "author": null, "committer": null, "parents": [{"sha": "dcaa37015b7c937bdac4826d3b9d77a4b036a2fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcaa37015b7c937bdac4826d3b9d77a4b036a2fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcaa37015b7c937bdac4826d3b9d77a4b036a2fe"}], "stats": {"total": 200, "additions": 198, "deletions": 2}, "files": [{"sha": "c7d5cbdc538c7a32c7e71f18436242b912109825", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92191d7b1b6b791f85039ad0b63959f53cb0afe2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92191d7b1b6b791f85039ad0b63959f53cb0afe2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92191d7b1b6b791f85039ad0b63959f53cb0afe2", "patch": "@@ -1,3 +1,10 @@\n+2014-11-17  Terry Guo  <terry.guo@arm.com>\n+\n+\t* config/arm/arm.c (arm_issue_rate): Return 2 for cortex-m7.\n+\t* config/arm/arm.md (generic_sched): Exclude cortex-m7.\n+\t(generic_vfp): Likewise.\n+\t* config/arm/cortex-m7.md: Pipeline description for cortex-m7.\n+\n 2014-11-17  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/63906"}, {"sha": "a4212d1d916419b61dbc6cc240fba10d9c5b1901", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92191d7b1b6b791f85039ad0b63959f53cb0afe2/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92191d7b1b6b791f85039ad0b63959f53cb0afe2/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=92191d7b1b6b791f85039ad0b63959f53cb0afe2", "patch": "@@ -29936,6 +29936,7 @@ arm_issue_rate (void)\n     case cortexa57:\n       return 3;\n \n+    case cortexm7:\n     case cortexr4:\n     case cortexr4f:\n     case cortexr5:"}, {"sha": "a3b14fef64c2639fcac8eb82717fccbba66c946e", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92191d7b1b6b791f85039ad0b63959f53cb0afe2/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92191d7b1b6b791f85039ad0b63959f53cb0afe2/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=92191d7b1b6b791f85039ad0b63959f53cb0afe2", "patch": "@@ -377,15 +377,21 @@\n \n (define_attr \"generic_sched\" \"yes,no\"\n   (const (if_then_else\n-          (ior (eq_attr \"tune\" \"fa526,fa626,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1020e,arm1026ejs,arm1136js,arm1136jfs,cortexa5,cortexa7,cortexa8,cortexa9,cortexa12,cortexa15,cortexa53,cortexm4,marvell_pj4\")\n+          (ior (eq_attr \"tune\" \"fa526,fa626,fa606te,fa626te,fmp626,fa726te,\\\n+                                arm926ejs,arm1020e,arm1026ejs,arm1136js,\\\n+                                arm1136jfs,cortexa5,cortexa7,cortexa8,\\\n+                                cortexa9,cortexa12,cortexa15,cortexa53,\\\n+                                cortexm4,cortexm7,marvell_pj4\")\n \t       (eq_attr \"tune_cortexr4\" \"yes\"))\n           (const_string \"no\")\n           (const_string \"yes\"))))\n \n (define_attr \"generic_vfp\" \"yes,no\"\n   (const (if_then_else\n \t  (and (eq_attr \"fpu\" \"vfp\")\n-\t       (eq_attr \"tune\" \"!arm1020e,arm1022e,cortexa5,cortexa7,cortexa8,cortexa9,cortexa53,cortexm4,marvell_pj4\")\n+\t       (eq_attr \"tune\" \"!arm1020e,arm1022e,cortexa5,cortexa7,\\\n+                                cortexa8,cortexa9,cortexa53,cortexm4,\\\n+                                cortexm7,marvell_pj4\")\n \t       (eq_attr \"tune_cortexr4\" \"no\"))\n \t  (const_string \"yes\")\n \t  (const_string \"no\"))))\n@@ -409,6 +415,7 @@\n (include \"cortex-a53.md\")\n (include \"cortex-r4.md\")\n (include \"cortex-r4f.md\")\n+(include \"cortex-m7.md\")\n (include \"cortex-m4.md\")\n (include \"cortex-m4-fpu.md\")\n (include \"vfp11.md\")"}, {"sha": "aab1da184658277c37c18fefea5d05b670dfbf23", "filename": "gcc/config/arm/cortex-m7.md", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92191d7b1b6b791f85039ad0b63959f53cb0afe2/gcc%2Fconfig%2Farm%2Fcortex-m7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92191d7b1b6b791f85039ad0b63959f53cb0afe2/gcc%2Fconfig%2Farm%2Fcortex-m7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m7.md?ref=92191d7b1b6b791f85039ad0b63959f53cb0afe2", "patch": "@@ -0,0 +1,181 @@\n+;; ARM Cortex-M7 pipeline description\n+;; Copyright (C) 2014 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but\n+;; WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+;; General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_automaton \"cortex_m7\")\n+\n+;; We model the dual-issue constraints of this core with\n+;; following units.\n+\n+(define_cpu_unit \"cm7_i0, cm7_i1\" \"cortex_m7\")\n+(define_cpu_unit \"cm7_a0, cm7_a1\" \"cortex_m7\")\n+(define_cpu_unit \"cm7_branch,cm7_wb,cm7_ext,cm7_shf\" \"cortex_m7\")\n+(define_cpu_unit \"cm7_lsu\" \"cortex_m7\")\n+(define_cpu_unit \"cm7_mac\" \"cortex_m7\")\n+(define_cpu_unit \"cm7_fpu\" \"cortex_m7\")\n+\n+(define_reservation \"cm7_all_units\"\n+                    \"cm7_i0+cm7_i1+cm7_a0+cm7_a1+cm7_branch\\\n+                     +cm7_wb+cm7_ext+cm7_shf+cm7_lsu+cm7_mac\\\n+                     +cm7_fpu\")\n+\n+;; Simple alu instruction without inline shift operation.\n+(define_insn_reservation \"cortex_m7_alu_simple\" 2\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n+                        alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n+                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n+                        adr,bfm,rev,\\\n+                        shift_imm,shift_reg,\\\n+                        mov_imm,mov_reg,mvn_imm,mvn_reg,\\\n+                        mov_shift_reg,mov_shift,\\\n+                        mvn_shift,mvn_shift_reg,\\\n+                        logic_shift_imm,logics_shift_imm,\\\n+                        alu_shift_reg,alus_shift_reg,\\\n+                        logic_shift_reg,logics_shift_reg,\\\n+                        mrs,clz,f_mcr,f_mrc,multiple,no_insn\"))\n+  \"cm7_i0|cm7_i1,cm7_a0|cm7_a1\")\n+\n+;; Simple alu with inline shift operation.\n+(define_insn_reservation \"cortex_m7_alu_shift\" 2\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+\t(eq_attr \"type\" \"alu_shift_imm,alus_shift_imm\"))\n+   \"cm7_i0|cm7_i1,(cm7_a0|cm7_a1)+cm7_shf+cm7_branch\")\n+\n+;; Only one ALU can be used for DSP instructions.\n+(define_insn_reservation \"cortex_m7_dsp\" 2\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"alu_dsp_reg,smlaxy,smlalxy,smulxy\"))\n+  \"cm7_i0|cm7_i1,cm7_a0\")\n+\n+;; The multiply instructions.\n+(define_insn_reservation \"cortex_m7_multiply\" 2\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"mul,muls,umull,smull\"))\n+   \"cm7_i0|cm7_i1,(cm7_a0|cm7_a1)+cm7_wb\")\n+\n+(define_insn_reservation \"cortex_m7_idiv\" 4\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"sdiv,udiv\"))\n+   \"cm7_all_units*4\")\n+\n+(define_insn_reservation \"cortex_m7_alu_extend\" 2\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"extend\"))\n+   \"cm7_i0|cm7_i1,(cm7_a0|cm7_a1)+cm7_ext+cm7_branch\")\n+\n+(define_insn_reservation \"cortex_m7_mac\" 2\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"mla,mlas\"))\n+   \"cm7_i0|cm7_i1,cm7_mac+cm7_wb\")\n+\n+;; The branch instructions.\n+(define_insn_reservation \"cortex_m7_branch\" 0\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"branch,call\"))\n+   \"cm7_i0|cm7_i1,cm7_branch\")\n+\n+;; The load instructions.\n+(define_insn_reservation \"cortex_m7_load1\" 2\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"load_byte, load1\"))\n+   \"cm7_i0|cm7_i1,cm7_lsu\")\n+\n+(define_insn_reservation \"cortex_m7_load2\" 2\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"load2\"))\n+   \"cm7_all_units\")\n+\n+(define_insn_reservation \"cortex_m7_loadm\" 2\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"load3,load4\"))\n+   \"cm7_all_units*2\")\n+\n+;; The store instructions.\n+(define_insn_reservation \"cortex_m7_store1\" 0\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"store1\"))\n+   \"cm7_i0|cm7_i1,cm7_lsu+cm7_wb\")\n+\n+(define_insn_reservation \"cortex_m7_store2\" 0\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"store2\"))\n+   \"cm7_all_units\")\n+\n+(define_insn_reservation \"cortex_m7_storem\" 0\n+   (and (eq_attr \"tune\" \"cortexm7\")\n+        (eq_attr \"type\" \"store3,store4\"))\n+   \"cm7_all_units*2\")\n+\n+;; The FPU instructions.\n+(define_insn_reservation \"cortex_m7_fpalu\" 3\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"ffariths,ffarithd,fadds,faddd,fmov,fconsts,\\\n+                        fconstd,fcmpd,f_cvt,f_cvtf2i,f_cvti2f, fcmps,\\\n+                        fmuls,f_flag\"))\n+  \"cm7_i0|cm7_i1,cm7_fpu\")\n+\n+(define_insn_reservation \"cortex_m7_fmacs\" 6\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"fmacs,ffmas\"))\n+  \"cm7_i0|cm7_i1,cm7_fpu\")\n+\n+(define_insn_reservation \"cortex_m7_fdivs\" 16\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"fdivs, fsqrts\"))\n+  \"cm7_i0|cm7_i1, cm7_fpu*5\")\n+\n+(define_insn_reservation \"cortex_m7_f_loads\" 2\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"f_loads\"))\n+  \"cm7_i0|cm7_i1, cm7_lsu\")\n+\n+(define_insn_reservation \"cortex_m7_f_stores\" 0\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"f_stores\"))\n+  \"cm7_i0|cm7_i1, cm7_lsu+cm7_wb\")\n+\n+(define_insn_reservation \"cortex_m7_fmuld\" 6\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"fmuld\"))\n+  \"cm7_i0|cm7_i1,cm7_fpu*3\")\n+\n+(define_insn_reservation \"cortex_m7_fmacd\" 10\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"fmacd,ffmad\"))\n+  \"cm7_i0|cm7_i1,cm7_fpu*4\")\n+\n+(define_insn_reservation \"cortex_m7_fdivd\" 31\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"fdivd,fsqrtd\"))\n+  \"cm7_i0|cm7_i1,cm7_fpu*4\")\n+\n+(define_insn_reservation \"cortex_m7_f_loadd\" 3\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"f_loadd\"))\n+  \"cm7_all_units\")\n+\n+(define_insn_reservation \"cortex_m7_f_stored\" 0\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"f_stored\"))\n+  \"cm7_all_units\")\n+\n+(define_insn_reservation \"cortex_m7_f_mcr\" 1\n+  (and (eq_attr \"tune\" \"cortexm7\")\n+       (eq_attr \"type\" \"f_mcrr,f_mrrc\"))\n+  \"cm7_all_units\")"}]}