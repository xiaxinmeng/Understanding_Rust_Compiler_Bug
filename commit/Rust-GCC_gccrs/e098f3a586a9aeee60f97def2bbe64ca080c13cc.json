{"sha": "e098f3a586a9aeee60f97def2bbe64ca080c13cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA5OGYzYTU4NmE5YWVlZTYwZjk3ZGVmMmJiZTY0Y2EwODBjMTNjYw==", "commit": {"author": {"name": "Carlos O'Donell", "email": "carlos@codesourcery.com", "date": "2006-07-18T04:16:02Z"}, "committer": {"name": "Carlos O'Donell", "email": "carlos@gcc.gnu.org", "date": "2006-07-18T04:16:02Z"}, "message": "dbxout.c (dbxout_function_end): Do not increment scope_labelno.\n\n\n2006-07-17  Carlos O'Donell  <carlos@codesourcery.com>\n\n\t* dbxout.c (dbxout_function_end): Do not increment scope_labelno.\n\t(dbxout_begin_prologue): Increment scope_labelno.\n\nFrom-SVN: r115544", "tree": {"sha": "f9ff2a74ab033c69aec5e5b176e392bc48d703e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9ff2a74ab033c69aec5e5b176e392bc48d703e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e098f3a586a9aeee60f97def2bbe64ca080c13cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e098f3a586a9aeee60f97def2bbe64ca080c13cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e098f3a586a9aeee60f97def2bbe64ca080c13cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e098f3a586a9aeee60f97def2bbe64ca080c13cc/comments", "author": null, "committer": null, "parents": [{"sha": "8bcbc00026bb7e9ab76e9db074eb04b46916df34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bcbc00026bb7e9ab76e9db074eb04b46916df34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bcbc00026bb7e9ab76e9db074eb04b46916df34"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "320f1631c115c1a5fef34c792d356dc5fd4e59c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e098f3a586a9aeee60f97def2bbe64ca080c13cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e098f3a586a9aeee60f97def2bbe64ca080c13cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e098f3a586a9aeee60f97def2bbe64ca080c13cc", "patch": "@@ -1,3 +1,8 @@\n+2006-07-17  Carlos O'Donell  <carlos@codesourcery.com>\n+\n+\t* dbxout.c (dbxout_function_end): Do not increment scope_labelno.\n+\t(dbxout_begin_prologue): Increment scope_labelno.\n+\n 2006-07-17  Richard Henderson  <rth@redhat.com>\n \n \tPR 27889"}, {"sha": "49a32425f900b31b0a2e3baa07975ad1f4cd7c09", "filename": "gcc/dbxout.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e098f3a586a9aeee60f97def2bbe64ca080c13cc/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e098f3a586a9aeee60f97def2bbe64ca080c13cc/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=e098f3a586a9aeee60f97def2bbe64ca080c13cc", "patch": "@@ -905,7 +905,6 @@ static void\n dbxout_function_end (tree decl)\n {\n   char lscope_label_name[100];\n-  int lscope_labelno = scope_labelno++;\n \n   /* The Lscope label must be emitted even if we aren't doing anything\n      else; dbxout_block needs it.  */\n@@ -914,8 +913,8 @@ dbxout_function_end (tree decl)\n   /* Convert Lscope into the appropriate format for local labels in case\n      the system doesn't insert underscores in front of user generated\n      labels.  */\n-  ASM_GENERATE_INTERNAL_LABEL (lscope_label_name, \"Lscope\", lscope_labelno);\n-  targetm.asm_out.internal_label (asm_out_file, \"Lscope\", lscope_labelno);\n+  ASM_GENERATE_INTERNAL_LABEL (lscope_label_name, \"Lscope\", scope_labelno);\n+  targetm.asm_out.internal_label (asm_out_file, \"Lscope\", scope_labelno);\n \n   /* The N_FUN tag at the end of the function is a GNU extension,\n      which may be undesirable, and is unnecessary if we do not have\n@@ -941,7 +940,7 @@ dbxout_function_end (tree decl)\n     {\n       char begin_label[20];\n       /* Reference current function start using LFBB.  */\n-      ASM_GENERATE_INTERNAL_LABEL (begin_label, \"LFBB\", lscope_labelno);\n+      ASM_GENERATE_INTERNAL_LABEL (begin_label, \"LFBB\", scope_labelno);\n       dbxout_begin_empty_stabs (N_FUN);\n       dbxout_stab_value_label_diff (lscope_label_name, begin_label);\n     }\n@@ -1249,6 +1248,9 @@ dbxout_begin_prologue (unsigned int lineno, const char *filename)\n       && !flag_debug_only_used_symbols)\n     dbxout_stabd (N_BNSYM, 0);\n \n+  /* pre-increment the scope counter */\n+  scope_labelno++;\n+\n   dbxout_source_line (lineno, filename);\n   /* Output function begin block at function scope, referenced \n      by dbxout_block, dbxout_source_line and dbxout_function_end.  */"}]}