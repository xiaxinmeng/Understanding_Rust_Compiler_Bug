{"sha": "189327376c98168ad9445537dcd04d467b09d143", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg5MzI3Mzc2Yzk4MTY4YWQ5NDQ1NTM3ZGNkMDRkNDY3YjA5ZDE0Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-03-22T20:38:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-03-22T20:38:46Z"}, "message": "re PR c++/43281 ([c++0x] ICE with invalid auto)\n\n\tPR c++/43281\n\t* pt.c (contains_auto_r): New fn.\n\t(do_auto_deduction): Use it.\n\t(tsubst): Don't look at TREE_TYPE of a TEMPLATE_TYPE_PARM.\n\nFrom-SVN: r157651", "tree": {"sha": "ee4ab205725aa66f805cec5416356d4084a65c7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee4ab205725aa66f805cec5416356d4084a65c7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/189327376c98168ad9445537dcd04d467b09d143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/189327376c98168ad9445537dcd04d467b09d143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/189327376c98168ad9445537dcd04d467b09d143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/189327376c98168ad9445537dcd04d467b09d143/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce30e6fd06d9434c9b99162da448d37963fbcf24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce30e6fd06d9434c9b99162da448d37963fbcf24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce30e6fd06d9434c9b99162da448d37963fbcf24"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "fd08a543dd007ce9b7a76ebfdfc3b4e659ec4a51", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/189327376c98168ad9445537dcd04d467b09d143/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/189327376c98168ad9445537dcd04d467b09d143/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=189327376c98168ad9445537dcd04d467b09d143", "patch": "@@ -1,3 +1,10 @@\n+2010-03-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/43281\n+\t* pt.c (contains_auto_r): New fn.\n+\t(do_auto_deduction): Use it.\n+\t(tsubst): Don't look at TREE_TYPE of a TEMPLATE_TYPE_PARM.\n+\n 2010-03-20  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR c++/43081:"}, {"sha": "f5d68f8312731ece3b1ccc6f1eb9578841f83629", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/189327376c98168ad9445537dcd04d467b09d143/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/189327376c98168ad9445537dcd04d467b09d143/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=189327376c98168ad9445537dcd04d467b09d143", "patch": "@@ -9921,6 +9921,7 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \n   if (type\n       && TREE_CODE (t) != TYPENAME_TYPE\n+      && TREE_CODE (t) != TEMPLATE_TYPE_PARM\n       && TREE_CODE (t) != IDENTIFIER_NODE\n       && TREE_CODE (t) != FUNCTION_TYPE\n       && TREE_CODE (t) != METHOD_TYPE)\n@@ -18240,6 +18241,20 @@ listify_autos (tree type, tree auto_node)\n   return tsubst (type, argvec, tf_warning_or_error, NULL_TREE);\n }\n \n+/* walk_tree helper for do_auto_deduction.  */\n+\n+static tree\n+contains_auto_r (tree *tp, int *walk_subtrees ATTRIBUTE_UNUSED,\n+\t\t void *type)\n+{\n+  /* Is this a variable with the type we're looking for?  */\n+  if (DECL_P (*tp)\n+      && TREE_TYPE (*tp) == type)\n+    return *tp;\n+  else\n+    return NULL_TREE;\n+}\n+\n /* Replace occurrences of 'auto' in TYPE with the appropriate type deduced\n    from INIT.  AUTO_NODE is the TEMPLATE_TYPE_PARM used for 'auto' in TYPE.  */\n \n@@ -18248,8 +18263,19 @@ do_auto_deduction (tree type, tree init, tree auto_node)\n {\n   tree parms, tparms, targs;\n   tree args[1];\n+  tree decl;\n   int val;\n \n+  /* The name of the object being declared shall not appear in the\n+     initializer expression.  */\n+  decl = cp_walk_tree_without_duplicates (&init, contains_auto_r, type);\n+  if (decl)\n+    {\n+      error (\"variable %q#D with %<auto%> type used in its own \"\n+\t     \"initializer\", decl);\n+      return error_mark_node;\n+    }\n+\n   /* [dcl.spec.auto]: Obtain P from T by replacing the occurrences of auto\n      with either a new invented type template parameter U or, if the\n      initializer is a braced-init-list (8.5.4), with"}, {"sha": "99f67470fc56d800e828af39e8ea74995a8b9dad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/189327376c98168ad9445537dcd04d467b09d143/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/189327376c98168ad9445537dcd04d467b09d143/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=189327376c98168ad9445537dcd04d467b09d143", "patch": "@@ -1,5 +1,8 @@\n 2010-03-22  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/43281\n+\t* g++.dg/cpp0x/auto18.C: New.\n+\n \t* gcc.dg/pr36997.c: Adjust error message.\n \t* g++.dg/ext/vector9.C: Likewise.\n \t* g++.dg/conversion/simd3.C: Likewise."}, {"sha": "17f7f99595573796d8a407dc5b575c696af1e852", "filename": "gcc/testsuite/g++.dg/cpp0x/auto18.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/189327376c98168ad9445537dcd04d467b09d143/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/189327376c98168ad9445537dcd04d467b09d143/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto18.C?ref=189327376c98168ad9445537dcd04d467b09d143", "patch": "@@ -0,0 +1,6 @@\n+// { dg-options \"-std=c++0x\" }\n+\n+void f()\n+{\n+  auto val = val;  // { dg-error \"auto. type used in its own initializer\" }\n+}"}]}