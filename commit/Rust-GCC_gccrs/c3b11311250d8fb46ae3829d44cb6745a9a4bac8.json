{"sha": "c3b11311250d8fb46ae3829d44cb6745a9a4bac8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNiMTEzMTEyNTBkOGZiNDZhZTM4MjlkNDRjYjY3NDVhOWE0YmFjOA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-12T08:13:05Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-12T08:13:05Z"}, "message": "Revert last change\n\nFrom-SVN: r17067", "tree": {"sha": "5bb469f4081020bea80225892d2f23f1c5b567c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bb469f4081020bea80225892d2f23f1c5b567c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3b11311250d8fb46ae3829d44cb6745a9a4bac8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3b11311250d8fb46ae3829d44cb6745a9a4bac8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3b11311250d8fb46ae3829d44cb6745a9a4bac8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3b11311250d8fb46ae3829d44cb6745a9a4bac8/comments", "author": null, "committer": null, "parents": [{"sha": "5a5ab947b8056df07a18fdeea1df2a15400315ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5ab947b8056df07a18fdeea1df2a15400315ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5ab947b8056df07a18fdeea1df2a15400315ec"}], "stats": {"total": 20, "additions": 3, "deletions": 17}, "files": [{"sha": "87793b7d0454e4ec03d08f57fc742d77a716e594", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b11311250d8fb46ae3829d44cb6745a9a4bac8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b11311250d8fb46ae3829d44cb6745a9a4bac8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3b11311250d8fb46ae3829d44cb6745a9a4bac8", "patch": "@@ -20,11 +20,6 @@ Fri Oct 10 17:58:31 CEST 1997  Marc Lehmann <pcg@goof.com>\n \t* i386/xm-go32.h (EXECUTABLE_SUFFIX): Define.\n \t(DIR_SEPARATOR, NO_SYS_SIGLIST): Likewise.\n \n-1997-11-13  Dave Love  <d.love@dl.ac.uk>\n-\n-\t* i386/linux.h (STACK_BOUNDARY): Define as 64 for glibc2.\n-\t* i386/gnu.h (STACK_BOUNDARY): Define as 64.\n-\n Thu Dec 11 23:55:17 1997  Manfred Hollstein  <manfred@s-direktnet.de>\n \n \t* fixincludes (str{len,spn,cspn} return value): Handle different"}, {"sha": "bdce3ed000b054e2b6753bbbb1a350272a72d14e", "filename": "gcc/config/i386/gnu.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b11311250d8fb46ae3829d44cb6745a9a4bac8/gcc%2Fconfig%2Fi386%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b11311250d8fb46ae3829d44cb6745a9a4bac8/gcc%2Fconfig%2Fi386%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu.h?ref=c3b11311250d8fb46ae3829d44cb6745a9a4bac8", "patch": "@@ -3,9 +3,6 @@\n /* This does it mostly for us.  */\n #include <i386/linux.h>\n \n-#undef STACK_BOUNDARY\n-#define STACK_BOUNDARY 64       /* glibc2's crt ensures this */\n-\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES GNU_CPP_PREDEFINES(\"i386\")\n "}, {"sha": "8f0671d1faaf8e2b6f3969735e9641aca32f1864", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b11311250d8fb46ae3829d44cb6745a9a4bac8/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b11311250d8fb46ae3829d44cb6745a9a4bac8/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=c3b11311250d8fb46ae3829d44cb6745a9a4bac8", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for Intel 386 running Linux-based GNU systems with ELF format.\n+/* Definitions for Intel 386 running Linux with ELF format\n    Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu.\n@@ -30,19 +30,13 @@ Boston, MA 02111-1307, USA.  */\n #include <linux.h>\t/* some common stuff */\n \n #undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (i386 GNU/Linux with ELF)\");\n+#define TARGET_VERSION fprintf (stderr, \" (i386 Linux/ELF)\");\n \n /* The svr4 ABI for the i386 says that records and unions are returned\n    in memory.  */\n #undef DEFAULT_PCC_STRUCT_RETURN\n #define DEFAULT_PCC_STRUCT_RETURN 1\n \n-#ifndef USE_GNULIBC_1\n-#undef STACK_BOUNDARY\n-#define STACK_BOUNDARY 64       /* glibc2's crt ensures this, libc5\n-                                   only gives you 32 */\n-#endif\n-\n /* This is how to output an element of a case-vector that is relative.\n    This is only used for PIC code.  See comments by the `casesi' insn in\n    i386.md for an explanation of the expression this outputs. */\n@@ -166,7 +160,7 @@ Boston, MA 02111-1307, USA.  */\n #undef CC1_SPEC\n #define CC1_SPEC \"%(cc1_cpu) %{profile:-p}\"\n \n-/* Provide a LINK_SPEC appropriate for GNU/Linux.  Here we provide support\n+/* Provide a LINK_SPEC appropriate for Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n    combinations of options at link-time. We like to support here for"}]}