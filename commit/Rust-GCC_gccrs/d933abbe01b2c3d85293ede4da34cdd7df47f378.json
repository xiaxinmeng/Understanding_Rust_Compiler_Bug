{"sha": "d933abbe01b2c3d85293ede4da34cdd7df47f378", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkzM2FiYmUwMWIyYzNkODUyOTNlZGU0ZGEzNGNkZDdkZjQ3ZjM3OA==", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@gcc.gnu.org", "date": "2005-02-16T20:03:29Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@gcc.gnu.org", "date": "2005-02-16T20:03:29Z"}, "message": "[multiple changes]\n\n2005-02-15  Mark Wielaard  <mark@klomp.org>\n\n\t* java/awt/BasicStroke.java (hashCode): Check for null dash.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GtkArg.java,\n\tgnu/java/awt/peer/gtk/GtkArgList.java:\n\tRemoved.\n\n2005-02-15  Craig Black  <craig.black@aonix.com>\n\n\t* gnu/java/awt/peer/gtk/GtkCheckboxMenuItem.java\n\t(postMenuActionEvent): Implement to notify ItemListeners.\n\t* java/awt/CheckboxMenuItem.java\n\t(dispatchEventImpl): Update state on ItemEvent.\n\t* java/awt/MenuItem.java\n\t(processActionEvent): Retarget event source.\n\n2005-02-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* gnu/java/awt/color/ClutProfileConverter.java,\n\tgnu/java/awt/peer/ClasspathTextLayoutPeer.java,\n\tgnu/java/awt/peer/gtk/GdkFontPeer.java,\n\tgnu/java/awt/peer/gtk/GdkGlyphVector.java,\n\tgnu/java/awt/peer/gtk/GdkGraphics2D.java,\n\tgnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java,\n\tgnu/java/awt/peer/gtk/GdkPixbufDecoder.java,\n\tgnu/java/awt/peer/gtk/GdkRobotPeer.java,\n\tgnu/java/awt/peer/gtk/GdkTextLayout.java,\n\tgnu/java/awt/peer/gtk/GtkButtonPeer.java,\n\tgnu/java/awt/peer/gtk/GtkCheckboxPeer.java,\n\tgnu/java/awt/peer/gtk/GtkChoicePeer.java,\n\tgnu/java/awt/peer/gtk/GtkComponentPeer.java,\n\tgnu/java/awt/peer/gtk/GtkContainerPeer.java,\n\tgnu/java/awt/peer/gtk/GtkDialogPeer.java,\n\tgnu/java/awt/peer/gtk/GtkFileDialogPeer.java,\n\tgnu/java/awt/peer/gtk/GtkFontPeer.java,\n\tgnu/java/awt/peer/gtk/GtkFramePeer.java,\n\tgnu/java/awt/peer/gtk/GtkLabelPeer.java,\n\tgnu/java/awt/peer/gtk/GtkMenuComponentPeer.java,\n\tgnu/java/awt/peer/gtk/GtkMenuItemPeer.java,\n\tgnu/java/awt/peer/gtk/GtkScrollPanePeer.java,\n\tgnu/java/awt/peer/gtk/GtkTextComponentPeer.java,\n\tgnu/java/awt/peer/gtk/GtkToolkit.java,\n\tgnu/java/awt/peer/gtk/GtkWindowPeer.java,\n\tjavax/swing/JPopupMenu.java,\n\tjavax/swing/JSpinner.java,\n\tjavax/swing/SortingFocusTraversalPolicy.java,\n\tjavax/swing/SwingUtilities.java,\n\tjavax/swing/plaf/basic/BasicComboBoxEditor.java,\n\tjavax/swing/plaf/basic/BasicComboBoxRenderer.java,\n\tjavax/swing/tree/DefaultMutableTreeNode.java:\n\tRemoved unused imports and expanded starred\n\timports.\n\n2005-02-15  Mark Wielaard  <mark@klomp.org>\n\n\t* java/awt/AWTKeyStroke.java (getAWTKeyStroke(String)): Throw\n\tIllegalArgumentException when the given String is null.\n\n\t* javax/swing/KeyStroke.java (getKeyStroke(String)): Return null\n\twhen given keystoke sequence cannot be parsed.\n\n\t* javax/swing/JRootPane.java (setJMenuBar): Remove current menubar\n\tif one is installed. Only install the given menubar is not null.\n\n\t* javax/swing/JViewport.java (getViewSize): Return an empty\n\tDimension when the view isn't set or preferred component size when\n\tno viewSize is set.\n\n\t* javax/swing/ViewportLayout.java (preferredLayoutSize): Return an\n\tempty Dimension when there is no view set.\n\t(minimumLayoutSize): Likewise.\n\t(layoutContainer): Don't try to layout when there is no view.\n\n2005-02-15  Anthony Green  <green@redhat.com>\n\n\t* jni/gtk-peer/gtk_jawt.c (classpath_jawt_get_drawable,\n\tclasspath_jawt_lock, classpath_jawt_unlock): New functions.\n\t* jawt.c (_Jv_JAWT_Lock, _Jv_JAWT_Unlock): New functions.\n\t(_Jv_GetDrawingSurface): Set visualID.\n\t(_Jv_FreeDrawingSurfaceInfo): Clear visualID.\n\t(JAWT_GetAWT): Set Lock and Unlock.\n\t* include/jawt_md.h (struct _JAWT_X11DrawingSurfaceInfo): Add visualID.\n\t* include/jawt.h (JAWT_VERSION_1_4, JAWT_LOCK_ERROR,\n\tJAWT_LOCK_CLIP_CHANGED, JAWT_LOCK_BOUNDS_CHANGED,\n\tJAWT_LOCK_SURFACE_CHANGED): New macros.\n\t(struct _JAWT): Add Lock and Unlock.\n\n2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* jawt.c: New file.\n\t* include/jawt.h: Likewise.\n\t* include/jawt_md.h: Likewise.\n\t* include/Makefile.am (tool_include__HEADERS): Add jawt.h and\n\tjawt_md.h files.\n\t* jni/classpath/classpath_jawt.h: Likewise.\n\t* jni/gtk-peer/gtk_jawt.c: Likewise.\n\t* Makefile.am: Build libjawt.so.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java:\n\tMerged file header with classpath CVS head.\n\t* gnu/java/awt/peer/gtk/GdkPixbufDecoder.java:\n\tMerged code formatting with classpath CVS head.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c:\n\tRemoved debug code.\n\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_getGlyphVector):\n\tHandle special JNI strings with 2 '\\0' at the end.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c:\n\tMerged file header with classpath CVS head.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c:\n\tMerged code formatting with classpath CVS head.\n\n2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c (create):\n\tUse GTK's built-in file system backend.  Use GTK_RESPONSE_ACCEPT.\n\t(handle_response): Use GTK_RESPONSE_ACCEPT.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* Makefile.am: Fix library build breakage.\n\t* Makefile.in: Regenerate.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTabbedPane.java\n\t(Page.setDisplayedMnemonicIndex): Handle empty menmonic.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/tree/DefaultMutableTreeNode.java:\n\tReworked Javadocs all over.\n\t(getPathToRoot): Fixed direction of result array initialization.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c:\n\t Fix includes for cairo 0.3.0 snappshot.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c:\n\tMerged file header from classpath CVS HEAD.\n\n2005-02-15  Craig Black  <craig.black@aonix.com>\n\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n\t(copyState): Pass a JNI global reference to signal handler.\n\t(realize_cb): Use and free JNI global reference.\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n\t(create): Pass a JNI global reference to signal handler.\n\t(selection_changed): Match declaration.\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c\n\t(dispose): Do not remove entries from state tables until after widget is\n\tdestroyed.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/Container.javai (paramString):\n\tIf layoutMgr is null just return result of super.paramString().\n\t* java/awt/Scrollbar.java: Reformatted.\n\t* java/awt/im/InputContext.java (static):\n\tRemoved redundant initializations.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/ImageIcon.java,\n\tjavax/swing/UIManager.java,\n\tjavax/swing/text/EditorKit.java,\n\tjavax/swing/text/Segment.java:\n\tMore whitespace cleanups.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/EmbeddedWindow.java,\n\tgnu/java/awt/image/ImageDecoder.java,\n\tgnu/java/awt/peer/gtk/GtkFileDialogPeer.java,\n\tjava/awt/DefaultKeyboardFocusManager.java,\n\tjava/awt/Frame.java,\n\tjava/awt/image/RGBImageFilter.java,\n\tjavax/swing/AbstractButton.java,\n\tjavax/swing/ActionMap.java,\n\tjavax/swing/ComponentInputMap.java,\n\tjavax/swing/DefaultDesktopManager.java,\n\tjavax/swing/ImageIcon.java,\n\tjavax/swing/InputMap.java,\n\tjavax/swing/JButton.java,\n\tjavax/swing/JCheckBox.java,\n\tjavax/swing/JCheckBoxMenuItem.java,\n\tjavax/swing/JEditorPane.java,\n\tjavax/swing/JMenu.java,\n\tjavax/swing/JMenuItem.java,\n\tjavax/swing/JOptionPane.java,\n\tjavax/swing/JRootPane.java,\n\tjavax/swing/JTable.java,\n\tjavax/swing/MenuSelectionManager.java,\n\tjavax/swing/RepaintManager.java,\n\tjavax/swing/ScrollPaneLayout.java,\n\tjavax/swing/SortingFocusTraversalPolicy.java,\n\tjavax/swing/UIManager.java,\n\tjavax/swing/ViewportLayout.java,\n\tjavax/swing/plaf/basic/BasicCheckBoxMenuItemUI.java,\n\tjavax/swing/plaf/basic/BasicInternalFrameUI.java,\n\tjavax/swing/plaf/basic/BasicLabelUI.java,\n\tjavax/swing/plaf/basic/BasicListUI.java,\n\tjavax/swing/plaf/basic/BasicMenuItemUI.java,\n\tjavax/swing/plaf/basic/BasicMenuUI.java,\n\tjavax/swing/plaf/basic/BasicOptionPaneUI.java,\n\tjavax/swing/plaf/basic/BasicRadioButtonMenuItemUI.java,\n\tjavax/swing/plaf/basic/BasicRootPaneUI.java,\n\tjavax/swing/plaf/basic/BasicScrollPaneUI.java,\n\tjavax/swing/plaf/basic/BasicSplitPaneDivider.java,\n\tjavax/swing/plaf/basic/BasicTextUI.java,\n\tjavax/swing/table/TableColumnModel.java,\n\tjavax/swing/text/AbstractDocument.java,\n\tjavax/swing/text/EditorKit.java,\n\tjavax/swing/text/Position.java,\n\tjavax/swing/text/Segment.java,\n\tjavax/swing/text/StyledEditorKit.java,\n\tjavax/swing/text/ViewFactory.java:\n\tCleanup whitespace differences to classpath CVS HEAD.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GdkPixbufDecoder.java:\n\t(finalize): Call finish from here.\n\t(produce): Not from here.\n\t* Makefile.am (gtk_c_source_files):\n\tRemove jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c.\n\t* Makefile.in: Regenerate.\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n\t(cairoSetFont):\n\t(cairoDrawGdkTextLayout):\n\t(cairoDrawString):\n\t(getPeerTextMetrics):\n\t(getPeerFontMetrics): Remove.\n\t(setFont): Don't call cairoSetFont.\n\t(cairoDrawGlyphVector): Accept font peer argument.\n\t(drawGlyphVector): Pass font peer to cairoDrawGlyphVector.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n\t(ensure_metrics_cairo):\n\t(gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetFont):\n\t(gnu_java_awt_peer_gtk_GdkGraphics2D_cairoDrawString):\n\t(gnu_java_awt_peer_gtk_GdkGraphics2D_getPeerFontMetrics):\n\t(gnu_java_awt_peer_gtk_GdkGraphics2D_getPeerTextMetrics):\n\t(metrics_cairo):\n\t(metrics_surface): Remove.\n\t(gnu_java_awt_peer_gtk_GdkGraphics2D_cairoDrawGlyphVector):\n\tPass and install font peer.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* Makefile.am: Create \"split library\" structure.\n\t* Makefile.in: Regenerate.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c:\n\tRelease GDK lock during upcalls.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c: Remove.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c\n\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_getGlyphVector):\n\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_getFontMetrics):\n\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_getTextMetrics): New methods.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c: Remove.\n\t* gnu/java/awt/peer/gtk/GdkFontPeer.java\n\t(getGlyphVector):\n\t(getFontMetrics):\n\t(getTextMetrics): New native methods.\n\t* gnu/java/awt/peer/gtk/GdkFontMetrics.java: Remove native parts.\n\t* gnu/java/awt/peer/gtk/GdkGlyphVector.java: Likewise.\n\t* Makefile.am: Remove native entries for GdkFontMetrics, GdkGlyphVector.\n\t* Makefile.in: Regenerate.\n\n2005-02-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* javax/swing/SwingUtilities.java:\n\t(getAccessibleAt(java.awt.Component, java.awt.Point)):\n\tImplemented and documented.\n\t(getAccessibleChild(java.awt.Component, int)): Likewise.\n\t(getAccessibleChildrenCount(java.awt.Component)): Likewise.\n\t(getAccessibleIndexInParent(java.awt.Component)): Likewise.\n\t(getAccessibleStateSet(java.awt.Component)): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/SwingUtilities.java\n\t(getFontMetrics): Removed.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/Container.java\n\t(paramString): Implemented.\n\t* javax/swing/AbstractButton.java\n\t(paramString): Implemented.\n\t* javax/swing/JComponent.java\n\t(paramString): Implemented.\n\t* javax/swing/JMenu.java\n\t(paramString): Implemented.\n\t* javax/swing/JMenuBar.java\n\t(paramString): Implemented.\n\t* javax/swing/JMenuItem.java\n\t(paramString): Implemented.\n\t* javax/swing/JPopupMenu.java\n\t(paramString): Implemented.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JMenu.java\n\t(uiClassID): Removed.\n\t(JMenu): Set invoker on popup menu.\n\t(getUIClassID): Return id directly.\n\t(getItemCount): Simply return getMenuComponentCount().\n\tFixed javadoc.\n\t(isTopLevelMenu): Simplified.\n\t* javax/swing/JMenuItem.java\n\t(uiClassID): Removed.\n\t(getUIClassID): Return id directly.\n\t* javax/swing/JPopupMenu.java\n\t(uiClassID): Removed.\n\t(JPopupMenu): Always initialize correctly.\n\t(getSubElements): Only return components implementing MenuElement\n\tinterface.\n\t(HeavyWeightPopup.hide): Removed.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/image/ReplicateScaleFilter.java\n\t(replicatePixels): Made private.\n\t* javax/swing/colorchooser/DefaultRGBChooserPanel.java\n\t(DefaultRGBChooserPanel): Made package private.\n\t* javax/swing/colorchooser/DefaultSwatchChooserPanel.java\n\t(RecentSwatchPanel): Likewise.\n\t* javax/swing/event/MouseInputAdapter.java: Reformatted.\n\t(MouseInputAdapter): Made abstract.\n\t* javax/swing/tree/DefaultMutableTreeNode.java\n\t(random): Removed.\n\t(growTree): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/dnd/DropTarget.java (addDropTargetListener):\n\tClarified comments.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JComponent.java (getComponentGraphics):\n\tRemoved accidently commited code.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* java/awt/dnd/DropTarget.java\n\t(addDropTargetListener): Despite documentation, do not throw.\n\t* javax/swing/JComponent.java: Set a default DropTarget.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/AbstractAction.java\n\t(ENABLED_PROPERTY): Removed.\n\t(setEnabled): Replaced constant with real string.\n\t* javax/swing/AbstractButton.java\n\t(createActionPropertyChangeListener.propertyChange): Likewise.\n\t* javax/swing/JComboBox.java\n\t(DEFAULT_MAXIMUM_ROW_COUNT): Made private.\n\t(EDITABLE_CHANGED_PROPERTY): Removed.\n\t(MAXIMUM_ROW_COUNT_CHANGED_PROPERTY):Likewise.\n\t(ENABLED_CHANGED_PROPERTY):Likewise.\n\t(RENDERER_CHANGED_PROPERTY):Likewise.\n\t(EDITOR_CHANGED_PROPERTY):Likewise.\n\t(MODEL_CHANGED_PROPERTY):Likewise.\n\t(uiClassID):Likewise.\n\t(getUIClassID): Replaced constant with real string.\n\t(setModel):Likewise.\n\t(setEditable):Likewise.\n\t(setMaximumRowCount):Likewise.\n\t(setRenderer):Likewise.\n\t(setEditor):Likewise.\n\t(setEnabled):Likewise.\n\t* javax/swing/JLabel.java\n\t(DISABLED_ICON_CHANGED_PROPERTY): Removed.\n\t(DISPLAYED_MNEMONIC_CHANGED_PROPERTY): Likewise.\n\t(DISPLAYED_MNEMONIC_INDEX_CHANGED_PROPERTY): Likewise.\n\t(HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY): Likewise.\n\t(HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY): Likewise.\n\t(ICON_CHANGED_PROPERTY): Likewise.\n\t(ICON_TEXT_GAP_CHANGED_PROPERTY): Likewise.\n\t(LABEL_FOR_CHANGED_PROPERTY): Likewise.\n\t(TEXT_CHANGED_PROPERTY): Likewise.\n\t(VERTICAL_ALIGNMENT_CHANGED_PROPERTY): Likewise.\n\t(VERTICAL_TEXT_POSITION_CHANGED_PROPERTY): Likewise.\n\t(setText): Replaced constant with real string.\n\t(setIcon): Likewise.\n\t(setDisabledIcon): Likewise.\n\t(setDisplayedMnemonic): Likewise.\n\t(setIconTextGap): Likewise.\n\t(setVerticalAlignment): Likewise.\n\t(setHorizontalAlignment): Likewise.\n\t(setVerticalTextPosition): Likewise.\n\t(setHorizontalTextPosition): Likewise.\n\t(setLabelFor): Replaced constant with real string.\n\tFire property change event after property got changed.\n\t* javax/swing/JList.java\n\t(CELL_RENDERER_PROPERTY_CHANGED): Likewise.\n\t(FIXED_CELL_HEIGHT_PROPERTY_CHANGED): Likewise.\n\t(FIXED_CELL_WIDTH_PROPERTY_CHANGED): Likewise.\n\t(LAYOUT_ORIENTATION_PROPERTY_CHANGED): Likewise.\n\t(MODEL_PROPERTY_CHANGED): Likewise.\n\t(PROTOTYPE_CELL_VALUE_PROPERTY_CHANGED): Likewise.\n\t(SELECTION_BACKGROUND_PROPERTY_CHANGED): Likewise.\n\t(SELECTION_FOREGROUND_PROPERTY_CHANGED): Likewise.\n\t(SELECTION_MODEL_PROPERTY_CHANGED): Likewise.\n\t(setFixedCellWidth): Reimplemented.\n\t(setFixedCellHeight): Exit if new value is identical.\n\tReplaced constant with real string.\n\t(setSelectionBackground): Likewise.\n\t(setSelectionForeground): Likewise.\n\t(setPrototypeCellValue): Likewise.\n\t(setCellRenderer): Replaced constant with real string.\n\t(setModel): Likewise.\n\t(setSelectionModel): Likewise.\n\t* javax/swing/JMenuBar.java\n\t(BORDER_PAINTED_CHANGED_PROPERTY): Removed.\n\t(MODEL_CHANGED_PROPERTY): Likewise.\n\t(MARGIN_CHANGED_PROPERTY): Likewise.\n\t(setBorderPainted): Reimplemented.\n\t(setMargin): Likewise.\n\t(setSelectionModel): Replaced constant with real string.\n\t* javax/swing/JPopupMenu.java\n\t(LABEL_CHANGED_PROPERTY): Removed.\n\t(VISIBLE_CHANGED_PROPERTY): Likewise.\n\t(borderPainted): Likewise.\n\t(setLabel): Replaced constant with real string.\n\t(setVisible): Exit if new value is identical.\n\tReplaced constant with real string.\n\t* javax/swing/JProgressBar.java\n\t(BORDER_PAINTED_CHANGED_PROPERTY): Removed.\n\t(ORIENTATION_CHANGED_PROPERTY): Likewise.\n\t(STRING_CHANGED_PROPERTY): Likewise.\n\t(STRING_PAINTED_CHANGED_PROPERTY): Likewise.\n\t(INDETERMINATE_CHANGED_PROPERTY): Likewise.\n\t(setOrientation): Replaced constant with real string.\n\t(setStringPainted): Likewise.\n\t(setString): Likewise.\n\t(setBorderPainted): Likewise.\n\t(setIndeterminate): Likewise.\n\t* javax/swing/JScrollBar.java\n\t(BLOCK_INCREMENT_CHANGED_PROPERTY): Removed.\n\t(MODEL_CHANGED_PROPERTY): Likewise.\n\t(ORIENTATION_CHANGED_PROPERTY): Likewise.\n\t(setOrientation): Replaced constant with real string.\n\t(setModel): Likewise.\n\t(setUnitIncrement): Likewise.\n\t(setBlockIncrement): Likewise.\n\t* javax/swing/JScrollPane.java\n\t(COLUMN_HEADER_CHANGED_PROPERTY): Removed.\n\t(COMPONENT_ORIENTATION_CHANGED_PROPERTY): Likewise.\n\t(HORIZONTAL_SCROLLBAR_CHANGED_PROPERTY): Likewise.\n\t(HORIZONTAL_SCROLLBAR_POLICY_CHANGED_PROPERTY): Likewise.\n\t(LAYOUT_CHANGED_PROPERTY): Likewise.\n\t(ROW_HEADER_CHANGED_PROPERTY): Likewise.\n\t(VERTICAL_SCROLLBAR_CHANGED_PROPERTY): Likewise.\n\t(VERTICAL_SCROLLBAR_POLICY_CHANGED_PROPERTY): Likewise.\n\t(VIEWPORT_CHANGED_PROPERTY): Likewise.\n\t(VIEWPORT_BORDER_CHANGED_PROPERTY): Likewise.\n\t(WHEEL_SCROLLING_ENABLED_CHANGED_PROPERTY): Likewise.\n\t(setComponentOrientation): Replaced constant with real string.\n\t(setColumnHeader): Likewise.\n\t(setHorizontalScrollBar): Likewise.\n\t(setHorizontalScrollBarPolicy): Likewise.\n\t(setRowHeader): Likewise.\n\t(setVerticalScrollBar): Likewise.\n\t(setVerticalScrollBarPolicy): Likewise.\n\t(setWheelScrollingEnabled): Likewise.\n\t(setViewport): Likewise.\n\t(setViewportBorder): Likewise.\n\t* javax/swing/JSlider.java\n\t(INVERTED_CHANGED_PROPERTY): Removed.\n\t(LABEL_TABLE_CHANGED_PROPERTY): Likewise.\n\t(MAJOR_TICK_SPACING_CHANGED_PROPERTY): Likewise.\n\t(MINOR_TICK_SPACING_CHANGED_PROPERTY): Likewise.\n\t(MODEL_CHANGED_PROPERTY): Likewise.\n\t(ORIENTATION_CHANGED_PROPERTY): Likewise.\n\t(PAINT_LABELS_CHANGED_PROPERTY): Likewise.\n\t(PAINT_TICKS_CHANGED_PROPERTY): Likewise.\n\t(setModel): Replaced constant with real string.\n\t(setOrientation): Likewise.\n\t(setLabelTable): Likewise.\n\t(setInverted): Likewise.\n\t(setMajorTickSpacing): Likewise.\n\t(setMinorTickSpacing): Likewise.\n\t(setPaintTicks): Likewise.\n\t(setPaintLabels): Likewise.\n\t* javax/swing/JTabbedPane.java\n\t(MODEL_CHANGED_PROPERTY): Removed.\n\t(TAB_PLACEMENT_CHANGED_PROPERTY): Likewise.\n\t(TAB_LAYOUT_POLICY_CHANGED_PROPERTY): Likewise.\n\t(setModel): Replaced constant with real string.\n\t(setTabPlacement): Likewise.\n\t(setTabLayoutPolicy): Likewise.\n\t* javax/swing/JToolBar.java\n\t(ORIENTATION_CHANGED_PROPERTY): Removed.\n\t(FLOATABLE_CHANGED_PROPERTY): Likewise.\n\t(BORDER_PAINTED_CHANGED_PROPERTY): Likewise.\n\t(MARGIN_CHANGED_PROPERTY): Likewise.\n\t(ROLLOVER_CHANGED_PROPERTY): Likewise.\n\t(setRollover): Replaced constant with real string.\n\t(setMargin): Likewise.\n\t(setBorderPainted): Likewise.\n\t(setFloatable): Likewise.\n\t(setOrientation): Likewise.\n\t* javax/swing/plaf/basic/BasicComboBoxUI.java\n\t(PropertyChangeHandler.propertyChange): Likewise.\n\t* javax/swing/plaf/basic/BasicComboPopup.java\n\t(PropertyChangeHandler.propertyChange): Likewise.\n\t* javax/swing/plaf/basic/BasicMenuBarUI.java\n\t(PropertyChangeHandler.propertyChange): Likewise.\n\t* javax/swing/plaf/basic/BasicProgressBarUI.java\n\t(PropertyChangeHandler.propertyChange): Likewise.\n\t* javax/swing/plaf/basic/BasicScrollBarUI.java\n\t(PropertyChangeHandler.propertyChange): Likewise.\n\t* javax/swing/plaf/basic/BasicSliderUI.java\n\t(PropertyChangeHandler.propertyChange): Likewise.\n\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java\n\t(PropertyChangeHandler.propertyChange): Likewise.\n\t* javax/swing/plaf/basic/BasicToolBarUI.java\n\t(PropertyChangeHandler.propertyChange): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/DefaultButtonModel.java\n\t(changeState): Made private.\n\t* javax/swing/DefaultDesktopManager.java\n\t(setWasIcon): Fixed second argument to be java.lang.Boolean.\n\t* javax/swing/JLayeredPane.java\n\t(layerToRange): Made private.\n\t(incrLayer): Likewise.\n\t(decrLayer): Likewise.\n\t* javax/swing/JTable.java\n\t(dragEnabled): Likewise.\n\t(preferredViewportSize): Renamed from preferredScrollableViewportSize.\n\t* javax/swing/KeyStroke.java\n\t(Keystroke): Made private.\n\t* javax/swing/TransferHandler.java\n\t(COMMAND_COPY): Likewise.\n\t(COMMAND_CUT): Likewise.\n\t(COMMAND_PASTE): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTextField.java\n\t(postActionEvent): Use text in field when actionCommand is null.\n\t(getActionCommand): Removed.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/AbstractSet.java: Removed.\n\t* Makefile.am: Removed javax/swing/AbstractSet.java.\n\t* Makefile.in: Regenerated.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/Window.java\n\t(AccessibleWindow.getAccessibleStateSet): Fixed method name.\n\t* java/awt/dnd/DnDConstants.java\n\t(DnDConstants): New private constructor.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/DefaultCellRenderer.java: Removed.\n\t* Makefile.am: Removed javax/swing/DefaultCellRenderer.java.\n\t* Makefile.in: Regenerated.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/AbstractButton.java\n\t(fireItemStateChanged): Made protected.\n\t(fireActionPerformed): Likewise.\n\t(fireStateChanged): Likewise.\n\t* javax/swing/DefaultButtonModel.java\n\t(fireItemStateChanged): Likewise.\n\t(fireActionPerformed): Likewise.\n\t(fireStateChanged): Likewise.\n\t* javax/swing/JApplet.java\n\t(JApplet): Removed.\n\t(frameInit): Likewise.\n\t(setRootPane): Made protected.\n\t(createRootPane): Likewise.\n\t* javax/swing/JComponent.java\n\t(getClientProperty): Likewise.\n\t(putClientProperty): Likewise.\n\t* javax/swing/JEditorPane.java\n\t(getContentType): Likewise.\n\t(setContentType): Likewise.\n\t* javax/swing/JFrame.java\n\t(setRootPane): Likewise.\n\t(createRootPane): Likewise.\n\t* javax/swing/JInternalFrame.java\n\t(getFocusCycleRootAncestor): Made final. Added @since tag.\n\t(isFocusCycleRoot): Likewise.\n\t(getWarningString): Made final.\n\t* javax/swing/JScrollBar.java\n\t(changeListener): Removed.\n\t(changeEvent): Likewise.\n\t(createChangeListener): Likewise.\n\t(fireStateChanged): Likewise.\n\t(addChangeListener): Likewise.\n\t(removeChangeListener): Likewise.\n\t(getChangeListeners): Likewise.\n\t* javax/swing/JScrollPane.java\n\t(createViewport): Made protected.\n\t* javax/swing/JViewport.java\n\t(addImpl): Likewise.\n\t(setBorder): New method.\n\t* javax/swing/JWindow.java\n\t(setRootPane): Made protected.\n\t(createRootPane): Likewise.\n\t* javax/swing/plaf/basic/BasicButtonUI.java\n\t(installListeners): Likewise.\n\t(uninstallListeners): Likewise.\n\t* javax/swing/plaf/basic/BasicProgressBarUI.java\n\t(incrementAnimationIndex): Likewise.\n\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java\n\t(createLayoutManager): Likewise.\n\t* javax/swing/table/DefaultTableCellRenderer.java\n\t(firePropertyChange): Likewise.\n\t* javax/swing/table/JTableHeader.java\n\t(AccessibleJTableHeaderEntry.AccessibleJTableHeaderEntry):\n\tNew constructor.\n\t* javax/swing/text/PlainDocument.java\n\t(reindex): Made private.\n\t* javax/swing/text/PlainView.java\n\t(drawLine): Made protected.\n\t(getTabSize): Likewise.\n\t* javax/swing/text/View.java\n\t(setSize): Removed.\n\t(preferenceChanged): New method.\n\t(getBreakWeight): Likewise.\n\t(breakView): Likewise.\n\t(getViewIndex): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JScrollPane.java\n\t(ScrollBar): Made class protected.\n\t* javax/swing/JSpinner.java\n\t(JSpinner): Added @since tag.\n\t(listenerList): Removed.\n\t* javax/swing/JTable.java\n\t(setValueAt): New method.\n\t(getColumn): Likewise.\n\t* javax/swing/JWindow.java\n\t(rootPaneCheckingEnabled): Renamed from checking.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicTextUI.java\n\t(RootView.modelToView): Made it public and return a java.awt.Shape.\n\tHandle null subview.\n\t(uninstall): Set textComponent to null when its not possible used\n\tanymore.\n\t* javax/swing/text/View.java\n\t(setParent): Use better argument name.\n\t(getContainer): Get parent via getParent().\n\t(getViewFactory): Likewise.\n\t(getAttributes): Get element via getElement().\n\t(getStartOffset): Likewise.\n\t(getEndOffset): Likewise.\n\t(getResizeWeight): New method.\n\t(getMaximumSpan): Likewise.\n\t(getMinimumSpan): Likewise.\n\t(setSize): Likewise.\n\t(getGraphics): Likewise.\n\n2005-02-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* java/awt/Checkbox.java:\n\t(AccessibleAWTCheckbox()): Added public constructor\n\tto call superclass.\n\t* java/awt/Choice.java:\n\t(AccessibleAWTChoice): Added class documentation.\n\t(AccessibleAWTChoice()): Added public constructor\n\tto call superclass.\n\t(AccessibleAWTChoice.getAccessibleAction()): Documented.\n\t(AccessibleAWTChoice.getAccessibleRole()): Documented,\n\tand changed role to COMBO_BOX.\n\t(AccessibleAWTChoice.getAccessibleActionCount()): Documented.\n\t(AccessibleAWTChoice.getAccessibleActionDescription(int)): Documented.\n\t(AccessibleAWTChoice.doAccessibleAction(int)): Documented.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\t    Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/LayoutFocusTraversalPolicy.java,\n\tjavax/swing/SortingFocusTraversalPolicy.java:\n\tNew classes.\n\t* Makefile.am: Added new classes.\n\t* Makefike.in: Regenerated.\n\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/DebugGraphics.java: Mostly implemented.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/SwingUtilities.java\n\t(findFocusOwner): New method.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/DefaultEditorKit.java\n\t(read): Added '\\n' after each line.\n\t* javax/swing/text/PlainView.java\n\t(modelToView): Update metrics.\n\t(drawLine): Use offsets from element.\n\t(paint): Update metrics. Draw all lines.\n\n2005-02-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* java/awt/Checkbox.java:\n\t(AccessibleAWTCheckbox): Added class documentation\n\t* java/awt/Scrollbar.java:\n\t(AccessibleAWTScrollBar): typo corrected and docs added\n\t(AccessibleAWTScrollBar.getAccessibleRole()): documented\n\t(AccessibleAWTScrollBar.getAccessibleStateSet()): likewise\n\t(AccessibleAWTScrollBar.getAccessibleValue()): likewise\n\t(AccessibleAWTScrollBar.getCurrentAccessibleValue()): likewise\n\t(AccessibleAWTScrollBar.setCurrentAccessibleValue(int)): likewise\n\t(AccessibleAWTScrollBar.getMinimumAccessibleValue()): likewise\n\t(AccessibleAWTScrollBar.getMaximumAccessibleValue()): likewise\n\t(getAccessibleContext()): name of accessible class corrected\n\n2005-02-15  Mark Wielaard  <mark@klomp.org>\n\n\t* java/awt/BasicStroke.java (hashCode): Implement.\n\t(equals): Document.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/print/PrinterJob.java\n\t(pageDialog): Throws java.awt.HeadlessException.\n\t(printDialog): Likewise.\n\n2005-02-15  Mark Wielaard  <mark@klomp.org>\n\n\t* jni/gtk-peer/gtkpeer.h (gdk_env): Fix prototype.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTable.java\n\t(getValueAt): New method.\n\t* javax/swing/table/JTableHeader.java\n\t(columnAtPoint): New method.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTextField.java\n\t(actions): New field.\n\t(static): Initalize actions field.\n\t(getActions): New method.\n\n2005-02-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* java/awt/Checkbox.java:\n\t(AccessibleAWTCheckbox): name capitalization corrected\n\tand serialization UID added.\n\t(AccessibleAWTCheckbox.itemStateChanged(java.awt.event.ItemEvent)):\n\tdocumented.\n\t(AccessibleAWTCheckbox.getAccessibleAction()): likewise\n\t(AccessibleAWTCheckbox.getAccessibleValue()): likewise\n\t(AccessibleAWTCheckbox.getAccessibleActionCount()): likewise\n\t(AccessibleAWTCheckbox.getAccessibleActionDescription(int)): likewise\n\t(AccessibleAWTCheckbox.doAccessibleAction(int)): likewise\n\t(AccessibleAWTCheckbox.getCurrentAccessibleValue()): likewise\n\t(AccessibleAWTCheckbox.setCurrentAccessibleValue(int)): likewise\n\t(AccessibleAWTCheckbox.getMinimumAccessibleValue()): likewise\n\t(AccessibleAWTCheckbox.getMaximumAccessibleValue()): likewise\n\t(AccessibleAWTCheckbox.getAccessibleRole()): likewise\n\t(AccessibleAWTCheckbox.getAccessibleStateSet()): implemented and\n\tdocumented\n\t(getAccessibleContext()): name of accessible class corrected\n\n2005-02-15  Sven de Marothy  <sven@physto.se>\n\n\t* java/awt/geom/doc-files/Area-1.png,\n\tjava/awt/geom/doc-files/Ellipse-1.png,\n\tjava/awt/geom/doc-files/GeneralPath-1.png:\n\tNew files.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c (env_union):\n\tUse union to avoid type-punning warning.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/DefaultListSelectionModel.java\n\t(clone): New method.\n\n2005-02-15  Mark Wielaard  <mark@klomp.org>\n\n\tReported by Martin Platter <motse@complang.tuwien.ac.at>\n\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n\t(Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_nativeSetFile):\n\tCorrect method signature of gtkSetFilename.\n\n2005-02-15  Arnaud Vandyck  <avdyk@gnu.org>\n\n\t* javax/swing/text/StringContent.java: New file.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* Makefile.am: Added javax/swing/text/StringContent.java.\n\t* Makefile.in: Regenerated.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/ClasspathToolkit.java:\n\tImport statements reworked.\n\t(imageCache): Made it of type java.util.HashMap.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/imageio/stream/MemoryCacheImageInputStream.java:\n\tReworked import statements.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c:\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c:\n\tRewrite uses of extern variable to be function calls.\n\t* jni/gtk-peer/gtkpeer.h (gdk_env): Change declaration to\n\tfunction, from extern variable.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c\n\t(gdk_env): Remove variable, add new function.\n\t(java_vm): Add new variable.\n\t(Java_gnu_java_awt_peer_gtk_GtkToolkit_gtkInit): Initialize\n\tjava_vm rather than old gdk_env variable.\n\n2005-02-15 David Gilbert <david.gilbert@object-refinery.com>\n\n\t* javax/swing/DefaultListModel.java\n\t(add): fire correct event,\n\t(addElement): corrected interval indices in event,\n\t(clear): corrected upper bound for interval, only fire event if\n\tlist is not empty,\n\t(setSize): fire appropriate event.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* gnu/awt/xlib/XEventLoop.java: Add non-blocking event mode.\n\t* gnu/awt/xlib/XToolkit.java: Likewise.\n\t* gnu/gcj/xlib/XAnyEvent.java: Likewise.\n\t* gnu/gcj/xlib/natXAnyEvent.cc: Likewise.\n\t* gnu/java/awt/ClasspathToolkit.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java: Likewise.\n\t* java/awt/EventQueue.java (getNextEvent):\n\tAdjust event loop to switch to native mode after 100ms.\n\t* javax/swing/Timer.java (drainEvents): Reuse Runnable.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c\n\t(Java_gnu_java_awt_peer_gtk_GtkGenericPeer_dispose):\n\tWake up event thread.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c\n\t(Java_gnu_java_awt_peer_gtk_GtkToolkit_iterateNativeQueue):\n\tAdjust event loop to switch to java mode after 100ms.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* jni.cc (_Jv_JNI_RegisterNatives): Re-add sync, which was\n\taccidentally removed in last change.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c,\n\tgnu/java/awt/peer/gtk/GtkMainThread.java: Removed.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* include/jni.h (_Jv_JNIEnv::bottom_locals): New field.\n\t* include/jvm.h (_Jv_FreeJNIEnv): Declare.\n\t* java/lang/natThread.cc (finalize_native): Call _Jv_FreeJNIEnv.\n\t* jni.cc: Reuse bottom frame between calls, avoid clearing\n\tframe when no local references are made.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/UIDefaults.java (UIDefaults):\n\tFixed typo in javadoc (Thanks to Thomas Zander for reporting)\n\tFixed HTML entity and removed a redundant comma.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/DefaultEditorKit.java\n\t(deinstall): Removed.\n\t(install): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/UIDefaults.java (put): Handle value of null.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/Robot.java,\n\tjava/awt/Scrollbar.java,\n\tjava/awt/print/PrinterJob.java,\n\tjavax/swing/JTable.java,\n\tjavax/swing/text/AbstractDocument.java:\n\tReworked import statements.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JEditorPane.java\n\t(read): Implemented.\n\t(write): Likewise.\n\t* javax/swing/text/DefaultEditorKit.java\n\t(page): Renamed from page_url. Made private.\n\t(editorKit): Renamed from kit. Made private.\n\t(ctype): Removed.\n\t(JEditorPane): All constructors reimplemented.\n\t(getContentType): Use content type from editor kit.\n\t(getEditorKit): Return editorKit.\n\t(getEditorKitForContentType):Likewise.\n\t(getPage): Return page.\n\t(setContentType): Reimplemented.\n\t(setEditorKit): Likewise.\n\t(setEditorKitForContentType): Removed wrong implementation.\n\t(setPage): Implemented.\n\n2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFramePeer.c\n\t(nativeSetIconImageFromData): Re-add native implementation.\n\n2005-02-15  David Gilbert  <david.gilbert@object-refinery.com>\n\n\t* javax/swing/table/DefaultTableModel.java\n\t(DefaultTableModel()): Added Javadocs.\n\t(DefaultTableModel(int, int)): Fixed implementation.\n\t(DefaultTableModel(Vector, int)): Throw IllegalArgumentException\n\tfor negative rowCount.\n\t(DefaultTableModel(Object[], int)): Added Javadocs.\n\t(DefaultTableModel(Vector, Vector)): Likewise.\n\t(DefaultTableModel(Object[][], Object[])): Likewise.\n\t(getDataVector): Likewise.\n\t(setDataVector(Vector, Vector)): Likewise.\n\t(setDataVector(Object[][], Object[])): Likewise.\n\t(newDataAvailable): Likewise.\n\t(newRowsAdded): Likewise.\n\t(rowsRemoved): Likewise.\n\t(setColumnIdentifiers(Vector)): Allow for null argument.\n\t(setColumnIdentifiers(Object[])): Added Javadocs.\n\t(setNumRows): Likewise.\n\t(setRowCount): Adds new rows if necessary, and sends more specific\n\tTableModelEvent.\n\t(setColumnCount): Allow for null columnIdentifiers.\n\t(addColumn(Object)): Added Javadocs.\n\t(addColumn(Object, Vector)): Handle null columnData.\n\t(addColumn(Object, Object[])): Handle columnData with more or less\n\tentries than rows in the table.\n\t(addRow(Vector)): Fire appropriate event.\n\t(addRow(Object[])): Added Javadocs.\n\t(insertRow(int, Vector)): Fire appropriate event.\n\t(insertRow(int, Object[])): Added Javadocs.\n\t(moveRow): Reimplemented.\n\t(removeRow(int)): Fire appropriate event.\n\t(getColumnCount): Allow for null columnIdentifiers.\n\t(getColumnName): Now returns empty string when column index is too\n\tlarge.\n\t(isCellEditable): Added Javadocs.\n\t(getValueAt): Likewise.\n\t(setValueAt): Fire more specific event.\n\t(convertToVector): Added Javadocs.\n\t* javax/swing/table/TableModel.java\n\tAdded Javadocs.\n\n2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* libgcj.spec.in (lib): Add -l-javax-imageio.\n\n2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java: Replace direct\n\treferences to event queue q with method call q().\n\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkScrollbarPeer.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkTextComponentPeer.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkGenericPeer.java: Likewise.\n\t(q): New method.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* gnu/java/awt/ClasspathToolkit.java\n\t(registerImageIOSpis): New method.\n\t* gnu/java/awt/image/ImageDecoder.java\n\t(imageDecoder): New constructor using InputStream\n\t(startProduction): Handle existing InputStream.\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n\t(findSimpleIntegerArray): Make public and static.\n\t(updateBufferedImage): Set each pixel, in a loop.\n\t* gnu/java/awt/peer/gtk/GdkPixbufDecoder.java:\n\tImplement ImageIO SPI classes.\n\t(createBufferedImage): Rewrite in terms of SPI classes.\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java\n\t(registerImageIOSpis): New method.\n\t* java/lang/reflect/natMethod.cc\n\t(_Jv_CallAnyMethodA): Borrow a patch from aph, applied to trunk,\n\twhich lets JNI call interface methods properly.\n\t* javax/imageio/ImageIO.java\n\t(WriterFormatFilter.filter): Fix copy-and-paste typos.\n\t(WriterMIMETypeFilter.filter): Likewise.\n\t(ImageReaderIterator): Pass extension argument through to SPI.\n\t(getReadersByFilter): Likewise.\n\t(getWritersByFilter): Likewise.\n\t(getImageReadersByFormatName): Likewise.\n\t(getImageReadersByMIMEType): Likewise.\n\t(getImageReadersBySuffix): Likewise.\n\t(getImageWritersByFormatName): Likewise.\n\t(getImageWritersByMIMEType): Likewise.\n\t(getImageWritersBySuffix): Likewise.\n\t(read): Implement.\n\t(write): Implement.\n\t* javax/imageio/ImageReader.java\n\t(progressListeners): Initialize.\n\t(setInput): Implement.\n\t* javax/imageio/ImageWriter.java\n\t(progressListeners): Initialize.\n\t(warningListeners): Likewise.\n\t(warningLocales): Likewise.\n\t(setOutput): Test \"isInstance\" rather than class equality.\n\t* javax/imageio/spi/IIORegistry.java\n\t(static): Add reader and writer SPIs.\n\t(IIORegistry): Call ClasspathToolkit.registerImageIOSpis.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c\n\t(query_formats): New function.\n\t(save_to_stream): Likewise.\n\t(Java_gnu_java_awt_peer_gtk_GdkPixbufDecoder_streamImage): Likewise.\n\n2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c (mouseWheel):\n\tCall XFlush.\n\t(keyPress): Likewise.\n\t(keyRelease): Likewise.\n\n2005-02-15  Olga Rodimina  <rodimina@redhat.com>\n\n\t* javax/swing/JTable.java\n\t(columnAtPoint): New Method. Implemented.\n\t(rowAtPoint): Likewise.\n\t(countSelections): Fixed few small count errors.\n\t(getSelections): Likewise.\n\t(setSelectionMode): Set selection mode for column\n\tselection model in addition to row selection model.\n\t* javax/swing/plaf/basic/BasicTableUI.java:\n\t(getRowForPoint): Removed. Replaced by\n\tJTable.rowAtPoint().\n\t(getColForPoint): Removed. Replaced by\n\tJTable.columnAtPoint().\n\t(updateSelection): Updated to call JTable.columnAtPoint\n\tand JTable.rowAtPoint.\n\t* javax/swing/table/DefaultTableColumnModel.java:\n\t(getSelectedColumns): Implemented.\n\t(getSelectedColumnCount): Implemented.\n\n2005-02-15  Graydon Hoare  <graydon@redhat.com>\n\n\t* Makefile.am\n\t(jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c)\n\t(gnu/java/awt/peer/gtk/GtkMainThread.java) : Remove.\n\t* Makefile.in: Regenerate.\n\t* gnu/awt/xlib/XEventLoop.java: Fix to match thread model.\n\t* gnu/awt/xlib/XFramePeer.java: Likewise.\n\t* gnu/awt/xlib/XToolkit.java: Likewise.\n\t* gnu/gcj/xlib/XAnyEvent.java: Likewise.\n\t* gnu/gcj/xlib/natXAnyEvent.cc: Likewise.\n\t* gnu/java/awt/ClasspathToolkit.java\n\t(nativeQueueEmpty)\n\t(wakeNativeQueue)\n\t(iterateNativeQueue): New methods.\n\t* gnu/java/awt/peer/gtk/GtkMainThread.java: Remove.\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java\n\t(gtkInit): Absorb from defunct GtkMainThread class.\n\t(static): Run gtkInit in static startup block.\n\t(GtkToolkit): Remove construction of GtkMainThread and queue.\n\t(getSystemEventQueueImpl): Construct queue when requested.\n\t(nativeQueueEmpty)\n\t(wakeNativeQueue)\n\t(iterateNativeQueue): New methods.\n\t* java/awt/Component.java (removeNotify): Remove race.\n\t* java/awt/EventDispatchThread.java\n\t(EventDispatchThread): Don't start on construction.\n\t(run): Remove isInterrupted check.\n\t* java/awt/EventQueue.java (shutdown): New flag.\n\t(isShutdown): New method checking J2SE shutdown condition.\n\t(setShutdown): New method.\n\t(getNextEvent): Restructure to use ClasspathToolkit.\n\t(postEvent): Activate new thread on posting, wake thread on\n\tpost of possible shutdown condition event.\n\t* java/awt/Frame.java\n\t(Frame): Call noteFrame in all constructors.\n\t(fireDummyEvent): New helper method.\n\t(addNotify): Fire a dummy event to wake up queue.\n\t(removeNotify): Fire a dummy event to wake up queue.\n\t(noteFrame): New method.\n\t(weakFrames): New static field.\n\t(getFrames): Implement.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c:\n\tRemove.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c:\n\tMove everything from GtkMainThread into this file\n\t(Java_gnu_java_awt_peer_gtk_GtkToolkit_iterateNativeQueue)\n\t(Java_gnu_java_awt_peer_gtk_GtkToolkit_wakeNativeQueue)\n\t(Java_gnu_java_awt_peer_gtk_GtkToolkit_nativeQueueEmpty):\n\tNew functions to implement single-threaded queue semantics.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/metal/MetalLookAndFeel.java\n\t(getControlTextFont): New method.\n\t(getMenuTextFont): Likewise.\n\t(getSubTextFont): Likewise.\n\t(getSystemTextFont): Likewise.\n\t(getUserTextFont): Likewise.\n\t(getWindowTitleFont): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/AbstractDocument.java\n\t(documentFilter): New field.\n\t(getDocumentFilter): New method.\n\t(setDocumentFilter): Likewise.\n\t(dump): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTree.java\n\t(DynamicUtilTreeNode.hasChildren): Clarify javadoc.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/AbstractDocument.java\n\t(AbstractElement.getLength): Fixed off-by-one error.\n\t(AbstractElement.children): Made abstract.\n\t(AbstractElement.getAllowsChildren): Likewise.\n\t(AbstractElement.getElement): Likewise.\n\t(AbstractElement.dumpElement): New private method.\n\t(AbstractElement.dump): New method.\n\t(BranchElememt.getName): Fixed implementation.\n\t(BranchElememt.toString): Likewise.\n\t(BranchElememt.getElement): Fixed arguments.\n\t(LeafElement.getName): Fixed implementation.\n\t(LeafElement.toString): Likewise.\n\t* javax/swing/text/GapContent.java\n\t(GapContent): Put default content into buffer.\n\t* javax/swing/text/PlainDocument.java\n\t(reindex): Use empty attribute sets instead of null.\n\t(createDefaultRoot): Reimplemented.\n\t(insertUpdate): Call super method.\n\t(removeUpdate): Likewise.\n\t(getParagraphElement): Implemented.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/ClasspathToolkit.java\n\t(createRobot): Throws java.awt.AWTException.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c:\n\tAdded '__attribute__((unused))' to all unused method arguments.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/DefaultBoundedRangeModel.java\n\t(fireValueChanged): Fixed off-by-one error.\n\n2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* Makefile.am (gtk_c_source_files): Add GdkRobotPeer.c.\n\t(gtk_awt_peer_sources): Add GdkScreenGraphicsDevice.java and\n\tGdkRobotPeer.java.\n\t(lib_gnu_java_awt_peer_gtk_la_CFLAGS): Add X flags.\n\t(lib_gnu_java_awt_peer_gtk_la_LDFLAGS): Add XTest flags.\n\t* gnu/awt/xlib/XToolkit.java (createRobot): New method.\n\t* gnu/java/awt/ClasspathToolkit.java (createRobot): New method.\n\t* gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java\n\t(getDefaultScreenDevice): Implement.\n\t* gnu/java/awt/peer/gtk/GdkRobotPeer.java: New file.\n\t* gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java (createRobot): New method.\n\t* java/awt/Robot.java: Implement.\n\t* java/awt/peer/RobotPeer.java: Rename parameters.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c: New file.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n\t(awt_keycode_to_keysym): Make non-static.\n\t* jni/gtk-peer/gtkpeer.h (AWT_BUTTON1_MASK, AWT_BUTTON2_MASK,\n\tAWT_BUTTON3_MASK): Declare constants.\n\t(awt_keycode_to_keysym): Declare.\n\n\t* Makefile.am (AM_MAKEFLAGS): Set KEYS variable.\n\t* testsuite/libjava.mauve/mauve.exp (test_mauve): If KEYS exists\n\tand is non-empty pass its value to \"make check\".\n\t(test_mauve_sim): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/imageio/IIOParam.java\n\t(setSourceBands): New method.\n\t(setSourceSubsampling): Likewise.\n\t* javax/imageio/ImageReadParam.java\n\t(setDestination): Likewise.\n\t(setDestinationBands): Likewise.\n\t(setSourceProgressivePasses): Likewise.\n\t* javax/imageio/metadata/IIOInvalidTreeException.java\n\t(serialVersionUID): New static field.\n\t* javax/imageio/metadata/IIOMetadataNode.java\n\t(IIOMetadataNode): Don't explicitely implement org.w3c.dom.Node.\n\t(parent): Dont initailize with default value explicitely.\n\t(Object): Likewise.\n\t(removeAttribute): Doesn't throws org.w3c.dom.DOMException.\n\t(removeAttributeNode): Likewise.\n\t(removeAttributeNS): Likewise.\n\t(setAttribute): Likewise.\n\t(setAttributeNode): Likewise.\n\t(setAttributeNodeNS): Likewise.\n\t(setAttributeNS): Likewise.\n\t(appendChild): Likewise.\n\t(getNodeValue): Likewise.\n\t(insertBefore): Likewise.\n\t(removeChild): Likewise.\n\t(replaceChild): Likewise.\n\t(setPrefix): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/LookAndFeel.java\n\t(getDesktopPropertyValue): New method.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTree.java\n\t(hasChildren): New instance field.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JComponent.java\n\t(getToolTipText): New method.\n\t(getTitledBorderText): Likewise.\n\t(getAccessibleKeyBinding): Likewise.\n\t(getVerifyInputWhenFocusTarget): Likewise.\n\t(setVerifyInputWhenFocusTarget): Likewise.\n\t(verifyInputWhenFocusTarget): New instance field.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/DefaultListSelectionModel.java\n\t(fireValueChanged): New method.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/DefaultBoundedRangeModel.java:\n\tFixed javadocs all over.\n\t(fireStateChanged): Simplified.\n\t* javax/swing/BoundedRangeModel.java:\n\tReformatted.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JRootPane.java\n\t(setMenuBar): Added @deprecated tag.\n\t(getMenuBar): Likewise.\n\t* javax/swing/JTable.java\n\t(sizeColumnsToFit): Likewise.\n\n2005-02-15  Paul Jenner  <psj.home@ntlworld.com>\n\n\t* javax/swing/ImageIcon.java (setImage): Implemented.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTable.java:\n\tRemoved unused imports.\n\n2005-02-15  Olga Rodimina  <rodimina@redhat.com>\n\n\t(prepareRenderer): Get column's index in dataModel instead\n\tof column's view index.\n\t(getColumnCount): return count of the columns in ColumnModel,\n\tnot in dataModel.\n\t(removeColumn): Implemented.\n\t(moveColumm): Likewise.\n\t(setRowHeight): throw IllegalArgumentException if height is\n\tless then 1.\n\t* javax/swing/table/DefaultTableColumnModel.java: Add javadocs.\n\t(DefaultTableColumnModel):Add call to createSelectionModel().\n\t(addColumn): Fire columnAdded event to registered listeners.\n\t(removeColumn): Fire columnRemoved event to registered listeners.\n\t(moveColumn): Fire columnMoved event to registered listeners.\n\t(setColumnMargin): Fire ColumnMarginChanged event to registered listeners.\n\t(getColumnIndex): Changed parameter name.\n\t(setColumnSelectionAllowed): Likewise.\n\t(fireColumnAdded): Implemented.\n\t(fireColumnRemoved): Likewise.\n\t(fireColumnMoved): Likewise.\n\t(fireColumnMarginChanged): Likewise.\n\t(getListeners): Changed parameter name.\n\t(propertyChange): Implemented.\n\t(valueChanged): Changed parameter name.\n\t(createSelectionModel): Implemented.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java:\n\tExplicitely import used classes.\n\t(getLocalGraphicsEnvironment): Simplify.\n\t* java/awt/Window.java (Window):\n\tEnable code to get the default GraphicsConfiguration.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/metal/DefaultMetalTheme.java\n\t(CONTROL_TEXT_FONT): New static field.\n\t(MENU_TEXT_FONT): Likewise.\n\t(SUB_TEXT_FONT): Likewise.\n\t(SYSTEM_TEXT_FONT): Likewise.\n\t(USER_TEXT_FONT): Likewise.\n\t(WINDOW_TITLE_FONT): Likewise.\n\t(getControlTextFont): New method.\n\t(getMenuTextFont): Likewise.\n\t(getSubTextFont): Likewise.\n\t(getSystemTextFont): Likewise.\n\t(getUserTextFont): Likewise.\n\t(getWindowTitleFont): Likewise.\n\t* javax/swing/plaf/metal/MetalTheme.java\n\t(BLACK): Initialize with Color.BLACK.\n\t(WHITE): Initialize with Color.WHITE.\n\t(getInactiveControlTextColor): Return getControlDisabled().\n\t(getMenuDisabledForeground): Return getSecondary3().\n\t(getControlTextFont): New abstract method.\n\t(getMenuTextFont): Likewise.\n\t(getSubTextFont): Likewise.\n\t(getSystemTextFont): Likewise.\n\t(getUserTextFont): Likewise.\n\t(getWindowTitleFont): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JFormattedTextField.java\n\t(getFocusLostBehavior): Fixed typo in method name.\n\t(setFocusLostBehavior): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/TransferHandler.java:\n\tReworked import statements.\n\n2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Button.java,\n\tjava/awt/Canvas.java,\n\tjava/awt/Checkbox.java,\n\tjava/awt/CheckboxMenuItem.java,\n\tjava/awt/Choice.java,\n\tjava/awt/Dialog.java,\n\tjava/awt/Frame.java,\n\tjava/awt/Label.java,\n\tjava/awt/List.java,\n\tjava/awt/Menu.java,\n\tjava/awt/MenuBar.java,\n\tjava/awt/MenuItem.java,\n\tjava/awt/PopupMenu.java,\n\tjava/awt/ScrollPane.java,\n\tjava/awt/Scrollbar.java,\n\tjava/awt/TextArea.java,\n\tjava/awt/Window.java (getAccessibleContext): Clean up comments.\n\tReformat.\n\t* java/awt/Button.java,\n\tjava/awt/Checkbox.java,\n\tjava/awt/Choice.java,\n\tjava/awt/Menu.java,\n\tjava/awt/PopupMenu.java,\n\tjava/awt/TextArea.java (getAccessibleContext): Only create new\n\taccessible once.\n\t* java/awt/TextComponent.java (getAccessibleContext): Implement.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/Button.java,\n\tjavax/swing/JApplet.java,\n\tjavax/swing/JFormattedTextField.java,\n\tjavax/swing/JWindow.java,\n\tjavax/swing/JTree.java,\n\tjavax/swing/plaf/basic/BasicEditorPaneUI.java,\n\tjavax/swing/plaf/basic/BasicTextPaneUI.java,\n\tjavax/swing/plaf/basic/BasicTreeUI.java:\n\tReworked import statements.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* Makefile.am: Put javax.imageio into its own library and link it\n\tagainst lib-org-w3c-dom.la to fix bootstrapping.\n\t* Makefile.in: Regenerated.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/TextAction.java\n\t(getTextComponent): Simplified. Added Javadoc.\n\t(augmentList): Implemented. Added Javadoc.\n\t(getFocusedComponent): Added javadoc.\n\n2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Scrollbar.java (AccessibleAWTScrollbar,\n\tgetAccessibleContext): Implement.\n\t* java/awt/ScrollPane.java (AccessibleAWTScrollPane,\n\tgetAccessibleContext): Implement.\n\n2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Dialog.java (AccessibleAWTFrame, getAccessibleContext):\n\tImplement.\n\t* java/awt/Frame.java (AccessibleAWTFrame, getAccessibleContext):\n\tImplement.\n\t* java/awt/Window.java (getAccessibleContext): Fix comment.\n\tRemove extra import.\n\n2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Window.java (AccessibleAWTWindow): Implement.\n\t(isActive, isFocused, getAccessibleContext): Implement.\n\n2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/MenuItem.java (getAccessibleContext): Implement.\n\t* java/awt/MenuComponent.java (accessibleContext): Make package\n\tvisible.\n\t* java/awt/CheckboxMenuItem.java (getAccessibleContext,\n\tAccessibleAWTCheckboxMenuItem): Implement.\n\n2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/List.java: Implement AccessibleAWTList,\n\tAccessibleAWTListChild.\n\n2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Choice.java: Add implements declaration for\n\tAccessible.\n\n2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* javax/imageio/metadata/IIOInvalidTreeException.java: Use Node\n\tinstead of Object.\n\n2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* javax/imageio/metadata/IIOMetadataNode.java: Add Node to\n\timplemented interface list.\n\n2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* javax/imageio/metadata/IIOMetadataNode.java: Implement.\n\t* javax/imageio/metadata/IIOAttr.java: New class.\n\t* javax/imageio/metadata/IIONamedNodeMap.java: New class.\n\t* javax/imageio/metadata/IIONodeList.java: New class.\n\t* Makefile.am: Added new files.\n\t* Makefile.in: Regenerated.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/AbstractAction.java,\n\tjavax/swing/AbstractCellEditor.java,\n\tjavax/swing/AbstractListModel.java,\n\tjavax/swing/DefaultBoundedRangeModel.java,\n\tjavax/swing/DefaultButtonModel.java,\n\tjavax/swing/DefaultCellEditor.java,\n\tjavax/swing/DefaultComboBoxModel.java,\n\tjavax/swing/DefaultDesktopManager.java,\n\tjavax/swing/JMenu.java,\n\tjavax/swing/JSlider.java,\n\tjavax/swing/KeyStroke.java,\n\tjavax/swing/OverlayLayout.java,\n\tjavax/swing/ScrollPaneLayout.java,\n\tjavax/swing/SizeRequirements.java,\n\tjavax/swing/ViewportLayout.java:\n\tMade serialVersionUID private.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java:\n\tReformatted.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java: More reformatting.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java: Reformatted.\n\n2005-02-15  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* java/awt/EventDispatchThread.java,\n\tjava/awt/Toolkit.java:\n\tDon't catch java.lang.ThreadDeath.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/PasswordView.java\n\t(drawEchoCharacter): Added javadoc.\n\t(drawSelectedText): Likewise.\n\t(drawUnselectedText): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JRootPane.java\n\t(windowDecorationStyle): New field.\n\t(setMenuBar): New method.\n\t(getMenuBar): Likewise.\n\t(getWindowDecorationStyle): Likewise.\n\t(setWindowDecorationStyle): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/DefaultListSelectionModel.java\n\t(leadAnchorNotificationEnabled): Made protected.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/InternalFrameFocusTraversalPolicy.java: New file.\n\t* Makefile.am: Added InternalFrameFocusTraversalPolicy.java.\n\t* Makefile.in: Regenerated.\n\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JFormattedTextField.java: Implemented.\n\t* javax/swing/JWindow.java\n\t(JWindow): New constructors.\n\t(initWindow): Renamed from initFrame.\n\t* javax/swing/UIDefaults.java\n\t(ActiveValue): Made interface static.\n\t(LazyValue): Likewise.\n\t* javax/swing/plaf/basic/BasicInternalFrameTitlePane.java\n\t(TitlePaneLayout.TitlePaneLayout): New constructor.\n\t* javax/swing/plaf/basic/BasicSliderUI.java\n\t(ChangeHandler): Made public.\n\t(FocusHandler): Likewise.\n\t(PropertyChangeHandler): Likewise.\n\t(ScrollListener): Likewise.\n\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java\n\t(FocusHandler): Likewise.\n\t(MouseHandler): Likewise.\n\t* javax/swing/plaf/basic/BasicTextPaneUI.java\n\t(BasicTextPaneUI): Extend BasicEditorPaneUI.\n\t* javax/swing/plaf/basic/BasicToolBarUI.java\n\t(BasicToolBarUI): Simplified. Reworked javadoc.\n\t(canDock): Simplified. Make public.\n\t(DockingListener): Made public.\n\t* javax/swing/text/JTextComponent.java\n\t(navigationFilter): New field.\n\t(getNavigationFilter): New method.\n\t(setNavigationFilter): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/metal/MetalTheme.java\n\t(getControlTextColor): Return getControlInfo().\n\t(getHighlightedTextColor): Return getControlTextColor().\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicButtonListener.java\n\t(BasicButtonListener): New constructor.\n\t* javax/swing/plaf/basic/BasicButtonUI.java\n\t(createButtonListener): Usw new BasicButtonListener constructor.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/imageio/event/package.html,\n\tjavax/imageio/metadata/package.html: New files.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/image/MemoryImageSource.java: Reformatted.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/tree/TreeCellEditor.java: Refomatted.\n\n2005-02-15  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* java/awt/color/ICC_Profile.java\n\t(finalize): Removed pointless field assignments.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/basic/BasicEditorPaneUI.java: New file.\n\t* Makefile.am: Added javax/swing/plaf/basic/BasicEditorPaneUI.java.\n\t* Makefile.in: Regenerated.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/DefaultStyledDocument.java: New file.\n\t* Makefile.am: Added javax/swing/text/DefaultStyledDocument.java.\n\t* Makefile.in: Regenerated.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JFileChooser.java\n\t(showDialog): Return CANCEL_OPTION for now.\n\t(showOpenDialog): Likewise.\n\t(showSaveDialog): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JApplet.java\n\t(HIDE_ON_CLOSE): Removed.\n\t(EXIT_ON_CLOSE): Likewise.\n\t(DISPOSE_ON_CLOSE): Likewise.\n\t(DO_NOTHING_ON_CLOSE): Likewise.\n\t(close_action): Likewise.\n\t(getDefaultCloseOperation): Likewise.\n\t(setDefaultCloseOperation): Likewise.\n\t(processWindowEvent): Likewise.\n\t(getPreferredSize): Simplified.\n\t* javax/swing/JInternalFrame.java\n\t(setDefaultCloseOperation): Fixed throwing exception on wrong argument\n\tvalue.\n\t* javax/swing/JWindow.java\n\t(HIDE_ON_CLOSE): Removed.\n\t(EXIT_ON_CLOSE): Likewise.\n\t(DISPOSE_ON_CLOSE): Likewise.\n\t(DO_NOTHING_ON_CLOSE): Likewise.\n\t(close_action): Likewise.\n\t(processKeyEvent): Likewise.\n\t(setDefaultCloseOperation): Likewise.\n\t(getPreferredSize): Simplified.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTextField.java\n\t(getPreferredSize): Re-implemented.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JLabel.java\n\t(setDisplayedMnemonic): Use only upper case characters.\n\t(setDisplayedMnemonicIndex): Handle index == -1 and fire\n\tPropertyChangeEvent after property got set to the new index.\n\n2005-02-15  Robert Schuster <thebohemian@gmx.net>\n\n\t* javax/swing/JComboBox.java:\n\t(JComboBox): Removed selection of the\n\tfirst item in the model.\n\n2005-02-15  Robert Schuster <thebohemian@gmx.net>\n\n\t* javax/swing/JComboBox.java\n\tadded support for no item being selected\n\t(JComboBox): select first or nothing depending on element count\n\t(setModel): cleaned up unneeded \"this.\" usage, added more\n\tdocs, made exception behavior match that of the JDK\n\t(setLighWeightPopupEnabled): removed unneeded \"this.\" usage\n\t(setEditable): dito\n\t(setMaximumRowCount): dito\n\t(setRenderer): dito\n\t(setPrototypeDisplayValue): dito\n\t(getSelectedItem): simplified, added more user doc\n\t(setSelectedIndex): corrected exception behavior, added more user doc\n\t(getSelectedIndex): fixed hardcoded dependency on DefaultComboBoxModel,\n\tadded performance warning to user doc\n\t(addItem): fixed exception behavior, added user doc\n\t(insertItemAt): dito\n\t(removeItem): dito\n\t(removeItemAt): dito\n\t(removeAll): fixed exception behavior, added user doc, added support\n\tfor model not being instance of DefaultComboBoxModel\n\t(getSelectedItemObjects): simplified\n\t(getItemCount): fixed dependency on DefaultComboBoxModel\n\t(getItemAt): fixed dependency on MutableComboBoxModel\n\t* javax/swing/DefaultComboBoxModel.java:\n\t(setSelectedItem): updates selected item only if new\n\tvalue is null or known (match JDK behavior)\n\t* javax/swing/plaf/basic/BasicComboBoxUI.java:\n\t(paintCurrentValue): renders \"\" if no item is selected\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/plaf/metal/MetalTheme.java,\n\tjavax/swing/plaf/metal/DefaultMetalTheme.java:\n\tNew files.\n\t* javax/swing/plaf/metal/MetalLookAndFeel.java\n\t* Makefile.am: Added the new files.\n\t* Makefile.in: Regenerated.\n\n2005-02-15  Olga Rodimina  <rodimina@redhat.com>\n\n\t* javax/swing/JTable.java\n\t(editorComp): New field.\n\t(JTable): Initialize local variables and call updateUI\n\t(selectionBackground): Make protected.\n\t(selectionForeground): Likewise.\n\t(initializeLocalVars): Create default editors and renderers,\n\tinitialize editingColumn, editingRow variables.\n\t(createDefaultEditors): New Method.\n\t(createDefaultRenderers): Likewise.\n\t(createDefaultListSelectionModel): Removed\n\t(createDefaultSelectionModel): New Method.\n\t(createDefaultTableHeader): Likewise\n\t(removeColumn): Likewise.\n\t(getEditingColumn): Likewise.\n\t(setEditingColumn): Likewise.\n\t(getEditingRow): Likewise.\n\t(setEditingRow): Likewise.\n\t(getEditorComponent): Likewise.\n\t(isEditing): Likewise.\n\t(setDefaultEditor): Likewise.\n\t(addColumnSelectionInterval): Likewise.\n\t(addRowSelectionInterval): Likewise.\n\t(setColumnSelectionInterval): Likewise.\n\t(setRowSelectionInterval): Likewise.\n\t(removeColumnSelectionInterval): Likewise.\n\t(removeRowSelectionInterval): Likewise.\n \t(isColumnSelected): Likewise.\n\t(isRowSelected): Likewise.\n\t(isCellSelected): Likewise.\n\t(selectAll): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTable.java\n\t(addColumn): New method.\n\t(getColumnClass): Likewise.\n\t(getColumnName): Likewise.\n\n2005-02-15  Paul Jenner  <psj.home@ntlworld.com>\n\n\t* javax/swing/TransferHandler.java\n\t(createTransferable): Made protected.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTable.java,\n\tjavax/swing/plaf/basic/BasicTableHeaderUI.java,\n\tjavax/swing/plaf/basic/BasicTableUI.java:\n\tUse fixed get/setIntercellSpacing() methods.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTable.java\n\t(getIntercellSpacing): Fixed typo in method name.\n\t(setIntercellSpacing): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/JTextComponent.java\n\t(focusAccelerator): New variable.\n\t(getFocusAccelerator): New method.\n\t(setFocusAccelerator): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JComponent.java\n\t(setTransferHandler): Made public. Fire property change event.\n\t* javax/swing/TransferHandler.java: Implemented.\n\t* javax/swing/text/JTextComponent.java\n\t(DefaultTransferHandler): New inner class.\n\t(defaultTransferHandler): New variable.\n\t(copy): New method.\n\t(cut): Likewise.\n\t(paste): Likewise.\n\t(doTransferAction): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JTree.java\n\t(collapsePath): New method.\n\t(collapseRow): Likewise.\n\t(expandPath): Likewise.\n\t(expandRow): Likewise.\n\t(checkExpandParents): Likewise.\n\t(doExpandParents): Likewise.\n\t(setExpandedState): Likewise.\n\t(makeVisible): Likewise.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JPasswordField.java: Updated javadocs.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JLayeredPane.java\n\t(getLayer): Fixed return type, made public.\n\t(getPosition): Use new getLayer().\n\t(SetPosition): Likewise.\n\t(getIndexOf): Likewise.\n\t(remove): Likewise.\n\t* javax/swing/JInternalFrame.java\n\t(getLayer): Use new JLayeredPane.getLayer().\n\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/table/TableColumn.java: Added/fixed javadocs over all.\n\t(setHeaderValue): Simplified. Do nothing when old value == new value.\n\n2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GdkGraphics.java (setClip): Protect\n\tagainst null clip region.\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (create): Call\n\tgtkWindowSetResizable.\n\t(postConfigureEvent): Only revalidate if frame size has changed.\n\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java (postConfigureEvent):\n\tOnly revalidate if frame size has changed.\n\t* java/awt/Component.java (reshape): Only repaint and post\n\tcomponent events if component is showing.\n\t* java/awt/Container.java (addImpl): Only post container event if\n\tcontainer is showing.\n\t(remove): Likewise.\n\t* java/awt/Window.java (setLocationRelativeTo): Implement.\n\t(setBoundsCallback): Only post component events if component is\n\tshowing.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c (clearRect):\n\tProtect against null graphics structure.  Flush gdk event queue.\n\n2005-02-15  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/imageio/ImageReader.java,\n\tjavax/imageio/ImageTranscoder.java,\n\tjavax/imageio/ImageWriter.java,\n\tjavax/imageio/spi/ImageInputStreamSpi.java,\n\tjavax/imageio/spi/ImageOutputStreamSpi.java,\n\tjavax/imageio/spi/ServiceRegistry.java,\n\tjavax/imageio/stream/ImageInputStream.java,\n\tjavax/imageio/stream/ImageOutputStream.java: Updated.\n\t* javax/imageio/IIOException.java,\n\tjavax/imageio/IIOImage.java,\n\tjavax/imageio/IIOParam.java,\n\tjavax/imageio/IIOParamController.java,\n\tjavax/imageio/ImageIO.java,\n\tjavax/imageio/ImageReadParam.java,\n\tjavax/imageio/ImageTypeSpecifier.java,\n\tjavax/imageio/ImageWriteParam.java,\n\tjavax/imageio/spi/IIORegistry.java,\n\tjavax/imageio/spi/ImageReaderSpi.java,\n\tjavax/imageio/spi/ImageWriterSpi.java,\n\tjavax/imageio/stream/FileCacheImageInputStream.java,\n\tjavax/imageio/stream/FileCacheImageOutputStream.java,\n\tjavax/imageio/stream/FileImageInputStream.java,\n\tjavax/imageio/stream/FileImageOutputStream.java,\n\tjavax/imageio/stream/ImageInputStreamImpl.java,\n\tjavax/imageio/stream/ImageOutputStreamImpl.java,\n\tjavax/imageio/stream/MemoryCacheImageInputStream.java,\n\tjavax/imageio/stream/MemoryCacheImageOutputStream.java,\n\tjavax/imageio/event/IIOReadProgressListener.java,\n\tjavax/imageio/event/IIOReadUpdateListener.java,\n\tjavax/imageio/event/IIOReadWarningListener.java,\n\tjavax/imageio/event/IIOWriteProgressListener.ja\u2026", "tree": {"sha": "a4155758493cddf09d676b0715a4317059dda9dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4155758493cddf09d676b0715a4317059dda9dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d933abbe01b2c3d85293ede4da34cdd7df47f378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d933abbe01b2c3d85293ede4da34cdd7df47f378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d933abbe01b2c3d85293ede4da34cdd7df47f378", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d933abbe01b2c3d85293ede4da34cdd7df47f378/comments", "author": null, "committer": null, "parents": [{"sha": "7526f35528640700e63d664cdffbece6591131dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7526f35528640700e63d664cdffbece6591131dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7526f35528640700e63d664cdffbece6591131dd"}], "stats": {"total": 25433, "additions": 16390, "deletions": 9043}, "files": [{"sha": "03571dce12beaa9600a7a9cc3e0631c9fb8662bf", "filename": "libjava/ChangeLog", "status": "modified", "additions": 1998, "deletions": 0, "changes": 1998, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,3 +1,2001 @@\n+2005-02-15  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/awt/BasicStroke.java (hashCode): Check for null dash.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GtkArg.java,\n+\tgnu/java/awt/peer/gtk/GtkArgList.java:\n+\tRemoved.\n+\n+2005-02-15  Craig Black  <craig.black@aonix.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkCheckboxMenuItem.java\n+\t(postMenuActionEvent): Implement to notify ItemListeners.\n+\t* java/awt/CheckboxMenuItem.java\n+\t(dispatchEventImpl): Update state on ItemEvent.\n+\t* java/awt/MenuItem.java\n+\t(processActionEvent): Retarget event source.\n+\n+2005-02-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* gnu/java/awt/color/ClutProfileConverter.java,\n+\tgnu/java/awt/peer/ClasspathTextLayoutPeer.java,\n+\tgnu/java/awt/peer/gtk/GdkFontPeer.java,\n+\tgnu/java/awt/peer/gtk/GdkGlyphVector.java,\n+\tgnu/java/awt/peer/gtk/GdkGraphics2D.java,\n+\tgnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java,\n+\tgnu/java/awt/peer/gtk/GdkPixbufDecoder.java,\n+\tgnu/java/awt/peer/gtk/GdkRobotPeer.java,\n+\tgnu/java/awt/peer/gtk/GdkTextLayout.java,\n+\tgnu/java/awt/peer/gtk/GtkButtonPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkCheckboxPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkChoicePeer.java,\n+\tgnu/java/awt/peer/gtk/GtkComponentPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkContainerPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkDialogPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkFileDialogPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkFontPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkFramePeer.java,\n+\tgnu/java/awt/peer/gtk/GtkLabelPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkMenuComponentPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkMenuItemPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkScrollPanePeer.java,\n+\tgnu/java/awt/peer/gtk/GtkTextComponentPeer.java,\n+\tgnu/java/awt/peer/gtk/GtkToolkit.java,\n+\tgnu/java/awt/peer/gtk/GtkWindowPeer.java,\n+\tjavax/swing/JPopupMenu.java,\n+\tjavax/swing/JSpinner.java,\n+\tjavax/swing/SortingFocusTraversalPolicy.java,\n+\tjavax/swing/SwingUtilities.java,\n+\tjavax/swing/plaf/basic/BasicComboBoxEditor.java,\n+\tjavax/swing/plaf/basic/BasicComboBoxRenderer.java,\n+\tjavax/swing/tree/DefaultMutableTreeNode.java:\n+\tRemoved unused imports and expanded starred\n+\timports.\n+\n+2005-02-15  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/awt/AWTKeyStroke.java (getAWTKeyStroke(String)): Throw\n+\tIllegalArgumentException when the given String is null.\n+\n+\t* javax/swing/KeyStroke.java (getKeyStroke(String)): Return null\n+\twhen given keystoke sequence cannot be parsed.\n+\n+\t* javax/swing/JRootPane.java (setJMenuBar): Remove current menubar\n+\tif one is installed. Only install the given menubar is not null.\n+\n+\t* javax/swing/JViewport.java (getViewSize): Return an empty\n+\tDimension when the view isn't set or preferred component size when\n+\tno viewSize is set.\n+\n+\t* javax/swing/ViewportLayout.java (preferredLayoutSize): Return an\n+\tempty Dimension when there is no view set.\n+\t(minimumLayoutSize): Likewise.\n+\t(layoutContainer): Don't try to layout when there is no view.\n+\n+2005-02-15  Anthony Green  <green@redhat.com>\n+\n+\t* jni/gtk-peer/gtk_jawt.c (classpath_jawt_get_drawable,\n+\tclasspath_jawt_lock, classpath_jawt_unlock): New functions.\n+\t* jawt.c (_Jv_JAWT_Lock, _Jv_JAWT_Unlock): New functions.\n+\t(_Jv_GetDrawingSurface): Set visualID.\n+\t(_Jv_FreeDrawingSurfaceInfo): Clear visualID.\n+\t(JAWT_GetAWT): Set Lock and Unlock.\n+\t* include/jawt_md.h (struct _JAWT_X11DrawingSurfaceInfo): Add visualID.\n+\t* include/jawt.h (JAWT_VERSION_1_4, JAWT_LOCK_ERROR,\n+\tJAWT_LOCK_CLIP_CHANGED, JAWT_LOCK_BOUNDS_CHANGED,\n+\tJAWT_LOCK_SURFACE_CHANGED): New macros.\n+\t(struct _JAWT): Add Lock and Unlock.\n+\n+2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* jawt.c: New file.\n+\t* include/jawt.h: Likewise.\n+\t* include/jawt_md.h: Likewise.\n+\t* include/Makefile.am (tool_include__HEADERS): Add jawt.h and\n+\tjawt_md.h files.\n+\t* jni/classpath/classpath_jawt.h: Likewise.\n+\t* jni/gtk-peer/gtk_jawt.c: Likewise.\n+\t* Makefile.am: Build libjawt.so.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java:\n+\tMerged file header with classpath CVS head.\n+\t* gnu/java/awt/peer/gtk/GdkPixbufDecoder.java:\n+\tMerged code formatting with classpath CVS head.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c:\n+\tRemoved debug code.\n+\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_getGlyphVector):\n+\tHandle special JNI strings with 2 '\\0' at the end.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c:\n+\tMerged file header with classpath CVS head.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c:\n+\tMerged code formatting with classpath CVS head.\n+\n+2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c (create):\n+\tUse GTK's built-in file system backend.  Use GTK_RESPONSE_ACCEPT.\n+\t(handle_response): Use GTK_RESPONSE_ACCEPT.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* Makefile.am: Fix library build breakage.\n+\t* Makefile.in: Regenerate.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTabbedPane.java\n+\t(Page.setDisplayedMnemonicIndex): Handle empty menmonic.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/tree/DefaultMutableTreeNode.java:\n+\tReworked Javadocs all over.\n+\t(getPathToRoot): Fixed direction of result array initialization.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c:\n+\t Fix includes for cairo 0.3.0 snappshot.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c:\n+\tMerged file header from classpath CVS HEAD.\n+\n+2005-02-15  Craig Black  <craig.black@aonix.com>\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n+\t(copyState): Pass a JNI global reference to signal handler.\n+\t(realize_cb): Use and free JNI global reference.\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n+\t(create): Pass a JNI global reference to signal handler.\n+\t(selection_changed): Match declaration.\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c\n+\t(dispose): Do not remove entries from state tables until after widget is\n+\tdestroyed.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/Container.javai (paramString):\n+\tIf layoutMgr is null just return result of super.paramString().\n+\t* java/awt/Scrollbar.java: Reformatted.\n+\t* java/awt/im/InputContext.java (static):\n+\tRemoved redundant initializations.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/ImageIcon.java,\n+\tjavax/swing/UIManager.java,\n+\tjavax/swing/text/EditorKit.java,\n+\tjavax/swing/text/Segment.java:\n+\tMore whitespace cleanups.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/EmbeddedWindow.java,\n+\tgnu/java/awt/image/ImageDecoder.java,\n+\tgnu/java/awt/peer/gtk/GtkFileDialogPeer.java,\n+\tjava/awt/DefaultKeyboardFocusManager.java,\n+\tjava/awt/Frame.java,\n+\tjava/awt/image/RGBImageFilter.java,\n+\tjavax/swing/AbstractButton.java,\n+\tjavax/swing/ActionMap.java,\n+\tjavax/swing/ComponentInputMap.java,\n+\tjavax/swing/DefaultDesktopManager.java,\n+\tjavax/swing/ImageIcon.java,\n+\tjavax/swing/InputMap.java,\n+\tjavax/swing/JButton.java,\n+\tjavax/swing/JCheckBox.java,\n+\tjavax/swing/JCheckBoxMenuItem.java,\n+\tjavax/swing/JEditorPane.java,\n+\tjavax/swing/JMenu.java,\n+\tjavax/swing/JMenuItem.java,\n+\tjavax/swing/JOptionPane.java,\n+\tjavax/swing/JRootPane.java,\n+\tjavax/swing/JTable.java,\n+\tjavax/swing/MenuSelectionManager.java,\n+\tjavax/swing/RepaintManager.java,\n+\tjavax/swing/ScrollPaneLayout.java,\n+\tjavax/swing/SortingFocusTraversalPolicy.java,\n+\tjavax/swing/UIManager.java,\n+\tjavax/swing/ViewportLayout.java,\n+\tjavax/swing/plaf/basic/BasicCheckBoxMenuItemUI.java,\n+\tjavax/swing/plaf/basic/BasicInternalFrameUI.java,\n+\tjavax/swing/plaf/basic/BasicLabelUI.java,\n+\tjavax/swing/plaf/basic/BasicListUI.java,\n+\tjavax/swing/plaf/basic/BasicMenuItemUI.java,\n+\tjavax/swing/plaf/basic/BasicMenuUI.java,\n+\tjavax/swing/plaf/basic/BasicOptionPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicRadioButtonMenuItemUI.java,\n+\tjavax/swing/plaf/basic/BasicRootPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicScrollPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicSplitPaneDivider.java,\n+\tjavax/swing/plaf/basic/BasicTextUI.java,\n+\tjavax/swing/table/TableColumnModel.java,\n+\tjavax/swing/text/AbstractDocument.java,\n+\tjavax/swing/text/EditorKit.java,\n+\tjavax/swing/text/Position.java,\n+\tjavax/swing/text/Segment.java,\n+\tjavax/swing/text/StyledEditorKit.java,\n+\tjavax/swing/text/ViewFactory.java:\n+\tCleanup whitespace differences to classpath CVS HEAD.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GdkPixbufDecoder.java:\n+\t(finalize): Call finish from here.\n+\t(produce): Not from here.\n+\t* Makefile.am (gtk_c_source_files): \n+\tRemove jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c.\n+\t* Makefile.in: Regenerate.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java\n+\t(cairoSetFont):\n+\t(cairoDrawGdkTextLayout):\n+\t(cairoDrawString): \n+\t(getPeerTextMetrics):\n+\t(getPeerFontMetrics): Remove.\n+\t(setFont): Don't call cairoSetFont.\n+\t(cairoDrawGlyphVector): Accept font peer argument.\n+\t(drawGlyphVector): Pass font peer to cairoDrawGlyphVector.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\t\n+\t(ensure_metrics_cairo):\n+\t(gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetFont):\n+\t(gnu_java_awt_peer_gtk_GdkGraphics2D_cairoDrawString):\n+\t(gnu_java_awt_peer_gtk_GdkGraphics2D_getPeerFontMetrics):\n+\t(gnu_java_awt_peer_gtk_GdkGraphics2D_getPeerTextMetrics):\n+\t(metrics_cairo):\n+\t(metrics_surface): Remove.\n+\t(gnu_java_awt_peer_gtk_GdkGraphics2D_cairoDrawGlyphVector):\n+\tPass and install font peer.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* Makefile.am: Create \"split library\" structure.\n+\t* Makefile.in: Regenerate.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c:\n+\tRelease GDK lock during upcalls.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c: Remove.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_getGlyphVector):\n+\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_getFontMetrics): \n+\t(Java_gnu_java_awt_peer_gtk_GdkFontPeer_getTextMetrics): New methods.\t\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c: Remove.\t\n+\t* gnu/java/awt/peer/gtk/GdkFontPeer.java\n+\t(getGlyphVector):\n+\t(getFontMetrics):\n+\t(getTextMetrics): New native methods.\n+\t* gnu/java/awt/peer/gtk/GdkFontMetrics.java: Remove native parts.\n+\t* gnu/java/awt/peer/gtk/GdkGlyphVector.java: Likewise.\n+\t* Makefile.am: Remove native entries for GdkFontMetrics, GdkGlyphVector.\n+\t* Makefile.in: Regenerate.\n+\n+2005-02-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* javax/swing/SwingUtilities.java:\n+\t(getAccessibleAt(java.awt.Component, java.awt.Point)):\n+\tImplemented and documented.\n+\t(getAccessibleChild(java.awt.Component, int)): Likewise.\n+\t(getAccessibleChildrenCount(java.awt.Component)): Likewise.\n+\t(getAccessibleIndexInParent(java.awt.Component)): Likewise.\n+\t(getAccessibleStateSet(java.awt.Component)): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/SwingUtilities.java\n+\t(getFontMetrics): Removed.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/Container.java\n+\t(paramString): Implemented.\n+\t* javax/swing/AbstractButton.java\n+\t(paramString): Implemented.\n+\t* javax/swing/JComponent.java\n+\t(paramString): Implemented.\n+\t* javax/swing/JMenu.java\n+\t(paramString): Implemented.\n+\t* javax/swing/JMenuBar.java\n+\t(paramString): Implemented.\n+\t* javax/swing/JMenuItem.java\n+\t(paramString): Implemented.\n+\t* javax/swing/JPopupMenu.java\n+\t(paramString): Implemented.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JMenu.java\n+\t(uiClassID): Removed.\n+\t(JMenu): Set invoker on popup menu.\n+\t(getUIClassID): Return id directly.\n+\t(getItemCount): Simply return getMenuComponentCount().\n+\tFixed javadoc.\n+\t(isTopLevelMenu): Simplified.\n+\t* javax/swing/JMenuItem.java\n+\t(uiClassID): Removed.\n+\t(getUIClassID): Return id directly.\n+\t* javax/swing/JPopupMenu.java\n+\t(uiClassID): Removed.\n+\t(JPopupMenu): Always initialize correctly.\n+\t(getSubElements): Only return components implementing MenuElement\n+\tinterface.\n+\t(HeavyWeightPopup.hide): Removed.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/image/ReplicateScaleFilter.java\n+\t(replicatePixels): Made private.\n+\t* javax/swing/colorchooser/DefaultRGBChooserPanel.java\n+\t(DefaultRGBChooserPanel): Made package private.\n+\t* javax/swing/colorchooser/DefaultSwatchChooserPanel.java\n+\t(RecentSwatchPanel): Likewise.\n+\t* javax/swing/event/MouseInputAdapter.java: Reformatted.\n+\t(MouseInputAdapter): Made abstract.\n+\t* javax/swing/tree/DefaultMutableTreeNode.java\n+\t(random): Removed.\n+\t(growTree): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/dnd/DropTarget.java (addDropTargetListener):\n+\tClarified comments.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JComponent.java (getComponentGraphics):\n+\tRemoved accidently commited code.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* java/awt/dnd/DropTarget.java\n+\t(addDropTargetListener): Despite documentation, do not throw.\n+\t* javax/swing/JComponent.java: Set a default DropTarget.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractAction.java\n+\t(ENABLED_PROPERTY): Removed.\n+\t(setEnabled): Replaced constant with real string.\n+\t* javax/swing/AbstractButton.java\n+\t(createActionPropertyChangeListener.propertyChange): Likewise.\n+\t* javax/swing/JComboBox.java\n+\t(DEFAULT_MAXIMUM_ROW_COUNT): Made private.\n+\t(EDITABLE_CHANGED_PROPERTY): Removed.\n+\t(MAXIMUM_ROW_COUNT_CHANGED_PROPERTY):Likewise.\n+\t(ENABLED_CHANGED_PROPERTY):Likewise.\n+\t(RENDERER_CHANGED_PROPERTY):Likewise.\n+\t(EDITOR_CHANGED_PROPERTY):Likewise.\n+\t(MODEL_CHANGED_PROPERTY):Likewise.\n+\t(uiClassID):Likewise.\n+\t(getUIClassID): Replaced constant with real string.\n+\t(setModel):Likewise.\n+\t(setEditable):Likewise.\n+\t(setMaximumRowCount):Likewise.\n+\t(setRenderer):Likewise.\n+\t(setEditor):Likewise.\n+\t(setEnabled):Likewise.\n+\t* javax/swing/JLabel.java\n+\t(DISABLED_ICON_CHANGED_PROPERTY): Removed.\n+\t(DISPLAYED_MNEMONIC_CHANGED_PROPERTY): Likewise.\n+\t(DISPLAYED_MNEMONIC_INDEX_CHANGED_PROPERTY): Likewise.\n+\t(HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY): Likewise.\n+\t(HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY): Likewise.\n+\t(ICON_CHANGED_PROPERTY): Likewise.\n+\t(ICON_TEXT_GAP_CHANGED_PROPERTY): Likewise.\n+\t(LABEL_FOR_CHANGED_PROPERTY): Likewise.\n+\t(TEXT_CHANGED_PROPERTY): Likewise.\n+\t(VERTICAL_ALIGNMENT_CHANGED_PROPERTY): Likewise.\n+\t(VERTICAL_TEXT_POSITION_CHANGED_PROPERTY): Likewise.\n+\t(setText): Replaced constant with real string.\n+\t(setIcon): Likewise.\n+\t(setDisabledIcon): Likewise.\n+\t(setDisplayedMnemonic): Likewise.\n+\t(setIconTextGap): Likewise.\n+\t(setVerticalAlignment): Likewise.\n+\t(setHorizontalAlignment): Likewise.\n+\t(setVerticalTextPosition): Likewise.\n+\t(setHorizontalTextPosition): Likewise.\n+\t(setLabelFor): Replaced constant with real string.\n+\tFire property change event after property got changed.\n+\t* javax/swing/JList.java\n+\t(CELL_RENDERER_PROPERTY_CHANGED): Likewise.\n+\t(FIXED_CELL_HEIGHT_PROPERTY_CHANGED): Likewise.\n+\t(FIXED_CELL_WIDTH_PROPERTY_CHANGED): Likewise.\n+\t(LAYOUT_ORIENTATION_PROPERTY_CHANGED): Likewise.\n+\t(MODEL_PROPERTY_CHANGED): Likewise.\n+\t(PROTOTYPE_CELL_VALUE_PROPERTY_CHANGED): Likewise.\n+\t(SELECTION_BACKGROUND_PROPERTY_CHANGED): Likewise.\n+\t(SELECTION_FOREGROUND_PROPERTY_CHANGED): Likewise.\n+\t(SELECTION_MODEL_PROPERTY_CHANGED): Likewise.\n+\t(setFixedCellWidth): Reimplemented.\n+\t(setFixedCellHeight): Exit if new value is identical.\n+\tReplaced constant with real string.\n+\t(setSelectionBackground): Likewise.\n+\t(setSelectionForeground): Likewise.\n+\t(setPrototypeCellValue): Likewise.\n+\t(setCellRenderer): Replaced constant with real string.\n+\t(setModel): Likewise.\n+\t(setSelectionModel): Likewise.\n+\t* javax/swing/JMenuBar.java\n+\t(BORDER_PAINTED_CHANGED_PROPERTY): Removed.\n+\t(MODEL_CHANGED_PROPERTY): Likewise.\n+\t(MARGIN_CHANGED_PROPERTY): Likewise.\n+\t(setBorderPainted): Reimplemented.\n+\t(setMargin): Likewise.\n+\t(setSelectionModel): Replaced constant with real string.\n+\t* javax/swing/JPopupMenu.java\n+\t(LABEL_CHANGED_PROPERTY): Removed.\n+\t(VISIBLE_CHANGED_PROPERTY): Likewise.\n+\t(borderPainted): Likewise.\n+\t(setLabel): Replaced constant with real string.\n+\t(setVisible): Exit if new value is identical.\n+\tReplaced constant with real string.\n+\t* javax/swing/JProgressBar.java\n+\t(BORDER_PAINTED_CHANGED_PROPERTY): Removed.\n+\t(ORIENTATION_CHANGED_PROPERTY): Likewise.\n+\t(STRING_CHANGED_PROPERTY): Likewise.\n+\t(STRING_PAINTED_CHANGED_PROPERTY): Likewise.\n+\t(INDETERMINATE_CHANGED_PROPERTY): Likewise.\n+\t(setOrientation): Replaced constant with real string.\n+\t(setStringPainted): Likewise.\n+\t(setString): Likewise.\n+\t(setBorderPainted): Likewise.\n+\t(setIndeterminate): Likewise.\n+\t* javax/swing/JScrollBar.java\n+\t(BLOCK_INCREMENT_CHANGED_PROPERTY): Removed.\n+\t(MODEL_CHANGED_PROPERTY): Likewise.\n+\t(ORIENTATION_CHANGED_PROPERTY): Likewise.\n+\t(setOrientation): Replaced constant with real string.\n+\t(setModel): Likewise.\n+\t(setUnitIncrement): Likewise.\n+\t(setBlockIncrement): Likewise.\n+\t* javax/swing/JScrollPane.java\n+\t(COLUMN_HEADER_CHANGED_PROPERTY): Removed.\n+\t(COMPONENT_ORIENTATION_CHANGED_PROPERTY): Likewise.\n+\t(HORIZONTAL_SCROLLBAR_CHANGED_PROPERTY): Likewise.\n+\t(HORIZONTAL_SCROLLBAR_POLICY_CHANGED_PROPERTY): Likewise.\n+\t(LAYOUT_CHANGED_PROPERTY): Likewise.\n+\t(ROW_HEADER_CHANGED_PROPERTY): Likewise.\n+\t(VERTICAL_SCROLLBAR_CHANGED_PROPERTY): Likewise.\n+\t(VERTICAL_SCROLLBAR_POLICY_CHANGED_PROPERTY): Likewise.\n+\t(VIEWPORT_CHANGED_PROPERTY): Likewise.\n+\t(VIEWPORT_BORDER_CHANGED_PROPERTY): Likewise.\n+\t(WHEEL_SCROLLING_ENABLED_CHANGED_PROPERTY): Likewise.\n+\t(setComponentOrientation): Replaced constant with real string.\n+\t(setColumnHeader): Likewise.\n+\t(setHorizontalScrollBar): Likewise.\n+\t(setHorizontalScrollBarPolicy): Likewise.\n+\t(setRowHeader): Likewise.\n+\t(setVerticalScrollBar): Likewise.\n+\t(setVerticalScrollBarPolicy): Likewise.\n+\t(setWheelScrollingEnabled): Likewise.\n+\t(setViewport): Likewise.\n+\t(setViewportBorder): Likewise.\n+\t* javax/swing/JSlider.java\n+\t(INVERTED_CHANGED_PROPERTY): Removed.\n+\t(LABEL_TABLE_CHANGED_PROPERTY): Likewise.\n+\t(MAJOR_TICK_SPACING_CHANGED_PROPERTY): Likewise.\n+\t(MINOR_TICK_SPACING_CHANGED_PROPERTY): Likewise.\n+\t(MODEL_CHANGED_PROPERTY): Likewise.\n+\t(ORIENTATION_CHANGED_PROPERTY): Likewise.\n+\t(PAINT_LABELS_CHANGED_PROPERTY): Likewise.\n+\t(PAINT_TICKS_CHANGED_PROPERTY): Likewise.\n+\t(setModel): Replaced constant with real string.\n+\t(setOrientation): Likewise.\n+\t(setLabelTable): Likewise.\n+\t(setInverted): Likewise.\n+\t(setMajorTickSpacing): Likewise.\n+\t(setMinorTickSpacing): Likewise.\n+\t(setPaintTicks): Likewise.\n+\t(setPaintLabels): Likewise.\n+\t* javax/swing/JTabbedPane.java\n+\t(MODEL_CHANGED_PROPERTY): Removed.\n+\t(TAB_PLACEMENT_CHANGED_PROPERTY): Likewise.\n+\t(TAB_LAYOUT_POLICY_CHANGED_PROPERTY): Likewise.\n+\t(setModel): Replaced constant with real string.\n+\t(setTabPlacement): Likewise.\n+\t(setTabLayoutPolicy): Likewise.\n+\t* javax/swing/JToolBar.java\n+\t(ORIENTATION_CHANGED_PROPERTY): Removed.\n+\t(FLOATABLE_CHANGED_PROPERTY): Likewise.\n+\t(BORDER_PAINTED_CHANGED_PROPERTY): Likewise.\n+\t(MARGIN_CHANGED_PROPERTY): Likewise.\n+\t(ROLLOVER_CHANGED_PROPERTY): Likewise.\n+\t(setRollover): Replaced constant with real string.\n+\t(setMargin): Likewise.\n+\t(setBorderPainted): Likewise.\n+\t(setFloatable): Likewise.\n+\t(setOrientation): Likewise.\n+\t* javax/swing/plaf/basic/BasicComboBoxUI.java\n+\t(PropertyChangeHandler.propertyChange): Likewise.\n+\t* javax/swing/plaf/basic/BasicComboPopup.java\n+\t(PropertyChangeHandler.propertyChange): Likewise.\n+\t* javax/swing/plaf/basic/BasicMenuBarUI.java\n+\t(PropertyChangeHandler.propertyChange): Likewise.\n+\t* javax/swing/plaf/basic/BasicProgressBarUI.java\n+\t(PropertyChangeHandler.propertyChange): Likewise.\n+\t* javax/swing/plaf/basic/BasicScrollBarUI.java\n+\t(PropertyChangeHandler.propertyChange): Likewise.\n+\t* javax/swing/plaf/basic/BasicSliderUI.java\n+\t(PropertyChangeHandler.propertyChange): Likewise.\n+\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java\n+\t(PropertyChangeHandler.propertyChange): Likewise.\n+\t* javax/swing/plaf/basic/BasicToolBarUI.java\n+\t(PropertyChangeHandler.propertyChange): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DefaultButtonModel.java\n+\t(changeState): Made private.\n+\t* javax/swing/DefaultDesktopManager.java\n+\t(setWasIcon): Fixed second argument to be java.lang.Boolean.\n+\t* javax/swing/JLayeredPane.java\n+\t(layerToRange): Made private.\n+\t(incrLayer): Likewise.\n+\t(decrLayer): Likewise.\n+\t* javax/swing/JTable.java\n+\t(dragEnabled): Likewise.\n+\t(preferredViewportSize): Renamed from preferredScrollableViewportSize.\n+\t* javax/swing/KeyStroke.java\n+\t(Keystroke): Made private.\n+\t* javax/swing/TransferHandler.java\n+\t(COMMAND_COPY): Likewise.\n+\t(COMMAND_CUT): Likewise.\n+\t(COMMAND_PASTE): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTextField.java\n+\t(postActionEvent): Use text in field when actionCommand is null.\n+\t(getActionCommand): Removed.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractSet.java: Removed.\n+\t* Makefile.am: Removed javax/swing/AbstractSet.java.\n+\t* Makefile.in: Regenerated.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/Window.java\n+\t(AccessibleWindow.getAccessibleStateSet): Fixed method name.\n+\t* java/awt/dnd/DnDConstants.java\n+\t(DnDConstants): New private constructor.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DefaultCellRenderer.java: Removed.\n+\t* Makefile.am: Removed javax/swing/DefaultCellRenderer.java.\n+\t* Makefile.in: Regenerated.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractButton.java\n+\t(fireItemStateChanged): Made protected.\n+\t(fireActionPerformed): Likewise.\n+\t(fireStateChanged): Likewise.\n+\t* javax/swing/DefaultButtonModel.java\n+\t(fireItemStateChanged): Likewise.\n+\t(fireActionPerformed): Likewise.\n+\t(fireStateChanged): Likewise.\n+\t* javax/swing/JApplet.java\n+\t(JApplet): Removed.\n+\t(frameInit): Likewise.\n+\t(setRootPane): Made protected.\n+\t(createRootPane): Likewise.\n+\t* javax/swing/JComponent.java\n+\t(getClientProperty): Likewise.\n+\t(putClientProperty): Likewise.\n+\t* javax/swing/JEditorPane.java\n+\t(getContentType): Likewise.\n+\t(setContentType): Likewise.\n+\t* javax/swing/JFrame.java\n+\t(setRootPane): Likewise.\n+\t(createRootPane): Likewise.\n+\t* javax/swing/JInternalFrame.java\n+\t(getFocusCycleRootAncestor): Made final. Added @since tag.\n+\t(isFocusCycleRoot): Likewise.\n+\t(getWarningString): Made final.\n+\t* javax/swing/JScrollBar.java\n+\t(changeListener): Removed.\n+\t(changeEvent): Likewise.\n+\t(createChangeListener): Likewise.\n+\t(fireStateChanged): Likewise.\n+\t(addChangeListener): Likewise.\n+\t(removeChangeListener): Likewise.\n+\t(getChangeListeners): Likewise.\n+\t* javax/swing/JScrollPane.java\n+\t(createViewport): Made protected.\n+\t* javax/swing/JViewport.java\n+\t(addImpl): Likewise.\n+\t(setBorder): New method.\n+\t* javax/swing/JWindow.java\n+\t(setRootPane): Made protected.\n+\t(createRootPane): Likewise.\n+\t* javax/swing/plaf/basic/BasicButtonUI.java\n+\t(installListeners): Likewise.\n+\t(uninstallListeners): Likewise.\n+\t* javax/swing/plaf/basic/BasicProgressBarUI.java\n+\t(incrementAnimationIndex): Likewise.\n+\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java\n+\t(createLayoutManager): Likewise.\n+\t* javax/swing/table/DefaultTableCellRenderer.java\n+\t(firePropertyChange): Likewise.\n+\t* javax/swing/table/JTableHeader.java\n+\t(AccessibleJTableHeaderEntry.AccessibleJTableHeaderEntry):\n+\tNew constructor.\n+\t* javax/swing/text/PlainDocument.java\n+\t(reindex): Made private.\n+\t* javax/swing/text/PlainView.java\n+\t(drawLine): Made protected.\n+\t(getTabSize): Likewise.\n+\t* javax/swing/text/View.java\n+\t(setSize): Removed.\n+\t(preferenceChanged): New method.\n+\t(getBreakWeight): Likewise.\n+\t(breakView): Likewise.\n+\t(getViewIndex): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JScrollPane.java\n+\t(ScrollBar): Made class protected.\n+\t* javax/swing/JSpinner.java\n+\t(JSpinner): Added @since tag.\n+\t(listenerList): Removed.\n+\t* javax/swing/JTable.java\n+\t(setValueAt): New method.\n+\t(getColumn): Likewise.\n+\t* javax/swing/JWindow.java\n+\t(rootPaneCheckingEnabled): Renamed from checking.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicTextUI.java\n+\t(RootView.modelToView): Made it public and return a java.awt.Shape.\n+\tHandle null subview.\n+\t(uninstall): Set textComponent to null when its not possible used\n+\tanymore.\n+\t* javax/swing/text/View.java\n+\t(setParent): Use better argument name.\n+\t(getContainer): Get parent via getParent().\n+\t(getViewFactory): Likewise.\n+\t(getAttributes): Get element via getElement().\n+\t(getStartOffset): Likewise.\n+\t(getEndOffset): Likewise.\n+\t(getResizeWeight): New method.\n+\t(getMaximumSpan): Likewise.\n+\t(getMinimumSpan): Likewise.\n+\t(setSize): Likewise.\n+\t(getGraphics): Likewise.\n+\n+2005-02-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/awt/Checkbox.java:\n+\t(AccessibleAWTCheckbox()): Added public constructor\n+\tto call superclass.\n+\t* java/awt/Choice.java:\n+\t(AccessibleAWTChoice): Added class documentation.\n+\t(AccessibleAWTChoice()): Added public constructor\n+\tto call superclass.\n+\t(AccessibleAWTChoice.getAccessibleAction()): Documented.\n+\t(AccessibleAWTChoice.getAccessibleRole()): Documented,\n+\tand changed role to COMBO_BOX.\n+\t(AccessibleAWTChoice.getAccessibleActionCount()): Documented.\n+\t(AccessibleAWTChoice.getAccessibleActionDescription(int)): Documented.\n+\t(AccessibleAWTChoice.doAccessibleAction(int)): Documented.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\t    Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/LayoutFocusTraversalPolicy.java,\n+\tjavax/swing/SortingFocusTraversalPolicy.java:\n+\tNew classes.\n+\t* Makefile.am: Added new classes.\n+\t* Makefike.in: Regenerated.\n+\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DebugGraphics.java: Mostly implemented.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/SwingUtilities.java\n+\t(findFocusOwner): New method.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/DefaultEditorKit.java\n+\t(read): Added '\\n' after each line.\n+\t* javax/swing/text/PlainView.java\n+\t(modelToView): Update metrics.\n+\t(drawLine): Use offsets from element.\n+\t(paint): Update metrics. Draw all lines.\n+\n+2005-02-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/awt/Checkbox.java:\n+\t(AccessibleAWTCheckbox): Added class documentation\n+\t* java/awt/Scrollbar.java:\n+\t(AccessibleAWTScrollBar): typo corrected and docs added\n+\t(AccessibleAWTScrollBar.getAccessibleRole()): documented\n+\t(AccessibleAWTScrollBar.getAccessibleStateSet()): likewise\n+\t(AccessibleAWTScrollBar.getAccessibleValue()): likewise\n+\t(AccessibleAWTScrollBar.getCurrentAccessibleValue()): likewise\n+\t(AccessibleAWTScrollBar.setCurrentAccessibleValue(int)): likewise\n+\t(AccessibleAWTScrollBar.getMinimumAccessibleValue()): likewise\n+\t(AccessibleAWTScrollBar.getMaximumAccessibleValue()): likewise\n+\t(getAccessibleContext()): name of accessible class corrected\n+\n+2005-02-15  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/awt/BasicStroke.java (hashCode): Implement.\n+\t(equals): Document.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/print/PrinterJob.java\n+\t(pageDialog): Throws java.awt.HeadlessException.\n+\t(printDialog): Likewise.\n+\n+2005-02-15  Mark Wielaard  <mark@klomp.org>\n+\n+\t* jni/gtk-peer/gtkpeer.h (gdk_env): Fix prototype.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTable.java\n+\t(getValueAt): New method.\n+\t* javax/swing/table/JTableHeader.java\n+\t(columnAtPoint): New method.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTextField.java\n+\t(actions): New field.\n+\t(static): Initalize actions field.\n+\t(getActions): New method.\n+\n+2005-02-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/awt/Checkbox.java:\n+\t(AccessibleAWTCheckbox): name capitalization corrected\n+\tand serialization UID added.\n+\t(AccessibleAWTCheckbox.itemStateChanged(java.awt.event.ItemEvent)):\n+\tdocumented.\n+\t(AccessibleAWTCheckbox.getAccessibleAction()): likewise\n+\t(AccessibleAWTCheckbox.getAccessibleValue()): likewise\n+\t(AccessibleAWTCheckbox.getAccessibleActionCount()): likewise\n+\t(AccessibleAWTCheckbox.getAccessibleActionDescription(int)): likewise\n+\t(AccessibleAWTCheckbox.doAccessibleAction(int)): likewise\n+\t(AccessibleAWTCheckbox.getCurrentAccessibleValue()): likewise\n+\t(AccessibleAWTCheckbox.setCurrentAccessibleValue(int)): likewise\n+\t(AccessibleAWTCheckbox.getMinimumAccessibleValue()): likewise\n+\t(AccessibleAWTCheckbox.getMaximumAccessibleValue()): likewise\n+\t(AccessibleAWTCheckbox.getAccessibleRole()): likewise\n+\t(AccessibleAWTCheckbox.getAccessibleStateSet()): implemented and\n+\tdocumented\n+\t(getAccessibleContext()): name of accessible class corrected\n+\n+2005-02-15  Sven de Marothy  <sven@physto.se>\n+\n+\t* java/awt/geom/doc-files/Area-1.png,\n+\tjava/awt/geom/doc-files/Ellipse-1.png,\n+\tjava/awt/geom/doc-files/GeneralPath-1.png:\n+\tNew files.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c (env_union):\n+\tUse union to avoid type-punning warning.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DefaultListSelectionModel.java\n+\t(clone): New method.\n+\n+2005-02-15  Mark Wielaard  <mark@klomp.org>\n+\n+\tReported by Martin Platter <motse@complang.tuwien.ac.at>\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_nativeSetFile):\n+\tCorrect method signature of gtkSetFilename.\n+\n+2005-02-15  Arnaud Vandyck  <avdyk@gnu.org>\n+\n+\t* javax/swing/text/StringContent.java: New file.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* Makefile.am: Added javax/swing/text/StringContent.java.\n+\t* Makefile.in: Regenerated.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/ClasspathToolkit.java:\n+\tImport statements reworked.\n+\t(imageCache): Made it of type java.util.HashMap.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/imageio/stream/MemoryCacheImageInputStream.java:\n+\tReworked import statements.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c:\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c:\n+\tRewrite uses of extern variable to be function calls.\n+\t* jni/gtk-peer/gtkpeer.h (gdk_env): Change declaration to \n+\tfunction, from extern variable.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c \n+\t(gdk_env): Remove variable, add new function.\n+\t(java_vm): Add new variable.\n+\t(Java_gnu_java_awt_peer_gtk_GtkToolkit_gtkInit): Initialize\n+\tjava_vm rather than old gdk_env variable.\n+\n+2005-02-15 David Gilbert <david.gilbert@object-refinery.com>\n+\n+\t* javax/swing/DefaultListModel.java\n+\t(add): fire correct event,\n+\t(addElement): corrected interval indices in event,\n+\t(clear): corrected upper bound for interval, only fire event if\n+\tlist is not empty,\n+\t(setSize): fire appropriate event.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* gnu/awt/xlib/XEventLoop.java: Add non-blocking event mode.\n+\t* gnu/awt/xlib/XToolkit.java: Likewise.\n+\t* gnu/gcj/xlib/XAnyEvent.java: Likewise.\n+\t* gnu/gcj/xlib/natXAnyEvent.cc: Likewise.\n+\t* gnu/java/awt/ClasspathToolkit.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java: Likewise.\n+\t* java/awt/EventQueue.java (getNextEvent): \n+\tAdjust event loop to switch to native mode after 100ms.\n+\t* javax/swing/Timer.java (drainEvents): Reuse Runnable.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkGenericPeer_dispose): \n+\tWake up event thread.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkToolkit_iterateNativeQueue):\n+\tAdjust event loop to switch to java mode after 100ms.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* jni.cc (_Jv_JNI_RegisterNatives): Re-add sync, which was\n+\taccidentally removed in last change.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c,\n+\tgnu/java/awt/peer/gtk/GtkMainThread.java: Removed.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* include/jni.h (_Jv_JNIEnv::bottom_locals): New field.\n+\t* include/jvm.h (_Jv_FreeJNIEnv): Declare.\n+\t* java/lang/natThread.cc (finalize_native): Call _Jv_FreeJNIEnv.\n+\t* jni.cc: Reuse bottom frame between calls, avoid clearing\n+\tframe when no local references are made.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/UIDefaults.java (UIDefaults):\n+\tFixed typo in javadoc (Thanks to Thomas Zander for reporting)\n+\tFixed HTML entity and removed a redundant comma.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/DefaultEditorKit.java\n+\t(deinstall): Removed.\n+\t(install): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/UIDefaults.java (put): Handle value of null.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/Robot.java,\n+\tjava/awt/Scrollbar.java,\n+\tjava/awt/print/PrinterJob.java,\n+\tjavax/swing/JTable.java,\n+\tjavax/swing/text/AbstractDocument.java:\n+\tReworked import statements.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JEditorPane.java\n+\t(read): Implemented.\n+\t(write): Likewise.\n+\t* javax/swing/text/DefaultEditorKit.java\n+\t(page): Renamed from page_url. Made private.\n+\t(editorKit): Renamed from kit. Made private.\n+\t(ctype): Removed.\n+\t(JEditorPane): All constructors reimplemented.\n+\t(getContentType): Use content type from editor kit.\n+\t(getEditorKit): Return editorKit.\n+\t(getEditorKitForContentType):Likewise.\n+\t(getPage): Return page.\n+\t(setContentType): Reimplemented.\n+\t(setEditorKit): Likewise.\n+\t(setEditorKitForContentType): Removed wrong implementation.\n+\t(setPage): Implemented.\n+\n+2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFramePeer.c\n+\t(nativeSetIconImageFromData): Re-add native implementation.\n+\n+2005-02-15  David Gilbert  <david.gilbert@object-refinery.com>\n+\n+\t* javax/swing/table/DefaultTableModel.java\n+\t(DefaultTableModel()): Added Javadocs.\n+\t(DefaultTableModel(int, int)): Fixed implementation.\n+\t(DefaultTableModel(Vector, int)): Throw IllegalArgumentException\n+\tfor negative rowCount.\n+\t(DefaultTableModel(Object[], int)): Added Javadocs.\n+\t(DefaultTableModel(Vector, Vector)): Likewise.\n+\t(DefaultTableModel(Object[][], Object[])): Likewise.\n+\t(getDataVector): Likewise.\n+\t(setDataVector(Vector, Vector)): Likewise.\n+\t(setDataVector(Object[][], Object[])): Likewise.\n+\t(newDataAvailable): Likewise.\n+\t(newRowsAdded): Likewise.\n+\t(rowsRemoved): Likewise.\n+\t(setColumnIdentifiers(Vector)): Allow for null argument.\n+\t(setColumnIdentifiers(Object[])): Added Javadocs.\n+\t(setNumRows): Likewise.\n+\t(setRowCount): Adds new rows if necessary, and sends more specific\n+\tTableModelEvent.\n+\t(setColumnCount): Allow for null columnIdentifiers.\n+\t(addColumn(Object)): Added Javadocs.\n+\t(addColumn(Object, Vector)): Handle null columnData.\n+\t(addColumn(Object, Object[])): Handle columnData with more or less\n+\tentries than rows in the table.\n+\t(addRow(Vector)): Fire appropriate event.\n+\t(addRow(Object[])): Added Javadocs.\n+\t(insertRow(int, Vector)): Fire appropriate event.\n+\t(insertRow(int, Object[])): Added Javadocs.\n+\t(moveRow): Reimplemented.\n+\t(removeRow(int)): Fire appropriate event.\n+\t(getColumnCount): Allow for null columnIdentifiers.\n+\t(getColumnName): Now returns empty string when column index is too\n+\tlarge.\n+\t(isCellEditable): Added Javadocs.\n+\t(getValueAt): Likewise.\n+\t(setValueAt): Fire more specific event.\n+\t(convertToVector): Added Javadocs.\n+\t* javax/swing/table/TableModel.java\n+\tAdded Javadocs.\n+\n+2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* libgcj.spec.in (lib): Add -l-javax-imageio.\n+\n+2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java: Replace direct\n+\treferences to event queue q with method call q().\n+\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkScrollbarPeer.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkTextComponentPeer.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkGenericPeer.java: Likewise.\n+\t(q): New method.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* gnu/java/awt/ClasspathToolkit.java \n+\t(registerImageIOSpis): New method.\n+\t* gnu/java/awt/image/ImageDecoder.java \n+\t(imageDecoder): New constructor using InputStream\n+\t(startProduction): Handle existing InputStream.\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java \n+\t(findSimpleIntegerArray): Make public and static.\n+\t(updateBufferedImage): Set each pixel, in a loop.\n+\t* gnu/java/awt/peer/gtk/GdkPixbufDecoder.java: \n+\tImplement ImageIO SPI classes.\n+\t(createBufferedImage): Rewrite in terms of SPI classes.\n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java\n+\t(registerImageIOSpis): New method.\n+\t* java/lang/reflect/natMethod.cc \n+\t(_Jv_CallAnyMethodA): Borrow a patch from aph, applied to trunk, \n+\twhich lets JNI call interface methods properly.\n+\t* javax/imageio/ImageIO.java \n+\t(WriterFormatFilter.filter): Fix copy-and-paste typos.\n+\t(WriterMIMETypeFilter.filter): Likewise.\n+\t(ImageReaderIterator): Pass extension argument through to SPI.\n+\t(getReadersByFilter): Likewise.\n+\t(getWritersByFilter): Likewise.\n+\t(getImageReadersByFormatName): Likewise.\n+\t(getImageReadersByMIMEType): Likewise.\n+\t(getImageReadersBySuffix): Likewise.\n+\t(getImageWritersByFormatName): Likewise.\n+\t(getImageWritersByMIMEType): Likewise.\n+\t(getImageWritersBySuffix): Likewise.\n+\t(read): Implement.\n+\t(write): Implement.\n+\t* javax/imageio/ImageReader.java \n+\t(progressListeners): Initialize.\n+\t(setInput): Implement.\n+\t* javax/imageio/ImageWriter.java\n+\t(progressListeners): Initialize.\n+\t(warningListeners): Likewise.\n+\t(warningLocales): Likewise.\n+\t(setOutput): Test \"isInstance\" rather than class equality.\n+\t* javax/imageio/spi/IIORegistry.java\n+\t(static): Add reader and writer SPIs.\n+\t(IIORegistry): Call ClasspathToolkit.registerImageIOSpis.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c\n+\t(query_formats): New function.\n+\t(save_to_stream): Likewise.\n+\t(Java_gnu_java_awt_peer_gtk_GdkPixbufDecoder_streamImage): Likewise.\n+\n+2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c (mouseWheel):\n+\tCall XFlush.\n+\t(keyPress): Likewise.\n+\t(keyRelease): Likewise.\n+\n+2005-02-15  Olga Rodimina  <rodimina@redhat.com>\n+\n+\t* javax/swing/JTable.java\n+\t(columnAtPoint): New Method. Implemented.\n+\t(rowAtPoint): Likewise.\n+\t(countSelections): Fixed few small count errors.\n+\t(getSelections): Likewise.\n+\t(setSelectionMode): Set selection mode for column \n+\tselection model in addition to row selection model.\n+\t* javax/swing/plaf/basic/BasicTableUI.java:\n+\t(getRowForPoint): Removed. Replaced by\n+\tJTable.rowAtPoint().\n+\t(getColForPoint): Removed. Replaced by \n+\tJTable.columnAtPoint().\n+\t(updateSelection): Updated to call JTable.columnAtPoint \n+\tand JTable.rowAtPoint.\n+\t* javax/swing/table/DefaultTableColumnModel.java:\n+\t(getSelectedColumns): Implemented.\n+\t(getSelectedColumnCount): Implemented.\t\t\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* Makefile.am \n+\t(jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c)\n+\t(gnu/java/awt/peer/gtk/GtkMainThread.java) : Remove.\n+\t* Makefile.in: Regenerate.\n+\t* gnu/awt/xlib/XEventLoop.java: Fix to match thread model.\n+\t* gnu/awt/xlib/XFramePeer.java: Likewise.\n+\t* gnu/awt/xlib/XToolkit.java: Likewise.\n+\t* gnu/gcj/xlib/XAnyEvent.java: Likewise.\n+\t* gnu/gcj/xlib/natXAnyEvent.cc: Likewise.\n+\t* gnu/java/awt/ClasspathToolkit.java \n+\t(nativeQueueEmpty)\n+\t(wakeNativeQueue)\n+\t(iterateNativeQueue): New methods.\n+\t* gnu/java/awt/peer/gtk/GtkMainThread.java: Remove.\n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java\n+\t(gtkInit): Absorb from defunct GtkMainThread class.\n+\t(static): Run gtkInit in static startup block.\n+\t(GtkToolkit): Remove construction of GtkMainThread and queue.\n+\t(getSystemEventQueueImpl): Construct queue when requested.\n+\t(nativeQueueEmpty)\n+\t(wakeNativeQueue)\n+\t(iterateNativeQueue): New methods.\n+\t* java/awt/Component.java (removeNotify): Remove race.\n+\t* java/awt/EventDispatchThread.java \n+\t(EventDispatchThread): Don't start on construction.\n+\t(run): Remove isInterrupted check.\n+\t* java/awt/EventQueue.java (shutdown): New flag.\n+\t(isShutdown): New method checking J2SE shutdown condition.\n+\t(setShutdown): New method.\n+\t(getNextEvent): Restructure to use ClasspathToolkit.\n+\t(postEvent): Activate new thread on posting, wake thread on\n+\tpost of possible shutdown condition event.\n+\t* java/awt/Frame.java \n+\t(Frame): Call noteFrame in all constructors.\n+\t(fireDummyEvent): New helper method.\n+\t(addNotify): Fire a dummy event to wake up queue.\n+\t(removeNotify): Fire a dummy event to wake up queue.\n+\t(noteFrame): New method.\n+\t(weakFrames): New static field.\n+\t(getFrames): Implement.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c: \n+\tRemove.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c:\n+\tMove everything from GtkMainThread into this file\n+\t(Java_gnu_java_awt_peer_gtk_GtkToolkit_iterateNativeQueue)\n+\t(Java_gnu_java_awt_peer_gtk_GtkToolkit_wakeNativeQueue)\n+\t(Java_gnu_java_awt_peer_gtk_GtkToolkit_nativeQueueEmpty):\n+\tNew functions to implement single-threaded queue semantics.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/metal/MetalLookAndFeel.java\n+\t(getControlTextFont): New method.\n+\t(getMenuTextFont): Likewise.\n+\t(getSubTextFont): Likewise.\n+\t(getSystemTextFont): Likewise.\n+\t(getUserTextFont): Likewise.\n+\t(getWindowTitleFont): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/AbstractDocument.java\n+\t(documentFilter): New field.\n+\t(getDocumentFilter): New method.\n+\t(setDocumentFilter): Likewise.\n+\t(dump): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTree.java\n+\t(DynamicUtilTreeNode.hasChildren): Clarify javadoc.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/AbstractDocument.java\n+\t(AbstractElement.getLength): Fixed off-by-one error.\n+\t(AbstractElement.children): Made abstract.\n+\t(AbstractElement.getAllowsChildren): Likewise.\n+\t(AbstractElement.getElement): Likewise.\n+\t(AbstractElement.dumpElement): New private method.\n+\t(AbstractElement.dump): New method.\n+\t(BranchElememt.getName): Fixed implementation.\n+\t(BranchElememt.toString): Likewise.\n+\t(BranchElememt.getElement): Fixed arguments.\n+\t(LeafElement.getName): Fixed implementation.\n+\t(LeafElement.toString): Likewise.\n+\t* javax/swing/text/GapContent.java\n+\t(GapContent): Put default content into buffer.\n+\t* javax/swing/text/PlainDocument.java\n+\t(reindex): Use empty attribute sets instead of null.\n+\t(createDefaultRoot): Reimplemented.\n+\t(insertUpdate): Call super method.\n+\t(removeUpdate): Likewise.\n+\t(getParagraphElement): Implemented.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/ClasspathToolkit.java\n+\t(createRobot): Throws java.awt.AWTException.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c:\n+\tAdded '__attribute__((unused))' to all unused method arguments.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DefaultBoundedRangeModel.java\n+\t(fireValueChanged): Fixed off-by-one error.\n+\n+2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Makefile.am (gtk_c_source_files): Add GdkRobotPeer.c.\n+\t(gtk_awt_peer_sources): Add GdkScreenGraphicsDevice.java and\n+\tGdkRobotPeer.java.\n+\t(lib_gnu_java_awt_peer_gtk_la_CFLAGS): Add X flags.\n+\t(lib_gnu_java_awt_peer_gtk_la_LDFLAGS): Add XTest flags.\n+\t* gnu/awt/xlib/XToolkit.java (createRobot): New method.\n+\t* gnu/java/awt/ClasspathToolkit.java (createRobot): New method.\n+\t* gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java\n+\t(getDefaultScreenDevice): Implement.\n+\t* gnu/java/awt/peer/gtk/GdkRobotPeer.java: New file.\n+\t* gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java (createRobot): New method.\n+\t* java/awt/Robot.java: Implement.\n+\t* java/awt/peer/RobotPeer.java: Rename parameters.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c: New file.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n+\t(awt_keycode_to_keysym): Make non-static.\n+\t* jni/gtk-peer/gtkpeer.h (AWT_BUTTON1_MASK, AWT_BUTTON2_MASK,\n+\tAWT_BUTTON3_MASK): Declare constants.\n+\t(awt_keycode_to_keysym): Declare.\n+\n+\t* Makefile.am (AM_MAKEFLAGS): Set KEYS variable.\n+\t* testsuite/libjava.mauve/mauve.exp (test_mauve): If KEYS exists\n+\tand is non-empty pass its value to \"make check\".\n+\t(test_mauve_sim): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/imageio/IIOParam.java\n+\t(setSourceBands): New method.\n+\t(setSourceSubsampling): Likewise.\n+\t* javax/imageio/ImageReadParam.java\n+\t(setDestination): Likewise.\n+\t(setDestinationBands): Likewise.\n+\t(setSourceProgressivePasses): Likewise.\n+\t* javax/imageio/metadata/IIOInvalidTreeException.java\n+\t(serialVersionUID): New static field.\n+\t* javax/imageio/metadata/IIOMetadataNode.java\n+\t(IIOMetadataNode): Don't explicitely implement org.w3c.dom.Node.\n+\t(parent): Dont initailize with default value explicitely.\n+\t(Object): Likewise.\n+\t(removeAttribute): Doesn't throws org.w3c.dom.DOMException.\n+\t(removeAttributeNode): Likewise.\n+\t(removeAttributeNS): Likewise.\n+\t(setAttribute): Likewise.\n+\t(setAttributeNode): Likewise.\n+\t(setAttributeNodeNS): Likewise.\n+\t(setAttributeNS): Likewise.\n+\t(appendChild): Likewise.\n+\t(getNodeValue): Likewise.\n+\t(insertBefore): Likewise.\n+\t(removeChild): Likewise.\n+\t(replaceChild): Likewise.\n+\t(setPrefix): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/LookAndFeel.java\n+\t(getDesktopPropertyValue): New method.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTree.java\n+\t(hasChildren): New instance field.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JComponent.java\n+\t(getToolTipText): New method.\n+\t(getTitledBorderText): Likewise.\n+\t(getAccessibleKeyBinding): Likewise.\n+\t(getVerifyInputWhenFocusTarget): Likewise.\n+\t(setVerifyInputWhenFocusTarget): Likewise.\n+\t(verifyInputWhenFocusTarget): New instance field.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DefaultListSelectionModel.java\n+\t(fireValueChanged): New method.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DefaultBoundedRangeModel.java:\n+\tFixed javadocs all over.\n+\t(fireStateChanged): Simplified.\n+\t* javax/swing/BoundedRangeModel.java:\n+\tReformatted.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JRootPane.java\n+\t(setMenuBar): Added @deprecated tag.\n+\t(getMenuBar): Likewise.\n+\t* javax/swing/JTable.java\n+\t(sizeColumnsToFit): Likewise.\n+\n+2005-02-15  Paul Jenner  <psj.home@ntlworld.com>\n+\n+\t* javax/swing/ImageIcon.java (setImage): Implemented.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTable.java:\n+\tRemoved unused imports.\n+\n+2005-02-15  Olga Rodimina  <rodimina@redhat.com>\n+\n+\t(prepareRenderer): Get column's index in dataModel instead\n+\tof column's view index.\n+\t(getColumnCount): return count of the columns in ColumnModel,\n+\tnot in dataModel.\n+\t(removeColumn): Implemented.\n+\t(moveColumm): Likewise.\n+\t(setRowHeight): throw IllegalArgumentException if height is \n+\tless then 1.\n+\t* javax/swing/table/DefaultTableColumnModel.java: Add javadocs.\n+\t(DefaultTableColumnModel):Add call to createSelectionModel().\n+\t(addColumn): Fire columnAdded event to registered listeners.\n+\t(removeColumn): Fire columnRemoved event to registered listeners.\n+\t(moveColumn): Fire columnMoved event to registered listeners.\n+\t(setColumnMargin): Fire ColumnMarginChanged event to registered listeners.\n+\t(getColumnIndex): Changed parameter name.\n+\t(setColumnSelectionAllowed): Likewise.\n+\t(fireColumnAdded): Implemented.\n+\t(fireColumnRemoved): Likewise.\n+\t(fireColumnMoved): Likewise.\n+\t(fireColumnMarginChanged): Likewise.\n+\t(getListeners): Changed parameter name.\n+\t(propertyChange): Implemented.\n+\t(valueChanged): Changed parameter name. \n+\t(createSelectionModel): Implemented.\t\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GtkToolkit.java:\n+\tExplicitely import used classes.\n+\t(getLocalGraphicsEnvironment): Simplify.\n+\t* java/awt/Window.java (Window):\n+\tEnable code to get the default GraphicsConfiguration.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/metal/DefaultMetalTheme.java\n+\t(CONTROL_TEXT_FONT): New static field.\n+\t(MENU_TEXT_FONT): Likewise.\n+\t(SUB_TEXT_FONT): Likewise.\n+\t(SYSTEM_TEXT_FONT): Likewise.\n+\t(USER_TEXT_FONT): Likewise.\n+\t(WINDOW_TITLE_FONT): Likewise.\n+\t(getControlTextFont): New method.\n+\t(getMenuTextFont): Likewise.\n+\t(getSubTextFont): Likewise.\n+\t(getSystemTextFont): Likewise.\n+\t(getUserTextFont): Likewise.\n+\t(getWindowTitleFont): Likewise.\n+\t* javax/swing/plaf/metal/MetalTheme.java\n+\t(BLACK): Initialize with Color.BLACK.\n+\t(WHITE): Initialize with Color.WHITE.\n+\t(getInactiveControlTextColor): Return getControlDisabled().\n+\t(getMenuDisabledForeground): Return getSecondary3().\n+\t(getControlTextFont): New abstract method.\n+\t(getMenuTextFont): Likewise.\n+\t(getSubTextFont): Likewise.\n+\t(getSystemTextFont): Likewise.\n+\t(getUserTextFont): Likewise.\n+\t(getWindowTitleFont): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JFormattedTextField.java\n+\t(getFocusLostBehavior): Fixed typo in method name.\n+\t(setFocusLostBehavior): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/TransferHandler.java:\n+\tReworked import statements.\n+\n+2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Button.java,\n+\tjava/awt/Canvas.java,\n+\tjava/awt/Checkbox.java,\n+\tjava/awt/CheckboxMenuItem.java,\n+\tjava/awt/Choice.java,\n+\tjava/awt/Dialog.java,\n+\tjava/awt/Frame.java,\n+\tjava/awt/Label.java,\n+\tjava/awt/List.java,\n+\tjava/awt/Menu.java,\n+\tjava/awt/MenuBar.java,\n+\tjava/awt/MenuItem.java,\n+\tjava/awt/PopupMenu.java,\n+\tjava/awt/ScrollPane.java,\n+\tjava/awt/Scrollbar.java,\n+\tjava/awt/TextArea.java,\n+\tjava/awt/Window.java (getAccessibleContext): Clean up comments.\n+\tReformat.\n+\t* java/awt/Button.java,\n+\tjava/awt/Checkbox.java,\n+\tjava/awt/Choice.java,\n+\tjava/awt/Menu.java,\n+\tjava/awt/PopupMenu.java,\n+\tjava/awt/TextArea.java (getAccessibleContext): Only create new\n+\taccessible once.\n+\t* java/awt/TextComponent.java (getAccessibleContext): Implement.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/Button.java,\n+\tjavax/swing/JApplet.java,\n+\tjavax/swing/JFormattedTextField.java,\n+\tjavax/swing/JWindow.java,\n+\tjavax/swing/JTree.java,\n+\tjavax/swing/plaf/basic/BasicEditorPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicTextPaneUI.java,\n+\tjavax/swing/plaf/basic/BasicTreeUI.java:\n+\tReworked import statements.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* Makefile.am: Put javax.imageio into its own library and link it\n+\tagainst lib-org-w3c-dom.la to fix bootstrapping.\n+\t* Makefile.in: Regenerated.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/TextAction.java\n+\t(getTextComponent): Simplified. Added Javadoc.\n+\t(augmentList): Implemented. Added Javadoc.\n+\t(getFocusedComponent): Added javadoc.\n+\n+2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Scrollbar.java (AccessibleAWTScrollbar,\n+\tgetAccessibleContext): Implement.\n+\t* java/awt/ScrollPane.java (AccessibleAWTScrollPane,\n+\tgetAccessibleContext): Implement.\n+\n+2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Dialog.java (AccessibleAWTFrame, getAccessibleContext):\n+\tImplement.\n+\t* java/awt/Frame.java (AccessibleAWTFrame, getAccessibleContext):\n+\tImplement.\n+\t* java/awt/Window.java (getAccessibleContext): Fix comment.\n+\tRemove extra import.\n+\n+2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Window.java (AccessibleAWTWindow): Implement.\n+\t(isActive, isFocused, getAccessibleContext): Implement.\n+\n+2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/MenuItem.java (getAccessibleContext): Implement.\n+\t* java/awt/MenuComponent.java (accessibleContext): Make package\n+\tvisible.\n+\t* java/awt/CheckboxMenuItem.java (getAccessibleContext,\n+\tAccessibleAWTCheckboxMenuItem): Implement.\n+\n+2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/List.java: Implement AccessibleAWTList,\n+\tAccessibleAWTListChild.\n+\n+2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Choice.java: Add implements declaration for\n+\tAccessible.\n+\n+2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* javax/imageio/metadata/IIOInvalidTreeException.java: Use Node\n+\tinstead of Object.\n+\n+2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* javax/imageio/metadata/IIOMetadataNode.java: Add Node to\n+\timplemented interface list.\n+\n+2005-02-15  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* javax/imageio/metadata/IIOMetadataNode.java: Implement.\n+\t* javax/imageio/metadata/IIOAttr.java: New class.\n+\t* javax/imageio/metadata/IIONamedNodeMap.java: New class.\n+\t* javax/imageio/metadata/IIONodeList.java: New class.\n+\t* Makefile.am: Added new files.\n+\t* Makefile.in: Regenerated.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractAction.java,\n+\tjavax/swing/AbstractCellEditor.java,\n+\tjavax/swing/AbstractListModel.java,\n+\tjavax/swing/DefaultBoundedRangeModel.java,\n+\tjavax/swing/DefaultButtonModel.java,\n+\tjavax/swing/DefaultCellEditor.java,\n+\tjavax/swing/DefaultComboBoxModel.java,\n+\tjavax/swing/DefaultDesktopManager.java,\n+\tjavax/swing/JMenu.java,\n+\tjavax/swing/JSlider.java,\n+\tjavax/swing/KeyStroke.java,\n+\tjavax/swing/OverlayLayout.java,\n+\tjavax/swing/ScrollPaneLayout.java,\n+\tjavax/swing/SizeRequirements.java,\n+\tjavax/swing/ViewportLayout.java:\n+\tMade serialVersionUID private.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java:\n+\tReformatted.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java: More reformatting.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java: Reformatted.\n+\n+2005-02-15  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* java/awt/EventDispatchThread.java,\n+\tjava/awt/Toolkit.java:\n+\tDon't catch java.lang.ThreadDeath.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/PasswordView.java\n+\t(drawEchoCharacter): Added javadoc.\n+\t(drawSelectedText): Likewise.\n+\t(drawUnselectedText): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JRootPane.java\n+\t(windowDecorationStyle): New field.\n+\t(setMenuBar): New method.\n+\t(getMenuBar): Likewise.\n+\t(getWindowDecorationStyle): Likewise.\n+\t(setWindowDecorationStyle): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DefaultListSelectionModel.java\n+\t(leadAnchorNotificationEnabled): Made protected.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/InternalFrameFocusTraversalPolicy.java: New file.\n+\t* Makefile.am: Added InternalFrameFocusTraversalPolicy.java.\n+\t* Makefile.in: Regenerated.\n+\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JFormattedTextField.java: Implemented.\n+\t* javax/swing/JWindow.java\n+\t(JWindow): New constructors.\n+\t(initWindow): Renamed from initFrame.\n+\t* javax/swing/UIDefaults.java\n+\t(ActiveValue): Made interface static.\n+\t(LazyValue): Likewise.\n+\t* javax/swing/plaf/basic/BasicInternalFrameTitlePane.java\n+\t(TitlePaneLayout.TitlePaneLayout): New constructor.\n+\t* javax/swing/plaf/basic/BasicSliderUI.java\n+\t(ChangeHandler): Made public.\n+\t(FocusHandler): Likewise.\n+\t(PropertyChangeHandler): Likewise.\n+\t(ScrollListener): Likewise.\n+\t* javax/swing/plaf/basic/BasicTabbedPaneUI.java\n+\t(FocusHandler): Likewise.\n+\t(MouseHandler): Likewise.\n+\t* javax/swing/plaf/basic/BasicTextPaneUI.java\n+\t(BasicTextPaneUI): Extend BasicEditorPaneUI.\n+\t* javax/swing/plaf/basic/BasicToolBarUI.java\n+\t(BasicToolBarUI): Simplified. Reworked javadoc.\n+\t(canDock): Simplified. Make public.\n+\t(DockingListener): Made public.\n+\t* javax/swing/text/JTextComponent.java\n+\t(navigationFilter): New field.\n+\t(getNavigationFilter): New method.\n+\t(setNavigationFilter): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/metal/MetalTheme.java\n+\t(getControlTextColor): Return getControlInfo().\n+\t(getHighlightedTextColor): Return getControlTextColor().\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicButtonListener.java\n+\t(BasicButtonListener): New constructor.\n+\t* javax/swing/plaf/basic/BasicButtonUI.java\n+\t(createButtonListener): Usw new BasicButtonListener constructor.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/imageio/event/package.html,\n+\tjavax/imageio/metadata/package.html: New files.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/image/MemoryImageSource.java: Reformatted.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/tree/TreeCellEditor.java: Refomatted.\n+\n+2005-02-15  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* java/awt/color/ICC_Profile.java\n+\t(finalize): Removed pointless field assignments.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/basic/BasicEditorPaneUI.java: New file.\n+\t* Makefile.am: Added javax/swing/plaf/basic/BasicEditorPaneUI.java.\n+\t* Makefile.in: Regenerated.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/DefaultStyledDocument.java: New file.\n+\t* Makefile.am: Added javax/swing/text/DefaultStyledDocument.java.\n+\t* Makefile.in: Regenerated.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JFileChooser.java\n+\t(showDialog): Return CANCEL_OPTION for now.\n+\t(showOpenDialog): Likewise.\n+\t(showSaveDialog): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JApplet.java\n+\t(HIDE_ON_CLOSE): Removed.\n+\t(EXIT_ON_CLOSE): Likewise.\n+\t(DISPOSE_ON_CLOSE): Likewise.\n+\t(DO_NOTHING_ON_CLOSE): Likewise.\n+\t(close_action): Likewise.\n+\t(getDefaultCloseOperation): Likewise.\n+\t(setDefaultCloseOperation): Likewise.\n+\t(processWindowEvent): Likewise.\n+\t(getPreferredSize): Simplified.\n+\t* javax/swing/JInternalFrame.java\n+\t(setDefaultCloseOperation): Fixed throwing exception on wrong argument\n+\tvalue.\n+\t* javax/swing/JWindow.java\n+\t(HIDE_ON_CLOSE): Removed.\n+\t(EXIT_ON_CLOSE): Likewise.\n+\t(DISPOSE_ON_CLOSE): Likewise.\n+\t(DO_NOTHING_ON_CLOSE): Likewise.\n+\t(close_action): Likewise.\n+\t(processKeyEvent): Likewise.\n+\t(setDefaultCloseOperation): Likewise.\n+\t(getPreferredSize): Simplified.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTextField.java\n+\t(getPreferredSize): Re-implemented.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JLabel.java\n+\t(setDisplayedMnemonic): Use only upper case characters.\n+\t(setDisplayedMnemonicIndex): Handle index == -1 and fire\n+\tPropertyChangeEvent after property got set to the new index.\n+\n+2005-02-15  Robert Schuster <thebohemian@gmx.net>\n+\n+\t* javax/swing/JComboBox.java:\n+\t(JComboBox): Removed selection of the\n+\tfirst item in the model.\n+\n+2005-02-15  Robert Schuster <thebohemian@gmx.net>\n+\n+\t* javax/swing/JComboBox.java\n+\tadded support for no item being selected\n+\t(JComboBox): select first or nothing depending on element count\n+\t(setModel): cleaned up unneeded \"this.\" usage, added more\n+\tdocs, made exception behavior match that of the JDK\n+\t(setLighWeightPopupEnabled): removed unneeded \"this.\" usage\n+\t(setEditable): dito\n+\t(setMaximumRowCount): dito\n+\t(setRenderer): dito\n+\t(setPrototypeDisplayValue): dito\n+\t(getSelectedItem): simplified, added more user doc\n+\t(setSelectedIndex): corrected exception behavior, added more user doc\n+\t(getSelectedIndex): fixed hardcoded dependency on DefaultComboBoxModel,\n+\tadded performance warning to user doc\n+\t(addItem): fixed exception behavior, added user doc\n+\t(insertItemAt): dito\n+\t(removeItem): dito\n+\t(removeItemAt): dito\n+\t(removeAll): fixed exception behavior, added user doc, added support\n+\tfor model not being instance of DefaultComboBoxModel\n+\t(getSelectedItemObjects): simplified\n+\t(getItemCount): fixed dependency on DefaultComboBoxModel\n+\t(getItemAt): fixed dependency on MutableComboBoxModel\n+\t* javax/swing/DefaultComboBoxModel.java:\n+\t(setSelectedItem): updates selected item only if new\n+\tvalue is null or known (match JDK behavior)\n+\t* javax/swing/plaf/basic/BasicComboBoxUI.java:\n+\t(paintCurrentValue): renders \"\" if no item is selected\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/plaf/metal/MetalTheme.java,\n+\tjavax/swing/plaf/metal/DefaultMetalTheme.java:\n+\tNew files.\n+\t* javax/swing/plaf/metal/MetalLookAndFeel.java\n+\t* Makefile.am: Added the new files.\n+\t* Makefile.in: Regenerated.\n+\n+2005-02-15  Olga Rodimina  <rodimina@redhat.com>\n+\n+\t* javax/swing/JTable.java\n+\t(editorComp): New field.\n+\t(JTable): Initialize local variables and call updateUI\n+\t(selectionBackground): Make protected.\n+\t(selectionForeground): Likewise.\n+\t(initializeLocalVars): Create default editors and renderers,\n+\tinitialize editingColumn, editingRow variables.\n+\t(createDefaultEditors): New Method.\n+\t(createDefaultRenderers): Likewise.\n+\t(createDefaultListSelectionModel): Removed\n+\t(createDefaultSelectionModel): New Method.\n+\t(createDefaultTableHeader): Likewise\n+\t(removeColumn): Likewise.\n+\t(getEditingColumn): Likewise.\n+\t(setEditingColumn): Likewise.\n+\t(getEditingRow): Likewise.\n+\t(setEditingRow): Likewise.\n+\t(getEditorComponent): Likewise.\n+\t(isEditing): Likewise.\n+\t(setDefaultEditor): Likewise.\n+\t(addColumnSelectionInterval): Likewise.\n+\t(addRowSelectionInterval): Likewise.\n+\t(setColumnSelectionInterval): Likewise.\n+\t(setRowSelectionInterval): Likewise.\n+\t(removeColumnSelectionInterval): Likewise.\n+\t(removeRowSelectionInterval): Likewise.\n+ \t(isColumnSelected): Likewise.\n+\t(isRowSelected): Likewise.\n+\t(isCellSelected): Likewise.\n+\t(selectAll): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTable.java\n+\t(addColumn): New method.\n+\t(getColumnClass): Likewise.\n+\t(getColumnName): Likewise.\n+\n+2005-02-15  Paul Jenner  <psj.home@ntlworld.com>\n+\n+\t* javax/swing/TransferHandler.java\n+\t(createTransferable): Made protected.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTable.java,\n+\tjavax/swing/plaf/basic/BasicTableHeaderUI.java,\n+\tjavax/swing/plaf/basic/BasicTableUI.java:\n+\tUse fixed get/setIntercellSpacing() methods.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTable.java\n+\t(getIntercellSpacing): Fixed typo in method name.\n+\t(setIntercellSpacing): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/JTextComponent.java\n+\t(focusAccelerator): New variable.\n+\t(getFocusAccelerator): New method.\n+\t(setFocusAccelerator): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JComponent.java\n+\t(setTransferHandler): Made public. Fire property change event.\n+\t* javax/swing/TransferHandler.java: Implemented.\n+\t* javax/swing/text/JTextComponent.java\n+\t(DefaultTransferHandler): New inner class.\n+\t(defaultTransferHandler): New variable.\n+\t(copy): New method.\n+\t(cut): Likewise.\n+\t(paste): Likewise.\n+\t(doTransferAction): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTree.java\n+\t(collapsePath): New method.\n+\t(collapseRow): Likewise.\n+\t(expandPath): Likewise.\n+\t(expandRow): Likewise.\n+\t(checkExpandParents): Likewise.\n+\t(doExpandParents): Likewise.\n+\t(setExpandedState): Likewise.\n+\t(makeVisible): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JPasswordField.java: Updated javadocs.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JLayeredPane.java\n+\t(getLayer): Fixed return type, made public.\n+\t(getPosition): Use new getLayer().\n+\t(SetPosition): Likewise.\n+\t(getIndexOf): Likewise.\n+\t(remove): Likewise.\n+\t* javax/swing/JInternalFrame.java\n+\t(getLayer): Use new JLayeredPane.getLayer().\n+\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/table/TableColumn.java: Added/fixed javadocs over all.\n+\t(setHeaderValue): Simplified. Do nothing when old value == new value.\n+\n+2005-02-15  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics.java (setClip): Protect\n+\tagainst null clip region.\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (create): Call\n+\tgtkWindowSetResizable.\n+\t(postConfigureEvent): Only revalidate if frame size has changed.\n+\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java (postConfigureEvent):\n+\tOnly revalidate if frame size has changed.\n+\t* java/awt/Component.java (reshape): Only repaint and post\n+\tcomponent events if component is showing.\n+\t* java/awt/Container.java (addImpl): Only post container event if\n+\tcontainer is showing.\n+\t(remove): Likewise.\n+\t* java/awt/Window.java (setLocationRelativeTo): Implement.\n+\t(setBoundsCallback): Only post component events if component is\n+\tshowing.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c (clearRect):\n+\tProtect against null graphics structure.  Flush gdk event queue.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/imageio/ImageReader.java,\n+\tjavax/imageio/ImageTranscoder.java,\n+\tjavax/imageio/ImageWriter.java,\n+\tjavax/imageio/spi/ImageInputStreamSpi.java,\n+\tjavax/imageio/spi/ImageOutputStreamSpi.java,\n+\tjavax/imageio/spi/ServiceRegistry.java,\n+\tjavax/imageio/stream/ImageInputStream.java,\n+\tjavax/imageio/stream/ImageOutputStream.java: Updated.\n+\t* javax/imageio/IIOException.java,\n+\tjavax/imageio/IIOImage.java,\n+\tjavax/imageio/IIOParam.java,\n+\tjavax/imageio/IIOParamController.java,\n+\tjavax/imageio/ImageIO.java,\n+\tjavax/imageio/ImageReadParam.java,\n+\tjavax/imageio/ImageTypeSpecifier.java,\n+\tjavax/imageio/ImageWriteParam.java,\n+\tjavax/imageio/spi/IIORegistry.java,\n+\tjavax/imageio/spi/ImageReaderSpi.java,\n+\tjavax/imageio/spi/ImageWriterSpi.java,\n+\tjavax/imageio/stream/FileCacheImageInputStream.java,\n+\tjavax/imageio/stream/FileCacheImageOutputStream.java,\n+\tjavax/imageio/stream/FileImageInputStream.java,\n+\tjavax/imageio/stream/FileImageOutputStream.java,\n+\tjavax/imageio/stream/ImageInputStreamImpl.java,\n+\tjavax/imageio/stream/ImageOutputStreamImpl.java,\n+\tjavax/imageio/stream/MemoryCacheImageInputStream.java,\n+\tjavax/imageio/stream/MemoryCacheImageOutputStream.java,\n+\tjavax/imageio/event/IIOReadProgressListener.java,\n+\tjavax/imageio/event/IIOReadUpdateListener.java,\n+\tjavax/imageio/event/IIOReadWarningListener.java,\n+\tjavax/imageio/event/IIOWriteProgressListener.java,\n+\tjavax/imageio/event/IIOWriteWarningListener.java,\n+\tjavax/imageio/metadata/IIOMetadata.java,\n+\tjavax/imageio/metadata/IIOMetadataController.java,\n+\tjavax/imageio/metadata/IIOMetadataFormat.java,\n+\tjavax/imageio/metadata/IIOInvalidTreeException.java,\n+\tjavax/imageio/metadata/IIOMetadataFormatImpl.java,\n+\tjavax/imageio/metadata/IIOMetadataNode.java: New files.\n+\t* Makefile.am (javax_source_files): Added new files\n+\t* Makefile.in: Regenerated.\n+\n+2005-02-15  Graydon Hoare  <graydon@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphics2D.java: \n+\tRework painting into BufferedImages\n+\t* gnu/java/awt/peer/gtk/GdkPixbufDecoder.java:\n+\tConstruct BufferedImage with alpha only when alpha is\n+\tpresent in colormodel.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c:\n+\tRework painting into client-side jint arrays.\n+\t* jni/gtk-peer/gtkcairopeer.h: \n+\tLikewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/DefaultListCellRenderer.java\n+\t(serialVersionUID): Made private.\n+\t(getListCellRendererComponent): Set horizontal alignment.\n+\t* javax/swing/JLabel.java\n+\t(setVerticalAlignment): Re-implemented.\n+\t(setHorizontalAlignment): Do nothing if old value = new value.\n+\t* javax/swing/JList.java\n+\t(setCellRenderer): Likewise.\n+\t(setModel): Re-implemented.\n+\t(setSelectionModel): Likewise.\n+\n+2005-02-15  David Gilbert <david.gilbert@object-refinery.com>\n+\n+\t* java/awt/Component.java,\n+\tjava/awt/geom/Rectangle2D.java:\n+\tJavadoc fixes.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractListModel.java\n+\t(fireContentsChanged): Simplified.\n+\t(fireIntervalAdded): Likewise.\n+\t(fireIntervalRemoved): Likewise.\n+\t* javax/swing/DefaultSingleSelectionModel.java:\n+\tReformatted.\n+\t(fireStateChanged): Simplified.\n+\t* javax/swing/JPopupMenu.java\n+\t(setSelectionModel): Set property.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/print/Book.java: Reformatted.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/geom/Area.java\n+\t(QuadSegment.curveArea): Remove unused variables.\n+\t(CubicSegment.curveArea): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JTree.java\n+\t(ANCHOR_SELECTION_PATH_PROPERTY): Added @since tag.\n+\t(LEAD_SELECTION_PATH_PROPERTY): Likewise.\n+\t(EXPANDS_SELECTED_PATHS_PROPERTY): Likewise.\n+\t(EXPANDED): New constant.\n+\t(COLLAPSED): Likewise.\n+\t(nodeStates): New field.\n+\t(cellEditor): New method.\n+\t(cellRenderer): Likewise.\n+\t(selectionModel): Likewise.\n+\t(treeModel): Likewise.\n+\t(scrollPathToVisible): Likewise.\n+\t(scrollRowToVisible): Likewise.\n+\t(isCollapsed): Likewise.\n+\t(isExpanded): Likewise.\n+\t(clearToggledPaths): Likewise.\n+\t(getDescendantToggledPaths): Likewise.\n+\t(hasBeenExpanded): Likewise.\n+\t(isVisible): Likewise.\n+\t(isPathEditable): Likewise.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JLayeredPane.java: Reformatted.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/tree/DefaultMutableTreeNode.java:\n+\tCompletely Revised.\n+\t* javax/swing/tree/MutableTreeNode.java:\n+\tReformatted.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JFormattedTextField.java\n+\t(setDocument): Call setDocument of super class. Don't fire property\n+\tchange event.\n+\n+2005-02-15  Sven de Marothy  <sven@physto.se>\n+\n+\t* java/awt/image/IndexColorModel.java:\n+\tAdd FIXME with respect to alpha handling.\n+\t(getAlpha): Default to returning opaque pixels. \n+\t* java/awt/image/MultiPixelPackedSampleModel.java\n+\t(MultiPixelPackedSampleModel): Corrected parameters, order of\n+\tbit shifts and masks, stride length off by one.\n+\n+2005-02-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JList.java, javax/swing/JTree.java:\n+\tAdded much new methods and fixed much methods setting bound properties.\n+\n 2005-02-16  Mark Wielaard  <mark@klomp.org>\n \n \t* Makefile.am (gnu_xml_source_files): Removed"}, {"sha": "3f17b35a8211e818e2672c83131efeef6ac636f7", "filename": "libjava/Makefile.am", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -262,12 +262,11 @@ endif\n gtk_c_source_files = \\\n $(gtk_cairo_c_source_files) \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c \\\n@@ -284,7 +283,6 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c \\\n@@ -314,8 +312,11 @@ gnu/java/awt/peer/gtk/GdkFontPeer.java \\\n gnu/java/awt/peer/gtk/GdkGlyphVector.java \\\n gnu/java/awt/peer/gtk/GdkGraphics.java \\\n gnu/java/awt/peer/gtk/GdkGraphics2D.java \\\n+gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java \\\n gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java \\\n gnu/java/awt/peer/gtk/GdkPixbufDecoder.java \\\n+gnu/java/awt/peer/gtk/GdkRobotPeer.java \\\n+gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java \\\n gnu/java/awt/peer/gtk/GtkButtonPeer.java \\\n gnu/java/awt/peer/gtk/GtkCanvasPeer.java \\\n gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.java\t\\\n@@ -334,7 +335,6 @@ gnu/java/awt/peer/gtk/GtkImage.java \\\n gnu/java/awt/peer/gtk/GtkImagePainter.java \\\n gnu/java/awt/peer/gtk/GtkLabelPeer.java\t\\\n gnu/java/awt/peer/gtk/GtkListPeer.java \\\n-gnu/java/awt/peer/gtk/GtkMainThread.java \\\n gnu/java/awt/peer/gtk/GtkMenuBarPeer.java \\\n gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java\t\\\n gnu/java/awt/peer/gtk/GtkMenuItemPeer.java \\\n@@ -355,8 +355,6 @@ gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java\n \n gtk_jni_headers = $(patsubst %.java,jniinclude/%.h,$(subst /,_,$(gtk_awt_peer_sources)))\n \n-jniinclude/gnu_java_awt_peer_gtk_GdkFontMetrics.h: gnu/java/awt/peer/gtk/GdkFontMetrics.java\n-jniinclude/gnu_java_awt_peer_gtk_GdkGlyphVector.h: gnu/java/awt/peer/gtk/GdkGlyphVector.java\n jniinclude/gnu_java_awt_peer_gtk_GdkGraphics.h: gnu/java/awt/peer/gtk/GdkGraphics.java\n jniinclude/gnu_java_awt_peer_gtk_GdkGraphics2D.h: gnu/java/awt/peer/gtk/GdkGraphics2D.java\n jniinclude/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.h: gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java\n@@ -380,7 +378,6 @@ jniinclude/gnu_java_awt_peer_gtk_GtkImage.h: gnu/java/awt/peer/gtk/GtkImage.java\n jniinclude/gnu_java_awt_peer_gtk_GtkImagePainter.h: gnu/java/awt/peer/gtk/GtkImagePainter.java\n jniinclude/gnu_java_awt_peer_gtk_GtkLabelPeer.h: gnu/java/awt/peer/gtk/GtkLabelPeer.java\n jniinclude/gnu_java_awt_peer_gtk_GtkListPeer.h: gnu/java/awt/peer/gtk/GtkListPeer.java\n-jniinclude/gnu_java_awt_peer_gtk_GtkMainThread.h: gnu/java/awt/peer/gtk/GtkMainThread.java\n jniinclude/gnu_java_awt_peer_gtk_GtkMenuBarPeer.h: gnu/java/awt/peer/gtk/GtkMenuBarPeer.java\n jniinclude/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.h: gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java\n jniinclude/gnu_java_awt_peer_gtk_GtkMenuItemPeer.h: gnu/java/awt/peer/gtk/GtkMenuItemPeer.java\n@@ -405,9 +402,7 @@ $(gtk_jni_headers): %.h:\n \techo \"$(GCJH) -jni -d jniinclude -classpath '' -bootclasspath $(top_builddir) $$input\"; \\\n \t$(GCJH) -jni -d jniinclude -classpath '' -bootclasspath $(top_builddir) $$input\n \n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkFontMetrics.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkFontPeer.h\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGlyphVector.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGraphics2D.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGraphics.h\n@@ -429,7 +424,6 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.lo: $(top_builddir)/jniinclude\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkImagePainter.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkLabelPeer.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkListPeer.h\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMainThread.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMenuBarPeer.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMenuItemPeer.h\n@@ -486,6 +480,7 @@ lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-@gcc_version@.jar libgcj.la libgcj.spe\n lib_gnu_awt_xlib_la_LIBADD = $(xlib_javao_files)\n ## We require libstdc++-v3 to be in the same build tree.\n lib_gnu_awt_xlib_la_CPPFLAGS = \\\n+\t$(AM_CPPFLAGS) \\\n \t-I../libstdc++-v3/include \\\n \t-I../libstdc++-v3/include/$(target_noncanonical) \\\n \t-I$(srcdir)/../libstdc++-v3/libsupc++\n@@ -1499,6 +1494,7 @@ javax/swing/plaf/basic/BasicComboBoxRenderer.java \\\n javax/swing/plaf/basic/BasicComboPopup.java \\\n javax/swing/plaf/basic/BasicDesktopIconUI.java \\\n javax/swing/plaf/basic/BasicDesktopPaneUI.java \\\n+javax/swing/plaf/basic/BasicEditorPaneUI.java \\\n javax/swing/plaf/basic/BasicFormattedTextFieldUI.java \\\n javax/swing/plaf/basic/BasicGraphicsUtils.java \\\n javax/swing/plaf/basic/BasicInternalFrameTitlePane.java \\\n@@ -1555,7 +1551,9 @@ javax/swing/plaf/TabbedPaneUI.java \\\n javax/swing/plaf/TextUI.java \\\n javax/swing/plaf/TreeUI.java \\\n javax/swing/plaf/ViewportUI.java \\\n+javax/swing/plaf/metal/DefaultMetalTheme.java \\\n javax/swing/plaf/metal/MetalLookAndFeel.java \\\n+javax/swing/plaf/metal/MetalTheme.java \\\n javax/swing/plaf/ColorUIResource.java \\\n javax/swing/plaf/DimensionUIResource.java \\\n javax/swing/plaf/FontUIResource.java \\\n@@ -1585,7 +1583,6 @@ javax/swing/plaf/TableUI.java \\\n javax/swing/plaf/ToolBarUI.java \\\n javax/swing/plaf/ToolTipUI.java \\\n javax/swing/AbstractListModel.java \\\n-javax/swing/AbstractSet.java \\\n javax/swing/colorchooser/AbstractColorChooserPanel.java \\\n javax/swing/colorchooser/ColorChooserComponentFactory.java \\\n javax/swing/colorchooser/ColorSelectionModel.java \\\n@@ -1615,12 +1612,12 @@ javax/swing/ButtonGroup.java \\\n javax/swing/ButtonModel.java \\\n javax/swing/ComponentInputMap.java \\\n javax/swing/DefaultButtonModel.java \\\n-javax/swing/DefaultCellRenderer.java \\\n javax/swing/DefaultListModel.java \\\n javax/swing/DefaultListSelectionModel.java \\\n javax/swing/Icon.java \\\n javax/swing/ImageIcon.java \\\n javax/swing/InputMap.java \\\n+javax/swing/InternalFrameFocusTraversalPolicy.java \\\n javax/swing/JApplet.java \\\n javax/swing/JButton.java \\\n javax/swing/JCheckBox.java \\\n@@ -1649,11 +1646,13 @@ javax/swing/JTree.java \\\n javax/swing/JViewport.java \\\n javax/swing/JWindow.java \\\n javax/swing/KeyStroke.java \\\n+javax/swing/LayoutFocusTraversalPolicy.java \\\n javax/swing/ListCellRenderer.java \\\n javax/swing/ListModel.java \\\n javax/swing/ListSelectionModel.java \\\n javax/swing/LookAndFeel.java \\\n javax/swing/Scrollable.java \\\n+javax/swing/SortingFocusTraversalPolicy.java \\\n javax/swing/SpinnerListModel.java \\\n javax/swing/SpinnerModel.java \\\n javax/swing/SpinnerNumberModel.java \\\n@@ -1719,6 +1718,7 @@ javax/swing/text/ComponentView.java \\\n javax/swing/text/DefaultCaret.java \\\n javax/swing/text/DefaultEditorKit.java \\\n javax/swing/text/DefaultHighlighter.java \\\n+javax/swing/text/DefaultStyledDocument.java \\\n javax/swing/text/Document.java \\\n javax/swing/text/DocumentFilter.java \\\n javax/swing/text/EditorKit.java \\\n@@ -1737,6 +1737,7 @@ javax/swing/text/PlainView.java \\\n javax/swing/text/Position.java \\\n javax/swing/text/Segment.java \\\n javax/swing/text/SimpleAttributeSet.java \\\n+javax/swing/text/StringContent.java \\\n javax/swing/text/Style.java \\\n javax/swing/text/StyleConstants.java \\\n javax/swing/text/StyleContext.java \\"}, {"sha": "0f09d77eda71398f4df524f066c9cc4eafe06111", "filename": "libjava/Makefile.in", "status": "modified", "additions": 149, "deletions": 98, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -146,8 +146,11 @@ am__lib_gnu_java_awt_peer_gtk_la_SOURCES_DIST =  \\\n \tgnu/java/awt/peer/gtk/GdkGlyphVector.java \\\n \tgnu/java/awt/peer/gtk/GdkGraphics.java \\\n \tgnu/java/awt/peer/gtk/GdkGraphics2D.java \\\n+\tgnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java \\\n \tgnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java \\\n \tgnu/java/awt/peer/gtk/GdkPixbufDecoder.java \\\n+\tgnu/java/awt/peer/gtk/GdkRobotPeer.java \\\n+\tgnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java \\\n \tgnu/java/awt/peer/gtk/GtkButtonPeer.java \\\n \tgnu/java/awt/peer/gtk/GtkCanvasPeer.java \\\n \tgnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.java \\\n@@ -166,7 +169,6 @@ am__lib_gnu_java_awt_peer_gtk_la_SOURCES_DIST =  \\\n \tgnu/java/awt/peer/gtk/GtkImagePainter.java \\\n \tgnu/java/awt/peer/gtk/GtkLabelPeer.java \\\n \tgnu/java/awt/peer/gtk/GtkListPeer.java \\\n-\tgnu/java/awt/peer/gtk/GtkMainThread.java \\\n \tgnu/java/awt/peer/gtk/GtkMenuBarPeer.java \\\n \tgnu/java/awt/peer/gtk/GtkMenuComponentPeer.java \\\n \tgnu/java/awt/peer/gtk/GtkMenuItemPeer.java \\\n@@ -185,12 +187,11 @@ am__lib_gnu_java_awt_peer_gtk_la_SOURCES_DIST =  \\\n \tgnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c \\\n-\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c \\\n-\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c \\\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c \\\n@@ -207,7 +208,6 @@ am__lib_gnu_java_awt_peer_gtk_la_SOURCES_DIST =  \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c \\\n-\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.c \\\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c \\\n@@ -234,8 +234,11 @@ am__objects_3 = gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkTextLayout\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGlyphVector.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphics.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphics2D.lo \\\n+\tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.lo \\\n+\tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.lo \\\n+\tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkCanvasPeer.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkCheckboxGroupPeer.lo \\\n@@ -254,7 +257,6 @@ am__objects_3 = gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkTextLayout\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkImagePainter.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkLabelPeer.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkListPeer.lo \\\n-\tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMenuComponentPeer.lo \\\n \tgnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMenuItemPeer.lo \\\n@@ -274,12 +276,11 @@ am__objects_3 = gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkTextLayout\n @GTK_CAIRO_TRUE@am__objects_4 = jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics2D.lo\n am__objects_5 = $(am__objects_4) \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkTextLayout.lo \\\n-\tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.lo \\\n-\tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo \\\n+\tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkCanvasPeer.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.lo \\\n@@ -296,7 +297,6 @@ am__objects_5 = $(am__objects_4) \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkImagePainter.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkLabelPeer.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkListPeer.lo \\\n-\tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuComponentPeer.lo \\\n \tjni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo \\\n@@ -1621,6 +1621,7 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjavax/swing/plaf/basic/BasicComboPopup.java \\\n \tjavax/swing/plaf/basic/BasicDesktopIconUI.java \\\n \tjavax/swing/plaf/basic/BasicDesktopPaneUI.java \\\n+\tjavax/swing/plaf/basic/BasicEditorPaneUI.java \\\n \tjavax/swing/plaf/basic/BasicFormattedTextFieldUI.java \\\n \tjavax/swing/plaf/basic/BasicGraphicsUtils.java \\\n \tjavax/swing/plaf/basic/BasicInternalFrameTitlePane.java \\\n@@ -1675,7 +1676,9 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjavax/swing/plaf/TabbedPaneUI.java \\\n \tjavax/swing/plaf/TextUI.java javax/swing/plaf/TreeUI.java \\\n \tjavax/swing/plaf/ViewportUI.java \\\n+\tjavax/swing/plaf/metal/DefaultMetalTheme.java \\\n \tjavax/swing/plaf/metal/MetalLookAndFeel.java \\\n+\tjavax/swing/plaf/metal/MetalTheme.java \\\n \tjavax/swing/plaf/ColorUIResource.java \\\n \tjavax/swing/plaf/DimensionUIResource.java \\\n \tjavax/swing/plaf/FontUIResource.java \\\n@@ -1703,7 +1706,6 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjavax/swing/plaf/TableUI.java javax/swing/plaf/ToolBarUI.java \\\n \tjavax/swing/plaf/ToolTipUI.java \\\n \tjavax/swing/AbstractListModel.java \\\n-\tjavax/swing/AbstractSet.java \\\n \tjavax/swing/colorchooser/AbstractColorChooserPanel.java \\\n \tjavax/swing/colorchooser/ColorChooserComponentFactory.java \\\n \tjavax/swing/colorchooser/ColorSelectionModel.java \\\n@@ -1730,14 +1732,14 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjavax/swing/ButtonGroup.java javax/swing/ButtonModel.java \\\n \tjavax/swing/ComponentInputMap.java \\\n \tjavax/swing/DefaultButtonModel.java \\\n-\tjavax/swing/DefaultCellRenderer.java \\\n \tjavax/swing/DefaultListModel.java \\\n \tjavax/swing/DefaultListSelectionModel.java \\\n \tjavax/swing/Icon.java javax/swing/ImageIcon.java \\\n-\tjavax/swing/InputMap.java javax/swing/JApplet.java \\\n-\tjavax/swing/JButton.java javax/swing/JCheckBox.java \\\n-\tjavax/swing/JComponent.java javax/swing/JDialog.java \\\n-\tjavax/swing/JEditorPane.java \\\n+\tjavax/swing/InputMap.java \\\n+\tjavax/swing/InternalFrameFocusTraversalPolicy.java \\\n+\tjavax/swing/JApplet.java javax/swing/JButton.java \\\n+\tjavax/swing/JCheckBox.java javax/swing/JComponent.java \\\n+\tjavax/swing/JDialog.java javax/swing/JEditorPane.java \\\n \tjavax/swing/JFormattedTextField.java javax/swing/JFrame.java \\\n \tjavax/swing/JLabel.java javax/swing/JLayeredPane.java \\\n \tjavax/swing/JList.java javax/swing/JMenuBar.java \\\n@@ -1749,9 +1751,11 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjavax/swing/JToggleButton.java javax/swing/JToolTip.java \\\n \tjavax/swing/JTree.java javax/swing/JViewport.java \\\n \tjavax/swing/JWindow.java javax/swing/KeyStroke.java \\\n+\tjavax/swing/LayoutFocusTraversalPolicy.java \\\n \tjavax/swing/ListCellRenderer.java javax/swing/ListModel.java \\\n \tjavax/swing/ListSelectionModel.java \\\n \tjavax/swing/LookAndFeel.java javax/swing/Scrollable.java \\\n+\tjavax/swing/SortingFocusTraversalPolicy.java \\\n \tjavax/swing/SpinnerListModel.java \\\n \tjavax/swing/SpinnerModel.java \\\n \tjavax/swing/SpinnerNumberModel.java javax/swing/Spring.java \\\n@@ -1813,6 +1817,7 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjavax/swing/text/DefaultCaret.java \\\n \tjavax/swing/text/DefaultEditorKit.java \\\n \tjavax/swing/text/DefaultHighlighter.java \\\n+\tjavax/swing/text/DefaultStyledDocument.java \\\n \tjavax/swing/text/Document.java \\\n \tjavax/swing/text/DocumentFilter.java \\\n \tjavax/swing/text/EditorKit.java javax/swing/text/Element.java \\\n@@ -1829,6 +1834,7 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjavax/swing/text/PlainView.java javax/swing/text/Position.java \\\n \tjavax/swing/text/Segment.java \\\n \tjavax/swing/text/SimpleAttributeSet.java \\\n+\tjavax/swing/text/StringContent.java \\\n \tjavax/swing/text/Style.java \\\n \tjavax/swing/text/StyleConstants.java \\\n \tjavax/swing/text/StyleContext.java \\\n@@ -3148,6 +3154,7 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/plaf/basic/BasicComboPopup.lo \\\n \tjavax/swing/plaf/basic/BasicDesktopIconUI.lo \\\n \tjavax/swing/plaf/basic/BasicDesktopPaneUI.lo \\\n+\tjavax/swing/plaf/basic/BasicEditorPaneUI.lo \\\n \tjavax/swing/plaf/basic/BasicFormattedTextFieldUI.lo \\\n \tjavax/swing/plaf/basic/BasicGraphicsUtils.lo \\\n \tjavax/swing/plaf/basic/BasicInternalFrameTitlePane.lo \\\n@@ -3198,7 +3205,9 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/plaf/PanelUI.lo javax/swing/plaf/ScrollPaneUI.lo \\\n \tjavax/swing/plaf/TabbedPaneUI.lo javax/swing/plaf/TextUI.lo \\\n \tjavax/swing/plaf/TreeUI.lo javax/swing/plaf/ViewportUI.lo \\\n+\tjavax/swing/plaf/metal/DefaultMetalTheme.lo \\\n \tjavax/swing/plaf/metal/MetalLookAndFeel.lo \\\n+\tjavax/swing/plaf/metal/MetalTheme.lo \\\n \tjavax/swing/plaf/ColorUIResource.lo \\\n \tjavax/swing/plaf/DimensionUIResource.lo \\\n \tjavax/swing/plaf/FontUIResource.lo \\\n@@ -3221,7 +3230,7 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/plaf/SpinnerUI.lo javax/swing/plaf/SplitPaneUI.lo \\\n \tjavax/swing/plaf/TableHeaderUI.lo javax/swing/plaf/TableUI.lo \\\n \tjavax/swing/plaf/ToolBarUI.lo javax/swing/plaf/ToolTipUI.lo \\\n-\tjavax/swing/AbstractListModel.lo javax/swing/AbstractSet.lo \\\n+\tjavax/swing/AbstractListModel.lo \\\n \tjavax/swing/colorchooser/AbstractColorChooserPanel.lo \\\n \tjavax/swing/colorchooser/ColorChooserComponentFactory.lo \\\n \tjavax/swing/colorchooser/ColorSelectionModel.lo \\\n@@ -3248,10 +3257,10 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/ButtonGroup.lo javax/swing/ButtonModel.lo \\\n \tjavax/swing/ComponentInputMap.lo \\\n \tjavax/swing/DefaultButtonModel.lo \\\n-\tjavax/swing/DefaultCellRenderer.lo \\\n \tjavax/swing/DefaultListModel.lo \\\n \tjavax/swing/DefaultListSelectionModel.lo javax/swing/Icon.lo \\\n \tjavax/swing/ImageIcon.lo javax/swing/InputMap.lo \\\n+\tjavax/swing/InternalFrameFocusTraversalPolicy.lo \\\n \tjavax/swing/JApplet.lo javax/swing/JButton.lo \\\n \tjavax/swing/JCheckBox.lo javax/swing/JComponent.lo \\\n \tjavax/swing/JDialog.lo javax/swing/JEditorPane.lo \\\n@@ -3266,15 +3275,17 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/JToggleButton.lo javax/swing/JToolTip.lo \\\n \tjavax/swing/JTree.lo javax/swing/JViewport.lo \\\n \tjavax/swing/JWindow.lo javax/swing/KeyStroke.lo \\\n+\tjavax/swing/LayoutFocusTraversalPolicy.lo \\\n \tjavax/swing/ListCellRenderer.lo javax/swing/ListModel.lo \\\n \tjavax/swing/ListSelectionModel.lo javax/swing/LookAndFeel.lo \\\n-\tjavax/swing/Scrollable.lo javax/swing/SpinnerListModel.lo \\\n-\tjavax/swing/SpinnerModel.lo javax/swing/SpinnerNumberModel.lo \\\n-\tjavax/swing/Spring.lo javax/swing/SpringLayout.lo \\\n-\tjavax/swing/SwingConstants.lo javax/swing/SwingUtilities.lo \\\n-\tjavax/swing/Timer.lo javax/swing/ToolTipManager.lo \\\n-\tjavax/swing/TransferHandler.lo javax/swing/UIDefaults.lo \\\n-\tjavax/swing/UIManager.lo \\\n+\tjavax/swing/Scrollable.lo \\\n+\tjavax/swing/SortingFocusTraversalPolicy.lo \\\n+\tjavax/swing/SpinnerListModel.lo javax/swing/SpinnerModel.lo \\\n+\tjavax/swing/SpinnerNumberModel.lo javax/swing/Spring.lo \\\n+\tjavax/swing/SpringLayout.lo javax/swing/SwingConstants.lo \\\n+\tjavax/swing/SwingUtilities.lo javax/swing/Timer.lo \\\n+\tjavax/swing/ToolTipManager.lo javax/swing/TransferHandler.lo \\\n+\tjavax/swing/UIDefaults.lo javax/swing/UIManager.lo \\\n \tjavax/swing/UnsupportedLookAndFeelException.lo \\\n \tjavax/swing/event/AncestorEvent.lo \\\n \tjavax/swing/event/AncestorListener.lo \\\n@@ -3326,6 +3337,7 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/text/DefaultCaret.lo \\\n \tjavax/swing/text/DefaultEditorKit.lo \\\n \tjavax/swing/text/DefaultHighlighter.lo \\\n+\tjavax/swing/text/DefaultStyledDocument.lo \\\n \tjavax/swing/text/Document.lo \\\n \tjavax/swing/text/DocumentFilter.lo \\\n \tjavax/swing/text/EditorKit.lo javax/swing/text/Element.lo \\\n@@ -3340,7 +3352,8 @@ am__objects_11 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/text/PlainView.lo javax/swing/text/Position.lo \\\n \tjavax/swing/text/Segment.lo \\\n \tjavax/swing/text/SimpleAttributeSet.lo \\\n-\tjavax/swing/text/Style.lo javax/swing/text/StyleConstants.lo \\\n+\tjavax/swing/text/StringContent.lo javax/swing/text/Style.lo \\\n+\tjavax/swing/text/StyleConstants.lo \\\n \tjavax/swing/text/StyleContext.lo \\\n \tjavax/swing/text/StyledDocument.lo \\\n \tjavax/swing/text/StyledEditorKit.lo \\\n@@ -5050,12 +5063,11 @@ libgcj_la_LINK = $(LIBLINK)\n gtk_c_source_files = \\\n $(gtk_cairo_c_source_files) \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer.c \\\n@@ -5072,7 +5084,6 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c \\\n@@ -5101,8 +5112,11 @@ gnu/java/awt/peer/gtk/GdkFontPeer.java \\\n gnu/java/awt/peer/gtk/GdkGlyphVector.java \\\n gnu/java/awt/peer/gtk/GdkGraphics.java \\\n gnu/java/awt/peer/gtk/GdkGraphics2D.java \\\n+gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java \\\n gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java \\\n gnu/java/awt/peer/gtk/GdkPixbufDecoder.java \\\n+gnu/java/awt/peer/gtk/GdkRobotPeer.java \\\n+gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java \\\n gnu/java/awt/peer/gtk/GtkButtonPeer.java \\\n gnu/java/awt/peer/gtk/GtkCanvasPeer.java \\\n gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.java\t\\\n@@ -5121,7 +5135,6 @@ gnu/java/awt/peer/gtk/GtkImage.java \\\n gnu/java/awt/peer/gtk/GtkImagePainter.java \\\n gnu/java/awt/peer/gtk/GtkLabelPeer.java\t\\\n gnu/java/awt/peer/gtk/GtkListPeer.java \\\n-gnu/java/awt/peer/gtk/GtkMainThread.java \\\n gnu/java/awt/peer/gtk/GtkMenuBarPeer.java \\\n gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java\t\\\n gnu/java/awt/peer/gtk/GtkMenuItemPeer.java \\\n@@ -5177,6 +5190,7 @@ lib_gnu_awt_xlib_la_SOURCES = \\\n lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-@gcc_version@.jar libgcj.la libgcj.spec\n lib_gnu_awt_xlib_la_LIBADD = $(xlib_javao_files)\n lib_gnu_awt_xlib_la_CPPFLAGS = \\\n+\t$(AM_CPPFLAGS) \\\n \t-I../libstdc++-v3/include \\\n \t-I../libstdc++-v3/include/$(target_noncanonical) \\\n \t-I$(srcdir)/../libstdc++-v3/libsupc++\n@@ -5745,6 +5759,7 @@ javax/swing/plaf/basic/BasicComboBoxRenderer.java \\\n javax/swing/plaf/basic/BasicComboPopup.java \\\n javax/swing/plaf/basic/BasicDesktopIconUI.java \\\n javax/swing/plaf/basic/BasicDesktopPaneUI.java \\\n+javax/swing/plaf/basic/BasicEditorPaneUI.java \\\n javax/swing/plaf/basic/BasicFormattedTextFieldUI.java \\\n javax/swing/plaf/basic/BasicGraphicsUtils.java \\\n javax/swing/plaf/basic/BasicInternalFrameTitlePane.java \\\n@@ -5801,7 +5816,9 @@ javax/swing/plaf/TabbedPaneUI.java \\\n javax/swing/plaf/TextUI.java \\\n javax/swing/plaf/TreeUI.java \\\n javax/swing/plaf/ViewportUI.java \\\n+javax/swing/plaf/metal/DefaultMetalTheme.java \\\n javax/swing/plaf/metal/MetalLookAndFeel.java \\\n+javax/swing/plaf/metal/MetalTheme.java \\\n javax/swing/plaf/ColorUIResource.java \\\n javax/swing/plaf/DimensionUIResource.java \\\n javax/swing/plaf/FontUIResource.java \\\n@@ -5831,7 +5848,6 @@ javax/swing/plaf/TableUI.java \\\n javax/swing/plaf/ToolBarUI.java \\\n javax/swing/plaf/ToolTipUI.java \\\n javax/swing/AbstractListModel.java \\\n-javax/swing/AbstractSet.java \\\n javax/swing/colorchooser/AbstractColorChooserPanel.java \\\n javax/swing/colorchooser/ColorChooserComponentFactory.java \\\n javax/swing/colorchooser/ColorSelectionModel.java \\\n@@ -5861,12 +5877,12 @@ javax/swing/ButtonGroup.java \\\n javax/swing/ButtonModel.java \\\n javax/swing/ComponentInputMap.java \\\n javax/swing/DefaultButtonModel.java \\\n-javax/swing/DefaultCellRenderer.java \\\n javax/swing/DefaultListModel.java \\\n javax/swing/DefaultListSelectionModel.java \\\n javax/swing/Icon.java \\\n javax/swing/ImageIcon.java \\\n javax/swing/InputMap.java \\\n+javax/swing/InternalFrameFocusTraversalPolicy.java \\\n javax/swing/JApplet.java \\\n javax/swing/JButton.java \\\n javax/swing/JCheckBox.java \\\n@@ -5895,11 +5911,13 @@ javax/swing/JTree.java \\\n javax/swing/JViewport.java \\\n javax/swing/JWindow.java \\\n javax/swing/KeyStroke.java \\\n+javax/swing/LayoutFocusTraversalPolicy.java \\\n javax/swing/ListCellRenderer.java \\\n javax/swing/ListModel.java \\\n javax/swing/ListSelectionModel.java \\\n javax/swing/LookAndFeel.java \\\n javax/swing/Scrollable.java \\\n+javax/swing/SortingFocusTraversalPolicy.java \\\n javax/swing/SpinnerListModel.java \\\n javax/swing/SpinnerModel.java \\\n javax/swing/SpinnerNumberModel.java \\\n@@ -5965,6 +5983,7 @@ javax/swing/text/ComponentView.java \\\n javax/swing/text/DefaultCaret.java \\\n javax/swing/text/DefaultEditorKit.java \\\n javax/swing/text/DefaultHighlighter.java \\\n+javax/swing/text/DefaultStyledDocument.java \\\n javax/swing/text/Document.java \\\n javax/swing/text/DocumentFilter.java \\\n javax/swing/text/EditorKit.java \\\n@@ -5983,6 +6002,7 @@ javax/swing/text/PlainView.java \\\n javax/swing/text/Position.java \\\n javax/swing/text/Segment.java \\\n javax/swing/text/SimpleAttributeSet.java \\\n+javax/swing/text/StringContent.java \\\n javax/swing/text/Style.java \\\n javax/swing/text/StyleConstants.java \\\n javax/swing/text/StyleContext.java \\\n@@ -8241,12 +8261,21 @@ gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphics.lo:  \\\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphics2D.lo:  \\\n \tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n \tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n+gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.lo:  \\\n+\tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n+\tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.lo:  \\\n \tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n \tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.lo:  \\\n \tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n \tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n+gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.lo:  \\\n+\tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n+\tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n+gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.lo:  \\\n+\tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n+\tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo:  \\\n \tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n \tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n@@ -8301,9 +8330,6 @@ gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkLabelPeer.lo:  \\\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkListPeer.lo:  \\\n \tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n \tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n-gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.lo:  \\\n-\tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n-\tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.lo:  \\\n \tgnu/java/awt/peer/gtk/$(am__dirstamp) \\\n \tgnu/java/awt/peer/gtk/$(DEPDIR)/$(am__dirstamp)\n@@ -8364,15 +8390,9 @@ jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics2D.lo\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkTextLayout.lo:  \\\n \tjni/gtk-peer/$(am__dirstamp) \\\n \tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n-jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.lo:  \\\n-\tjni/gtk-peer/$(am__dirstamp) \\\n-\tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.lo:  \\\n \tjni/gtk-peer/$(am__dirstamp) \\\n \tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n-jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.lo:  \\\n-\tjni/gtk-peer/$(am__dirstamp) \\\n-\tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.lo:  \\\n \tjni/gtk-peer/$(am__dirstamp) \\\n \tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n@@ -8382,6 +8402,9 @@ jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphicsEnvir\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo:  \\\n \tjni/gtk-peer/$(am__dirstamp) \\\n \tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n+jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.lo:  \\\n+\tjni/gtk-peer/$(am__dirstamp) \\\n+\tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.lo:  \\\n \tjni/gtk-peer/$(am__dirstamp) \\\n \tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n@@ -8430,9 +8453,6 @@ jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkLabelPeer.lo:\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkListPeer.lo:  \\\n \tjni/gtk-peer/$(am__dirstamp) \\\n \tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n-jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.lo:  \\\n-\tjni/gtk-peer/$(am__dirstamp) \\\n-\tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo:  \\\n \tjni/gtk-peer/$(am__dirstamp) \\\n \tjni/gtk-peer/$(DEPDIR)/$(am__dirstamp)\n@@ -12811,6 +12831,9 @@ javax/swing/plaf/basic/BasicDesktopIconUI.lo:  \\\n javax/swing/plaf/basic/BasicDesktopPaneUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/basic/BasicEditorPaneUI.lo:  \\\n+\tjavax/swing/plaf/basic/$(am__dirstamp) \\\n+\tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/basic/BasicFormattedTextFieldUI.lo:  \\\n \tjavax/swing/plaf/basic/$(am__dirstamp) \\\n \tjavax/swing/plaf/basic/$(DEPDIR)/$(am__dirstamp)\n@@ -12979,9 +13002,15 @@ javax/swing/plaf/metal/$(am__dirstamp):\n javax/swing/plaf/metal/$(DEPDIR)/$(am__dirstamp):\n \t@$(mkdir_p) javax/swing/plaf/metal/$(DEPDIR)\n \t@: > javax/swing/plaf/metal/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/metal/DefaultMetalTheme.lo:  \\\n+\tjavax/swing/plaf/metal/$(am__dirstamp) \\\n+\tjavax/swing/plaf/metal/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/metal/MetalLookAndFeel.lo:  \\\n \tjavax/swing/plaf/metal/$(am__dirstamp) \\\n \tjavax/swing/plaf/metal/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/plaf/metal/MetalTheme.lo:  \\\n+\tjavax/swing/plaf/metal/$(am__dirstamp) \\\n+\tjavax/swing/plaf/metal/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/ColorUIResource.lo: javax/swing/plaf/$(am__dirstamp) \\\n \tjavax/swing/plaf/$(DEPDIR)/$(am__dirstamp)\n javax/swing/plaf/DimensionUIResource.lo:  \\\n@@ -13045,8 +13074,6 @@ javax/swing/plaf/ToolTipUI.lo: javax/swing/plaf/$(am__dirstamp) \\\n \tjavax/swing/plaf/$(DEPDIR)/$(am__dirstamp)\n javax/swing/AbstractListModel.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n-javax/swing/AbstractSet.lo: javax/swing/$(am__dirstamp) \\\n-\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/colorchooser/$(am__dirstamp):\n \t@$(mkdir_p) javax/swing/colorchooser\n \t@: > javax/swing/colorchooser/$(am__dirstamp)\n@@ -13141,8 +13168,6 @@ javax/swing/ComponentInputMap.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/DefaultButtonModel.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n-javax/swing/DefaultCellRenderer.lo: javax/swing/$(am__dirstamp) \\\n-\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/DefaultListModel.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/DefaultListSelectionModel.lo: javax/swing/$(am__dirstamp) \\\n@@ -13153,6 +13178,9 @@ javax/swing/ImageIcon.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/InputMap.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/InternalFrameFocusTraversalPolicy.lo:  \\\n+\tjavax/swing/$(am__dirstamp) \\\n+\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/JApplet.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/JButton.lo: javax/swing/$(am__dirstamp) \\\n@@ -13209,6 +13237,9 @@ javax/swing/JWindow.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/KeyStroke.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/LayoutFocusTraversalPolicy.lo:  \\\n+\tjavax/swing/$(am__dirstamp) \\\n+\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/ListCellRenderer.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/ListModel.lo: javax/swing/$(am__dirstamp) \\\n@@ -13219,6 +13250,9 @@ javax/swing/LookAndFeel.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/Scrollable.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/SortingFocusTraversalPolicy.lo:  \\\n+\tjavax/swing/$(am__dirstamp) \\\n+\tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/SpinnerListModel.lo: javax/swing/$(am__dirstamp) \\\n \tjavax/swing/$(DEPDIR)/$(am__dirstamp)\n javax/swing/SpinnerModel.lo: javax/swing/$(am__dirstamp) \\\n@@ -13400,6 +13434,9 @@ javax/swing/text/DefaultEditorKit.lo:  \\\n javax/swing/text/DefaultHighlighter.lo:  \\\n \tjavax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/DefaultStyledDocument.lo:  \\\n+\tjavax/swing/text/$(am__dirstamp) \\\n+\tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/Document.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/DocumentFilter.lo: javax/swing/text/$(am__dirstamp) \\\n@@ -13440,6 +13477,8 @@ javax/swing/text/Segment.lo: javax/swing/text/$(am__dirstamp) \\\n javax/swing/text/SimpleAttributeSet.lo:  \\\n \tjavax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/StringContent.lo: javax/swing/text/$(am__dirstamp) \\\n+\tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/Style.lo: javax/swing/text/$(am__dirstamp) \\\n \tjavax/swing/text/$(DEPDIR)/$(am__dirstamp)\n javax/swing/text/StyleConstants.lo: javax/swing/text/$(am__dirstamp) \\\n@@ -16083,10 +16122,16 @@ mostlyclean-compile:\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphics.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphics2D.$(OBJEXT)\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphics2D.lo\n+\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.$(OBJEXT)\n+\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.$(OBJEXT)\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.$(OBJEXT)\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.lo\n+\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.$(OBJEXT)\n+\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.lo\n+\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.$(OBJEXT)\n+\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkTextLayout.$(OBJEXT)\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkTextLayout.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.$(OBJEXT)\n@@ -16125,8 +16170,6 @@ mostlyclean-compile:\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkLabelPeer.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkListPeer.$(OBJEXT)\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkListPeer.lo\n-\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.$(OBJEXT)\n-\t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.$(OBJEXT)\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.lo\n \t-rm -f gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMenuComponentPeer.$(OBJEXT)\n@@ -20335,8 +20378,6 @@ mostlyclean-compile:\n \t-rm -f javax/swing/AbstractCellEditor.lo\n \t-rm -f javax/swing/AbstractListModel.$(OBJEXT)\n \t-rm -f javax/swing/AbstractListModel.lo\n-\t-rm -f javax/swing/AbstractSet.$(OBJEXT)\n-\t-rm -f javax/swing/AbstractSet.lo\n \t-rm -f javax/swing/AbstractSpinnerModel.$(OBJEXT)\n \t-rm -f javax/swing/AbstractSpinnerModel.lo\n \t-rm -f javax/swing/Action.$(OBJEXT)\n@@ -20373,8 +20414,6 @@ mostlyclean-compile:\n \t-rm -f javax/swing/DefaultButtonModel.lo\n \t-rm -f javax/swing/DefaultCellEditor.$(OBJEXT)\n \t-rm -f javax/swing/DefaultCellEditor.lo\n-\t-rm -f javax/swing/DefaultCellRenderer.$(OBJEXT)\n-\t-rm -f javax/swing/DefaultCellRenderer.lo\n \t-rm -f javax/swing/DefaultComboBoxModel.$(OBJEXT)\n \t-rm -f javax/swing/DefaultComboBoxModel.lo\n \t-rm -f javax/swing/DefaultDesktopManager.$(OBJEXT)\n@@ -20403,6 +20442,8 @@ mostlyclean-compile:\n \t-rm -f javax/swing/InputMap.lo\n \t-rm -f javax/swing/InputVerifier.$(OBJEXT)\n \t-rm -f javax/swing/InputVerifier.lo\n+\t-rm -f javax/swing/InternalFrameFocusTraversalPolicy.$(OBJEXT)\n+\t-rm -f javax/swing/InternalFrameFocusTraversalPolicy.lo\n \t-rm -f javax/swing/JApplet.$(OBJEXT)\n \t-rm -f javax/swing/JApplet.lo\n \t-rm -f javax/swing/JButton.$(OBJEXT)\n@@ -20495,6 +20536,8 @@ mostlyclean-compile:\n \t-rm -f javax/swing/JWindow.lo\n \t-rm -f javax/swing/KeyStroke.$(OBJEXT)\n \t-rm -f javax/swing/KeyStroke.lo\n+\t-rm -f javax/swing/LayoutFocusTraversalPolicy.$(OBJEXT)\n+\t-rm -f javax/swing/LayoutFocusTraversalPolicy.lo\n \t-rm -f javax/swing/ListCellRenderer.$(OBJEXT)\n \t-rm -f javax/swing/ListCellRenderer.lo\n \t-rm -f javax/swing/ListModel.$(OBJEXT)\n@@ -20537,6 +20580,8 @@ mostlyclean-compile:\n \t-rm -f javax/swing/SizeRequirements.lo\n \t-rm -f javax/swing/SizeSequence.$(OBJEXT)\n \t-rm -f javax/swing/SizeSequence.lo\n+\t-rm -f javax/swing/SortingFocusTraversalPolicy.$(OBJEXT)\n+\t-rm -f javax/swing/SortingFocusTraversalPolicy.lo\n \t-rm -f javax/swing/SpinnerListModel.$(OBJEXT)\n \t-rm -f javax/swing/SpinnerListModel.lo\n \t-rm -f javax/swing/SpinnerModel.$(OBJEXT)\n@@ -20803,6 +20848,8 @@ mostlyclean-compile:\n \t-rm -f javax/swing/plaf/basic/BasicDesktopIconUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicDesktopPaneUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicDesktopPaneUI.lo\n+\t-rm -f javax/swing/plaf/basic/BasicEditorPaneUI.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/basic/BasicEditorPaneUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicFormattedTextFieldUI.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/BasicFormattedTextFieldUI.lo\n \t-rm -f javax/swing/plaf/basic/BasicGraphicsUtils.$(OBJEXT)\n@@ -20885,8 +20932,12 @@ mostlyclean-compile:\n \t-rm -f javax/swing/plaf/basic/BasicViewportUI.lo\n \t-rm -f javax/swing/plaf/basic/ComboPopup.$(OBJEXT)\n \t-rm -f javax/swing/plaf/basic/ComboPopup.lo\n+\t-rm -f javax/swing/plaf/metal/DefaultMetalTheme.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/metal/DefaultMetalTheme.lo\n \t-rm -f javax/swing/plaf/metal/MetalLookAndFeel.$(OBJEXT)\n \t-rm -f javax/swing/plaf/metal/MetalLookAndFeel.lo\n+\t-rm -f javax/swing/plaf/metal/MetalTheme.$(OBJEXT)\n+\t-rm -f javax/swing/plaf/metal/MetalTheme.lo\n \t-rm -f javax/swing/table/AbstractTableModel.$(OBJEXT)\n \t-rm -f javax/swing/table/AbstractTableModel.lo\n \t-rm -f javax/swing/table/DefaultTableCellRenderer.$(OBJEXT)\n@@ -20923,6 +20974,8 @@ mostlyclean-compile:\n \t-rm -f javax/swing/text/DefaultEditorKit.lo\n \t-rm -f javax/swing/text/DefaultHighlighter.$(OBJEXT)\n \t-rm -f javax/swing/text/DefaultHighlighter.lo\n+\t-rm -f javax/swing/text/DefaultStyledDocument.$(OBJEXT)\n+\t-rm -f javax/swing/text/DefaultStyledDocument.lo\n \t-rm -f javax/swing/text/Document.$(OBJEXT)\n \t-rm -f javax/swing/text/Document.lo\n \t-rm -f javax/swing/text/DocumentFilter.$(OBJEXT)\n@@ -20959,6 +21012,8 @@ mostlyclean-compile:\n \t-rm -f javax/swing/text/Segment.lo\n \t-rm -f javax/swing/text/SimpleAttributeSet.$(OBJEXT)\n \t-rm -f javax/swing/text/SimpleAttributeSet.lo\n+\t-rm -f javax/swing/text/StringContent.$(OBJEXT)\n+\t-rm -f javax/swing/text/StringContent.lo\n \t-rm -f javax/swing/text/Style.$(OBJEXT)\n \t-rm -f javax/swing/text/Style.lo\n \t-rm -f javax/swing/text/StyleConstants.$(OBJEXT)\n@@ -21189,12 +21244,8 @@ mostlyclean-compile:\n \t-rm -f jni/classpath/lib_gnu_java_awt_peer_gtk_la-primlib.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.$(OBJEXT)\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.lo\n-\t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.$(OBJEXT)\n-\t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.$(OBJEXT)\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.lo\n-\t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.$(OBJEXT)\n-\t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.$(OBJEXT)\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics2D.$(OBJEXT)\n@@ -21203,6 +21254,8 @@ mostlyclean-compile:\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkPixbufDecoder.$(OBJEXT)\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo\n+\t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.$(OBJEXT)\n+\t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkTextLayout.$(OBJEXT)\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkTextLayout.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.$(OBJEXT)\n@@ -21237,8 +21290,6 @@ mostlyclean-compile:\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkLabelPeer.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkListPeer.$(OBJEXT)\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkListPeer.lo\n-\t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.$(OBJEXT)\n-\t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.$(OBJEXT)\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo\n \t-rm -f jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuComponentPeer.$(OBJEXT)\n@@ -21466,8 +21517,11 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGlyphVector.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphics.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphics2D.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkTextLayout.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkCanvasPeer.Plo@am__quote@\n@@ -21487,7 +21541,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkImagePainter.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkLabelPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkListPeer.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMenuComponentPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMenuItemPeer.Plo@am__quote@\n@@ -23592,7 +23645,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/AbstractButton.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/AbstractCellEditor.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/AbstractListModel.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/AbstractSet.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/AbstractSpinnerModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/Action.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/ActionMap.Plo@am__quote@\n@@ -23611,7 +23663,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/DefaultBoundedRangeModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/DefaultButtonModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/DefaultCellEditor.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/DefaultCellRenderer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/DefaultComboBoxModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/DefaultDesktopManager.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/DefaultFocusManager.Plo@am__quote@\n@@ -23626,6 +23677,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/ImageIcon.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/InputMap.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/InputVerifier.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/InternalFrameFocusTraversalPolicy.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JApplet.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JButton.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JCheckBox.Plo@am__quote@\n@@ -23672,6 +23724,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JViewport.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/JWindow.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/KeyStroke.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/LayoutFocusTraversalPolicy.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/ListCellRenderer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/ListModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/ListSelectionModel.Plo@am__quote@\n@@ -23693,6 +23746,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SingleSelectionModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SizeRequirements.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SizeSequence.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SortingFocusTraversalPolicy.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SpinnerListModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SpinnerModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/$(DEPDIR)/SpinnerNumberModel.Plo@am__quote@\n@@ -23826,6 +23880,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicComboPopup.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicDesktopIconUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicDesktopPaneUI.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicEditorPaneUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicFormattedTextFieldUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicGraphicsUtils.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicIconFactory.Plo@am__quote@\n@@ -23867,7 +23922,9 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicTreeUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/BasicViewportUI.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/basic/$(DEPDIR)/ComboPopup.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/metal/$(DEPDIR)/DefaultMetalTheme.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/metal/$(DEPDIR)/MetalLookAndFeel.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/plaf/metal/$(DEPDIR)/MetalTheme.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/table/$(DEPDIR)/AbstractTableModel.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/table/$(DEPDIR)/DefaultTableCellRenderer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/table/$(DEPDIR)/DefaultTableColumnModel.Plo@am__quote@\n@@ -23886,6 +23943,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/DefaultCaret.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/DefaultEditorKit.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/DefaultHighlighter.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/DefaultStyledDocument.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/Document.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/DocumentFilter.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/EditorKit.Plo@am__quote@\n@@ -23904,6 +23962,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/Position.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/Segment.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/SimpleAttributeSet.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/StringContent.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/Style.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/StyleConstants.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/StyleContext.Plo@am__quote@\n@@ -24019,13 +24078,12 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@jni/classpath/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-native_state.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/classpath/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-primlib.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics2D.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkPixbufDecoder.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkTextLayout.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkCanvasPeer.Plo@am__quote@\n@@ -24043,7 +24101,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkImagePainter.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkLabelPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkListPeer.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuComponentPeer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuItemPeer.Plo@am__quote@\n@@ -24107,27 +24164,13 @@ jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkTextLayout.lo\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkTextLayout.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkTextLayout.c\n \n-jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.lo: jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c\n-@am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -MT jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.lo -MD -MP -MF \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.Tpo\" -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c; \\\n-@am__fastdepCC_TRUE@\tthen mv -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.Tpo\" \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.Plo\"; else rm -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c' object='jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontMetrics.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c\n-\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.lo: jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c\n @am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -MT jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.lo -MD -MP -MF \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.Tpo\" -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c; \\\n @am__fastdepCC_TRUE@\tthen mv -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.Tpo\" \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.Plo\"; else rm -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.Tpo\"; exit 1; fi\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c' object='jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.lo' libtool=yes @AMDEPBACKSLASH@\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkFontPeer.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c\n \n-jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.lo: jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n-@am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -MT jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.lo -MD -MP -MF \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.Tpo\" -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c; \\\n-@am__fastdepCC_TRUE@\tthen mv -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.Tpo\" \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.Plo\"; else rm -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c' object='jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGlyphVector.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c\n-\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.lo: jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c\n @am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -MT jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.lo -MD -MP -MF \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.Tpo\" -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c; \\\n @am__fastdepCC_TRUE@\tthen mv -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.Tpo\" \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.Plo\"; else rm -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkGraphics.Tpo\"; exit 1; fi\n@@ -24149,6 +24192,13 @@ jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkPixbufDecoder\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c\n \n+jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.lo: jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c\n+@am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -MT jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.lo -MD -MP -MF \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.Tpo\" -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c; \\\n+@am__fastdepCC_TRUE@\tthen mv -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.Tpo\" \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.Plo\"; else rm -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.Tpo\"; exit 1; fi\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c' object='jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GdkRobotPeer.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c\n+\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.lo: jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n @am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -MT jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.lo -MD -MP -MF \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.Tpo\" -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c; \\\n @am__fastdepCC_TRUE@\tthen mv -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.Tpo\" \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.Plo\"; else rm -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkButtonPeer.Tpo\"; exit 1; fi\n@@ -24261,13 +24311,6 @@ jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkListPeer.lo:\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkListPeer.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c\n \n-jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.lo: jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n-@am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -MT jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.lo -MD -MP -MF \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.Tpo\" -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c; \\\n-@am__fastdepCC_TRUE@\tthen mv -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.Tpo\" \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.Plo\"; else rm -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c' object='jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMainThread.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n-\n jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo: jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c\n @am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_gnu_java_awt_peer_gtk_la_CFLAGS) $(CFLAGS) -MT jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo -MD -MP -MF \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.Tpo\" -c -o jni/gtk-peer/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo `test -f 'jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c' || echo '$(srcdir)/'`jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.c; \\\n @am__fastdepCC_TRUE@\tthen mv -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.Tpo\" \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.Plo\"; else rm -f \"jni/gtk-peer/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-gnu_java_awt_peer_gtk_GtkMenuBarPeer.Tpo\"; exit 1; fi\n@@ -24645,6 +24688,13 @@ gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphics2D.lo: gnu/java/aw\n @AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphics2D.lo `test -f 'gnu/java/awt/peer/gtk/GdkGraphics2D.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GdkGraphics2D.java\n \n+gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.lo: gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java\n+@am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.lo `test -f 'gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java; \\\n+@am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.Tpo\"; exit 1; fi\n+@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tsource='gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java' object='gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsConfiguration.lo `test -f 'gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java\n+\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.lo: gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java\n @am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.lo `test -f 'gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java; \\\n @am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkGraphicsEnvironment.Tpo\"; exit 1; fi\n@@ -24659,6 +24709,20 @@ gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.lo: gnu/java\n @AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkPixbufDecoder.lo `test -f 'gnu/java/awt/peer/gtk/GdkPixbufDecoder.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GdkPixbufDecoder.java\n \n+gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.lo: gnu/java/awt/peer/gtk/GdkRobotPeer.java\n+@am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.lo `test -f 'gnu/java/awt/peer/gtk/GdkRobotPeer.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GdkRobotPeer.java; \\\n+@am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.Tpo\"; exit 1; fi\n+@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tsource='gnu/java/awt/peer/gtk/GdkRobotPeer.java' object='gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkRobotPeer.lo `test -f 'gnu/java/awt/peer/gtk/GdkRobotPeer.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GdkRobotPeer.java\n+\n+gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.lo: gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java\n+@am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.lo `test -f 'gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java; \\\n+@am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.Tpo\"; exit 1; fi\n+@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tsource='gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java' object='gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GdkScreenGraphicsDevice.lo `test -f 'gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java\n+\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo: gnu/java/awt/peer/gtk/GtkButtonPeer.java\n @am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.lo `test -f 'gnu/java/awt/peer/gtk/GtkButtonPeer.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkButtonPeer.java; \\\n @am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkButtonPeer.Tpo\"; exit 1; fi\n@@ -24785,13 +24849,6 @@ gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkListPeer.lo: gnu/java/awt/\n @AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkListPeer.lo `test -f 'gnu/java/awt/peer/gtk/GtkListPeer.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkListPeer.java\n \n-gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.lo: gnu/java/awt/peer/gtk/GtkMainThread.java\n-@am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.lo `test -f 'gnu/java/awt/peer/gtk/GtkMainThread.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkMainThread.java; \\\n-@am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tsource='gnu/java/awt/peer/gtk/GtkMainThread.java' object='gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepGCJ_FALSE@\tDEPDIR=$(DEPDIR) $(GCJDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepGCJ_FALSE@\t$(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMainThread.lo `test -f 'gnu/java/awt/peer/gtk/GtkMainThread.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkMainThread.java\n-\n gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.lo: gnu/java/awt/peer/gtk/GtkMenuBarPeer.java\n @am__fastdepGCJ_TRUE@\tif $(LIBTOOL) --mode=compile $(GCJ) $(lib_gnu_java_awt_peer_gtk_la_GCJFLAGS) $(GCJFLAGS) -MT gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.lo -MD -MP -MF \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.Tpo\" -c -o gnu/java/awt/peer/gtk/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.lo `test -f 'gnu/java/awt/peer/gtk/GtkMenuBarPeer.java' || echo '$(srcdir)/'`gnu/java/awt/peer/gtk/GtkMenuBarPeer.java; \\\n @am__fastdepGCJ_TRUE@\tthen mv -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.Tpo\" \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.Plo\"; else rm -f \"gnu/java/awt/peer/gtk/$(DEPDIR)/lib_gnu_java_awt_peer_gtk_la-GtkMenuBarPeer.Tpo\"; exit 1; fi\n@@ -25828,8 +25885,6 @@ uninstall-info: uninstall-info-recursive\n \tuninstall-toolexecmainlibDATA\n \n \n-jniinclude/gnu_java_awt_peer_gtk_GdkFontMetrics.h: gnu/java/awt/peer/gtk/GdkFontMetrics.java\n-jniinclude/gnu_java_awt_peer_gtk_GdkGlyphVector.h: gnu/java/awt/peer/gtk/GdkGlyphVector.java\n jniinclude/gnu_java_awt_peer_gtk_GdkGraphics.h: gnu/java/awt/peer/gtk/GdkGraphics.java\n jniinclude/gnu_java_awt_peer_gtk_GdkGraphics2D.h: gnu/java/awt/peer/gtk/GdkGraphics2D.java\n jniinclude/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.h: gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java\n@@ -25853,7 +25908,6 @@ jniinclude/gnu_java_awt_peer_gtk_GtkImage.h: gnu/java/awt/peer/gtk/GtkImage.java\n jniinclude/gnu_java_awt_peer_gtk_GtkImagePainter.h: gnu/java/awt/peer/gtk/GtkImagePainter.java\n jniinclude/gnu_java_awt_peer_gtk_GtkLabelPeer.h: gnu/java/awt/peer/gtk/GtkLabelPeer.java\n jniinclude/gnu_java_awt_peer_gtk_GtkListPeer.h: gnu/java/awt/peer/gtk/GtkListPeer.java\n-jniinclude/gnu_java_awt_peer_gtk_GtkMainThread.h: gnu/java/awt/peer/gtk/GtkMainThread.java\n jniinclude/gnu_java_awt_peer_gtk_GtkMenuBarPeer.h: gnu/java/awt/peer/gtk/GtkMenuBarPeer.java\n jniinclude/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.h: gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java\n jniinclude/gnu_java_awt_peer_gtk_GtkMenuItemPeer.h: gnu/java/awt/peer/gtk/GtkMenuItemPeer.java\n@@ -25878,9 +25932,7 @@ $(gtk_jni_headers): %.h:\n \techo \"$(GCJH) -jni -d jniinclude -classpath '' -bootclasspath $(top_builddir) $$input\"; \\\n \t$(GCJH) -jni -d jniinclude -classpath '' -bootclasspath $(top_builddir) $$input\n \n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkFontMetrics.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkFontPeer.h\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGlyphVector.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGraphics2D.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGraphicsEnvironment.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GdkGraphics.h\n@@ -25902,7 +25954,6 @@ jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.lo: $(top_builddir)/jniinclude\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkImagePainter.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkLabelPeer.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkListPeer.h\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMainThread.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMenuBarPeer.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMenuComponentPeer.h\n jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo: $(top_builddir)/jniinclude/gnu_java_awt_peer_gtk_GtkMenuItemPeer.h"}, {"sha": "8f7828770e85341b99aa0f12b8fabbfb57f6d8b2", "filename": "libjava/gnu/awt/xlib/XEventLoop.java", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXEventLoop.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -21,12 +21,11 @@\n import java.awt.event.MouseEvent;\n import java.util.Vector;\n \n-public class XEventLoop implements Runnable\n+public class XEventLoop\n {\n   Display display;\n   EventQueue queue;\n   XAnyEvent anyEvent;\n-  Thread eventLoopThread;\n \n   LightweightRedirector lightweightRedirector = new LightweightRedirector();\n     \n@@ -36,44 +35,40 @@ public XEventLoop(Display display, EventQueue queue)\n     this.queue = queue;\n     \n     anyEvent = new XAnyEvent(display);\n-    eventLoopThread = new Thread(this, \"AWT thread for XEventLoop\");\n-    eventLoopThread.start();\n   }\n \n-  public void run()\n+  void interrupt()\n   {\n-    while (true) \n-      postNextEvent();\n+    anyEvent.interrupt();\n   }\n \n-  void postNextEvent()\n+  void postNextEvent(boolean block)\n   {\n-    AWTEvent evt = getNextEvent();\n-    queue.postEvent(evt);\n+    AWTEvent evt = getNextEvent(block);\n+    if (evt != null)\n+      queue.postEvent(evt);\n   }\n     \n   /** get next event. Will block until events become available. */\n  \n-  public AWTEvent getNextEvent()\n+  public AWTEvent getNextEvent(boolean block)\n   {\n     // ASSERT:\n     if (isIdle())\n       throw new Error(\"should not be idle\");\n     \n     AWTEvent event = null;\n-    while (event == null)\n+    if (loadNextEvent(block))\n       {\n-\tloadNextEvent();\n-\tevent = createEvent();\n-      }\n-\n-    event = lightweightRedirector.redirect(event);\n-\n+        event = createEvent();        \n+        event = lightweightRedirector.redirect(event);\n+      }    \n     return event;\n   }\n \n-  void loadNextEvent()\n+  boolean loadNextEvent(boolean block)\n   {\n+    boolean gotEvent = false;\n     try\n       {\n \tsetIdle(true);\n@@ -100,7 +95,7 @@ since XFlush() will not be called before after the\n \t   of events. */\n \t\n \t//display.flush(); // implicit?\n-\tanyEvent.loadNext();\n+\tgotEvent = anyEvent.loadNext(block);\n       }\n     catch (RuntimeException re)\n       {\n@@ -110,6 +105,7 @@ since XFlush() will not be called before after the\n       {\n \tsetIdle(false);\n       }\n+    return gotEvent;\n   }\n     \n   /**"}, {"sha": "f3c655ecf80f1286ef95671a2fb406a4516ee266", "filename": "libjava/gnu/awt/xlib/XFramePeer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fawt%2Fxlib%2FXFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fawt%2Fxlib%2FXFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXFramePeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -78,7 +78,7 @@ void configureNotify(XConfigureEvent configEvent)\n      bounds.  */\n   public void setBounds(int x, int y, int width, int height)\n   {\n-    if (Thread.currentThread() == getXToolkit().eventLoop.eventLoopThread)\n+    if (EventQueue.isDispatchThread())\n       return;\n     \n     super.setBounds(x, y, width, height);"}, {"sha": "1e937c2386700ae57424c590b6f3f752cc8adf0d", "filename": "libjava/gnu/awt/xlib/XToolkit.java", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -438,5 +438,29 @@ public Font createFont (int format, InputStream stream)\n   {\n     throw new java.lang.UnsupportedOperationException ();\n   }\n-  \n+\n+  public RobotPeer createRobot (GraphicsDevice screen) throws AWTException\n+  {\n+    throw new java.lang.UnsupportedOperationException ();\n+  }\n+\n+  boolean interrupted;\n+\n+  public boolean nativeQueueEmpty() \n+  { \n+    return eventLoop.isIdle(); \n+  }\n+\n+  public void wakeNativeQueue() \n+  {\n+    interrupted = true;\n+    eventLoop.interrupt();\n+  }\n+\n+  public void iterateNativeQueue(java.awt.EventQueue locked, boolean block) \n+  {\n+    interrupted = false;\n+    while (!interrupted)\n+      eventLoop.postNextEvent(block);\n+  }; \n }"}, {"sha": "bce3a6150eec3190cd9a81dadc91aa0f3b8b8faa", "filename": "libjava/gnu/gcj/xlib/XAnyEvent.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fgcj%2Fxlib%2FXAnyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fgcj%2Fxlib%2FXAnyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FXAnyEvent.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -70,7 +70,8 @@ public XAnyEvent(Display display)\n   /**\n    * Load next event into the event structure.\n    */\n-  public native void loadNext();\n+  public native boolean loadNext(boolean block);\n+  public native void interrupt();\n \n   public native int getType();\n   public native void setType(int type);\n@@ -86,6 +87,7 @@ public XAnyEvent(Display display)\n   public native void send(Window destination, boolean propagate,\n \t\t\t  long mask);\n \n+  RawData pipefds;\n   RawData structure;\n   Display display;\n "}, {"sha": "0bef563ed2d999262d1c87e6fee1bca0c6cd3f7f", "filename": "libjava/gnu/gcj/xlib/natXAnyEvent.cc", "status": "modified", "additions": 57, "deletions": 3, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fgcj%2Fxlib%2FnatXAnyEvent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fgcj%2Fxlib%2FnatXAnyEvent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fxlib%2FnatXAnyEvent.cc?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -6,6 +6,12 @@ This software is copyrighted work licensed under the terms of the\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n+#include <config.h>\n+#include <platform.h>\n+\n+#include <gcj/javaprims.h>\n+#include <jvm.h>\n+\n #include <X11/Xlib.h>\n \n #include <gcj/cni.h>\n@@ -22,24 +28,72 @@ details.  */\n #include <gnu/gcj/xlib/XExposeEvent.h>\n #include <gnu/gcj/xlib/XException.h>\n \n+#include <unistd.h>\n+#include <posix.h>\n+\n void gnu::gcj::xlib::XAnyEvent::init()\n {\n   ::XEvent* event = new ::XEvent;\n+  int *pipes = new int[2];\n+  pipe(pipes);\n   structure = reinterpret_cast<gnu::gcj::RawData*>(event);\n+  pipefds = reinterpret_cast<gnu::gcj::RawData*>(pipes);\n }\n \n void gnu::gcj::xlib::XAnyEvent::finalize()\n {\n   delete structure;\n+  int *pipe = reinterpret_cast<int *>(pipefds);\n+  close(pipe[0]);\n+  close(pipe[1]);\n+  delete [] pipefds;\n+  pipefds = 0;\n   structure = 0;\n }\n \n-void gnu::gcj::xlib::XAnyEvent::loadNext()\n+jboolean gnu::gcj::xlib::XAnyEvent::loadNext(jboolean block)\n {\n   ::Display* dpy = (::Display*) display->display;\n   ::XEvent* evt = (::XEvent*) structure;\n-  XNextEvent(dpy, evt);\n-  // What does XNextEvent return?\n+\n+  if (XPending(dpy))\n+    {\n+      XNextEvent(dpy, evt);\n+      return true;  \n+    }\n+\n+  if (!block)\n+    return false;\n+\n+  int *pipe = reinterpret_cast<int *>(pipefds);\n+  int xfd = XConnectionNumber(dpy);\n+  int pipefd = pipe[0];\n+  int n = (xfd > pipefd ? xfd : pipefd) + 1;\n+  fd_set rfds;\n+  FD_ZERO(&rfds);\n+  FD_SET(xfd, &rfds);\n+  FD_SET(pipefd, &rfds);  \n+  int sel = _Jv_select (n, &rfds, NULL, NULL, NULL);\n+  if (sel > 0)\n+    {\n+      if (FD_ISSET(xfd, &rfds))\n+\t{\n+\t  XNextEvent(dpy, evt);\n+\t  return true;  \n+\t}\n+      if (FD_ISSET(pipefd, &rfds))\n+\t{\n+\t  char c;\n+\t  read(pipefd, &c, 1);\n+\t}\n+    }\n+  return false;\n+}\n+\n+void gnu::gcj::xlib::XAnyEvent::interrupt()\n+{\n+  int *pipe = reinterpret_cast<int *>(pipefds);\n+  write(pipe[1], \"W\", 1);\n }\n \n jint gnu::gcj::xlib::XAnyEvent::getType()"}, {"sha": "72302e11c3046a6f88568aa0db8d98d77548430d", "filename": "libjava/gnu/java/awt/ClasspathToolkit.java", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -41,16 +41,20 @@\n import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n \n-import java.awt.Image;\n+import java.awt.AWTException;\n import java.awt.Dimension;\n import java.awt.DisplayMode;\n+import java.awt.EventQueue;\n import java.awt.Font;\n import java.awt.FontMetrics;\n+import java.awt.GraphicsDevice;\n import java.awt.GraphicsEnvironment;\n+import java.awt.Image;\n import java.awt.Toolkit;\n import java.awt.font.FontRenderContext;\n import java.awt.image.ColorModel;\n import java.awt.image.ImageProducer;\n+import java.awt.peer.RobotPeer;\n import java.io.File;\n import java.io.InputStream;\n import java.net.MalformedURLException;\n@@ -90,7 +94,7 @@\n    * #getImage(java.net.URL)}. For images that were loaded via a path\n    * to an image file, the map contains a key with a file URL.\n    */\n-  private Map imageCache;\n+  private HashMap imageCache;\n \n \n   /**\n@@ -169,7 +173,6 @@ public FontMetrics getFontMetrics(Font font)\n    * this font peer should have, such as size, weight, family name, or\n    * transformation.\n    */\n-\n   public abstract ClasspathFontPeer getClasspathFontPeer (String name, Map attrs); \n \n   public abstract ClasspathTextLayoutPeer \n@@ -184,7 +187,6 @@ public FontMetrics getFontMetrics(Font font)\n    * implement {@link java.awt.font.OpenType} or\n    * {@link java.awt.font.MultipleMaster}.\n    */\n-\n   public Font getFont (String name, Map attrs) \n   {\n     return new Font (name, attrs);\n@@ -350,11 +352,18 @@ public ImageProducer createImageProducer(URL url)\n     return null;\n   }\n \n+  public abstract RobotPeer createRobot (GraphicsDevice screen)\n+    throws AWTException;\n+\n   /** \n    * Used to register ImageIO SPIs provided by the toolkit.\n    */\n \n   public void registerImageIOSpis(IIORegistry reg)\n   {\n   }\n+\n+  public abstract boolean nativeQueueEmpty();\n+  public abstract void wakeNativeQueue();  \n+  public abstract void iterateNativeQueue(EventQueue locked, boolean block);\n }"}, {"sha": "c3cfac48b190623a78c8940bd0130fd988e84669", "filename": "libjava/gnu/java/awt/EmbeddedWindow.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.java.awt;\n \n-import gnu.classpath.Configuration;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n import gnu.java.security.action.SetAccessibleAction;\n "}, {"sha": "5b06f48eed8fa6cc30a59c49253923d61f1bd006", "filename": "libjava/gnu/java/awt/color/ClutProfileConverter.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FClutProfileConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FClutProfileConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fcolor%2FClutProfileConverter.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.java.awt.color;\n \n-import java.awt.color.ColorSpace;\n import java.awt.color.ICC_Profile;\n \n "}, {"sha": "d279d567467b75fa380f57d5642d916c176f9c88", "filename": "libjava/gnu/java/awt/image/ImageDecoder.java", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fimage%2FImageDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fimage%2FImageDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fimage%2FImageDecoder.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -74,6 +74,11 @@ public ImageDecoder (URL url)\n     this.url = url;\n   }\n \n+  public ImageDecoder (InputStream is)\n+  {\n+    this.input = is;\n+  }\n+\n   public ImageDecoder (byte[] imagedata, int imageoffset, int imagelength)\n   {\n     data = imagedata;\n@@ -99,7 +104,7 @@ public void removeConsumer (ImageConsumer ic)\n   public void startProduction (ImageConsumer ic)\n   {\n     if (!isConsumer(ic))\n-    addConsumer (ic);\n+      addConsumer(ic);\n \n     Vector list = (Vector) consumers.clone ();\n     try \n@@ -108,17 +113,30 @@ public void startProduction (ImageConsumer ic)\n \t// ImageDecoder constructors so that exceptions cause\n \t// imageComplete to be called with an appropriate error\n \t// status.\n-\tif (url != null)\n-\t  input = url.openStream();\n-\telse\n-\t  {\n-\t    if (filename != null)\n-\t      input = new FileInputStream (filename);\n-\t    else\n-\t      input = new ByteArrayInputStream (data, offset, length);\n-\t  }\n-\n-\tproduce (list, input);\n+        if (input == null)\n+          {\n+            try \n+              {\n+                if (url != null)\n+                  input = url.openStream();\n+                else\n+                  {\n+                    if (filename != null)\n+                      input = new FileInputStream (filename);\n+                    else\n+                      input = new ByteArrayInputStream (data, offset, length);\n+                  }\n+                produce (list, input);\n+              } \n+            finally \n+              {\n+                input = null;\n+              }\n+          }\n+        else\n+          {\n+            produce (list, input);\n+          }\n       }\n     catch (Exception e)\n       {"}, {"sha": "07b4b3eb4034fdb42b6e688c53663a8eaed4d3f4", "filename": "libjava/gnu/java/awt/peer/ClasspathTextLayoutPeer.java", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathTextLayoutPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathTextLayoutPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathTextLayoutPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,19 +38,12 @@\n \n package gnu.java.awt.peer;\n \n-import java.awt.Font;\n import java.awt.Graphics2D;\n import java.awt.Shape;\n import java.awt.font.TextHitInfo;\n import java.awt.font.TextLayout;\n import java.awt.geom.AffineTransform;\n import java.awt.geom.Rectangle2D;\n-import java.text.CharacterIterator;\n-import java.text.AttributedCharacterIterator;\n-import java.text.AttributedString;\n-import java.util.Map;\n-import java.awt.font.TextAttribute;\n-\n \n /**\n  * @author Graydon Hoare"}, {"sha": "e871587a4a99e45eae81766ff9753605cb54a429", "filename": "libjava/gnu/java/awt/peer/gtk/GdkFontMetrics.java", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontMetrics.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -63,8 +63,6 @@ public class GdkFontMetrics extends FontMetrics\n   static final int TEXT_METRICS_X_ADVANCE = 4;\n   static final int TEXT_METRICS_Y_ADVANCE = 5;\n \n-  static native void getPeerFontMetrics(GdkFontPeer peer, double [] metrics);\n-  static native void getPeerTextMetrics(GdkFontPeer peer, String str, double [] metrics);\n \n   public GdkFontMetrics (Font font)\n   {    \n@@ -77,23 +75,15 @@ public GdkFontMetrics (Font font)\n \n     font_metrics = new int[5];\n     double [] hires = new double[5];\n-\n-    if (GtkToolkit.useGraphics2D ())\n-      GdkGraphics2D.getPeerFontMetrics(peer, hires);\n-    else\n-      getPeerFontMetrics (peer, hires);\n-\n+    peer.getFontMetrics (hires);\n     for (int i = 0; i < 5; ++i)\n       font_metrics[i] = (int) hires[i];\n   }\n   \n   public int stringWidth (String str)\n   {\n     double [] hires = new double[6];\n-    if (GtkToolkit.useGraphics2D())\n-      GdkGraphics2D.getPeerTextMetrics(peer, str, hires);\n-    else\n-      getPeerTextMetrics(peer, str, hires);\n+    peer.getTextMetrics(str, hires);\n     return (int) hires [TEXT_METRICS_WIDTH];\n   }\n \n@@ -115,7 +105,6 @@ public int charsWidth (char data[], int off, int len)\n   public int getLeading ()\n   {\n     return 1;\n-//      return metrics[ASCENT] + metrics[DESCENT];\n   }\n \n   public int getAscent ()"}, {"sha": "5573a1b4d7fdcceba904caf454494a3b433c22eb", "filename": "libjava/gnu/java/awt/peer/gtk/GdkFontPeer.java", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -37,19 +37,21 @@\n \n \n package gnu.java.awt.peer.gtk;\n-import java.awt.peer.FontPeer;\n-import java.awt.*;\n-import java.awt.geom.*;\n-import java.awt.font.*;\n+\n+import gnu.classpath.Configuration;\n+import gnu.java.awt.peer.ClasspathFontPeer;\n+\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.LineMetrics;\n+import java.awt.geom.Rectangle2D;\n import java.util.Locale;\n import java.util.Map;\n import java.util.ResourceBundle;\n-import java.util.MissingResourceException;\n import java.text.CharacterIterator;\n-import java.text.AttributedCharacterIterator;\n import java.text.StringCharacterIterator;\n-import gnu.classpath.Configuration;\n-import gnu.java.awt.peer.ClasspathFontPeer;\n \n public class GdkFontPeer extends ClasspathFontPeer\n {\n@@ -81,6 +83,9 @@ public class GdkFontPeer extends ClasspathFontPeer\n   private native void dispose ();\n   private native void setFont (String family, int style, int size, boolean useGraphics2D);\n \n+  native void getFontMetrics(double [] metrics);\n+  native void getTextMetrics(String str, double [] metrics);\n+\n   protected void finalize ()\n   {\n     if (GtkToolkit.useGraphics2D ())\n@@ -158,26 +163,33 @@ public String getPostScriptName(Font font)\n \n   public boolean canDisplay (Font font, char c)\n   {\n-    throw new UnsupportedOperationException ();\n+    // FIXME: inquire with pango\n+    return true;\n   }\n \n   public int canDisplayUpTo (Font font, CharacterIterator i, int start, int limit)\n   {\n-    throw new UnsupportedOperationException ();\n+    // FIXME: inquire with pango\n+    return -1;\n   }\n+  \n+  private native GdkGlyphVector getGlyphVector(String txt, \n+                                               Font f, \n+                                               FontRenderContext ctx);\n \n   public GlyphVector createGlyphVector (Font font, \n                                         FontRenderContext ctx, \n                                         CharacterIterator i)\n   {\n-    return new GdkGlyphVector(font, this, ctx, buildString (i));\n+    return getGlyphVector(buildString (i), font, ctx);\n   }\n \n   public GlyphVector createGlyphVector (Font font, \n                                         FontRenderContext ctx, \n                                         int[] glyphCodes)\n   {\n-    return new GdkGlyphVector (font, this, ctx, glyphCodes);\n+    return null;\n+    //    return new GdkGlyphVector (font, this, ctx, glyphCodes);\n   }\n \n   public byte getBaselineFor (Font font, char c)\n@@ -259,7 +271,8 @@ public int getNumGlyphs (Font font)\n   public Rectangle2D getStringBounds (Font font, CharacterIterator ci, \n                                       int begin, int limit, FontRenderContext frc)\n   {\n-    throw new UnsupportedOperationException ();\n+    GdkGlyphVector gv = getGlyphVector(buildString (ci, begin, limit), font, frc);\n+    return gv.getVisualBounds();\n   }\n \n   public boolean hasUniformLineMetrics (Font font)"}, {"sha": "4e66a86eb420ee574224e1dedc79a132dd3f839c", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGlyphVector.java", "status": "modified", "additions": 127, "deletions": 112, "changes": 239, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGlyphVector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGlyphVector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGlyphVector.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,8 +38,6 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import gnu.classpath.Configuration;\n-\n import java.awt.Font;\n import java.awt.Rectangle;\n import java.awt.Shape;\n@@ -54,36 +52,57 @@\n public class GdkGlyphVector extends GlyphVector\n {\n \n-  static \n+  /* We use a simple representation for glyph vectors here. Glyph i\n+   * consumes 8 doubles:\n+   *\n+   *      logical x: extents[ 10*i     ]\n+   *      logical y: extents[ 10*i + 1 ]\n+   *  logical width: extents[ 10*i + 2 ]\n+   * logical height: extents[ 10*i + 3 ]\n+   *\n+   *       visual x: extents[ 10*i + 4 ]\n+   *       visual y: extents[ 10*i + 5 ]\n+   *   visual width: extents[ 10*i + 6 ]\n+   *  visual height: extents[ 10*i + 7 ]\n+   *\n+   *   origin pos x: extents[ 10*i + 8 ]\n+   *   origin pos y: extents[ 10*i + 9 ]\n+   * \n+   * as well as one int, code[i], representing the glyph code in the font.\n+   */\n+\n+  double [] extents;\n+  int [] codes;\n+\n+  Font font;\n+  FontRenderContext fontRenderContext;\n+\n+  Rectangle2D allLogical;\n+  Rectangle2D allVisual;\n+\n+  public GdkGlyphVector(double[] extents, int[] codes, Font font, FontRenderContext frc)\n   {\n-    if (Configuration.INIT_LOAD_LIBRARY)\n+    this.extents = extents;\n+    this.codes = codes;\n+    this.font = font;\n+    this.fontRenderContext = frc;\n+\n+    allLogical = new Rectangle2D.Double();\n+    allVisual = new Rectangle2D.Double();\n+    \n+    for (int i = 0; i < codes.length; ++i)\n       {\n-        System.loadLibrary(\"gtkpeer\");\n+        allLogical.add (new Rectangle2D.Double(extents[10*i    ] + extents[10*i + 8],\n+                                               extents[10*i + 1] + extents[10*i + 9],\n+                                               extents[10*i + 2],\n+                                               extents[10*i + 3]));\n+\n+        allVisual.add (new Rectangle2D.Double(extents[10*i + 4] + extents[10*i + 8],\n+                                              extents[10*i + 5] + extents[10*i + 9],\n+                                              extents[10*i + 6],\n+                                              extents[10*i + 7]));\n       }\n-\n-    if (GtkToolkit.useGraphics2D ())\n-      initStaticState ();\n   }\n-  native static void initStaticState ();\n-  private final int native_state = GtkGenericPeer.getUniqueInteger ();\n-\n-  private Font font;\n-  private FontRenderContext ctx;\n-    \n-  private native void initState (GdkFontPeer peer, FontRenderContext ctx);\n-  private native void setChars (String s);\n-  private native void setGlyphCodes (int codes[]);\n-  private native void dispose ();\n-  private native int glyphCode (int idx);\n-  private native int numGlyphs ();\n-  private native int glyphCharIndex (int idx);\n-  private native double[] allLogicalExtents ();\n-  private native double[] allInkExtents ();\n-  private native double[] glyphLogicalExtents (int idx);\n-  private native double[] glyphInkExtents (int idx);\n-  private native boolean glyphIsHorizontal (int idx);\n-  private native boolean isEqual (GdkGlyphVector ggv);\n-\n \n   /* \n      geometric notes:\n@@ -108,26 +127,14 @@ storage format in pango (1024ths of pixels).\n      \n    */\n \n-\n-  public GdkGlyphVector (Font f, GdkFontPeer peer, FontRenderContext c, String s)\n+  public double[] getExtents() \n   {\n-    font = f;\n-    ctx = c;\n-    initState (peer, ctx);\n-    setChars (s);\n+    return extents;\n   }\n \n-  public GdkGlyphVector (Font f, GdkFontPeer peer, FontRenderContext c, int codes[])\n+  public int[] getCodes()\n   {\n-    font = f;\n-    ctx = c;\n-    initState (peer, ctx);\n-    setGlyphCodes (codes);\n-  }\n-\n-  protected void finalize ()\n-  {\n-    dispose ();\n+    return codes;\n   }\n \n   public Font getFont () \n@@ -137,12 +144,15 @@ public Font getFont ()\n \n   public FontRenderContext getFontRenderContext () \n   { \n-    return ctx; \n+    return fontRenderContext; \n   }\n \n   public int getGlyphCharIndex (int glyphIndex) \n   { \n-    return glyphCharIndex (glyphIndex); \n+    // FIXME: currently pango does not provide glyph-by-glyph\n+    // reverse mapping information, so we assume a broken 1:1\n+    // glyph model here. This is plainly wrong.\n+    return glyphIndex;\n   }\n \n   public int[] getGlyphCharIndices (int beginGlyphIndex, \n@@ -154,50 +164,44 @@ public int[] getGlyphCharIndices (int beginGlyphIndex,\n       ix = new int[numEntries];\n \n     for (int i = 0; i < numEntries; i++)\n-      ix[i] = glyphCharIndex (beginGlyphIndex + i);\n+      ix[i] = getGlyphCharIndex (beginGlyphIndex + i);\n     return ix;\n   }\n \n   public int getGlyphCode (int glyphIndex) \n   { \n-    return glyphCode (glyphIndex); \n+    return codes[glyphIndex];\n   }\n \n   public int[] getGlyphCodes (int beginGlyphIndex, int numEntries,\n                               int[] codeReturn)\n   {\n-    int ix[] = codeReturn;\n-    if (ix == null)\n-      ix = new int[numEntries];\n+    if (codeReturn == null)\n+      codeReturn = new int[numEntries];\n \n-    for (int i = 0; i < numEntries; i++)\n-      ix[i] = glyphCode (beginGlyphIndex + i);\n-    return ix;\n+    System.arraycopy(codes, beginGlyphIndex, codeReturn, 0, numEntries);\n+    return codeReturn;\n   }\n \n-  public Shape getGlyphLogicalBounds (int glyphIndex)\n+  public Shape getGlyphLogicalBounds (int i)\n   {\n-    double extents[] = glyphLogicalExtents (glyphIndex);\n-    return new Rectangle2D.Double (extents[0], extents[1],\n-                                   extents[2], extents[3]);\n+    return new Rectangle2D.Double (extents[8*i], extents[8*i + 1],\n+                                   extents[8*i + 2], extents[8*i + 3]);\n   }\n     \n-  public GlyphMetrics getGlyphMetrics (int glyphIndex)\n+  public GlyphMetrics getGlyphMetrics (int i)\n   {\n-    double extents[] = glyphLogicalExtents (glyphIndex);\n-    Rectangle2D log_bounds = new Rectangle2D.Double (extents[0], extents[1],\n-                                                     extents[2], extents[3]);\n-\n-    extents = glyphInkExtents (glyphIndex);\n-    Rectangle2D ink_bounds = new Rectangle2D.Double (extents[0], extents[1],\n-                                                     extents[2], extents[3]);\n-      \n-    boolean is_horizontal = glyphIsHorizontal (glyphIndex);\n-\n-    return new GlyphMetrics (is_horizontal,\n-                             (float)(log_bounds.getWidth() + log_bounds.getX()), \n-                             (float)(log_bounds.getHeight() + log_bounds.getY()),\n-                             ink_bounds, GlyphMetrics.STANDARD);\n+    // FIXME: pango does not yield vertical layout information at the\n+    // moment.\n+\n+    boolean is_horizontal = true;\n+    double advanceX = extents[8*i + 2]; // \"logical width\" == advanceX \n+    double advanceY = 0; \n+   \n+    return new GlyphMetrics (is_horizontal, \n+                             (float) advanceX, (float) advanceY, \n+                             (Rectangle2D) getGlyphVisualBounds(i), \n+                             GlyphMetrics.STANDARD);\n   }\n \n   public Shape getGlyphOutline (int glyphIndex)\n@@ -210,20 +214,18 @@ public Shape getGlyphOutline (int glyphIndex, float x, float y)\n     throw new UnsupportedOperationException ();\n   }\n \n-  public Rectangle getGlyphPixelBounds (int glyphIndex, \n+  public Rectangle getGlyphPixelBounds (int i, \n                                         FontRenderContext renderFRC,\n                                         float x, float y)\n   {\n-    double extents[] = glyphInkExtents(glyphIndex);\n-    return new Rectangle ((int)x, (int)y, (int)extents[2], (int)extents[3]);\n+    return new Rectangle((int) x, (int) y,\n+                         (int) extents[8*i + 6], (int) extents[8*i + 7]);\n   }\n     \n-  public Point2D getGlyphPosition (int glyphIndex)\n+  public Point2D getGlyphPosition (int i)\n   {\n-    float[] ret = new float[2 * (glyphIndex + 1)];\n-    getGlyphPositions (0, glyphIndex + 1, ret);\n-    return new Point2D.Float (ret[2 * glyphIndex], \n-                              ret[2 * glyphIndex + 1]);\n+    return new Point2D.Double (extents[10*i + 8], \n+                               extents[10*i + 9]);\n   }\n \n   public float[] getGlyphPositions (int beginGlyphIndex,\n@@ -234,35 +236,25 @@ public float[] getGlyphPositions (int beginGlyphIndex,\n     if (fx == null)\n       fx = new float[numEntries * 2];\n \n-\n-    float x = 0.0f;\n-    float y = 0.0f;\n     for (int i = 0; i < numEntries; ++i)\n       {\n-        boolean is_horizontal = glyphIsHorizontal (beginGlyphIndex + i);\n-        double log_extents[] = glyphLogicalExtents (beginGlyphIndex + i);\n-        fx[2*i]     = x + (float)log_extents[0]; // x offset\n-        fx[2*i + 1] = y + (float)log_extents[1]; // y offset\n-        if (is_horizontal)\n-          x += (float)log_extents[2]; // x advance (\"logical width\") in pango-ese\n-        else\n-          y += (float)log_extents[3]; // y advance (\"logical height\") in pango-ese\n+        fx[2*i    ] = (float) extents[10*i + 8];\n+        fx[2*i + 1] = (float) extents[10*i + 9];\n       }\n     return fx;\n   }\n \n   public AffineTransform getGlyphTransform (int glyphIndex)\n   {\n-    // glyphs don't have independent transforms in these simple glyph\n+    // Glyphs don't have independent transforms in these simple glyph\n     // vectors; docs specify null is an ok return here.\n     return null;  \n   }\n     \n-  public Shape getGlyphVisualBounds (int glyphIndex)\n+  public Shape getGlyphVisualBounds (int i)\n   {\n-    double extents[] = glyphInkExtents (glyphIndex);\n-    return new Rectangle2D.Double (extents[0], extents[1], \n-                                   extents[2], extents[3]);\n+    return new Rectangle2D.Double(extents[8*i + 4], extents[8*i + 5],\n+                                  extents[8*i + 6], extents[8*i + 7]);\n   }\n     \n   public int getLayoutFlags ()\n@@ -272,14 +264,12 @@ public int getLayoutFlags ()\n \n   public Rectangle2D getLogicalBounds ()\n   {\n-    double extents[] = allLogicalExtents ();\n-    return new Rectangle2D.Double (extents[0], extents[1], \n-                                   extents[2], extents[3]);\n+    return allLogical;\n   }\n \n   public int getNumGlyphs ()\n   {\n-    return numGlyphs ();\n+    return codes.length;\n   }\n \n   public Shape getOutline ()\n@@ -290,26 +280,28 @@ public Shape getOutline ()\n   public Rectangle getPixelBounds (FontRenderContext renderFRC,\n                                    float x, float y)\n   {\n-    double extents[] = allInkExtents();\n-    return new Rectangle ((int)x, (int)y, \n-                          (int)extents[2], (int)extents[3]);\n+    return new Rectangle((int)x, \n+                         (int)y, \n+                         (int) allVisual.getWidth(),\n+                         (int) allVisual.getHeight());\n   }\n     \n   public Rectangle2D getVisualBounds ()\n   {\n-    double extents[] = allInkExtents();\n-    return new Rectangle2D.Double (extents[0], extents[1], \n-                                   extents[2], extents[3]);\n+    return allVisual;\n   }\n \n   public void performDefaultLayout ()\n   {\n   }\n     \n-  public void setGlyphPosition (int glyphIndex, Point2D newPos)\n+  public void setGlyphPosition (int i, Point2D newPos)\n   {\n-    // should we be ok twiddling pango's structure here?\n-    throw new UnsupportedOperationException ();      \n+    extents[8*i    ] = newPos.getX();\n+    extents[8*i + 1] = newPos.getY();\n+\n+    extents[8*i + 4] = newPos.getX();\n+    extents[8*i + 5] = newPos.getY();\n   }\n \n   public void setGlyphTransform (int glyphIndex,\n@@ -327,8 +319,31 @@ public boolean equals(GlyphVector gv)\n     if (! (gv instanceof GdkGlyphVector))\n       return false;\n \n-    GdkGlyphVector ggv = (GdkGlyphVector)gv;\n-    return isEqual(ggv);\n+    GdkGlyphVector ggv = (GdkGlyphVector) gv;\n+\n+    if ((ggv.codes.length != this.codes.length)\n+        || (ggv.extents.length != this.extents.length))\n+      return false;\n+    \n+    if ((ggv.font == null && this.font != null)\n+        || (ggv.font != null && this.font == null)\n+        || (!ggv.font.equals(this.font)))\n+      return false;\n+\n+    if ((ggv.fontRenderContext == null && this.fontRenderContext != null)\n+        || (ggv.fontRenderContext != null && this.fontRenderContext == null)\n+        || (!ggv.fontRenderContext.equals(this.fontRenderContext)))\n+      return false;\n+\n+    for (int i = 0; i < ggv.codes.length; ++i)\n+      if (ggv.codes[i] != this.codes[i])\n+        return false;\n+\n+    for (int i = 0; i < ggv.extents.length; ++i)\n+      if (ggv.extents[i] != this.extents[i])\n+        return false;\n+\n+    return true;\n   }\n \n   public GlyphJustificationInfo getGlyphJustificationInfo(int idx)"}, {"sha": "0811287e9b6ca0b10648844230ffc5bc75f180a7", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphics.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -426,7 +426,8 @@ public FontMetrics getFontMetrics (Font font)\n \n   public void setClip (int x, int y, int width, int height)\n   {\n-    if (component != null && ! component.isRealized ())\n+    if ((component != null && ! component.isRealized ())\n+        || clip == null)\n       return;\n \n     clip.x = x;"}, {"sha": "3bf169cb6f70af0b0255b140cd90c63fad5dcd09", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphics2D.java", "status": "modified", "additions": 774, "deletions": 840, "changes": 1614, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n-/* GdkGraphics2D.java\n-   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n+/* GdkGraphics2D.java --\n+   Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,7 +40,6 @@\n \n import gnu.classpath.Configuration;\n import gnu.java.awt.ClasspathToolkit;\n-import gnu.java.awt.peer.ClasspathFontPeer;\n \n import java.awt.AlphaComposite;\n import java.awt.BasicStroke;\n@@ -60,57 +59,55 @@\n import java.awt.Stroke;\n import java.awt.TexturePaint;\n import java.awt.Toolkit;\n-import java.awt.color.ColorSpace;\n import java.awt.font.FontRenderContext;\n import java.awt.font.GlyphVector;\n-import java.awt.font.GlyphJustificationInfo;\n+import java.awt.geom.AffineTransform;\n import java.awt.geom.Arc2D;\n import java.awt.geom.GeneralPath;\n import java.awt.geom.NoninvertibleTransformException;\n import java.awt.geom.PathIterator;\n import java.awt.geom.Point2D;\n import java.awt.geom.Rectangle2D;\n-import java.awt.geom.AffineTransform;\n import java.awt.image.AffineTransformOp;\n import java.awt.image.BufferedImage;\n import java.awt.image.BufferedImageOp;\n import java.awt.image.ColorModel;\n import java.awt.image.CropImageFilter;\n import java.awt.image.DataBuffer;\n import java.awt.image.DataBufferInt;\n+import java.awt.image.DirectColorModel;\n import java.awt.image.FilteredImageSource;\n-import java.awt.image.ImageConsumer;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImagingOpException;\n-import java.awt.image.SampleModel;\n+import java.awt.image.MultiPixelPackedSampleModel;\n import java.awt.image.Raster;\n import java.awt.image.RenderedImage;\n+import java.awt.image.SampleModel;\n import java.awt.image.WritableRaster;\n-import java.awt.image.renderable.RenderableImage;\n import java.awt.image.renderable.RenderContext;\n+import java.awt.image.renderable.RenderableImage;\n import java.text.AttributedCharacterIterator;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Stack;\n \n public class GdkGraphics2D extends Graphics2D\n {\n-\n   //////////////////////////////////////\n   ////// State Management Methods //////\n   //////////////////////////////////////\n \n   static \n   {\n     if (Configuration.INIT_LOAD_LIBRARY)\n-      {\n-        System.loadLibrary(\"gtkpeer\");\n-      }\n+      System.loadLibrary(\"gtkpeer\");\n \n-    if (GtkToolkit.useGraphics2D ())\n-      initStaticState ();\n+    if (GtkToolkit.useGraphics2D())\n+      initStaticState();\n   }\n-  native static void initStaticState ();\n+  \n+  static native void initStaticState();\n+  \n   private final int native_state = GtkGenericPeer.getUniqueInteger();  \n \n   private Paint paint;\n@@ -120,246 +117,255 @@ public class GdkGraphics2D extends Graphics2D\n   private Shape clip;\n   private AffineTransform transform;\n   private GtkComponentPeer component;\n-  private Font font;  \n+  private Font font;\n   private RenderingHints hints;\n   private BufferedImage bimage;\n-\n+  private boolean pixelConversionRequired;\n+  private int[] pixelBuffer;\n   private Composite comp;\n-\n   private Stack stateStack;\n-  \n-  native private void initState (GtkComponentPeer component);\n-  native private void initState (int width, int height);\n-  native private void copyState (GdkGraphics2D g);\n-  native public void dispose ();\n-  native private int[] getImagePixels();\n-  native private void cairoSurfaceSetFilter(int filter);\n-  native void connectSignals (GtkComponentPeer component);\n \n-  public void finalize ()\n+  private native void initState(GtkComponentPeer component);\n+  private native void initState(int width, int height);\n+  private native void initState(int[] pixes, int width, int height);\n+  private native void copyState(GdkGraphics2D g);\n+  public native void dispose();\n+  private native void cairoSurfaceSetFilter(int filter);\n+  native void connectSignals(GtkComponentPeer component);\n+\n+  public void finalize()\n   {\n     dispose();\n   }\n \n-  public Graphics create ()\n+  public Graphics create()\n   {\n-    return new GdkGraphics2D (this);\n+    return new GdkGraphics2D(this);\n   }\n \n-  public Graphics create (int x, int y, int width, int height)\n+  public Graphics create(int x, int y, int width, int height)\n   {\n-    return new GdkGraphics2D (width, height);\n+    return new GdkGraphics2D(width, height);\n   }\n \n-  GdkGraphics2D (GdkGraphics2D g)\n+  GdkGraphics2D(GdkGraphics2D g)\n   {\n     paint = g.paint;\n     stroke = g.stroke;\n-    setRenderingHints (g.hints);\n+    setRenderingHints(g.hints);\n \n     if (g.fg.getAlpha() != -1)\n-      fg = new Color (g.fg.getRed (), g.fg.getGreen (), \n-                      g.fg.getBlue (), g.fg.getAlpha ());\n-    else \n-      fg = new Color (g.fg.getRGB ());\n+      fg = new Color(g.fg.getRed(), g.fg.getGreen(), g.fg.getBlue(),\n+                     g.fg.getAlpha());\n+    else\n+      fg = new Color(g.fg.getRGB());\n \n     if (g.bg.getAlpha() != -1)\n-      bg = new Color(g.bg.getRed (), g.bg.getGreen (), \n-                     g.bg.getBlue (), g.bg.getAlpha ());\n+      bg = new Color(g.bg.getRed(), g.bg.getGreen(), g.bg.getBlue(),\n+                     g.bg.getAlpha());\n     else\n-      bg = new Color (g.bg.getRGB ());\n+      bg = new Color(g.bg.getRGB());\n \n     if (g.clip == null)\n       clip = null;\n     else\n-      clip = new Rectangle (g.getClipBounds ());\n+      clip = new Rectangle(g.getClipBounds());\n \n     if (g.transform == null)\n-      transform = new AffineTransform ();\n+      transform = new AffineTransform();\n     else\n-      transform = new AffineTransform (g.transform);\n+      transform = new AffineTransform(g.transform);\n \n     font = g.font;\n     component = g.component;\n-    copyState (g);\n-\n-    setColor (fg);\n-    setBackground (bg);\n-    setPaint (paint);\n-    setStroke (stroke);\n-    setTransform (transform);\n-    setClip (clip);\n+    copyState(g);\n+\n+    setColor(fg);\n+    setBackground(bg);\n+    setPaint(paint);\n+    setStroke(stroke);\n+    setTransform(transform);\n+    setClip(clip);\n     stateStack = new Stack();\n   }\n \n-  GdkGraphics2D (int width, int height)\n+  GdkGraphics2D(int width, int height)\n   {\n-    initState (width, height);\n+    initState(width, height);\n \n     setColor(Color.black);\n-    setBackground (Color.black);\n-    setPaint (getColor());\n-    setFont (new Font(\"SansSerif\", Font.PLAIN, 12));\n-    setTransform (new AffineTransform ());\n-    setStroke (new BasicStroke ());\n-    setRenderingHints (getDefaultHints());\n+    setBackground(Color.black);\n+    setPaint(getColor());\n+    setFont(new Font(\"SansSerif\", Font.PLAIN, 12));\n+    setTransform(new AffineTransform());\n+    setStroke(new BasicStroke());\n+    setRenderingHints(getDefaultHints());\n \n     stateStack = new Stack();\n   }\n \n-  GdkGraphics2D (GtkComponentPeer component)\n+  GdkGraphics2D(GtkComponentPeer component)\n   {\n     this.component = component;\n-\n-    setFont (new Font(\"SansSerif\", Font.PLAIN, 12));\n-\n-    if (component.isRealized ())\n-      initComponentGraphics2D ();\n+    \n+    if (component.isRealized())\n+      initComponentGraphics2D();\n     else\n-      connectSignals (component);\n+      connectSignals(component);\n   }\n \n-  void initComponentGraphics2D ()\n+  void initComponentGraphics2D()\n   {\n-    initState (component);\n+    initState(component);\n \n-    setColor (component.awtComponent.getForeground ());\n-    setBackground (component.awtComponent.getBackground ());\n-    setPaint (getColor());\n-    setTransform (new AffineTransform ());\n-    setStroke (new BasicStroke ());\n-    setRenderingHints (getDefaultHints());\n+    setColor(component.awtComponent.getForeground());\n+    setBackground(component.awtComponent.getBackground());\n+    setPaint(getColor());\n+    setTransform(new AffineTransform());\n+    setStroke(new BasicStroke());\n+    setRenderingHints(getDefaultHints());\n+    setFont(new Font(\"SansSerif\", Font.PLAIN, 12));\n \n-    stateStack = new Stack ();\n+    stateStack = new Stack();\n   }\n \n-  GdkGraphics2D (BufferedImage bimage)\n+  GdkGraphics2D(BufferedImage bimage)\n   {\n-    \n-    this.bimage = bimage;    \n-    initState (bimage.getWidth(), bimage.getHeight());\n+    this.bimage = bimage;\n+    this.pixelBuffer = findSimpleIntegerArray(bimage.getColorModel(),\n+                                              bimage.getRaster());\n+    if (this.pixelBuffer == null)\n+      {\n+\tthis.pixelBuffer = new int[bimage.getRaster().getWidth() * bimage.getRaster()\n+\t                                                                 .getHeight()];\n+\tthis.pixelConversionRequired = true;\n+      }\n+    else\n+      {\n+        this.pixelConversionRequired = false;\n+      }\n+\n+    initState(this.pixelBuffer, bimage.getWidth(), bimage.getHeight());\n \n     setColor(Color.black);\n-    setBackground (Color.black);\n-    setPaint (getColor());\n-    setFont (new Font(\"SansSerif\", Font.PLAIN, 12));\n-    setTransform (new AffineTransform ());\n-    setStroke (new BasicStroke ());\n-    setRenderingHints (getDefaultHints());\n+    setBackground(Color.black);\n+    setPaint(getColor());\n+    setFont(new Font(\"SansSerif\", Font.PLAIN, 12));\n+    setTransform(new AffineTransform());\n+    setStroke(new BasicStroke());\n+    setRenderingHints(getDefaultHints());\n \n     stateStack = new Stack();\n-    \n+\n     // draw current buffered image to the pixmap associated \n-    // with it.\n-    \n-    drawImage (bimage, new AffineTransform (1,0,0,1,0,0), bg, null);\n+    // with it, if the image is not equal to our paint buffer.\n+    if (pixelConversionRequired)\n+      drawImage(bimage, new AffineTransform(1, 0, 0, 1, 0, 0), bg, null);\n   }\n \n-\n   ////////////////////////////////////\n   ////// Native Drawing Methods //////\n   ////////////////////////////////////\n \n   // GDK drawing methods\n-  private native void gdkDrawDrawable (GdkGraphics2D other, int x, int y);\n+  private native void gdkDrawDrawable(GdkGraphics2D other, int x, int y);\n \n   // drawing utility methods\n-  private native void drawPixels (int pixels[], int w, int h, int stride, double i2u[]);\n-  private native void setTexturePixels (int pixels[], int w, int h, int stride);\n-  private native void setGradient (double x1, double y1,\n-                                   double x2, double y2,\n-                                   int r1, int g1, int b1, int a1,\n-                                   int r2, int g2, int b2, int a2,\n-                                   boolean cyclic);\n+  private native void drawPixels(int[] pixels, int w, int h, int stride,\n+                                 double[] i2u);\n+  private native void setTexturePixels(int[] pixels, int w, int h, int stride);\n+  private native void setGradient(double x1, double y1, double x2, double y2,\n+                                  int r1, int g1, int b1, int a1, int r2,\n+                                  int g2, int b2, int a2, boolean cyclic);\n \n   // simple passthroughs to cairo\n-  private native void cairoSave ();\n-  private native void cairoRestore ();\n-  private native void cairoSetMatrix (double m[]);\n-  private native void cairoSetOperator (int cairoOperator);\n-  private native void cairoSetRGBColor (double red, double green, double blue);\n-  private native void cairoSetAlpha (double alpha);\n-  private native void cairoSetFillRule (int cairoFillRule);\n-  private native void cairoSetLineWidth (double width);\n-  private native void cairoSetLineCap (int cairoLineCap);\n-  private native void cairoSetLineJoin (int cairoLineJoin);\n-  private native void cairoSetDash (double dashes[], int ndash, double offset);\n-  private native void cairoSetMiterLimit (double limit);\n-  private native void cairoNewPath ();\n-  private native void cairoMoveTo (double x, double y);\n-  private native void cairoLineTo (double x, double y);\n-  private native void cairoCurveTo (double x1, double y1,\n-                                    double x2, double y2,\n-                                    double x3, double y3);  \n-  private native void cairoRelMoveTo (double dx, double dy);\n-  private native void cairoRelLineTo (double dx, double dy);\n-  private native void cairoRelCurveTo (double dx1, double dy1,\n-                                       double dx2, double dy2,\n-                                       double dx3, double dy3);\n-  private native void cairoRectangle (double x, double y, \n-                                   double width, double height);\n-  private native void cairoClosePath ();\n-  private native void cairoStroke ();\n-  private native void cairoFill ();\n-  private native void cairoClip ();\n-\n+  private native void cairoSave();\n+  private native void cairoRestore();\n+  private native void cairoSetMatrix(double[] m);\n+  private native void cairoSetOperator(int cairoOperator);\n+  private native void cairoSetRGBColor(double red, double green, double blue);\n+  private native void cairoSetAlpha(double alpha);\n+  private native void cairoSetFillRule(int cairoFillRule);\n+  private native void cairoSetLineWidth(double width);\n+  private native void cairoSetLineCap(int cairoLineCap);\n+  private native void cairoSetLineJoin(int cairoLineJoin);\n+  private native void cairoSetDash(double[] dashes, int ndash, double offset);\n+\n+  private native void cairoSetMiterLimit(double limit);\n+  private native void cairoNewPath();\n+  private native void cairoMoveTo(double x, double y);\n+  private native void cairoLineTo(double x, double y);\n+  private native void cairoCurveTo(double x1, double y1, double x2, double y2,\n+                                   double x3, double y3);\n+  private native void cairoRelMoveTo(double dx, double dy);\n+  private native void cairoRelLineTo(double dx, double dy);\n+  private native void cairoRelCurveTo(double dx1, double dy1, double dx2,\n+                                      double dy2, double dx3, double dy3);\n+  private native void cairoRectangle(double x, double y, double width,\n+                                     double height);\n+  private native void cairoClosePath();\n+  private native void cairoStroke();\n+  private native void cairoFill();\n+  private native void cairoClip();\n \n   /////////////////////////////////////////////\n   ////// General Drawing Support Methods //////\n   /////////////////////////////////////////////\n \n-    private class DrawState\n-    {\n-\tprivate Paint paint;\n-\tprivate Stroke stroke;\n-\tprivate Color fg;\n-\tprivate Color bg;\n-\tprivate Shape clip;\n-\tprivate AffineTransform transform;\n-\tprivate Font font;  \n-\tprivate Composite comp;\n-\tDrawState (GdkGraphics2D g)\n-\t{\n-\t    this.paint = g.paint;\n-\t    this.stroke = g.stroke;\n-\t    this.fg = g.fg;\n-\t    this.bg = g.bg;\n-\t    this.clip = g.clip;\n-\t    if (g.transform != null)\n-\t\tthis.transform = (AffineTransform) g.transform.clone();\n-\t    this.font = g.font;\n-\t    this.comp = g.comp;\n-\t}\n-\tpublic void restore(GdkGraphics2D g)\n-\t{\n-\t    g.paint = this.paint;\n-\t    g.stroke = this.stroke;\n-\t    g.fg = this.fg;\n-\t    g.bg = this.bg;\n-\t    g.clip = this.clip;\n-\t    g.transform = this.transform;\n-\t    g.font = this.font;\n-\t    g.comp = this.comp;\n-\t}\n-    }\n-    \n-    private void stateSave ()\n+  private class DrawState\n+  {\n+    private Paint paint;\n+    private Stroke stroke;\n+    private Color fg;\n+    private Color bg;\n+    private Shape clip;\n+    private AffineTransform transform;\n+    private Font font;\n+    private Composite comp;\n+\n+    DrawState(GdkGraphics2D g)\n     {\n-\tstateStack.push (new DrawState (this));\n-\tcairoSave ();\n+      this.paint = g.paint;\n+      this.stroke = g.stroke;\n+      this.fg = g.fg;\n+      this.bg = g.bg;\n+      this.clip = g.clip;\n+      if (g.transform != null)\n+\tthis.transform = (AffineTransform) g.transform.clone();\n+      this.font = g.font;\n+      this.comp = g.comp;\n     }\n \n-    private void stateRestore ()\n+    public void restore(GdkGraphics2D g)\n     {\n-\t((DrawState)(stateStack.pop ())).restore (this);\n-\tcairoRestore ();\n+      g.paint = this.paint;\n+      g.stroke = this.stroke;\n+      g.fg = this.fg;\n+      g.bg = this.bg;\n+      g.clip = this.clip;\n+      g.transform = this.transform;\n+      g.font = this.font;\n+      g.comp = this.comp;\n     }\n+  }\n+\n+  private void stateSave()\n+  {\n+    stateStack.push(new DrawState(this));\n+    cairoSave();\n+  }\n+\n+  private void stateRestore()\n+  {\n+    ((DrawState) (stateStack.pop())).restore(this);\n+    cairoRestore();\n+  }\n \n   // Some operations (drawing rather than filling) require that their\n   // coords be shifted to land on 0.5-pixel boundaries, in order to land on\n   // \"middle of pixel\" coordinates and light up complete pixels.\n-\n   private boolean shiftDrawCalls = false;\n+\n   private final double shifted(double coord, boolean doShift)\n   {\n     if (doShift)\n@@ -372,580 +378,543 @@ private final void walkPath(PathIterator p, boolean doShift)\n   {\n     double x = 0;\n     double y = 0;\n-    double coords[] = new double[6];\n+    double[] coords = new double[6];\n \n-    cairoSetFillRule (p.getWindingRule ());\n-    for ( ; ! p.isDone (); p.next())\n+    cairoSetFillRule(p.getWindingRule());\n+    for (; ! p.isDone(); p.next())\n       {\n-        int seg = p.currentSegment (coords);\n-        switch(seg)\n-          {\n-\n-          case PathIterator.SEG_MOVETO:\n-            x = shifted(coords[0], doShift);\n-            y = shifted(coords[1], doShift);\n-            cairoMoveTo (x, y);\n-            break;\n-\n-          case PathIterator.SEG_LINETO:\n-            x = shifted(coords[0], doShift);\n-            y = shifted(coords[1], doShift);\n-            cairoLineTo (x, y);\n-            break;\n-\n-          case PathIterator.SEG_QUADTO:\n-\n-            // splitting a quadratic bezier into a cubic:\n-            // see: http://pfaedit.sourceforge.net/bezier.html\n-\n-            double x1 = x + (2.0/3.0) * (shifted(coords[0], doShift) - x);\n-            double y1 = y + (2.0/3.0) * (shifted(coords[1], doShift) - y);\n-            \n-            double x2 = x1 + (1.0/3.0) * (shifted(coords[2], doShift) - x);\n-            double y2 = y1 + (1.0/3.0) * (shifted(coords[3], doShift) - y);\n-\n-            x = shifted(coords[2], doShift);\n-            y = shifted(coords[3], doShift);\n-            cairoCurveTo (x1, y1,\n-                          x2, y2,\n-                          x, y);\n-            break;\n-\n-          case PathIterator.SEG_CUBICTO:\n-            x = shifted(coords[4], doShift);\n-            y = shifted(coords[5], doShift);\n-            cairoCurveTo (shifted(coords[0], doShift), shifted(coords[1], doShift),\n-                          shifted(coords[2], doShift), shifted(coords[3], doShift),\n-                          x, y);\n-            break;\n-\n-          case PathIterator.SEG_CLOSE:\n-            cairoClosePath ();\n-            break;\n-          }\n-      }    \n+\tint seg = p.currentSegment(coords);\n+\tswitch (seg)\n+\t  {\n+\t  case PathIterator.SEG_MOVETO:\n+\t    x = shifted(coords[0], doShift);\n+\t    y = shifted(coords[1], doShift);\n+\t    cairoMoveTo(x, y);\n+\t    break;\n+\t  case PathIterator.SEG_LINETO:\n+\t    x = shifted(coords[0], doShift);\n+\t    y = shifted(coords[1], doShift);\n+\t    cairoLineTo(x, y);\n+\t    break;\n+\t  case PathIterator.SEG_QUADTO:\n+\t    // splitting a quadratic bezier into a cubic:\n+\t    // see: http://pfaedit.sourceforge.net/bezier.html\n+\t    double x1 = x + (2.0 / 3.0) * (shifted(coords[0], doShift) - x);\n+\t    double y1 = y + (2.0 / 3.0) * (shifted(coords[1], doShift) - y);\n+\n+\t    double x2 = x1 + (1.0 / 3.0) * (shifted(coords[2], doShift) - x);\n+\t    double y2 = y1 + (1.0 / 3.0) * (shifted(coords[3], doShift) - y);\n+\n+\t    x = shifted(coords[2], doShift);\n+\t    y = shifted(coords[3], doShift);\n+\t    cairoCurveTo(x1, y1, x2, y2, x, y);\n+\t    break;\n+\t  case PathIterator.SEG_CUBICTO:\n+\t    x = shifted(coords[4], doShift);\n+\t    y = shifted(coords[5], doShift);\n+\t    cairoCurveTo(shifted(coords[0], doShift),\n+\t                 shifted(coords[1], doShift),\n+\t                 shifted(coords[2], doShift),\n+\t                 shifted(coords[3], doShift), x, y);\n+\t    break;\n+\t  case PathIterator.SEG_CLOSE:\n+\t    cairoClosePath();\n+\t    break;\n+\t  }\n+      }\n   }\n \n-\n   private final Map getDefaultHints()\n   {\n-    HashMap defaultHints = new HashMap ();\n-    \n-    defaultHints.put (RenderingHints.KEY_TEXT_ANTIALIASING, \n-                      RenderingHints.VALUE_TEXT_ANTIALIAS_DEFAULT);\n-\t\t      \n-    defaultHints.put (RenderingHints.KEY_STROKE_CONTROL, \n-                      RenderingHints.VALUE_STROKE_DEFAULT);    \n-\t\t      \n-    defaultHints.put (RenderingHints.KEY_FRACTIONALMETRICS, \n-                      RenderingHints.VALUE_FRACTIONALMETRICS_OFF);    \n-\t\t      \n-    defaultHints.put (RenderingHints.KEY_ANTIALIASING, \n-                      RenderingHints.VALUE_ANTIALIAS_OFF);    \n-\t\t      \n-    defaultHints.put (RenderingHints.KEY_RENDERING,  \n-                      RenderingHints.VALUE_RENDER_DEFAULT);\n-    \n+    HashMap defaultHints = new HashMap();\n+\n+    defaultHints.put(RenderingHints.KEY_TEXT_ANTIALIASING,\n+                     RenderingHints.VALUE_TEXT_ANTIALIAS_DEFAULT);\n+\n+    defaultHints.put(RenderingHints.KEY_STROKE_CONTROL,\n+                     RenderingHints.VALUE_STROKE_DEFAULT);\n+\n+    defaultHints.put(RenderingHints.KEY_FRACTIONALMETRICS,\n+                     RenderingHints.VALUE_FRACTIONALMETRICS_OFF);\n+\n+    defaultHints.put(RenderingHints.KEY_ANTIALIASING,\n+                     RenderingHints.VALUE_ANTIALIAS_OFF);\n+\n+    defaultHints.put(RenderingHints.KEY_RENDERING,\n+                     RenderingHints.VALUE_RENDER_DEFAULT);\n+\n     return defaultHints;\n-    \n   }\n \n-  private final void updateBufferedImage()\n+  public static final int[] findSimpleIntegerArray (ColorModel cm, Raster raster)\n   {\n-    int[] pixels = getImagePixels();\n-    updateImagePixels(pixels);\n-  }\n+    if (cm == null || raster == null)\n+      return null;\n \n-  \n-  private final boolean isBufferedImageGraphics ()\n-  {\n-    return bimage != null;\n-  }\n-    \n-  private final void updateImagePixels (int[] pixels)\n-  {\n+    if (! cm.getColorSpace().isCS_sRGB())\n+      return null;\n \n-    // This function can only be used if \n-    // this graphics object is used to draw into \n-    // buffered image \n-\t\n-    if (! isBufferedImageGraphics ()) \n-      return;\n+    if (! (cm instanceof DirectColorModel))\n+      return null;\n \n-    WritableRaster raster = bimage.getRaster();\t\t      \n-    DataBuffer db = raster.getDataBuffer ();\n+    DirectColorModel dcm = (DirectColorModel) cm;\n \n-    // update pixels in the bufferedImage\n+    if (dcm.getRedMask() != 0x00FF0000 || dcm.getGreenMask() != 0x0000FF00\n+        || dcm.getBlueMask() != 0x000000FF)\n+      return null;\n \n-    if (raster.getSampleModel ().getDataType () == DataBuffer.TYPE_INT \n-        && db instanceof DataBufferInt \n-        && db.getNumBanks () == 1)\n-      {\n+    if (! (raster instanceof WritableRaster))\n+      return null;\n \n-        // single bank, ARGB-ints buffer in sRGB space\n-        DataBufferInt dbi = (DataBufferInt) raster.getDataBuffer ();\n+    if (raster.getSampleModel().getDataType() != DataBuffer.TYPE_INT)\n+      return null;\n \n-        for (int i=0; i < pixels.length; i++) \n-          dbi.setElem(i, pixels[i]);\n-\t \t\t\t\n-      }\n-    else \n-      {        \n-        bimage.getRaster().setPixels (0, 0, raster.getWidth (),\n-                                      raster.getHeight (), pixels);\n-      }\n-  }\n+    if (! (raster.getDataBuffer() instanceof DataBufferInt))\n+      return null;\n \n+    DataBufferInt db = (DataBufferInt) raster.getDataBuffer();\n \n-  private final boolean drawImage(Image img, \n-                                  AffineTransform xform,\n-                                  Color bgcolor,\t\t\t    \n-                                  ImageObserver obs)\n+    if (db.getNumBanks() != 1)\n+      return null;\n+\n+    // Finally, we have determined that this is a single bank, [A]RGB-int\n+    // buffer in sRGB space. It's worth checking all this, because it means\n+    // that cairo can paint directly into the data buffer, which is very\n+    // fast compared to all the normal copying and converting.\n+\n+    return db.getData();\n+  }\n+\n+  private final void updateBufferedImage()\n   {\n+    if (bimage != null && pixelConversionRequired)\n+      {\n+        int height = bimage.getHeight();\n+        int width = bimage.getWidth();\n+        for (int y = 0; y < height; ++y)\n+          for (int x = 0; x < width; ++x)\n+            bimage.setRGB(x, y, pixelBuffer[y*width+height]);\n+      }\n+  }\n \n+  private final boolean drawImage(Image img, AffineTransform xform,\n+                                  Color bgcolor, ImageObserver obs)\n+  {\n     if (img == null)\n       return false;\n \n-    if (img instanceof GtkOffScreenImage &&\n-        img.getGraphics () instanceof GdkGraphics2D &&            \n-        (xform == null \n-         || xform.getType () == AffineTransform.TYPE_IDENTITY \n-         || xform.getType () == AffineTransform.TYPE_TRANSLATION)\n-        ) \n+    if (img instanceof GtkOffScreenImage\n+        && img.getGraphics() instanceof GdkGraphics2D\n+        && (xform == null || xform.getType() == AffineTransform.TYPE_IDENTITY\n+        || xform.getType() == AffineTransform.TYPE_TRANSLATION))\n       {\n-        // we are being asked to flush a double buffer from Gdk\n-        GdkGraphics2D g2 = (GdkGraphics2D) img.getGraphics ();\n-        gdkDrawDrawable (g2, (int)xform.getTranslateX(), (int)xform.getTranslateY());\n-        \n-        if (isBufferedImageGraphics ()) \n-          updateBufferedImage();   \n-\t \n-        return true;\n+\t// we are being asked to flush a double buffer from Gdk\n+\tGdkGraphics2D g2 = (GdkGraphics2D) img.getGraphics();\n+\tgdkDrawDrawable(g2, (int) xform.getTranslateX(),\n+\t                (int) xform.getTranslateY());\n+\n+\tupdateBufferedImage();\n+\n+\treturn true;\n       }\n     else\n-      {      \n-\n-        // In this case, xform is an AffineTransform that transforms bounding\n-        // box of the specified image from image space to user space. However\n-        // when we pass this transform to cairo, cairo will use this transform\n-        // to map \"user coordinates\" to \"pixel\" coordinates, which is the \n-        // other way around. Therefore to get the \"user -> pixel\" transform \n-        // that cairo wants from \"image -> user\" transform that we currently\n-        // have, we will need to invert the transformation matrix.\n-\t\n-        AffineTransform invertedXform = new AffineTransform();\n-\n-        try\n-          {             \n-            invertedXform = xform.createInverse();\n-             if (img instanceof BufferedImage)\n-               {\n-                   // draw an image which has actually been loaded \n-                   // into memory fully\n-                   \n-                 BufferedImage b = (BufferedImage) img;\n-                 return drawRaster (b.getColorModel (), \n-                                    b.getData (), \n-                                    invertedXform,\n-                                    bgcolor);\n-               }\n-             else\n-               {\n-                 return this.drawImage(GdkPixbufDecoder.createBufferedImage(img.getSource()),\n-                                       xform, bgcolor,obs);\n-               }\t       \n-          }\n-        catch (NoninvertibleTransformException e)\n-          {\n-              throw new ImagingOpException(\"Unable to invert transform \" \n-                                           + xform.toString());\n-          } \t      \n+      {\n+\t// In this case, xform is an AffineTransform that transforms bounding\n+\t// box of the specified image from image space to user space. However\n+\t// when we pass this transform to cairo, cairo will use this transform\n+\t// to map \"user coordinates\" to \"pixel\" coordinates, which is the \n+\t// other way around. Therefore to get the \"user -> pixel\" transform \n+\t// that cairo wants from \"image -> user\" transform that we currently\n+\t// have, we will need to invert the transformation matrix.\n+\tAffineTransform invertedXform = new AffineTransform();\n+\n+\ttry\n+\t  {\n+\t    invertedXform = xform.createInverse();\n+\t    if (img instanceof BufferedImage)\n+\t      {\n+\t\t// draw an image which has actually been loaded \n+\t\t// into memory fully\n+\t\tBufferedImage b = (BufferedImage) img;\n+\t\treturn drawRaster(b.getColorModel(), b.getData(),\n+\t\t                  invertedXform, bgcolor);\n+\t      }\n+\t    else\n+\t      return this.drawImage(GdkPixbufDecoder.createBufferedImage(img\n+\t                                                                 .getSource()),\n+\t                            xform, bgcolor, obs);\n+\t  }\n+\tcatch (NoninvertibleTransformException e)\n+\t  {\n+\t    throw new ImagingOpException(\"Unable to invert transform \"\n+\t                                 + xform.toString());\n+\t  }\n       }\n   }\n \n-\n   //////////////////////////////////////////////////\n   ////// Implementation of Graphics2D Methods //////\n   //////////////////////////////////////////////////\n \n-  public void draw (Shape s)\n+  public void draw(Shape s)\n   {\n-\n-    if (stroke != null &&\n-        !(stroke instanceof BasicStroke))\n+    if (stroke != null && ! (stroke instanceof BasicStroke))\n       {\n-        fill (stroke.createStrokedShape (s));\n-        return;\n+\tfill(stroke.createStrokedShape(s));\n+\treturn;\n       }\n \n-    cairoNewPath ();\n-    \n+    cairoNewPath();\n+\n     if (s instanceof Rectangle2D)\n       {\n-        Rectangle2D r = (Rectangle2D)s;\n-        cairoRectangle (shifted(r.getX (), shiftDrawCalls), \n-                        shifted(r.getY (), shiftDrawCalls), \n-                        r.getWidth (), r.getHeight ());\n+\tRectangle2D r = (Rectangle2D) s;\n+\tcairoRectangle(shifted(r.getX(), shiftDrawCalls),\n+\t               shifted(r.getY(), shiftDrawCalls), r.getWidth(),\n+\t               r.getHeight());\n       }\n-    else      \n-      walkPath (s.getPathIterator (null), shiftDrawCalls);\n-    cairoStroke ();\n-    \n-    if (isBufferedImageGraphics ()) \n-      updateBufferedImage();   \n+    else\n+      walkPath(s.getPathIterator(null), shiftDrawCalls);\n+    cairoStroke();\n+\n+    updateBufferedImage();\n   }\n \n-  public void fill (Shape s)\n+  public void fill(Shape s)\n   {\n-    cairoNewPath ();\n+    cairoNewPath();\n     if (s instanceof Rectangle2D)\n       {\n-        Rectangle2D r = (Rectangle2D)s;\n-        cairoRectangle (r.getX (), r.getY (), r.getWidth (), r.getHeight ());\n+\tRectangle2D r = (Rectangle2D) s;\n+\tcairoRectangle(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n       }\n-    else      \n-      walkPath (s.getPathIterator (null), false);\n-    cairoFill ();\n-    \n-   if (isBufferedImageGraphics ()) \n-     updateBufferedImage();   \n+    else\n+      walkPath(s.getPathIterator(null), false);\n+\n+    cairoFill();\n \n+    updateBufferedImage();\n   }\n \n-  public void clip (Shape s)\n+  public void clip(Shape s)\n   {\n-      // update it\n+    // update it\n+    if (clip == null || s == null)\n+      clip = s;\n+    else if (s instanceof Rectangle2D && clip instanceof Rectangle2D)\n+      {\n+\tRectangle2D r = (Rectangle2D) s;\n+\tRectangle2D curr = (Rectangle2D) clip;\n+\tclip = curr.createIntersection(r);\n+      }\n+    else\n+      throw new UnsupportedOperationException();\n \n-      if (clip == null || s == null)\n-\t  clip = s;\n-      else if (s instanceof Rectangle2D\n-\t       && clip instanceof Rectangle2D)\n+    // draw it\n+    if (clip != null)\n+      {\n+\tcairoNewPath();\n+\tif (clip instanceof Rectangle2D)\n \t  {\n-\t      Rectangle2D r = (Rectangle2D)s;\n-\t      Rectangle2D curr = (Rectangle2D)clip;\n-\t      clip = curr.createIntersection (r);\n+\t    Rectangle2D r = (Rectangle2D) clip;\n+\t    cairoRectangle(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n \t  }\n-      else\n-\t  throw new UnsupportedOperationException ();\n+\telse\n+\t  walkPath(clip.getPathIterator(null), false);\n \n-      // draw it\n-      if (clip != null)\n-\t  {\n-\t      cairoNewPath ();\n-\t      if (clip instanceof Rectangle2D)\n-\t\t  {\n-\t\t      Rectangle2D r = (Rectangle2D)clip;\n-\t\t      cairoRectangle (r.getX (), r.getY (), \n-\t\t\t\t      r.getWidth (), r.getHeight ());\n-\t\t  }\n-\t      else\n-                walkPath (clip.getPathIterator (null), false);\n-\t      // cairoClosePath ();\n-\t      cairoClip ();\n-\t  }\n+\t// cairoClosePath ();\n+\tcairoClip();\n+      }\n   }\n \n-  public Paint getPaint ()\n+  public Paint getPaint()\n   {\n     return paint;\n   }\n \n-  public AffineTransform getTransform ()\n+  public AffineTransform getTransform()\n   {\n-      return (AffineTransform) transform.clone ();\n+    return (AffineTransform) transform.clone();\n   }\n \n-  public void setPaint (Paint p)\n+  public void setPaint(Paint p)\n   {\n     if (paint == null)\n-        return;\n-      \n+      return;\n+\n     paint = p;\n     if (paint instanceof Color)\n       {\n-        setColor ((Color) paint);\n+        setColor((Color) paint);\n       }\n     else if (paint instanceof TexturePaint)\n       {\n-        TexturePaint tp = (TexturePaint) paint;\n-        BufferedImage img = tp.getImage ();\n-\t \n-        // map the image to the anchor rectangle  \n+\tTexturePaint tp = (TexturePaint) paint;\n+\tBufferedImage img = tp.getImage();\n \n-        int width = (int) tp.getAnchorRect ().getWidth ();\n-        int height = (int) tp.getAnchorRect ().getHeight ();\n-\t\n-        double scaleX = width / (double) img.getWidth ();\n-        double scaleY = width / (double) img.getHeight ();\n-\t \n-        AffineTransform at = new AffineTransform (scaleX, 0, 0, scaleY, 0, 0);\n-        AffineTransformOp op = new AffineTransformOp (at, getRenderingHints());\n-        BufferedImage texture = op.filter(img, null);\n-        int pixels[] = texture.getRGB (0, 0, width, height, null, 0, width);\n-        setTexturePixels (pixels, width, height, width);\n+\t// map the image to the anchor rectangle  \n+\tint width = (int) tp.getAnchorRect().getWidth();\n+\tint height = (int) tp.getAnchorRect().getHeight();\n+\n+\tdouble scaleX = width / (double) img.getWidth();\n+\tdouble scaleY = width / (double) img.getHeight();\n \n+\tAffineTransform at = new AffineTransform(scaleX, 0, 0, scaleY, 0, 0);\n+\tAffineTransformOp op = new AffineTransformOp(at, getRenderingHints());\n+\tBufferedImage texture = op.filter(img, null);\n+\tint[] pixels = texture.getRGB(0, 0, width, height, null, 0, width);\n+\tsetTexturePixels(pixels, width, height, width);\n       }\n     else if (paint instanceof GradientPaint)\n       {\n-        GradientPaint gp = (GradientPaint) paint;\n-        Point2D p1 = gp.getPoint1 ();\n-        Point2D p2 = gp.getPoint2 ();\n-        Color c1 = gp.getColor1 ();\n-        Color c2 = gp.getColor2 ();        \n-        setGradient (p1.getX (), p1.getY (),\n-                     p2.getX (), p2.getY (),\n-                     c1.getRed (), c1.getGreen (), \n-                     c1.getBlue (), c1.getAlpha (),\n-                     c2.getRed (), c2.getGreen (), \n-                     c2.getBlue (), c2.getAlpha (),\n-                     gp.isCyclic ());\n+\tGradientPaint gp = (GradientPaint) paint;\n+\tPoint2D p1 = gp.getPoint1();\n+\tPoint2D p2 = gp.getPoint2();\n+\tColor c1 = gp.getColor1();\n+\tColor c2 = gp.getColor2();\n+\tsetGradient(p1.getX(), p1.getY(), p2.getX(), p2.getY(), c1.getRed(),\n+\t            c1.getGreen(), c1.getBlue(), c1.getAlpha(), c2.getRed(),\n+\t            c2.getGreen(), c2.getBlue(), c2.getAlpha(), gp.isCyclic());\n       }\n     else\n-      throw new java.lang.UnsupportedOperationException ();\n+      throw new java.lang.UnsupportedOperationException();\n   }\n \n-  public void setTransform (AffineTransform tx)\n+  public void setTransform(AffineTransform tx)\n   {\n     transform = tx;\n     if (transform != null)\n       {\n-        double m[] = new double[6];\n-        transform.getMatrix (m);\n-        cairoSetMatrix (m);\n+\tdouble[] m = new double[6];\n+\ttransform.getMatrix(m);\n+\tcairoSetMatrix(m);\n       }\n   }\n \n-  public void transform (AffineTransform tx)\n+  public void transform(AffineTransform tx)\n   {\n     if (transform == null)\n-      transform = new AffineTransform (tx);\n+      transform = new AffineTransform(tx);\n     else\n-      transform.concatenate (tx);\n-    setTransform (transform);\n+      transform.concatenate(tx);\n+    setTransform(transform);\n     if (clip != null)\n       {\n-        // FIXME: this should actuall try to transform the shape\n-        // rather than degrade to bounds.\n-        Rectangle2D r = clip.getBounds2D();\n-        double[] coords = new double[] { r.getX(), r.getY(), \n-                                         r.getX() + r.getWidth(),\n-                                         r.getY() + r.getHeight() };\n-        try \n-          {\n-            tx.createInverse().transform(coords, 0, coords, 0, 2);\n-            r.setRect(coords[0], coords[1],\n-                      coords[2] - coords[0], \n-                      coords[3] - coords[1]);\n-            clip = r;\n-          }\n-        catch (java.awt.geom.NoninvertibleTransformException e)\n-          {\n-          }\n+\t// FIXME: this should actuall try to transform the shape\n+\t// rather than degrade to bounds.\n+\tRectangle2D r = clip.getBounds2D();\n+\tdouble[] coords = new double[]\n+\t                  {\n+\t                    r.getX(), r.getY(), r.getX() + r.getWidth(),\n+\t                    r.getY() + r.getHeight()\n+\t                  };\n+\ttry\n+\t  {\n+\t    tx.createInverse().transform(coords, 0, coords, 0, 2);\n+\t    r.setRect(coords[0], coords[1], coords[2] - coords[0],\n+\t              coords[3] - coords[1]);\n+\t    clip = r;\n+\t  }\n+\tcatch (java.awt.geom.NoninvertibleTransformException e)\n+\t  {\n+\t  }\n       }\n   }\n \n   public void rotate(double theta)\n   {\n-    transform (AffineTransform.getRotateInstance (theta));\n+    transform(AffineTransform.getRotateInstance(theta));\n   }\n \n   public void rotate(double theta, double x, double y)\n   {\n-    transform (AffineTransform.getRotateInstance (theta, x, y));\n+    transform(AffineTransform.getRotateInstance(theta, x, y));\n   }\n \n   public void scale(double sx, double sy)\n   {\n-    transform (AffineTransform.getScaleInstance (sx, sy));\n+    transform(AffineTransform.getScaleInstance(sx, sy));\n   }\n \n-  public void translate (double tx, double ty)\n+  public void translate(double tx, double ty)\n   {\n-    transform (AffineTransform.getTranslateInstance (tx, ty));\n+    transform(AffineTransform.getTranslateInstance(tx, ty));\n   }\n \n-  public void translate (int x, int y)\n+  public void translate(int x, int y)\n   {\n-    translate ((double) x, (double) y);\n+    translate((double) x, (double) y);\n   }\n \n   public void shear(double shearX, double shearY)\n   {\n-    transform (AffineTransform.getShearInstance (shearX, shearY));\n+    transform(AffineTransform.getShearInstance(shearX, shearY));\n   }\n \n   public Stroke getStroke()\n   {\n     return stroke;\n   }\n \n-  public void setStroke (Stroke st)\n+  public void setStroke(Stroke st)\n   {\n     stroke = st;\n     if (stroke instanceof BasicStroke)\n       {\n-        BasicStroke bs = (BasicStroke) stroke;\n-        cairoSetLineCap (bs.getEndCap());\n-        cairoSetLineWidth (bs.getLineWidth());\n-        cairoSetLineJoin (bs.getLineJoin());\n-        cairoSetMiterLimit (bs.getMiterLimit());\n-        float dashes[] = bs.getDashArray();\n-        if (dashes != null)\n-          {\n-            double double_dashes[] = new double[dashes.length];\n-            for (int i = 0; i < dashes.length; i++)\n-              double_dashes[i] = dashes[i];\n-            cairoSetDash (double_dashes, double_dashes.length, \n-                          (double) bs.getDashPhase ());        \n-          }\n+\tBasicStroke bs = (BasicStroke) stroke;\n+\tcairoSetLineCap(bs.getEndCap());\n+\tcairoSetLineWidth(bs.getLineWidth());\n+\tcairoSetLineJoin(bs.getLineJoin());\n+\tcairoSetMiterLimit(bs.getMiterLimit());\n+\tfloat[] dashes = bs.getDashArray();\n+\tif (dashes != null)\n+\t  {\n+\t    double[] double_dashes = new double[dashes.length];\n+\t    for (int i = 0; i < dashes.length; i++)\n+\t      double_dashes[i] = dashes[i];\n+\t    cairoSetDash(double_dashes, double_dashes.length,\n+\t                 (double) bs.getDashPhase());\n+\t  }\n       }\n   }\n \n-\n   ////////////////////////////////////////////////\n   ////// Implementation of Graphics Methods //////\n   ////////////////////////////////////////////////\n \n-  public void setPaintMode () \n-  { \n-    setComposite (java.awt.AlphaComposite.SrcOver); \n+  public void setPaintMode()\n+  {\n+    setComposite(java.awt.AlphaComposite.SrcOver);\n   }\n \n-  public void setXORMode (Color c) \n-  { \n-    setComposite (new gnu.java.awt.BitwiseXORComposite(c)); \n+  public void setXORMode(Color c)\n+  {\n+    setComposite(new gnu.java.awt.BitwiseXORComposite(c));\n   }\n \n-  public void setColor (Color c)\n+  public void setColor(Color c)\n   {\n     if (c == null)\n       c = Color.BLACK;\n-    \n+\n     fg = c;\n     paint = c;\n-    cairoSetRGBColor (fg.getRed() / 255.0, \n-                      fg.getGreen() / 255.0, \n-                      fg.getBlue() / 255.0);\n-    cairoSetAlpha ((fg.getAlpha() & 255) / 255.0);\n+    cairoSetRGBColor(fg.getRed() / 255.0, fg.getGreen() / 255.0,\n+                     fg.getBlue() / 255.0);\n+    cairoSetAlpha((fg.getAlpha() & 255) / 255.0);\n   }\n \n-  public Color getColor ()\n+  public Color getColor()\n   {\n     return fg;\n   }\n \n-  public void clipRect (int x, int y, int width, int height)\n+  public void clipRect(int x, int y, int width, int height)\n   {\n-      clip (new Rectangle (x, y, width, height));\n+    clip(new Rectangle(x, y, width, height));\n   }\n \n-  public Shape getClip ()\n+  public Shape getClip()\n   {\n-    return getClipInDevSpace ();\n+    return clip.getBounds2D(); //getClipInDevSpace();\n   }\n \n-  public Rectangle getClipBounds ()\n+  public Rectangle getClipBounds()\n   {\n     if (clip == null)\n       return null;\n     else\n-      return clip.getBounds ();\n+      return clip.getBounds();\n   }\n \n-  protected Rectangle2D getClipInDevSpace ()\n+  protected Rectangle2D getClipInDevSpace()\n   {\n-    Rectangle2D uclip = clip.getBounds2D ();\n+    Rectangle2D uclip = clip.getBounds2D();\n     if (transform == null)\n       return uclip;\n     else\n       {\n-        Point2D pos = transform.transform (new Point2D.Double(uclip.getX (), \n-                                                              uclip.getY ()), \n-                                           (Point2D)null);\t\t\n-        Point2D extent = transform.deltaTransform (new Point2D.Double(uclip.getWidth (), \n-                                                                      uclip.getHeight ()), \n-                                                   (Point2D)null);\n-        return new Rectangle2D.Double (pos.getX (), pos.getY (),\n-                                       extent.getX (), extent.getY ());\t      \n+\tPoint2D pos = transform.transform(new Point2D.Double(uclip.getX(),\n+\t                                                     uclip.getY()),\n+\t                                  (Point2D) null);\n+\tPoint2D extent = transform.deltaTransform(new Point2D.Double(uclip\n+\t                                                             .getWidth(),\n+\t                                                             uclip\n+\t                                                             .getHeight()),\n+\t                                          (Point2D) null);\n+\treturn new Rectangle2D.Double(pos.getX(), pos.getY(), extent.getX(),\n+\t                              extent.getY());\n       }\n   }\n \n-  public void setClip (int x, int y, int width, int height)\n+  public void setClip(int x, int y, int width, int height)\n   {\n-    setClip(new Rectangle2D.Double ((double)x, (double)y, \n-                                    (double)width, (double)height));\n+    setClip(new Rectangle2D.Double((double) x, (double) y, (double) width,\n+                                   (double) height));\n   }\n-  \n-  public void setClip (Shape s)\n+\n+  public void setClip(Shape s)\n   {\n     clip = s;\n     if (s != null)\n       {\n-        cairoNewPath ();\n-        if (s instanceof Rectangle2D)\n-          {\n-            Rectangle2D r = (Rectangle2D)s;\n-            cairoRectangle (r.getX (), r.getY (), \n-                            r.getWidth (), r.getHeight ());\n-          }\n-        else\n-          walkPath (s.getPathIterator (null), false);\n-        // cairoClosePath ();\n-        cairoClip ();\n+\tcairoNewPath();\n+\tif (s instanceof Rectangle2D)\n+\t  {\n+\t    Rectangle2D r = (Rectangle2D) s;\n+\t    cairoRectangle(r.getX(), r.getY(), r.getWidth(), r.getHeight());\n+\t  }\n+\telse\n+\t  walkPath(s.getPathIterator(null), false);\n+\n+\t// cairoClosePath ();\n+\tcairoClip();\n       }\n   }\n-  \n+\n   private static BasicStroke draw3DRectStroke = new BasicStroke();\n \n-  public void draw3DRect(int x, int y, int width, \n-                         int height, boolean raised)\n+  public void draw3DRect(int x, int y, int width, int height, boolean raised)\n   {\n     Stroke tmp = stroke;\n     setStroke(draw3DRectStroke);\n     super.draw3DRect(x, y, width, height, raised);\n-    setStroke(tmp);    \n-    if (isBufferedImageGraphics ()) \n-      updateBufferedImage();   \n+    setStroke(tmp);\n+    updateBufferedImage();\n   }\n \n-  public void fill3DRect(int x, int y, int width, \n-                         int height, boolean raised)\n+  public void fill3DRect(int x, int y, int width, int height, boolean raised)\n   {\n     Stroke tmp = stroke;\n     setStroke(draw3DRectStroke);\n     super.fill3DRect(x, y, width, height, raised);\n-    setStroke(tmp);    \n-    if (isBufferedImageGraphics ()) \n-      updateBufferedImage();   \n+    setStroke(tmp);\n+    updateBufferedImage();\n   }\n \n-\n-  public void drawRect (int x, int y, int width, int height)\n+  public void drawRect(int x, int y, int width, int height)\n   {\n-    draw(new Rectangle (x, y, width, height));\n+    draw(new Rectangle(x, y, width, height));\n   }\n \n-  public void fillRect (int x, int y, int width, int height)\n+  public void fillRect(int x, int y, int width, int height)\n   {\n-    cairoNewPath ();\n-    cairoRectangle (x, y, width, height);\n-    cairoFill ();\n+    cairoNewPath();\n+    cairoRectangle(x, y, width, height);\n+    cairoFill();\n   }\n \n-  public void clearRect (int x, int y, int width, int height)\n+  public void clearRect(int x, int y, int width, int height)\n   {\n-    cairoSetRGBColor (bg.getRed() / 255.0, \n-                      bg.getGreen() / 255.0, \n-                      bg.getBlue() / 255.0);\n-    cairoSetAlpha (1.0);\n-    cairoNewPath ();\n-    cairoRectangle (x, y, width, height);\n-    cairoFill ();\n-    setColor (fg);\n-       \n-    if (isBufferedImageGraphics ()) \n-      updateBufferedImage();   \n+    cairoSetRGBColor(bg.getRed() / 255.0, bg.getGreen() / 255.0,\n+                     bg.getBlue() / 255.0);\n+    cairoSetAlpha(1.0);\n+    cairoNewPath();\n+    cairoRectangle(x, y, width, height);\n+    cairoFill();\n+    setColor(fg);\n \n+    updateBufferedImage();\n   }\n \n   public void setBackground(Color c)\n@@ -958,181 +927,172 @@ public Color getBackground()\n     return bg;\n   }\n \n-  private final void doPolygon(int[] xPoints, int[] yPoints, int nPoints, \n+  private final void doPolygon(int[] xPoints, int[] yPoints, int nPoints,\n                                boolean close, boolean fill)\n-  {    \n+  {\n     if (nPoints < 1)\n       return;\n-    GeneralPath gp = new GeneralPath (PathIterator.WIND_EVEN_ODD);\n-    gp.moveTo ((float)xPoints[0], (float)yPoints[0]);\n+    GeneralPath gp = new GeneralPath(PathIterator.WIND_EVEN_ODD);\n+    gp.moveTo((float) xPoints[0], (float) yPoints[0]);\n     for (int i = 1; i < nPoints; i++)\n-      gp.lineTo ((float)xPoints[i], (float)yPoints[i]);\n-    \n+      gp.lineTo((float) xPoints[i], (float) yPoints[i]);\n+\n     if (close)\n-      gp.closePath ();\n+      gp.closePath();\n \n     Shape sh = gp;\n-    if (fill == false &&\n-        stroke != null &&\n-        !(stroke instanceof BasicStroke))\n+    if (fill == false && stroke != null && ! (stroke instanceof BasicStroke))\n       {\n-        sh = stroke.createStrokedShape (gp);\n-        fill = true;\n+\tsh = stroke.createStrokedShape(gp);\n+\tfill = true;\n       }\n-    \n-    if (fill) \n-      fill (sh);\n-    else \n-      draw (sh);\n+\n+    if (fill)\n+      fill(sh);\n+    else\n+      draw(sh);\n   }\n \n-  public void drawLine (int x1, int y1, int x2, int y2)\n+  public void drawLine(int x1, int y1, int x2, int y2)\n   {\n-    int xp[] = new int[2];\n-    int yp[] = new int[2];\n+    int[] xp = new int[2];\n+    int[] yp = new int[2];\n \n     xp[0] = x1;\n     xp[1] = x2;\n     yp[0] = y1;\n     yp[1] = y2;\n-    \n-    doPolygon (xp, yp, 2, false, false);\n+\n+    doPolygon(xp, yp, 2, false, false);\n   }\n \n   public void fillPolygon(int[] xPoints, int[] yPoints, int nPoints)\n   {\n-    doPolygon (xPoints, yPoints, nPoints, true, true);\n+    doPolygon(xPoints, yPoints, nPoints, true, true);\n   }\n-  \n+\n   public void drawPolygon(int[] xPoints, int[] yPoints, int nPoints)\n-  {    \n-    doPolygon (xPoints, yPoints, nPoints, true, false);\n+  {\n+    doPolygon(xPoints, yPoints, nPoints, true, false);\n   }\n \n   public void drawPolyline(int[] xPoints, int[] yPoints, int nPoints)\n   {\n-    doPolygon (xPoints, yPoints, nPoints, false, false);\n+    doPolygon(xPoints, yPoints, nPoints, false, false);\n   }\n \n-  private final boolean drawRaster (ColorModel cm, Raster r, \n-                                    AffineTransform imageToUser, \n-                                    Color bgcolor)\n+  private final boolean drawRaster(ColorModel cm, Raster r,\n+                                   AffineTransform imageToUser, Color bgcolor)\n   {\n     if (r == null)\n       return false;\n \n-    SampleModel sm = r.getSampleModel ();\n-    DataBuffer db = r.getDataBuffer ();\n+    SampleModel sm = r.getSampleModel();\n+    DataBuffer db = r.getDataBuffer();\n \n     if (db == null || sm == null)\n       return false;\n \n     if (cm == null)\n-      cm = ColorModel.getRGBdefault ();\n+      cm = ColorModel.getRGBdefault();\n \n     double[] i2u = new double[6];\n     if (imageToUser != null)\n       imageToUser.getMatrix(i2u);\n     else\n       {\n-        i2u[0] = 1; i2u[1] = 0;\n-        i2u[2] = 0; i2u[3] = 1;\n-        i2u[4] = 0; i2u[5] = 0;\n+\ti2u[0] = 1;\n+\ti2u[1] = 0;\n+\ti2u[2] = 0;\n+\ti2u[3] = 1;\n+\ti2u[4] = 0;\n+\ti2u[5] = 0;\n       }\n \n-    int pixels[] = null;\n+    int[] pixels = findSimpleIntegerArray(cm, r);\n \n-    if (sm.getDataType () == DataBuffer.TYPE_INT &&\n-        db instanceof DataBufferInt &&\n-        db.getNumBanks () == 1)\n+    if (pixels == null)\n       {\n-        // single bank, ARGB-ints buffer in sRGB space\n-        DataBufferInt dbi = (DataBufferInt)db;\n-        pixels = dbi.getData ();\n+\t// FIXME: I don't think this code will work correctly with a non-RGB\n+\t// MultiPixelPackedSampleModel. Although this entire method should \n+\t// probably be rewritten to better utilize Cairo's different supported\n+\t// data formats.\n+\tif (sm instanceof MultiPixelPackedSampleModel)\n+\t  {\n+\t    pixels = r.getPixels(0, 0, r.getWidth(), r.getHeight(), pixels);\n+\t    for (int i = 0; i < pixels.length; i++)\n+\t      pixels[i] = cm.getRGB(pixels[i]);\n+\t  }\n+\telse\n+\t  {\n+\t    pixels = new int[r.getWidth() * r.getHeight()];\n+\t    for (int i = 0; i < pixels.length; i++)\n+\t      pixels[i] = cm.getRGB(db.getElem(i));\n+\t  }\n       }\n-    else\n-      pixels = r.getPixels (0, 0, r.getWidth (), r.getHeight (), pixels);\n-    \n-    ColorSpace cs = cm.getColorSpace ();\n-    if (cs != null && \n-        cs.getType () != ColorSpace.CS_sRGB)\n+\n+    // Change all transparent pixels in the image to the specified bgcolor,\n+    // or (if there's no alpha) fill in an alpha channel so that it paints\n+    // correctly.\n+    if (cm.hasAlpha())\n       {\n-        int pixels2[] = new int[pixels.length];        \n-        for (int i = 0; i < pixels2.length; i++)\n-          pixels2[i] = cm.getRGB (pixels[i]);        \n-        pixels = pixels2;\n+\tif (bgcolor != null && cm.hasAlpha())\n+\t  for (int i = 0; i < pixels.length; i++)\n+\t    {\n+\t      if (cm.getAlpha(pixels[i]) == 0)\n+\t\tpixels[i] = bgcolor.getRGB();\n+\t    }\n       }\n-    \n-    // change all transparent pixels in the image to the \n-    // specified bgcolor\n-            \n-    if (bgcolor != null) \n-      {\n-        for (int i = 0; i < pixels.length; i++) \n-          {\n-            if (cm.getAlpha (pixels[i]) == 0) \n-              pixels[i] = bgcolor.getRGB ();\t    \n-          }\n-      } \n-\n-    drawPixels (pixels, r.getWidth (), r.getHeight (), r.getWidth (), i2u);\n-    \n-    if (isBufferedImageGraphics ()) \n-      updateBufferedImage();   \n+    else\n+      for (int i = 0; i < pixels.length; i++)\n+\tpixels[i] |= 0xFF000000;\n+\n+    drawPixels(pixels, r.getWidth(), r.getHeight(), r.getWidth(), i2u);\n+\n+    updateBufferedImage();\n \n     return true;\n   }\n \n-  public void drawRenderedImage(RenderedImage image,\n-                                AffineTransform xform)\n+  public void drawRenderedImage(RenderedImage image, AffineTransform xform)\n   {\n-    drawRaster (image.getColorModel(), image.getData(), xform, bg);\n+    drawRaster(image.getColorModel(), image.getData(), xform, bg);\n   }\n-  \n-  public void drawRenderableImage(RenderableImage image,\n-                                  AffineTransform xform)\n+\n+  public void drawRenderableImage(RenderableImage image, AffineTransform xform)\n   {\n-    drawRenderedImage (image.createRendering (new RenderContext (xform)), xform);\n+    drawRenderedImage(image.createRendering(new RenderContext(xform)), xform);\n   }\n-  \n-  public boolean drawImage(Image img, \n-                           AffineTransform xform,\n-                           ImageObserver obs)\n+\n+  public boolean drawImage(Image img, AffineTransform xform, ImageObserver obs)\n   {\n-    return drawImage(img, xform, bg, obs); \n+    return drawImage(img, xform, bg, obs);\n   }\n \n-  public void drawImage(BufferedImage image,\n-                        BufferedImageOp op,\n-                        int x,\n-                        int y)\n+  public void drawImage(BufferedImage image, BufferedImageOp op, int x, int y)\n   {\n     Image filtered = op.filter(image, null);\n-    drawImage(filtered, new AffineTransform(1f,0f,0f,1f,x,y), bg, null);\n+    drawImage(filtered, new AffineTransform(1f, 0f, 0f, 1f, x, y), bg, null);\n   }\n \n-  public boolean drawImage (Image img, int x, int y, \n-                            ImageObserver observer)\n+  public boolean drawImage(Image img, int x, int y, ImageObserver observer)\n   {\n-    return drawImage(img, new AffineTransform(1f,0f,0f,1f,x,y), bg, observer);    \n+    return drawImage(img, new AffineTransform(1f, 0f, 0f, 1f, x, y), bg,\n+                     observer);\n   }\n \n-\n   ///////////////////////////////////////////////\n   ////// Unimplemented Stubs and Overloads //////\n   ///////////////////////////////////////////////\n \n-  \n-    \n-  public boolean hit(Rectangle rect, Shape text,\n-                     boolean onStroke)\n+  public boolean hit(Rectangle rect, Shape text, boolean onStroke)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    throw new java.lang.UnsupportedOperationException();\n   }\n \n   public GraphicsConfiguration getDeviceConfiguration()\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    throw new java.lang.UnsupportedOperationException();\n   }\n \n   public void setComposite(Composite comp)\n@@ -1141,87 +1101,81 @@ public void setComposite(Composite comp)\n \n     if (comp instanceof AlphaComposite)\n       {\n-        AlphaComposite a = (AlphaComposite) comp;\n-        cairoSetOperator(a.getRule());\n-        Color c = getColor();\n-        setColor(new Color(c.getRed(),\n-                           c.getGreen(),\n-                           c.getBlue(),\n-                           (int) (a.getAlpha() * ((float) c.getAlpha()))));\n+\tAlphaComposite a = (AlphaComposite) comp;\n+\tcairoSetOperator(a.getRule());\n+\tColor c = getColor();\n+\tsetColor(new Color(c.getRed(), c.getGreen(), c.getBlue(),\n+\t                   (int) (a.getAlpha() * ((float) c.getAlpha()))));\n       }\n     else\n-      throw new java.lang.UnsupportedOperationException ();\n+      throw new java.lang.UnsupportedOperationException();\n   }\n \n-  public void setRenderingHint(RenderingHints.Key hintKey,\n-                               Object hintValue)\n+  public void setRenderingHint(RenderingHints.Key hintKey, Object hintValue)\n   {\n-    hints.put (hintKey, hintValue);    \n-    \n+    hints.put(hintKey, hintValue);\n+\n     if (hintKey.equals(RenderingHints.KEY_INTERPOLATION)\n-        || hintKey.equals(RenderingHints.KEY_ALPHA_INTERPOLATION)) \n+        || hintKey.equals(RenderingHints.KEY_ALPHA_INTERPOLATION))\n       {\n-\t\t\t\n-        if (hintValue.equals(RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR))\n-           cairoSurfaceSetFilter(0);\n-\t   \n-        else if (hintValue.equals(RenderingHints.VALUE_INTERPOLATION_BILINEAR))\n-           cairoSurfaceSetFilter(1); \n-\t   \n-        else if (hintValue.equals(RenderingHints.VALUE_ALPHA_INTERPOLATION_SPEED))\n-           cairoSurfaceSetFilter(2);\n-\t   \n-        else if (hintValue.equals(RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY))\n-           cairoSurfaceSetFilter(3);\n-\t   \n-        else if (hintValue.equals(RenderingHints.VALUE_ALPHA_INTERPOLATION_DEFAULT))\n-           cairoSurfaceSetFilter(4);\n-      \n+\tif (hintValue.equals(RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR))\n+\t  cairoSurfaceSetFilter(0);\n+\n+\telse if (hintValue.equals(RenderingHints.VALUE_INTERPOLATION_BILINEAR))\n+\t  cairoSurfaceSetFilter(1);\n+\n+\telse if (hintValue.equals(RenderingHints.VALUE_ALPHA_INTERPOLATION_SPEED))\n+\t  cairoSurfaceSetFilter(2);\n+\n+\telse if (hintValue.equals(RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY))\n+\t  cairoSurfaceSetFilter(3);\n+\n+\telse if (hintValue.equals(RenderingHints.VALUE_ALPHA_INTERPOLATION_DEFAULT))\n+\t  cairoSurfaceSetFilter(4);\n       }\n \n-    shiftDrawCalls = hints.containsValue (RenderingHints.VALUE_STROKE_NORMALIZE)\n-      || hints.containsValue (RenderingHints.VALUE_STROKE_DEFAULT);\n-    \n+    shiftDrawCalls = hints.containsValue(RenderingHints.VALUE_STROKE_NORMALIZE)\n+                     || hints.containsValue(RenderingHints.VALUE_STROKE_DEFAULT);\n   }\n \n   public Object getRenderingHint(RenderingHints.Key hintKey)\n   {\n-    return hints.get (hintKey);\n+    return hints.get(hintKey);\n   }\n-  \n+\n   public void setRenderingHints(Map hints)\n   {\n-    this.hints = new RenderingHints (getDefaultHints ());\n-    this.hints.add (new RenderingHints (hints));\n-        \n-    if (hints.containsKey(RenderingHints.KEY_INTERPOLATION)) \n+    this.hints = new RenderingHints(getDefaultHints());\n+    this.hints.add(new RenderingHints(hints));\n+\n+    if (hints.containsKey(RenderingHints.KEY_INTERPOLATION))\n+      {\n+\tif (hints.containsValue(RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR))\n+\t  cairoSurfaceSetFilter(0);\n+\n+\telse if (hints.containsValue(RenderingHints.VALUE_INTERPOLATION_BILINEAR))\n+\t  cairoSurfaceSetFilter(1);\n+      }\n+\n+    if (hints.containsKey(RenderingHints.KEY_ALPHA_INTERPOLATION))\n       {\n-         if(hints.containsValue(RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR)) \n-            cairoSurfaceSetFilter(0);\n-\t    \n-         else if(hints.containsValue(RenderingHints.VALUE_INTERPOLATION_BILINEAR)) \n-            cairoSurfaceSetFilter(1);  \n+\tif (hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_SPEED))\n+\t  cairoSurfaceSetFilter(2);\n+\n+\telse if (hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY))\n+\t  cairoSurfaceSetFilter(3);\n+\n+\telse if (hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_DEFAULT))\n+\t  cairoSurfaceSetFilter(4);\n       }\n-          \n-    if (hints.containsKey(RenderingHints.KEY_ALPHA_INTERPOLATION)) \n-      { \n-         if (hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_SPEED)) \n-            cairoSurfaceSetFilter(2);\n-\t    \n-         else if (hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY)) \n-            cairoSurfaceSetFilter(3);\n-\t    \n-         else if(hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_DEFAULT)) \n-            cairoSurfaceSetFilter(4);\n-      }      \n-\n-    shiftDrawCalls = hints.containsValue (RenderingHints.VALUE_STROKE_NORMALIZE)\n-      || hints.containsValue (RenderingHints.VALUE_STROKE_DEFAULT);\n+\n+    shiftDrawCalls = hints.containsValue(RenderingHints.VALUE_STROKE_NORMALIZE)\n+                     || hints.containsValue(RenderingHints.VALUE_STROKE_DEFAULT);\n   }\n \n   public void addRenderingHints(Map hints)\n   {\n-    this.hints.add (new RenderingHints (hints));\n+    this.hints.add(new RenderingHints(hints));\n   }\n \n   public RenderingHints getRenderingHints()\n@@ -1237,70 +1191,62 @@ public Composite getComposite()\n       return comp;\n   }\n \n-  public FontRenderContext getFontRenderContext ()\n+  public FontRenderContext getFontRenderContext()\n   {\n-    return new FontRenderContext (transform, true, true);\n+    return new FontRenderContext(transform, true, true);\n   }\n \n-  public void copyArea (int x, int y, int width, int height, int dx, int dy)\n+  public void copyArea(int x, int y, int width, int height, int dx, int dy)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    throw new java.lang.UnsupportedOperationException();\n   }\n \n-  public void drawArc (int x, int y, int width, int height,\n-                       int startAngle, int arcAngle)\n+  public void drawArc(int x, int y, int width, int height, int startAngle,\n+                      int arcAngle)\n   {\n-    draw (new Arc2D.Double((double)x, (double)y, \n-                           (double)width, (double)height,\n-                           (double)startAngle, (double)arcAngle,\n-                           Arc2D.OPEN));\n+    draw(new Arc2D.Double((double) x, (double) y, (double) width,\n+                          (double) height, (double) startAngle,\n+                          (double) arcAngle, Arc2D.OPEN));\n   }\n \n-  public boolean drawImage (Image img, int x, int y, Color bgcolor, \n-                            ImageObserver observer)\n+  public boolean drawImage(Image img, int x, int y, Color bgcolor,\n+                           ImageObserver observer)\n   {\n-    return drawImage (img, x, y, img.getWidth (observer), \n-                      img.getHeight (observer), bgcolor, observer);\n+    return drawImage(img, x, y, img.getWidth(observer),\n+                     img.getHeight(observer), bgcolor, observer);\n   }\n \n-  public boolean drawImage (Image img, int x, int y, int width, int height, \n-                            Color bgcolor, ImageObserver observer)\n+  public boolean drawImage(Image img, int x, int y, int width, int height,\n+                           Color bgcolor, ImageObserver observer)\n   {\n-   \n-    double scaleX =  width / (double) img.getWidth (observer);           \n-    double scaleY =  height / (double) img.getHeight (observer);\n-\n-    return drawImage (img, \n-                      new AffineTransform(scaleX, 0f, 0f, scaleY, x, y),\n-                      bgcolor,\n-                      observer);\n+    double scaleX = width / (double) img.getWidth(observer);\n+    double scaleY = height / (double) img.getHeight(observer);\n \n+    return drawImage(img, new AffineTransform(scaleX, 0f, 0f, scaleY, x, y),\n+                     bgcolor, observer);\n   }\n \n-  public boolean drawImage (Image img, int x, int y, int width, int height, \n-                            ImageObserver observer)\n+  public boolean drawImage(Image img, int x, int y, int width, int height,\n+                           ImageObserver observer)\n   {\n-\n-    return drawImage (img, x, y, width, height, bg, observer);\n-\n+    return drawImage(img, x, y, width, height, bg, observer);\n   }\n \n-  public boolean drawImage (Image img, int dx1, int dy1, int dx2, int dy2, \n-                            int sx1, int sy1, int sx2, int sy2, \n-                            Color bgcolor, ImageObserver observer)\n+  public boolean drawImage(Image img, int dx1, int dy1, int dx2, int dy2,\n+                           int sx1, int sy1, int sx2, int sy2, Color bgcolor,\n+                           ImageObserver observer)\n   {\n-  \n     if (img == null)\n       return false;\n \n-    Image subImage;\t\n-    \n+    Image subImage;\n+\n     int sourceWidth = sx2 - sx1;\n-    int sourceHeight = sy2 - sy1;     \n-    \n+    int sourceHeight = sy2 - sy1;\n+\n     int destWidth = dx2 - dx1;\n     int destHeight = dy2 - dy1;\n-    \n+\n     double scaleX = destWidth / (double) sourceWidth;\n     double scaleY = destHeight / (double) sourceHeight;\n \n@@ -1309,48 +1255,42 @@ public boolean drawImage (Image img, int dx1, int dy1, int dx2, int dy2,\n \t\n     if (img instanceof BufferedImage)\n       {\n-\n-        BufferedImage b = (BufferedImage) img;\n-        subImage = b.getSubimage(sx1,sy1,sx2,sy2);  \n-      } \n-    else \n+\tBufferedImage b = (BufferedImage) img;\n+\tsubImage = b.getSubimage(sx1, sy1, sx2, sy2);\n+      }\n+    else\n       {\n-\n-        // FIXME: This code currently doesn't work. Null Pointer \n-        // exception is thrown in this case. This happens \n-        // because img.getSource() always returns null, since source gets \n-        // never initialized when it is created with the help of \n-        // createImage(int width, int height). \n-             \n-\t CropImageFilter filter = new CropImageFilter(sx1,sx2,sx2,sy2);\n-        FilteredImageSource src = new FilteredImageSource(img.getSource(), \n-                                                          filter);\t\n-\t\t\t\t\t\t\t  \t\t\t\t\t\t  \n-        subImage = Toolkit.getDefaultToolkit().createImage(src);\n+\t// FIXME: This code currently doesn't work. Null Pointer \n+\t// exception is thrown in this case. This happens \n+\t// because img.getSource() always returns null, since source gets \n+\t// never initialized when it is created with the help of \n+\t// createImage(int width, int height). \n+\tCropImageFilter filter = new CropImageFilter(sx1, sx2, sx2, sy2);\n+\tFilteredImageSource src = new FilteredImageSource(img.getSource(),\n+\t                                                  filter);\n+\n+\tsubImage = Toolkit.getDefaultToolkit().createImage(src);\n       }\n \n-    return drawImage(subImage, new AffineTransform(scaleX, 0, 0,\n-                                                   scaleY, dx1, dy1), \n-                                                   bgcolor,\n-                                                   observer);\n+    return drawImage(subImage,\n+                     new AffineTransform(scaleX, 0, 0, scaleY, dx1, dy1),\n+                     bgcolor, observer);\n   }\n \n-  public boolean drawImage (Image img, int dx1, int dy1, int dx2, int dy2, \n-                            int sx1, int sy1, int sx2, int sy2, \n-                            ImageObserver observer) \n+  public boolean drawImage(Image img, int dx1, int dy1, int dx2, int dy2,\n+                           int sx1, int sy1, int sx2, int sy2,\n+                           ImageObserver observer)\n   {\n-\n-    return drawImage (img, dx1, dy1, dx2, dy2, \n-                      sx1, sy1, sx2, sy2, bg, observer);\t  \n+    return drawImage(img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, bg, observer);\n   }\n \n   public void drawOval(int x, int y, int width, int height)\n   {\n-    drawArc (x, y, width, height, 0, 360);\n+    drawArc(x, y, width, height, 0, 360);\n   }\n \n-  public void drawRoundRect(int x, int y, int width, int height, \n-                            int arcWidth, int arcHeight)\n+  public void drawRoundRect(int x, int y, int width, int height, int arcWidth,\n+                            int arcHeight)\n   {\n     if (arcWidth > width)\n       arcWidth = width;\n@@ -1360,93 +1300,89 @@ public void drawRoundRect(int x, int y, int width, int height,\n     int xx = x + width - arcWidth;\n     int yy = y + height - arcHeight;\n \n-    drawArc (x, y, arcWidth, arcHeight, 90, 90);\n-    drawArc (xx, y, arcWidth, arcHeight, 0, 90);\n-    drawArc (xx, yy, arcWidth, arcHeight, 270, 90);\n-    drawArc (x, yy, arcWidth, arcHeight, 180, 90);\n+    drawArc(x, y, arcWidth, arcHeight, 90, 90);\n+    drawArc(xx, y, arcWidth, arcHeight, 0, 90);\n+    drawArc(xx, yy, arcWidth, arcHeight, 270, 90);\n+    drawArc(x, yy, arcWidth, arcHeight, 180, 90);\n \n     int y1 = y + arcHeight / 2;\n     int y2 = y + height - arcHeight / 2;\n-    drawLine (x, y1, x, y2);\n-    drawLine (x + width, y1, x + width, y2);\n+    drawLine(x, y1, x, y2);\n+    drawLine(x + width, y1, x + width, y2);\n \n     int x1 = x + arcWidth / 2;\n     int x2 = x + width - arcWidth / 2;\n-    drawLine (x1, y, x2, y);\n-    drawLine (x1, y + height, x2, y + height);\n+    drawLine(x1, y, x2, y);\n+    drawLine(x1, y + height, x2, y + height);\n   }\n \n   // these are the most accelerated painting paths\n-  native void cairoDrawGdkGlyphVector (GdkFontPeer f, GdkGlyphVector gv, float x, float y);\n-  native void cairoDrawGdkTextLayout (GdkFontPeer f, GdkTextLayout gl, float x, float y);\n-  native void cairoDrawString (GdkFontPeer f, String str, float x, float y);\n+  native void cairoDrawGlyphVector(GdkFontPeer font, \n+                                   float x, float y, int n, \n+                                   int[] codes, float[] positions);\n \n-  GdkFontPeer getFontPeer() \n-  {\n-    return (GdkFontPeer) getFont().getPeer(); \n-  }\n+  native void cairoDrawGdkTextLayout(GdkTextLayout gl, \n+                                     float x, float y);\n \n-  public void drawGdkGlyphVector(GdkGlyphVector gv, float x, float y)\n+  GdkFontPeer getFontPeer()\n   {\n-    cairoDrawGdkGlyphVector(getFontPeer(), gv, x, y);\n-    if (isBufferedImageGraphics ()) \n-      updateBufferedImage();   \n+    return (GdkFontPeer) getFont().getPeer();\n   }\n \n   public void drawGdkTextLayout(GdkTextLayout gl, float x, float y)\n   {\n-    cairoDrawGdkTextLayout(getFontPeer(), gl, x, y);\n-    if (isBufferedImageGraphics ()) \n-      updateBufferedImage();   \n+    cairoDrawGdkTextLayout (gl, x, y);\n+    updateBufferedImage ();\n   }\n \n-  public void drawString (String str, float x, float y)\n+  public void drawString(String str, float x, float y)\n   {\n-    cairoDrawString(getFontPeer(), str, x, y);\n-    if (isBufferedImageGraphics ()) \n-      updateBufferedImage();       \n+    drawGlyphVector(getFont().createGlyphVector(null, str), x, y);\n+    updateBufferedImage ();\n   }\n \n-  public void drawString (String str, int x, int y)\n+  public void drawString(String str, int x, int y)\n   {\n-    drawString (str, (float)x, (float)y);\n+    drawString (str, (float) x, (float) y);\n   }\n \n-  public void drawString (AttributedCharacterIterator ci, int x, int y)\n+  public void drawString(AttributedCharacterIterator ci, int x, int y)\n   {\n-    drawString (ci, (float)x, (float)y);\n+    drawString (ci, (float) x, (float) y);\n   }\n \n-  public void drawGlyphVector (GlyphVector gv, float x, float y)\n+  public void drawGlyphVector(GlyphVector gv, float x, float y)\n   {\n-    if (gv instanceof GdkGlyphVector)\n-      drawGdkGlyphVector((GdkGlyphVector)gv, x, y);\n-    else\n-      throw new java.lang.UnsupportedOperationException ();\n+    int n = gv.getNumGlyphs ();\n+    int[] codes = gv.getGlyphCodes (0, n, null);\n+    float[] positions = gv.getGlyphPositions (0, n, null);\n+    \n+    setFont (gv.getFont ());\n+    cairoDrawGlyphVector (getFontPeer(), x, y, n, codes, positions);\n+    updateBufferedImage ();\n   }\n \n-  public void drawString (AttributedCharacterIterator ci, float x, float y)\n+  public void drawString(AttributedCharacterIterator ci, float x, float y)\n   {\n-    GlyphVector gv = font.createGlyphVector (getFontRenderContext(), ci);\n-    drawGlyphVector (gv, x, y);\n+    GlyphVector gv = getFont().createGlyphVector(getFontRenderContext(), ci);\n+    drawGlyphVector(gv, x, y);\n   }\n \n-  public void fillArc (int x, int y, int width, int height, \n-                       int startAngle, int arcAngle)\n+  public void fillArc(int x, int y, int width, int height, int startAngle,\n+                      int arcAngle)\n   {\n-    fill (new Arc2D.Double((double)x, (double)y, \n-                           (double)width, (double)height,\n-                           (double)startAngle, (double)arcAngle,\n-                           Arc2D.OPEN));\n+    fill(new Arc2D.Double((double) x, (double) y, (double) width,\n+                          (double) height, (double) startAngle,\n+                          (double) arcAngle, Arc2D.OPEN));\n   }\n \n   public void fillOval(int x, int y, int width, int height)\n   {\n-    fillArc (x, y, width, height, 0, 360);\n+    fillArc(x, y, width, height, 0, 360);\n   }\n \n-  public void fillRoundRect (int x, int y, int width, int height, \n-                             int arcWidth, int arcHeight)\n+  public void fillRoundRect(int x, int y, int width, int height, int arcWidth,\n+                            int arcHeight)\n   {\n     if (arcWidth > width)\n       arcWidth = width;\n@@ -1456,17 +1392,19 @@ public void fillRoundRect (int x, int y, int width, int height,\n     int xx = x + width - arcWidth;\n     int yy = y + height - arcHeight;\n \n-    fillArc (x, y, arcWidth, arcHeight, 90, 90);\n-    fillArc (xx, y, arcWidth, arcHeight, 0, 90);\n-    fillArc (xx, yy, arcWidth, arcHeight, 270, 90);\n-    fillArc (x, yy, arcWidth, arcHeight, 180, 90);\n+    fillArc(x, y, arcWidth, arcHeight, 90, 90);\n+    fillArc(xx, y, arcWidth, arcHeight, 0, 90);\n+    fillArc(xx, yy, arcWidth, arcHeight, 270, 90);\n+    fillArc(x, yy, arcWidth, arcHeight, 180, 90);\n \n-    fillRect (x, y + arcHeight / 2, width, height - arcHeight + 1);\n-    fillRect (x + arcWidth / 2, y, width - arcWidth + 1, height);\n+    fillRect(x, y + arcHeight / 2, width, height - arcHeight + 1);\n+    fillRect(x + arcWidth / 2, y, width - arcWidth + 1, height);\n   }\n \n-  public Font getFont ()\n+  public Font getFont()\n   {\n+    if (font == null)\n+      return new Font(\"SansSerif\", Font.PLAIN, 12);\n     return font;\n   }\n \n@@ -1475,38 +1413,34 @@ public Font getFont ()\n   // GtkFontMetrics into the drawing kit and ask cairo ourselves.\n \n   static native void releasePeerGraphicsResource(GdkFontPeer f);\n-  static native void getPeerTextMetrics (GdkFontPeer f, String str, double [] metrics);\n-  static native void getPeerFontMetrics (GdkFontPeer f, double [] metrics);\n \n-  public FontMetrics getFontMetrics ()\n+  public FontMetrics getFontMetrics()\n   {\n-    // the reason we go via the toolkit here is to try to get\n-    // a cached object. the toolkit keeps such a cache.\n-    return Toolkit.getDefaultToolkit ().getFontMetrics (font);\n+    return getFontMetrics(getFont());\n   }\n \n-  public FontMetrics getFontMetrics (Font f)\n+  public FontMetrics getFontMetrics(Font f)\n   {\n     // the reason we go via the toolkit here is to try to get\n     // a cached object. the toolkit keeps such a cache.\n-    return Toolkit.getDefaultToolkit ().getFontMetrics (f);\n+    return Toolkit.getDefaultToolkit().getFontMetrics(f);\n   }\n \n-  public void setFont (Font f)\n+  public void setFont(Font f)\n   {\n     if (f.getPeer() instanceof GdkFontPeer)\n       font = f;\n     else\n       font = \n-        ((ClasspathToolkit)(Toolkit.getDefaultToolkit ()))\n-        .getFont (f.getName(), f.getAttributes ());    \n+        ((ClasspathToolkit)(Toolkit.getDefaultToolkit()))\n+        .getFont(f.getName(), f.getAttributes());    \n   }\n-  \n+\n   public String toString()\n   {\n-    return  getClass ().getName () +\n-            \"[font=\" + font.toString () +\n-            \",color=\" + fg.toString () + \"]\";\n+    return  (getClass().getName()\n+             + \"[font=\" + getFont().toString()\n+             + \",color=\" + fg.toString()\n+\t     + \"]\");\n   }\n-\n }"}, {"sha": "c5afd0bc952b94fb073873819222281ddb3e8884", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsConfiguration.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -0,0 +1,138 @@\n+/* GdkGraphicsConfiguration.java -- describes characteristics of graphics\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.gtk;\n+\n+import java.awt.BufferCapabilities;\n+import java.awt.ImageCapabilities;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsDevice;\n+import java.awt.Rectangle;\n+\n+import java.awt.geom.AffineTransform;\n+\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorModel;\n+import java.awt.image.VolatileImage;\n+\n+public class GdkGraphicsConfiguration \n+  extends GraphicsConfiguration\n+{\n+  GdkScreenGraphicsDevice gdkScreenGraphicsDevice;\n+  ColorModel cm;\n+  Rectangle bounds;\n+\n+  public GtkToolkit getToolkit()\n+  {\n+    return gdkScreenGraphicsDevice.getToolkit();\n+  }\n+\n+  public GdkGraphicsConfiguration(GdkScreenGraphicsDevice dev)\n+  {\n+    this.gdkScreenGraphicsDevice = dev;\n+    cm = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB).getColorModel();\n+    bounds = getToolkit().getBounds();\n+  }\n+\n+  public GraphicsDevice getDevice()\n+  {\n+    return gdkScreenGraphicsDevice;\n+  }\n+\n+  public BufferedImage createCompatibleImage(int w, int h)\n+  {\n+    return new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);\n+  }\n+\n+  public BufferedImage createCompatibleImage(int w, int h, \n+                                             int transparency)\n+  {\n+    return createCompatibleImage(w, h);\n+  }\n+\n+  public VolatileImage createCompatibleVolatileImage(int w, int h)\n+  {\n+    throw new java.lang.UnsupportedOperationException ();\n+  }\n+\n+  public VolatileImage createCompatibleVolatileImage(int w, int h,\n+                                                     ImageCapabilities caps)\n+    throws java.awt.AWTException\n+  {\n+    throw new java.lang.UnsupportedOperationException ();\n+  }\n+\n+  public ColorModel getColorModel()\n+  {\n+    return cm;\n+  }\n+\n+  public ColorModel getColorModel(int transparency)\n+  {\n+    return getColorModel();\n+  }\n+\n+  public AffineTransform getDefaultTransform()\n+  {\n+    // FIXME: extract the GDK DPI information here.\n+    return new AffineTransform();\n+  }\n+\n+  public AffineTransform getNormalizingTransform()\n+  {\n+    // FIXME: extract the GDK DPI information here.\n+    return new AffineTransform();\n+  }\n+\n+  public Rectangle getBounds()\n+  {\n+    return bounds;\n+  }\n+\n+  public BufferCapabilities getBufferCapabilities()\n+  {\n+    return new BufferCapabilities(getImageCapabilities(), \n+                                  getImageCapabilities(),\n+                                  BufferCapabilities.FlipContents.UNDEFINED);\n+  }\n+\n+  public ImageCapabilities getImageCapabilities()\n+  {\n+    return new ImageCapabilities(false);\n+  }\n+\n+}"}, {"sha": "1f10c48692163b774dc10438915da413261c68cd", "filename": "libjava/gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -42,26 +42,37 @@\n import java.awt.Graphics2D;\n import java.awt.GraphicsDevice;\n import java.awt.GraphicsEnvironment;\n-import java.awt.Rectangle;\n-import java.awt.Shape;\n+import java.awt.HeadlessException;\n import java.awt.image.BufferedImage;\n import java.util.Locale;\n \n public class GdkGraphicsEnvironment extends GraphicsEnvironment\n {\n-  public GdkGraphicsEnvironment ()\n+  GtkToolkit gtkToolkit;\n+\n+  public GtkToolkit getToolkit()\n+  {\n+    return gtkToolkit;\n+  }\n+\n+  public GdkGraphicsEnvironment (GtkToolkit tk)\n   {\n     super();\n+    gtkToolkit = tk;\n   }\n \n   public GraphicsDevice[] getScreenDevices ()\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    // FIXME: Support multiple screens, since GDK can.\n+    return new GraphicsDevice[] { new GdkScreenGraphicsDevice (this) };\n   }\n \n   public GraphicsDevice getDefaultScreenDevice ()\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    if (GraphicsEnvironment.isHeadless ())\n+      throw new HeadlessException ();\n+\n+    return new GdkScreenGraphicsDevice (this);\n   }\n \n   public Graphics2D createGraphics (BufferedImage image)"}, {"sha": "a9c1fb9db262d9c6372623a632d8c5b3cd85db68", "filename": "libjava/gnu/java/awt/peer/gtk/GdkPixbufDecoder.java", "status": "modified", "additions": 470, "deletions": 49, "changes": 519, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -45,14 +45,31 @@\n import java.awt.image.DirectColorModel;\n import java.awt.image.ImageConsumer;\n import java.awt.image.ImageProducer;\n-import java.io.FileDescriptor;\n-import java.io.FileInputStream;\n+import java.awt.image.Raster;\n+import java.awt.image.RenderedImage;\n+import java.io.DataOutput;\n import java.io.IOException;\n import java.io.InputStream;\n import java.net.URL;\n+import java.util.ArrayList;\n import java.util.Hashtable;\n+import java.util.Iterator;\n+import java.util.Locale;\n import java.util.Vector;\n \n+import javax.imageio.ImageReader;\n+import javax.imageio.ImageWriter;\n+import javax.imageio.ImageReadParam;\n+import javax.imageio.ImageTypeSpecifier;\n+import javax.imageio.ImageWriteParam;\n+import javax.imageio.IIOImage;\n+import javax.imageio.metadata.IIOMetadata;\n+import javax.imageio.spi.ImageReaderSpi;\n+import javax.imageio.spi.ImageWriterSpi;\n+import javax.imageio.spi.IIORegistry;\n+import javax.imageio.stream.ImageInputStream;\n+import javax.imageio.stream.ImageOutputStream;\n+\n public class GdkPixbufDecoder extends gnu.java.awt.image.ImageDecoder\n {\n   static \n@@ -65,20 +82,27 @@ public class GdkPixbufDecoder extends gnu.java.awt.image.ImageDecoder\n   }\n   native static void initStaticState ();\n   private final int native_state = GtkGenericPeer.getUniqueInteger ();\n+  private boolean initialized = false;\n \n   // the current set of ImageConsumers for this decoder\n   Vector curr;\n \n   // interface to GdkPixbuf\n   native void initState ();\n-  native void pumpBytes (byte bytes[], int len);\n+  native void pumpBytes (byte[] bytes, int len);\n   native void finish ();\n+  static native void streamImage(int[] bytes, String format, int width, int height, boolean hasAlpha, DataOutput sink);\n   \n   // gdk-pixbuf provids data in RGBA format\n   static final ColorModel cm = new DirectColorModel (32, 0xff000000, \n                                                      0x00ff0000, \n                                                      0x0000ff00, \n                                                      0x000000ff);\n+  public GdkPixbufDecoder (InputStream in)\n+  {\n+    super (in);\n+  }\n+\n   public GdkPixbufDecoder (String filename)\n   {\n     super (filename);\n@@ -150,24 +174,349 @@ public void produce (Vector v, InputStream is) throws IOException\n     curr = null;\n   }\n \n-  // remaining helper class and static method is a convenience for the Gtk\n-  // peers, for loading a BufferedImage in off a disk file. one would think\n-  // this ought to be fairly straightforward, but it does not appear\n-  // anywhere else I can find.\n+  public void finalize()\n+  {\n+    finish();\n+  }\n+\n+\n+  public static class ImageFormatSpec\n+  {\n+    public String name;\n+    public boolean writable = false;    \n+    public ArrayList mimeTypes = new ArrayList();\n+    public ArrayList extensions = new ArrayList();\n+\n+    public ImageFormatSpec(String name, boolean writable)\n+    {\n+      this.name = name;\n+      this.writable = writable;\n+    }\n+\n+    public synchronized void addMimeType(String m)\n+    {\n+      mimeTypes.add(m);\n+    }\n+\n+    public synchronized void addExtension(String e)\n+    {\n+      extensions.add(e);\n+    }    \n+  }\n+\n+  static ArrayList imageFormatSpecs;\n+\n+  public static ImageFormatSpec registerFormat(String name, boolean writable) \n+  {\n+    ImageFormatSpec ifs = new ImageFormatSpec(name, writable);\n+    synchronized(GdkPixbufDecoder.class)\n+      {\n+        if (imageFormatSpecs == null)\n+          imageFormatSpecs = new ArrayList();\n+        imageFormatSpecs.add(ifs);\n+      }\n+    return ifs;\n+  }\n+\n+  static String[] getFormatNames(boolean writable)\n+  {\n+    ArrayList names = new ArrayList();\n+    synchronized (imageFormatSpecs) \n+      {\n+        Iterator i = imageFormatSpecs.iterator();\n+        while (i.hasNext())\n+          {\n+            ImageFormatSpec ifs = (ImageFormatSpec) i.next();\n+            if (writable && !ifs.writable)\n+              continue;\n+            names.add(ifs.name);\n+\n+            /* \n+             * In order to make the filtering code work, we need to register\n+             * this type under every \"format name\" likely to be used as a synonym.\n+             * This generally means \"all the extensions people might use\". \n+             */\n+\n+            Iterator j = ifs.extensions.iterator();\n+            while (j.hasNext())\n+              names.add((String) j.next());\n+          }\n+      }\n+    Object[] objs = names.toArray();\n+    String[] strings = new String[objs.length];\n+    for (int i = 0; i < objs.length; ++i)\n+      strings[i] = (String) objs[i];\n+    return strings;\n+  }\n+\n+  static String[] getFormatExtensions(boolean writable)\n+  {\n+    ArrayList extensions = new ArrayList();\n+    synchronized (imageFormatSpecs) \n+      {\n+        Iterator i = imageFormatSpecs.iterator();\n+        while (i.hasNext())\n+          {\n+            ImageFormatSpec ifs = (ImageFormatSpec) i.next();\n+            if (writable && !ifs.writable)\n+              continue;\n+            Iterator j = ifs.extensions.iterator();\n+            while (j.hasNext())\n+              extensions.add((String) j.next());\n+          }\n+      }\n+    Object[] objs = extensions.toArray();\n+    String[] strings = new String[objs.length];\n+    for (int i = 0; i < objs.length; ++i)\n+      strings[i] = (String) objs[i];\n+    return strings;\n+  }\n+\n+  static String[] getFormatMimeTypes(boolean writable)\n+  {\n+    ArrayList mimeTypes = new ArrayList();\n+    synchronized (imageFormatSpecs) \n+      {\n+        Iterator i = imageFormatSpecs.iterator();\n+        while (i.hasNext())\n+          {\n+            ImageFormatSpec ifs = (ImageFormatSpec) i.next();\n+            if (writable && !ifs.writable)\n+              continue;\n+            Iterator j = ifs.mimeTypes.iterator();\n+            while (j.hasNext())\n+              mimeTypes.add((String) j.next());\n+          }\n+      }\n+    Object[] objs = mimeTypes.toArray();\n+    String[] strings = new String[objs.length];\n+    for (int i = 0; i < objs.length; ++i)\n+      strings[i] = (String) objs[i];\n+    return strings;\n+  }\n+\n+  \n+  static String findFormatName(Object ext, boolean needWritable)\n+  {\n+    if (ext == null)\n+      throw new IllegalArgumentException(\"extension is null\");\n+\n+    if (!(ext instanceof String))\n+      throw new IllegalArgumentException(\"extension is not a string\");\n+\n+    String str = (String) ext;\n+\n+    Iterator i = imageFormatSpecs.iterator();\n+    while (i.hasNext())\n+      {\n+        ImageFormatSpec ifs = (ImageFormatSpec) i.next();\n+\n+        if (needWritable && !ifs.writable)\n+          continue;\n+\n+        if (ifs.name.equals(str))\n+          return str;\n+\n+        Iterator j = ifs.extensions.iterator(); \n+        while (j.hasNext())\n+          {\n+            String extension = (String)j.next();\n+            if (extension.equals(str))\n+              return ifs.name;\n+          }\n+\n+        j = ifs.mimeTypes.iterator(); \n+        while (j.hasNext())\n+          {\n+            String mimeType = (String)j.next();\n+            if (mimeType.equals(str))\n+              return ifs.name;\n+          }\n+      }      \n+    throw new IllegalArgumentException(\"unknown extension '\" + str + \"'\");\n+  }\n+\n+  private static GdkPixbufReaderSpi readerSpi;\n+  private static GdkPixbufWriterSpi writerSpi;\n+\n+  public static synchronized GdkPixbufReaderSpi getReaderSpi()\n+  {\n+    if (readerSpi == null)\n+      readerSpi = new GdkPixbufReaderSpi();\n+    return readerSpi;\n+  }\n+\n+  public static synchronized GdkPixbufWriterSpi getWriterSpi()\n+  {\n+    if (writerSpi == null)\n+      writerSpi = new GdkPixbufWriterSpi();\n+    return writerSpi;\n+  }\n+\n+  public static void registerSpis(IIORegistry reg) \n+  {\n+    reg.registerServiceProvider(getReaderSpi(), ImageReaderSpi.class);\n+    reg.registerServiceProvider(getWriterSpi(), ImageWriterSpi.class);\n+  }\n+\n+  public static class GdkPixbufWriterSpi extends ImageWriterSpi\n+  {\n+    public GdkPixbufWriterSpi() \n+    {      \n+      super(\"GdkPixbuf\", \"2.x\",\n+            GdkPixbufDecoder.getFormatNames(true), \n+            GdkPixbufDecoder.getFormatExtensions(true), \n+            GdkPixbufDecoder.getFormatMimeTypes(true),\n+            \"gnu.java.awt.peer.gtk.GdkPixbufDecoder$GdkPixbufWriter\",\n+            new Class[] { ImageOutputStream.class },\n+            new String[] { \"gnu.java.awt.peer.gtk.GdkPixbufDecoder$GdkPixbufReaderSpi\" },\n+            false, null, null, null, null,\n+            false, null, null, null, null);\n+    }\n+\n+    public boolean canEncodeImage(ImageTypeSpecifier ts)\n+    {\n+      return true;\n+    }\n+\n+    public ImageWriter createWriterInstance(Object ext)\n+    {\n+      return new GdkPixbufWriter(this, ext);\n+    }\n+\n+    public String getDescription(java.util.Locale loc)\n+    {\n+      return \"GdkPixbuf Writer SPI\";\n+    }\n+\n+  }\n+\n+  public static class GdkPixbufReaderSpi extends ImageReaderSpi\n+  {\n+    public GdkPixbufReaderSpi() \n+    { \n+      super(\"GdkPixbuf\", \"2.x\",\n+            GdkPixbufDecoder.getFormatNames(false), \n+            GdkPixbufDecoder.getFormatExtensions(false), \n+            GdkPixbufDecoder.getFormatMimeTypes(false),\n+            \"gnu.java.awt.peer.gtk.GdkPixbufDecoder$GdkPixbufReader\",\n+            new Class[] { ImageInputStream.class },\n+            new String[] { \"gnu.java.awt.peer.gtk.GdkPixbufDecoder$GdkPixbufWriterSpi\" },\n+            false, null, null, null, null,\n+            false, null, null, null, null);\n+    }\n \n-  private static class BufferedImageBuilder implements ImageConsumer\n+    public boolean canDecodeInput(Object obj) \n+    { \n+      return true; \n+    }\n+\n+    public ImageReader createReaderInstance(Object ext)\n+    {\n+      return new GdkPixbufReader(this, ext);\n+    }\n+\n+    public String getDescription(Locale loc)\n+    {\n+      return \"GdkPixbuf Reader SPI\";\n+    }\n+  }\n+\n+  private static class GdkPixbufWriter\n+    extends ImageWriter\n+  {\n+    String ext;\n+    public GdkPixbufWriter(GdkPixbufWriterSpi ownerSpi, Object ext)\n+    {\n+      super(ownerSpi);\n+      this.ext = findFormatName(ext, true);\n+    }\n+\n+    public IIOMetadata convertImageMetadata (IIOMetadata inData,\n+                                             ImageTypeSpecifier imageType,\n+                                             ImageWriteParam param)\n+    {\n+      return null;\n+    }\n+\n+    public IIOMetadata convertStreamMetadata (IIOMetadata inData,\n+                                              ImageWriteParam param)\n+    {\n+      return null;\n+    }\n+\n+    public IIOMetadata getDefaultImageMetadata (ImageTypeSpecifier imageType, \n+                                                ImageWriteParam param)\n+    {\n+      return null;\n+    }\n+\n+    public IIOMetadata getDefaultStreamMetadata (ImageWriteParam param)\n+    {\n+      return null;\n+    }\n+\n+  public void write (IIOMetadata streamMetadata, IIOImage i, ImageWriteParam param)\n+    throws IOException\n+    {\n+      RenderedImage image = i.getRenderedImage();\n+      Raster ras = image.getData();\n+      int width = ras.getWidth();\n+      int height = ras.getHeight();\n+      ColorModel model = image.getColorModel();\n+      int[] pixels = GdkGraphics2D.findSimpleIntegerArray (image.getColorModel(), ras);\n+      \n+      if (pixels == null)\n+        {\n+          BufferedImage img = new BufferedImage(width, height, \n+                                                (model != null && model.hasAlpha() ? \n+                                                 BufferedImage.TYPE_INT_ARGB\n+                                                 : BufferedImage.TYPE_INT_RGB));\n+          int[] pix = new int[4];\n+          for (int y = 0; y < height; ++y)\n+            for (int x = 0; x < width; ++x)\n+              img.setRGB(x, y, model.getRGB(ras.getPixel(x, y, pix)));\n+          pixels = GdkGraphics2D.findSimpleIntegerArray (img.getColorModel(), \n+                                                         img.getRaster());\n+          model = img.getColorModel();\n+        }\n+\n+      processImageStarted(1);\n+      streamImage(pixels, this.ext, width, height, model.hasAlpha(), \n+                  (DataOutput) this.getOutput());\n+      processImageComplete();\n+    }    \n+  }\n+\n+  private static class GdkPixbufReader \n+    extends ImageReader\n+    implements ImageConsumer\n   {\n+    // ImageConsumer parts\n+    GdkPixbufDecoder dec;\n     BufferedImage bufferedImage;\n     ColorModel defaultModel;\n+    int width;\n+    int height;\n+    String ext;\n+    \n+    public GdkPixbufReader(GdkPixbufReaderSpi ownerSpi, Object ext)\n+    {\n+      super(ownerSpi);\n+      this.ext = findFormatName(ext, false);\n+    }\n \n-    public BufferedImage getBufferedImage()\n+    public GdkPixbufReader(GdkPixbufReaderSpi ownerSpi, Object ext, GdkPixbufDecoder d)\n     {\n-      return bufferedImage;\n+      this(ownerSpi, ext);\n+      dec = d;\n     }\n \n-    public void setDimensions(int width, int height)\n+    public void setDimensions(int w, int h)\n     {\n-      bufferedImage = new BufferedImage (width, height, BufferedImage.TYPE_INT_ARGB);\n+      processImageStarted(1);\n+      width = w;\n+      height = h;\n     }\n     \n     public void setProperties(Hashtable props) {}\n@@ -189,65 +538,137 @@ public void setPixels(int x, int y, int w, int h,\n                           ColorModel model, int[] pixels, \n                           int offset, int scansize)\n     {\n-      if (bufferedImage != null)\n+      if (model == null)\n+        model = defaultModel;\n+      \n+      if (bufferedImage == null)\n         {\n+          bufferedImage = new BufferedImage (width, height, (model != null && model.hasAlpha() ? \n+                                                             BufferedImage.TYPE_INT_ARGB\n+                                                             : BufferedImage.TYPE_INT_RGB));\n+        }\n \n-          if (model == null)\n-            model = defaultModel;\n-\n-          int pixels2[];\n-          if (model != null)\n-            {\n-              pixels2 = new int[pixels.length];\n-              for (int yy = 0; yy < h; yy++)\n-                for (int xx = 0; xx < w; xx++)\n-                  {\n-                    int i = yy * scansize + xx;\n-                    pixels2[i] = model.getRGB (pixels[i]);\n-                  }\n-            }\n-          else\n-            pixels2 = pixels;\n-\n-          bufferedImage.setRGB (x, y, w, h, pixels2, offset, scansize);\n+      int pixels2[];\n+      if (model != null)\n+        {\n+          pixels2 = new int[pixels.length];\n+          for (int yy = 0; yy < h; yy++)\n+            for (int xx = 0; xx < w; xx++)\n+              {\n+                int i = yy * scansize + xx;\n+                pixels2[i] = model.getRGB (pixels[i]);\n+              }\n         }\n+      else\n+        pixels2 = pixels;\n+\n+      bufferedImage.setRGB (x, y, w, h, pixels2, offset, scansize);\n+      processImageProgress(y / (height == 0 ? 1 : height));\n+    }\n+\n+    public void imageComplete(int status) \n+    {\n+      processImageComplete();\n+    }\n+\n+    public BufferedImage getBufferedImage()\n+    {\n+      if (bufferedImage == null && dec != null)\n+        dec.startProduction (this);\n+      return bufferedImage;\n+    }\n+\n+    // ImageReader parts\n+\n+    public int getNumImages(boolean allowSearch)\n+      throws IOException\n+    {\n+      return 1;\n+    }\n+\n+    public IIOMetadata getImageMetadata(int i) \n+    {\n+      return null;\n+    }\n+\n+    public IIOMetadata getStreamMetadata()\n+      throws IOException\n+    {\n+      return null;\n     }\n \n-    public void imageComplete(int status) {}\n+    public Iterator getImageTypes(int imageIndex)\n+      throws IOException\n+    {\n+      BufferedImage img = getBufferedImage();\n+      Vector vec = new Vector();\n+      vec.add(new ImageTypeSpecifier(img));\n+      return vec.iterator();\n+    }\n+    \n+    public int getHeight(int imageIndex)\n+      throws IOException\n+    {\n+      return getBufferedImage().getHeight();\n+    }\n+\n+    public int getWidth(int imageIndex)\n+      throws IOException\n+    {\n+      return getBufferedImage().getWidth();\n+    }\n+\n+    public void setInput(Object input,\n+                         boolean seekForwardOnly,\n+                         boolean ignoreMetadata)\n+    {\n+      super.setInput(input, seekForwardOnly, ignoreMetadata);\n+      dec = new GdkPixbufDecoder((InputStream) getInput());\n+    }\n+\n+    public BufferedImage read(int imageIndex, ImageReadParam param)\n+      throws IOException\n+    {\n+      return getBufferedImage ();\n+    }\n   }\n \n+  // remaining helper class and static method is a convenience for the Gtk\n+  // peers, for loading a BufferedImage in off a disk file without going\n+  // through the whole imageio system. \n+\n   public static BufferedImage createBufferedImage (String filename)\n   {\n-    BufferedImageBuilder bb = new BufferedImageBuilder ();\n-    GdkPixbufDecoder dec = new GdkPixbufDecoder (filename);\n-    dec.startProduction (bb);\n-    return bb.getBufferedImage ();\n+    GdkPixbufReader r = new GdkPixbufReader (getReaderSpi(), \n+                                             \"png\", // reader auto-detects, doesn't matter\n+                                             new GdkPixbufDecoder (filename));\n+    return r.getBufferedImage ();\n   }\n \n   public static BufferedImage createBufferedImage (URL u)\n   {\n-    BufferedImageBuilder bb = new BufferedImageBuilder ();\n-    GdkPixbufDecoder dec = new GdkPixbufDecoder (u);\n-    dec.startProduction (bb);\n-    return bb.getBufferedImage ();\n+    GdkPixbufReader r = new GdkPixbufReader (getReaderSpi(), \n+                                             \"png\", // reader auto-detects, doesn't matter\n+                                             new GdkPixbufDecoder (u));\n+    return r.getBufferedImage ();\n   }\n \n   public static BufferedImage createBufferedImage (byte[] imagedata, int imageoffset,\n                                                    int imagelength)\n   {\n-    BufferedImageBuilder bb = new BufferedImageBuilder ();\n-    GdkPixbufDecoder dec = new GdkPixbufDecoder (imagedata, imageoffset, imagelength);\n-    dec.startProduction (bb);\n-    return bb.getBufferedImage ();\n+    GdkPixbufReader r = new GdkPixbufReader (getReaderSpi(), \n+                                             \"png\", // reader auto-detects, doesn't matter\n+                                             new GdkPixbufDecoder (imagedata,\n+                                                                   imageoffset,\n+                                                                   imagelength));\n+    return r.getBufferedImage ();\n   }\n   \n   public static BufferedImage createBufferedImage (ImageProducer producer)\n   {\n-    BufferedImageBuilder bb = new BufferedImageBuilder ();\n-    producer.startProduction(bb);\n-    return bb.getBufferedImage ();\n+    GdkPixbufReader r = new GdkPixbufReader (getReaderSpi(), \"png\" /* ignored */, null);\n+    producer.startProduction(r);\n+    return r.getBufferedImage ();\n   }\n-  \n-\n \n }"}, {"sha": "2438b68501a303008a0eb7b7af3dedee81fbb1cf", "filename": "libjava/gnu/java/awt/peer/gtk/GdkRobotPeer.java", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkRobotPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkRobotPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkRobotPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -0,0 +1,94 @@\n+/* GdkRobot.java -- an XTest implementation of RobotPeer\n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.gtk;\n+\n+import java.awt.AWTException;\n+import java.awt.GraphicsDevice;\n+import java.awt.image.ColorModel;\n+import java.awt.image.DirectColorModel;\n+import java.awt.Rectangle;\n+import java.awt.peer.RobotPeer;\n+\n+/**\n+ * Implements the RobotPeer interface using the XTest extension.\n+ *\n+ * @author Thomas Fitzsimmons\n+ */\n+public class GdkRobotPeer implements RobotPeer\n+{\n+  // gdk-pixbuf provides data in RGBA format\n+  static final ColorModel cm = new DirectColorModel (32, 0xff000000,\n+\t\t\t\t\t\t     0x00ff0000,\n+\t\t\t\t\t\t     0x0000ff00,\n+\t\t\t\t\t\t     0x000000ff);\n+\n+  public GdkRobotPeer (GraphicsDevice screen) throws AWTException\n+  {\n+    // FIXME: make use of screen parameter when GraphicsDevice is\n+    // implemented.\n+    if (!initXTest ())\n+      throw new AWTException (\"XTest extension not supported\");\n+  }\n+\n+  native boolean initXTest ();\n+\n+  // RobotPeer methods\n+  public native void mouseMove (int x, int y);\n+  public native void mousePress (int buttons);\n+  public native void mouseRelease (int buttons);\n+  public native void mouseWheel (int wheelAmt);\n+  public native void keyPress (int keycode);\n+  public native void keyRelease (int keycode);\n+  native int[] nativeGetRGBPixels (int x, int y, int width, int height);\n+\n+  public int getRGBPixel (int x, int y)\n+  {\n+    return cm.getRGB (nativeGetRGBPixels (x, y, 1, 1)[0]);\n+  }\n+\n+  public int[] getRGBPixels (Rectangle r)\n+  {\n+    int[] gdk_pixels = nativeGetRGBPixels (r.x, r.y, r.width, r.height);\n+    int[] pixels = new int[r.width * r.height];\n+\n+    for (int i = 0; i < r.width * r.height; i++)\n+      pixels[i] = cm.getRGB (gdk_pixels[i]);\n+\n+    return pixels;\n+  }\n+}"}, {"sha": "0acef60b1771471a22eb347d871bb3f7acefdbfd", "filename": "libjava/gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java", "status": "renamed", "additions": 43, "deletions": 64, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n-/* AbstractSet.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+/* GdkScreenGraphicsDevice.java -- information about a screen device\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,69 +35,48 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.util.AbstractCollection;\n-import java.util.Collection;\n-import java.util.Set;\n+package gnu.java.awt.peer.gtk;\n \n-/**\n- * Empty\n- *\n- * @author Ronald Veldema (rveldema@cs.vu.nl)\n- */\n-public abstract class AbstractSet extends AbstractCollection implements Set\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsConfiguration;\n+\n+public class GdkScreenGraphicsDevice extends GraphicsDevice\n {\n-\tboolean contained(Object []a1, Object b)\n-\t{\n-\t\tfor (int i=0;i<a1.length;i++)\n-\t\t{\n-\t\t\tif (a1[i] == b)\n-\t\t\t\treturn true;\n-\t\t}\n-\t\treturn false;\n-\t}\n-\n-\tpublic boolean equals(Object o)\n-\t{\n-\t\tif (! (o instanceof AbstractSet))\n-\t\t\treturn false;\n-\t\tAbstractSet s = (AbstractSet) o;\n-\n-\t\tif (s == this)\n-\t\t\treturn true;\n-\n-\t\tif (s.size() != size())\n-\t\t\treturn false;\n-\n-\t\tObject[] a1 = s.toArray();\n-\t\tObject[] a2 = toArray();\n-\n-\t\tfor (int i=0;i<a1.length;i++)\n-\t\t{\n-\t\t\tif (! contained(a2, a1[i]))\n-\t\t\t\treturn false;\n-\t\t}\n-\t\treturn true;\n-\t}\n-\n-\tpublic int hashCode()\n-\t{\n-\t\tint hash = 0;\n-\t\tObject[] a1 = toArray();\n-\n-\t\tif (a1 == null)\n-\t\t\treturn 0;\n-\n-\t\tfor (int i=0; i<a1.length; i++)\n-\t\t{\n-\t\t\thash += a1[i].hashCode();\n-\t\t}\n-\t\treturn hash;\n-\t}\n-\n-\tpublic boolean removeAll(Collection c)\n-\t{\n-\t\treturn false;\n-\t}\n+  GdkGraphicsEnvironment env;\n+\n+  public GtkToolkit getToolkit()\n+  {\n+    return env.getToolkit();\n+  }\n+\n+  public GdkScreenGraphicsDevice (GdkGraphicsEnvironment e)\n+  {    \n+    super ();\n+    env = e;\n+  }\n+\n+  public int getType ()\n+  {\n+    return GraphicsDevice.TYPE_RASTER_SCREEN;\n+  }\n+\n+  public String getIDstring ()\n+  {\n+    // FIXME: query X for this string\n+    return \"default GDK device ID string\";\n+  }\n+\n+  public GraphicsConfiguration[] getConfigurations ()\n+  {\n+    // FIXME: query X for the list of possible configurations\n+    return new GraphicsConfiguration [] { new GdkGraphicsConfiguration(this) };\n+  }\n+\n+  public GraphicsConfiguration getDefaultConfiguration ()\n+  {\n+    \n+    // FIXME: query X for default configuration\n+    return new GdkGraphicsConfiguration(this);\n+  }\n }", "previous_filename": "libjava/javax/swing/AbstractSet.java"}, {"sha": "b5548a837ba8c6f2e63bed8b509b19f98ee823bb", "filename": "libjava/gnu/java/awt/peer/gtk/GdkTextLayout.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkTextLayout.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -52,7 +52,6 @@\n import java.text.CharacterIterator;\n import java.text.AttributedCharacterIterator;\n import java.text.AttributedString;\n-import java.util.Map;\n import java.awt.font.TextAttribute;\n \n import gnu.classpath.Configuration;"}, {"sha": "1ef992f02df461d11f17bb1dbe0fd6bbfe275a2e", "filename": "libjava/gnu/java/awt/peer/gtk/GtkButtonPeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -41,7 +41,6 @@\n import java.awt.AWTEvent;\n import java.awt.Button;\n import java.awt.Component;\n-import java.awt.Font;\n import java.awt.Point;\n import java.awt.event.KeyEvent;\n import java.awt.event.MouseEvent;"}, {"sha": "2d1f6500862bd110f47e3b19215291f3a8104b66", "filename": "libjava/gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.java", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxMenuItemPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import java.awt.ItemSelectable;\n+import java.awt.event.ItemEvent;\n import java.awt.CheckboxMenuItem;\n import java.awt.peer.CheckboxMenuItemPeer;\n import java.awt.peer.MenuItemPeer;\n@@ -54,4 +56,15 @@ public GtkCheckboxMenuItemPeer (CheckboxMenuItem menu)\n   }\n \n   native public void setState (boolean t);\n+\n+  protected void postMenuActionEvent ()\n+  {\n+    CheckboxMenuItem item = (CheckboxMenuItem)awtWidget;\n+    q().postEvent (new ItemEvent ((ItemSelectable)awtWidget,\n+      ItemEvent.ITEM_STATE_CHANGED,\n+      item.getActionCommand(),\n+      item.getState() ? ItemEvent.DESELECTED : ItemEvent.SELECTED));\n+\n+    super.postMenuActionEvent();\n+  }\n }"}, {"sha": "4af88f5332c981b8635265ad79cf9563d66e5acb", "filename": "libjava/gnu/java/awt/peer/gtk/GtkCheckboxPeer.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -40,8 +40,6 @@\n \n import java.awt.Checkbox;\n import java.awt.CheckboxGroup;\n-import java.awt.Component;\n-import java.awt.Font;\n import java.awt.peer.CheckboxPeer;\n \n public class GtkCheckboxPeer extends GtkComponentPeer"}, {"sha": "a065e13abcb149e6ebbb4ea5cbc6373fa0df1cb9", "filename": "libjava/gnu/java/awt/peer/gtk/GtkChoicePeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.AWTEvent;\n import java.awt.Choice;\n import java.awt.event.ItemEvent;\n import java.awt.peer.ChoicePeer;"}, {"sha": "d9d9907e92e423beb492966c36ee44fa0b35057a", "filename": "libjava/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -47,14 +47,12 @@\n import java.awt.Dimension;\n import java.awt.Font;\n import java.awt.FontMetrics;\n-import java.awt.Frame;\n import java.awt.Graphics;\n import java.awt.Graphics2D;\n import java.awt.GraphicsConfiguration;\n import java.awt.Image;\n import java.awt.Insets;\n import java.awt.ItemSelectable;\n-import java.awt.KeyboardFocusManager;\n import java.awt.Point;\n import java.awt.Rectangle;\n import java.awt.Toolkit;\n@@ -386,7 +384,7 @@ public void repaint (long tm, int x, int y, int width, int height)\n     if (x == 0 && y == 0 && width == 0 && height == 0)\n       return;\n \n-    q.postEvent (new PaintEvent (awtComponent, PaintEvent.UPDATE,\n+    q().postEvent (new PaintEvent (awtComponent, PaintEvent.UPDATE,\n                                  new Rectangle (x, y, width, height)));\n   }\n \n@@ -508,14 +506,14 @@ public void setVisible (boolean b)\n   protected void postMouseEvent(int id, long when, int mods, int x, int y, \n \t\t\t\tint clickCount, boolean popupTrigger) \n   {\n-    q.postEvent(new MouseEvent(awtComponent, id, when, mods, x, y, \n+    q().postEvent(new MouseEvent(awtComponent, id, when, mods, x, y, \n \t\t\t       clickCount, popupTrigger));\n   }\n \n   protected void postExposeEvent (int x, int y, int width, int height)\n   {\n     if (!isInRepaint)\n-      q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n+      q().postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n                                    new Rectangle (x, y, width, height)));\n   }\n \n@@ -535,23 +533,23 @@ protected void postKeyEvent (int id, long when, int mods,\n       {\n         synchronized (q)\n           {\n-            q.postEvent (keyEvent);\n-            q.postEvent (new KeyEvent (awtComponent, KeyEvent.KEY_TYPED, when, mods,\n+            q().postEvent (keyEvent);\n+            q().postEvent (new KeyEvent (awtComponent, KeyEvent.KEY_TYPED, when, mods,\n                                         KeyEvent.VK_UNDEFINED, keyChar, keyLocation));\n           }\n       }\n     else\n-      q.postEvent (keyEvent);\n+      q().postEvent (keyEvent);\n   }\n \n   protected void postFocusEvent (int id, boolean temporary)\n   {\n-    q.postEvent (new FocusEvent (awtComponent, id, temporary));\n+    q().postEvent (new FocusEvent (awtComponent, id, temporary));\n   }\n \n   protected void postItemEvent (Object item, int stateChange)\n   {\n-    q.postEvent (new ItemEvent ((ItemSelectable)awtComponent, \n+    q().postEvent (new ItemEvent ((ItemSelectable)awtComponent, \n \t\t\t\tItemEvent.ITEM_STATE_CHANGED,\n \t\t\t\titem, stateChange));\n   }"}, {"sha": "61551835ec705c0bf273c4f0744fce09206471ae", "filename": "libjava/gnu/java/awt/peer/gtk/GtkContainerPeer.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,15 +38,13 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.AWTEvent;\n import java.awt.Color;\n import java.awt.Component;\n import java.awt.Container;\n import java.awt.Font;\n import java.awt.Graphics;\n import java.awt.Insets;\n import java.awt.Window;\n-import java.awt.event.PaintEvent;\n import java.awt.peer.ComponentPeer;\n import java.awt.peer.ContainerPeer;\n "}, {"sha": "9bf234404d1fb086a425a6cae69476ee374c6935", "filename": "libjava/gnu/java/awt/peer/gtk/GtkDialogPeer.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,8 +38,6 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.AWTEvent;\n-import java.awt.Component;\n import java.awt.Dialog;\n import java.awt.Graphics;\n import java.awt.Rectangle;\n@@ -76,7 +74,7 @@ protected void postMouseEvent(int id, long when, int mods, int x, int y,\n   protected void postExposeEvent (int x, int y, int width, int height)\n   {\n     if (!isInRepaint)\n-      q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n+      q().postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n                                    new Rectangle (x + insets.left, \n                                                   y + insets.top, \n                                                   width, height)));"}, {"sha": "fd9c155d2d1c7cae1f259c0bab29eea48d805547", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFileDialogPeer.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,12 +38,10 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.AWTEvent;\n import java.awt.Dialog;\n import java.awt.FileDialog;\n import java.awt.Graphics;\n import java.awt.Window;\n-import java.awt.event.WindowEvent;\n import java.awt.peer.FileDialogPeer;\n import java.io.File;\n import java.io.FilenameFilter;\n@@ -114,7 +112,7 @@ public void setFile (String fileName)\n \n     // GtkFileChooser requires absolute filenames. If the given filename\n     // is not absolute, let's construct it based on current directory.\n-        currentFile = fileName;\n+    currentFile = fileName;\n     if (fileName.indexOf(FS) == 0)\n       {\n         nativeSetFile (fileName);"}, {"sha": "1369657a8aa041094d289acc0250e9591a4e7346", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFontPeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -46,7 +46,6 @@\n import java.awt.font.GlyphVector;\n import java.awt.font.LineMetrics;\n import java.awt.geom.Rectangle2D;\n-import java.awt.peer.FontPeer;\n import java.text.CharacterIterator;\n import java.util.Locale;\n import java.util.MissingResourceException;"}, {"sha": "b22a25e88690cff451751016a528a8004e6dede2", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,11 +38,8 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.Component;\n-import java.awt.Container;\n import java.awt.Frame;\n import java.awt.Graphics;\n-import java.awt.Graphics2D;\n import java.awt.Image;\n import java.awt.MenuBar;\n import java.awt.Rectangle;\n@@ -165,7 +162,7 @@ void create ()\n     setMenuBar (frame.getMenuBar ());\n \n     setTitle (frame.getTitle ());\n-    setResizable (frame.isResizable ());\n+    gtkWindowSetResizable (frame.isResizable ());\n     setIconImage(frame.getIconImage());\n   }\n \n@@ -237,9 +234,9 @@ protected void postConfigureEvent (int x, int y, int width, int height)\n                            frame_y,\n                            frame_width,\n                            frame_height);\n-      }\n \n-    awtComponent.validate();\n+        awtComponent.validate();\n+      }\n   }\n \n   protected void postMouseEvent(int id, long when, int mods, int x, int y, \n@@ -253,7 +250,7 @@ protected void postMouseEvent(int id, long when, int mods, int x, int y,\n   protected void postExposeEvent (int x, int y, int width, int height)\n   {\n     if (!isInRepaint)\n-      q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n+      q().postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n                                    new Rectangle (x + insets.left, \n                                                   y + insets.top, \n                                                   width, height)));"}, {"sha": "f161526f647d36c70395fa307a2424b21d457ae7", "filename": "libjava/gnu/java/awt/peer/gtk/GtkGenericPeer.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkGenericPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkGenericPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkGenericPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -39,6 +39,7 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.EventQueue;\n+import java.awt.Toolkit;\n import java.awt.event.ActionEvent;\n \n public class GtkGenericPeer\n@@ -57,6 +58,11 @@\n   // Dispose of our native state.\n   public native void dispose ();\n \n+  static EventQueue q ()\n+  {\n+    return Toolkit.getDefaultToolkit ().getSystemEventQueue ();\n+  }\n+\n   protected GtkGenericPeer (Object awtWidget)\n   {\n     this.awtWidget = awtWidget;\n@@ -70,7 +76,7 @@ public static void enableQueue (EventQueue sq)\n \n   protected void postActionEvent (String command, int mods) \n   {\n-    q.postEvent (new ActionEvent (awtWidget, ActionEvent.ACTION_PERFORMED, \n+    q().postEvent (new ActionEvent (awtWidget, ActionEvent.ACTION_PERFORMED, \n \t\t\t\t  command, mods));\n   }\n "}, {"sha": "3e3e2e3f1cbf33bb975bf7f577d7986ec612bbbb", "filename": "libjava/gnu/java/awt/peer/gtk/GtkLabelPeer.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,8 +38,6 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.Component;\n-import java.awt.Font;\n import java.awt.Label;\n import java.awt.peer.LabelPeer;\n "}, {"sha": "4cbe190731ce5e53e4f44305f6dda8b596be23d5", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMainThread.java", "status": "removed", "additions": 0, "deletions": 111, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java?ref=7526f35528640700e63d664cdffbece6591131dd", "patch": "@@ -1,111 +0,0 @@\n-/* GtkMainThread.java -- Runs gtk_main()\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.java.awt.peer.gtk;\n-\n-public class GtkMainThread extends GtkGenericPeer implements Runnable\n-{\n-  private static Thread mainThread = null;\n-  private static Object mainThreadLock = new Object();\n-\n-  // Whether the gtk+ subsystem has been initialized.\n-  private boolean gtkInitCalled = false;\n-\n-  /**\n-   * Call gtk_init.  It is very important that this happen before any other\n-   * gtk calls.\n-   *\n-   * @param portableNativeSync 1 if the Java property\n-   * gnu.classpath.awt.gtk.portable.native.sync is set to \"true\".  0 if it is\n-   * set to \"false\".  -1 if unset.\n-   */\n-  static native void gtkInit(int portableNativeSync);\n-  native void gtkMain();\n-  \n-  public GtkMainThread() \n-  {\n-    super (null);\n-    synchronized (mainThreadLock) \n-      {\n-\tif (mainThread != null)\n-\t  throw new IllegalStateException();\n-\tmainThread = new Thread(this, \"GtkMain\");\n-      }\n-    \n-    synchronized (this) \n-      {\n-\tmainThread.start();\n-\t\n-\twhile (!gtkInitCalled)\n-\t  {\n-\t    try\n-\t      {\n-\t\twait();\n-\t      }\n-\t    catch (InterruptedException e) { }\n-\t  }\n-      }\n-  }\n-  \n-  public void run() \n-  {\n-    /* Pass the value of the gnu.classpath.awt.gtk.portable.native.sync system\n-     * property to C. */ \n-    int portableNativeSync;     \n-    String portNatSyncProp = \n-      System.getProperty(\"gnu.classpath.awt.gtk.portable.native.sync\");\n-\n-    if (portNatSyncProp == null)\n-      portableNativeSync = -1;  // unset\n-    else if (Boolean.valueOf(portNatSyncProp).booleanValue())\n-      portableNativeSync = 1;   // true\n-    else\n-      portableNativeSync = 0;   // false\n-    \n-    synchronized (this) \n-      {\n-\tgtkInit(portableNativeSync);\n-\tgtkInitCalled = true;\n-\tnotifyAll();\n-      }\n-    gtkMain();\n-  }\n-}\n-\n-\n-"}, {"sha": "cd7ca8ac79b0a0d5bd8ce6938bca422fcfb8b5db", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,8 +38,6 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.Font;\n-import java.awt.MenuComponent;\n import java.awt.peer.MenuComponentPeer;\n \n public class GtkMenuComponentPeer extends GtkGenericPeer"}, {"sha": "33242f69c4b695e2d892f74053937417417d1123", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuItemPeer.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -43,8 +43,6 @@\n import java.awt.MenuComponent;\n import java.awt.MenuBar;\n import java.awt.MenuItem;\n-import java.awt.peer.MenuBarPeer;\n-import java.awt.peer.MenuComponentPeer;\n import java.awt.peer.MenuItemPeer;\n import java.awt.peer.MenuPeer;\n "}, {"sha": "b99ef24c8819bfa7f177fdd19f34bbd7e4d9199c", "filename": "libjava/gnu/java/awt/peer/gtk/GtkScrollPanePeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollPanePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollPanePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollPanePeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -41,7 +41,6 @@\n import java.awt.Adjustable;\n import java.awt.Dimension;\n import java.awt.ScrollPane;\n-import java.awt.peer.ComponentPeer;\n import java.awt.peer.ScrollPanePeer;\n \n public class GtkScrollPanePeer extends GtkContainerPeer"}, {"sha": "d6a498ce5df06ae8623fe7fb9a198494584a624d", "filename": "libjava/gnu/java/awt/peer/gtk/GtkScrollbarPeer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -73,7 +73,7 @@ public GtkScrollbarPeer (Scrollbar s)\n \n   protected void postAdjustmentEvent (int type, int value)\n   {\n-    q.postEvent (new AdjustmentEvent ((Adjustable)awtComponent, \n+    q().postEvent (new AdjustmentEvent ((Adjustable)awtComponent, \n \t\t\t\t      AdjustmentEvent.ADJUSTMENT_VALUE_CHANGED,\n \t\t\t\t      type, value));\n   }"}, {"sha": "3051ecfcfa8df02d022d2f5fb1e600ce19afe0d8", "filename": "libjava/gnu/java/awt/peer/gtk/GtkTextComponentPeer.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextComponentPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -38,11 +38,8 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.AWTEvent;\n-import java.awt.Component;\n import java.awt.Rectangle;\n import java.awt.TextComponent;\n-import java.awt.event.KeyEvent;\n import java.awt.event.TextEvent;\n import java.awt.peer.TextComponentPeer;\n \n@@ -85,6 +82,6 @@ public long filterEvents (long filter)\n \n   protected void postTextEvent ()\n   {\n-    q.postEvent (new TextEvent (awtComponent, TextEvent.TEXT_VALUE_CHANGED));\n+    q().postEvent (new TextEvent (awtComponent, TextEvent.TEXT_VALUE_CHANGED));\n   }\n }"}, {"sha": "f57f53a17a70c4494baf37bcb4025fc9c95f5408", "filename": "libjava/gnu/java/awt/peer/gtk/GtkToolkit.java", "status": "modified", "additions": 62, "deletions": 20, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -51,23 +51,24 @@\n import java.awt.dnd.DragGestureEvent;\n import java.awt.dnd.peer.DragSourceContextPeer;\n import java.awt.font.FontRenderContext;\n-import java.awt.font.TextAttribute;\n import java.awt.im.InputMethodHighlight;\n import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n import java.awt.image.ImageConsumer;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n import java.awt.peer.*;\n+import java.io.InputStream;\n import java.net.URL;\n import java.text.AttributedString;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Hashtable;\n import java.util.Iterator;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n-import java.util.MissingResourceException;\n import java.util.Properties;\n+import javax.imageio.spi.IIORegistry;\n \n /* This class uses a deprecated method java.awt.peer.ComponentPeer.getPeer().\n    This merits comment.  We are basically calling Sun's bluff on this one.\n@@ -86,9 +87,8 @@ this class.  If getPeer() ever goes away, we can implement a hash table\n public class GtkToolkit extends gnu.java.awt.ClasspathToolkit\n   implements EmbeddedWindowSupport\n {\n-  GtkMainThread main;\n   Hashtable containers = new Hashtable();\n-  static EventQueue q = new EventQueue();\n+  static EventQueue q;\n   static Clipboard systemClipboard;\n   static boolean useGraphics2dSet;\n   static boolean useGraphics2d;\n@@ -103,19 +103,32 @@ public static boolean useGraphics2D()\n     return useGraphics2d;\n   }\n \n+  static native void gtkInit(int portableNativeSync);\n+\n   static\n   {\n     if (Configuration.INIT_LOAD_LIBRARY)\n       System.loadLibrary(\"gtkpeer\");\n+\n+    int portableNativeSync;     \n+    String portNatSyncProp = \n+      System.getProperty(\"gnu.classpath.awt.gtk.portable.native.sync\");\n+    \n+    if (portNatSyncProp == null)\n+      portableNativeSync = -1;  // unset\n+    else if (Boolean.valueOf(portNatSyncProp).booleanValue())\n+      portableNativeSync = 1;   // true\n+    else\n+      portableNativeSync = 0;   // false\n+\n+    gtkInit(portableNativeSync);\n   }\n \n   public GtkToolkit ()\n   {\n-    main = new GtkMainThread ();\n     systemClipboard = new GtkClipboard ();\n-    GtkGenericPeer.enableQueue (q);\n   }\n-  \n+\n   native public void beep ();\n   native private void getScreenSizeDimensions (int[] xy);\n   \n@@ -313,7 +326,7 @@ public String[] getFontList ()\n \t\t\t   \"SansSerif\" });\n   }\n \n-  private class LRUCache extends java.util.LinkedHashMap\n+  private class LRUCache extends LinkedHashMap\n   {    \n     int max_entries;\n     public LRUCache(int max)\n@@ -333,15 +346,18 @@ protected boolean removeEldestEntry(Map.Entry eldest)\n \n   public FontMetrics getFontMetrics (Font font) \n   {\n-    if (metricsCache.containsKey(font))\n-      return (FontMetrics) metricsCache.get(font);\n-    else\n+    synchronized (metricsCache)\n+      {\n+        if (metricsCache.containsKey(font))\n+          return (FontMetrics) metricsCache.get(font);\n+      }\n+\n+    FontMetrics m = new GdkFontMetrics (font);\n+    synchronized (metricsCache)\n       {\n-        FontMetrics m;\n-        m = new GdkFontMetrics (font);\n         metricsCache.put(font, m);\n-        return m;\n-      }    \n+      }\n+    return m;\n   }\n \n   public Image getImage (String filename) \n@@ -594,6 +610,14 @@ public ClasspathTextLayoutPeer getClasspathTextLayoutPeer (AttributedString str,\n \n   protected EventQueue getSystemEventQueueImpl() \n   {\n+    synchronized (GtkToolkit.class)\n+      {\n+        if (q == null)\n+          {\n+            q = new EventQueue();\n+            GtkGenericPeer.enableQueue (q);\n+          }\n+      }    \n     return q;\n   }\n \n@@ -609,19 +633,37 @@ public Map mapInputMethodHighlight(InputMethodHighlight highlight)\n     throw new Error(\"not implemented\");\n   }\n \n+  public Rectangle getBounds()\n+  {\n+    int[] dims = new int[2];\n+    getScreenSizeDimensions(dims);\n+    return new Rectangle(0, 0, dims[0], dims[1]);\n+  }\n+  \n   // ClasspathToolkit methods\n \n   public GraphicsEnvironment getLocalGraphicsEnvironment()\n   {\n-    GraphicsEnvironment ge;\n-    ge = new GdkGraphicsEnvironment ();  \n-    return ge;\n+    return new GdkGraphicsEnvironment(this);\n+  }\n+\n+  public Font createFont(int format, InputStream stream)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public RobotPeer createRobot (GraphicsDevice screen) throws AWTException\n+  {\n+    return new GdkRobotPeer (screen);\n   }\n \n-  public Font createFont(int format, java.io.InputStream stream)\n+  public void registerImageIOSpis(IIORegistry reg)\n   {\n-    throw new java.lang.UnsupportedOperationException ();\n+    GdkPixbufDecoder.registerSpis(reg);\n   }\n \n+  public native boolean nativeQueueEmpty();\n+  public native void wakeNativeQueue();  \n+  public native void iterateNativeQueue(EventQueue locked, boolean block);\n \n } // class GtkToolkit"}, {"sha": "1d6e253b072b06f2f81a6e22642f2e5361206e6b", "filename": "libjava/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -39,7 +39,6 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.Component;\n-import java.awt.Dimension;\n import java.awt.Frame;\n import java.awt.Window;\n import java.awt.event.WindowEvent;\n@@ -166,10 +165,12 @@ protected void postConfigureEvent (int x, int y, int width, int height)\n \t|| frame_y != awtComponent.getY()\n \t|| frame_width != awtComponent.getWidth()\n \t|| frame_height != awtComponent.getHeight())\n-      setBoundsCallback ((Window) awtComponent,\n-\t\t\t frame_x, frame_y, frame_width, frame_height);\n+      {\n+        setBoundsCallback ((Window) awtComponent,\n+                           frame_x, frame_y, frame_width, frame_height);\n \n-    awtComponent.validate();\n+        awtComponent.validate();\n+      }\n   }\n \n   native void nativeSetVisible (boolean b);\n@@ -192,7 +193,7 @@ void postWindowEvent (int id, Window opposite, int newState)\n \t// Post a WINDOW_OPENED event the first time this window is shown.\n \tif (!hasBeenShown)\n \t  {\n-\t    q.postEvent (new WindowEvent ((Window) awtComponent, id,\n+\t    q().postEvent (new WindowEvent ((Window) awtComponent, id,\n \t\t\t\t\t  opposite));\n \t    hasBeenShown = true;\n \t  }\n@@ -201,12 +202,12 @@ else if (id == WindowEvent.WINDOW_STATE_CHANGED)\n       {\n \tif (oldState != newState)\n \t  {\n-\t    q.postEvent (new WindowEvent ((Window) awtComponent, id, opposite,\n+\t    q().postEvent (new WindowEvent ((Window) awtComponent, id, opposite,\n \t\t\t\t\t  oldState, newState));\n \t    oldState = newState;\n \t  }\n       }\n     else\n-      q.postEvent (new WindowEvent ((Window) awtComponent, id, opposite));\n+      q().postEvent (new WindowEvent ((Window) awtComponent, id, opposite));\n   }\n }"}, {"sha": "235c8ed21cca5da1497349fcbd3fd38060acc71b", "filename": "libjava/include/jvm.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Finclude%2Fjvm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Finclude%2Fjvm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvm.h?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -525,6 +525,9 @@ void _Jv_SetCurrentJNIEnv (_Jv_JNIEnv *);\n /* Free a JNIEnv. */\n void _Jv_FreeJNIEnv (_Jv_JNIEnv *);\n \n+/* Free a JNIEnv. */\n+void _Jv_FreeJNIEnv (_Jv_JNIEnv *);\n+\n struct _Jv_JavaVM;\n _Jv_JavaVM *_Jv_GetJavaVM (); \n "}, {"sha": "1519f1da8691c4efbded3e5451192945615d175d", "filename": "libjava/java/awt/AWTKeyStroke.java", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTKeyStroke.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* AWTKeyStroke.java -- an immutable key stroke\n-   Copyright (C) 2002, 2004  Free Software Foundation\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -393,15 +393,16 @@ public static AWTKeyStroke getAWTKeyStrokeForEvent(KeyEvent event)\n    * </code>      \n    *\n    * @param s the string to parse\n+   * @throws IllegalArgumentException if s is null or cannot be parsed\n    * @return the specified keystroke\n-   * @throws NullPointerException if s is null\n-   * @throws IllegalArgumentException if s cannot be parsed\n    */\n   public static AWTKeyStroke getAWTKeyStroke(String s)\n   {\n+    if (s == null)\n+      throw new IllegalArgumentException(\"null argument\");\n     StringTokenizer t = new StringTokenizer(s, \" \");\n     if (! t.hasMoreTokens())\n-      throw new IllegalArgumentException();\n+      throw new IllegalArgumentException(\"no tokens '\" + s + \"'\");\n     int modifiers = 0;\n     boolean released = false;\n     String token = null;\n@@ -432,7 +433,8 @@ else if (\"typed\".equals(token))\n                                          KeyEvent.VK_UNDEFINED, modifiers,\n                                          false);\n               }\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\"Invalid 'typed' argument '\"\n+\t\t\t    \t\t       + s + \"'\");\n           }\n         else if (\"pressed\".equals(token))\n           {\n@@ -453,8 +455,11 @@ else if (\"released\".equals(token))\n     while (t.hasMoreTokens());\n     // Now token contains the VK name we must parse.\n     Integer code = (Integer) vktable.get(token);\n-    if (code == null || t.hasMoreTokens())\n-      throw new IllegalArgumentException();\n+    if (code == null)\n+      throw new IllegalArgumentException(\"Unknown token '\" + token\n+\t\t\t\t\t + \"' in '\" + s + \"'\");\n+    if (t.hasMoreTokens())\n+      throw new IllegalArgumentException(\"Too many tokens: \" + s);\n     return getAWTKeyStroke(KeyEvent.CHAR_UNDEFINED, code.intValue(),\n                            modifiers, released);\n   }"}, {"sha": "b1772548ac2c14125e85157a5a40b7ae2df3f029", "filename": "libjava/java/awt/BasicStroke.java", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FBasicStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FBasicStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FBasicStroke.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* BasicStroke.java -- \n-   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,6 +48,7 @@ public class BasicStroke implements Stroke\n   public static final int JOIN_MITER = 0;\n   public static final int JOIN_ROUND = 1;\n   public static final int JOIN_BEVEL = 2;\n+\n   public static final int CAP_BUTT = 0;\n   public static final int CAP_ROUND = 1;\n   public static final int CAP_SQUARE = 2;\n@@ -208,11 +209,34 @@ public float getDashPhase()\n     return phase;\n   }\n \n+  /**\n+   * Returns the hash code for this object. The hash is calculated by\n+   * xoring the hash, cap, join, limit, dash array and phase values\n+   * (converted to <code>int</code> first with\n+   * <code>Float.floatToIntBits()</code> if the value is a\n+   * <code>float</code>).\n+   */\n   public int hashCode()\n   {\n-    throw new Error(\"not implemented\");\n+    int hash = Float.floatToIntBits(width);\n+    hash ^= cap;\n+    hash ^= join;\n+    hash ^= Float.floatToIntBits(limit);\n+   \n+    if (dash != null)\n+      for (int i = 0; i < dash.length; i++)\n+\thash ^=  Float.floatToIntBits(dash[i]);\n+\n+    hash ^= Float.floatToIntBits(phase);\n+\n+    return hash;\n   }\n \n+  /**\n+   * Returns true if the given Object is an instance of BasicStroke\n+   * and the width, cap, join, limit, dash array and phase are all\n+   * equal.\n+   */\n   public boolean equals(Object o)\n   {\n     if (! (o instanceof BasicStroke))"}, {"sha": "0458ebbd71d18886f4101fae67cea0da9b75bf93", "filename": "libjava/java/awt/Button.java", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FButton.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -47,7 +47,6 @@\n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleAction;\n import javax.accessibility.AccessibleContext;\n-import javax.accessibility.AccessibleRelation;\n import javax.accessibility.AccessibleRole;\n import javax.accessibility.AccessibleValue;\n \n@@ -429,9 +428,18 @@ public EventListener[] getListeners(Class listenerType)\n     + getWidth () + \"x\" + getHeight () + \",label=\" + getLabel ();\n }\n \n+/**\n+ * Gets the AccessibleContext associated with this <code>Button</code>.\n+ * The context is created, if necessary.\n+ *\n+ * @return the associated context\n+ */\n public AccessibleContext getAccessibleContext()\n {\n-  return new AccessibleAWTButton();\n+  /* Create the context if this is the first request */\n+  if (accessibleContext == null)\n+    accessibleContext = new AccessibleAWTButton();\n+  return accessibleContext;\n }\n \n   /**"}, {"sha": "05055f2a28fd1730dd56fec158c1d6e3a9356b42", "filename": "libjava/java/awt/Canvas.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FCanvas.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FCanvas.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCanvas.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -174,10 +174,7 @@ public AccessibleContext getAccessibleContext()\n   {\n     /* Create the context if this is the first request */\n     if (accessibleContext == null)\n-      {\n-        /* Create the context */\n-        accessibleContext = new AccessibleAWTCanvas();\n-      }\n+      accessibleContext = new AccessibleAWTCanvas();\n     return accessibleContext;\n   }\n "}, {"sha": "b3fc4c24d0afb426037cddeeba9fabded764b17a", "filename": "libjava/java/awt/Checkbox.java", "status": "modified", "additions": 145, "deletions": 15, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FCheckbox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FCheckbox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCheckbox.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -48,14 +48,15 @@\n import javax.accessibility.AccessibleContext;\n import javax.accessibility.AccessibleRole;\n import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n import javax.accessibility.AccessibleValue;\n \n /**\n  * This class implements a component which has an on/off state.  Two\n  * or more Checkboxes can be grouped by a CheckboxGroup.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Tom Tromey <tromey@redhat.com>\n+ * @author Tom Tromey (tromey@redhat.com)\n  */\n public class Checkbox extends Component\n   implements ItemSelectable, Accessible, Serializable\n@@ -94,13 +95,38 @@ public class Checkbox extends Component\n // The list of listeners for this object.\n private transient ItemListener item_listeners;\n \n-protected class AccessibleAWTCheckBox\n+/**\n+ * This class provides accessibility support for the\n+ * checkbox.\n+ *\n+ * @author Jerry Quinn  (jlquinn@optonline.net)\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n+ */\n+protected class AccessibleAWTCheckbox\n   extends AccessibleAWTComponent\n   implements ItemListener, AccessibleAction, AccessibleValue\n {\n-  \n \n-  /* (non-Javadoc)\n+  /**\n+   * Serialization constant to match JDK 1.5\n+   */\n+  private static final long serialVersionUID = 7881579233144754107L;\n+\n+  /**\n+   * Default constructor which simply calls the\n+   * super class for generic component accessibility\n+   * handling.\n+   */\n+  public AccessibleAWTCheckbox()\n+  {\n+    super();\n+  }\n+\n+  /**\n+   * Captures changes to the state of the checkbox and\n+   * fires appropriate accessible property change events.\n+   *\n+   * @param event the event fired.\n    * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)\n    */\n   public void itemStateChanged(ItemEvent event)\n@@ -110,78 +136,171 @@ public void itemStateChanged(ItemEvent event)\n                        state ? AccessibleState.CHECKED : null);\n   }\n   \n+  /**\n+   * Returns an implementation of the <code>AccessibleAction</code>\n+   * interface for this accessible object.  In this case, the\n+   * current instance is simply returned (with a more appropriate\n+   * type), as it also implements the accessible action as well as\n+   * the context.\n+   *\n+   * @return the accessible action associated with this context.\n+   * @see javax.accessibility.AccessibleAction\n+   */\n   public AccessibleAction getAccessibleAction()\n   {\n     return this;\n   }\n   \n+  /**\n+   * Returns an implementation of the <code>AccessibleValue</code>\n+   * interface for this accessible object.  In this case, the\n+   * current instance is simply returned (with a more appropriate\n+   * type), as it also implements the accessible value as well as\n+   * the context.\n+   *\n+   * @return the accessible value associated with this context.\n+   * @see javax.accessibility.AccessibleValue\n+   */\n   public AccessibleValue getAccessibleValue()\n   {\n     return this;\n   }\n   \n-  /* (non-Javadoc)\n+  /* \n+   * The following methods are implemented in the JDK (up to\n+   * 1.5) as stubs.  We do likewise here.\n+   */\n+\n+  /**\n+   * Returns the number of actions associated with this accessible\n+   * object.  This default implementation returns 0.\n+   *\n+   * @return the number of accessible actions available.\n    * @see javax.accessibility.AccessibleAction#getAccessibleActionCount()\n    */\n   public int getAccessibleActionCount()\n   {\n-    // 1.4.1 does this\n+    // 1.4.1 and 1.5 do this\n     return 0;\n   }\n \n-  /* (non-Javadoc)\n+  /**\n+   * Returns a description of the action with the supplied id.\n+   * This default implementation always returns null.\n+   *\n+   * @param i the id of the action whose description should be\n+   *          retrieved.\n+   * @return a <code>String</code> describing the action.\n    * @see javax.accessibility.AccessibleAction#getAccessibleActionDescription(int)\n    */\n   public String getAccessibleActionDescription(int i)\n   {\n+    // 1.5 does this\n     return null;\n   }\n \n-  /* (non-Javadoc)\n+  /**\n+   * Executes the action with the specified id.  This\n+   * default implementation simply returns false.\n+   *\n+   * @param i the id of the action to perform.\n+   * @return true if the action was performed.\n    * @see javax.accessibility.AccessibleAction#doAccessibleAction(int)\n    */\n   public boolean doAccessibleAction(int i)\n   {\n+    // 1.5 does this\n     return false;\n   }\n \n-  /* (non-Javadoc)\n+  /**\n+   * Returns the current value of this accessible object.\n+   * If no value has been set, null is returned.  This\n+   * default implementation always returns null, regardless.\n+   *\n+   * @return the numeric value of this object, or null if\n+   *         no value has been set.\n    * @see javax.accessibility.AccessibleValue#getCurrentAccessibleValue()\n    */\n   public Number getCurrentAccessibleValue()\n   {\n+    // 1.5 does this\n     return null;\n   }\n \n-  /* (non-Javadoc)\n+  /**\n+   * Sets the current value of this accessible object\n+   * to that supplied.  In this default implementation,\n+   * the value is never set and the method always returns\n+   * false.\n+   *\n+   * @param number the new accessible value.\n+   * @return true if the value was set.\n    * @see javax.accessibility.AccessibleValue#setCurrentAccessibleValue(java.lang.Number)\n    */\n   public boolean setCurrentAccessibleValue(Number number)\n   {\n+    // 1.5 does this\n     return false;\n   }\n \n-  /* (non-Javadoc)\n+  /**\n+   * Returns the minimum acceptable accessible value used\n+   * by this object, or null if no minimum value exists.\n+   * This default implementation always returns null.\n+   *\n+   * @return the minimum acceptable accessible value, or null\n+   *         if there is no minimum.\n    * @see javax.accessibility.AccessibleValue#getMinimumAccessibleValue()\n    */\n   public Number getMinimumAccessibleValue()\n   {\n     return null;\n   }\n \n-  /* (non-Javadoc)\n+  /**\n+   * Returns the maximum acceptable accessible value used\n+   * by this object, or null if no maximum value exists.\n+   * This default implementation always returns null.\n+   *\n+   * @return the maximum acceptable accessible value, or null\n+   *         if there is no maximum.\n    * @see javax.accessibility.AccessibleValue#getMaximumAccessibleValue()\n    */\n   public Number getMaximumAccessibleValue()\n   {\n     return null;\n   }\n   \n+  /**\n+   * Returns the role of this accessible object.\n+   *\n+   * @return the instance of <code>AccessibleRole</code>,\n+   *         which describes this object.\n+   * @see javax.accessibility.AccessibleRole\n+   */\n   public AccessibleRole getAccessibleRole() \n   {\n     return AccessibleRole.CHECK_BOX;\n   }\n   \n+  /**\n+   * Returns the state set of this accessible object.\n+   *\n+   * @return a set of <code>AccessibleState</code>s\n+   *         which represent the current state of the\n+   *         accessible object.\n+   * @see javax.accessibility.AccessibleState\n+   * @see javax.accessibility.AccessibleStateSet\n+   */\n+  public AccessibleStateSet getAccessibleStateSet()\n+  {\n+    AccessibleStateSet set = super.getAccessibleStateSet();\n+    if (state)\n+      set.add(AccessibleState.CHECKED);\n+    return set;\n+  }\n+\n }\n \n /*************************************************************************/\n@@ -490,11 +609,22 @@ public ItemListener[] getItemListeners ()\n \t  + \",\" + super.paramString());\n }\n \n+/**\n+ * Gets the AccessibleContext associated with this <code>Checkbox</code>.\n+ * The context is created, if necessary.\n+ *\n+ * @return the associated context\n+ */\n public AccessibleContext getAccessibleContext()\n {\n-  AccessibleAWTCheckBox ac = new AccessibleAWTCheckBox();\n-  addItemListener(ac);\n-  return ac;\n+  /* Create the context if this is the first request */\n+  if (accessibleContext == null)\n+  {\n+    AccessibleAWTCheckbox ac = new AccessibleAWTCheckbox();\n+    accessibleContext = ac;\n+    addItemListener(ac);\n+  }\n+  return accessibleContext;\n }\n \n } // class Checkbox "}, {"sha": "6b9002ad7aae72a92b7a87f921cd1885cf167914", "filename": "libjava/java/awt/CheckboxMenuItem.java", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -43,14 +43,20 @@\n import java.awt.peer.CheckboxMenuItemPeer;\n import java.util.EventListener;\n \n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleValue;\n+\n /**\n   * This class implements a menu item that has a checkbox on it indicating\n   * the selected state of some option.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   * @author Tom Tromey <tromey@redhat.com>\n   */\n-public class CheckboxMenuItem extends MenuItem implements ItemSelectable\n+public class CheckboxMenuItem extends MenuItem\n+  implements ItemSelectable, Accessible\n {\n \n /*\n@@ -268,6 +274,14 @@ public class CheckboxMenuItem extends MenuItem implements ItemSelectable\n void\n dispatchEventImpl(AWTEvent e)\n {\n+  if (e instanceof ItemEvent)\n+    {\n+      synchronized (this)\n+        {\n+          state = (((ItemEvent) e).getStateChange() == ItemEvent.SELECTED);\n+        }\n+    }\n+\n   if (e.id <= ItemEvent.ITEM_LAST \n       && e.id >= ItemEvent.ITEM_FIRST\n       && (item_listeners != null \n@@ -315,5 +329,27 @@ public ItemListener[] getItemListeners ()\n   {\n     return (ItemListener[]) getListeners (ItemListener.class);\n   }\n+\n+\n+  protected class AccessibleAWTCheckboxMenuItem extends AccessibleAWTMenuItem\n+    implements AccessibleAction, AccessibleValue\n+  {\n+    // I think the base class provides the necessary implementation\n+  }\n+  \n+  /**\n+   * Gets the AccessibleContext associated with this <code>CheckboxMenuItem</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTCheckboxMenuItem();\n+    return accessibleContext;\n+  }\n+\n } // class CheckboxMenuItem\n "}, {"sha": "c6a532a5b37db6a05c101184445426b2a7d76212", "filename": "libjava/java/awt/Choice.java", "status": "modified", "additions": 76, "deletions": 10, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FChoice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FChoice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FChoice.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -45,6 +45,7 @@\n import java.util.EventListener;\n import java.util.Vector;\n \n+import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleAction;\n import javax.accessibility.AccessibleContext;\n import javax.accessibility.AccessibleRole;\n@@ -54,7 +55,8 @@\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   */\n-public class Choice extends Component implements ItemSelectable, Serializable\n+public class Choice extends Component\n+  implements ItemSelectable, Serializable, Accessible\n {\n \n /*\n@@ -83,39 +85,94 @@ public class Choice extends Component implements ItemSelectable, Serializable\n // Listener chain\n private ItemListener item_listeners;\n \n+/**\n+ * This class provides accessibility support for the\n+ * combo box.\n+ *\n+ * @author Jerry Quinn  (jlquinn@optonline.net)\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n+ */\n   protected class AccessibleAWTChoice\n-    extends Component.AccessibleAWTComponent\n-    implements AccessibleAction\n+  extends AccessibleAWTComponent\n+  implements AccessibleAction\n   {\n+\n+    /**\n+     * Serialization constant to match JDK 1.5\n+     */\n+    private static final long serialVersionUID = 7175603582428509322L;\n+\n+    /**\n+     * Default constructor which simply calls the\n+     * super class for generic component accessibility\n+     * handling.\n+     */\n+    public AccessibleAWTChoice()\n+    {\n+      super();\n+    }\n+\n+    /**\n+     * Returns an implementation of the <code>AccessibleAction</code>\n+     * interface for this accessible object.  In this case, the\n+     * current instance is simply returned (with a more appropriate\n+     * type), as it also implements the accessible action as well as\n+     * the context.\n+     *\n+     * @return the accessible action associated with this context.\n+     * @see javax.accessibility.AccessibleAction\n+     */\n     public AccessibleAction getAccessibleAction()\n     {\n       return this;\n     }\n \n-    // FIXME: I think this is right, but should be checked by someone who\n-    // knows better.\n+    /**\n+     * Returns the role of this accessible object.\n+     *\n+     * @return the instance of <code>AccessibleRole</code>,\n+     *         which describes this object.\n+     * @see javax.accessibility.AccessibleRole\n+     */\n     public AccessibleRole getAccessibleRole()\n     {\n-      return AccessibleRole.POPUP_MENU;\n+      return AccessibleRole.COMBO_BOX;\n     }\n \t  \n-    /* (non-Javadoc)\n+    /**\n+     * Returns the number of actions associated with this accessible\n+     * object.  In this case, it is the number of choices available.\n+     *\n+     * @return the number of choices available.\n      * @see javax.accessibility.AccessibleAction#getAccessibleActionCount()\n      */\n     public int getAccessibleActionCount()\n     {\n       return pItems.size();\n     }\n \n-    /* (non-Javadoc)\n+    /**\n+     * Returns a description of the action with the supplied id.\n+     * In this case, it is the text used in displaying the particular\n+     * choice on-screen.\n+     *\n+     * @param i the id of the choice whose description should be\n+     *          retrieved.\n+     * @return the <code>String</code> used to describe the choice.\n      * @see javax.accessibility.AccessibleAction#getAccessibleActionDescription(int)\n      */\n     public String getAccessibleActionDescription(int i)\n     {\n       return (String) pItems.get(i);\n     }\n \t  \n-    /* (non-Javadoc)\n+    /**\n+     * Executes the action with the specified id.  In this case,\n+     * calling this method provides the same behaviour as would\n+     * choosing a choice from the list in a visual manner.\n+     *\n+     * @param i the id of the choice to select.\n+     * @return true if a valid choice was specified.\n      * @see javax.accessibility.AccessibleAction#doAccessibleAction(int)\n      */\n     public boolean doAccessibleAction(int i)\n@@ -564,8 +621,17 @@ public ItemListener[] getItemListeners ()\n     return (ItemListener[]) getListeners (ItemListener.class);\n   }\n \n+  /**\n+   * Gets the AccessibleContext associated with this <code>Choice</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n   public AccessibleContext getAccessibleContext()\n   {\n-    return new AccessibleAWTChoice();\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTChoice();\n+    return accessibleContext;\n   }\n } // class Choice "}, {"sha": "3a7960c22c7b961ff752abdfbc27ec70217b06fa", "filename": "libjava/java/awt/Component.java", "status": "modified", "additions": 39, "deletions": 30, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponent.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1080,7 +1080,7 @@ public boolean isFontSet()\n    *\n    * @return the locale for this component\n    * @throws IllegalComponentStateException if it has no locale or parent\n-   * @see setLocale(Locale)\n+   * @see #setLocale(Locale)\n    * @since 1.1\n    */\n   public Locale getLocale()\n@@ -1362,7 +1362,7 @@ public void reshape(int x, int y, int width, int height)\n       peer.setBounds (x, y, width, height);\n \n     // Erase old bounds and repaint new bounds for lightweights.\n-    if (isLightweight())\n+    if (isLightweight() && isShowing ())\n       {\n         boolean shouldRepaintParent = false;\n         boolean shouldRepaintSelf = false;\n@@ -1386,13 +1386,16 @@ public void reshape(int x, int y, int width, int height)\n           repaint();\n       }\n \n-    if (oldx != x || oldy != y)\n+    // Only post event if this component is visible and has changed size.\n+    if (isShowing ()\n+        && (oldx != x || oldy != y))\n       {\n         ComponentEvent ce = new ComponentEvent(this,\n                                                ComponentEvent.COMPONENT_MOVED);\n         getToolkit().getSystemEventQueue().postEvent(ce);\n       }\n-    if (oldwidth != width || oldheight != height)\n+    if (isShowing ()\n+        && (oldwidth != width || oldheight != height))\n       {\n         ComponentEvent ce = new ComponentEvent(this,\n                                                ComponentEvent.COMPONENT_RESIZED);\n@@ -1955,7 +1958,7 @@ public void printAll(Graphics g)\n    * @see Graphics#drawImage(Image, int, int, ImageObserver)\n    * @see Graphics#drawImage(Image, int, int, int, int, Color, ImageObserver)\n    * @see Graphics#drawImage(Image, int, int, int, int, ImageObserver)\n-   * @see ImageObserver#update(Image, int, int, int, int, int)\n+   * @see ImageObserver#imageUpdate(Image, int, int, int, int, int)\n    */\n   public boolean imageUpdate(Image img, int flags, int x, int y, int w, int h)\n   {\n@@ -2097,7 +2100,7 @@ public boolean prepareImage(Image image, int width, int height,\n    * @param observer the observer to notify of image loading progress\n    * @return the image observer flags indicating the status of the load\n    * @see #prepareImage(Image, int, int, ImageObserver)\n-   * @see #Toolkit#checkImage(Image, int, int, ImageObserver)\n+   * @see Toolkit#checkImage(Image, int, int, ImageObserver)\n    * @throws NullPointerException if image is null\n    */\n   public int checkImage(Image image, ImageObserver observer)\n@@ -2115,7 +2118,7 @@ public int checkImage(Image image, ImageObserver observer)\n    * @param observer the observer to notify of image loading progress\n    * @return the image observer flags indicating the status of the load\n    * @see #prepareImage(Image, int, int, ImageObserver)\n-   * @see #Toolkit#checkImage(Image, int, int, ImageObserver)\n+   * @see Toolkit#checkImage(Image, int, int, ImageObserver)\n    */\n   public int checkImage(Image image, int width, int height,\n                         ImageObserver observer)\n@@ -2134,7 +2137,7 @@ public int checkImage(Image image, int width, int height,\n    * @param ignoreRepaint the new setting for ignoring repaint events\n    * @see #getIgnoreRepaint()\n    * @see BufferStrategy\n-   * @see GraphicsDevice.setFullScreenWindow(Window)\n+   * @see GraphicsDevice#setFullScreenWindow(Window)\n    * @since 1.4\n    */\n   public void setIgnoreRepaint(boolean ignoreRepaint)\n@@ -2250,9 +2253,9 @@ public Component getComponentAt(Point p)\n    * calls {@link #postEvent}.\n    *\n    * @param e the event to deliver\n-   * @deprecated use {@link #dispatchEvent(AWTEvent)} instead\n+   * @deprecated use {@link #dispatchEvent (AWTEvent)} instead\n    */\n-  public void deliverEvent(Event e)\n+  public void deliverEvent (Event e)\n   {\n     postEvent (e);\n   }\n@@ -2284,7 +2287,7 @@ public final void dispatchEvent(AWTEvent e)\n    * @return true if the event was handled, false otherwise\n    * @deprecated use {@link #dispatchEvent(AWTEvent)} instead\n    */\n-  public boolean postEvent(Event e)\n+  public boolean postEvent (Event e)\n   {\n     boolean handled = handleEvent (e);\n \n@@ -3178,8 +3181,8 @@ protected void processHierarchyBoundsEvent(HierarchyEvent e)\n    * AWT 1.0 event handler.\n    *\n    * This method calls one of the event-specific handler methods.  For\n-   * example for key events, either {@link #keyDown (Event evt, int\n-   * key)} or {@link keyUp (Event evt, int key)} is called.  A derived\n+   * example for key events, either {@link #keyDown(Event,int)}\n+   * or {@link #keyUp(Event,int)} is called.  A derived\n    * component can override one of these event-specific methods if it\n    * only needs to handle certain event types.  Otherwise it can\n    * override handleEvent itself and handle any event.\n@@ -3188,7 +3191,7 @@ protected void processHierarchyBoundsEvent(HierarchyEvent e)\n    * @return true if the event was handled, false otherwise\n    * @deprecated use {@link #processEvent(AWTEvent)} instead\n    */\n-  public boolean handleEvent(Event evt)\n+  public boolean handleEvent (Event evt)\n   {\n     switch (evt.id)\n       {\n@@ -3405,9 +3408,15 @@ public void addNotify()\n    */\n   public void removeNotify()\n   {\n-    if (peer != null)\n-      peer.dispose();\n+    // We null our peer field before disposing of it, such that if we're\n+    // not the event dispatch thread and the dispatch thread is awoken by\n+    // the dispose call, there will be no race checking the peer's null\n+    // status.\n+\n+    ComponentPeer tmp = peer;\n     peer = null;\n+    if (tmp != null)\n+      tmp.dispose();\n   }\n \n   /**\n@@ -3469,8 +3478,8 @@ public boolean isFocusable()\n    * Specify whether this component can receive focus. This method also\n    * sets the {@link #isFocusTraversableOverridden} field to 1, which\n    * appears to be the undocumented way {@link\n-   * DefaultFocusTraversalPolicy#accept()} determines whether to respect\n-   * the {@link #isFocusable()} method of the component.\n+   * DefaultFocusTraversalPolicy#accept(Component)} determines whether to\n+   * respect the {@link #isFocusable()} method of the component.\n    *\n    * @param focusable the new focusable status\n    * @since 1.4\n@@ -3484,10 +3493,10 @@ public void setFocusable(boolean focusable)\n \n   /**\n    * Sets the focus traversal keys for one of the three focus\n-   * traversal directions supported by Components: {@link\n-   * #KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS}, {@link\n-   * #KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS}, or {@link\n-   * #KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS}. Normally, the\n+   * traversal directions supported by Components:\n+   * {@link #KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS},\n+   * {@link #KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS}, or\n+   * {@link #KeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYS}. Normally, the\n    * default values should match the operating system's native\n    * choices. To disable a given traversal, use\n    * <code>Collections.EMPTY_SET</code>. The event dispatcher will\n@@ -3716,7 +3725,7 @@ public boolean getFocusTraversalKeysEnabled ()\n    * receives a FOCUS_GAINED event.\n    *\n    * The behaviour of this method is platform-dependent.\n-   * {@link #requestFocusInWindow} should be used instead.\n+   * {@link #requestFocusInWindow()} should be used instead.\n    *\n    * @see #requestFocusInWindow ()\n    * @see FocusEvent\n@@ -3791,7 +3800,7 @@ && isFocusable ())\n    * receives a FOCUS_GAINED event.\n    *\n    * The behaviour of this method is platform-dependent.\n-   * {@link #requestFocusInWindow} should be used instead.\n+   * {@link #requestFocusInWindow()} should be used instead.\n    *\n    * If the return value is false, the request is guaranteed to fail.\n    * If the return value is true, the request will succeed unless it\n@@ -3855,10 +3864,10 @@ && isFocusable ())\n                                                          currentFocusOwner));\n                           }\n                         else\n-                    eq.postEvent (new FocusEvent(this, FocusEvent.FOCUS_GAINED, temporary));\n+                          eq.postEvent (new FocusEvent(this, FocusEvent.FOCUS_GAINED, temporary));\n+                      }\n                   }\n               }\n-              }\n             else\n               // FIXME: need to add a focus listener to our top-level\n               // ancestor, so that we can post this event when it becomes\n@@ -3973,10 +3982,10 @@ && isFocusable ())\n                                                              currentFocusOwner));\n                               }\n                             else\n-                        eq.postEvent (new FocusEvent(this, FocusEvent.FOCUS_GAINED, temporary));\n+                              eq.postEvent (new FocusEvent(this, FocusEvent.FOCUS_GAINED, temporary));\n+                          }\n                       }\n                   }\n-                  }\n                 else\n                   return false;\n               }\n@@ -4069,8 +4078,8 @@ public void transferFocusBackward ()\n    * However, if this is a Window, the default focus owner in the\n    * window in the current focus cycle is focused instead.\n    *\n-   * @see #requestFocus ()\n-   * @see #isFocusCycleRoot ()\n+   * @see #requestFocus()\n+   * @see #isFocusCycleRoot(Container)\n    * @since 1.4\n    */\n   public void transferFocusUpCycle ()"}, {"sha": "6c5dec25d0be098531276a42191bf020621d6a2a", "filename": "libjava/java/awt/Container.java", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* Container.java -- parent container class in AWT\n-   Copyright (C) 1999, 2000, 2002, 2003, 2004 Free Software Foundation\n+   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -387,11 +387,14 @@ else if (constraints instanceof String)\n               layoutMgr.addLayoutComponent(null, comp);\n           }\n \n-        // Post event to notify of adding the container.\n-        ContainerEvent ce = new ContainerEvent(this,\n-                                               ContainerEvent.COMPONENT_ADDED,\n-                                               comp);\n-        getToolkit().getSystemEventQueue().postEvent(ce);\n+        if (isShowing ())\n+          {\n+            // Post event to notify of adding the component.\n+            ContainerEvent ce = new ContainerEvent(this,\n+                                                   ContainerEvent.COMPONENT_ADDED,\n+                                                   comp);\n+            getToolkit().getSystemEventQueue().postEvent(ce);\n+          }\n       }\n   }\n \n@@ -419,11 +422,14 @@ public void remove(int index)\n \n         r.parent = null;\n \n-        // Post event to notify of adding the container.\n-        ContainerEvent ce = new ContainerEvent(this,\n-                                               ContainerEvent.COMPONENT_REMOVED,\n-                                               r);\n-        getToolkit().getSystemEventQueue().postEvent(ce);\n+        if (isShowing ())\n+          {\n+            // Post event to notify of removing the component.\n+            ContainerEvent ce = new ContainerEvent(this,\n+                                                   ContainerEvent.COMPONENT_REMOVED,\n+                                                   r);\n+            getToolkit().getSystemEventQueue().postEvent(ce);\n+          }\n       }\n   }\n \n@@ -1046,11 +1052,14 @@ public boolean isAncestorOf(Component comp)\n    */\n   protected String paramString()\n   {\n-    String param = super.paramString();\n-    if (layoutMgr != null)\n-      param = param + \",layout=\" + layoutMgr.getClass().getName();\n+    if (layoutMgr == null)\n+      return super.paramString();\n \n-    return param;\n+    StringBuffer sb = new StringBuffer();\n+    sb.append(super.paramString());\n+    sb.append(\",layout=\");\n+    sb.append(layoutMgr.getClass().getName());\n+    return sb.toString();\n   }\n \n   /**"}, {"sha": "9c94d8a220b65eb8ee8ca126338661eeed549b24", "filename": "libjava/java/awt/DefaultKeyboardFocusManager.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -226,7 +226,7 @@ else if (e instanceof KeyEvent)\n         Component focusOwner = getGlobalPermanentFocusOwner ();\n \n         if (focusOwner != null)\n-        processKeyEvent (focusOwner, (KeyEvent) e);\n+          processKeyEvent (focusOwner, (KeyEvent) e);\n \n         if (e.isConsumed ())\n           return true;"}, {"sha": "30631b331ea4f7a18551327d6cd1f6c6f028c65a", "filename": "libjava/java/awt/Dialog.java", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDialog.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -40,6 +40,11 @@\n \n import java.awt.peer.DialogPeer;\n \n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n+\n /**\n  * A dialog box widget class.\n  *\n@@ -511,5 +516,38 @@ public void setUndecorated (boolean undecorated)\n \n     this.undecorated = undecorated;\n   }\n+  \n+  protected class AccessibleAWTDialog extends AccessibleAWTWindow\n+  {\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.DIALOG;\n+    }\n+    \n+    public AccessibleStateSet getAccessibleState()\n+    {\n+      AccessibleStateSet states = super.getAccessibleStateSet();\n+      if (isResizable())\n+        states.add(AccessibleState.RESIZABLE);\n+      if (isModal())\n+        states.add(AccessibleState.MODAL);\n+      return states;\n+    }\n+  }\n+  \n+  /**\n+   * Gets the AccessibleContext associated with this <code>Dialog</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTDialog();\n+    return accessibleContext;\n+  }\n+\n } // class Dialog\n "}, {"sha": "d55f0f5ea45802129e6a46eaad6370785047f791", "filename": "libjava/java/awt/EventDispatchThread.java", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FEventDispatchThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FEventDispatchThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventDispatchThread.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -53,7 +53,6 @@ class EventDispatchThread extends Thread\n     setName(\"AWT-EventQueue-\" + ++dispatchThreadNum);\n     this.queue = queue;\n     setPriority(NORM_PRIORITY + 1);\n-    start();\n   }\n \n   public void run()\n@@ -63,11 +62,6 @@ public void run()\n         try\n \t{\n \t  AWTEvent evt = queue.getNextEvent();\n-\t  if (isInterrupted ())\n-\t    {\n-\t      // We are interrupted when we should finish executing\n-\t      return;\n-\t    }\n \n           KeyboardFocusManager manager;\n           manager = KeyboardFocusManager.getCurrentKeyboardFocusManager ();\n@@ -80,6 +74,11 @@ public void run()\n           if (!manager.dispatchEvent (evt))\n             queue.dispatchEvent(evt);\n \t}\n+        catch (ThreadDeath death)\n+        {\n+          // If someone wants to kill us, let them.\n+          return;\n+        }\n \tcatch (InterruptedException ie)\n \t{\n \t  // We are interrupted when we should finish executing"}, {"sha": "fc0926cce2e42a6408c6f2670e20217b6cc09bd7", "filename": "libjava/java/awt/EventQueue.java", "status": "modified", "additions": 94, "deletions": 3, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FEventQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FEventQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventQueue.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -40,9 +40,12 @@\n import java.awt.event.ActionEvent;\n import java.awt.event.InputEvent;\n import java.awt.event.InvocationEvent;\n+import java.awt.event.WindowEvent;\n import java.lang.reflect.InvocationTargetException;\n import java.util.EmptyStackException;\n \n+import gnu.java.awt.ClasspathToolkit;\n+\n /* Written using on-line Java 2 Platform Standard Edition v1.3 API \n  * Specification, as well as \"The Java Class Libraries\", 2nd edition \n  * (Addison-Wesley, 1998).\n@@ -71,6 +74,35 @@\n   private long lastWhen = System.currentTimeMillis();\n \n   private EventDispatchThread dispatchThread = new EventDispatchThread(this);\n+  private boolean shutdown = false;\n+\n+  private long lastNativeQueueAccess = 0;\n+  private long humanLatencyThreshold = 100;\n+\n+  synchronized void setShutdown (boolean b) \n+  {\n+    shutdown = b;\n+  }\n+\n+  synchronized boolean isShutdown ()\n+  {\n+    if (shutdown)\n+      return true;\n+\n+    // This is the exact self-shutdown condition specified in J2SE:\n+    // http://java.sun.com/j2se/1.4.2/docs/api/java/awt/doc-files/AWTThreadIssues.html\n+    \n+    if (peekEvent() == null\n+        && ((ClasspathToolkit) Toolkit.getDefaultToolkit()).nativeQueueEmpty())\n+      {\n+        Frame[] frames = Frame.getFrames();\n+        for (int i = 0; i < frames.length; ++i)\n+          if (frames[i].isDisplayable())\n+            return false;\n+        return true;\n+      }\n+    return false;\n+  }\n \n   /**\n    * Initializes a new instance of <code>EventQueue</code>.\n@@ -93,9 +125,51 @@ public synchronized AWTEvent getNextEvent()\n   {\n     if (next != null)\n       return next.getNextEvent();\n+    \n+    ClasspathToolkit tk = ((ClasspathToolkit) Toolkit.getDefaultToolkit());\n+    long curr = System.currentTimeMillis();\n+\n+    if (! tk.nativeQueueEmpty() &&\n+        (curr - lastNativeQueueAccess > humanLatencyThreshold))\n+      {\n+        tk.iterateNativeQueue(this, false);\n+        lastNativeQueueAccess = curr;\n+      }\n \n     while (next_in == next_out)\n-      wait();\n+      {\n+        // Only the EventDispatchThread associated with the top of the stack is\n+        // allowed to get events from the native source; everyone else just\n+        // waits on the head of the queue.\n+\n+        if (isDispatchThread())\n+          {\n+            // We are not allowed to return null from this method, yet it\n+            // is possible that we actually have run out of native events\n+            // in the enclosing while() loop, and none of the native events\n+            // happened to cause AWT events. We therefore ought to check\n+            // the isShutdown() condition here, before risking a \"native\n+            // wait\". If we check it before entering this function we may\n+            // wait forever for events after the shutdown condition has\n+            // arisen.\n+\n+            if (isShutdown())\n+              throw new InterruptedException();\n+\n+            tk.iterateNativeQueue(this, true);\n+            lastNativeQueueAccess = System.currentTimeMillis();\n+          }\n+        else\n+          {\n+            try\n+              {\n+                wait();\n+              }\n+            catch (InterruptedException ie)\n+              {\n+              }\n+          }\n+      }\n \n     AWTEvent res = queue[next_out];\n \n@@ -215,6 +289,22 @@ public synchronized void postEvent(AWTEvent evt)\n         next_out = 0;\n         next_in = oldQueue.length;\n       }\n+    \n+    if (dispatchThread == null || !dispatchThread.isAlive())\n+      {\n+        dispatchThread = new EventDispatchThread(this);\n+        dispatchThread.start();\n+      }\n+\n+    // Window events might represent the closing of a window, which\n+    // might cause the end of the dispatch thread's life, so we'll wake\n+    // it up here to give it a chance to check for shutdown.\n+\n+    if (!isDispatchThread() \n+        || (evt.getID() == WindowEvent.WINDOW_CLOSED)\n+        || (evt.getID() == WindowEvent.WINDOW_CLOSING))\n+      ((ClasspathToolkit) Toolkit.getDefaultToolkit()).wakeNativeQueue();\n+\n     notify();\n   }\n \n@@ -386,9 +476,10 @@ protected void pop() throws EmptyStackException\n \t    next_in = 0;\n \t    next_out = 0;\n \n-            // Tell our EventDispatchThread that it can end execution\n-            dispatchThread.interrupt ();\n+            ((ClasspathToolkit) Toolkit.getDefaultToolkit()).wakeNativeQueue();\n+            setShutdown(true);\n \t    dispatchThread = null;\n+            this.notifyAll();\n           }\n       }\n   }"}, {"sha": "465a26814e3a338dacc049c235bf94b9ea292f06", "filename": "libjava/java/awt/Frame.java", "status": "modified", "additions": 104, "deletions": 13, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFrame.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -39,8 +39,16 @@\n package java.awt;\n \n import java.awt.peer.FramePeer;\n+import java.lang.ref.WeakReference;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n import java.util.Vector;\n \n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n+\n /**\n   * This class is a top-level window with a title bar and window\n   * decorations.\n@@ -196,7 +204,7 @@ public class Frame extends Window implements MenuContainer\n    */\n   private boolean undecorated = false;\n \n-/*\n+  /*\n    * The number used to generate the name returned by getName.\n    */\n   private static transient long next_frame_number;\n@@ -209,6 +217,7 @@ public class Frame extends Window implements MenuContainer\n Frame()\n {\n   this(\"\");\n+  noteFrame(this);\n }\n \n /**\n@@ -224,13 +233,15 @@ public class Frame extends Window implements MenuContainer\n   this.title = title;\n   // Top-level frames are initially invisible.\n   visible = false;\n+  noteFrame(this);\n }\n \n public\n Frame(GraphicsConfiguration gc)\n {\n   super(gc);\n   visible = false;\n+  noteFrame(this);\n }\n \n public\n@@ -239,6 +250,7 @@ public class Frame extends Window implements MenuContainer\n   super(gc);\n   setTitle(title);\n   visible = false;\n+  noteFrame(this);\n }\n \n /**\n@@ -391,13 +403,25 @@ public class Frame extends Window implements MenuContainer\n /**\n   * Notifies this frame that it should create its native peer.\n   */\n+\n+private static void fireDummyEvent()\n+{\n+  EventQueue.invokeLater(new Runnable() { public void run() { } });\n+}\n+\n public void\n addNotify()\n {\n   if (menuBar != null)\n     menuBar.addNotify();\n   if (peer == null)\n     peer = getToolkit ().createFrame (this);\n+\n+  // We now know there's a Frame (us) with a live peer, so we can start the\n+  // fundamental queue and dispatch thread, by inserting a dummy event.\n+  if (parent != null && parent.isDisplayable())\n+    fireDummyEvent();\n+  \n   super.addNotify();\n }\n \n@@ -406,15 +430,21 @@ public void removeNotify()\n   if (menuBar != null)\n     menuBar.removeNotify();\n   super.removeNotify();\n+\n+  // By now we've been disconnected from the peer, and the peer set to\n+  // null.  This is formally the same as saying \"we just became\n+  // un-displayable\", so we wake up the event queue with a dummy event to\n+  // see if it's time to shut down.\n+  fireDummyEvent();\n }\n \n-/**\n-  * Returns a debugging string describing this window.\n-  *\n-  * @return A debugging string describing this window.\n-  */\n+  /**\n+   * Returns a debugging string describing this window.\n+   *\n+   * @return A debugging string describing this window.\n+   */\n   protected String paramString ()\n-{\n+  {\n     String title = getTitle ();\n \n     String resizable = \"\";\n@@ -442,15 +472,43 @@ protected String paramString ()\n       }\n \n     return super.paramString () + \",title=\" + title + resizable + state;\n+  }\n+\n+private static ArrayList weakFrames = new ArrayList();\n+\n+private static void noteFrame(Frame f)\n+{\n+  weakFrames.add(new WeakReference(f));\n }\n \n-public static Frame[]\n-getFrames()\n+public static Frame[] getFrames()\n {\n-  //Frame[] array = new Frames[frames.size()];\n-  //return frames.toArray(array);\n-  String msg = \"FIXME: can't be implemented without weak references\";\n-  throw new UnsupportedOperationException(msg);\n+  int n = 0;\n+  synchronized (weakFrames)\n+    {\n+      Iterator i = weakFrames.iterator();\n+      while (i.hasNext())\n+        {\n+          WeakReference wr = (WeakReference) i.next();\n+          if (wr.get() != null)\n+            ++n;\n+        }\n+      if (n == 0)\n+        return new Frame[0];\n+      else\n+        {\n+          Frame[] frames = new Frame[n];\n+          n = 0;\n+          i = weakFrames.iterator();\n+          while (i.hasNext())\n+            {\n+              WeakReference wr = (WeakReference) i.next();\n+              if (wr.get() != null)\n+                frames[n++] = (Frame) wr.get();\n+            }\n+          return frames;\n+        }\n+    }\n }\n \n   public void setState (int state)\n@@ -549,4 +607,37 @@ private static synchronized long getUniqueLong ()\n   {\n     return next_frame_number++;\n   }\n+  \n+  protected class AccessibleAWTFrame extends AccessibleAWTWindow\n+  {\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.FRAME;\n+    }\n+    \n+    public AccessibleStateSet getAccessibleState()\n+    {\n+      AccessibleStateSet states = super.getAccessibleStateSet();\n+      if (isResizable())\n+        states.add(AccessibleState.RESIZABLE);\n+      if ((state & ICONIFIED) != 0)\n+        states.add(AccessibleState.ICONIFIED);\n+      return states;\n+    }\n+  }\n+  \n+  /**\n+   * Gets the AccessibleContext associated with this <code>Frame</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTFrame();\n+    return accessibleContext;\n+  }\n+\n }"}, {"sha": "0206ceca9af057bbfab02e27dcc31526a92bfd8c", "filename": "libjava/java/awt/Label.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FLabel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -306,10 +306,7 @@ public AccessibleContext getAccessibleContext()\n {\n   /* Create the context if this is the first request */\n   if (accessibleContext == null)\n-    {\n-      /* Create the context */\n-      accessibleContext = new AccessibleAWTLabel();\n-    }\n+    accessibleContext = new AccessibleAWTLabel();\n   return accessibleContext;\n }\n "}, {"sha": "e10cbaeeebf64fdf45cbe3e263bbd0f3f3df25e2", "filename": "libjava/java/awt/List.java", "status": "modified", "additions": 184, "deletions": 0, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FList.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -47,6 +47,11 @@\n import java.util.Vector;\n \n import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleSelection;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n \n /**\n   * Class that implements a listbox widget\n@@ -106,6 +111,7 @@ public class List extends Component\n // The list of ActionListeners for this object.\n private ActionListener action_listeners;\n \n+\n /*************************************************************************/\n \n /*\n@@ -1076,4 +1082,182 @@ public ItemListener[] getItemListeners ()\n   {\n     return (ItemListener[]) getListeners (ItemListener.class);\n   }\n+  \n+  // Accessibility internal class \n+  protected class AccessibleAWTList extends AccessibleAWTComponent\n+    implements AccessibleSelection, ItemListener, ActionListener\n+  {\n+    protected class AccessibleAWTListChild extends AccessibleAWTComponent\n+      implements Accessible\n+    {\n+      private int index;\n+      private List parent;\n+      \n+      public AccessibleAWTListChild(List parent, int indexInParent)\n+      {\n+        this.parent = parent;\n+        index = indexInParent;\n+        if (parent == null)\n+          index = -1;\n+      }\n+      \n+      /* (non-Javadoc)\n+       * @see javax.accessibility.Accessible#getAccessibleContext()\n+       */\n+      public AccessibleContext getAccessibleContext()\n+      {\n+        return this;\n+      }\n+      \n+      public AccessibleRole getAccessibleRole()\n+      {\n+        return AccessibleRole.LIST_ITEM;\n+      }\n+      \n+      public AccessibleStateSet getAccessibleStateSet()\n+      {\n+        AccessibleStateSet states = super.getAccessibleStateSet();\n+        if (parent.isIndexSelected(index))\n+          states.add(AccessibleState.SELECTED);\n+        return states;\n+      }\n+      \n+      public int getAccessibleIndexInParent()\n+      {\n+        return index;\n+      }\n+\n+    }\n+    \n+    public AccessibleAWTList()\n+    {\n+      addItemListener(this);\n+      addActionListener(this);\n+    }\n+    \n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.LIST;\n+    }\n+    \n+    public AccessibleStateSet getAccessibleStateSet()\n+    {\n+      AccessibleStateSet states = super.getAccessibleStateSet();\n+      states.add(AccessibleState.SELECTABLE);\n+      if (isMultipleMode())\n+        states.add(AccessibleState.MULTISELECTABLE);\n+      return states;\n+    }\n+\n+    public int getAccessibleChildrenCount()\n+    {\n+      return getItemCount();\n+    }\n+\n+    public Accessible getAccessibleChild(int i)\n+    {\n+      if (i >= getItemCount())\n+        return null;\n+      return new AccessibleAWTListChild(List.this, i);\n+    }\n+    \n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleSelection#getAccessibleSelectionCount()\n+     */\n+    public int getAccessibleSelectionCount()\n+    {\n+      return getSelectedIndexes().length;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleSelection#getAccessibleSelection()\n+     */\n+    public AccessibleSelection getAccessibleSelection()\n+    {\n+      return this;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleSelection#getAccessibleSelection(int)\n+     */\n+    public Accessible getAccessibleSelection(int i)\n+    {\n+      int[] items = getSelectedIndexes();\n+      if (i >= items.length)\n+        return null;\n+      return new AccessibleAWTListChild(List.this, items[i]);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleSelection#isAccessibleChildSelected(int)\n+     */\n+    public boolean isAccessibleChildSelected(int i)\n+    {\n+      return isIndexSelected(i);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleSelection#addAccessibleSelection(int)\n+     */\n+    public void addAccessibleSelection(int i)\n+    {\n+      select(i);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleSelection#removeAccessibleSelection(int)\n+     */\n+    public void removeAccessibleSelection(int i)\n+    {\n+      deselect(i);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleSelection#clearAccessibleSelection()\n+     */\n+    public void clearAccessibleSelection()\n+    {\n+      for (int i = 0; i < getItemCount(); i++)\n+        deselect(i);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see javax.accessibility.AccessibleSelection#selectAllAccessibleSelection()\n+     */\n+    public void selectAllAccessibleSelection()\n+    {\n+      if (isMultipleMode())\n+        for (int i = 0; i < getItemCount(); i++)\n+          select(i);\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)\n+     */\n+    public void itemStateChanged(ItemEvent event)\n+    {\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)\n+     */\n+    public void actionPerformed(ActionEvent event)\n+    {\n+    }\n+    \n+  }\n+\n+  /**\n+   * Gets the AccessibleContext associated with this <code>List</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTList();\n+    return accessibleContext;\n+  }\n } // class List"}, {"sha": "3cc9cc301ae682c37626c8ebb4258275813eacb2", "filename": "libjava/java/awt/Menu.java", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenu.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -451,12 +451,18 @@ public AccessibleRole getAccessibleRole()\n     }\n   }\n \n-  /* (non-Javadoc)\n-   * @see java.awt.MenuComponent#getAccessibleContext()\n+  /**\n+   * Gets the AccessibleContext associated with this <code>Menu</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n    */\n   public AccessibleContext getAccessibleContext()\n   {\n-    return new AccessibleAWTMenu();\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTMenu();\n+    return accessibleContext;\n   }\n \n } // class Menu"}, {"sha": "c040235c53520915d1943bf8015418e1540ac0d1", "filename": "libjava/java/awt/MenuBar.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuBar.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -381,10 +381,7 @@ public AccessibleContext getAccessibleContext()\n {\n   /* Create the context if this is the first request */\n   if (accessibleContext == null)\n-    {\n-      /* Create the context */\n-      accessibleContext = new AccessibleAWTMenuBar();\n-    }\n+    accessibleContext = new AccessibleAWTMenuBar();\n   return accessibleContext;\n }\n "}, {"sha": "db6d4bd976e4489d6fcddc1cca43c6db13910da8", "filename": "libjava/java/awt/MenuComponent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FMenuComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FMenuComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuComponent.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -130,7 +130,7 @@ public abstract class MenuComponent implements Serializable\n    * @see #getAccessibleContext()\n    * @serial the accessibility information for this component.\n    */\n-  private AccessibleContext accessibleContext;\n+  AccessibleContext accessibleContext;\n \n   /**\n    * Was the name of the component set?  This value defaults"}, {"sha": "56082d36a9a8497212bb80f25ab27af34d47021b", "filename": "libjava/java/awt/MenuItem.java", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuItem.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -47,6 +47,7 @@\n \n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n import javax.accessibility.AccessibleRole;\n import javax.accessibility.AccessibleValue;\n \n@@ -562,7 +563,10 @@ public EventListener[] getListeners(Class listenerType)\n processActionEvent(ActionEvent event)\n {\n   if (action_listeners != null)\n-    action_listeners.actionPerformed(event);\n+    {\n+      event.setSource(this);\n+      action_listeners.actionPerformed(event);\n+    }\n }\n \n /*************************************************************************/\n@@ -579,7 +583,18 @@ public EventListener[] getListeners(Class listenerType)\n \t  \",actionCommand=\" + actionCommand + \",\" + super.paramString());\n }\n \n-// Accessibility API not yet implemented.\n-// public AccessibleContext getAccessibleContext()\n+/**\n+ * Gets the AccessibleContext associated with this <code>MenuItem</code>.\n+ * The context is created, if necessary.\n+ *\n+ * @return the associated context\n+ */\n+public AccessibleContext getAccessibleContext()\n+{\n+  /* Create the context if this is the first request */\n+  if (accessibleContext == null)\n+    accessibleContext = new AccessibleAWTMenuItem();\n+  return accessibleContext;\n+}\n \n } // class MenuItem "}, {"sha": "92840dfa0750430ccfc3732cf1f2925fd84f77fc", "filename": "libjava/java/awt/PopupMenu.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FPopupMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FPopupMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPopupMenu.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -151,9 +151,18 @@ public AccessibleRole getAccessibleRole()\n     \n   }\n   \n+  /**\n+   * Gets the AccessibleContext associated with this <code>PopupMenu</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n   public AccessibleContext getAccessibleContext()\n   {\n-    return new AccessibleAWTPopupMenu();\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTPopupMenu();\n+    return accessibleContext;\n   }\n \n } // class PopupMenu"}, {"sha": "49726c8a1921015c64434774927ac3471a6e8412", "filename": "libjava/java/awt/Robot.java", "status": "modified", "additions": 319, "deletions": 47, "changes": 366, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FRobot.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FRobot.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRobot.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n-/* Robot.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+/* Robot.java -- a native input event generator\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,112 +38,384 @@\n \n package java.awt;\n \n+import gnu.java.awt.ClasspathToolkit;\n+\n+import java.awt.event.InputEvent;\n import java.awt.image.BufferedImage;\n+import java.awt.peer.RobotPeer;\n \n /**\n+ * The Robot class is used to simulate user interaction with graphical\n+ * programs.  It can generate native windowing system input events and\n+ * retrieve image data from the current screen.  Robot is used to test\n+ * the AWT and Swing library implementations; it can also be used to\n+ * create self-running demo programs.\n+ *\n+ * Since Robot generates native windowing system events, rather than\n+ * simply inserting {@link AWTEvents} on the AWT event queue, its use\n+ * is not restricted to Java programs.  It can be to programatically\n+ * drive any graphical application.\n+ *\n+ * This implementation requires an X server that supports the XTest\n+ * extension.\n+ *\n+ * @author Thomas Fitzsimmons (fitzsim@redhat.com)\n+ *\n  * @since 1.3\n  */\n-/** STUB CLASS ONLY */\n public class Robot\n {\n-  private GraphicsDevice screen;\n   private boolean waitForIdle;\n   private int autoDelay;\n-  \n+  private RobotPeer peer;\n+\n   /**\n-   * Creates a <code>Robot</code> object.\n-   * \n-   * @exception AWTException If GraphicsEnvironment.isHeadless() returns true.\n-   * @exception SecurityException If createRobot permission is not granted.\n+   * Construct a Robot object that operates on the default screen.\n+   *\n+   * @exception AWTException if GraphicsEnvironment.isHeadless()\n+   * returns true or if the X server does not support the XTest\n+   * extension\n+   * @exception SecurityException if createRobot permission is not\n+   * granted\n    */\n-  public Robot() throws AWTException\n+  public Robot () throws AWTException\n   {\n-    throw new Error(\"not implemented\");\n+    if (GraphicsEnvironment.isHeadless ())\n+      throw new AWTException (\"Robot: headless graphics environment\");\n+\n+    SecurityManager sm = System.getSecurityManager ();\n+    if (sm != null)\n+      sm.checkPermission (new AWTPermission (\"createRobot\"));\n+\n+    ClasspathToolkit tk = (ClasspathToolkit) Toolkit.getDefaultToolkit ();\n+\n+    // createRobot will throw AWTException if XTest is not supported.\n+    peer = tk.createRobot (GraphicsEnvironment.getLocalGraphicsEnvironment ()\n+\t\t\t   .getDefaultScreenDevice ());\n   }\n \n   /**\n-   * Creates a <code>Robot</code> object.\n-   * \n-   * @exception AWTException If GraphicsEnvironment.isHeadless() returns true.\n-   * @exception IllegalArgumentException If <code>screen</code> is not a screen\n-   * GraphicsDevice.\n-   * @exception SecurityException If createRobot permission is not granted.\n+   * Construct a Robot object that operates on the specified screen.\n+   *\n+   * @exception AWTException if GraphicsEnvironment.isHeadless()\n+   * returns true or if the X server does not support the XTest\n+   * extension\n+   * @exception IllegalArgumentException if screen is not a screen\n+   * GraphicsDevice\n+   * @exception SecurityException if createRobot permission is not\n+   * granted\n    */\n-  public Robot(GraphicsDevice screen) throws AWTException\n+  public Robot (GraphicsDevice screen) throws AWTException\n   {\n-    this();\n-    this.screen = screen;\n+    if (GraphicsEnvironment.isHeadless ())\n+      throw new AWTException (\"Robot: headless graphics environment\");\n+\n+    if (screen.getType () != GraphicsDevice.TYPE_RASTER_SCREEN)\n+      throw new IllegalArgumentException (\"Robot: graphics\"\n+\t\t\t\t\t  + \" device is not a screen\");\n+\n+    SecurityManager sm = System.getSecurityManager ();\n+    if (sm != null)\n+      sm.checkPermission (new AWTPermission (\"createRobot\"));\n+\n+    ClasspathToolkit tk = (ClasspathToolkit) Toolkit.getDefaultToolkit ();\n+\n+    // createRobot will throw AWTException if XTest is not supported.\n+    peer = tk.createRobot (screen);\n   }\n \n+  /**\n+   * Move the mouse pointer to absolute coordinates (x, y).\n+   *\n+   * @param x the destination x coordinate\n+   * @param y the destination y coordinate\n+   */\n   public void mouseMove(int x, int y)\n   {\n+    peer.mouseMove (x, y);\n+\n+    if (waitForIdle)\n+      waitForIdle ();\n+\n+    if (autoDelay > 0)\n+      delay (autoDelay);\n   }\n \n-  public void mousePress(int buttons)\n+  /**\n+   * Press one or more mouse buttons.\n+   *\n+   * @param buttons the buttons to press; a bitmask of one or more of\n+   * these {@link InputEvent} fields:\n+   *\n+   * <ul>\n+   *   <li>BUTTON1_MASK</li>\n+   *   <li>BUTTON2_MASK</li>\n+   *   <li>BUTTON3_MASK</li>\n+   * </ul>\n+   *\n+   * @exception IllegalArgumentException if the button mask is invalid\n+   */\n+  public void mousePress (int buttons)\n   {\n+    if ((buttons & InputEvent.BUTTON1_MASK) == 0\n+\t&& (buttons & InputEvent.BUTTON2_MASK) == 0\n+\t&& (buttons & InputEvent.BUTTON3_MASK) == 0)\n+      throw new IllegalArgumentException (\"Robot: mousePress:\"\n+\t\t\t\t\t  + \" invalid button mask\");\n+\n+    peer.mousePress (buttons);\n+\n+    if (waitForIdle)\n+      waitForIdle ();\n+\n+    if (autoDelay > 0)\n+      delay (autoDelay);\n   }\n \n+  /**\n+   * Release one or more mouse buttons.\n+   *\n+   * @param buttons the buttons to release; a bitmask of one or more\n+   * of these {@link InputEvent} fields:\n+   *\n+   * <ul>\n+   *   <li>BUTTON1_MASK</li>\n+   *   <li>BUTTON2_MASK</li>\n+   *   <li>BUTTON3_MASK</li>\n+   * </ul>\n+   *\n+   * @exception IllegalArgumentException if the button mask is invalid\n+   */\n   public void mouseRelease(int buttons)\n   {\n+    if ((buttons & InputEvent.BUTTON1_MASK) == 0\n+\t&& (buttons & InputEvent.BUTTON2_MASK) == 0\n+\t&& (buttons & InputEvent.BUTTON3_MASK) == 0)\n+      throw new IllegalArgumentException (\"Robot: mouseRelease:\"\n+\t\t\t\t\t  + \" invalid button mask\");\n+\n+    peer.mouseRelease (buttons);\n+\n+    if (waitForIdle)\n+      waitForIdle ();\n+\n+    if (autoDelay > 0)\n+      delay (autoDelay);\n   }\n \n-  public void mouseWheel(int wheelAmt)\n+  /**\n+   * Rotate the mouse scroll wheel.\n+   *\n+   * @param wheelAmt number of steps to rotate mouse wheel.  negative\n+   * to rotate wheel up (away from the user), positive to rotate wheel\n+   * down (toward the user).\n+   *\n+   * @since 1.4\n+   */\n+  public void mouseWheel (int wheelAmt)\n   {\n+    peer.mouseWheel (wheelAmt);\n+\n+    if (waitForIdle)\n+      waitForIdle ();\n+\n+    if (autoDelay > 0)\n+      delay (autoDelay);\n   }\n \n-  public void keyPress(int keycode)\n+  /**\n+   * Press a key.\n+   *\n+   * @param keycode key to press, a {@link KeyEvent} VK_ constant\n+   *\n+   * @exception IllegalArgumentException if keycode is not a valid key\n+   */\n+  public void keyPress (int keycode)\n   {\n+    peer.keyPress (keycode);\n+\n+    if (waitForIdle)\n+      waitForIdle ();\n+\n+    if (autoDelay > 0)\n+      delay (autoDelay);\n   }\n \n-  public void keyRelease(int keycode)\n+  /**\n+   * Release a key.\n+   *\n+   * @param keycode key to release, a {@link KeyEvent} VK_ constant\n+   *\n+   * @exception IllegalArgumentException if keycode is not a valid key\n+   */\n+  public void keyRelease (int keycode)\n   {\n+    peer.keyRelease (keycode);\n+\n+    if (waitForIdle)\n+      waitForIdle ();\n+\n+    if (autoDelay > 0)\n+      delay (autoDelay);\n   }\n-  \n-  public Color getPixelColor(int x, int y)\n+\n+  /**\n+   * Return the color of the pixel at the given screen coordinates.\n+   *\n+   * @param x the x coordinate of the pixel\n+   * @param y the y coordinate of the pixel\n+   *\n+   * @return the Color of the pixel at screen coodinates <code>(x, y)</code>\n+   */\n+  public Color getPixelColor (int x, int y)\n   {\n-    return null;\n+    return new Color (peer.getRGBPixel (x, y));\n   }\n \n-  public BufferedImage createScreenCapture(Rectangle screen)\n+  /**\n+   * Create an image containing pixels read from the screen.  The\n+   * image does not include the mouse pointer.\n+   *\n+   * @param screenRect the rectangle of pixels to capture, in screen\n+   * coordinates\n+   *\n+   * @return a BufferedImage containing the requested pixels\n+   *\n+   * @exception IllegalArgumentException if requested width and height\n+   * are not both greater than zero\n+   * @exception SecurityException if readDisplayPixels permission is\n+   * not granted\n+   */\n+  public BufferedImage createScreenCapture (Rectangle screenRect)\n   {\n-    return null;\n+    if (screenRect.width <= 0)\n+      throw new IllegalArgumentException (\"Robot: capture width is <= 0\");\n+\n+    if (screenRect.height <= 0)\n+      throw new IllegalArgumentException (\"Robot: capture height is <= 0\");\n+\n+    SecurityManager sm = System.getSecurityManager ();\n+    if (sm != null)\n+      sm.checkPermission (new AWTPermission (\"readDisplayPixels\"));\n+\n+    int[] pixels = peer.getRGBPixels (screenRect);\n+\n+    BufferedImage bufferedImage =\n+      new BufferedImage (screenRect.width, screenRect.height,\n+\t\t\t BufferedImage.TYPE_INT_ARGB);\n+\n+    bufferedImage.setRGB (0, 0, screenRect.width, screenRect.height,\n+\t\t\t  pixels, 0, screenRect.width);\n+\n+    return bufferedImage;\n   }\n-  \n-  public boolean isAutoWaitForIdle()\n+\n+  /**\n+   * Check if this Robot automatically calls {@link waitForIdle} after\n+   * generating an event.\n+   *\n+   * @return true if waitForIdle is automatically called\n+   */\n+  public boolean isAutoWaitForIdle ()\n   {\n     return waitForIdle;\n   }\n-  \n-  public void setAutoWaitForIdle(boolean value)\n+\n+  /**\n+   * Set whether or not this Robot automatically calls {@link\n+   * waitForIdle} after generating an event.\n+   *\n+   * @param isOn true if waitForIdle should be called automatically\n+   */\n+  public void setAutoWaitForIdle (boolean isOn)\n   {\n-    waitForIdle = value;\n+    waitForIdle = isOn;\n   }\n-  \n-  public int getAutoDelay()\n+\n+  /**\n+   * Retrieve the length of time this Robot sleeps after generating an\n+   * event.\n+   *\n+   * @return the length of time in milliseconds\n+   */\n+  public int getAutoDelay ()\n   {\n     return autoDelay;\n   }\n-  \n-  public void setAutoDelay(int ms)\n+\n+  /**\n+   * Set the length of time this Robot sleeps after generating an\n+   * event.\n+   *\n+   * @param ms the length of time in milliseconds\n+   *\n+   * @exception IllegalArgumentException if ms is not between 0 and\n+   * 60,000 milliseconds inclusive\n+   */\n+  public void setAutoDelay (int ms)\n   {\n-    if (ms < 0 || ms > 60000)\n-      throw new IllegalArgumentException();\n-    \n+    if (ms <= 0 || ms >= 60000)\n+      throw new IllegalArgumentException (\"Robot: delay length out-of-bounds\");\n+\n     autoDelay = ms;\n   }\n \n-  public void delay(int ms)\n+  /**\n+   * Sleep for a specified length of time.\n+   *\n+   * @param ms the length of time in milliseconds\n+   *\n+   * @exception IllegalArgumentException if ms is not between 0 and\n+   * 60,000 milliseconds inclusive\n+   */\n+  public void delay (int ms)\n   {\n     if (ms < 0 || ms > 60000)\n-      throw new IllegalArgumentException();\n+      throw new IllegalArgumentException (\"Robot: delay length out-of-bounds\");\n+\n+    try\n+      {\n+\tThread.sleep (ms);\n+      }\n+    catch (InterruptedException e)\n+      {\n+\tSystem.err.println (\"Robot: delay interrupted\");\n+      }\n   }\n \n-  public void waitForIdle()\n+  /**\n+   * Wait until the event dispatch thread is idle.\n+   */\n+  public void waitForIdle ()\n   {\n+    if (EventQueue.isDispatchThread ())\n+      throw new IllegalThreadStateException (\"Robot: waitForIdle called from \"\n+\t\t\t\t\t     + \"the event dispatch thread\");\n+\n+    EventQueue q = Toolkit.getDefaultToolkit ().getSystemEventQueue ();\n+\n+    while (q.peekEvent () != null)\n+      {\n+\ttry\n+\t  {\n+\t    wait ();\n+\t  }\n+\tcatch (InterruptedException e)\n+\t  {\n+\t    System.err.println (\"Robot: waitForIdle interrupted\");\n+\t  }\n+      }\n   }\n \n-  public String toString()\n+  /**\n+   * Return a string representation of this Robot.\n+   *\n+   * @return a string representation\n+   */\n+  public String toString ()\n   {\n-    return \"unimplemented\";\n+    return getClass ().getName ()\n+\t+ \"[ autoDelay = \" + autoDelay + \", autoWaitForIdle = \"\n+\t+ waitForIdle + \" ]\";\n   }\n-} // class Robot\n+}"}, {"sha": "c38feb339c57b4d288100cb9390327dd4ace931e", "filename": "libjava/java/awt/ScrollPane.java", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FScrollPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FScrollPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FScrollPane.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -43,6 +43,8 @@\n import java.awt.peer.ScrollPanePeer;\n \n import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n \n /**\n   * This widget provides a scrollable region that allows a single \n@@ -587,5 +589,27 @@ public void setWheelScrollingEnabled (boolean enable)\n   {\n     wheelScrollingEnabled = enable;\n   }\n+  \n+  protected class AccessibleAWTScrollPane extends AccessibleAWTContainer\n+  {\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.SCROLL_PANE;\n+    }\n+  }\n+\n+  /**\n+   * Gets the AccessibleContext associated with this <code>ScrollPane</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTScrollPane();\n+    return accessibleContext;\n+  }\n } // class ScrollPane \n "}, {"sha": "9141ea53e6da8a204f6176a73590d35a7d3d9c2f", "filename": "libjava/java/awt/Scrollbar.java", "status": "modified", "additions": 674, "deletions": 622, "changes": 1296, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FScrollbar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FScrollbar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FScrollbar.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* Scrollbar.java -- AWT Scrollbar widget\n-   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -45,702 +45,611 @@\n import java.util.EventListener;\n \n import javax.accessibility.Accessible;\n-\n-/**\n-  * This class implements a scrollbar widget.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  * @author Tom Tromey <tromey@cygnus.com>\n-  */\n-public class Scrollbar extends Component implements Accessible,\n-                                                    Adjustable\n-{\n-\n-// FIXME: Serialization readObject/writeObject\n-\n-/*\n- * Static Variables\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.accessibility.AccessibleValue;\n+\n+/**\n+ * This class implements a scrollbar widget.\n+ *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Tom Tromey (tromey@cygnus.com)\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n  */\n+public class Scrollbar extends Component implements Accessible, Adjustable\n+{\n+  // FIXME: Serialization readObject/writeObject\n \n-/**\n-  * Constant indicating that a scrollbar is horizontal.\n-  */\n-public static final int HORIZONTAL = 0;\n-\n-/**\n-  * Constant indicating that a scrollbar is vertical.\n-  */\n-public static final int VERTICAL = 1;\n+  /**\n+   * Constant indicating that a scrollbar is horizontal.\n+   */\n+  public static final int HORIZONTAL = 0;\n \n-// Serialization Constant\n-private static final long serialVersionUID = 8451667562882310543L;\n+  /**\n+   * Constant indicating that a scrollbar is vertical.\n+   */\n+  public static final int VERTICAL = 1;\n \n-/*************************************************************************/\n+  /**\n+   * Serialization Constant.\n+   */\n+  private static final long serialVersionUID = 8451667562882310543L;\n \n-/**\n-  * @serial The amount by which the value of the scrollbar is changed\n-  * when incrementing in line mode.\n-  */\n-private int lineIncrement;\n+  /**\n+   * @serial The amount by which the value of the scrollbar is changed\n+   * when incrementing in line mode.\n+   */\n+  private int lineIncrement;\n \n-/**\n-  * @serial The amount by which the value of the scrollbar is changed\n-  * when incrementing in page mode.\n-  */\n-private int pageIncrement;\n+  /**\n+   * @serial The amount by which the value of the scrollbar is changed\n+   * when incrementing in page mode.\n+   */\n+  private int pageIncrement;\n \n-/**\n-  * @serial The maximum value for this scrollbar\n-  */\n-private int maximum;\n+  /**\n+   * @serial The maximum value for this scrollbar\n+   */\n+  private int maximum;\n \n-/**\n-  * @serial The minimum value for this scrollbar\n-  */\n-private int minimum;\n+  /**\n+   * @serial The minimum value for this scrollbar\n+   */\n+  private int minimum;\n \n-/**\n-  * @serial The orientation of this scrollbar, which will be either\n-  * the <code>HORIZONTAL</code> or <code>VERTICAL</code> constant\n-  * from this class.\n-  */\n-private int orientation;\n+  /**\n+   * @serial The orientation of this scrollbar, which will be either\n+   * the <code>HORIZONTAL</code> or <code>VERTICAL</code> constant\n+   * from this class.\n+   */\n+  private int orientation;\n \n-/**\n-  * @serial The current value of this scrollbar.\n-  */\n-private int value;\n+  /**\n+   * @serial The current value of this scrollbar.\n+   */\n+  private int value;\n \n-/**\n-  * @serial The width of the scrollbar's thumb, which is relative\n-  * to the minimum and maximum value of the scrollbar.\n-  */\n-private int visibleAmount;\n+  /**\n+   * @serial The width of the scrollbar's thumb, which is relative\n+   * to the minimum and maximum value of the scrollbar.\n+   */\n+  private int visibleAmount;\n \n-// List of AdjustmentListener's.\n-private AdjustmentListener adjustment_listeners;\n+  /**\n+   * List of AdjustmentListener's.\n+   */\n+  private AdjustmentListener adjustment_listeners;\n \n-private transient boolean valueIsAdjusting = false;\n+  /**\n+   * true if the scrollbar is adjusting, false otherwise.\n+   */\n+  private transient boolean valueIsAdjusting = false;\n \n-  /*\n+  /**\n    * The number used to generate the name returned by getName.\n    */\n   private static transient long next_scrollbar_number;\n \n-/*************************************************************************/\n-\n-/*\n- * Constructors\n- */\n-\n-/**\n-  * Initializes a new instance of <code>Scrollbar</code> with a\n-  * vertical orientation and default values for all other parameters.\n-  *\n-  * @exception HeadlessException If GraphicsEnvironment.isHeadless() is true,\n-  */\n-public\n-Scrollbar()\n-{\n-  this(VERTICAL);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Initializes a new instance of <code>Scrollbar</code> with the\n-  * specified orientation and default values for all other parameters.\n-  * The orientation must be either the constant <code>HORIZONTAL</code> or\n-  * <code>VERTICAL</code> from this class.  An incorrect value will throw\n-  * an exception.\n-  *\n-  * @param orientation The orientation of this scrollbar.\n-  *\n-  * @exception HeadlessException If GraphicsEnvironment.isHeadless() is true,\n-  * @exception IllegalArgumentException If the orientation value is not valid.\n-  */\n-public\n-Scrollbar(int orientation) throws IllegalArgumentException\n-{\n-  this(orientation, 0, 10, 0, 100);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Initializes a new instance of <code>Scrollbar</code> with the\n-  * specified parameters.  The orientation must be either the constant\n-  * <code>HORIZONTAL</code> or <code>VERTICAL</code>.  An incorrect value\n-  * will throw an exception.  Inconsistent values for other parameters\n-  * are silently corrected to valid values.\n-  *\n-  * @param orientation The orientation of this scrollbar.\n-  * @param value The initial value of the scrollbar.\n-  * @param visibleAmount The width of the scrollbar thumb.\n-  * @param minimum The minimum value of the scrollbar.\n-  * @param maximum The maximum value of the scrollbar.\n-  *\n-  * @exception HeadlessException If GraphicsEnvironment.isHeadless() is true,\n-  * @exception IllegalArgumentException If the orientation value is not valid.\n-  */\n-public \n-Scrollbar(int orientation, int value, int visibleAmount, int minimum, \n-          int maximum) throws IllegalArgumentException\n-{\n-  if (GraphicsEnvironment.isHeadless())\n-    throw new HeadlessException ();\n-\n-  if ((orientation != HORIZONTAL) && (orientation != VERTICAL))\n-    throw new IllegalArgumentException(\"Bad orientation value: \"\n-\t\t\t\t       + orientation);\n-\n-  this.orientation = orientation;\n-\n-  setValues(value, visibleAmount, minimum, maximum);\n-\n-  // Default is 1 according to online docs.\n-  lineIncrement = 1;\n-\n-  // Default is 10 according to javadocs.\n-  pageIncrement = 10;\n-}\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Methods\n- */\n-\n-/**\n-  * Returns the orientation constant for this object.\n-  *\n-  * @return The orientation constant for this object.\n-  */\n-public int\n-getOrientation()\n-{\n-  return(orientation);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the orientation of this scrollbar to the specified value.  This\n-  * value must be either the constant <code>HORIZONTAL</code> or\n-  * <code>VERTICAL</code> from this class or an exception will be thrown.\n-  *\n-  * @param orientation The new orientation value.\n-  *\n-  * @exception IllegalArgumentException If the orientation value is not valid.\n-  */\n-public void\n-setOrientation(int orientation)\n-{\n-  if ((orientation != HORIZONTAL) && (orientation != VERTICAL))\n-    throw new IllegalArgumentException(\"Bad orientation value: \"\n-\t\t\t\t       + orientation);\n-\n-  // FIXME: Communicate to peer?  Or must this be called before peer creation?\n-  this.orientation = orientation;\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the current value for this scrollbar.\n-  *\n-  * @return The current value for this scrollbar.\n-  */\n-public int\n-getValue()\n-{\n-  return(value);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the current value for this scrollbar to the specified value.\n-  * If this is inconsistent with the minimum and maximum values for this\n-  * scrollbar, the value is silently adjusted.\n-  *\n-  * @param value The new value for this scrollbar.\n-  */\n-public void\n-setValue(int value)\n-{\n-  setValues(value, visibleAmount, minimum, maximum);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the maximum value for this scrollbar.\n-  *\n-  * @return The maximum value for this scrollbar.\n-  */\n-public int\n-getMaximum()\n-{\n-  return(maximum);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the maximum value for this scrollbar to the specified value.\n-  * If the value is less than the current minimum value, it is silent\n-  * set to equal the minimum value.\n-  *\n-  * @param maximum The new maximum value for this scrollbar.\n-  */\n-public void\n-setMaximum(int maximum)\n-{\n-  setValues(value, visibleAmount, minimum, maximum);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the minimum value for this scrollbar.\n-  *\n-  * @return The minimum value for this scrollbar.\n-  */\n-public int\n-getMinimum()\n-{\n-  return(minimum);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the minimum value for this scrollbar to the specified value.  If\n-  * this is not consistent with the current value and maximum, it is\n-  * silently adjusted to be consistent.\n-  *\n-  * @param minimum The new minimum value for this scrollbar.\n-  */\n-public void\n-setMinimum(int minimum)\n-{\n-  setValues(value, visibleAmount, minimum, maximum);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the width of the scrollbar's thumb, in units relative to the\n-  * maximum and minimum value of the scrollbar.\n-  *\n-  * @return The width of the scrollbar's thumb.\n-  */\n-public int\n-getVisibleAmount()\n-{\n-  return getVisible ();\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the width of the scrollbar's thumb, in units relative to the\n-  * maximum and minimum value of the scrollbar.\n-  *\n-  * @return The width of the scrollbar's thumb.\n-  *\n-  * @deprecated This method is deprecated in favor of \n-  * <code>getVisibleAmount()</code>.\n-  */\n-public int\n-getVisible()\n-{\n-  return visibleAmount;\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the width of the scrollbar's thumb, in units relative to the\n-  * maximum and minimum value of the scrollbar.\n-  *\n-  * @param visibleAmount The new visible amount value of the scrollbar.\n-  */\n-public void\n-setVisibleAmount(int visibleAmount)\n-{\n-  setValues(value, visibleAmount, minimum, maximum);\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Sets the current value, visible amount, minimum, and maximum for this\n-  * scrollbar.  These values are adjusted to be internally consistent\n-  * if necessary.\n-  *\n-  * @param value The new value for this scrollbar.\n-  * @param visibleAmount The new visible amount for this scrollbar.\n-  * @param minimum The new minimum value for this scrollbar.\n-  * @param maximum The new maximum value for this scrollbar.\n-  */\n-public synchronized void\n-setValues(int value, int visibleAmount, int minimum, int maximum)\n-{\n-  if (maximum < minimum)\n-    maximum = minimum;\n-\n-  if (value < minimum)\n-    value = minimum;\n-\n-  if (value > maximum)\n-    value = maximum;\n-\n-  if (visibleAmount > maximum - minimum)\n-    visibleAmount = maximum - minimum;\n-\n-  ScrollbarPeer peer = (ScrollbarPeer) getPeer ();\n-  if (peer != null\n-      && (this.value != value || this.visibleAmount != visibleAmount\n-          || this.minimum != minimum || this.maximum != maximum))\n-    peer.setValues(value, visibleAmount, minimum, maximum);\n-\n-  this.value = value;\n-  this.visibleAmount = visibleAmount;\n-  this.minimum = minimum;\n-  this.maximum = maximum;\n-\n-  int range = maximum - minimum;\n-  if (lineIncrement > range)\n-    {\n-      if (range == 0)\n-        lineIncrement = 1;\n-      else\n-        lineIncrement = range;\n-\n-      if (peer != null)\n-        peer.setLineIncrement(lineIncrement);\n-    }\n-\n-  if (pageIncrement > range)\n-    {\n-      if (range == 0)\n-        pageIncrement = 1;\n-      else\n-        pageIncrement = range;\n-\n-      if (peer != null)\n-        peer.setPageIncrement(pageIncrement);\n-    }\n-}\n-\n-/*************************************************************************/\n+  /**\n+   * Initializes a new instance of <code>Scrollbar</code> with a\n+   * vertical orientation and default values for all other parameters.\n+   *\n+   * @exception HeadlessException If GraphicsEnvironment.isHeadless() is true,\n+   */\n+  public Scrollbar()\n+  {\n+    this(VERTICAL);\n+  }\n \n-/**\n-  * Returns the value added or subtracted when the user activates the scrollbar\n-  * scroll by a \"unit\" amount.\n-  *\n-  * @return The unit increment value.\n-  */\n-public int\n-getUnitIncrement()\n-{\n-  return getLineIncrement ();\n-}\n+  /**\n+   * Initializes a new instance of <code>Scrollbar</code> with the\n+   * specified orientation and default values for all other parameters.\n+   * The orientation must be either the constant <code>HORIZONTAL</code> or\n+   * <code>VERTICAL</code> from this class.  An incorrect value will throw\n+   * an exception.\n+   *\n+   * @param orientation The orientation of this scrollbar.\n+   *\n+   * @exception HeadlessException If GraphicsEnvironment.isHeadless() is true,\n+   * @exception IllegalArgumentException If the orientation value is not valid.\n+   */\n+  public Scrollbar(int orientation) throws IllegalArgumentException\n+  {\n+    this(orientation, 0, 10, 0, 100);\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Initializes a new instance of <code>Scrollbar</code> with the\n+   * specified parameters.  The orientation must be either the constant\n+   * <code>HORIZONTAL</code> or <code>VERTICAL</code>.  An incorrect value\n+   * will throw an exception.  Inconsistent values for other parameters\n+   * are silently corrected to valid values.\n+   *\n+   * @param orientation The orientation of this scrollbar.\n+   * @param value The initial value of the scrollbar.\n+   * @param visibleAmount The width of the scrollbar thumb.\n+   * @param minimum The minimum value of the scrollbar.\n+   * @param maximum The maximum value of the scrollbar.\n+   *\n+   * @exception HeadlessException If GraphicsEnvironment.isHeadless() is true,\n+   * @exception IllegalArgumentException If the orientation value is not valid.\n+   */\n+  public Scrollbar(int orientation, int value, int visibleAmount, int minimum,\n+                   int maximum) throws IllegalArgumentException\n+  {\n+    if (GraphicsEnvironment.isHeadless())\n+      throw new HeadlessException();\n \n-/**\n-  * Returns the value added or subtracted when the user selects the scrollbar\n-  * scroll by a \"unit\" amount control.\n-  *\n-  * @return The unit increment value.\n-  *\n-  * @deprecated This method is deprecated in favor of \n-  * <code>getUnitIncrement()</code>.\n-  */\n-public int\n-getLineIncrement()\n-{\n-  return lineIncrement;\n-}\n+    if ((orientation != HORIZONTAL) && (orientation != VERTICAL))\n+      throw new IllegalArgumentException(\"Bad orientation value: \"\n+                                         + orientation);\n \n-/*************************************************************************/\n+    this.orientation = orientation;\n \n-/**\n-  * Sets the value added or subtracted to the scrollbar value when the\n-  * user selects the scroll by a \"unit\" amount control.\n-  *\n-  * @param unitIncrement The new unit increment amount.\n-  */\n-public synchronized void\n-setUnitIncrement(int unitIncrement)\n-{\n-  setLineIncrement (unitIncrement);\n-}\n+    setValues(value, visibleAmount, minimum, maximum);\n \n-/*************************************************************************/\n+    // Default is 1 according to online docs.\n+    lineIncrement = 1;\n \n-/**\n-  * Sets the value added or subtracted to the scrollbar value when the\n-  * user selects the scroll by a \"unit\" amount control.\n-  *\n-  * @param lineIncrement The new unit increment amount.\n-  *\n-  * @deprecated This method is deprecated in favor of\n-  * <code>setUnitIncrement()</code>.\n-  */\n-public void\n-setLineIncrement(int lineIncrement)\n-{\n-  if (lineIncrement < 0)\n-    throw new IllegalArgumentException (\"Unit increment less than zero.\");\n+    // Default is 10 according to javadocs.\n+    pageIncrement = 10;\n+  }\n \n-  int range = maximum - minimum;\n-  if (lineIncrement > range)\n-    {\n-      if (range == 0)\n-        lineIncrement = 1;\n-      else\n-        lineIncrement = range;\n-    }\n+  /**\n+   * Returns the orientation constant for this object.\n+   *\n+   * @return The orientation constant for this object.\n+   */\n+  public int getOrientation()\n+  {\n+    return orientation;\n+  }\n \n-  if (lineIncrement == this.lineIncrement)\n-    return;\n+  /**\n+   * Sets the orientation of this scrollbar to the specified value.  This\n+   * value must be either the constant <code>HORIZONTAL</code> or\n+   * <code>VERTICAL</code> from this class or an exception will be thrown.\n+   *\n+   * @param orientation The new orientation value.\n+   *\n+   * @exception IllegalArgumentException If the orientation value is not valid.\n+   */\n+  public void setOrientation(int orientation)\n+  {\n+    if ((orientation != HORIZONTAL) && (orientation != VERTICAL))\n+      throw new IllegalArgumentException(\"Bad orientation value: \"\n+                                         + orientation);\n \n-  this.lineIncrement = lineIncrement;\n+    // FIXME: Communicate to peer?  Or must this be called before peer creation?\n+    this.orientation = orientation;\n+  }\n \n-  ScrollbarPeer peer = (ScrollbarPeer) getPeer ();\n-  if (peer != null)\n-    peer.setLineIncrement (this.lineIncrement);\n-}\n+  /**\n+   * Returns the current value for this scrollbar.\n+   *\n+   * @return The current value for this scrollbar.\n+   */\n+  public int getValue()\n+  {\n+    return value;\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Sets the current value for this scrollbar to the specified value.\n+   * If this is inconsistent with the minimum and maximum values for this\n+   * scrollbar, the value is silently adjusted.\n+   *\n+   * @param value The new value for this scrollbar.\n+   */\n+  public void setValue(int value)\n+  {\n+    setValues(value, visibleAmount, minimum, maximum);\n+  }\n \n-/**\n-  * Returns the value added or subtracted when the user activates the scrollbar\n-  * scroll by a \"block\" amount.\n-  *\n-  * @return The block increment value.\n-  */\n-public int\n-getBlockIncrement()\n-{\n-  return getPageIncrement ();\n-}\n+  /**\n+   * Returns the maximum value for this scrollbar.\n+   *\n+   * @return The maximum value for this scrollbar.\n+   */\n+  public int getMaximum()\n+  {\n+    return maximum;\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Sets the maximum value for this scrollbar to the specified value.\n+   * If the value is less than the current minimum value, it is silent\n+   * set to equal the minimum value.\n+   *\n+   * @param maximum The new maximum value for this scrollbar.\n+   */\n+  public void setMaximum(int maximum)\n+  {\n+    setValues(value, visibleAmount, minimum, maximum);\n+  }\n \n-/**\n-  * Returns the value added or subtracted when the user selects the scrollbar\n-  * scroll by a \"block\" amount control.\n-  *\n-  * @return The block increment value.\n-  *\n-  * @deprecated This method is deprecated in favor of \n-  * <code>getBlockIncrement()</code>.\n-  */\n-public int\n-getPageIncrement()\n-{\n-  return pageIncrement;\n-}\n+  /**\n+   * Returns the minimum value for this scrollbar.\n+   *\n+   * @return The minimum value for this scrollbar.\n+   */\n+  public int getMinimum()\n+  {\n+    return minimum;\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Sets the minimum value for this scrollbar to the specified value.  If\n+   * this is not consistent with the current value and maximum, it is\n+   * silently adjusted to be consistent.\n+   *\n+   * @param minimum The new minimum value for this scrollbar.\n+   */\n+  public void setMinimum(int minimum)\n+  {\n+    setValues(value, visibleAmount, minimum, maximum);\n+  }\n \n-/**\n-  * Sets the value added or subtracted to the scrollbar value when the\n-  * user selects the scroll by a \"block\" amount control.\n-  *\n-  * @param blockIncrement The new block increment amount.\n-  */\n-public synchronized void\n-setBlockIncrement(int blockIncrement)\n-{\n-  setPageIncrement (blockIncrement);\n-}\n+  /**\n+   * Returns the width of the scrollbar's thumb, in units relative to the\n+   * maximum and minimum value of the scrollbar.\n+   *\n+   * @return The width of the scrollbar's thumb.\n+   */\n+  public int getVisibleAmount()\n+  {\n+    return getVisible();\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Returns the width of the scrollbar's thumb, in units relative to the\n+   * maximum and minimum value of the scrollbar.\n+   *\n+   * @return The width of the scrollbar's thumb.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>getVisibleAmount()</code>.\n+   */\n+  public int getVisible()\n+  {\n+    return visibleAmount;\n+  }\n \n-/**\n-  * Sets the value added or subtracted to the scrollbar value when the\n-  * user selects the scroll by a \"block\" amount control.\n-  *\n-  * @param pageIncrement The new block increment amount.\n-  *\n-  * @deprecated This method is deprecated in favor of\n-  * <code>setBlockIncrement()</code>.\n-  */\n-public void\n-setPageIncrement(int pageIncrement)\n-{\n-  if (pageIncrement < 0)\n-    throw new IllegalArgumentException (\"Block increment less than zero.\");\n+  /**\n+   * Sets the width of the scrollbar's thumb, in units relative to the\n+   * maximum and minimum value of the scrollbar.\n+   *\n+   * @param visibleAmount The new visible amount value of the scrollbar.\n+   */\n+  public void setVisibleAmount(int visibleAmount)\n+  {\n+    setValues(value, visibleAmount, minimum, maximum);\n+  }\n \n-  int range = maximum - minimum;\n-  if (pageIncrement > range)\n-    {\n-      if (range == 0)\n-        pageIncrement = 1;\n-      else\n-        pageIncrement = range;\n-    }\n+  /**\n+   * Sets the current value, visible amount, minimum, and maximum for this\n+   * scrollbar.  These values are adjusted to be internally consistent\n+   * if necessary.\n+   *\n+   * @param value The new value for this scrollbar.\n+   * @param visibleAmount The new visible amount for this scrollbar.\n+   * @param minimum The new minimum value for this scrollbar.\n+   * @param maximum The new maximum value for this scrollbar.\n+   */\n+  public synchronized void setValues(int value, int visibleAmount,\n+                                     int minimum, int maximum)\n+  {\n+    if (maximum < minimum)\n+      maximum = minimum;\n+\n+    if (value < minimum)\n+      value = minimum;\n+\n+    if (value > maximum)\n+      value = maximum;\n+\n+    if (visibleAmount > maximum - minimum)\n+      visibleAmount = maximum - minimum;\n+\n+    ScrollbarPeer peer = (ScrollbarPeer) getPeer();\n+    if (peer != null\n+        && (this.value != value || this.visibleAmount != visibleAmount\n+            || this.minimum != minimum || this.maximum != maximum))\n+      peer.setValues(value, visibleAmount, minimum, maximum);\n+\n+    this.value = value;\n+    this.visibleAmount = visibleAmount;\n+    this.minimum = minimum;\n+    this.maximum = maximum;\n+\n+    int range = maximum - minimum;\n+    if (lineIncrement > range)\n+      {\n+\tif (range == 0)\n+\t  lineIncrement = 1;\n+\telse\n+\t  lineIncrement = range;\n+\n+\tif (peer != null)\n+\t  peer.setLineIncrement(lineIncrement);\n+      }\n+\n+    if (pageIncrement > range)\n+      {\n+\tif (range == 0)\n+\t  pageIncrement = 1;\n+\telse\n+\t  pageIncrement = range;\n+\n+\tif (peer != null)\n+\t  peer.setPageIncrement(pageIncrement);\n+      }\n+  }\n \n-  if (pageIncrement == this.pageIncrement)\n-    return;\n+  /**\n+   * Returns the value added or subtracted when the user activates the scrollbar\n+   * scroll by a \"unit\" amount.\n+   *\n+   * @return The unit increment value.\n+   */\n+  public int getUnitIncrement()\n+  {\n+    return getLineIncrement();\n+  }\n \n-  this.pageIncrement = pageIncrement;\n+  /**\n+   * Returns the value added or subtracted when the user selects the scrollbar\n+   * scroll by a \"unit\" amount control.\n+   *\n+   * @return The unit increment value.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>getUnitIncrement()</code>.\n+   */\n+  public int getLineIncrement()\n+  {\n+    return lineIncrement;\n+  }\n \n-  ScrollbarPeer peer = (ScrollbarPeer) getPeer ();\n-  if (peer != null)\n-    peer.setPageIncrement (this.pageIncrement);\n-}\n+  /**\n+   * Sets the value added or subtracted to the scrollbar value when the\n+   * user selects the scroll by a \"unit\" amount control.\n+   *\n+   * @param unitIncrement The new unit increment amount.\n+   */\n+  public synchronized void setUnitIncrement(int unitIncrement)\n+  {\n+    setLineIncrement(unitIncrement);\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Sets the value added or subtracted to the scrollbar value when the\n+   * user selects the scroll by a \"unit\" amount control.\n+   *\n+   * @param lineIncrement The new unit increment amount.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>setUnitIncrement()</code>.\n+   */\n+  public void setLineIncrement(int lineIncrement)\n+  {\n+    if (lineIncrement < 0)\n+      throw new IllegalArgumentException(\"Unit increment less than zero.\");\n+\n+    int range = maximum - minimum;\n+    if (lineIncrement > range)\n+      {\n+\tif (range == 0)\n+\t  lineIncrement = 1;\n+\telse\n+\t  lineIncrement = range;\n+      }\n+\n+    if (lineIncrement == this.lineIncrement)\n+      return;\n+\n+    this.lineIncrement = lineIncrement;\n+\n+    ScrollbarPeer peer = (ScrollbarPeer) getPeer();\n+    if (peer != null)\n+      peer.setLineIncrement(this.lineIncrement);\n+  }\n \n-/**\n-  * Notifies this object to create its native peer.\n-  */\n-public synchronized void\n-addNotify()\n-{\n-  if (peer == null)\n-    peer = getToolkit ().createScrollbar (this);\n-  super.addNotify ();\n-}\n+  /**\n+   * Returns the value added or subtracted when the user activates the scrollbar\n+   * scroll by a \"block\" amount.\n+   *\n+   * @return The block increment value.\n+   */\n+  public int getBlockIncrement()\n+  {\n+    return getPageIncrement();\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Returns the value added or subtracted when the user selects the scrollbar\n+   * scroll by a \"block\" amount control.\n+   *\n+   * @return The block increment value.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>getBlockIncrement()</code>.\n+   */\n+  public int getPageIncrement()\n+  {\n+    return pageIncrement;\n+  }\n \n-/**\n-  * Adds a new adjustment listener to the list of registered listeners\n-  * for this object.\n-  *\n-  * @param listener The listener to add.\n-  */\n-public synchronized void\n-addAdjustmentListener(AdjustmentListener listener)\n-{\n-  adjustment_listeners = AWTEventMulticaster.add(adjustment_listeners, listener);\n-  enableEvents(AWTEvent.ADJUSTMENT_EVENT_MASK);\n-}\n+  /**\n+   * Sets the value added or subtracted to the scrollbar value when the\n+   * user selects the scroll by a \"block\" amount control.\n+   *\n+   * @param blockIncrement The new block increment amount.\n+   */\n+  public synchronized void setBlockIncrement(int blockIncrement)\n+  {\n+    setPageIncrement(blockIncrement);\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Sets the value added or subtracted to the scrollbar value when the\n+   * user selects the scroll by a \"block\" amount control.\n+   *\n+   * @param pageIncrement The new block increment amount.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>setBlockIncrement()</code>.\n+   */\n+  public void setPageIncrement(int pageIncrement)\n+  {\n+    if (pageIncrement < 0)\n+      throw new IllegalArgumentException(\"Block increment less than zero.\");\n+\n+    int range = maximum - minimum;\n+    if (pageIncrement > range)\n+      {\n+\tif (range == 0)\n+\t  pageIncrement = 1;\n+\telse\n+\t  pageIncrement = range;\n+      }\n+\n+    if (pageIncrement == this.pageIncrement)\n+      return;\n+\n+    this.pageIncrement = pageIncrement;\n+\n+    ScrollbarPeer peer = (ScrollbarPeer) getPeer();\n+    if (peer != null)\n+      peer.setPageIncrement(this.pageIncrement);\n+  }\n \n-/**\n-  * Removes the specified listener from the list of registered listeners\n-  * for this object.\n-  *\n-  * @param listener The listener to remove.\n-  */\n-public synchronized void\n-removeAdjustmentListener(AdjustmentListener listener)\n-{\n-  adjustment_listeners = AWTEventMulticaster.remove(adjustment_listeners, \n-                                                    listener);\n-}\n+  /**\n+   * Notifies this object to create its native peer.\n+   */\n+  public synchronized void addNotify()\n+  {\n+    if (peer == null)\n+      peer = getToolkit().createScrollbar(this);\n+    super.addNotify();\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Adds a new adjustment listener to the list of registered listeners\n+   * for this object.\n+   *\n+   * @param listener The listener to add.\n+   */\n+  public synchronized void addAdjustmentListener(AdjustmentListener listener)\n+  {\n+    adjustment_listeners = AWTEventMulticaster.add(adjustment_listeners,\n+                                                   listener);\n+    enableEvents(AWTEvent.ADJUSTMENT_EVENT_MASK);\n+  }\n \n-/**\n-  * Processes events for this scrollbar.  It does this by calling\n-  * <code>processAdjustmentEvent()</code> if the event is an instance of\n-  * <code>AdjustmentEvent</code>, otherwise it calls the superclass to\n-  * process the event.\n-  *\n-  * @param event The event to process.\n-  */\n-protected void\n-processEvent(AWTEvent event)\n-{\n-  if (event instanceof AdjustmentEvent)\n-    processAdjustmentEvent((AdjustmentEvent)event);\n-  else\n-    super.processEvent(event);\n-}\n+  /**\n+   * Removes the specified listener from the list of registered listeners\n+   * for this object.\n+   *\n+   * @param listener The listener to remove.\n+   */\n+  public synchronized void removeAdjustmentListener(AdjustmentListener listener)\n+  {\n+    adjustment_listeners = AWTEventMulticaster.remove(adjustment_listeners,\n+                                                      listener);\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Processes events for this scrollbar.  It does this by calling\n+   * <code>processAdjustmentEvent()</code> if the event is an instance of\n+   * <code>AdjustmentEvent</code>, otherwise it calls the superclass to\n+   * process the event.\n+   *\n+   * @param event The event to process.\n+   */\n+  protected void processEvent(AWTEvent event)\n+  {\n+    if (event instanceof AdjustmentEvent)\n+      processAdjustmentEvent((AdjustmentEvent) event);\n+    else\n+      super.processEvent(event);\n+  }\n \n-/**\n-  * Processes adjustment events for this object by dispatching them to\n-  * any registered listeners.  Note that this method will only be called\n-  * if adjustment events are enabled.  This will happen automatically if\n-  * any listeners are registered.  Otherwise, it can be enabled by a\n-  * call to <code>enableEvents()</code>.\n-  *\n-  * @param event The event to process.\n-  */\n-protected void\n-processAdjustmentEvent(AdjustmentEvent event)\n-{\n-  value = event.getValue();\n-  if (adjustment_listeners != null)\n-    adjustment_listeners.adjustmentValueChanged(event);\n-}\n+  /**\n+   * Processes adjustment events for this object by dispatching them to\n+   * any registered listeners.  Note that this method will only be called\n+   * if adjustment events are enabled.  This will happen automatically if\n+   * any listeners are registered.  Otherwise, it can be enabled by a\n+   * call to <code>enableEvents()</code>.\n+   *\n+   * @param event The event to process.\n+   */\n+  protected void processAdjustmentEvent(AdjustmentEvent event)\n+  {\n+    value = event.getValue();\n+    if (adjustment_listeners != null)\n+      adjustment_listeners.adjustmentValueChanged(event);\n+  }\n \n-void\n-dispatchEventImpl(AWTEvent e)\n-{\n-  if (e.id <= AdjustmentEvent.ADJUSTMENT_LAST \n+  void dispatchEventImpl(AWTEvent e)\n+  {\n+    if (e.id <= AdjustmentEvent.ADJUSTMENT_LAST \n       && e.id >= AdjustmentEvent.ADJUSTMENT_FIRST\n       && (adjustment_listeners != null \n \t  || (eventMask & AWTEvent.ADJUSTMENT_EVENT_MASK) != 0))\n-    processEvent(e);\n-  else\n-    super.dispatchEventImpl(e);\n-}\n-\n-/*************************************************************************/\n+      processEvent(e);\n+    else\n+      super.dispatchEventImpl(e);\n+  }\n \n-/**\n-  * Returns a debugging string for this object.\n-  *\n-  * @return A debugging string for this object.\n-  */\n-protected String\n-paramString()\n-{\n-  return(\"value=\" + getValue() + \",visibleAmount=\" +\n-         getVisibleAmount() + \",minimum=\" + getMinimum()\n-\t + \",maximum=\" + getMaximum()\n-\t + \",pageIncrement=\" + pageIncrement\n-\t + \",lineIncrement=\" + lineIncrement\n-\t + \",orientation=\" + (orientation == HORIZONTAL\n-\t\t\t      ? \"HORIZONTAL\" : \"VERTICAL\")\n-\t + super.paramString());\n-}\n+  /**\n+   * Returns a debugging string for this object.\n+   *\n+   * @return A debugging string for this object.\n+   */\n+  protected String paramString()\n+  {\n+    return (\"value=\" + getValue() + \",visibleAmount=\" + getVisibleAmount()\n+            + \",minimum=\" + getMinimum() + \",maximum=\" + getMaximum()\n+            + \",pageIncrement=\" + pageIncrement + \",lineIncrement=\"\n+            + lineIncrement + \",orientation=\"\n+            + (orientation == HORIZONTAL ? \"HORIZONTAL\" : \"VERTICAL\")\n+            + super.paramString());\n+  }\n \n   /**\n    * Returns an array of all the objects currently registered as FooListeners\n-   * upon this <code>Scrollbar</code>. FooListeners are registered using the \n+   * upon this <code>Scrollbar</code>. FooListeners are registered using the\n    * addFooListener method.\n    *\n    * @exception ClassCastException If listenerType doesn't specify a class or\n    * interface that implements java.util.EventListener.\n    */\n-  public EventListener[] getListeners (Class listenerType)\n+  public EventListener[] getListeners(Class listenerType)\n   {\n     if (listenerType == AdjustmentListener.class)\n-      return AWTEventMulticaster.getListeners (adjustment_listeners,\n-                                               listenerType);\n+      return AWTEventMulticaster.getListeners(adjustment_listeners,\n+                                              listenerType);\n \n-    return super.getListeners (listenerType);\n+    return super.getListeners(listenerType);\n   }\n \n   /**\n    * Returns an array of all registered adjustment listeners.\n    */\n-  public AdjustmentListener[] getAdjustmentListeners ()\n+  public AdjustmentListener[] getAdjustmentListeners()\n   {\n-    return (AdjustmentListener[]) getListeners (AdjustmentListener.class);\n+    return (AdjustmentListener[]) getListeners(AdjustmentListener.class);\n   }\n \n   /**\n    * Returns true if the value is in the process of changing.\n    *\n    * @since 1.4\n    */\n-  public boolean getValueIsAdjusting ()\n+  public boolean getValueIsAdjusting()\n   {\n     return valueIsAdjusting;\n   }\n@@ -750,7 +659,7 @@ public boolean getValueIsAdjusting ()\n    *\n    * @since 1.4\n    */\n-  public void setValueIsAdjusting (boolean valueIsAdjusting)\n+  public void setValueIsAdjusting(boolean valueIsAdjusting)\n   {\n     this.valueIsAdjusting = valueIsAdjusting;\n   }\n@@ -760,14 +669,157 @@ public void setValueIsAdjusting (boolean valueIsAdjusting)\n    *\n    * @return A unique name for this scroll bar.\n    */\n-  String generateName ()\n+  String generateName()\n   {\n-    return \"scrollbar\" + getUniqueLong ();\n+    return \"scrollbar\" + getUniqueLong();\n   }\n \n-  private static synchronized long getUniqueLong ()\n+  private static synchronized long getUniqueLong()\n   {\n     return next_scrollbar_number++;\n   }\n-} // class Scrollbar \n \n+  /**\n+   * This class provides accessibility support for the\n+   * scrollbar.\n+   *\n+   * @author Jerry Quinn (jlquinn@optonline.net)\n+   * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n+   */\n+  protected class AccessibleAWTScrollBar extends AccessibleAWTComponent\n+    implements AccessibleValue\n+  {\n+    /**\n+     * Serialization constant to match JDK 1.5\n+     */\n+    private static final long serialVersionUID = -344337268523697807L;\n+\n+    /**\n+     * Returns the role of this accessible object.\n+     *\n+     * @return the instance of <code>AccessibleRole</code>,\n+     * which describes this object.\n+     *\n+     * @see javax.accessibility.AccessibleRole\n+     */\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.SCROLL_BAR;\n+    }\n+\n+    /**\n+     * Returns the state set of this accessible object.\n+     *\n+     * @return a set of <code>AccessibleState</code>s which\n+     * represent the current state of the accessible object.\n+     *\n+     * @see javax.accessibility.AccessibleState\n+     * @see javax.accessibility.AccessibleStateSet\n+     */\n+    public AccessibleStateSet getAccessibleStateSet()\n+    {\n+      AccessibleStateSet states = super.getAccessibleStateSet();\n+      if (getOrientation() == HORIZONTAL)\n+\tstates.add(AccessibleState.HORIZONTAL);\n+      else\n+\tstates.add(AccessibleState.VERTICAL);\n+      if (getValueIsAdjusting())\n+\tstates.add(AccessibleState.BUSY);\n+      return states;\n+    }\n+\n+    /**\n+     * Returns an implementation of the <code>AccessibleValue</code>\n+     * interface for this accessible object.  In this case, the\n+     * current instance is simply returned (with a more appropriate\n+     * type), as it also implements the accessible value as well as\n+     * the context.\n+     *\n+     * @return the accessible value associated with this context.\n+     *\n+     * @see javax.accessibility.AccessibleValue\n+     */\n+    public AccessibleValue getAccessibleValue()\n+    {\n+      return this;\n+    }\n+\n+    /**\n+     * Returns the current value of this accessible object.\n+     * In this case, this is the same as the value for\n+     * the scrollbar, wrapped in an <code>Integer</code>\n+     * object.\n+     *\n+     * @return the numeric value of this scrollbar.\n+     *\n+     * @see javax.accessibility.AccessibleValue#getCurrentAccessibleValue()\n+     */\n+    public Number getCurrentAccessibleValue()\n+    {\n+      return new Integer(getValue());\n+    }\n+\n+    /**\n+     * Sets the current value of this accessible object\n+     * to that supplied.  In this case, the value of the\n+     * scrollbar is set, and this method always returns\n+     * true.\n+     *\n+     * @param number the new accessible value.\n+     *\n+     * @return true if the value was set.\n+     *\n+     * @see javax.accessibility.AccessibleValue#setCurrentAccessibleValue(java.lang.Number)\n+     */\n+    public boolean setCurrentAccessibleValue(Number number)\n+    {\n+      setValue(number.intValue());\n+      return true;\n+    }\n+\n+    /**\n+     * Returns the minimum acceptable accessible value used\n+     * by this object.  In this case, this is the same as\n+     * the minimum value of the scrollbar, wrapped in an\n+     * object.\n+     *\n+     * @return the minimum value of this scrollbar.\n+     *\n+     * @see javax.accessibility.AccessibleValue#getMinimumAccessibleValue()\n+     */\n+    public Number getMinimumAccessibleValue()\n+    {\n+      return new Integer(getMinimum());\n+    }\n+\n+    /**\n+     * Returns the maximum acceptable accessible value used\n+     * by this object.  In this case, this is the same as\n+     * the maximum value of the scrollbar, wrapped in an\n+     * object.\n+     *\n+     * @return the maximum value of this scrollbar.\n+     *\n+     * @see javax.accessibility.AccessibleValue#getMaximumAccessibleValue()\n+     */\n+    public Number getMaximumAccessibleValue()\n+    {\n+      return new Integer(getMaximum());\n+    }\n+  }\n+\n+  /**\n+   * Gets the AccessibleContext associated with this <code>Scrollbar</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTScrollBar();\n+    \n+    return accessibleContext;\n+  }\n+}"}, {"sha": "dda45f34478fc04affb7805d484f3fed0043dea8", "filename": "libjava/java/awt/TextArea.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FTextArea.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FTextArea.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextArea.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -613,8 +613,17 @@ public AccessibleStateSet getAccessibleStateSet()\n     }\n   }\n   \n+  /**\n+   * Gets the AccessibleContext associated with this <code>TextArea</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n   public AccessibleContext getAccessibleContext()\n   {\n-    return new AccessibleAWTTextArea();\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTTextArea();\n+    return accessibleContext;\n   }\n }"}, {"sha": "4c384391adf6817983d78b92d121ab3e12810875", "filename": "libjava/java/awt/TextComponent.java", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextComponent.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -46,6 +46,7 @@\n import java.util.EventListener;\n \n import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n import javax.accessibility.AccessibleRole;\n import javax.accessibility.AccessibleState;\n import javax.accessibility.AccessibleStateSet;\n@@ -690,6 +691,21 @@ public TextListener[] getTextListeners ()\n     return (TextListener[]) getListeners (TextListener.class);\n   }\n \n+  /**\n+   * Gets the AccessibleContext associated with this <code>TextComponent</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTTextComponent();\n+    return accessibleContext;\n+  }\n+\n+  \n   /*******************************/\n   // Provide AccessibleAWTTextComponent access to several peer functions that\n   // aren't publicly exposed."}, {"sha": "f1925a28cd846bcd657ad1d2f401b505d32189c1", "filename": "libjava/java/awt/Toolkit.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FToolkit.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -526,6 +526,10 @@ public static Toolkit getDefaultToolkit()\n         toolkit = (Toolkit) obj;\n         return toolkit;\n       }\n+    catch (ThreadDeath death)\n+      {\n+        throw death;\n+      }\n     catch (Throwable t)\n       {\n \tAWTError e = new AWTError(\"Cannot load AWT toolkit: \" + toolkit_name);"}, {"sha": "786e51a272e09a62150a21f6c7453b8596b68452", "filename": "libjava/java/awt/Window.java", "status": "modified", "additions": 78, "deletions": 12, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2FWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FWindow.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -56,6 +56,9 @@\n \n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n \n /**\n  * This class represents a top-level window with no decorations.\n@@ -84,11 +87,26 @@ public class Window extends Container implements Accessible\n   private transient WindowFocusListener windowFocusListener;\n   private transient WindowStateListener windowStateListener;\n   private transient GraphicsConfiguration graphicsConfiguration;\n-  private transient AccessibleContext accessibleContext;\n \n   private transient boolean shown;\n \n   private transient Component windowFocusOwner;\n+  \n+  protected class AccessibleAWTWindow extends AccessibleAWTContainer\n+  {\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.WINDOW;\n+    }\n+    \n+    public AccessibleStateSet getAccessibleStateSet()\n+    {\n+      AccessibleStateSet states = super.getAccessibleStateSet();\n+      if (isActive())\n+        states.add(AccessibleState.ACTIVE);\n+      return states;\n+    }\n+  }\n \n   /** \n    * This (package access) constructor is used by subclasses that want\n@@ -200,12 +218,11 @@ public Window(Window owner, GraphicsConfiguration gc)\n         && gc.getDevice().getType() != GraphicsDevice.TYPE_RASTER_SCREEN)\n       throw new IllegalArgumentException (\"gc must be from a screen device\");\n \n-    // FIXME: until we implement this, it just causes AWT to crash.\n-//     if (gc == null)\n-//       graphicsConfiguration = GraphicsEnvironment.getLocalGraphicsEnvironment()\n-//         .getDefaultScreenDevice()\n-//         .getDefaultConfiguration();\n-//     else\n+    if (gc == null)\n+      graphicsConfiguration = GraphicsEnvironment.getLocalGraphicsEnvironment()\n+                                                 .getDefaultScreenDevice()\n+                                                 .getDefaultConfiguration();\n+    else\n       graphicsConfiguration = gc;\n   }\n \n@@ -672,7 +689,33 @@ else if (id == WindowEvent.WINDOW_STATE_CHANGED)\n \t  }\n       }\n   }\n+  \n+  /**\n+   * Identifies if this window is active.  The active window is a Frame or\n+   * Dialog that has focus or owns the active window.\n+   *  \n+   * @return true if active, else false.\n+   * @since 1.4\n+   */\n+  public boolean isActive()\n+  {\n+    KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager ();\n+    return manager.getActiveWindow() == this;\n+  }\n \n+  /**\n+   * Identifies if this window is focused.  A window is focused if it is the\n+   * focus owner or it contains the focus owner.\n+   * \n+   * @return true if focused, else false.\n+   * @since 1.4\n+   */\n+  public boolean isFocused()\n+  {\n+    KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager ();\n+    return manager.getFocusedWindow() == this;\n+  }\n+  \n   /**\n    * Returns the child window that has focus if this window is active.\n    * This method returns <code>null</code> if this window is not active\n@@ -731,6 +774,22 @@ public boolean isShowing()\n     return super.isShowing();\n   }\n \n+  public void setLocationRelativeTo (Component c)\n+  {\n+    if (c == null || !c.isShowing ())\n+      {\n+        int x = 0;\n+        int y = 0;\n+\n+        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment ();\n+        Point center = ge.getCenterPoint ();\n+        x = center.x - (width / 2);\n+        y = center.y - (height / 2);\n+        setLocation (x, y);\n+      }\n+    // FIXME: handle case where component is non-null.\n+  }\n+\n   /**\n    * @since 1.2\n    *\n@@ -754,11 +813,18 @@ public void applyResourceBundle(String rbName)\n       applyResourceBundle(rb);    \n   }\n \n+  /**\n+   * Gets the AccessibleContext associated with this <code>Window</code>.\n+   * The context is created, if necessary.\n+   *\n+   * @return the associated context\n+   */\n   public AccessibleContext getAccessibleContext()\n   {\n-    // FIXME\n-    //return null;\n-    throw new Error (\"Not implemented\");\n+    /* Create the context if this is the first request */\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleAWTWindow();\n+    return accessibleContext;\n   }\n \n   /** \n@@ -866,13 +932,13 @@ void setBoundsCallback (int x, int y, int w, int h)\n     this.y = y;\n     width = w;\n     height = h;\n-    if (resized)\n+    if (resized && isShowing ())\n       {\n         ComponentEvent ce =\n           new ComponentEvent(this, ComponentEvent.COMPONENT_RESIZED);\n         getToolkit().getSystemEventQueue().postEvent(ce);\n       }\n-    if (moved)\n+    if (moved && isShowing ())\n       {\n         ComponentEvent ce =\n           new ComponentEvent(this, ComponentEvent.COMPONENT_MOVED);"}, {"sha": "b84eb96c2fb2a7e41115a9d7255e6518a95af36c", "filename": "libjava/java/awt/color/ICC_Profile.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -316,8 +316,6 @@ public class ICC_Profile implements Serializable\n    */\n   protected void finalize()\n   {\n-    header = null;\n-    tagTable = null;\n   }\n \n   /**"}, {"sha": "a64fa5a7680d297f54b9a9654c469089873d3c88", "filename": "libjava/java/awt/dnd/DnDConstants.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fdnd%2FDnDConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fdnd%2FDnDConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDnDConstants.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* DnDConstants.java -- constants for drag-and-drop operations\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -69,4 +69,9 @@\n \n   /** A synonym for {@link #ACTION_LINK}. */\n   public static final int ACTION_REFERENCE = ACTION_LINK;\n-} // class DnDConstants\n+\n+  private DnDConstants()\n+  {\n+    // Do nothing here.\n+  }\n+}"}, {"sha": "2a8b79d841587202bf390860f658c71f60a811f1", "filename": "libjava/java/awt/dnd/DropTarget.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -205,15 +205,14 @@ public boolean isActive()\n   /**\n    * Adds a new <code>DropTargetListener</code>.\n    * \n-   * @exception TooManyListenersException If there is already a\n-   * <code>DropTargetListener</code>.\n+   * @exception TooManyListenersException Sun's JDK does not, despite\n+   * documentation, throw this exception here when you install an additional\n+   * <code>DropTargetListener</code>.  So to be compatible, we do the same\n+   * thing.\n    */\n   public void addDropTargetListener (DropTargetListener dtl)\n     throws TooManyListenersException\n   {\n-    if (dtl != null)\n-      throw new TooManyListenersException ();\n-    \n     dropTargetListener = dtl;\n   }\n "}, {"sha": "68f905f08f4d52935979836118bd64f39e0893c2", "filename": "libjava/java/awt/geom/Area.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fgeom%2FArea.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fgeom%2FArea.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FArea.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -2631,11 +2631,9 @@ public Object clone()\n \n       double P = (y2 - 2 * y1 + y0);\n       double Q = 2 * (y1 - y0);\n-      double R = y0;\n \n       double A = (x2 - 2 * x1 + x0);\n       double B = 2 * (x1 - x0);\n-      double C = x0;\n \n       double area = (B * P - A * Q) / 3.0;\n       return (area);\n@@ -2937,12 +2935,10 @@ public Object clone()\n       double P = y3 - 3 * y2 + 3 * y1 - y0;\n       double Q = 3 * (y2 + y0 - 2 * y1);\n       double R = 3 * (y1 - y0);\n-      double S = y0;\n \n       double A = x3 - 3 * x2 + 3 * x1 - x0;\n       double B = 3 * (x2 + x0 - 2 * x1);\n       double C = 3 * (x1 - x0);\n-      double D = x0;\n \n       double area = (B * P - A * Q) / 5.0 + (C * P - A * R) / 2.0\n                     + (C * Q - B * R) / 3.0;"}, {"sha": "d8217fecdb5d8b6467c047440fa741b6062cb5c5", "filename": "libjava/java/awt/geom/Rectangle2D.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* Rectangle2D.java -- generic rectangles in 2-D space\n-   Copyright (C) 2000, 2001, 2002 Free Software Foundation\n+   Copyright (C) 2000, 2001, 2002, 2004  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -57,30 +57,30 @@\n public abstract class Rectangle2D extends RectangularShape\n {\n   /**\n-   * The point lies left of the rectangle (p.x < r.x).\n+   * The point lies left of the rectangle (p.x &lt; r.x).\n    *\n-   * @see #outcode()\n+   * @see #outcode(double, double)\n    */\n   public static final int OUT_LEFT = 1;\n \n   /**\n-   * The point lies above the rectangle (p.y < r.y).\n+   * The point lies above the rectangle (p.y &lt; r.y).\n    *\n-   * @see #outcode()\n+   * @see #outcode(double, double)\n    */\n   public static final int OUT_TOP = 2;\n \n   /**\n    * The point lies right of the rectangle (p.x &gt; r.maxX).\n    *\n-   * @see #outcode()\n+   * @see #outcode(double, double)\n    */\n   public static final int OUT_RIGHT = 4;\n \n   /**\n    * The point lies below of the rectangle (p.y &gt; r.maxY).\n    *\n-   * @see #outcode()\n+   * @see #outcode(double, double)\n    */\n   public static final int OUT_BOTTOM = 8;\n "}, {"sha": "fc068c241653bca2252f36b09dcae3ea2d29f774", "filename": "libjava/java/awt/im/InputContext.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fim%2FInputContext.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -102,8 +102,8 @@\n     while (e.hasMoreElements())\n       {\n         URL url = (URL) e.nextElement();\n-        BufferedReader in = null;\n-        String line = null;\n+        BufferedReader in;\n+        String line;\n         try\n           {\n             in = new BufferedReader"}, {"sha": "e4ccc542903d99ae2901d8d31317fcad722b60b2", "filename": "libjava/java/awt/image/IndexColorModel.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -125,7 +125,9 @@ public IndexColorModel(int bits, int size, byte[] reds, byte[] greens,\n   public IndexColorModel(int bits, int size, byte[] reds, byte[] greens,\n                          byte[] blues, byte[] alphas)\n   {\n-    super (bits);\n+    // FIXME: This super() constructor should not be used since it can give\n+    // the wrong value for hasAlpha() which is final and cannot be overloaded\n+    super(bits); \n     map_size = size;\n     opaque = (alphas == null);\n \n@@ -416,10 +418,10 @@ public final int getBlue (int pixel)\n    */\n   public final int getAlpha (int pixel)\n   {\n-    if (pixel < map_size)\n-\t    return (int) ((generateMask (3) & rgb[pixel]) >> (3 * pixel_bits));\n-    \n-    return 0;\n+    if (opaque || pixel >= map_size)\n+      return 255;\n+\n+    return (int) ((generateMask (3) & rgb[pixel]) >> (3 * pixel_bits));\n   }\n \n   /**"}, {"sha": "6b43d00c37b459c57bd359d3df3496bc3ff82890", "filename": "libjava/java/awt/image/MemoryImageSource.java", "status": "modified", "additions": 327, "deletions": 329, "changes": 656, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fimage%2FMemoryImageSource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fimage%2FMemoryImageSource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FMemoryImageSource.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,4 +1,4 @@\n-/* MemoryImageSource.java -- Java class for providing image data \n+/* MemoryImageSource.java -- Java class for providing image data\n    Copyright (C) 1999, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -41,335 +41,333 @@\n import java.util.Hashtable;\n import java.util.Vector;\n \n-public class MemoryImageSource implements ImageProducer \n+public class MemoryImageSource implements ImageProducer\n {\n-    private boolean animated = false;\n-    private boolean fullbuffers = false;\n-    private int pixeli[], width, height, offset, scansize;\n-    private byte pixelb[];\n-    private ColorModel cm;\n-    private Hashtable props = new Hashtable();\n-    private Vector consumers = new Vector();\n-\n-    /**\n-     * Construct an image producer that reads image data from a byte\n-     * array.\n-     *\n-     * @param w width of image\n-     * @param h height of image\n-     * @param cm the color model used to represent pixel values\n-     * @param pix a byte array of pixel values\n-     * @param off the offset into the array at which the first pixel is stored\n-     * @param scan the number of array elements that represents a single pixel row\n-     */\n-    public MemoryImageSource(int w, int h, ColorModel cm,\n-\t\t\t     byte pix[], int off, int scan)\n-    {\n-\tthis ( w, h, cm, pix, off, scan, null );\n-    }\n-    /**\n-       Constructs an ImageProducer from memory\n-    */\n-    public MemoryImageSource( int w, int h, ColorModel cm,\n-\t\t\t      byte pix[], int off, int scan,\n-\t\t\t      Hashtable props)\n-    {\n-\twidth = w;\n-\theight = h;\n-\tthis.cm = cm;\n-\toffset = off;\n-\tscansize = scan;\n-\tthis.props = props;\n-\tint max = (( scansize > width ) ? scansize : width );\n-\tpixelb = pix;\n-    }\n-    /**\n-     * Construct an image producer that reads image data from an\n-     * integer array.\n-     *\n-     * @param w width of image\n-     * @param h height of image\n-     * @param cm the color model used to represent pixel values\n-     * @param pix an integer array of pixel values\n-     * @param off the offset into the array at which the first pixel is stored\n-     * @param scan the number of array elements that represents a single pixel row\n-     */\n-    public MemoryImageSource(int w, int h, ColorModel cm,\n-\t\t\t     int pix[], int off, int scan)\n-    {\n-\tthis ( w, h, cm, pix, off, scan, null );\n-    }\n-\n-    /**\n-       Constructs an ImageProducer from memory\n-    */\n-    public MemoryImageSource(int w, int h, ColorModel cm,\n-\t\t\t     int pix[], int off, int scan,\n-\t\t\t     Hashtable props)\n-    {\n-\twidth = w;\n-\theight = h;\n-\tthis.cm = cm;\n-\toffset = off;\n-\tscansize = scan;\n-\tthis.props = props;\n-\tint max = (( scansize > width ) ? scansize : width );\n-\tpixeli = pix;\n-    }\n-    /**\n-       Constructs an ImageProducer from memory using the default RGB ColorModel\n-    */\n-    public MemoryImageSource(int w, int h,\n-\t\t\t     int pix[], int off, int scan,\n-\t\t\t     Hashtable props)\n-    {\n-\tthis ( w, h, ColorModel.getRGBdefault(), pix, off, scan, props);\n-    }\n-\n-    /**\n-       Constructs an ImageProducer from memory using the default RGB ColorModel\n-    */\n-    public MemoryImageSource(int w, int h,\n-\t\t\t     int pix[], int off, int scan)\n-    {\n-\tthis ( w, h, ColorModel.getRGBdefault(), pix, off, scan, null);\n-    }\n-\n-    /**\n-     * Used to register an <code>ImageConsumer</code> with this\n-     * <code>ImageProducer</code>.  \n-     */\n-    public synchronized void addConsumer(ImageConsumer ic) {\n-\tif (consumers.contains(ic))\n-\t    return;\n-\n-\tconsumers.addElement(ic);\n-    }\n-\n-    /**\n-     * Used to determine if the given <code>ImageConsumer</code> is\n-     * already registered with this <code>ImageProducer</code>.  \n-     */\n-    public synchronized boolean isConsumer(ImageConsumer ic) {\n-\tif (consumers.contains(ic))\n-\t    return true;\n-\treturn false;\n-    }\n-\n-    /**\n-     * Used to remove an <code>ImageConsumer</code> from the list of\n-     * registered consumers for this <code>ImageProducer</code>.  \n-     */\n-    public synchronized void removeConsumer(ImageConsumer ic) {\n-\tconsumers.removeElement(ic);\n-    }\n-\n-    /**\n-     * Used to register an <code>ImageConsumer</code> with this\n-     * <code>ImageProducer</code> and then immediately start\n-     * reconstruction of the image data to be delivered to all\n-     * registered consumers.  \n-     */\n-    public void startProduction(ImageConsumer ic) {\n-\tif (!(consumers.contains(ic))) {\n-\t    consumers.addElement(ic);\n-\t}        \n-\n+  private boolean animated = false;\n+  private boolean fullbuffers = false;\n+  private int[] pixeli;\n+  private int width;\n+  private int height;\n+  private int offset;\n+  private int scansize;\n+  private byte[] pixelb;\n+  private ColorModel cm;\n+  private Hashtable props = new Hashtable();\n+  private Vector consumers = new Vector();\n+\n+  /**\n+   * Construct an image producer that reads image data from a byte\n+   * array.\n+   *\n+   * @param w width of image\n+   * @param h height of image\n+   * @param cm the color model used to represent pixel values\n+   * @param pix a byte array of pixel values\n+   * @param off the offset into the array at which the first pixel is stored\n+   * @param scan the number of array elements that represents a single pixel row\n+   */\n+  public MemoryImageSource(int w, int h, ColorModel cm, byte[] pix, int off,\n+                           int scan)\n+  {\n+    this(w, h, cm, pix, off, scan, null);\n+  }\n+\n+  /**\n+   * Constructs an ImageProducer from memory\n+   */\n+  public MemoryImageSource(int w, int h, ColorModel cm, byte[] pix, int off,\n+                           int scan, Hashtable props)\n+  {\n+    width = w;\n+    height = h;\n+    this.cm = cm;\n+    offset = off;\n+    scansize = scan;\n+    this.props = props;\n+    int max = ((scansize > width) ? scansize : width);\n+    pixelb = pix;\n+  }\n+\n+  /**\n+   * Construct an image producer that reads image data from an\n+   * integer array.\n+   *\n+   * @param w width of image\n+   * @param h height of image\n+   * @param cm the color model used to represent pixel values\n+   * @param pix an integer array of pixel values\n+   * @param off the offset into the array at which the first pixel is stored\n+   * @param scan the number of array elements that represents a single pixel row\n+   */\n+  public MemoryImageSource(int w, int h, ColorModel cm, int[] pix, int off,\n+                           int scan)\n+  {\n+    this(w, h, cm, pix, off, scan, null);\n+  }\n+\n+  /**\n+     Constructs an ImageProducer from memory\n+  */\n+  public MemoryImageSource(int w, int h, ColorModel cm, int[] pix, int off,\n+                           int scan, Hashtable props)\n+  {\n+    width = w;\n+    height = h;\n+    this.cm = cm;\n+    offset = off;\n+    scansize = scan;\n+    this.props = props;\n+    int max = ((scansize > width) ? scansize : width);\n+    pixeli = pix;\n+  }\n+\n+  /**\n+   * Constructs an ImageProducer from memory using the default RGB ColorModel\n+   */\n+  public MemoryImageSource(int w, int h, int[] pix, int off, int scan,\n+                           Hashtable props)\n+  {\n+    this(w, h, ColorModel.getRGBdefault(), pix, off, scan, props);\n+  }\n+\n+  /**\n+   * Constructs an ImageProducer from memory using the default RGB ColorModel\n+   */\n+  public MemoryImageSource(int w, int h, int[] pix, int off, int scan)\n+  {\n+    this(w, h, ColorModel.getRGBdefault(), pix, off, scan, null);\n+  }\n+\n+  /**\n+   * Used to register an <code>ImageConsumer</code> with this\n+   * <code>ImageProducer</code>.\n+   */\n+  public synchronized void addConsumer(ImageConsumer ic)\n+  {\n+    if (consumers.contains(ic))\n+      return;\n+\n+    consumers.addElement(ic);\n+  }\n+\n+  /**\n+   * Used to determine if the given <code>ImageConsumer</code> is\n+   * already registered with this <code>ImageProducer</code>.\n+   */\n+  public synchronized boolean isConsumer(ImageConsumer ic)\n+  {\n+    if (consumers.contains(ic))\n+      return true;\n+    return false;\n+  }\n+\n+  /**\n+   * Used to remove an <code>ImageConsumer</code> from the list of\n+   * registered consumers for this <code>ImageProducer</code>.\n+   */\n+  public synchronized void removeConsumer(ImageConsumer ic)\n+  {\n+    consumers.removeElement(ic);\n+  }\n+\n+  /**\n+   * Used to register an <code>ImageConsumer</code> with this\n+   * <code>ImageProducer</code> and then immediately start\n+   * reconstruction of the image data to be delivered to all\n+   * registered consumers.\n+   */\n+  public void startProduction(ImageConsumer ic)\n+  {\n+    if (! (consumers.contains(ic)))\n+      consumers.addElement(ic);\n+\n+    Vector list = (Vector) consumers.clone();\n+    for (int i = 0; i < list.size(); i++)\n+      {\n+\tic = (ImageConsumer) list.elementAt(i);\n+\tsendPicture(ic);\n+\tif (animated)\n+\t  ic.imageComplete(ImageConsumer.SINGLEFRAME);\n+\telse\n+\t  ic.imageComplete(ImageConsumer.STATICIMAGEDONE);\n+      }\n+  }\n+\n+  /**\n+   * Used to register an <code>ImageConsumer</code> with this\n+   * <code>ImageProducer</code> and then request that this producer\n+   * resend the image data in the order top-down, left-right.\n+   */\n+  public void requestTopDownLeftRightResend(ImageConsumer ic)\n+  {\n+    startProduction(ic);\n+  }\n+\n+  /**\n+   * Changes a flag to indicate whether this MemoryImageSource supports\n+   * animations.\n+   *\n+   * @param animated A flag indicating whether this class supports animations\n+   */\n+  public synchronized void setAnimated(boolean animated)\n+  {\n+    this.animated = animated;\n+  }\n+\n+  /**\n+   * A flag to indicate whether or not to send full buffer updates when\n+   * sending animation. If this flag is set then full buffers are sent\n+   * in the newPixels methods instead of just regions.\n+   *\n+   * @param fullbuffers - a flag indicating whether to send the full buffers\n+   */\n+  public synchronized void setFullBufferUpdates(boolean fullbuffers)\n+  {\n+    this.fullbuffers = fullbuffers;\n+  }\n+\n+  /**\n+   * Send an animation frame to the image consumers.\n+   */\n+  public void newPixels()\n+  {\n+    if (animated == true)\n+      {\n+\tImageConsumer ic;\n \tVector list = (Vector) consumers.clone();\n-\tfor(int i = 0; i < list.size(); i++) {\n+\tfor (int i = 0; i < list.size(); i++)\n+\t  {\n \t    ic = (ImageConsumer) list.elementAt(i);\n-\t    sendPicture( ic );\n-            if (animated)\n-              ic.imageComplete( ImageConsumer.SINGLEFRAME );\n-            else\n-              ic.imageComplete( ImageConsumer.STATICIMAGEDONE );\n-\t}\t\n-    }\n-\n-    /**\n-     * Used to register an <code>ImageConsumer</code> with this\n-     * <code>ImageProducer</code> and then request that this producer\n-     * resend the image data in the order top-down, left-right.  \n-     */\n-    public void requestTopDownLeftRightResend(ImageConsumer ic) {\n-\tstartProduction ( ic );\n-    }\n-\n-\n-    /**\n-       Changes a flag to indicate whether this MemoryImageSource supports\n-       animations.\n-\n-       @param animated A flag indicating whether this class supports animations\n-     */    \n-    public synchronized void setAnimated(boolean animated)\n-    {\n-\tthis.animated = animated;\n-    }\n-\n-\n-    /**\n-       A flag to indicate whether or not to send full buffer updates when\n-       sending animation. If this flag is set then full buffers are sent\n-       in the newPixels methods instead of just regions.\n-\n-       @param fullbuffers - a flag indicating whether to send the full buffers \n-     */\n-    public synchronized void setFullBufferUpdates(boolean fullbuffers)\n-    {\n-\tthis.fullbuffers = fullbuffers;\n-    }\n-\n-    /**\n-       Send an animation frame to the image consumers.\n-     */\n-    public void newPixels()\n-    {\n-\tif( animated == true ) {\n-\t\tImageConsumer ic;\n-\t\tVector list = (Vector) consumers.clone();\n-\t\tfor(int i = 0; i < list.size(); i++) {\n-\t\t\tic = (ImageConsumer) list.elementAt(i);\n-\t\t\tsendPicture( ic );\n-\t\t\tic.imageComplete( ImageConsumer.SINGLEFRAME );\n-\t\t    }\t\n-\t    }\n-    }\n-\n-    \n-    private void sendPicture ( ImageConsumer ic )\n-    {\n-\tic.setHints( ImageConsumer.TOPDOWNLEFTRIGHT );\n-\tif( props != null ) {\n-\t    ic.setProperties( props );\n-\t}\n-\tic.setDimensions(width, height);\n-\tic.setColorModel(cm);\n-\tif( pixeli != null ) {\n-\t    ic.setPixels( 0, 0, width, height, cm, pixeli, offset, scansize );\n-\t} else {\n-\t    ic.setPixels( 0, 0, width, height, cm, pixelb, offset, scansize );\n-\t}\n-    }\n-\n-    /**\n-       Send an animation frame to the image consumers containing the specified\n-       pixels unless setFullBufferUpdates is set.\n-     */\n-    public synchronized void newPixels(int x,\n-\t\t\t\t       int y,\n-\t\t\t\t       int w,\n-\t\t\t\t       int h)\n-    {\n-\tif( animated == true )\n-\t    {\n-\t\tif( fullbuffers ) {\n-\t\t    newPixels();\n-\t\t} else {\n-\t\t    ImageConsumer ic;\n-\t\t    Vector list = (Vector) consumers.clone();\n-\t\t    for(int i = 0; i < list.size(); i++) {\n-\t\t\t    ic = (ImageConsumer) list.elementAt(i);\n-\t\t\t    ic.setHints( ImageConsumer.TOPDOWNLEFTRIGHT );\n-\t\t\t    if( props != null ) {\n-\t\t\t\tic.setProperties( props );\n-\t\t\t    }\n-\t\t\t    if( pixeli != null ) {\n-\t\t\t\tint[] pixelbuf = new int[w * h];\n-\t\t\t\tfor (int row = y; row < y + h; row++)\n-\t\t\t\t    System.arraycopy(pixeli, row * scansize + x + offset, pixelbuf, 0, w * h);\n-\t\t\t\tic.setPixels( x, y, w, h, cm, pixelbuf, 0, w );\n-\t\t\t    } else {\n-\t\t\t\tbyte[] pixelbuf = new byte[w * h];\n-\t\t\t\tfor (int row = y; row < y + h; row++)\n-                                  System.arraycopy(pixelb, row * scansize + x + offset, pixelbuf, 0, w * h);\n-\n-\t\t\t\tic.setPixels( x, y, w, h, cm, pixelbuf, 0, w );\n-\t\t\t    }\n-\t\t\t    ic.imageComplete( ImageConsumer.SINGLEFRAME );\n-\t\t    }\n-\t\t}     \n-\t    }\n-    }\n-\n-\n-\n-    /**\n-       Send an animation frame to the image consumers containing the specified\n-       pixels unless setFullBufferUpdates is set.\n-\n-       If framenotify is set then a notification is sent when the frame \n-       is sent otherwise no status is sent.\n-     */\n-    public synchronized void newPixels(int x,\n-\t\t\t\t       int y,\n-\t\t\t\t       int w,\n-\t\t\t\t       int h,\n-\t\t\t\t       boolean framenotify)\n-    {\n-\tif( animated == true )\n-\t    {\n-\t\tif( fullbuffers ) {\n-\t\t    newPixels();\n-\t\t} else {\n-\t\t    ImageConsumer ic;\n-\t\t    Vector list = (Vector) consumers.clone();\n-\t\t    for(int i = 0; i < list.size(); i++) {\n-\t\t\t    ic = (ImageConsumer) list.elementAt(i);\n-\t\t\t    ic.setHints( ImageConsumer.TOPDOWNLEFTRIGHT );\n-\t\t\t    if( props != null ) {\n-\t\t\t\tic.setProperties( props );\n-\t\t\t    }\n-\t\t\t    if( pixeli != null ) {\n-\t\t\t\tint[] pixelbuf = new int[w * h];\n-\t\t\t\tfor (int row = y; row < y + h; row++)\n-\t\t\t\t    System.arraycopy(pixeli, row * scansize + x + offset, pixelbuf, 0, w * h);\n-\t\t\t\tic.setPixels( x, y, w, h, cm, pixelbuf, 0, w );\n-\t\t\t    } else {\n-\t\t\t\tbyte[] pixelbuf = new byte[w * h];\n-\t\t\t\tfor (int row = y; row < y + h; row++)\n-\t\t\t\t    System.arraycopy(pixelb, row * scansize + x + offset, pixelbuf, 0, w * h);\n-\t\t\t\tic.setPixels( x, y, w, h, cm, pixelbuf, 0, w );\n-\t\t\t    }\n-\t\t\t    if( framenotify == true )\n-\t\t\t\tic.imageComplete( ImageConsumer.SINGLEFRAME );\n-\t\t    }\n-\t\t}     \n-\t    }\n-    }\n-\n-    public synchronized void newPixels(byte newpix[],\n-\t\t\t\t       ColorModel newmodel,\n-\t\t\t\t       int offset,\n-\t\t\t\t       int scansize)\n-\n-    {\n-\tpixeli = null;\n-\tpixelb = newpix;\n-\tcm = newmodel;\n-\tthis.offset = offset;\n-\tthis.scansize = scansize;\n-\tif( animated == true )\n-\t    {\n-\t\tnewPixels();\n-\t    }\n-    }\n-\n-    public synchronized void newPixels(int newpix[],\n-\t\t\t\t       ColorModel newmodel,\n-\t\t\t\t       int offset,\n-\t\t\t\t       int scansize)\n-\n-    {\n-\tpixelb = null;\n-\tpixeli = newpix;\n-\tcm = newmodel;\n-\tthis.offset = offset;\n-\tthis.scansize = scansize;\n-\tif( animated == true )\n-\t    {\n-\t\tnewPixels();\n-\t    }\n-    }\n-\n+\t    sendPicture(ic);\n+\t    ic.imageComplete(ImageConsumer.SINGLEFRAME);\n+\t  }\n+      }\n+  }\n+\n+  private void sendPicture(ImageConsumer ic)\n+  {\n+    ic.setHints(ImageConsumer.TOPDOWNLEFTRIGHT);\n+    if (props != null)\n+      ic.setProperties(props);\n+    ic.setDimensions(width, height);\n+    ic.setColorModel(cm);\n+    if (pixeli != null)\n+      ic.setPixels(0, 0, width, height, cm, pixeli, offset, scansize);\n+    else\n+      ic.setPixels(0, 0, width, height, cm, pixelb, offset, scansize);\n+  }\n+\n+  /**\n+   * Send an animation frame to the image consumers containing the specified\n+   * pixels unless setFullBufferUpdates is set.\n+   */\n+  public synchronized void newPixels(int x, int y, int w, int h)\n+  {\n+    if (animated == true)\n+      {\n+\tif (fullbuffers)\n+\t  newPixels();\n+\telse\n+\t  {\n+\t    ImageConsumer ic;\n+\t    Vector list = (Vector) consumers.clone();\n+\t    for (int i = 0; i < list.size(); i++)\n+\t      {\n+\t\tic = (ImageConsumer) list.elementAt(i);\n+\t\tic.setHints(ImageConsumer.TOPDOWNLEFTRIGHT);\n+\t\tif (props != null)\n+\t\t  ic.setProperties(props);\n+\t\tif (pixeli != null)\n+\t\t  {\n+\t\t    int[] pixelbuf = new int[w * h];\n+\t\t    for (int row = y; row < y + h; row++)\n+\t\t      System.arraycopy(pixeli, row * scansize + x + offset,\n+\t\t                       pixelbuf, 0, w * h);\n+\t\t    ic.setPixels(x, y, w, h, cm, pixelbuf, 0, w);\n+\t\t  }\n+\t\telse\n+\t\t  {\n+\t\t    byte[] pixelbuf = new byte[w * h];\n+\t\t    for (int row = y; row < y + h; row++)\n+\t\t      System.arraycopy(pixelb, row * scansize + x + offset,\n+\t\t                       pixelbuf, 0, w * h);\n+\n+\t\t    ic.setPixels(x, y, w, h, cm, pixelbuf, 0, w);\n+\t\t  }\n+\t\tic.imageComplete(ImageConsumer.SINGLEFRAME);\n+\t      }\n+\t  }\n+      }\n+  }\n+\n+  /**\n+   * Send an animation frame to the image consumers containing the specified\n+   * pixels unless setFullBufferUpdates is set.\n+   *\n+   * If framenotify is set then a notification is sent when the frame\n+   * is sent otherwise no status is sent.\n+   */\n+  public synchronized void newPixels(int x, int y, int w, int h,\n+                                     boolean framenotify)\n+  {\n+    if (animated == true)\n+      {\n+\tif (fullbuffers)\n+\t  newPixels();\n+\telse\n+\t  {\n+\t    ImageConsumer ic;\n+\t    Vector list = (Vector) consumers.clone();\n+\t    for (int i = 0; i < list.size(); i++)\n+\t      {\n+\t\tic = (ImageConsumer) list.elementAt(i);\n+\t\tic.setHints(ImageConsumer.TOPDOWNLEFTRIGHT);\n+\t\tif (props != null)\n+\t\t  ic.setProperties(props);\n+\t\tif (pixeli != null)\n+\t\t  {\n+\t\t    int[] pixelbuf = new int[w * h];\n+\t\t    for (int row = y; row < y + h; row++)\n+\t\t      System.arraycopy(pixeli, row * scansize + x + offset,\n+\t\t                       pixelbuf, 0, w * h);\n+\t\t    ic.setPixels(x, y, w, h, cm, pixelbuf, 0, w);\n+\t\t  }\n+\t\telse\n+\t\t  {\n+\t\t    byte[] pixelbuf = new byte[w * h];\n+\t\t    for (int row = y; row < y + h; row++)\n+\t\t      System.arraycopy(pixelb, row * scansize + x + offset,\n+\t\t                       pixelbuf, 0, w * h);\n+\t\t    ic.setPixels(x, y, w, h, cm, pixelbuf, 0, w);\n+\t\t  }\n+\t\tif (framenotify == true)\n+\t\t  ic.imageComplete(ImageConsumer.SINGLEFRAME);\n+\t      }\n+\t  }\n+      }\n+  }\n+\n+  public synchronized void newPixels(byte[] newpix, ColorModel newmodel,\n+                                     int offset, int scansize)\n+  {\n+    pixeli = null;\n+    pixelb = newpix;\n+    cm = newmodel;\n+    this.offset = offset;\n+    this.scansize = scansize;\n+    if (animated == true)\n+      newPixels();\n+  }\n+\n+  public synchronized void newPixels(int[] newpix, ColorModel newmodel,\n+                                     int offset, int scansize)\n+  {\n+    pixelb = null;\n+    pixeli = newpix;\n+    cm = newmodel;\n+    this.offset = offset;\n+    this.scansize = scansize;\n+    if (animated == true)\n+      newPixels();\n+  }\n }"}, {"sha": "6d5f2841b5a43ccc6f6651786d3639c53830cf90", "filename": "libjava/java/awt/image/MultiPixelPackedSampleModel.java", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fimage%2FMultiPixelPackedSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fimage%2FMultiPixelPackedSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FMultiPixelPackedSampleModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -59,7 +59,7 @@ public class MultiPixelPackedSampleModel extends SampleModel\n   public MultiPixelPackedSampleModel(int dataType, int w, int h,\n \t\t\t\t     int numberOfBits)\n   {\n-    this(dataType, w, h, 0, numberOfBits, 0);\n+    this(dataType, w, h, numberOfBits, 0, 0);\n   }\n \n   public MultiPixelPackedSampleModel(int dataType, int w, int h,\n@@ -101,7 +101,7 @@ public MultiPixelPackedSampleModel(int dataType, int w, int h,\n \n     // Compute scan line large enough for w pixels.\n     if (scanlineStride == 0)\n-      scanlineStride = ((dataBitOffset + w * numberOfBits) / elemBits) + 1;\n+      scanlineStride = ((dataBitOffset + w * numberOfBits) / elemBits);\n     this.scanlineStride = scanlineStride;\n \n     \n@@ -112,8 +112,9 @@ public MultiPixelPackedSampleModel(int dataType, int w, int h,\n     bitOffsets = new int[numElems];\n     for (int i=0; i < numElems; i++)\n       {\n-\tbitOffsets[i] = numberOfBits * i;\n-\tbitMasks[i] = ((1 << numberOfBits) - 1) << bitOffsets[i];\n+\tbitOffsets[numElems - i- 1] = numberOfBits * i;\n+\tbitMasks[numElems - i - 1] = ((1 << numberOfBits) - 1) << \n+\t    bitOffsets[numElems - i - 1];\n       }\n   }\n "}, {"sha": "b613c1b447cccde0155ba55881a578d8a39bd1e4", "filename": "libjava/java/awt/image/RGBImageFilter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -83,7 +83,7 @@ public void setColorModel(ColorModel model)\n \t    }\n \telse {\n \t\tconsumer.setColorModel(ColorModel.getRGBdefault());\n-\t    }\n+\t}\n     }\n     \n     /**"}, {"sha": "091909d5bea0136ad710f489f97de782383af24a", "filename": "libjava/java/awt/image/ReplicateScaleFilter.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fimage%2FReplicateScaleFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fimage%2FReplicateScaleFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FReplicateScaleFilter.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -201,10 +201,10 @@ public void setPixels(int x, int y, int w, int h,\n                            model, destPixels, 0, destScansize);\n     }\n \n-    protected byte[] replicatePixels(int srcx, int srcy, int srcw, int srch,\n-                                    ColorModel model, byte[] srcPixels,\n-                                    int srcOffset, int srcScansize,\n-                                    double rx, double ry, int destScansize)\n+    private byte[] replicatePixels(int srcx, int srcy, int srcw, int srch,\n+                                   ColorModel model, byte[] srcPixels,\n+                                   int srcOffset, int srcScansize,\n+                                   double rx, double ry, int destScansize)\n     {\n \tbyte[] destPixels =\n \t  new byte[(int) Math.ceil(srcw/rx) * (int) Math.ceil(srch/ry)];\n@@ -221,10 +221,10 @@ protected byte[] replicatePixels(int srcx, int srcy, int srcw, int srch,\n \treturn destPixels;\n     }\n \n-    protected int[] replicatePixels(int srcx, int srcy, int srcw, int srch,\n-                                    ColorModel model, int[] srcPixels,\n-                                    int srcOffset, int srcScansize,\n-                                    double rx, double ry, int destScansize)\n+    private int[] replicatePixels(int srcx, int srcy, int srcw, int srch,\n+                                  ColorModel model, int[] srcPixels,\n+                                  int srcOffset, int srcScansize,\n+                                  double rx, double ry, int destScansize)\n     {\n \tint[] destPixels =\n \t  new int[(int) Math.ceil(srcw/rx) * (int) Math.ceil(srch/ry)];"}, {"sha": "a187fc0217d2e01dfb0ad2267c2284ea89698bd4", "filename": "libjava/java/awt/peer/RobotPeer.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fpeer%2FRobotPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fpeer%2FRobotPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FRobotPeer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -43,12 +43,12 @@\n public interface RobotPeer\n {\n   void mouseMove (int x, int y);\n-  void mousePress (int x);\n-  void mouseRelease (int x);\n-  void mouseWheel (int x);\n-  void keyPress (int x);\n-  void keyRelease (int x);\n+  void mousePress (int buttons);\n+  void mouseRelease (int buttons);\n+  void mouseWheel (int wheelAmt);\n+  void keyPress (int keycode);\n+  void keyRelease (int keycode);\n   int getRGBPixel (int x, int y);\n-  int[] getRGBPixels (Rectangle r);\n+  int[] getRGBPixels (Rectangle screen);\n } // interface RobotPeer\n "}, {"sha": "41f360beca0cb74d05e18b6f3e52f32229f0ff60", "filename": "libjava/java/awt/print/Book.java", "status": "modified", "additions": 114, "deletions": 141, "changes": 255, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fprint%2FBook.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fprint%2FBook.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FBook.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* Book.java -- A mixed group of pages to print.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,146 +41,119 @@\n import java.util.Vector;\n \n /**\n-  * This class allows documents to be created with different paper types,\n-  * page formatters, and painters.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-public class Book implements Pageable\n-{\n-\n-/*\n- * Instance Variables\n- */\n-\n-// Painter objects for the book\n-Vector printables = new Vector();\n-\n-// Page formats for the book\n-Vector page_formats = new Vector();\n-\n-/*************************************************************************/\n-\n-/*\n- * Constructors\n+ * This class allows documents to be created with different paper types,\n+ * page formatters, and painters.\n+ *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n-\n-/** \n-  * Initializes a new instance of <code>Book</code> that is empty.\n-  */\n-public\n-Book()\n-{\n-  ;\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the number of pages in this book.\n-  *\n-  * @return The number of pages in this book.\n-  */\n-public int\n-getNumberOfPages()\n-{\n-  return(printables.size());\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * This method returns the <code>PageFormat</code> object for the\n-  * specified page.\n-  *\n-  * @param page_number The number of the page to get information for, where\n-  * page numbers start at 0.\n-  *\n-  * @return The <code>PageFormat</code> object for the specified page.\n-  *\n-  * @exception IndexOutOfBoundsException If the page number is not valid.\n-  */\n-public PageFormat\n-getPageFormat(int page_number)\n-{\n-  return((PageFormat)page_formats.elementAt(page_number));\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * This method returns the <code>Printable</code> object for the\n-  * specified page.\n-  *\n-  * @param page_number The number of the page to get information for, where\n-  * page numbers start at 0.\n-  *\n-  * @return The <code>Printable</code> object for the specified page.\n-  *\n-  * @exception IndexOutOfBoundsException If the page number is not valid.\n-  */\n-public Printable\n-getPrintable(int page_number)\n-{\n-  return((Printable)printables.elementAt(page_number));\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * This method appends a page to the end of the book.\n-  *\n-  * @param printable The <code>Printable</code> for this page.\n-  * @param page_format The <code>PageFormat</code> for this page.\n-  *\n-  * @exception NullPointerException If either argument is <code>null</code>.\n-  */\n-public void\n-append(Printable printable, PageFormat page_format)\n-{\n-  append(printable, page_format, 1);\n-} \n-\n-/*************************************************************************/\n-\n-/**\n-  * This method appends the specified number of pages to the end of the book.\n-  * Each one will be associated with the specified <code>Printable</code>\n-  * and <code>PageFormat</code>.\n-  *\n-  * @param printable The <code>Printable</code> for this page.\n-  * @param page_format The <code>PageFormat</code> for this page.\n-  * @param num_pages The number of pages to append.\n-  *\n-  * @exception NullPointerException If any argument is <code>null</code>.\n-  */\n-public void\n-append(Printable printable, PageFormat page_format, int num_pages)\n-{\n-  for (int i = 0; i < num_pages; i++)\n-    {\n-      printables.addElement(printable);\n-      page_formats.addElement(page_format);\n-    }\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * This method changes the <code>Printable</code> and <code>PageFormat</code>\n-  * for the specified page.  The page must already exist or an exception\n-  * will be thrown.\n-  *\n-  * @param page_num The page number to alter.\n-  * @param printable The new <code>Printable</code> for the page.\n-  * @param page_format The new <code>PageFormat</code> for the page.\n-  *\n-  * @throws IndexOutOfBoundsException If the specified page does not exist.\n-  */\n-public void\n-setPage(int page_num, Printable printable, PageFormat page_format)\n+public class Book implements Pageable\n {\n-  printables.setElementAt(printable, page_num);\n-  page_formats.setElementAt(page_format, page_num);\n-}\n+  /**\n+   * Painter objects for the book.\n+   */\n+  Vector printables = new Vector();\n+\n+  /**\n+   * Page formats for the book.\n+   */\n+  Vector page_formats = new Vector();\n+\n+  /**\n+   * Initializes a new instance of <code>Book</code> that is empty.\n+   */\n+  public Book()\n+  {\n+  }\n+\n+  /**\n+   * Returns the number of pages in this book.\n+   *\n+   * @return The number of pages in this book.\n+   */\n+  public int getNumberOfPages()\n+  {\n+    return printables.size();\n+  }\n+\n+  /**\n+   * This method returns the <code>PageFormat</code> object for the\n+   * specified page.\n+   *\n+   * @param page_number The number of the page to get information for, where\n+   * page numbers start at 0.\n+   *\n+   * @return The <code>PageFormat</code> object for the specified page.\n+   *\n+   * @exception IndexOutOfBoundsException If the page number is not valid.\n+   */\n+  public PageFormat getPageFormat(int page_number)\n+  {\n+    return (PageFormat) page_formats.elementAt(page_number);\n+  }\n+\n+  /**\n+   * This method returns the <code>Printable</code> object for the\n+   * specified page.\n+   *\n+   * @param page_number The number of the page to get information for, where\n+   * page numbers start at 0.\n+   *\n+   * @return The <code>Printable</code> object for the specified page.\n+   *\n+   * @exception IndexOutOfBoundsException If the page number is not valid.\n+   */\n+  public Printable getPrintable(int page_number)\n+  {\n+    return (Printable) printables.elementAt(page_number);\n+  }\n+\n+  /**\n+   * This method appends a page to the end of the book.\n+   *\n+   * @param printable The <code>Printable</code> for this page.\n+   * @param page_format The <code>PageFormat</code> for this page.\n+   *\n+   * @exception NullPointerException If either argument is <code>null</code>.\n+   */\n+  public void append(Printable printable, PageFormat page_format)\n+  {\n+    append(printable, page_format, 1);\n+  }\n+\n+  /**\n+   * This method appends the specified number of pages to the end of the book.\n+   * Each one will be associated with the specified <code>Printable</code>\n+   * and <code>PageFormat</code>.\n+   *\n+   * @param printable The <code>Printable</code> for this page.\n+   * @param page_format The <code>PageFormat</code> for this page.\n+   * @param num_pages The number of pages to append.\n+   *\n+   * @exception NullPointerException If any argument is <code>null</code>.\n+   */\n+  public void append(Printable printable, PageFormat page_format, int num_pages)\n+  {\n+    for (int i = 0; i < num_pages; i++)\n+      {\n+\tprintables.addElement(printable);\n+\tpage_formats.addElement(page_format);\n+      }\n+  }\n+\n+  /**\n+   * This method changes the <code>Printable</code> and <code>PageFormat</code>\n+   * for the specified page.  The page must already exist or an exception\n+   * will be thrown.\n+   *\n+   * @param page_num The page number to alter.\n+   * @param printable The new <code>Printable</code> for the page.\n+   * @param page_format The new <code>PageFormat</code> for the page.\n+   *\n+   * @throws IndexOutOfBoundsException If the specified page does not exist.\n+   */\n+  public void setPage(int page_num, Printable printable, PageFormat page_format)\n+  {\n+    printables.setElementAt(printable, page_num);\n+    page_formats.setElementAt(page_format, page_num);\n+  }\n }"}, {"sha": "bc5cfcd5a1ba9f600f3b9193b215687aac1ba90a", "filename": "libjava/java/awt/print/PrinterJob.java", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fprint%2FPrinterJob.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* PrinterJob.java -- This job is the printer control class\n-   Copyright (C) 1999, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,10 +38,9 @@\n \n package java.awt.print;\n \n-import javax.print.DocFlavor;\n+import java.awt.HeadlessException;\n+\n import javax.print.PrintService;\n-import javax.print.PrintServiceLookup;\n-//import javax.print.StreamPrintServiceFactory;\n import javax.print.attribute.PrintRequestAttributeSet;\n \n /**\n@@ -61,7 +60,7 @@\n    */\n   public static PrinterJob getPrinterJob()\n   {\n-  // FIXME: Need to fix this to load a default implementation instance.\n+    // FIXME: Need to fix this to load a default implementation instance.\n     return null;\n   }\n \n@@ -149,7 +148,8 @@ public PageFormat defaultPage()\n    *\n    * @return The modified <code>PageFormat</code>.\n    */\n-  public abstract PageFormat pageDialog(PageFormat page_format);\n+  public abstract PageFormat pageDialog(PageFormat page_format)\n+    throws HeadlessException;\n \n   /**\n    * Prints the pages.\n@@ -169,7 +169,8 @@ public abstract void print (PrintRequestAttributeSet attributes)\n    * @return <code>false</code> if the user cancels the dialog box,\n    * <code>true</code> otherwise.\n    */\n-  public abstract boolean printDialog();\n+  public abstract boolean printDialog()\n+    throws HeadlessException;\n \n   /**\n    * Displays a dialog box to the user which allows the print job\n@@ -178,7 +179,8 @@ public abstract void print (PrintRequestAttributeSet attributes)\n    * @return <code>false</code> if the user cancels the dialog box,\n    * <code>true</code> otherwise.\n    */\n-  public abstract boolean printDialog(PrintRequestAttributeSet attributes);\n+  public abstract boolean printDialog(PrintRequestAttributeSet attributes)\n+    throws HeadlessException;\n \n   /**\n    * This sets the pages that are to be printed."}, {"sha": "c0ddf44ffa5ca9e6631bce5fea73ef3086686c22", "filename": "libjava/javax/swing/AbstractAction.java", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FAbstractAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FAbstractAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractAction.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* AbstractAction.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -55,15 +55,13 @@\n public abstract class AbstractAction\n   implements Action, Cloneable, Serializable\n {\n-  static final long serialVersionUID = -6803159439231523484L;\n+  private static final long serialVersionUID = -6803159439231523484L;\n \n   /**\n    * enabled\n    */\n   protected boolean enabled = true;\n   \n-  public static final String ENABLED_PROPERTY = \"enabled\";\n-\n   /**\n    * changeSupport\n    */\n@@ -193,7 +191,7 @@ public void setEnabled(boolean enabled)\n     if (enabled != this.enabled)\n     {\n       this.enabled = enabled;\n-      firePropertyChange(ENABLED_PROPERTY, !this.enabled, this.enabled);\n+      firePropertyChange(\"enabled\", !this.enabled, this.enabled);\n     }\n   }\n "}, {"sha": "1232a4ab4fd69cadb4c1a4fde42bc9c653772d15", "filename": "libjava/javax/swing/AbstractButton.java", "status": "modified", "additions": 44, "deletions": 12, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FAbstractButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FAbstractButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractButton.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -661,7 +661,7 @@ public ChangeListener[] getChangeListeners()\n    *\n    * @param e The event signifying that the button's model changed state\n    */\n-  public void fireItemStateChanged(ItemEvent e)\n+  protected void fireItemStateChanged(ItemEvent e)\n   {\n     e.setSource(this);\n     ItemListener[] listeners = getItemListeners();\n@@ -676,7 +676,7 @@ public void fireItemStateChanged(ItemEvent e)\n    *\n    * @param e The event signifying that the button's model was clicked\n    */\n-  public void fireActionPerformed(ActionEvent e)\n+  protected void fireActionPerformed(ActionEvent e)\n   {\n     e.setSource(this);\n     ActionListener[] listeners = getActionListeners();\n@@ -689,7 +689,7 @@ public void fireActionPerformed(ActionEvent e)\n    * Calls {@link ChangeEvent.stateChanged} on each {@link ChangeListener}\n    * in the button's listener list.\n    */\n-  public void fireStateChanged()\n+  protected void fireStateChanged()\n   {\n     ChangeListener[] listeners = getChangeListeners();\n \n@@ -740,10 +740,10 @@ public void setMnemonic(int mne)\n \n     if (old != mne)\n       {\n-    getModel().setMnemonic(mne);\n+\tgetModel().setMnemonic(mne);\n \n \tif (text != null && ! text.equals(\"\"))\n-      {\n+\t  {\n \t    // Since lower case char = upper case char for \n \t    // mnemonic, we will convert both text and mnemonic \n \t    // to upper case before checking if mnemonic character occurs\n@@ -753,9 +753,9 @@ public void setMnemonic(int mne)\n \t    setDisplayedMnemonicIndex(upperCaseText.indexOf(upperCaseMne));\n \t  }\n \n-        firePropertyChange(MNEMONIC_CHANGED_PROPERTY, old, mne);\n-        revalidate();\n-        repaint();\n+\tfirePropertyChange(MNEMONIC_CHANGED_PROPERTY, old, mne);\n+\trevalidate();\n+\trepaint();\n       }\n   }\n \n@@ -806,7 +806,7 @@ public int getDisplayedMnemonicIndex()\n   public void setRolloverEnabled(boolean r)\n   {\n     if (rollOverEnabled != r)\n-  {\n+      {\n         rollOverEnabled = r;\n         firePropertyChange(ROLLOVER_ENABLED_CHANGED_PROPERTY, !r, r);\n         revalidate();\n@@ -1450,7 +1450,7 @@ protected  void configurePropertiesFromAction(Action a)\n \n         // Set actionCommand to button's text by default if it is not specified\n         if (actionCommand != null)\n-        setActionCommand((String)(a.getValue(Action.ACTION_COMMAND_KEY)));\n+\t   setActionCommand((String)(a.getValue(Action.ACTION_COMMAND_KEY)));\n \t else\n \t   setActionCommand(getText());\n       }\n@@ -1509,7 +1509,7 @@ protected  PropertyChangeListener createActionPropertyChangeListener(Action a)\n         public void propertyChange(PropertyChangeEvent e)\n         {\n           Action act = (Action) (e.getSource());\t\n-\t  if (e.getPropertyName().equals(AbstractAction.ENABLED_PROPERTY))\n+\t  if (e.getPropertyName().equals(\"enabled\"))\n \t    setEnabled(act.isEnabled());\n \t  else if (e.getPropertyName().equals(Action.NAME))\n             setText((String)(act.getValue(Action.NAME)));\n@@ -1847,7 +1847,39 @@ protected void paintBorder(Graphics g)\n    */\n   protected String paramString()\n   {\n-    return \"AbstractButton\";\n+    StringBuffer sb = new StringBuffer();\n+    sb.append(super.paramString());\n+    sb.append(\",defaultIcon=\");\n+    if (getIcon() != null)\n+      sb.append(getIcon());\n+    sb.append(\",disabledIcon=\");\n+    if (getDisabledIcon() != null)\n+      sb.append(getDisabledIcon());\n+    sb.append(\",disabledSelectedIcon=\");\n+    if (getDisabledSelectedIcon() != null)\n+      sb.append(getDisabledSelectedIcon());\n+    sb.append(\",margin=\");\n+    if (getMargin() != null)\n+      sb.append(getMargin());\n+    sb.append(\",paintBorder=\").append(isBorderPainted());\n+    sb.append(\",paintFocus=\").append(isFocusPainted());\n+    sb.append(\",pressedIcon=\");\n+    if (getPressedIcon() != null)\n+      sb.append(getPressedIcon());\n+    sb.append(\",rolloverEnabled=\").append(isRolloverEnabled());\n+    sb.append(\",rolloverIcon=\");\n+    if (getRolloverIcon() != null)\n+      sb.append(getRolloverIcon());\n+    sb.append(\",rolloverSelected=\");\n+    if (getRolloverSelectedIcon() != null)\n+      sb.append(getRolloverSelectedIcon());\n+    sb.append(\",selectedIcon=\");\n+    if (getSelectedIcon() != null)\n+      sb.append(getSelectedIcon());\n+    sb.append(\",text=\");\n+    if (getText() != null)\n+      sb.append(getText());\n+    return sb.toString();\n   }\n \n   /**"}, {"sha": "7cc57516a1cf28d74d1456a1d223816b579f626a", "filename": "libjava/javax/swing/AbstractCellEditor.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractCellEditor.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -53,7 +53,7 @@\n public abstract class AbstractCellEditor\n   implements CellEditor, Serializable\n {\n-  static final long serialVersionUID = -1048006551406220959L;\n+  private static final long serialVersionUID = -1048006551406220959L;\n \n   /**\n    * listenerList"}, {"sha": "a380b2a2eda98c487b664ace486edc48243684a9", "filename": "libjava/javax/swing/AbstractListModel.java", "status": "modified", "additions": 21, "deletions": 58, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FAbstractListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FAbstractListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractListModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -54,7 +54,7 @@\n  */\n public abstract class AbstractListModel implements ListModel, Serializable\n {\n-  static final long serialVersionUID = -3285184064379168730L;\n+  private static final long serialVersionUID = -3285184064379168730L;\n \n   /** List of ListDataListeners called for each change to the list. */\n   protected EventListenerList listenerList;\n@@ -100,25 +100,12 @@ public void removeListDataListener(ListDataListener listener)\n   protected void fireContentsChanged(Object source, int startIndex,\n                                      int endIndex)\n   {\n-    // Variables\n-    ListDataEvent event;\n-    ListDataListener[] listeners;\n-    ListDataListener listener;\n-    int index;\n-\n-    // Create Event\n-    event = new ListDataEvent(source, ListDataEvent.CONTENTS_CHANGED,\n-                              startIndex, endIndex);\n-\n-    // Get Listeners\n-    listeners = getListDataListeners();\n-\n-    // Process Listeners\n-    for (index = 0; index < listeners.length; index++)\n-      {\n-        listener = (ListDataListener) listeners[index];\n-        listener.contentsChanged(event);\n-      }\n+    ListDataEvent event = new ListDataEvent(source, ListDataEvent.CONTENTS_CHANGED,\n+                                            startIndex, endIndex);\n+    ListDataListener[] listeners = getListDataListeners();\n+\n+    for (int index = 0; index < listeners.length; index++)\n+      listeners[index].contentsChanged(event);\n   }\n \n   /**\n@@ -134,25 +121,13 @@ protected void fireContentsChanged(Object source, int startIndex,\n    */\n   protected void fireIntervalAdded(Object source, int startIndex, int endIndex)\n   {\n-    // Variables\n-    ListDataEvent event;\n-    ListDataListener[] listeners;\n-    ListDataListener listener;\n-    int index;\n-\n-    // Create Event\n-    event = new ListDataEvent(source, ListDataEvent.INTERVAL_ADDED,\n-                              startIndex, endIndex);\n-\n-    // Get Listeners\n-    listeners = getListDataListeners();\n-\n-    // Process Listeners\n-    for (index = 0; index < listeners.length; index++)\n-      {\n-        listener = listeners[index];\n-        listener.intervalAdded(event);\n-      }\n+    ListDataEvent event =\n+      new ListDataEvent(source, ListDataEvent.INTERVAL_ADDED,\n+\t\t\tstartIndex, endIndex);\n+    ListDataListener[] listeners = getListDataListeners();\n+\n+    for (int index = 0; index < listeners.length; index++)\n+      listeners[index].intervalAdded(event);\n   }\n \n   /**\n@@ -169,25 +144,13 @@ protected void fireIntervalAdded(Object source, int startIndex, int endIndex)\n   protected void fireIntervalRemoved(Object source, int startIndex,\n                                      int endIndex)\n   {\n-    // Variables\n-    ListDataEvent event;\n-    ListDataListener[] listeners;\n-    ListDataListener listener;\n-    int index;\n-\n-    // Create Event\n-    event = new ListDataEvent(source, ListDataEvent.INTERVAL_REMOVED,\n-                              startIndex, endIndex);\n-\n-    // Get Listeners\n-    listeners = getListDataListeners();\n-\n-    // Process Listeners\n-    for (index = 0; index < listeners.length; index++)\n-      {\n-        listener = listeners[index];\n-        listener.intervalRemoved(event);\n-      }\n+    ListDataEvent event =\n+      new ListDataEvent(source, ListDataEvent.INTERVAL_REMOVED,\n+\t\t\tstartIndex, endIndex);\n+    ListDataListener[] listeners = getListDataListeners();\n+\n+    for (int index = 0; index < listeners.length; index++)\n+      listeners[index].intervalRemoved(event);\n   }\n \n   /**"}, {"sha": "26d1d6fa98920acf0aff566704af173f2b3e299c", "filename": "libjava/javax/swing/ActionMap.java", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FActionMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FActionMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FActionMap.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -49,162 +49,162 @@\n \n \n /**\n- * @author\tAndrew Selkirk\n+ * @author Andrew Selkirk\n  * @author Michael Koch\n  */\n public class ActionMap\n   implements Serializable\n {\n   private static final long serialVersionUID = -6277518704513986346L;\n \n-\t/**\n-\t * actionMap\n-\t */\n-\tprivate Map actionMap = new HashMap();\n+  /**\n+   * actionMap\n+   */\n+  private Map actionMap = new HashMap();\n \n-\t/**\n-\t * parent\n-\t */\n+  /**\n+   * parent\n+   */\n   private ActionMap parent;\n \n-\t/**\n+  /**\n    * Creates a new <code>ActionMap</code> instance.\n-\t */\n+   */\n   public ActionMap()\n   {\n   }\n \n-\t/**\n+  /**\n    * Returns an action associated with an object.\n    *\n    * @param key the key of the enty\n    *\n    * @return the action associated with key, may be null\n-\t */\n+   */\n   public Action get(Object key)\n   {\n     Object result = actionMap.get(key);\n \n     if (result == null && parent != null)\n       result = parent.get(key);\n \n-\t\treturn (Action) result;\n+    return (Action) result;\n   }\n \n-\t/**\n+  /**\n    * Puts a new <code>Action</code> into the <code>ActionMap</code>.\n    * If action is null an existing entry will be removed.\n    *\n    * @param key the key for the entry\n    * @param action the action.\n-\t */\n+   */\n   public void put(Object key, Action action)\n   {\n     if (action == null)\n-\t\t\tactionMap.remove(key);\n+      actionMap.remove(key);\n     else\n-\t\t\tactionMap.put(key, action);\n+      actionMap.put(key, action);\n   }\n \n-\t/**\n+  /**\n    * Remove an entry from the <code>ActionMap</code>.\n    *\n    * @param key the key of the entry to remove\n-\t */\n+   */\n   public void remove(Object key)\n   {\n-\t\tactionMap.remove(key);\n+    actionMap.remove(key);\n   }\n \n-\t/**\n+  /**\n    * Returns the parent of this <code>ActionMap</code>.\n    *\n    * @return the parent, may be null.\n-\t */\n+   */\n   public ActionMap getParent()\n   {\n-\t\treturn parent;\n+    return parent;\n   }\n \n-\t/**\n+  /**\n    * Sets a parent for this <code>ActionMap</code>.\n    *\n    * @param parentMap the new parent\n-\t */\n+   */\n   public void setParent(ActionMap parentMap)\n   {\n-\t\tparent = parentMap;\n+    parent = parentMap;\n   }\n \n-\t/**\n+  /**\n    * Returns the number of entries in this <code>ActionMap</code>.\n    *\n    * @return the number of entries\n-\t */\n+   */\n   public int size()\n   {\n-\t\treturn actionMap.size();\n+    return actionMap.size();\n   }\n \n-\t/**\n+  /**\n    * Clears the <code>ActionMap</code>.\n-\t */\n+   */\n   public void clear()\n   {\n-\t\tactionMap.clear();\n+    actionMap.clear();\n   }\n \n-\t/**\n+  /**\n    * Returns all keys of entries in this <code>ActionMap</code>.\n    *\n    * @return an array of keys\n-\t */\n+   */\n   public Object[] keys()\n   {\n     return actionMap.keySet().toArray();\n   }\n \n-\t/**\n+  /**\n    * Returns all keys of entries in this <code>ActionMap</code>\n    * and all its parents.\n    *\n    * @return an array of keys\n-\t */\n+   */\n   public Object[] allKeys()\n   {\n     Set set = new HashSet();\n \n     if (parent != null)\n-\t\t\tset.addAll(Arrays.asList(parent.allKeys()));\n+      set.addAll(Arrays.asList(parent.allKeys()));\n \n     set.addAll(actionMap.keySet());\n     return set.toArray();\n   }\n \n-\t/**\n-\t * writeObject\n+  /**\n+   * writeObject\n    *\n    * @param stream the stream to write to\n    *\n    * @exception IOException If an error occurs\n-\t */\n+   */\n   private void writeObject(ObjectOutputStream stream)\n     throws IOException\n   {\n-\t\t// TODO\n+    // TODO\n   }\n \n-\t/**\n-\t * readObject\n+  /**\n+   * readObject\n    *\n    * @param stream the stream to read from\n    *\n    * @exception ClassNotFoundException If the serialized class cannot be found\n    * @exception IOException If an error occurs\n-\t */\n+   */\n   private void readObject(ObjectInputStream stream)\n     throws ClassNotFoundException, IOException\n   {\n-\t\t// TODO\n+    // TODO\n   }\n }"}, {"sha": "92cf69df8169709a9e02a96a81dca3f9a638cb1f", "filename": "libjava/javax/swing/BoundedRangeModel.java", "status": "modified", "additions": 125, "deletions": 94, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FBoundedRangeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FBoundedRangeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBoundedRangeModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -35,103 +35,134 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n import javax.swing.event.ChangeListener;\n \n /**\n- * BoundedRangeModel\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ * @author Andrew Selkirk\n  */\n-public interface BoundedRangeModel {\n-\n-\t//-------------------------------------------------------------\n-\t// Methods ----------------------------------------------------\n-\t//-------------------------------------------------------------\n-\n-\t/**\n-\t * getValue\n-\t * @returns int\n-\t */\n-\tint getValue();\n-\n-\t/**\n-\t * setValue\n-\t * @param value TODO\n-\t */\n-\tvoid setValue(int value);\n-\n-\t/**\n-\t * getMinimum\n-\t * @returns int\n-\t */\n-\tint getMinimum();\n-\n-\t/**\n-\t * setMinimum\n-\t * @param minimum TODO\n-\t */\n-\tvoid setMinimum(int minimum);\n-\n-\t/**\n-\t * getMaximum\n-\t * @returns int\n-\t */\n-\tint getMaximum();\n-\n-\t/**\n-\t * setMaximum\n-\t * @param maximum TODO\n-\t */\n-\tvoid setMaximum(int maximum);\n-\n-\t/**\n-\t * getValueIsAdjusting\n-\t * @returns boolean\n-\t */\n-\tboolean getValueIsAdjusting();\n-\n-\t/**\n-\t * setValueIsAdjusting\n-\t * @param adjusting TODO\n-\t */\n-\tvoid setValueIsAdjusting(boolean adjusting);\n-\n-\t/**\n-\t * getExtent\n-\t * @returns int\n-\t */\n-\tint getExtent();\n-\n-\t/**\n-\t * setExtent\n-\t * @param extent TODO\n-\t */\n-\tvoid setExtent(int extent);\n-\n-\t/**\n-\t * setRangeProperties\n-\t * @param value TODO\n-\t * @param extent TODO\n-\t * @param min TODO\n-\t * @param max TODO\n-\t * @param adjusting TODO\n-\t */\n-\tvoid setRangeProperties(int value, int extent, int min, \n-\t\t\t\t\tint max, boolean adjusting);\n-\n-\t/**\n-\t * addChangeListener\n-\t * @param listener TODO\n-\t */\n-\tvoid addChangeListener(ChangeListener listener);\n-\n-\t/**\n-\t * removeChangeListener\n-\t * @param listener TODO\n-\t */\n-\tvoid removeChangeListener(ChangeListener listener);\n-\n-\n-} // BoundedRangeModel\n+public interface BoundedRangeModel\n+{\n+  /**\n+   * getValue\n+   * \n+   * @return int\n+   *\n+   * @see #setValue(int)\n+   */\n+  int getValue();\n+\n+  /**\n+   * setValue\n+   * \n+   * @param value the value\n+   *\n+   * @see #getValue()\n+   */\n+  void setValue(int value);\n+\n+  /**\n+   * getMinimum\n+   * \n+   * @return int\n+   *\n+   * @see #setMinimum(int)\n+   */\n+  int getMinimum();\n+\n+  /**\n+   * setMinimum\n+   * \n+   * @param minimum the minimum value\n+   *\n+   * @see #getMinimum()\n+   */\n+  void setMinimum(int minimum);\n+\n+  /**\n+   * getMaximum\n+   * \n+   * @return int\n+   *\n+   * @see #setMaximum(int)\n+   */\n+  int getMaximum();\n+\n+  /**\n+   * setMaximum\n+   * \n+   * @param maximum the maximum value\n+   *\n+   * @see #getMaximum()\n+   */\n+  void setMaximum(int maximum);\n+\n+  /**\n+   * Returns the value of the <code>valueIsAdjusting</code> property.\n+   * \n+   * @return <code>true</code> if value is adjusting,\n+   * otherwise <code>false</code>\n+   *\n+   * @see setValueIsAdjusting(boolean)\n+   */\n+  boolean getValueIsAdjusting();\n+\n+  /**\n+   * setValueIsAdjusting\n+   * \n+   * @param adjusting <code>true</code> if adjusting,\n+   * <code>false</code> otherwise\n+   *\n+   * @see #getValueIsAdjusting()\n+   */\n+  void setValueIsAdjusting(boolean adjusting);\n+\n+  /**\n+   * Returns the current extent.\n+   *\n+   * @return the extent\n+   *\n+   * @see #setExtent(int)\n+   */\n+  int getExtent();\n+\n+  /**\n+   * setExtent\n+   * \n+   * @param extent the extent\n+   *\n+   * @see #getExtent()\n+   */\n+  void setExtent(int extent);\n+\n+  /**\n+   * setRangeProperties\n+   * @param value the value\n+   * @param extent the extent\n+   * @param minnimum the minimum value\n+   * @param maximum the maximum value\n+   * @param adjusting TODO\n+   */\n+  void setRangeProperties(int value, int extent, int minimum, int maximum,\n+\t\t\t  boolean adjusting);\n+\n+  /**\n+   * Adds a <code>ChangeListener</code> to this object.\n+   * \n+   * @param listener the listener to add\n+   * \n+   * @see #removeChangeListener(javax.swing.event.ChangeListener)\n+   */\n+  void addChangeListener(ChangeListener listener);\n+\n+  /**\n+   * Removes a <code>ChangeListener</code> from this object.\n+   * \n+   * @param listener the listener to remove\n+   *\n+   * @see #addChangeListener(javax.swing.event.ChangeListener)\n+   */\n+  void removeChangeListener(ChangeListener listener);\n+}"}, {"sha": "1c85892f56aa046903d9163c8c86b702806749ed", "filename": "libjava/javax/swing/ComponentInputMap.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FComponentInputMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FComponentInputMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FComponentInputMap.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -39,17 +39,17 @@\n \n \n /**\n- * @author\tAndrew Selkirk\n+ * @author Andrew Selkirk\n  * @author Michael Koch\n  */\n public class ComponentInputMap extends InputMap\n {\n-\t/**\n+  /**\n    * The component to notify.\n-\t */\n-\tprivate JComponent component;\n+   */\n+  private JComponent component;\n \n-\t/**\n+  /**\n    * Creates <code>ComponentInputMap</code> object that notifies the given\n    * component about changes to it.\n    *"}, {"sha": "074d45114774cc4dd0ae7e9e9cfae617c1ac6cd5", "filename": "libjava/javax/swing/DebugGraphics.java", "status": "modified", "additions": 355, "deletions": 257, "changes": 612, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDebugGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDebugGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDebugGraphics.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* DebugGraphics.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -56,12 +56,41 @@\n  */\n public class DebugGraphics extends Graphics\n {\n+  /**\n+   * LOG_OPTION\n+   */\n+  public static final int LOG_OPTION = 1;\n+\n+  /**\n+   * FLASH_OPTION\n+   */\n+  public static final int FLASH_OPTION = 2;\n+\n+  /**\n+   * BUFFERED_OPTION\n+   */\n+  public static final int BUFFERED_OPTION = 4;\n+\n+  /**\n+   * NONE_OPTION\n+   */\n+  public static final int NONE_OPTION = -1;\n+\n+  static Color debugFlashColor = Color.RED;\n+  static int debugFlashCount = 10;\n+  static int debugFlashTime = 1000;\n+  static PrintStream debugLogStream = System.out;\n \n   /**\n    * graphics\n    */\n   Graphics graphics;\n \n+  /**\n+   * color\n+   */\n+  Color color = Color.BLACK;\n+  \n   /**\n    * buffer\n    */\n@@ -87,26 +116,6 @@ public class DebugGraphics extends Graphics\n    */\n   int yOffset;\n \n-  /**\n-   * LOG_OPTION\n-   */\n-  public static final int LOG_OPTION = 1;\n-\n-  /**\n-   * FLASH_OPTION\n-   */\n-  public static final int FLASH_OPTION = 2;\n-\n-  /**\n-   * BUFFERED_OPTION\n-   */\n-  public static final int BUFFERED_OPTION = 4;\n-\n-  /**\n-   * NONE_OPTION\n-   */\n-  public static final int NONE_OPTION = -1;\n-\n   /**\n    * Creates a <code>DebugGraphics</code> object.\n    */\n@@ -116,55 +125,62 @@ public DebugGraphics()\n   }\n \n   /**\n-   * Constructor DebugGraphics\n-   * @param graphics TODO\n+   * Creates a <code>DebugGraphics</code> object.\n+   *\n+   * @param graphics The <code>Graphics</code> object to wrap\n    * @param component TODO\n    */\n   public DebugGraphics(Graphics graphics, JComponent component)\n   {\n-    // TODO\n+    this.graphics = graphics;\n+    // FIXME: What shall we do with component ?\n   }\n \n   /**\n-   * Constructor DebugGraphics\n-   * @param graphics TODO\n+   * Creates a <code>DebugGraphics</code> object.\n+   *\n+   * @param graphics The <code>Graphics</code> object to wrap\n    */\n   public DebugGraphics(Graphics graphics)\n   {\n-    // TODO\n+    this.graphics = graphics;\n   }\n \n   /**\n-   * setColor\n-   * @param value0 TODO\n+   * Sets the color to draw stuff with.\n+   * \n+   * @param color The color\n    */\n   public void setColor(Color color)\n   {\n-    // TODO\n+    this.color = color;\n   }\n \n   /**\n-   * create\n+   * Creates a overrides <code>Graphics.create</code> to create a\n+   * <code>DebugGraphics</code> object.\n    *\n-   * @return Graphics\n+   * @return a new <code>DebugGraphics</code> object.\n    */\n   public Graphics create()\n   {\n-    return null; // TODO\n+    return new DebugGraphics(graphics.create());\n   }\n \n   /**\n-   * create\n+   * Creates a overrides <code>Graphics.create</code> to create a\n+   * <code>DebugGraphics</code> object.\n    *\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n-   * @returns Graphics\n+   * @param x the x coordinate\n+   * @param y the y coordinate\n+   * @param width the width\n+   * @param height the height\n+   *\n+   * @return a new <code>DebugGraphics</code> object.\n    */\n-  public Graphics create(int valx, int y, int w, int h)\n+  public Graphics create(int x, int y, int width, int height)\n   {\n-    return null; // TODO\n+    return new DebugGraphics(graphics.create(x, y, width, height));\n   }\n \n   /**\n@@ -174,7 +190,7 @@ public Graphics create(int valx, int y, int w, int h)\n    */\n   public static Color flashColor()\n   {\n-    return null; // TODO\n+    return debugFlashColor;\n   }\n \n   /**\n@@ -184,7 +200,7 @@ public static Color flashColor()\n    */\n   public static void setFlashColor(Color color)\n   {\n-    // TODO\n+    debugFlashColor = color;\n   }\n \n   /**\n@@ -194,7 +210,7 @@ public static void setFlashColor(Color color)\n    */\n   public static int flashTime()\n   {\n-    return 0; // TODO\n+    return debugFlashTime;\n   }\n \n   /**\n@@ -204,16 +220,17 @@ public static int flashTime()\n    */\n   public static void setFlashTime(int time)\n   {\n-    // TODO\n+    debugFlashTime = time;\n   }\n \n   /**\n    * flashCount\n-   * @returns int\n+   *\n+   * @return The number of flashes\n    */\n   public static int flashCount()\n   {\n-    return 0; // TODO\n+    return debugFlashCount;\n   }\n \n   /**\n@@ -223,7 +240,7 @@ public static int flashCount()\n    */\n   public static void setFlashCount(int count)\n   {\n-    // TODO\n+    debugFlashCount = count;\n   }\n \n   /**\n@@ -233,7 +250,7 @@ public static void setFlashCount(int count)\n    */\n   public static PrintStream logStream()\n   {\n-    return null; // TODO\n+    return debugLogStream;\n   }\n \n   /**\n@@ -243,16 +260,17 @@ public static PrintStream logStream()\n    */\n   public static void setLogStream(PrintStream stream)\n   {\n-    // TODO\n+    debugLogStream = stream;\n   }\n \n   /**\n    * getFont\n-   * @returns Font\n+   *\n+   * @return The font\n    */\n   public Font getFont()\n   {\n-    return null; // TODO\n+    return graphics.getFont();\n   }\n \n   /**\n@@ -262,284 +280,342 @@ public Font getFont()\n    */\n   public void setFont(Font font)\n   {\n-    // TODO\n+    graphics.setFont(font);\n   }\n \n   /**\n-   * getColor\n-   * @returns Color\n+   * Returns the color used for drawing.\n+   * \n+   * @return The color.\n    */\n   public Color getColor()\n   {\n-    return null; // TODO\n+    return color;\n   }\n \n   /**\n-   * getFontMetrics\n-   * @returns FontMetrics\n+   * Returns the font metrics of the current font.\n+   *\n+   * @return a <code>FontMetrics</code> object\n    */\n   public FontMetrics getFontMetrics()\n   {\n-    return null; // TODO\n+    return graphics.getFontMetrics();\n   }\n \n   /**\n-   * getFontMetrics\n-   * @param font TODO\n-   * @returns FontMetrics\n+   * Returns the font metrics for a given font.\n+   *\n+   * @param font the font to get the metrics for\n+   *\n+   * @return a <code>FontMetrics</code> object\n    */\n   public FontMetrics getFontMetrics(Font font)\n   {\n-    return null; // TODO\n+    return graphics.getFontMetrics(font);\n   }\n \n   /**\n    * translate\n    *\n-   * @param x TODO\n-   * @param y TODO\n+   * @param x the x coordinate\n+   * @param y the y coordinate\n    */\n   public void translate(int x, int y)\n   {\n-    // TODO\n+    graphics.translate(x, y);\n   }\n \n   /**\n    * setPaintMode\n    */\n   public void setPaintMode()\n   {\n-    // TODO\n+    graphics.setPaintMode();\n   }\n \n   /**\n    * setXORMode\n    *\n-   * @param color TODO\n+   * @param color the color\n    */\n   public void setXORMode(Color color)\n   {\n-    // TODO\n+    graphics.setXORMode(color);\n   }\n \n   /**\n    * getClipBounds\n-   * @returns Rectangle\n+   *\n+   * @return Rectangle\n    */\n   public Rectangle getClipBounds()\n   {\n-    return null; // TODO\n+    return graphics.getClipBounds();\n   }\n \n   /**\n-   * clipRect\n-   * @param value0 TODO\n-   * @param value1 TODO\n-   * @param value2 TODO\n-   * @param value3 TODO\n+   * Intersects the current clip region with the given region.\n+   *\n+   * @param x The x-position of the region\n+   * @param y The y-position of the region\n+   * @param width The width of the region\n+   * @param height The height of the region\n    */\n-  public void clipRect(int value0, int value1, int value2, int value3)\n+  public void clipRect(int x, int y, int width, int height)\n   {\n-    // TODO\n+    graphics.clipRect(x, y, width, height);\n   }\n \n   /**\n-   * setClip\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   * Sets the clipping region.\n+   *\n+   * @param x The x-position of the region\n+   * @param y The y-position of the region\n+   * @param width The width of the region\n+   * @param height The height of the region\n    */\n-  public void setClip(int x, int y, int w, int h)\n+  public void setClip(int x, int y, int width, int height)\n   {\n-    // TODO\n+    graphics.setClip(x, y, width, height);\n   }\n \n   /**\n-   * getClip\n-   * @returns Shape\n+   * Returns the current clipping region.\n+   *\n+   * @return Shape\n    */\n   public Shape getClip()\n   {\n-    return null; // TODO\n+    return graphics.getClip();\n   }\n \n   /**\n-   * setClip\n-   * @param shape TODO\n+   * Sets the current clipping region\n+   *\n+   * @param shape The clippin region\n    */\n   public void setClip(Shape shape)\n   {\n-    // TODO\n+    graphics.setClip(shape);\n   }\n \n+  private void sleep(int milliseconds)\n+  {\n+    try\n+      {\n+\tThread.sleep(milliseconds);\n+      }\n+    catch (InterruptedException e)\n+      {\n+\t// Ignore this.\n+      }\n+  }\n+  \n   /**\n-   * drawRect\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param valh TODO\n+   * Draws a rectangle.\n+   *\n+   * @param x The x-position of the rectangle\n+   * @param y The y-position of the rectangle\n+   * @param width The width of the rectangle\n+   * @param height The height of the rectangle\n    */\n-  public void drawRect(int x, int y, int w, int h)\n+  public void drawRect(int x, int y, int width, int height)\n   {\n-    // TODO\n-  } // drawRect()\n+    for (int index = 0; index < (debugFlashCount - 1); ++index)\n+      {\n+\tgraphics.setColor(color);\n+\tgraphics.drawRect(x, y, width, height);\n+\tsleep(debugFlashTime);\n+\t\n+\tgraphics.setColor(debugFlashColor);\n+\tgraphics.drawRect(x, y, width, height);\n+\tsleep(debugFlashTime);\n+      }\n+\n+    graphics.setColor(color);\n+    graphics.drawRect(x, y, width, height);\n+  }\n \n   /**\n-   * fillRect\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   * Draws a filled rectangle.\n+   *\n+   * @param x The x-position of the rectangle\n+   * @param y The y-position of the rectangle\n+   * @param width The width of the rectangle\n+   * @param height The height of the rectangle\n    */\n-  public void fillRect(int x, int y, int w, int h)\n+  public void fillRect(int x, int y, int width, int height)\n   {\n-    // TODO\n-  } // fillRect()\n+    for (int index = 0; index < (debugFlashCount - 1); ++index)\n+      {\n+\tgraphics.setColor(color);\n+\tgraphics.fillRect(x, y, width, height);\n+\tsleep(debugFlashTime);\n+\t\n+\tgraphics.setColor(debugFlashColor);\n+\tgraphics.fillRect(x, y, width, height);\n+\tsleep(debugFlashTime);\n+      }\n+\n+    graphics.setColor(color);\n+    graphics.fillRect(x, y, width, height);\n+  }\n \n   /**\n    * clearRect\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   *\n+   * @param x The x-position of the rectangle\n+   * @param y The y-position of the rectangle\n+   * @param width The width of the rectangle\n+   * @param height The height of the rectangle\n    */\n-  public void clearRect(int x, int y, int w, int h)\n+  public void clearRect(int x, int y, int width, int height)\n   {\n-    // TODO\n+    graphics.clearRect(x, y, width, height);\n   }\n \n   /**\n    * drawRoundRect\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   *\n+   * @param x The x-position of the rectangle\n+   * @param y The y-position of the rectangle\n+   * @param width The width of the rectangle\n+   * @param height The height of the rectangle\n    * @param arcWidth TODO\n    * @param arcHeight TODO\n    */\n-  public void drawRoundRect(int x, int y, int w, int h, int arcWidth,\n-                            int arcHeight)\n+  public void drawRoundRect(int x, int y, int width, int height, \n+\t\t\t    int arcWidth, int arcHeight)\n   {\n-    // TODO\n+    graphics.drawRoundRect(x, y, width, height, arcWidth, arcHeight);\n   }\n \n   /**\n    * fillRoundRect\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   *\n+   * @param x The x-position of the rectangle\n+   * @param y The y-position of the rectangle\n+   * @param width The width of the rectangle\n+   * @param height The height of the rectangle\n    * @param arcWidth TODO\n    * @param arcHeight TODO\n    */\n-  public void fillRoundRect(int x, int y, int w, int h, int arcWidth,\n-                            int arcHeight)\n+  public void fillRoundRect(int x, int y, int width, int height, \n+\t\t\t    int arcWidth, int arcHeight)\n   {\n-    // TODO\n+    graphics.fillRoundRect(x, y, width, height, arcWidth, arcHeight);\n   }\n \n   /**\n    * drawLine\n-   * @param x1 TODO\n-   * @param y1 TODO\n-   * @param x2 TODO\n-   * @param y2 TODO\n+   *\n+   * @param x1 The x-position of the start \n+   * @param y1 The y-position of the start\n+   * @param x2 The x-position of the end\n+   * @param y2 The y-position of the end\n    */\n   public void drawLine(int x1, int y1, int x2, int y2)\n   {\n-    // TODO\n+    graphics.drawLine(x1, y1, x2, y2);\n   }\n \n   /**\n    * draw3DRect\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   *\n+   * @param x The x-position of the rectangle\n+   * @param y The y-position of the rectangle\n+   * @param width The width of the rectangle\n+   * @param height The height of the rectangle\n    * @param raised TODO\n    */\n-  public void draw3DRect(int x, int y, int w, int h, boolean raised)\n+  public void draw3DRect(int x, int y, int width, int height, boolean raised)\n   {\n-    // TODO\n+    graphics.draw3DRect(x, y, width, height, raised);\n   }\n \n   /**\n    * fill3DRect\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   *\n+   * @param x The x-position of the rectangle\n+   * @param y The y-position of the rectangle\n+   * @param width The width of the rectangle\n+   * @param height The height of the rectangle\n    * @param raised TODO\n    */\n-  public void fill3DRect(int x, int y, int w, int h, boolean raised)\n+  public void fill3DRect(int x, int y, int width, int height, boolean raised)\n   {\n-    // TODO\n+    graphics.fill3DRect(x, y, width, height, raised);\n   }\n \n   /**\n    * drawOval\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   *\n+   * @param x the x coordinate\n+   * @param y the y coordiante\n+   * @param width the width\n+   * @param height the height\n    */\n-  public void drawOval(int x, int y, int w, int h)\n+  public void drawOval(int x, int y, int width, int height)\n   {\n-    // TODO\n+    graphics.drawOval(x, y, width, height);\n   }\n \n   /**\n    * fillOval\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   *\n+   * @param x the x coordinate\n+   * @param y the y coordinate\n+   * @param width the width\n+   * @param height the height\n    */\n-  public void fillOval(int x, int y, int w, int h)\n+  public void fillOval(int x, int y, int width, int height)\n   {\n-    // TODO\n+    graphics.fillOval(x, y, width, height);\n   }\n \n   /**\n    * drawArc\n    *\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   * @param x the x coordinate\n+   * @param y the y coordinate\n+   * @param width the width\n+   * @param height the height\n    * @param startAngle TODO\n    * @param arcAngle TODO\n    */\n-  public void drawArc(int x, int y, int w, int h, int startAngle, int arcAngle)\n+  public void drawArc(int x, int y, int width, int height, \n+\t\t      int startAngle, int arcAngle)\n   {\n-    // TODO\n+    graphics.drawArc(x, y, width, height, startAngle, arcAngle);\n   }\n \n   /**\n    * fillArc\n    *\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n+   * @param x the coordinate\n+   * @param y the y coordinate\n+   * @param width the width\n+   * @param height the height\n    * @param startAngle TODO\n    * @param arcAngle TODO\n    */\n-  public void fillArc(int x, int y, int w, int h, int startAngle, int arcAngle)\n+  public void fillArc(int x, int y, int width, int height, \n+\t\t      int startAngle, int arcAngle)\n   {\n-    // TODO\n+    graphics.fillArc(x, y, width, height, startAngle, arcAngle);\n   }\n \n   /**\n    * drawPolyline\n+   *\n    * @param xpoints TODO\n    * @param ypoints TODO\n    * @param npoints TODO\n    */\n   public void drawPolyline(int[] xpoints, int[] ypoints, int npoints)\n   {\n-    // TODO\n+    graphics.drawPolyline(xpoints, ypoints, npoints);\n   }\n \n   /**\n@@ -551,7 +627,7 @@ public void drawPolyline(int[] xpoints, int[] ypoints, int npoints)\n    */\n   public void drawPolygon(int[] xpoints, int[] ypoints, int npoints)\n   {\n-    // TODO\n+    graphics.drawPolygon(xpoints, ypoints, npoints);\n   }\n \n   /**\n@@ -563,31 +639,32 @@ public void drawPolygon(int[] xpoints, int[] ypoints, int npoints)\n    */\n   public void fillPolygon(int[] xpoints, int[] ypoints, int npoints)\n   {\n-    // TODO\n+    graphics.fillPolygon(xpoints, ypoints, npoints);\n   }\n \n   /**\n    * drawString\n    *\n-   * @param string TODO\n-   * @param x TODO\n-   * @param y TODO\n+   * @param string the string\n+   * @param x the x coordinate\n+   * @param y the y coordinate\n    */\n-  public void drawString(String string, int s, int y)\n+  public void drawString(String string, int x, int y)\n   {\n-    // TODO\n+    graphics.drawString(string, x, y);\n   }\n \n   /**\n    * drawString\n    *\n    * @param iterator TODO\n-   * @param x TODO\n-   * @param y TODO\n+   * @param x the x coordinate\n+   * @param y the y coordinate\n    */\n-  public void drawString(AttributedCharacterIterator iterator, int x, int y)\n+  public void drawString(AttributedCharacterIterator iterator,\n+\t\t\t int x, int y)\n   {\n-    // TODO\n+    graphics.drawString(iterator, x, y);\n   }\n \n   /**\n@@ -596,86 +673,111 @@ public void drawString(AttributedCharacterIterator iterator, int x, int y)\n    * @param data TODO\n    * @param offset TODO\n    * @param length TODO\n-   * @param x TODO\n-   * @param y TODO\n+   * @param x the x coordinate\n+   * @param y the y coordinate\n    */\n-  public void drawBytes(byte[] data, int offset, int length, int x, int y)\n+  public void drawBytes(byte[] data, int offset, int length,\n+\t\t\tint x, int y)\n   {\n-    // TODO\n+    graphics.drawBytes(data, offset, length, x, y);\n   }\n \n   /**\n    * drawChars\n-   * @param data TODO\n-   * @param offset TODO\n-   * @param length TODO\n-   * @param value3 TODO\n-   * @param value4 TODO\n+   * \n+   * @param data array of characters to draw\n+   * @param offset offset in array\n+   * @param length number of characters in array to draw\n+   * @param x x-position\n+   * @param y y-position\n    */\n-  public void drawChars(char[] data, int offset, int value2, int x, int y)\n+  public void drawChars(char[] data, int offset, int length, \n+\t\t\tint x, int y)\n   {\n-    // TODO\n-  } // drawChars()\n+    for (int index = 0; index < (debugFlashCount - 1); ++index)\n+      {\n+\tgraphics.setColor(color);\n+\tgraphics.drawChars(data, offset, length, x, y);\n+\tsleep(debugFlashTime);\n+\t\n+\tgraphics.setColor(debugFlashColor);\n+\tgraphics.drawChars(data, offset, length, x, y);\n+\tsleep(debugFlashTime);\n+      }\n+\n+    graphics.setColor(color);\n+    graphics.drawChars(data, offset, length, x, y);\n+  }\n \n   /**\n    * drawImage\n-   * @param image TODO\n-   * @param x TODO\n-   * @param y TODO\n-   * @param observer TODO\n-   * @returns boolean\n+   *\n+   * @param image The image to draw\n+   * @param x The x position\n+   * @param y The y position\n+   * @param observer The image observer\n+   * @return boolean\n    */\n-  public boolean drawImage(Image image, int x, int y, ImageObserver observer)\n+  public boolean drawImage(Image image, int x, int y,\n+\t\t\t   ImageObserver observer)\n   {\n-    return false; // TODO\n+    return graphics.drawImage(image, x, y, observer);\n   }\n \n   /**\n    * drawImage\n-   * @param image TODO\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n-   * @param observer TODO\n-   * @returns boolean\n+   * \n+   * @param image The image to draw\n+   * @param x The x position\n+   * @param y The y position\n+   * @param width The width of the area to draw the image\n+   * @param height The height of the area to draw the image\n+   * @param observer The image observer\n+   *\n+   * @return boolean\n    */\n-  public boolean drawImage(Image image, int x, int y, int w, int h,\n-                           ImageObserver observer)\n+  public boolean drawImage(Image image, int x, int y, int width, \n+\t\t\t   int height, ImageObserver observer)\n   {\n-    return false; // TODO\n+    return graphics.drawImage(image, x, y, width, height, observer);\n   }\n \n   /**\n    * drawImage\n-   * @param image TODO\n-   * @param x TODO\n-   * @param y TODO\n-   * @param background TODO\n-   * @param observer TODO\n-   * @returns boolean\n+   * \n+   * @param image The image to draw\n+   * @param x The x position\n+   * @param y The y position\n+   * @param background The color for the background in the opaque regions\n+   * of the image\n+   * @param observer The image observer\n+   *\n+   * @return boolean\n    */\n-  public boolean drawImage(Image image, int x, int y, Color background,\n-                           ImageObserver observer)\n+  public boolean drawImage(Image image, int x, int y, \n+\t\t\t   Color background, ImageObserver observer)\n   {\n-    return false; // TODO\n+    return graphics.drawImage(image, x, y, background, observer);\n   }\n \n   /**\n    * drawImage\n-   * @param image TODO\n-   * @param x TODO\n-   * @param y TODO\n-   * @param w TODO\n-   * @param h TODO\n-   * @param background TODO\n-   * @param observer TODO\n-   * @returns boolean\n-   */\n-  public boolean drawImage(Image image, int x, int y, int w, int h,\n-                           Color background, ImageObserver observer)\n+   * \n+   * @param image The image to draw\n+   * @param x The x position\n+   * @param y The y position\n+   * @param width The width of the area to draw the image\n+   * @param height The height of the area to draw the image\n+   * @param background The color for the background in the opaque regions\n+   * of the image\n+   * @param observer The image observer\n+   *\n+   * @return boolean\n+   */\n+  public boolean drawImage(Image image, int x, int y, int width, int height, \n+\t\t\t   Color background, ImageObserver observer)\n   {\n-    return false; // TODO\n+    return graphics.drawImage(image, x, y, width, height, background, observer);\n   }\n \n   /**\n@@ -690,14 +792,15 @@ public boolean drawImage(Image image, int x, int y, int w, int h,\n    * @param sy1 TODO\n    * @param sx2 TODO\n    * @param sy2 TODO\n-   * @param observer TODO\n-   * @returns boolean\n+   * @param observer The image observer\n+   * \n+   * @return boolean\n    */\n-  public boolean drawImage(Image image, int dx1, int dy1, int dx2, int dy2,\n-                           int sx1, int sy1, int sx2, int sy2,\n-                           ImageObserver observer)\n+  public boolean drawImage(Image image, int dx1, int dy1,\n+\t\t\t   int dx2, int dy2, int sx1, int sy1, int sx2, int sy2,\n+\t\t\t   ImageObserver observer)\n   {\n-    return false; // TODO\n+    return graphics.drawImage(image, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, observer);\n   }\n \n   /**\n@@ -712,15 +815,17 @@ public boolean drawImage(Image image, int dx1, int dy1, int dx2, int dy2,\n    * @param sy1 TODO\n    * @param sx2 TODO\n    * @param sy2 TODO\n-   * @param background TODO\n-   * @param observer TODO\n-   * @returns boolean\n+   * @param background The color for the background in the opaque regions\n+   * of the image\n+   * @param observer The image observer\n+   *\n+   * @return boolean\n    */\n-  public boolean drawImage(Image image, int dx1, int dy1, int dx2, int dy2,\n-                           int sx1, int sy1, int sx2, int sy2,\n-                           Color background, ImageObserver observer)\n+  public boolean drawImage(Image image, int dx1, int dy1,\n+\t\t\t   int dx2, int dy2, int sx1, int sy1, int sx2, int sy2,\n+\t\t\t   Color background, ImageObserver observer)\n   {\n-    return false; // TODO\n+    return graphics.drawImage(image, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, background, observer);\n   }\n \n   /**\n@@ -733,17 +838,19 @@ public boolean drawImage(Image image, int dx1, int dy1, int dx2, int dy2,\n    * @param destx The x position of the destination area\n    * @param desty The y posiiton of the destination area\n    */\n-  public void copyArea(int x, int y, int w, int h, int destx, int desty)\n+  public void copyArea(int x, int y, int width, int height, \n+\t\t       int destx, int desty)\n   {\n-    // TODO\n+    graphics.copyArea(x, y, width, height, destx, desty);\n   }\n \n   /**\n    * Releases all system resources that this <code>Graphics</code> is using.\n    */\n   public void dispose()\n   {\n-    // TODO\n+    graphics.dispose();\n+    graphics = null;\n   }\n \n   /**\n@@ -756,23 +863,14 @@ public boolean isDrawingBuffer()\n     return false; // TODO\n   }\n \n-  /**\n-   * toShortString\n-   * @returns String\n-   */\n-  String toShortString()\n-  {\n-    return null; // TODO\n-  } // toShortString()\n-\n   /**\n    * setDebugOptions\n    *\n    * @param options the debug options\n    */\n   public void setDebugOptions(int options)\n   {\n-    // TODO\n+    debugOptions = options;\n   }\n \n   /**\n@@ -782,6 +880,6 @@ public void setDebugOptions(int options)\n    */\n   public int getDebugOptions()\n   {\n-    return 0; // TODO\n+    return debugOptions;\n   }\n }"}, {"sha": "65bd30c84e1ff742764763349166c5e791165540", "filename": "libjava/javax/swing/DefaultBoundedRangeModel.java", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -47,7 +47,7 @@\n import javax.swing.event.EventListenerList;\n \n /**\n- * A default implementation of BoundedRangeModel.\n+ * A default implementation of <code>BoundedRangeModel</code>.\n  *\n  * @author <a href=\"mailto:aselkirk@sympatico.ca\">Andrew Selkirk</a>\n  * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n@@ -59,15 +59,15 @@\n    * The identifier of this class in object serialization. Verified\n    * using the serialver tool of Sun J2SE 1.4.1_01.\n    */\n-  static final long serialVersionUID = 5034068491295259790L;\n+  private static final long serialVersionUID = 5034068491295259790L;\n \n \n   /**\n    * An event that is sent to all registered {@link ChangeListener}s\n    * when the state of this range model has changed.\n    *\n    * <p>The event object is created on demand, the first time it\n-   * is actually needed.\n+   * is actually needed.</p>\n    *\n    * @see #fireStateChanged()\n    */\n@@ -155,7 +155,7 @@ public DefaultBoundedRangeModel()\n    * @param maximum the initial maximal value of the range model.\n    *\n    * @throws IllegalArgumentException if the following condition is\n-   * not satisfied: <code>minimum <= value <= value + extent <=\n+   * not satisfied: <code>minimum &lt;= value &lt;= value + extent &lt;=\n    * maximum</code>.\n    */\n   public DefaultBoundedRangeModel(int value, int extent, int minimum,\n@@ -176,6 +176,8 @@ public DefaultBoundedRangeModel(int value, int extent, int minimum,\n   /**\n    * Returns a string with all relevant properties of this range\n    * model.\n+   *\n+   * @return a string representing the object\n    */\n   public String toString()\n   {\n@@ -193,6 +195,8 @@ public String toString()\n    * Returns the current value of this bounded range model.  In a\n    * scroll bar visualization of a {@link BoundedRangeModel}, the\n    * <code>value</code> is displayed as the position of the thumb.\n+   *\n+   * @return the value\n    */\n   public int getValue()\n   {\n@@ -206,6 +210,8 @@ public int getValue()\n    * <code>value</code> is displayed as the position of the thumb;\n    * changing the <code>value</code> of a scroll bar's model\n    * thus moves the thumb to a different position.\n+   *\n+   * @param value the value\n    */\n   public void setValue(int value)\n   {\n@@ -226,6 +232,8 @@ public void setValue(int value)\n    * a number greater than or equal to zero. In a scroll bar\n    * visualization of a {@link BoundedRangeModel}, the\n    * <code>extent</code> is displayed as the size of the thumb.\n+   *\n+   * @return the extent\n    */\n   public int getExtent()\n   {\n@@ -282,6 +290,8 @@ public void setMinimum(int minimum)\n \n   /**\n    * Returns the current maximal value of this bounded range model.\n+   *\n+   * @return the maximum\n    */\n   public int getMaximum()\n   {\n@@ -313,7 +323,7 @@ public void setMaximum(int maximum)\n    * around; when the mouse is relased, they set the property to\n    * <code>false</code> and post a final {@link ChangeEvent}.\n    *\n-   * @returns <code>true</code> if the value will change soon again;\n+   * @return <code>true</code> if the value will change soon again;\n    * <code>false</code> if the value will probably not change soon.\n    */\n   public boolean getValueIsAdjusting()\n@@ -344,7 +354,7 @@ public void setValueIsAdjusting(boolean isAdjusting)\n \n \n   /**\n-   * setRangeProperties\n+   * Sets all properties.\n    *\n    * @param value the new value of the range model.  In a scroll bar\n    * visualization of a {@link BoundedRangeModel}, the\n@@ -422,16 +432,13 @@ public void removeChangeListener(ChangeListener listener)\n    */\n   protected void fireStateChanged()\n   {\n-    Object[] listeners;\n-\n-    listeners = listenerList.getListenerList();\n-    for (int i = listeners.length - 2; i >= 0; i -= 2)\n-      if (listeners[i] == ChangeListener.class)\n-        {\n-          if (changeEvent == null)\n-            changeEvent = new ChangeEvent(this);\n-          ((ChangeListener) listeners[i + 1]).stateChanged(changeEvent);\n-        }\n+    ChangeListener[] listeners = getChangeListeners();\n+    \n+    if (changeEvent == null)\n+      changeEvent = new ChangeEvent(this);\n+\n+    for (int i = listeners.length - 1; i >= 0; --i)\n+      listeners[i].stateChanged(changeEvent);\n   }\n \n "}, {"sha": "0473f53bc211245b8308fb81f83901b6b3388802", "filename": "libjava/javax/swing/DefaultButtonModel.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultButtonModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -71,7 +71,7 @@\n public class DefaultButtonModel implements ButtonModel, Serializable\n {\n   /** DOCUMENT ME! */\n-  static final long serialVersionUID = -5342609566534980231L;\n+  private static final long serialVersionUID = -5342609566534980231L;\n \n   /**\n    * Indicates that the button is <em>partially</em> committed to being\n@@ -272,7 +272,7 @@ public ChangeListener[] getChangeListeners()\n    *\n    * @param e The ItemEvent to fire\n    */\n-  public void fireItemStateChanged(ItemEvent e)\n+  protected void fireItemStateChanged(ItemEvent e)\n   {\n     ItemListener[] ll = getItemListeners();\n \n@@ -288,7 +288,7 @@ public void fireItemStateChanged(ItemEvent e)\n    *\n    * @param e The ActionEvent to fire\n    */\n-  public void fireActionPerformed(ActionEvent e)\n+  protected void fireActionPerformed(ActionEvent e)\n   {\n     ActionListener[] ll = getActionListeners();\n \n@@ -301,7 +301,7 @@ public void fireActionPerformed(ActionEvent e)\n    * has occurred. This happens in response to the any change to a property\n    * of the model.\n    */\n-  public void fireStateChanged()\n+  protected void fireStateChanged()\n   {\n     ChangeListener[] ll = getChangeListeners();\n \n@@ -315,7 +315,7 @@ public void fireStateChanged()\n    * @param stateflag DOCUMENT ME!\n    * @param b DOCUMENT ME!\n    */\n-  protected void changeState(int stateflag, boolean b)\n+  private void changeState(int stateflag, boolean b)\n   {\n     int oldstate = stateMask;\n     int newstate;"}, {"sha": "26bf708be2d1864724ac9349ab95b668e5937940", "filename": "libjava/javax/swing/DefaultCellEditor.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultCellEditor.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -58,7 +58,7 @@\n   extends AbstractCellEditor\n   implements TableCellEditor, TreeCellEditor\n {\n-  static final long serialVersionUID = 3564035141373880027L;\n+  private static final long serialVersionUID = 3564035141373880027L;\n \n   /**\n    * EditorDelegate"}, {"sha": "c2ece643551afbef0a86aa6e1b04a17f732e3969", "filename": "libjava/javax/swing/DefaultComboBoxModel.java", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultComboBoxModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultComboBoxModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultComboBoxModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -50,12 +50,13 @@\n  *\n  * @author Andrew Selkirk\n  * @author Olga Rodimina\n+ * @author Robert Schuster\n  * @version 1.0\n  */\n public class DefaultComboBoxModel extends AbstractListModel\n   implements MutableComboBoxModel, Serializable\n {\n-  static final long serialVersionUID = 6698657703676921904L;\n+  private static final long serialVersionUID = 6698657703676921904L;\n \n   /**\n    * List containing items in the combo box\n@@ -182,13 +183,23 @@ public int getSize()\n    * ListDataEvent to all registered ListDataListeners of the JComboBox. The\n    * start and end index of the event is set to -1 to indicate combo box's\n    * selection has changed, and not its contents.\n+   * \n+   * <p>If the given object is not contained in the combo box list then nothing\n+   * happens.</p>\n    *\n    * @param object item to select in the JComboBox\n    */\n   public void setSelectedItem(Object object)\n   {\n-    selectedItem = object;\n-    fireContentsChanged(this, -1, -1);\n+    \n+    /* Updates the selected item only if the given object\n+     * is null or in the list (this is how the JDK behaves).\n+     */ \n+    if(object == null || list.contains(object)) {\n+\tselectedItem = object;\n+\tfireContentsChanged(this, -1, -1);\n+    }\n+  \t\n   }\n \n   /**"}, {"sha": "a0dd5e2d1a156a129f25a568990dd998f402b94b", "filename": "libjava/javax/swing/DefaultDesktopManager.java", "status": "modified", "additions": 30, "deletions": 29, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultDesktopManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultDesktopManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultDesktopManager.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* DefaultDesktopManager.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,6 +35,7 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n import java.awt.Component;\n@@ -56,7 +57,7 @@\n public class DefaultDesktopManager implements DesktopManager, Serializable\n {\n   /** DOCUMENT ME! */\n-  static final long serialVersionUID = 4657624909838017887L;\n+  private static final long serialVersionUID = 4657624909838017887L;\n \n   /** The property change event fired when the wasIcon property changes. */\n   static final String WAS_ICON_ONCE_PROPERTY = \"wasIconOnce\";\n@@ -80,7 +81,7 @@ public class DefaultDesktopManager implements DesktopManager, Serializable\n   private transient Container pane;\n \n   /**\n-   * An array of Rectangles that holds the bounds of the JDesktopIcons in the \n+   * An array of Rectangles that holds the bounds of the JDesktopIcons in the\n    * JDesktopPane when looking for where to place a new icon.\n    */\n   private transient Rectangle[] iconRects;\n@@ -90,7 +91,7 @@ public class DefaultDesktopManager implements DesktopManager, Serializable\n    */\n   public DefaultDesktopManager()\n   {\n-  } // DefaultDesktopManager()\n+  }\n \n   /**\n    * This method is not normally called since the user will typically add the\n@@ -111,7 +112,7 @@ public void openFrame(JInternalFrame frame)\n     c.remove(frame.getDesktopIcon());\n     c.add(frame);\n     frame.setVisible(true);\n-  } // openFrame()\n+  }\n \n   /**\n    * This method removes the JInternalFrame and JDesktopIcon (if one is\n@@ -132,7 +133,7 @@ public void closeFrame(JInternalFrame frame)\n \t  c.remove(frame);\n \tc.repaint();\n       }\n-  } // closeFrame()\n+  }\n \n   /**\n    * This method resizes the JInternalFrame to match its parent's bounds.\n@@ -171,7 +172,7 @@ public void maximizeFrame(JInternalFrame frame)\n \t    // Do nothing.\n \t  }\n       }\n-  } // maximizeFrame()\n+  }\n \n   /**\n    * This method restores the JInternalFrame's bounds to what they were\n@@ -200,7 +201,7 @@ public void minimizeFrame(JInternalFrame frame)\n \n     setBoundsForFrame(frame, normalBounds.x, normalBounds.y,\n                       normalBounds.width, normalBounds.height);\n-  } // minimizeFrame()\n+  }\n \n   /**\n    * This method removes the JInternalFrame from its parent and adds its\n@@ -231,7 +232,7 @@ public void iconifyFrame(JInternalFrame frame)\n       {\n \tRectangle r = getBoundsForIconOf(frame);\n \ticon.setBounds(r);\n-\tsetWasIcon(frame, true);\n+\tsetWasIcon(frame, Boolean.TRUE);\n       }\n \n     if (c != null)\n@@ -243,7 +244,7 @@ public void iconifyFrame(JInternalFrame frame)\n \t  }\n \tc.remove(frame);\n       }\n-  } // iconifyFrame()\n+  }\n \n   /**\n    * This method removes the JInternalFrame's JDesktopIcon representation and\n@@ -279,7 +280,7 @@ public void deiconifyFrame(JInternalFrame frame)\n       }\n \n     c.invalidate();\n-  } // deiconifyFrame()\n+  }\n \n   /**\n    * This method activates the JInternalFrame by moving it to the front and\n@@ -305,7 +306,7 @@ public void activateFrame(JInternalFrame frame)\n       }\n \n     frame.toFront();\n-  } // activateFrame()\n+  }\n \n   /**\n    * This method is called when the JInternalFrame loses focus.\n@@ -330,7 +331,7 @@ public void deactivateFrame(JInternalFrame frame)\n \t  {\n \t  }\n       }\n-  } // deactivateFrame()\n+  }\n \n   /**\n    * This method is called to indicate that the DesktopManager should prepare\n@@ -354,7 +355,7 @@ public void beginDraggingFrame(JComponent component)\n       currentDragMode = JDesktopPane.LIVE_DRAG_MODE;\n     else\n       currentDragMode = ((JDesktopPane) pane).getDragMode();\n-  } // beginDraggingFrame()\n+  }\n \n   /**\n    * This method is called to drag the JInternalFrame to a new location.\n@@ -378,7 +379,7 @@ public void dragFrame(JComponent component, int newX, int newY)\n \t  setBoundsForFrame((JInternalFrame) component, newX, newY, b.width,\n \t                    b.height);\n       }\n-  } // dragFrame()\n+  }\n \n   /**\n    * This method indicates that the dragging is done. Any state information\n@@ -396,7 +397,7 @@ public void endDraggingFrame(JComponent component)\n \tdragCache = null;\n       }\n     component.repaint();\n-  } // endDraggingFrame()\n+  }\n \n   /**\n    * This method is called to indicate that the given JComponent will be\n@@ -417,7 +418,7 @@ public void beginResizingFrame(JComponent component, int direction)\n       currentDragMode = JDesktopPane.LIVE_DRAG_MODE;\n     else\n       currentDragMode = ((JDesktopPane) pane).getDragMode();\n-  } // beginResizingFrame()\n+  }\n \n   /**\n    * This method resizes the give JComponent.\n@@ -440,7 +441,7 @@ public void resizeFrame(JComponent component, int newX, int newY,\n     else\n       setBoundsForFrame(component, dragCache.x, dragCache.y, dragCache.width,\n                         dragCache.height);\n-  } // resizeFrame()\n+  }\n \n   /**\n    * This method is called to indicate that the given JComponent has finished\n@@ -459,7 +460,7 @@ public void endResizingFrame(JComponent component)\n \tdragCache = null;\n       }\n     component.repaint();\n-  } // endResizingFrame()\n+  }\n \n   /**\n    * This method calls setBounds with the given parameters and repaints the\n@@ -482,7 +483,7 @@ public void setBoundsForFrame(JComponent component, int newX, int newY,\n       component.getParent().repaint();\n     else\n       component.repaint();\n-  } // setBoundsForFrame()\n+  }\n \n   /**\n    * This is a helper method that removes the JDesktopIcon of the given\n@@ -496,7 +497,7 @@ protected void removeIconFor(JInternalFrame frame)\n     Container c = icon.getParent();\n     if (c != null && icon != null)\n       c.remove(icon);\n-  } // removeIconFor()\n+  }\n \n   /**\n    * This method is called by iconifyFrame to determine the bounds of the\n@@ -570,7 +571,7 @@ else if (frames[i] instanceof JInternalFrame\n       }\n \n     return ideal;\n-  } // getBoundsForIconOf()\n+  }\n \n   /**\n    * This method sets the bounds of the JInternalFrame right before the\n@@ -582,7 +583,7 @@ else if (frames[i] instanceof JInternalFrame\n   protected void setPreviousBounds(JInternalFrame frame, Rectangle rect)\n   {\n     frame.setNormalBounds(rect);\n-  } // setPreviousBounds()\n+  }\n \n   /**\n    * This method returns the normal bounds of the JInternalFrame from before\n@@ -595,7 +596,7 @@ protected void setPreviousBounds(JInternalFrame frame, Rectangle rect)\n   protected Rectangle getPreviousBounds(JInternalFrame frame)\n   {\n     return frame.getNormalBounds();\n-  } // getPreviousBounds()\n+  }\n \n   /**\n    * This method sets the value to true if the given JInternalFrame has been\n@@ -605,10 +606,10 @@ protected Rectangle getPreviousBounds(JInternalFrame frame)\n    * @param value True if the JInternalFrame has been iconized and the bounds\n    *        of the JDesktopIcon are valid.\n    */\n-  protected void setWasIcon(JInternalFrame frame, boolean value)\n+  protected void setWasIcon(JInternalFrame frame, Boolean value)\n   {\n-    frame.setWasIcon(value, WAS_ICON_ONCE_PROPERTY);\n-  } // setWasIcon()\n+    frame.setWasIcon(value.booleanValue(), WAS_ICON_ONCE_PROPERTY);\n+  }\n \n   /**\n    * This method returns true if the given JInternalFrame has been iconized\n@@ -622,5 +623,5 @@ protected void setWasIcon(JInternalFrame frame, boolean value)\n   protected boolean wasIcon(JInternalFrame frame)\n   {\n     return frame.getWasIcon();\n-  } // wasIcon()\n-} // DefaultDesktopManager\n+  }\n+}"}, {"sha": "91b8a8a2edddd5bdedced8acea4d3994a4782fb1", "filename": "libjava/javax/swing/DefaultListCellRenderer.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListCellRenderer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -52,10 +52,10 @@\n  * @author Andrew Selkirk\n  * @version 1.0\n  */\n-public class DefaultListCellRenderer extends JLabel implements ListCellRenderer,\n-                                                               Serializable\n+public class DefaultListCellRenderer extends JLabel\n+  implements ListCellRenderer, Serializable\n {\n-  static final long serialVersionUID = 7708947179685189462L;\n+  private static final long serialVersionUID = 7708947179685189462L;\n \n   public static class UIResource extends DefaultListCellRenderer\n     implements javax.swing.plaf.UIResource\n@@ -89,6 +89,7 @@ public Component getListCellRendererComponent(JList list, Object value,\n     String s = value.toString();\n     setText(s);\n     setOpaque(true);\n+    setHorizontalAlignment(LEFT);\n \n     if (isSelected)\n       {"}, {"sha": "c3704dbea9e60cbc729a36a61722dc20ff4e4f63", "filename": "libjava/javax/swing/DefaultListModel.java", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* DefaultListModel.java --\n-   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -198,7 +198,7 @@ public Object set(int index, Object element)\n   public void add(int index, Object element)\n   {\n     elements.add(index, element);\n-    fireContentsChanged(this, index, index);\n+    fireIntervalAdded(this, index, index);\n   }\n \n   /**\n@@ -209,8 +209,9 @@ public void add(int index, Object element)\n    */\n   public void addElement(Object element)\n   {\n+    int s = elements.size();\n     elements.add(element);\n-    fireIntervalAdded(this, elements.size(), elements.size());\n+    fireIntervalAdded(this, s, s);\n   }\n \n   /**\n@@ -266,8 +267,12 @@ public void copyInto(Object[] array)\n    */\n   public void clear()\n   {\n-    elements.clear();\n-    fireIntervalRemoved(this, 0, elements.size());\n+    int s = elements.size();\n+    if (s > 0)\n+    {\n+      elements.clear();\n+      fireIntervalRemoved(this, 0, s - 1);\n+    }\n   }\n \n   /**\n@@ -341,7 +346,16 @@ public void ensureCapacity(int size)\n    */\n   public void setSize(int size)\n   {\n+    int oldSize = elements.size();\n     elements.setSize(size);\n+    if (oldSize < size) \n+    {\n+      fireIntervalAdded(this, oldSize, size - 1); \n+    }\n+    else if (oldSize > size) \n+    {\n+      this.fireIntervalRemoved(this, size, oldSize - 1);\n+    }\n   }\n \n   /**"}, {"sha": "ccae2804c3d98376474c8051f11986e3b4087c02", "filename": "libjava/javax/swing/DefaultListSelectionModel.java", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultListSelectionModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -118,7 +118,7 @@ public class DefaultListSelectionModel implements Cloneable,\n    * @see #isLeadAnchorNotificationEnabled\n    * @see #setLeadAnchorNotificationEnabled\n    */\n-  boolean leadAnchorNotificationEnabled = true;\n+  protected boolean leadAnchorNotificationEnabled = true;\n \n \n   /**\n@@ -514,6 +514,18 @@ public void removeIndexInterval(int index0,\n       sel.set(lo + i, tmp.get(i));\n   }\n \n+  /**\n+   * Fires a {@link ListSelectionEvent} to all the listeners of type {@link\n+   * ListSelectionListener} registered with this selection model.\n+   *\n+   * @param firstIndex The low index of the changed range\n+   * @param lastIndex The high index of the changed range\n+   */\n+  protected void fireValueChanged(int firstIndex, int lastIndex)\n+  {\n+    fireValueChanged(firstIndex, lastIndex, getValueIsAdjusting());\n+  }\n+  \n   /**\n    * Fires a {@link ListSelectionEvent} to all the listeners of type {@link\n    * ListSelectionListener} registered with this selection model.\n@@ -588,4 +600,21 @@ public ListSelectionListener[] getListSelectionListeners()\n   {\n     return (ListSelectionListener[]) getListeners(ListSelectionListener.class);\n   }\n+\n+  /**\n+   * Returns a clone of this object.\n+   * <code>listenerList</code> don't gets duplicated.\n+   *\n+   * @return the cloned object\n+   *\n+   * @throws CloneNotSupportedException if an error occurs\n+   */\n+  public Object clone()\n+    throws CloneNotSupportedException\n+  {\n+    DefaultListSelectionModel model =\n+      (DefaultListSelectionModel) super.clone();\n+    model.sel = (BitSet) sel.clone();\n+    return model;\n+  }\n }"}, {"sha": "63611f4a09a5b91582e2101e6589a06ec8beb11a", "filename": "libjava/javax/swing/DefaultSingleSelectionModel.java", "status": "modified", "additions": 27, "deletions": 42, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -47,23 +47,23 @@\n \n /**\n  * DefaultSingleSelectionModel\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ *\n+ * @author Andrew Selkirk\n  */\n public class DefaultSingleSelectionModel\n   implements SingleSelectionModel, Serializable\n {\n-  static final long serialVersionUID = 3676229404753786004L;\n+  private static final long serialVersionUID = 3676229404753786004L;\n \n   /**\n    * changeEvent\n    */\n-  protected transient ChangeEvent changeEvent = new ChangeEvent (this);\n+  protected transient ChangeEvent changeEvent = new ChangeEvent(this);\n \n   /**\n    * listenerList\n    */\n-  protected EventListenerList listenerList= new EventListenerList ();\n+  protected EventListenerList listenerList = new EventListenerList();\n \n   /**\n    * index\n@@ -73,15 +73,16 @@\n   /**\n    * Constructor DefaultSingleSelectionModel\n    */\n-  public DefaultSingleSelectionModel ()\n+  public DefaultSingleSelectionModel()\n   {\n+    // Do nothing.\n   }\n \n   /**\n    * getSelectedIndex\n    * @return int\n    */\n-  public int getSelectedIndex ()\n+  public int getSelectedIndex()\n   {\n     return index;\n   }\n@@ -90,75 +91,59 @@ public int getSelectedIndex ()\n    * setSelectedIndex\n    * @param index TODO\n    */\n-  public void setSelectedIndex (int index)\n+  public void setSelectedIndex(int index)\n   {\n-    // Set Data\n     this.index = index;\n-\n-    // Notify Listeners\n-    fireStateChanged ();\n+    fireStateChanged();\n   }\n \n   /**\n    * clearSelection\n    */\n-  public void clearSelection ()\n+  public void clearSelection()\n   {\n-    // Set Data\n     index = -1;\n-\n-    // Notify Listeners\n-    fireStateChanged ();\n+    fireStateChanged();\n   }\n \n   /**\n    * isSelected\n    * @return boolean\n    */\n-  public boolean isSelected ()\n+  public boolean isSelected()\n   {\n-    return (index != -1);\n+    return index != -1;\n   }\n \n   /**\n    * addChangeListener\n    *\n    * @param listener the listener to add\n    */\n-  public void addChangeListener (ChangeListener listener)\n+  public void addChangeListener(ChangeListener listener)\n   {\n-    listenerList.add (ChangeListener.class, listener);\n+    listenerList.add(ChangeListener.class, listener);\n   }\n \n   /**\n    * removeChangeListener\n    *\n    * @param listener the listener to remove\n    */\n-  public void removeChangeListener (ChangeListener listener)\n+  public void removeChangeListener(ChangeListener listener)\n   {\n-    listenerList.remove (ChangeListener.class, listener);\n+    listenerList.remove(ChangeListener.class, listener);\n   }\n \n   /**\n    * fireStateChanged\n    */\n-  protected void fireStateChanged ()\n+  protected void fireStateChanged()\n   {\n-    // Variables\n-    ChangeListener listener;\n-    ChangeListener[] listeners;\n-    int index;\n-\n-    // Get Listeners\n-    listeners = getChangeListeners ();\n-\n-    // Process Listeners\n-    for (index = 0; index < listeners.length; index++)\n-      {\n-        listener = listeners [index];\n-        listener.stateChanged (changeEvent);\n-      }\n+    ChangeListener[] listeners = getChangeListeners();\n+\n+    for (int i = 0; i < listeners.length; i++)\n+      listeners[i].stateChanged(changeEvent);\n   }\n \n   /**\n@@ -170,18 +155,18 @@ protected void fireStateChanged ()\n    *\n    * @since 1.3\n    */\n-  public EventListener[] getListeners (Class listenerClass)\n+  public EventListener[] getListeners(Class listenerClass)\n   {\n-    return listenerList.getListeners (listenerClass);\n+    return listenerList.getListeners(listenerClass);\n   }\n \n   /**\n    * getChangeListeners\n    *\n    * @since 1.4\n    */\n-  public ChangeListener[] getChangeListeners ()\n+  public ChangeListener[] getChangeListeners()\n   {\n-    return (ChangeListener[]) getListeners (ChangeListener.class);\n+    return (ChangeListener[]) getListeners(ChangeListener.class);\n   }\n }"}, {"sha": "36bd088ff6b8009573090f8308dc60f5fd6393cf", "filename": "libjava/javax/swing/ImageIcon.java", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FImageIcon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FImageIcon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FImageIcon.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,4 +1,4 @@\n-/* ImageIcon.java -- \n+/* ImageIcon.java --\n    Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -57,7 +57,7 @@\n   public ImageIcon()\n   {\n   }\n-\n+  \n   public ImageIcon(String file)\n   {\n     this(file, file);\n@@ -98,12 +98,12 @@ public ImageIcon(Image image, String description)\n     this.image = Toolkit.getDefaultToolkit().createImage(image.getSource());\n     this.description = description;\n   }\n-\n+    \n   public ImageObserver getImageObserver()\n   {\n     return observer;\n   }\n-\n+  \n   public void setImageObserver(ImageObserver newObserver)\n   {\n     observer = newObserver;\n@@ -114,6 +114,11 @@ public Image getImage()\n     return image;\n   }\n \n+  public void setImage(Image image)\n+  {\n+    this.image = Toolkit.getDefaultToolkit().createImage(image.getSource());\n+  }\n+\n   public String getDescription()\n   {\n     return description;"}, {"sha": "53be5b1b1d79d85c784c565b64df68e02e389291", "filename": "libjava/javax/swing/InputMap.java", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FInputMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FInputMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FInputMap.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -49,7 +49,7 @@\n \n \n /**\n- * @author\tAndrew Selkirk\n+ * @author Andrew Selkirk\n  * @author Michael Koch\n  *\n  * @since 1.3\n@@ -59,31 +59,31 @@\n {\n   private static final long serialVersionUID = -5429059542008604257L;\n \n-\t/**\n-\t * inputMap\n-\t */\n-\tprivate Map inputMap = new HashMap();\n+  /**\n+   * inputMap\n+   */\n+  private Map inputMap = new HashMap();\n \n-\t/**\n-\t * parent\n-\t */\n+  /**\n+   * parent\n+   */\n   private InputMap parent;\n \n-\t/**\n+  /**\n    * Creates a new <code>InputMap</code> instance.\n-\t */\n+   */\n   public InputMap()\n   {\n-\t\t// TODO\n+    // TODO\n   }\n \n-\t/**\n+  /**\n    * Returns the binding for keystroke.\n    *\n    * @param key the key of the enty\n    *\n    * @return the binding associated with keystroke may be null\n-\t */\n+   */\n   public Object get(KeyStroke keystroke)\n   {\n     Object result = inputMap.get(keystroke);\n@@ -93,121 +93,121 @@ public Object get(KeyStroke keystroke)\n     return result;\n   }\n \n-\t/**\n+  /**\n    * Puts a new entry into the <code>InputMap</code>.\n    * If actionMapKey is null an existing entry will be removed.\n    *\n    * @param keystroke the keystroke for the entry\n    * @param actionMapKey the action.\n-\t */\n+   */\n   public void put(KeyStroke keystroke, Object actionMapKey)\n   {\n     if (actionMapKey == null)\n-\t\t\tinputMap.remove(keystroke);\n+      inputMap.remove(keystroke);\n     else\n-\t\t\tinputMap.put(keystroke, actionMapKey);\n+      inputMap.put(keystroke, actionMapKey);\n   }\n \n-\t/**\n+  /**\n    * Remove an entry from the <code>InputMap</code>.\n    *\n    * @param key the key of the entry to remove\n-\t */\n+   */\n   public void remove(KeyStroke keystroke)\n   {\n-\t\tinputMap.remove(keystroke);\n+    inputMap.remove(keystroke);\n   }\n \n-\t/**\n+  /**\n    * Returns the parent of this <code>InputMap</code>.\n    *\n    * @return the parent, may be null.\n-\t */\n+   */\n   public InputMap getParent()\n   {\n-\t\treturn parent;\n+    return parent;\n   }\n \n-\t/**\n+  /**\n    * Sets a parent for this <code>InputMap</code>.\n    *\n    * @param parentMap the new parent\n-\t */\n+   */\n   public void setParent(InputMap parentMap)\n   {\n-\t\tparent = parentMap;\n+    parent = parentMap;\n   }\n \n-\t/**\n+  /**\n    * Returns the number of entries in this <code>InputMap</code>.\n    *\n    * @return the number of entries\n-\t */\n+   */\n   public int size()\n   {\n-\t\treturn inputMap.size();\n+    return inputMap.size();\n   }\n \n-\t/**\n+  /**\n    * Clears the <code>InputMap</code>.\n-\t */\n+   */\n   public void clear()\n   {\n-\t\tinputMap.clear();\n+    inputMap.clear();\n   }\n \n-\t/**\n+  /**\n    * Returns all keys of entries in this <code>InputMap</code>.\n    *\n    * @return an array of keys\n-\t */\n+   */\n   public KeyStroke[] keys()\n   {\n     KeyStroke[] array = new KeyStroke[size()];\n     return (KeyStroke[]) inputMap.keySet().toArray(array);\n   }\n \n-\t/**\n+  /**\n    * Returns all keys of entries in this <code>InputMap</code>\n    * and all its parents.\n    *\n    * @return an array of keys\n-\t */\n+   */\n   public KeyStroke[] allKeys()\n   {\n     Set set = new HashSet();\n \n     if (parent != null)\n-\t\t\tset.addAll(Arrays.asList(parent.allKeys()));\n+      set.addAll(Arrays.asList(parent.allKeys()));\n \n     set.addAll(inputMap.keySet());\n     KeyStroke[] array = new KeyStroke[size()];\n     return (KeyStroke[]) set.toArray(array);\n   }\n \n-\t/**\n-\t * writeObject\n+  /**\n+   * writeObject\n    *\n    * @param stream the stream to write to\n    *\n    * @exception IOException If an error occurs\n-\t */\n+   */\n   private void writeObject(ObjectOutputStream stream) throws IOException\n   {\n-\t\t// TODO\n+    // TODO\n   }\n \n-\t/**\n-\t * readObject\n+  /**\n+   * readObject\n    *\n    * @param stream the stream to read from\n    *\n    * @exception ClassNotFoundException If the serialized class cannot be found\n    * @exception IOException If an error occurs\n-\t */\n+   */\n   private void readObject(ObjectInputStream stream)\n     throws ClassNotFoundException, IOException\n   {\n-\t\t// TODO\n+    // TODO\n   }\n }"}, {"sha": "0ac70144628d295aa7c6ded05176135366428aaf", "filename": "libjava/javax/swing/InternalFrameFocusTraversalPolicy.java", "status": "renamed", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FInternalFrameFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FInternalFrameFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FInternalFrameFocusTraversalPolicy.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n-/* GtkArg.java\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+/* InternalFrameFocusTraversalPolicy.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -36,26 +36,20 @@\n exception statement from your version. */\n \n \n-package gnu.java.awt.peer.gtk;\n+package javax.swing;\n \n-public class GtkArg\n-{\n-  String name;\n-  Object value;\n-\n-  public GtkArg (String name, Object value)\n-  {\n-    this.name = name;\n-    this.value = value;\n-  }\n+import java.awt.Component;\n+import java.awt.FocusTraversalPolicy;\n \n-  public String getName ()\n-  {\n-    return name;\n-  }\n-\n-  public Object getValue ()\n+/**\n+ * @author Michael Koch\n+ * \n+ * @since 1.4\n+ */\n+public abstract class InternalFrameFocusTraversalPolicy extends FocusTraversalPolicy\n+{\n+  public Component getInitialComponent(JInternalFrame frame)\n   {\n-    return value;\n+    return getDefaultComponent(frame);\n   }\n }", "previous_filename": "libjava/gnu/java/awt/peer/gtk/GtkArg.java"}, {"sha": "8446e27b1d9e4a00e8e4b5e467369a075fdb785e", "filename": "libjava/javax/swing/JApplet.java", "status": "modified", "additions": 5, "deletions": 75, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJApplet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJApplet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJApplet.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JApplet.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,6 @@\n import java.awt.Graphics;\n import java.awt.LayoutManager;\n import java.awt.event.KeyEvent;\n-import java.awt.event.WindowEvent;\n \n import javax.accessibility.AccessibleContext;\n \n@@ -55,38 +54,18 @@ public class JApplet extends Applet\n {\n   private static final long serialVersionUID = 7269359214497372587L;\n   \n-  public static final int HIDE_ON_CLOSE = 0;\n-  public static final int EXIT_ON_CLOSE = 1;\n-  public static final int DISPOSE_ON_CLOSE = 2;\n-  public static final int DO_NOTHING_ON_CLOSE = 3;\n-  \n-  private int close_action = EXIT_ON_CLOSE;\n-\n   protected JRootPane rootPane;\n   protected boolean rootPaneCheckingEnabled;\n \n   public JApplet()\n-  {\n-    frameInit();\n-  }\n-\n-  public JApplet(String title)\n-  {\n-    frameInit();\n-  }\n-\n-  protected void frameInit()\n   {\n     super.setLayout(new BorderLayout(1, 1));\n     getRootPane(); // will do set/create\n   }\n \n   public Dimension getPreferredSize()\n   {\n-    Dimension d = super.getPreferredSize();\n-    System.out.println(\"JFrame.getPrefSize(): \" + d + \" , comp=\"\n-                       + getComponentCount() + \", layout=\" + getLayout());\n-    return d;\n+    return super.getPreferredSize();\n   }\n \n   public void setLayout(LayoutManager manager)\n@@ -111,7 +90,7 @@ public JRootPane getRootPane()\n     return rootPane;\n   }\n \n-  public void setRootPane(JRootPane root)\n+  protected void setRootPane(JRootPane root)\n   {\n     if (rootPane != null)\n       remove(rootPane);\n@@ -120,7 +99,7 @@ public void setRootPane(JRootPane root)\n     add(rootPane, BorderLayout.CENTER);\n   }\n \n-  public JRootPane createRootPane()\n+  protected JRootPane createRootPane()\n   {\n     return new JRootPane();\n   }\n@@ -155,11 +134,6 @@ public AccessibleContext getAccessibleContext()\n     return null;\n   }\n \n-  int getDefaultCloseOperation()\n-  {\n-    return close_action;\n-  }\n-\n   public JMenuBar getJMenuBar()\n   {\n     return getRootPane().getJMenuBar();\n@@ -179,56 +153,12 @@ protected void processKeyEvent(KeyEvent e)\n   {\n     super.processKeyEvent(e);\n   }\n-\n-  protected void processWindowEvent(WindowEvent e)\n-  {\n-    //      System.out.println(\"PROCESS_WIN_EV-1: \" + e);\n-    //        super.processWindowEvent(e); \n-    //      System.out.println(\"PROCESS_WIN_EV-2: \" + e);\n-    switch (e.getID())\n-      {\n-      case WindowEvent.WINDOW_CLOSING:\n-        {\n-\t  switch (close_action)\n-\t    {\n-\t    case EXIT_ON_CLOSE:\n-\t      {\n-\t\tSystem.out.println(\"user requested exit on close\");\n-\t\tSystem.exit(1);\n-\t\tbreak;\n-\t      }\n-\t    case DISPOSE_ON_CLOSE:\n-\t      {\n-\t\tSystem.out.println(\"user requested dispose on close\");\n-\t\t//dispose();\n-\t\tbreak;\n-\t      }\n-\t    case HIDE_ON_CLOSE:\n-\t    case DO_NOTHING_ON_CLOSE:\n-\t      break;\n-\t    }\n-\t  break;\n-        }\n-      case WindowEvent.WINDOW_CLOSED:\n-      case WindowEvent.WINDOW_OPENED:\n-      case WindowEvent.WINDOW_ICONIFIED:\n-      case WindowEvent.WINDOW_DEICONIFIED:\n-      case WindowEvent.WINDOW_ACTIVATED:\n-      case WindowEvent.WINDOW_DEACTIVATED:\n-\tbreak;\n-      }\n-  }\n-\n+  \n   public void remove(Component comp)\n   {\n     getContentPane().remove(comp);\n   }\n \n-  void setDefaultCloseOperation(int operation)\n-  {\n-    close_action = operation;\n-  }\n-\n   protected boolean isRootPaneCheckingEnabled()\n   {\n     return rootPaneCheckingEnabled;"}, {"sha": "dea37811a7f4845b4578c6bc82450e6a8286d98c", "filename": "libjava/javax/swing/JButton.java", "status": "modified", "additions": 75, "deletions": 75, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJButton.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -53,90 +53,90 @@ public class JButton extends AbstractButton\n   private static final long serialVersionUID = -1907255238954382202L;\n   boolean def;\n   boolean is_def;\n-    \n-    public JButton()\n-    {\n-\tthis(null, null);\n-    }\n-\n-    public JButton(Action a)\n-    {\n-\tthis();\n-\tsetAction(a);\n-    }\n-\n-    public JButton(Icon icon)\n-    { \n-\tthis(null, icon);\n-    }    \n-  \n-    public JButton(String text)\n-    {\n-\tthis(text, null);\n-    }\n-      \n-    public JButton(String text, Icon icon)\n-    {\n-\tsuper(text, icon);\n-    }\n-\n-    public Object[] getSelectedObjects()\n-    {\n-\treturn null;\n-    }\n-  \n-    protected  void configurePropertiesFromAction(Action a)\n-    {\n-\t//Factory method which sets the AbstractButton's properties according to values from the Action instance. \n-\tsuper.configurePropertiesFromAction(a);\n-    }\n-    \n-    public AccessibleContext getAccessibleContext()\n-    {\n-\t//Gets the AccessibleContext associated with this JButton. \n-\treturn null;\n-    }\n-  \n-    public String getUIClassID()\n-    {\n+\n+  public JButton()\n+  {\n+    this(null, null);\n+  }\n+\n+  public JButton(Action a)\n+  {\n+    this();\n+    setAction(a);\n+  }\n+\n+  public JButton(Icon icon)\n+  {\n+    this(null, icon);\n+  }\n+\n+  public JButton(String text)\n+  {\n+    this(text, null);\n+  }\n+\n+  public JButton(String text, Icon icon)\n+  {\n+    super(text, icon);\n+  }\n+\n+  public Object[] getSelectedObjects()\n+  {\n+    return null;\n+  }\n+\n+  protected void configurePropertiesFromAction(Action a)\n+  {\n+    //Factory method which sets the AbstractButton's properties according to values from the Action instance. \n+    super.configurePropertiesFromAction(a);\n+  }\n+\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    //Gets the AccessibleContext associated with this JButton. \n+    return null;\n+  }\n+\n+  public String getUIClassID()\n+  {\n     //Returns a string that specifies the name of the L&F class that renders this component.  \n-\treturn \"ButtonUI\";\n-    }\n-  \n-    public boolean isDefaultButton()\n-    {\n-\t//Returns whether or not this button is the default button on the RootPane.  \n-\treturn is_def;\n-    }\n-  \n-    public boolean isDefaultCapable()\n-    {\n-\t//Returns whether or not this button is capable of being the default button on the RootPane. \n-\treturn def;\n-    }\n-\n-    protected  String paramString()\n-    {\n-\treturn \"JButton\";\n-    }\n-    \n+    return \"ButtonUI\";\n+  }\n+\n+  public boolean isDefaultButton()\n+  {\n+    //Returns whether or not this button is the default button on the RootPane.  \n+    return is_def;\n+  }\n+\n+  public boolean isDefaultCapable()\n+  {\n+    //Returns whether or not this button is capable of being the default button on the RootPane. \n+    return def;\n+  }\n+\n+  protected String paramString()\n+  {\n+    return \"JButton\";\n+  }\n+\n   /**\n    * Overrides JComponent.removeNotify to check if this button is currently\n    * set as the default button on the RootPane, and if so, sets the RootPane's\n    * default button to null to ensure the RootPane doesn't hold onto an invalid\n    * button reference.\n    */\n-    public void removeNotify()\n-    {\n-    }\n-    \n-    public void setDefaultCapable(boolean defaultCapable)\n+  public void removeNotify()\n+  {\n+  }\n+\n+  public void setDefaultCapable(boolean defaultCapable)\n   {\n     def = defaultCapable;\n   }\n-    \n-    public void updateUI()\n-    {\n+\n+  public void updateUI()\n+  {\n     setUI((ButtonUI) UIManager.getUI(this));\n-    }\n+  }\n }"}, {"sha": "a8506e5f822cf44db167bf8945a4ca1f83339ced", "filename": "libjava/javax/swing/JCheckBox.java", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJCheckBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJCheckBox.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -60,20 +60,20 @@ private void init()\n     contentAreaFilled = false;\n   }\n   \n-    public JCheckBox()\n-    {\n+  public JCheckBox()\n+  {\n     super();\n     init();\n-    }\n+  }\n \n   public JCheckBox(Action action)\n-    {\n+  {\n     super(action);\n     init();\n-    }\n+  }\n \n-    public JCheckBox(Icon icon)\n-    { \n+  public JCheckBox(Icon icon)\n+  { \n     super(icon);\n     init();\n   }    \n@@ -82,10 +82,10 @@ public JCheckBox(Icon icon, boolean selected)\n   { \n     super(icon, selected);\n     init();\n-    }    \n+  }    \n   \n-    public JCheckBox(String text)\n-    {\n+  public JCheckBox(String text)\n+  {\n     super(text);\n     init();\n   }\n@@ -94,41 +94,41 @@ public JCheckBox(String text, boolean selected)\n   {\n     super(text, selected);\n     init();\n-    }\n+  }\n       \n-    public JCheckBox(String text, Icon icon)\n-    {\n-\tsuper(text, icon);\n+  public JCheckBox(String text, Icon icon)\n+  {\n+    super(text, icon);\n     init();\n-    }\n+  }\n \n   public JCheckBox(String text, Icon icon, boolean selected)\n   {\n     super(text, icon, selected);\n     init();\n   }\n-    \n+\n   /**\n    * Gets the AccessibleContext associated with this JCheckBox.\n    */\n-    public AccessibleContext getAccessibleContext()\n-    {\n-\treturn null;\n-    }\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    return null;\n+  }\n   \n   /**\n    * Returns a string that specifies the name of the Look and Feel class\n    * that renders this component.\n    */\n-    public String getUIClassID()\n-    {\n-\treturn \"CheckBoxUI\";\n-    }\n+  public String getUIClassID()\n+  {\n+    return \"CheckBoxUI\";\n+  }\n   \n-    protected  String paramString()\n-    {\n-\treturn \"JCheckBox\";\n-    }\n+  protected  String paramString()\n+  {\n+    return \"JCheckBox\";\n+  }\n \n   public boolean isBorderPaintedFlat()\n   {"}, {"sha": "090c3c2044a227d296f3d4d15413299c3c66e4de", "filename": "libjava/javax/swing/JCheckBoxMenuItem.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -206,7 +206,7 @@ public Object[] getSelectedObjects()\n     * This method overrides JComponent.requestFocus with an empty\n     * implementation, since JCheckBoxMenuItems should not\n     * receve focus in general.\n-   */\n+    */\n   public void requestFocus()\n   {\n     //  Should do nothing here"}, {"sha": "4e2a88110fc201986aee9eb09cc2701b4fa214dd", "filename": "libjava/javax/swing/JComboBox.java", "status": "modified", "additions": 145, "deletions": 102, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJComboBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJComboBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComboBox.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JComboBox.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -60,7 +60,6 @@\n import javax.swing.event.PopupMenuListener;\n import javax.swing.plaf.ComboBoxUI;\n \n-\n /**\n  * JComboBox. JComboBox is a container, that keeps track of elements added to\n  * it by the user. JComboBox allows user to select any item in its list and\n@@ -69,12 +68,14 @@\n  *\n  * @author Andrew Selkirk\n  * @author Olga Rodimina\n+ * @author Robert Schuster\n  */\n public class JComboBox extends JComponent implements ItemSelectable,\n                                                      ListDataListener,\n                                                      ActionListener,\n                                                      Accessible\n {\n+\n   private static final long serialVersionUID = 5654585963292734470L;\n \n   /**\n@@ -91,43 +92,7 @@ public class JComboBox extends JComponent implements ItemSelectable,\n    * Maximum number of rows that should be visible by default  in the\n    * JComboBox's popup\n    */\n-  public static final int DEFAULT_MAXIMUM_ROW_COUNT = 8;\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the 'editable' property changes.\n-   */\n-  public static final String EDITABLE_CHANGED_PROPERTY = \"editable\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the 'maximumRowCount' property\n-   * changes.\n-   */\n-  public static final String MAXIMUM_ROW_COUNT_CHANGED_PROPERTY = \"maximumRowCount\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the 'enabled' property changes.\n-   */\n-  public static final String ENABLED_CHANGED_PROPERTY = \"enabled\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the 'renderer' property changes.\n-   */\n-  public static final String RENDERER_CHANGED_PROPERTY = \"renderer\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the 'editor' property changes.\n-   */\n-  public static final String EDITOR_CHANGED_PROPERTY = \"editor\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the 'dataModel' property changes.\n-   */\n-  public static final String MODEL_CHANGED_PROPERTY = \"dataModel\";\n-\n-  /**\n-   * name for the UI delegate for this combo box.\n-   */\n-  private static final String uiClassID = \"ComboBoxUI\";\n+  private static final int DEFAULT_MAXIMUM_ROW_COUNT = 8;\n \n   /**\n    * dataModel used by JComboBox to keep track of its list data and currently\n@@ -143,7 +108,7 @@ public class JComboBox extends JComponent implements ItemSelectable,\n   protected ListCellRenderer renderer;\n \n   /**\n-   * editor that is responsible for editting an object in a combo box list\n+   * Editor that is responsible for editing an object in a combo box list.\n    */\n   protected ComboBoxEditor editor;\n \n@@ -191,8 +156,9 @@ public class JComboBox extends JComponent implements ItemSelectable,\n   private Object prototypeDisplayValue;\n \n   /**\n-   * Constructs JComboBox object with specified data model for it. The first\n-   * item in the specified data model is selected by default.\n+   * Constructs JComboBox object with specified data model for it.\n+   * <p>Note that the JComboBox will not change the value that\n+   * is preselected by your ComboBoxModel implementation.</p>\n    *\n    * @param model Data model that will be used by this JComboBox to keep track\n    *        of its list of items.\n@@ -205,10 +171,6 @@ public JComboBox(ComboBoxModel model)\n     setModel(model);\n     setActionCommand(\"comboBoxChanged\");\n \n-    // by default set selected item to the first element in the combo box    \n-    if (getItemCount() != 0)\n-      setSelectedItem(getItemAt(0));\n-\n     lightWeightPopupEnabled = true;\n     isEditable = false;\n \n@@ -300,7 +262,7 @@ public void updateUI()\n    */\n   public String getUIClassID()\n   {\n-    return uiClassID;\n+    return \"ComboBoxUI\";\n   }\n \n   /**\n@@ -322,21 +284,29 @@ public ComboBoxUI getUI()\n    */\n   public void setModel(ComboBoxModel newDataModel)\n   {\n-    if (this.dataModel == newDataModel)\n-      return;\n \n-    if (this.dataModel != null)\n-      // remove all listeners currently registered with the model.\n-      dataModel.removeListDataListener(this);\n+    // dataModel is null if it this method is called from inside the constructors.\n+    if(dataModel != null) {\n+\t// Prevents unneccessary updates.\n+\tif (dataModel == newDataModel)\n+\t\treturn;\n \n-    ComboBoxModel oldDataModel = this.dataModel;\n-    this.dataModel = newDataModel;\n+    \t// Removes itself (as DataListener) from the to-be-replaced model.\n+    \tdataModel.removeListDataListener(this);\n+    }\n+    \n+    /* Adds itself as a DataListener to the new model.\n+     * It is intentioned that this operation will fail with a NullPointerException if the\n+     * caller delivered a null argument.\n+     */\n+    newDataModel.addListDataListener(this);\n \n-    if (this.dataModel != null)\n-      // register all listeners with the new data model\n-      dataModel.addListDataListener(this);\n+    // Stores old data model for event notification.\n+    ComboBoxModel oldDataModel = dataModel;\n+    dataModel = newDataModel;\n \n-    firePropertyChange(MODEL_CHANGED_PROPERTY, oldDataModel, this.dataModel);\n+    // Notifies the listeners of the model change.\n+    firePropertyChange(\"model\", oldDataModel, dataModel);\n   }\n \n   /**\n@@ -351,16 +321,16 @@ public ComboBoxModel getModel()\n \n   /**\n    * This method sets JComboBox's popup to be either lightweight or\n-   * heavyweight. If 'enabled' is true then lightweight popup is  used and\n-   * heavyweight otherwise. By default lightweight popup is  used to display\n+   * heavyweight. If 'enabled' is true then lightweight popup is used and\n+   * heavyweight otherwise. By default lightweight popup is used to display\n    * this JComboBox's elements.\n    *\n    * @param enabled indicates if lightweight popup or heavyweight popup should\n    *        be used to display JComboBox's elements.\n    */\n   public void setLightWeightPopupEnabled(boolean enabled)\n   {\n-    this.lightWeightPopupEnabled = enabled;\n+    lightWeightPopupEnabled = enabled;\n   }\n \n   /**\n@@ -388,10 +358,10 @@ public boolean isLightWeightPopupEnabled()\n    */\n   public void setEditable(boolean editable)\n   {\n-    if (this.isEditable != editable)\n+    if (isEditable != editable)\n       {\n-\tthis.isEditable = editable;\n-\tfirePropertyChange(EDITABLE_CHANGED_PROPERTY, ! isEditable, isEditable);\n+\tisEditable = editable;\n+\tfirePropertyChange(\"editable\", ! isEditable, isEditable);\n       }\n   }\n \n@@ -407,10 +377,10 @@ public void setMaximumRowCount(int rowCount)\n   {\n     if (maximumRowCount != rowCount)\n       {\n-\tint oldMaximumRowCount = this.maximumRowCount;\n-\tthis.maximumRowCount = rowCount;\n-\tfirePropertyChange(MAXIMUM_ROW_COUNT_CHANGED_PROPERTY,\n-\t                   oldMaximumRowCount, this.maximumRowCount);\n+\tint oldMaximumRowCount = maximumRowCount;\n+\tmaximumRowCount = rowCount;\n+\tfirePropertyChange(\"maximumRowCount\",\n+\t                   oldMaximumRowCount, maximumRowCount);\n       }\n   }\n \n@@ -437,12 +407,12 @@ public int getMaximumRowCount()\n    */\n   public void setRenderer(ListCellRenderer aRenderer)\n   {\n-    if (this.renderer != aRenderer)\n+    if (renderer != aRenderer)\n       {\n-\tListCellRenderer oldRenderer = this.renderer;\n-\tthis.renderer = aRenderer;\n-\tfirePropertyChange(RENDERER_CHANGED_PROPERTY, oldRenderer,\n-\t                   this.renderer);\n+\tListCellRenderer oldRenderer = renderer;\n+\trenderer = aRenderer;\n+\tfirePropertyChange(\"renderer\", oldRenderer,\n+\t                   renderer);\n       }\n   }\n \n@@ -477,11 +447,11 @@ public void setEditor(ComboBoxEditor newEditor)\n     if (editor != null)\n       editor.addActionListener(this);\n \n-    firePropertyChange(EDITOR_CHANGED_PROPERTY, oldEditor, editor);\n+    firePropertyChange(\"editor\", oldEditor, editor);\n   }\n \n   /**\n-   * Returns editor component that is responsible for displaying/editting\n+   * Returns editor component that is responsible for displaying/editing\n    * selected item in the combo box.\n    *\n    * @return ComboBoxEditor\n@@ -503,45 +473,76 @@ public void setSelectedItem(Object item)\n \n   /**\n    * Returns currently selected item in the combo box.\n+   * The result may be <code>null</code> to indicate that nothing is\n+   * currently selected.\n    *\n    * @return element that is currently selected in this combo box.\n    */\n   public Object getSelectedItem()\n   {\n-    Object item = dataModel.getSelectedItem();\n-\n-    if (item == null && getItemCount() != 0)\n-      item = getItemAt(0);\n-\n-    return item;\n+    return dataModel.getSelectedItem();\n   }\n \n   /**\n-   * Forces JComboBox to select component located in the  given index in the\n+   * Forces JComboBox to select component located in the given index in the\n    * combo box.\n+   * <p>If the index is below -1 or exceeds the upper bound an\n+   * <code>IllegalArgumentException</code> is thrown.<p/>\n+   * <p>If the index is -1 then no item gets selected.</p>\n    *\n    * @param index index specifying location of the component that  should be\n    *        selected.\n    */\n   public void setSelectedIndex(int index)\n   {\n-    // FIXME: if index == -1 then nothing should be selected\n-    setSelectedItem(dataModel.getElementAt(index));\n+  \tif(index < -1 || index >= dataModel.getSize()) {\n+  \t\t// Fails because index is out of bounds. \n+  \t\tthrow new IllegalArgumentException(\"illegal index: \" + index);\n+  \t} else {\n+  \t\t/* Selects the item at the given index or clears the selection if the\n+  \t\t * index value is -1.\n+  \t\t */\n+\t\tsetSelectedItem((index == -1) ? null : dataModel.getElementAt(index));\n+  \t}\n   }\n \n   /**\n    * Returns index of the item that is currently selected  in the combo box.\n    * If no item is currently selected, then -1 is returned.\n+   * \n+   * <p>Note: For performance reasons you should minimize invocation of this\n+   * method. If the data model is not an instance of\n+   * <code>DefaultComboBoxModel</code> the complexity is O(n) where\n+   * n is the number of elements in the combo box.</p>\n    *\n-   * @return int index specifying location of the currently  selected item in\n+   * @return int Index specifying location of the currently selected item in\n    *         the combo box or -1 if nothing is selected in the combo box.\n    */\n   public int getSelectedIndex()\n   {\n     Object selectedItem = getSelectedItem();\n-    if (selectedItem != null && (dataModel instanceof DefaultComboBoxModel))\n-      return ((DefaultComboBoxModel) dataModel).getIndexOf(selectedItem);\n+    \n+    if (selectedItem != null) {\n+\t\n+\t\tif(dataModel instanceof DefaultComboBoxModel) {\n+\t\t\t// Uses special method of DefaultComboBoxModel to retrieve the index.\n+        \t  \treturn ((DefaultComboBoxModel) dataModel).getIndexOf(selectedItem);\n+\t\t} else {\n+\t\t\t// Iterates over all items to retrieve the index.\n+\t\t\tint size = dataModel.getSize();\n+\t\t\t\n+\t  \t\tfor(int i=0; i < size; i++) {\n+\t  \t\t\tObject o = dataModel.getElementAt(i);\n+\t  \t\t\t\n+\t\t\t\t// XXX: Is special handling of ComparableS neccessary?\n+\t  \t\t\tif((selectedItem != null) ? selectedItem.equals(o) : o == null) {\n+\t  \t\t\t\treturn i;\n+\t  \t\t\t}\n+\t  \t\t}\n+\t\t}\n+    }\n \n+    // returns that no item is currently selected\n     return -1;\n   }\n \n@@ -550,60 +551,104 @@ public Object getPrototypeDisplayValue()\n     return prototypeDisplayValue;\n   }\n \n-  public void setPrototypeDisplayValue(Object prototypeDisplayValue)\n+  public void setPrototypeDisplayValue(Object newPrototypeDisplayValue)\n   {\n-    this.prototypeDisplayValue = prototypeDisplayValue;\n+    prototypeDisplayValue = newPrototypeDisplayValue;\n   }\n \n   /**\n    * This method adds given element to this JComboBox.\n+   * <p>A <code>RuntimeException</code> is thrown if the data model is not\n+   * an instance of {@link MutableComboBoxModel}.</p>\n    *\n    * @param element element to add\n    */\n   public void addItem(Object element)\n   {\n-    ((MutableComboBoxModel) dataModel).addElement(element);\n+  \tif(dataModel instanceof MutableComboBoxModel) {\n+\t\t((MutableComboBoxModel) dataModel).addElement(element);\n+  \t} else {\n+  \t\tthrow new RuntimeException(\"Unable to add the item because the data model it is not an instance of MutableComboBoxModel.\");\n+  \t}\n   }\n \n   /**\n-   * Inserts given element at the specified index to this JComboBox\n+   * Inserts given element at the specified index to this JComboBox.\n+   * <p>A <code>RuntimeException</code> is thrown if the data model is not\n+   * an instance of {@link MutableComboBoxModel}.</p>\n    *\n    * @param element element to insert\n    * @param index position where to insert the element\n    */\n   public void insertItemAt(Object element, int index)\n   {\n-    ((MutableComboBoxModel) dataModel).insertElementAt(element, index);\n+\tif(dataModel instanceof MutableComboBoxModel) {\n+\t\t((MutableComboBoxModel) dataModel).insertElementAt(element, index);\n+\t} else {\n+\t\tthrow new RuntimeException(\"Unable to insert the item because the data model it is not an instance of MutableComboBoxModel.\");\n+\t}\n   }\n \n   /**\n    * This method removes given element from this JComboBox.\n+   * <p>A <code>RuntimeException</code> is thrown if the data model is not\n+   * an instance of {@link MutableComboBoxModel}.</p>\n    *\n    * @param element element to remove\n    */\n   public void removeItem(Object element)\n   {\n-    ((MutableComboBoxModel) dataModel).removeElement(element);\n+\tif(dataModel instanceof MutableComboBoxModel) {\n+\t\t((MutableComboBoxModel) dataModel).removeElement(element);\n+\t} else {\n+\t\tthrow new RuntimeException(\"Unable to remove the item because the data model it is not an instance of MutableComboBoxModel.\");\n+\t}\n   }\n \n   /**\n    * This method remove element location in the specified index in the\n    * JComboBox.\n+   * <p>A <code>RuntimeException</code> is thrown if the data model is not\n+   * an instance of {@link MutableComboBoxModel}.</p>\n    *\n    * @param index index specifying position of the element to remove\n    */\n   public void removeItemAt(int index)\n   {\n-    ((MutableComboBoxModel) dataModel).removeElementAt(index);\n+\tif(dataModel instanceof MutableComboBoxModel) {\n+\t\t((MutableComboBoxModel) dataModel).removeElementAt(index);\n+\t} else {\n+\t\tthrow new RuntimeException(\"Unable to remove the item because the data model it is not an instance of MutableComboBoxModel.\");\n+\t}\n   }\n \n   /**\n    * This method removes all elements from this JComboBox.\n+   * <p>A <code>RuntimeException</code> is thrown if the data model is not\n+   * an instance of {@link MutableComboBoxModel}.</p>\n+   * \n    */\n   public void removeAllItems()\n   {\n-    if (dataModel instanceof DefaultComboBoxModel)\n-      ((DefaultComboBoxModel) dataModel).removeAllElements();\n+    if (dataModel instanceof DefaultComboBoxModel) {\n+    \t// Uses special method if we have a DefaultComboBoxModel.\n+\t((DefaultComboBoxModel) dataModel).removeAllElements();\n+    } else if(dataModel instanceof MutableComboBoxModel){\n+    \t// Iterates over all items and removes each.\n+    \tMutableComboBoxModel mcbm = (MutableComboBoxModel) dataModel;\n+\n+\t/* We intentionally remove the items backwards to support\n+\t * models which shift their content to the beginning (e.g.\n+\t * linked lists) \n+\t */     \t\n+    \tfor(int i=mcbm.getSize()-1; i >= 0; i--) {\n+    \t\tmcbm.removeElementAt(i);\n+    \t}\n+    \t\n+    } else {\n+\tthrow new RuntimeException(\"Unable to remove the items because the data model it is not an instance of MutableComboBoxModel.\");\n+    }\n+      \n   }\n \n   /**\n@@ -801,8 +846,7 @@ protected void selectedItemChanged()\n    */\n   public Object[] getSelectedObjects()\n   {\n-    Object selectedObject = getSelectedItem();\n-    return new Object[] { selectedObject };\n+    return new Object[] { getSelectedItem() };\n   }\n \n   /**\n@@ -887,8 +931,7 @@ public void setEnabled(boolean enabled)\n     if (enabled != oldEnabled)\n       {\n \tsuper.setEnabled(enabled);\n-\tfirePropertyChange(ENABLED_CHANGED_PROPERTY, oldEnabled,\n-\t                   (boolean) enabled);\n+\tfirePropertyChange(\"enabled\", oldEnabled, enabled);\n       }\n   }\n \n@@ -951,7 +994,7 @@ public KeySelectionManager getKeySelectionManager()\n    */\n   public int getItemCount()\n   {\n-    return ((DefaultComboBoxModel) dataModel).getSize();\n+    return dataModel.getSize();\n   }\n \n   /**\n@@ -963,7 +1006,7 @@ public int getItemCount()\n    */\n   public Object getItemAt(int index)\n   {\n-    return ((MutableComboBoxModel) dataModel).getElementAt(index);\n+    return dataModel.getElementAt(index);\n   }\n \n   /**"}, {"sha": "8f2bc9502f9fa8bcb975d6c3c9342fcceca86c62", "filename": "libjava/javax/swing/JComponent.java", "status": "modified", "additions": 56, "deletions": 5, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComponent.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JComponent.java -- Every component in swing inherits from this class.\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -50,6 +50,7 @@\n import java.awt.Insets;\n import java.awt.Point;\n import java.awt.Rectangle;\n+import java.awt.dnd.DropTarget;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.awt.event.ContainerEvent;\n@@ -72,6 +73,7 @@\n \n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleKeyBinding;\n import javax.accessibility.AccessibleRole;\n import javax.accessibility.AccessibleStateSet;\n import javax.swing.border.Border;\n@@ -133,6 +135,9 @@ public void removePropertyChangeListener(PropertyChangeListener listener) {}\n     public String getAccessibleDescription() { return null; }\n     public AccessibleRole getAccessibleRole() { return null; }\n     protected String getBorderTitle(Border value0) { return null; }\n+    public String getToolTipText() { return null; }\n+    public String getTitledBorderText() { return null; }\n+    public AccessibleKeyBinding getAccessibleKeyBinding() { return null; }\n   }\n \n   /** \n@@ -323,6 +328,8 @@ public void removePropertyChangeListener(PropertyChangeListener listener) {}\n   private InputMap inputMap_whenAncestorOfFocused;\n   private InputMap inputMap_whenInFocusedWindow;\n   private ActionMap actionMap;\n+  /** @since 1.3 */\n+  private boolean verifyInputWhenFocusTarget;\n   private InputVerifier inputVerifier;\n \n   private TransferHandler transferHandler;\n@@ -389,6 +396,7 @@ public JComponent()\n   {\n     super();\n     super.setLayout(new FlowLayout());\n+    setDropTarget(new DropTarget());\n     defaultLocale = Locale.getDefault();\n     debugGraphicsOptions = DebugGraphics.NONE_OPTION;\n   }\n@@ -421,7 +429,7 @@ private Hashtable getClientProperties()\n    * @see #getClientProperties\n    * @see #putClientProperty\n    */\n-  public Object getClientProperty(Object key)\n+  public final Object getClientProperty(Object key)\n   {\n     return getClientProperties().get(key);\n   }\n@@ -438,7 +446,7 @@ public Object getClientProperty(Object key)\n    * @see #getClientProperties\n    * @see #getClientProperty\n    */\n-  public void putClientProperty(Object key, Object value)\n+  public final void putClientProperty(Object key, Object value)\n   {\n     getClientProperties().put(key, value);\n   }\n@@ -1533,7 +1541,23 @@ public void paintImmediately(Rectangle r)\n    */\n   protected String paramString()\n   {\n-    return \"JComponent\";\n+    StringBuffer sb = new StringBuffer();\n+    sb.append(super.paramString());\n+    sb.append(\",alignmentX=\").append(getAlignmentX());\n+    sb.append(\",alignmentY=\").append(getAlignmentY());\n+    sb.append(\",border=\");\n+    if (getBorder() != null)\n+      sb.append(getBorder());\n+    sb.append(\",maximumSize=\");\n+    if (getMaximumSize() != null)\n+      sb.append(getMaximumSize());\n+    sb.append(\",minimumSize=\");\n+    if (getMinimumSize() != null)\n+      sb.append(getMinimumSize());\n+    sb.append(\",preferredSize=\");\n+    if (getPreferredSize() != null)\n+      sb.append(getPreferredSize());\n+    return sb.toString();\n   }\n \n   /**\n@@ -2092,9 +2116,14 @@ public TransferHandler getTransferHandler()\n    * @see ComponentUI#getTransferHandler\n    */\n \n-  void setTransferHandler (TransferHandler newHandler)\n+  public void setTransferHandler(TransferHandler newHandler)\n   {\n+    if (transferHandler == newHandler)\n+      return;\n+\n+    TransferHandler oldHandler = transferHandler;\n     transferHandler = newHandler;\n+    firePropertyChange(\"transferHandler\", oldHandler, newHandler);\n   }\n \n   /**\n@@ -2225,4 +2254,26 @@ public void setInputVerifier(InputVerifier verifier)\n     inputVerifier = verifier;\n     firePropertyChange(\"inputVerifier\", oldVerifier, verifier);\n   }\n+\n+  /**\n+   * @since 1.3\n+   */\n+  public boolean getVerifyInputWhenFocusTarget()\n+  {\n+    return verifyInputWhenFocusTarget;\n+  }\n+\n+  /**\n+   * @since 1.3\n+   */\n+  public void setVerifyInputWhenFocusTarget(boolean verifyInputWhenFocusTarget)\n+  {\n+    if (this.verifyInputWhenFocusTarget == verifyInputWhenFocusTarget)\n+      return;\n+\n+    this.verifyInputWhenFocusTarget = verifyInputWhenFocusTarget;\n+    firePropertyChange(\"verifyInputWhenFocusTarget\",\n+\t\t       ! verifyInputWhenFocusTarget,\n+\t\t       verifyInputWhenFocusTarget);\n+  }\n }"}, {"sha": "8361b20371b927941a0d5536300f82f5ade62419", "filename": "libjava/javax/swing/JEditorPane.java", "status": "modified", "additions": 59, "deletions": 24, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJEditorPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJEditorPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJEditorPane.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JEditorPane.java --\n-   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,6 +47,7 @@\n import javax.accessibility.AccessibleContext;\n import javax.swing.event.HyperlinkEvent;\n import javax.swing.event.HyperlinkListener;\n+import javax.swing.text.BadLocationException;\n import javax.swing.text.DefaultEditorKit;\n import javax.swing.text.EditorKit;\n import javax.swing.text.JTextComponent;\n@@ -56,29 +57,31 @@ public class JEditorPane extends JTextComponent\n {\n   private static final long serialVersionUID = 3140472492599046285L;\n   \n-  URL page_url;\n-  EditorKit kit;\n-  String ctype = \"text/plain\";\n+  private URL page;\n+  private EditorKit editorKit;\n+  \n   boolean focus_root;\n   boolean manages_focus;\n \n   public JEditorPane()\n   {\n+    setEditorKit(createDefaultEditorKit());\n   }\n \n   public JEditorPane(String url) throws IOException\n   {\n-    setPage(url);\n+    this(new URL(url));\n   }\n \n   public JEditorPane(String type, String text)\n   {\n-    ctype = text;\n+    setEditorKit(createEditorKitForContentType(type));\n     setText(text);\n   }\n \n   public JEditorPane(URL url) throws IOException\n   {\n+    this();\n     setPage(url);\n   }\n \n@@ -110,14 +113,14 @@ public AccessibleContext getAccessibleContext()\n     return null;\n   }\n \n-  public String getContentType()\n+  public final String getContentType()\n   {\n-    return ctype;\n+    return getEditorKit().getContentType();\n   }\n \n   public EditorKit getEditorKit()\n   {\n-    return kit;\n+    return editorKit;\n   }\n \n   public static String getEditorKitClassNameForContentType(String type)\n@@ -127,7 +130,7 @@ public static String getEditorKitClassNameForContentType(String type)\n \n   public EditorKit getEditorKitForContentType(String type)\n   {\n-    return kit;\n+    return editorKit;\n   }\n \n   /**\n@@ -150,7 +153,7 @@ public boolean getScrollableTracksViewportWidth()\n \n   public URL getPage()\n   {\n-    return page_url;\n+    return page;\n   }\n \n   protected InputStream getStream(URL page)\n@@ -216,7 +219,7 @@ public static void registerEditorKitForContentType(String type,\n   }\n \n   /**\n-   * Establishes the default bindings of type to classname.  \n+   * Establishes the default bindings of type to classname.\n    */\n   public static void registerEditorKitForContentType(String type,\n                                                      String classname,\n@@ -240,38 +243,70 @@ public void scrollToReference(String reference)\n   {\n   }\n \n-  public void setContentType(String type)\n-  {\n-    ctype = type;\n-    invalidate();\n-    repaint();\n-  }\n-\n-  public void setEditorKit(EditorKit kit)\n-  {\n-    this.kit = kit;\n+  public final void setContentType(String type)\n+  {\n+    if (editorKit != null\n+\t&& editorKit.getContentType().equals(type))\n+      return;\n+    \t      \n+    EditorKit kit = getEditorKitForContentType(type);\n+\t    \t\n+    if (kit != null)\n+      setEditorKit(kit);\n+  }\n+\n+  public void setEditorKit(EditorKit newValue)\n+  {\n+    if (editorKit == newValue)\n+      return;\n+    \t\n+    if (editorKit != null)\n+      editorKit.deinstall(this);\n+\t    \t    \n+    EditorKit oldValue = editorKit;\n+    editorKit = newValue;\n+\t\t\t    \t\n+    if (editorKit != null)\n+      {\n+\teditorKit.install(this);\n+\tsetDocument(editorKit.createDefaultDocument());\n+      }\n+\t\t\t\t    \t    \n+    firePropertyChange(\"editorKit\", oldValue, newValue);\n     invalidate();\n     repaint();\n   }\n \n   public void setEditorKitForContentType(String type, EditorKit k)\n   {\n-    ctype = type;\n-    setEditorKit(k);\n+    // FIXME: editorKitCache.put(type, kit);\n   }\n \n   /**\n    * Sets the current URL being displayed.  \n    */\n   public void setPage(String url) throws IOException\n   {\n+    setPage(new URL(url));\n   }\n \n   /**\n    * Sets the current URL being displayed.  \n    */\n   public void setPage(URL page) throws IOException\n   {\n+    if (page == null)\n+      throw new IOException(\"invalid url\");\n+\n+    try\n+      {\n+\tthis.page = page;\n+\tgetEditorKit().read(page.openStream(), getDocument(), 0);\n+      }\n+    catch (BadLocationException e)\n+      {\n+\t// Ignored. '0' is always a valid offset.\n+      }\n   }\n \n   public void setText(String t)"}, {"sha": "9b937178901a6f33bc956eaf963c7bb424a15172", "filename": "libjava/javax/swing/JFileChooser.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJFileChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJFileChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFileChooser.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -522,7 +522,7 @@ public void ensureFileIsVisible(File file) {\n \t * @returns int\n \t */\n \tpublic int showOpenDialog(Component parent) {\n-\t\treturn 0; // TODO\n+\t\treturn CANCEL_OPTION; // TODO\n \t} // showOpenDialog()\n \n \t/**\n@@ -531,7 +531,7 @@ public int showOpenDialog(Component parent) {\n \t * @returns int\n \t */\n \tpublic int showSaveDialog(Component parent) {\n-\t\treturn 0; // TODO\n+\t\treturn CANCEL_OPTION; // TODO\n \t} // showSaveDialog()\n \n \t/**\n@@ -541,7 +541,7 @@ public int showSaveDialog(Component parent) {\n \t * @returns int\n \t */\n \tpublic int showDialog(Component parent, String approveButtonText) {\n-\t\treturn 0; // TODO\n+\t\treturn CANCEL_OPTION; // TODO\n \t} // showDialog()\n \n \t/**"}, {"sha": "f544aec117f35bfb7dd2b3d89d6e0daf7886c8a4", "filename": "libjava/javax/swing/JFormattedTextField.java", "status": "modified", "additions": 77, "deletions": 26, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFormattedTextField.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -59,6 +59,8 @@ public abstract static class AbstractFormatter implements Serializable\n   {\n     private static final long serialVersionUID = -5193212041738979680L;\n     \n+    private JFormattedTextField textField;\n+    \n     public AbstractFormatter ()\n     {\n       //Do nothing here.\n@@ -72,7 +74,7 @@ protected Object clone ()\n \n     protected Action[] getActions ()\n     {\n-      throw new InternalError (\"not implemented\");\n+      return textField.getActions();\n     }\n \n     protected DocumentFilter getDocumentFilter ()\n@@ -82,32 +84,35 @@ protected DocumentFilter getDocumentFilter ()\n \n     protected JFormattedTextField getFormattedTextField ()\n     {\n-      throw new InternalError (\"not implemented\");\n+      return textField;\n     }\n \n     protected NavigationFilter getNavigationFilter ()\n     {\n-      throw new InternalError (\"not implemented\");\n+      return textField.getNavigationFilter();\n     }\n \n-    public void install (JFormattedTextField ftf)\n+    public void install(JFormattedTextField textField)\n     {\n-      throw new InternalError (\"not implemented\");\n+      if (this.textField != null)\n+\tuninstall();\n+      \n+      this.textField = textField;\n     }\n \n     public void uninstall ()\n     {\n-      throw new InternalError (\"not implemented\");\n+      this.textField = null;\n     }\n \n     protected void invalidEdit ()\n     {\n-      throw new InternalError (\"not implemented\");\n+      textField.invalidEdit();\n     }\n \n     protected void setEditValid (boolean valid)\n     {\n-      throw new InternalError (\"not implemented\");\n+      textField.editValid = valid;\n     }\n \n     public abstract Object stringToValue (String text)\n@@ -127,16 +132,34 @@ public AbstractFormatterFactory ()\n     public abstract AbstractFormatter getFormatter (JFormattedTextField tf);\n   }\n \n+  static class FormatterFactoryWrapper extends AbstractFormatterFactory\n+  {\n+    AbstractFormatter formatter;\n+\n+    public FormatterFactoryWrapper(AbstractFormatter formatter)\n+    {\n+      this.formatter = formatter;\n+    }\n+\n+    public AbstractFormatter getFormatter(JFormattedTextField tf)\n+    {\n+      return formatter;\n+    }\n+  }\n+\n   public static final int COMMIT = 0;\n   public static final int COMMIT_OR_REVERT = 1;\n   public static final int REVERT = 2;\n   public static final int PERSIST = 3;\n \n   private Object value;\n+  private int focusLostBehavior = COMMIT_OR_REVERT;\n+  private AbstractFormatterFactory formatterFactory;\n+  private boolean editValid = true;\n   \n   public JFormattedTextField ()\n   {\n-    this((AbstractFormatterFactory) null);\n+    this((AbstractFormatterFactory) null, null);\n   }\n \n   public JFormattedTextField (Format format)\n@@ -146,7 +169,7 @@ public JFormattedTextField (Format format)\n \n   public JFormattedTextField (AbstractFormatter formatter)\n   {\n-    throw new InternalError (\"not implemented\");\n+    this(new FormatterFactoryWrapper(formatter), null);\n   }\n \n   public JFormattedTextField (AbstractFormatterFactory factory)\n@@ -156,7 +179,8 @@ public JFormattedTextField (AbstractFormatterFactory factory)\n \n   public JFormattedTextField (AbstractFormatterFactory factory, Object value)\n   {\n-    throw new InternalError (\"not implemented\");\n+    this.formatterFactory = factory;\n+    this.value = value;\n   }\n \n   public JFormattedTextField (Object value)\n@@ -175,19 +199,22 @@ public Action[] getActions ()\n     throw new InternalError (\"not implemented\");\n   }\n \n-  public int getFocusLostBehaviour ()\n+  public int getFocusLostBehavior()\n   {\n-    throw new InternalError (\"not implemented\");\n+    return focusLostBehavior;\n   }\n \n   public AbstractFormatter getFormatter ()\n   {\n-    throw new InternalError (\"not implemented\");\n+    if (formatterFactory == null)\n+      return null;\n+    \n+    return formatterFactory.getFormatter(this);\n   }\n \n   public AbstractFormatterFactory getFormatterFactory ()\n   {\n-    throw new InternalError (\"not implemented\");\n+    return formatterFactory;\n   }\n \n   public String getUIClassID ()\n@@ -202,47 +229,71 @@ public Object getValue ()\n \n   protected void invalidEdit ()\n   {\n-    throw new InternalError (\"not implemented\");\n+    UIManager.getLookAndFeel().provideErrorFeedback(this);\n   }\n \n   public boolean isEditValid ()\n   {\n-    throw new InternalError (\"not implemented\");\n+    return editValid;\n   }\n \n   protected void processFocusEvent (FocusEvent evt)\n   {\n     throw new InternalError (\"not implemented\");\n   }\n \n-  public void setDocument(Document newdoc)\n+  public void setDocument(Document newDocument)\n   {\n-    Document document = getDocument();\n+    Document oldDocument = getDocument();\n \n-    if (document == newdoc)\n+    if (oldDocument == newDocument)\n       return;\n     \n-    setDocument(newdoc);\n-    firePropertyChange(\"document\", document, newdoc);\n+    super.setDocument(newDocument);\n   }\n \n-  public void setLostFocusBehavior (int behavior)\n+  public void setFocusLostBehavior(int behavior)\n   {\n-    throw new InternalError (\"not implemented\");\n+    if (behavior != COMMIT\n+\t&& behavior != COMMIT_OR_REVERT\n+\t&& behavior != PERSIST\n+\t&& behavior != REVERT)\n+      throw new IllegalArgumentException(\"invalid behavior\");\n+\n+    this.focusLostBehavior = behavior;\n   }\n \n   protected void setFormatter (AbstractFormatter formatter)\n   {\n-    throw new InternalError (\"not implemented\");\n+    AbstractFormatter oldFormatter = null;\n+    \n+    if (formatterFactory != null)\n+      oldFormatter = formatterFactory.getFormatter(this);\n+\n+    if (oldFormatter == formatter)\n+      return;\n+\n+    setFormatterFactory(new FormatterFactoryWrapper(formatter));\n+    firePropertyChange(\"formatter\", oldFormatter, formatter);\n   }\n \n   public void setFormatterFactory (AbstractFormatterFactory factory)\n   {\n-    throw new InternalError (\"not implemented\");\n+    if (formatterFactory == factory)\n+      return;\n+    \n+    AbstractFormatterFactory oldFactory = formatterFactory;\n+    formatterFactory = factory;\n+    firePropertyChange(\"formatterFactory\", oldFactory, factory);\n   }\n \n   public void setValue (Object newValue)\n   {\n+    if (value == newValue)\n+      return;\n+    \n+    Object oldValue = value;\n     value = newValue;\n+    firePropertyChange(\"value\", oldValue, newValue);\n   }\n }"}, {"sha": "c450d0f50e7123bd64b97dae921bcec55952f6a0", "filename": "libjava/javax/swing/JFrame.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFrame.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JFrame.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -123,7 +123,7 @@ public JRootPane getRootPane()\n     return rootPane;\n   }\n \n-  public void setRootPane(JRootPane root)\n+  protected void setRootPane(JRootPane root)\n   {\n     if (rootPane != null)\n       remove(rootPane);\n@@ -132,7 +132,7 @@ public void setRootPane(JRootPane root)\n     add(rootPane, BorderLayout.CENTER);\n   }\n \n-  public JRootPane createRootPane()\n+  protected JRootPane createRootPane()\n   {\n     return new JRootPane();\n   }"}, {"sha": "dba15460c48805d9770c48f7071ec8f9a2dc4d89", "filename": "libjava/javax/swing/JInternalFrame.java", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJInternalFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJInternalFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJInternalFrame.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n-/* JInternalFrame.java -- \n-   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n+/* JInternalFrame.java --\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -780,9 +780,11 @@ public JDesktopPane getDesktopPane()\n    * This method returns null because this must always be the root of a focus\n    * traversal.\n    *\n-   * @return null.\n+   * @return always null\n+   *\n+   * @since 1.4\n    */\n-  public Container getFocusCycleRootAncestor()\n+  public final Container getFocusCycleRootAncestor()\n   {\n     // as defined.\n     return null;\n@@ -860,7 +862,7 @@ public int getLayer()\n   {\n     JDesktopPane pane = getDesktopPane();\n     if (pane != null)\n-      return pane.getLayer(this).intValue();\n+      return pane.getLayer(this);\n     return -1;\n   }\n \n@@ -968,7 +970,7 @@ public String getUIClassID()\n    *\n    * @return null.\n    */\n-  public String getWarningString()\n+  public final String getWarningString()\n   {\n     // as defined.\n     return null;\n@@ -1019,9 +1021,11 @@ public boolean isClosed()\n   /**\n    * This must always return true.\n    *\n-   * @return True\n+   * @return always true\n+   *\n+   * @since 1.4\n    */\n-  public boolean isFocusCycleRoot()\n+  public final boolean isFocusCycleRoot()\n   {\n     return true;\n   }\n@@ -1272,8 +1276,9 @@ public void setContentPane(Container c)\n    */\n   public void setDefaultCloseOperation(int operation)\n   {\n-    if (operation != DO_NOTHING_ON_CLOSE || operation != HIDE_ON_CLOSE\n-        || operation != DISPOSE_ON_CLOSE)\n+    if (operation != DO_NOTHING_ON_CLOSE\n+\t&& operation != HIDE_ON_CLOSE\n+        && operation != DISPOSE_ON_CLOSE)\n       throw new Error(\"Close operation must be one of DO_NOTHING_ON_CLOSE, HIDE_ON_CLOSE, or DISPOSE_ON_CLOSE\");\n     defaultCloseOperation = operation;\n   }"}, {"sha": "c01d8110d9ba84104815538c102434627961ccd2", "filename": "libjava/javax/swing/JLabel.java", "status": "modified", "additions": 30, "deletions": 77, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLabel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JLabel.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -91,59 +91,6 @@ public class JLabel extends JComponent implements Accessible, SwingConstants\n   /** The gap between the icon and the text. */\n   private transient int iconTextGap = 4;\n \n-  /**\n-   * Fired in a PropertyChangeEvent when the \"disabledIcon\" property changes.\n-   */\n-  public static final String DISABLED_ICON_CHANGED_PROPERTY = \"disabledIcon\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the \"displayedMnemonic\" property\n-   * changes.\n-   */\n-  public static final String DISPLAYED_MNEMONIC_CHANGED_PROPERTY = \"displayedMnemonic\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the \"displayedMnemonicIndex\" property\n-   * changes.\n-   */\n-  public static final String DISPLAYED_MNEMONIC_INDEX_CHANGED_PROPERTY = \"displayedMnemonicIndex\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the \"horizontalAlignment\" property\n-   * changes.\n-   */\n-  public static final String HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY = \"horizontalAlignment\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the \"horizontalTextPosition\" property\n-   * changes.\n-   */\n-  public static final String HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY = \"horizontalTextPosition\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"icon\" property changes. */\n-  public static final String ICON_CHANGED_PROPERTY = \"icon\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"iconTextGap\" property changes. */\n-  public static final String ICON_TEXT_GAP_CHANGED_PROPERTY = \"iconTextGap\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"labelFor\" property changes. */\n-  public static final String LABEL_FOR_CHANGED_PROPERTY = \"labelFor\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"text\" property changes. */\n-  public static final String TEXT_CHANGED_PROPERTY = \"text\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the \"verticalAlignment\" property\n-   * changes.\n-   */\n-  public static final String VERTICAL_ALIGNMENT_CHANGED_PROPERTY = \"verticalAlignment\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the \"verticalTextPosition\" property\n-   * changes.\n-   */\n-  public static final String VERTICAL_TEXT_POSITION_CHANGED_PROPERTY = \"verticalTextPosition\";\n-\n   /**\n    * Creates a new horizontally and vertically centered JLabel object with no\n    * text and no icon.\n@@ -289,7 +236,7 @@ public void setText(String newText)\n       {\n \tString oldText = text;\n \ttext = newText;\n-\tfirePropertyChange(TEXT_CHANGED_PROPERTY, oldText, newText);\n+\tfirePropertyChange(\"text\", oldText, newText);\n \n \tif (text != null && text.length() <= displayedMnemonicIndex)\n \t  setDisplayedMnemonicIndex(text.length() - 1);\n@@ -319,7 +266,7 @@ public void setIcon(Icon newIcon)\n       {\n \tIcon oldIcon = icon;\n \ticon = newIcon;\n-\tfirePropertyChange(ICON_CHANGED_PROPERTY, oldIcon, newIcon);\n+\tfirePropertyChange(\"icon\", oldIcon, newIcon);\n       }\n   }\n \n@@ -352,7 +299,7 @@ public void setDisabledIcon(Icon newIcon)\n       {\n \tIcon oldIcon = disabledIcon;\n \tdisabledIcon = newIcon;\n-\tfirePropertyChange(DISABLED_ICON_CHANGED_PROPERTY, oldIcon, newIcon);\n+\tfirePropertyChange(\"disabledIcon\", oldIcon, newIcon);\n       }\n   }\n \n@@ -367,12 +314,12 @@ public void setDisplayedMnemonic(int mnemonic)\n   {\n     if (displayedMnemonic != mnemonic)\n       {\n-\tfirePropertyChange(DISPLAYED_MNEMONIC_CHANGED_PROPERTY,\n+\tfirePropertyChange(\"displayedMnemonic\",\n \t                   displayedMnemonic, mnemonic);\n \tdisplayedMnemonic = mnemonic;\n \n \tif (text != null)\n-\t  setDisplayedMnemonicIndex(text.indexOf(mnemonic));\n+\t  setDisplayedMnemonicIndex(text.toUpperCase().indexOf(mnemonic));\n       }\n   }\n \n@@ -385,7 +332,7 @@ public void setDisplayedMnemonic(int mnemonic)\n    */\n   public void setDisplayedMnemonic(char mnemonic)\n   {\n-    setDisplayedMnemonic((int) mnemonic);\n+    setDisplayedMnemonic((int) Character.toUpperCase(mnemonic));\n   }\n \n   /**\n@@ -399,7 +346,7 @@ public int getDisplayedMnemonic()\n   }\n \n   /**\n-   * This method sets which character in the text will be  the underlined\n+   * This method sets which character in the text will be the underlined\n    * character. If the given index is -1, then this indicates  that there is\n    * no mnemonic. If the index is less than -1 or if the index is equal to\n    * the length, this method will throw an IllegalArgumentException.\n@@ -410,19 +357,22 @@ public int getDisplayedMnemonic()\n    *         length.\n    */\n   public void setDisplayedMnemonicIndex(int newIndex)\n-                                 throws IllegalArgumentException\n+    throws IllegalArgumentException\n   {\n     if (newIndex < -1 || (text != null && newIndex >= text.length()))\n       throw new IllegalArgumentException();\n \n-    if (text == null || text.charAt(newIndex) != displayedMnemonic)\n+    if (newIndex == -1\n+        || text == null\n+\t|| text.charAt(newIndex) != displayedMnemonic)\n       newIndex = -1;\n \n     if (newIndex != displayedMnemonicIndex)\n       {\n-\tfirePropertyChange(DISPLAYED_MNEMONIC_INDEX_CHANGED_PROPERTY,\n-\t                   displayedMnemonicIndex, newIndex);\n+\tint oldIndex = displayedMnemonicIndex;\n \tdisplayedMnemonicIndex = newIndex;\n+\tfirePropertyChange(\"displayedMnemonicIndex\",\n+\t                   oldIndex, newIndex);\n       }\n   }\n \n@@ -498,7 +448,7 @@ public void setIconTextGap(int newGap)\n   {\n     if (iconTextGap != newGap)\n       {\n-\tfirePropertyChange(ICON_TEXT_GAP_CHANGED_PROPERTY, iconTextGap, newGap);\n+\tfirePropertyChange(\"iconTextGap\", iconTextGap, newGap);\n \ticonTextGap = newGap;\n       }\n   }\n@@ -523,13 +473,12 @@ public int getVerticalAlignment()\n    */\n   public void setVerticalAlignment(int alignment)\n   {\n-    if (alignment != verticalAlignment)\n-      {\n-\tint oldAlignment = verticalAlignment;\n-\tverticalAlignment = checkVerticalKey(alignment, \"verticalAlignment\");\n-\tfirePropertyChange(VERTICAL_ALIGNMENT_CHANGED_PROPERTY, oldAlignment,\n-\t                   verticalAlignment);\n-      }\n+    if (alignment == verticalAlignment)\n+      return;\n+\n+    int oldAlignment = verticalAlignment;\n+    verticalAlignment = checkVerticalKey(alignment, \"verticalAlignment\");\n+    firePropertyChange(\"verticalAlignment\", oldAlignment, verticalAlignment);\n   }\n \n   /**\n@@ -550,9 +499,12 @@ public int getHorizontalAlignment()\n    */\n   public void setHorizontalAlignment(int alignment)\n   {\n+    if (horizontalAlignment == alignment)\n+      return;\n+    \n     int oldAlignment = horizontalAlignment;\n     horizontalAlignment = checkHorizontalKey(alignment, \"horizontalAlignment\");\n-    firePropertyChange(HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY, oldAlignment,\n+    firePropertyChange(\"horizontalAlignment\", oldAlignment,\n                        horizontalAlignment);\n   }\n \n@@ -580,7 +532,7 @@ public void setVerticalTextPosition(int textPosition)\n \tint oldPos = verticalTextPosition;\n \tverticalTextPosition = checkVerticalKey(textPosition,\n \t                                        \"verticalTextPosition\");\n-\tfirePropertyChange(VERTICAL_TEXT_POSITION_CHANGED_PROPERTY, oldPos,\n+\tfirePropertyChange(\"verticalTextPosition\", oldPos,\n \t                   verticalTextPosition);\n       }\n   }\n@@ -609,7 +561,7 @@ public void setHorizontalTextPosition(int textPosition)\n \tint oldPos = horizontalTextPosition;\n \thorizontalTextPosition = checkHorizontalKey(textPosition,\n \t                                            \"horizontalTextPosition\");\n-\tfirePropertyChange(HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY, oldPos,\n+\tfirePropertyChange(\"horizontalTextPosition\", oldPos,\n \t                   horizontalTextPosition);\n       }\n   }\n@@ -665,8 +617,9 @@ public void setLabelFor(Component c)\n   {\n     if (c != labelFor)\n       {\n-\tfirePropertyChange(LABEL_FOR_CHANGED_PROPERTY, labelFor, c);\n+\tComponent oldLabelFor = labelFor;\n \tlabelFor = c;\n+\tfirePropertyChange(\"labelFor\", oldLabelFor, labelFor);\n       }\n   }\n "}, {"sha": "cdafd8b869f478b39f79fe82481c272cdf82413e", "filename": "libjava/javax/swing/JLayeredPane.java", "status": "modified", "additions": 20, "deletions": 41, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJLayeredPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJLayeredPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJLayeredPane.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -89,7 +89,7 @@\n  * <p><b>Note:</b> the layer numbering order is the <em>reverse</em> of the\n  * component indexing and position order</p>\n  *\n- * @author Graydon Hoare <graydon@redhat.com>\n+ * @author Graydon Hoare (graydon@redhat.com)\n  */\n public class JLayeredPane extends JComponent implements Accessible\n {\n@@ -122,12 +122,11 @@ public JLayeredPane()\n    * @return the layer the component is currently assigned to, in this container.\n    * @throws IllegalArgumentException if the component is not a child of this container.\n    */\n-\n-  protected Integer getLayer (Component c)\n+  public int getLayer(Component c)\n   {\n     if (! componentToLayer.containsKey (c))\n \t    throw new IllegalArgumentException ();\n-    return (Integer) componentToLayer.get (c);\n+    return ((Integer) componentToLayer.get(c)).intValue();\n   }\n \n   /**\n@@ -144,8 +143,7 @@ protected Integer getLayer (Component c)\n    * @throws IllegalArgumentException if layer does not refer to an active layer\n    * in this container.\n    */\n-\n-  protected int[] layerToRange (Integer layer)\n+  private int[] layerToRange (Integer layer)\n   {\n     int[] ret = new int[2];\n     ret[1] = getComponents ().length;\n@@ -175,8 +173,7 @@ protected int[] layerToRange (Integer layer)\n    * @param layer the layer number to increment.\n    * @see #incrLayer()\n    */\n-\n-  protected void incrLayer(Integer layer)\n+  private void incrLayer(Integer layer)\n   {\n     int sz = 1;\n     if (layers.containsKey (layer))\n@@ -190,8 +187,7 @@ protected void incrLayer(Integer layer)\n    * @param layer the layer number to decrement.\n    * @see #decrLayer()\n    */\n-\n-  protected void decrLayer(Integer layer)\n+  private void decrLayer(Integer layer)\n   {\n     int sz = 0;\n     if (layers.containsKey (layer))\n@@ -206,7 +202,6 @@ protected void decrLayer(Integer layer)\n    * @return the least layer number.\n    * @see #lowestLayer()\n    */\n-\n   public int highestLayer()\n   {\n     if (layers.size() == 0)\n@@ -221,7 +216,6 @@ public int highestLayer()\n    * @return the least layer number.\n    * @see #highestLayer()\n    */\n-    \n   public int lowestLayer()\n   {\n     if (layers.size() == 0)\n@@ -240,7 +234,6 @@ public int lowestLayer()\n    * this container.\n    * @see #moveToBack()\n    */\n-\n   public void moveToFront(Component c)\n   {\n     setPosition (c, 0);\n@@ -260,7 +253,6 @@ public void moveToFront(Component c)\n    * this container.\n    * @see #moveToFront()\n    */\n-\n   public void moveToBack(Component c)\n   {\n     setPosition (c, -1);\n@@ -276,11 +268,10 @@ public void moveToBack(Component c)\n    * this container.\n    * @see #setPosition()\n    */\n-    \n   public int getPosition(Component c)\n   {\n-    Integer layer = getLayer (c);\n-    int[] range = layerToRange (layer);\n+    int layer = getLayer (c);\n+    int[] range = layerToRange(new Integer(layer));\n     int top = range[0];\n     int bot = range[1];\n     Component[] comps = getComponents ();\n@@ -304,33 +295,32 @@ public int getPosition(Component c)\n    * this container.\n    * @see #getPosition()\n    */\n-\n   public void setPosition(Component c, int position)\n   {\n-    Integer layer = getLayer (c);\n-    int[] range = layerToRange (layer);\n+    int layer = getLayer (c);\n+    int[] range = layerToRange(new Integer(layer));\n     if (range[0] == range[1])\n-\t    throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException ();\n \n     int top = range[0];\n     int bot = range[1];\n     if (position == -1)\n-\t    position = (bot - top) - 1;\n+      position = (bot - top) - 1;\n     int targ = Math.min(top + position, bot-1);\n     int curr = -1;\n \n     Component[] comps = getComponents();\n     for (int i = top; i < bot; ++i)\n-\t    {\n+      {\n         if (comps[i] == c)\n           {\n             curr = i;\n             break;\n           }\n-\t    }\n+      }\n     if (curr == -1)\n-\t    // should have found it\n-\t    throw new IllegalArgumentException ();\n+      // should have found it\n+      throw new IllegalArgumentException();\n \n     super.swapComponents (curr, targ);\n     revalidate();\n@@ -345,7 +335,6 @@ public void setPosition(Component c, int position)\n    * @param layer the layer to return components from.\n    * @return the components in the layer.\n    */\n-\n   public Component[] getComponentsInLayer(int layer)\n   {\n     int[] range = layerToRange (getObjectForLayer (layer));\n@@ -369,7 +358,6 @@ public Component[] getComponentsInLayer(int layer)\n    * @param layer the layer count components in.\n    * @return the number of components in the layer.\n    */\n-\n   public int getComponentCountInLayer(int layer)\n   {\n     int[] range = layerToRange (getObjectForLayer (layer));\n@@ -383,7 +371,6 @@ public int getComponentCountInLayer(int layer)\n    * Return a hashtable mapping child components of this container to\n    * Integer objects representing the component's layer assignments.\n    */\n-\n   protected Hashtable getComponentToLayer()\n   {\n     return componentToLayer;\n@@ -400,11 +387,10 @@ protected Hashtable getComponentToLayer()\n    * @throws IllegalArgumentException if the component is not a child of\n    * this container.\n    */\n-\n   public int getIndexOf(Component c) \n   {\n-    Integer layer = getLayer (c);\n-    int[] range = layerToRange (layer);\n+    int layer = getLayer (c);\n+    int[] range = layerToRange(new Integer(layer));\n     Component[] comps = getComponents();\n     for (int i = range[0]; i < range[1]; ++i)\n \t    {\n@@ -423,7 +409,6 @@ public int getIndexOf(Component c)\n    * @param layer the layer number as an int.\n    * @return the layer number as an Integer, possibly shared.\n    */\n-\n   protected Integer getObjectForLayer(int layer)\n   {\n     switch (layer)\n@@ -462,7 +447,6 @@ protected Integer getObjectForLayer(int layer)\n    * @param position the position in the layer at which to insert a component.\n    * @return the index at which to insert the component.\n    */\n-    \n   protected int insertIndexForLayer(int layer, int position)\n   {\n \n@@ -488,12 +472,11 @@ protected int insertIndexForLayer(int layer, int position)\n    *\n    * @param index the index of the child component to remove.\n    */\n-    \n   public void remove (int index)\n   {\n     Component c = getComponent (index);\n-    Integer layer = getLayer (c);\n-    decrLayer (layer);\n+    int layer = getLayer (c);\n+    decrLayer (new Integer(layer));\n     componentToLayer.remove (c);\n     super.remove (index);\n     revalidate();\n@@ -506,7 +489,6 @@ public void remove (int index)\n    *\n    * @param comp the child to remove.\n    */\n-\t\n   public void remove (Component comp)\n   {\n     remove (getIndexOf (comp));\n@@ -523,7 +505,6 @@ public void remove (Component comp)\n    * @param c the component to set the layer property for.\n    * @param layer the layer number to assign to the component.\n    */\n-\n   public void setLayer(Component c, int layer)\n   {\n     componentToLayer.put (c, getObjectForLayer (layer));\n@@ -536,7 +517,6 @@ public void setLayer(Component c, int layer)\n    * @param layer the layer number to assign to the component.\n    * @param position the position number to assign to the component.\n    */\n-\n   public void setLayer(Component c,\n                        int layer,\n                        int position)\n@@ -558,7 +538,6 @@ public void setLayer(Component c,\n    * @param layerConstraint an integer specifying the layer to add the component to.\n    * @param index an ignored parameter, for compatibility.\n    */\n-\n   protected void addImpl(Component comp, Object layerConstraint, int index) \n   {        \t\n     Integer layer;"}, {"sha": "f26fa8a0b2c7c27a4e29f1d552e1390eda382050", "filename": "libjava/javax/swing/JList.java", "status": "modified", "additions": 190, "deletions": 63, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJList.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JList.java --\n-   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -129,34 +129,6 @@ public class JList extends JComponent implements Accessible, Scrollable\n    */\n   public static final int HORIZONTAL_WRAP = 2;\n \n-  /** Fired in a PropertyChangeEvent when the \"cellRenderer\" property changes. */\n-  public static final String CELL_RENDERER_PROPERTY_CHANGED = \"cellRenderer\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"fixedCellHeight\" property changes. */\n-  public static final String FIXED_CELL_HEIGHT_PROPERTY_CHANGED = \"fixedCellHeight\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"fixedCellWidth\" property changes. */\n-  public static final String FIXED_CELL_WIDTH_PROPERTY_CHANGED = \"fixedCellWidth\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"layoutOrientation\" property changes. */\n-  public static final String LAYOUT_ORIENTATION_PROPERTY_CHANGED = \"layoutOrientation\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"model\" property changes. */\n-  public static final String MODEL_PROPERTY_CHANGED = \"model\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"prototypeCellValue\" property changes. */\n-  public static final String PROTOTYPE_CELL_VALUE_PROPERTY_CHANGED = \"prototypeCellValue\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"selectionBackground\" property changes. */\n-  public static final String SELECTION_BACKGROUND_PROPERTY_CHANGED = \"selectionBackground\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"selectionForeground\" property changes. */\n-  public static final String SELECTION_FOREGROUND_PROPERTY_CHANGED = \"selectionForeground\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"selectionModel\" property changes. */\n-  public static final String SELECTION_MODEL_PROPERTY_CHANGED = \"selectionModel\";\n-\n-\n   /**\n    * This property indicates whether \"drag and drop\" functions are enabled\n    * on the list.\n@@ -187,7 +159,6 @@ public class JList extends JComponent implements Accessible, Scrollable\n    * is one of the integer constants {@link #VERTICAL}, {@link\n    * #VERTICAL_WRAP}, or {@link #HORIZONTAL_WRAP}. \n    */\n-\n   int layoutOrientation;\n   \n   /** This property holds the data elements displayed by the list. */\n@@ -250,12 +221,10 @@ public class JList extends JComponent implements Accessible, Scrollable\n    */\n   int visibleRowCount;\n \n-\n-\n   /**\n    * Fire a {@link ListSelectionEvent} to all the registered ListSelectionListeners.\n    */\n-  void fireSelectionValueChanged(int firstIndex, int lastIndex, boolean isAdjusting) \n+  protected void fireSelectionValueChanged(int firstIndex, int lastIndex, boolean isAdjusting) \n   {\n     ListSelectionEvent evt = new ListSelectionEvent(this, firstIndex, lastIndex, isAdjusting);\n     ListSelectionListener listeners[] = getListSelectionListeners();\n@@ -265,7 +234,6 @@ void fireSelectionValueChanged(int firstIndex, int lastIndex, boolean isAdjustin\n       }\n   }\n \n-\n   /**\n    * This private listener propagates {@link ListSelectionEvent} events\n    * from the list's \"selectionModel\" property to the list's {@link\n@@ -365,11 +333,21 @@ void init()\n     listListener = new ListListener();\n \n     setModel(new DefaultListModel());\n-    setSelectionModel(new DefaultListSelectionModel());\n+    setSelectionModel(createSelectionModel());\n \n     updateUI();\n   }\n \n+  /**\n+   * Creates the default <code>ListSelectionModel</code>.\n+   *\n+   * @return the <code>ListSelectionModel</code>\n+   */\n+  protected ListSelectionModel createSelectionModel()\n+  {\n+    return new DefaultListSelectionModel();\n+  }\n+  \n   /**\n    * Gets the value of the {@link #fixedCellHeight} property. This property\n    * may be <code>-1</code> to indicate that no cell height has been\n@@ -399,9 +377,12 @@ public int getFixedCellHeight()\n    */\n   public void setFixedCellHeight(int h)\n   {\n+    if (fixedCellHeight == h)\n+      return;\n+\n     int old = fixedCellHeight;\n     fixedCellHeight = h;\n-    firePropertyChange(FIXED_CELL_WIDTH_PROPERTY_CHANGED, old, h);\n+    firePropertyChange(\"fixedCellWidth\", old, h);\n   }\n \n \n@@ -428,17 +409,19 @@ public int getFixedCellWidth()\n    * #prototypeCellValue} property is set, but setting it explicitly\n    * overrides the width computed from {@link #prototypeCellValue}.\n    *\n-   * @see #getFixedCellWidth\n+   * @see #getFixedCellHeight\n    * @see #getPrototypeCellValue\n    */\n-  public void setFixedCellWidth(int h)\n+  public void setFixedCellWidth(int w)\n   {\n-    int old = fixedCellHeight;\n-    fixedCellHeight = h;\n-    firePropertyChange(FIXED_CELL_HEIGHT_PROPERTY_CHANGED, old, h);\n+    if (fixedCellWidth == w)\n+      return;\n+    \n+    int old = fixedCellWidth;\n+    fixedCellWidth = w;\n+    firePropertyChange(\"fixedCellWidth\", old, w);\n   }\n \n-\n   /** \n    * Gets the value of the {@link #visibleRowCount} property. \n    *\n@@ -501,6 +484,11 @@ public ListSelectionListener[] getListSelectionListeners()\n     return (ListSelectionListener[]) getListeners(ListSelectionListener.class);\n   }\n \n+  public int getSelectionMode()\n+  {\n+    return selectionModel.getSelectionMode();\n+  }\n+  \n   /**\n    * Sets the list's \"selectionMode\" property, which simply mirrors the\n    * same property on the list's {@link #selectionModel} property. This\n@@ -723,9 +711,12 @@ public Color getSelectionBackground()\n    */\n   public void setSelectionBackground(Color c)\n   {\n+    if (selectionBackground == c)\n+      return;\n+\n     Color old = selectionBackground;\n     selectionBackground = c;\n-    firePropertyChange(SELECTION_BACKGROUND_PROPERTY_CHANGED, old, c);\n+    firePropertyChange(\"selectionBackground\", old, c);\n     repaint();\n   }\n \n@@ -746,9 +737,12 @@ public Color getSelectionForeground()\n    */\n   public void setSelectionForeground(Color c)\n   {\n+    if (selectionForeground == c)\n+      return;\n+\n     Color old = selectionForeground;\n     selectionForeground = c;\n-    firePropertyChange(SELECTION_FOREGROUND_PROPERTY_CHANGED, old, c);\n+    firePropertyChange(\"selectionForeground\", old, c);\n   }\n \n   /**\n@@ -850,13 +844,16 @@ public ListCellRenderer getCellRenderer()\n   /**\n    * Sets the value of the {@link #celLRenderer} property.\n    *\n-   * @param cellRenderer The new property value\n+   * @param renderer The new property value\n    */\n-  public void setCellRenderer(ListCellRenderer cr)\n+  public void setCellRenderer(ListCellRenderer renderer)\n   {\n+    if (cellRenderer == renderer)\n+      return;\n+    \n     ListCellRenderer old = cellRenderer;\n-    cellRenderer = cr;\n-    firePropertyChange(CELL_RENDERER_PROPERTY_CHANGED, old, cr);\n+    cellRenderer = renderer;\n+    firePropertyChange(\"cellRenderer\", old, renderer);\n     revalidate();\n     repaint();\n   }\n@@ -878,15 +875,21 @@ public ListModel getModel()\n    *\n    * @param model The new property value\n    */\n-  public void setModel(ListModel m)\n+  public void setModel(ListModel model)\n   {\n-    ListModel old = model;\n-    if (old != null)\n-      old.removeListDataListener(listListener);\n-    model = m;\n-    if (model != null)\n-      model.addListDataListener(listListener);\n-    firePropertyChange(MODEL_PROPERTY_CHANGED, old, m);\n+    if (this.model == model)\n+      return;\n+    \n+    if (this.model != null)\n+      this.model.removeListDataListener(listListener);\n+    \n+    ListModel old = this.model;\n+    this.model = model;\n+    \n+    if (this.model != null)\n+      this.model.addListDataListener(listListener);\n+    \n+    firePropertyChange(\"model\", old, model);\n     revalidate();\n     repaint();\n   }\n@@ -902,17 +905,23 @@ public ListSelectionModel getSelectionModel()\n    * {@link #listListener} is unsubscribed from the existing selection\n    * model, if it exists, and re-subscribed to the new selection model.\n    *\n-   * @param l The new property value\n+   * @param model The new property value\n    */\n-  public void setSelectionModel(ListSelectionModel l)\n+  public void setSelectionModel(ListSelectionModel model)\n   {\n+    if (selectionModel == model)\n+      return;\n+    \n+    if (selectionModel != null)\n+      selectionModel.removeListSelectionListener(listListener);\n+    \n     ListSelectionModel old = selectionModel;\n-    if (old != null)\n-      old.removeListSelectionListener(listListener);\n-    selectionModel = l;\n+    selectionModel = model;\n+    \n     if (selectionModel != null)\n       selectionModel.addListSelectionListener(listListener);\n-    firePropertyChange(SELECTION_MODEL_PROPERTY_CHANGED, old, l);\n+    \n+    firePropertyChange(\"selectionModel\", old, model);\n     revalidate();\n     repaint();\n   }\n@@ -992,14 +1001,17 @@ public Object getPrototypeCellValue()\n    */\n   public void setPrototypeCellValue(Object obj)\n   {\n+    if (prototypeCellValue == obj)\n+      return;\n+\n     Object old = prototypeCellValue;\n     Component comp = getCellRenderer()\n       .getListCellRendererComponent(this, obj, 0, false, false); \n     Dimension d = comp.getPreferredSize();\n     fixedCellWidth = d.width;\n     fixedCellHeight = d.height;\n     prototypeCellValue = obj;\n-    firePropertyChange(PROTOTYPE_CELL_VALUE_PROPERTY_CHANGED, old, obj);\n+    firePropertyChange(\"prototypeCellValue\", old, obj);\n   }\n \n   public AccessibleContext getAccessibleContext()\n@@ -1196,4 +1208,119 @@ public boolean getScrollableTracksViewportHeight()\n   {\n     return false;\n   }\n+\n+  public int getAnchorSelectionIndex()\n+  {\n+    return selectionModel.getAnchorSelectionIndex();\n+  }\n+\n+  public int getLeadSelectionIndex()\n+  {\n+    return selectionModel.getLeadSelectionIndex();\n+  }\n+\n+  public int getMinSelectionIndex()\n+  {\n+    return selectionModel.getMaxSelectionIndex();\n+  }\n+\n+  public int getMaxSelectionIndex()\n+  {\n+    return selectionModel.getMaxSelectionIndex();\n+  }\n+\n+  public void clearSelection()\n+  {\n+    selectionModel.clearSelection();\n+  }\n+\n+  public void setSelectionInterval(int anchor, int lead)\n+  {\n+    selectionModel.setSelectionInterval(anchor, lead);\n+  }\n+\n+  public void addSelectionInterval(int anchor, int lead)\n+  {\n+    selectionModel.addSelectionInterval(anchor, lead);\n+  }\n+\n+  public void removeSelectionInterval(int index0, int index1)\n+  {\n+    selectionModel.removeSelectionInterval(index0, index1);\n+  }\n+\n+  /**\n+   * Returns the value of the <code>valueIsAdjusting</code> property.\n+   *\n+   * @return the value\n+   */\n+  public boolean getValueIsAdjusting()\n+  {\n+    return valueIsAdjusting;\n+  }\n+\n+  /**\n+   * Sets the <code>valueIsAdjusting</code> property.\n+   *\n+   * @param isAdjusting the new value\n+   */\n+  public void setValueIsAdjusting(boolean isAdjusting)\n+  {\n+    valueIsAdjusting = isAdjusting;\n+  }\n+\n+  /**\n+   * Return the value of the <code>dragEnabled</code> property.\n+   *\n+   * @return the value\n+   * \n+   * @since 1.4\n+   */\n+  public boolean getDragEnabled()\n+  {\n+    return dragEnabled;\n+  }\n+\n+  /**\n+   * Set the <code>dragEnabled</code> property.\n+   *\n+   * @param enabled new value\n+   * \n+   * @since 1.4\n+   */\n+  public void setDragEnabled(boolean enabled)\n+  {\n+    dragEnabled = enabled;\n+  }\n+\n+  /**\n+   * Returns the layout orientation.\n+   *\n+   * @return the orientation, one of <code>JList.VERTICAL</code>,\n+   * </code>JList.VERTICAL_WRAP</code> and <code>JList.HORIZONTAL_WRAP</code>\n+   *\n+   * @since 1.4\n+   */\n+  public int getLayoutOrientation()\n+  {\n+    return layoutOrientation;\n+  }\n+\n+  /**\n+   * Sets the layout orientation.\n+   *\n+   * @param orientation the orientation to set, one of <code>JList.VERTICAL</code>,\n+   * </code>JList.VERTICAL_WRAP</code> and <code>JList.HORIZONTAL_WRAP</code>\n+   *\n+   * @since 1.4\n+   */\n+  public void setLayoutOrientation(int orientation)\n+  {\n+    if (layoutOrientation == orientation)\n+      return;\n+\n+    int old = layoutOrientation;\n+    layoutOrientation = orientation;\n+    firePropertyChange(\"layoutOrientation\", old, orientation);\n+  }\n }"}, {"sha": "d9ad317a7ef8bb96e2506d85a68db32d71a5bda5", "filename": "libjava/javax/swing/JMenu.java", "status": "modified", "additions": 20, "deletions": 28, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenu.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JMenu.java --\n-   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -59,26 +59,20 @@\n import javax.swing.plaf.MenuItemUI;\n \n /**\n- * <p>\n  * This class represents a menu that can be added to a menu bar or\n  * can be a submenu in some other menu. When JMenu is selected it\n  * displays JPopupMenu containing its menu items.\n- * </p>\n  *\n  * <p>\n  * JMenu's fires MenuEvents when this menu's selection changes. If this menu\n  * is selected, then fireMenuSelectedEvent() is invoked. In case when menu is\n  * deselected or cancelled, then fireMenuDeselectedEvent() or \n  * fireMenuCancelledEvent() is invoked, respectivelly.\n  * </p>\n- *\n  */\n public class JMenu extends JMenuItem implements Accessible, MenuElement\n {\n-  static final long serialVersionUID = 4227225638931828014L;\n-\n-  /** name for the UI delegate for this menu. */\n-  private static final String uiClassID = \"MenuUI\";\n+  private static final long serialVersionUID = 4227225638931828014L;\n \n   /** A Popup menu associated with this menu, which pops up when menu is selected */\n   private JPopupMenu popupMenu = new JPopupMenu();\n@@ -107,30 +101,32 @@ public JMenu()\n   }\n \n   /**\n-   * Creates a new JMenu with the spicified label\n+   * Creates a new <code>JMenu</code> with the specified label.\n    *\n    * @param text label for this menu\n    */\n   public JMenu(String text)\n   {\n     super(text);\n+    popupMenu.setInvoker(this);\n   }\n \n   /**\n-   * Creates a new JMenu object\n+   * Creates a new <code>JMenu</code> object.\n    *\n-   * @param action Action that  is used to create menu item tha will be\n+   * @param action Action that is used to create menu item tha will be\n    * added to the menu.\n    */\n   public JMenu(Action action)\n   {\n     super(action);\n     createActionChangeListener(this);\n+    popupMenu.setInvoker(this);\n   }\n \n   /**\n-   * Creates a new JMenu with specified label and an option\n-   * for this menu to be tear-off menu\n+   * Creates a new <code>JMenu</code> with specified label and an option\n+   * for this menu to be tear-off menu.\n    *\n    * @param text label for this menu\n    * @param tearoff true if this menu should be tear-off and false otherwise\n@@ -273,7 +269,6 @@ public JMenuItem insert(JMenuItem item, int index)\n       throw new IllegalArgumentException(\"index less than zero\");\n \n     popupMenu.insert(item, index);\n-\n     return item;\n   }\n \n@@ -312,7 +307,7 @@ public void updateUI()\n    */\n   public String getUIClassID()\n   {\n-    return uiClassID;\n+    return \"MenuUI\";\n   }\n \n   /**\n@@ -347,15 +342,15 @@ public void setSelected(boolean selected)\n     // display popup associated with this menu\t\n     if (selected)\n       {\n-    super.setArmed(true);\n+\tsuper.setArmed(true);\n \tsuper.setSelected(true);\n \n \t// FIXME: The popup menu should be shown on the screen after certain\n \t// number of seconds pass. The 'delay' property of this menu indicates\n \t// this amount of seconds. 'delay' property is 0 by default.\n \tif (this.isShowing())\n \t  {\n-    fireMenuSelected();\n+\t    fireMenuSelected();\n \n \t    int x = 0;\n \t    int y = 0;\n@@ -388,8 +383,8 @@ public void setSelected(boolean selected)\n   /**\n    * Checks if PopupMenu associated with this menu is visible\n    *\n-   * @return true if the popup associated with this menu is currently visible on the screen and\n-   * false otherwise.\n+   * @return true if the popup associated with this menu is currently visible\n+   * on the screen and false otherwise.\n    */\n   public boolean isPopupMenuVisible()\n   {\n@@ -528,15 +523,15 @@ public JMenuItem getItem(int index)\n   }\n \n   /**\n-   * Returns number of items in the menu\n+   * Returns number of items in the menu including separators.\n    *\n    * @return number of items in the menu\n+   *\n+   * @see #getMenuComponentCount()\n    */\n   public int getItemCount()\n   {\n-    // returns the number of items on \n-    // the menu, including separators.\n-    return getComponents().length;\n+    return getMenuComponentCount();\n   }\n \n   /**\n@@ -592,10 +587,7 @@ public Component[] getMenuComponents()\n    */\n   public boolean isTopLevelMenu()\n   {\n-    if (getParent() instanceof JMenuBar)\n-      return true;\n-    else\n-      return false;\n+    return getParent() instanceof JMenuBar;\n   }\n \n   /**\n@@ -790,7 +782,7 @@ public void doClick(int time)\n    */\n   protected String paramString()\n   {\n-    return \"JMenu\";\n+    return super.paramString();\n   }\n \n   public AccessibleContext getAccessibleContext()"}, {"sha": "e14c2627073d527b8c920f71829a64233db23053", "filename": "libjava/javax/swing/JMenuBar.java", "status": "modified", "additions": 20, "deletions": 30, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenuBar.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n-/* JMenuBar.java -- \n-   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n+/* JMenuBar.java --\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,26 +49,16 @@\n import javax.swing.plaf.MenuBarUI;\n \n /**\n- * <p>\n  * JMenuBar is a container for menu's. For a menu bar to be seen on the\n  * screen, at least one menu should be added to it. Just like adding\n  * components to container, one can use add() to add menu's to the menu bar.\n  * Menu's will be displayed in the menu  bar in the order they were added.\n  * The JMenuBar uses selectionModel to keep track of selected menu index.\n  * JMenuBar's selectionModel will fire ChangeEvents to its registered \n  * listeners when the selected index changes.\n- * </p>\n  */\n public class JMenuBar extends JComponent implements Accessible, MenuElement\n {\n-  /** Fired in a PropertyChangeEvent when the \"borderPainted\" property changes. */\n-  public static final String BORDER_PAINTED_CHANGED_PROPERTY = \"borderPainted\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"model\" changes. */\n-  public static final String MODEL_CHANGED_PROPERTY = \"model\";\n-  \n-  /** Fired in a PropertyChangeEvent when the \"margin\" changes. */\n-  public static final String MARGIN_CHANGED_PROPERTY = \"margin\";\n   private static final long serialVersionUID = -8191026883931977036L;\n \n   /** JMenuBar's model. It keeps track of selected menu's index */\n@@ -294,7 +284,7 @@ public boolean isSelected()\n    * This method does nothing by default. This method is need for the\n    * MenuElement interface to be implemented.\n    *\n-   * @param isIncluded true if menuBar is included in the selection \n+   * @param isIncluded true if menuBar is included in the selection\n    * and false otherwise\n    */\n   public void menuSelectionChanged(boolean isIncluded)\n@@ -303,7 +293,7 @@ public void menuSelectionChanged(boolean isIncluded)\n   }\n \n   /**\n-   * Paints border of the menu bar, if its borderPainted property is set to \n+   * Paints border of the menu bar, if its borderPainted property is set to\n    * true.\n    *\n    * @param g The graphics context with which to paint the border\n@@ -323,7 +313,13 @@ protected void paintBorder(Graphics g)\n    */\n   protected String paramString()\n   {\n-    return \"JMenuBar\";\n+    StringBuffer sb = new StringBuffer();\n+    sb.append(super.paramString());\n+    sb.append(\",margin=\");\n+    if (getMargin() != null)\n+      sb.append(getMargin());\n+    sb.append(\",paintBorder=\").append(isBorderPainted());\n+    return sb.toString();\n   }\n \n   /**\n@@ -374,11 +370,11 @@ public void removeNotify()\n    */\n   public void setBorderPainted(boolean b)\n   {\n-    boolean old = borderPainted;\n-    borderPainted = b;\n-    if (b != old)\n+    if (b != borderPainted)\n       {\n-\tfirePropertyChange(BORDER_PAINTED_CHANGED_PROPERTY, old, b);\n+\tboolean old = borderPainted;\n+\tborderPainted = b;\n+\tfirePropertyChange(\"borderPainted\", old, b);\n \trevalidate();\n \trepaint();\n       }\n@@ -404,14 +400,12 @@ public void setHelpMenu(JMenu menu)\n    */\n   public void setMargin(Insets m)\n   {\n-    if (m.equals(this.margin))\n+    if (m != margin)\n       {\n-\tInsets oldMargin = this.margin;\n-\tthis.margin = m;\n-\tfirePropertyChange(MARGIN_CHANGED_PROPERTY, oldMargin, margin);\n+\tInsets oldMargin = margin;\n+\tmargin = m;\n+\tfirePropertyChange(\"margin\", oldMargin, margin);\n       }\n-\n-    this.margin = m;\n   }\n \n   /**\n@@ -434,15 +428,11 @@ public void setSelected(Component sel)\n    */\n   public void setSelectionModel(SingleSelectionModel model)\n   {\n-    selectionModel = model;\n     if (selectionModel != model)\n       {\n \tSingleSelectionModel oldModel = selectionModel;\n-\n \tselectionModel = model;\n-\n-\tfirePropertyChange(MODEL_CHANGED_PROPERTY, oldModel,\n-\t                   this.selectionModel);\n+\tfirePropertyChange(\"model\", oldModel, selectionModel);\n       }\n   }\n "}, {"sha": "0ea38e0f7ba1f57e65bc3c0af2110e189408720e", "filename": "libjava/javax/swing/JMenuItem.java", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJMenuItem.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JMenuItem.java --\n-   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -60,9 +60,7 @@\n import javax.swing.event.MenuKeyListener;\n import javax.swing.plaf.MenuItemUI;\n \n-\n /**\n- * <p>\n  * JMenuItem represents element in the menu. It inherits most of\n  * its functionality from AbstractButton, however its behavior somewhat\n  * varies from it. JMenuItem fire different kinds of events.\n@@ -71,16 +69,12 @@\n  * fired when menu item is selected. In addition to this events menuItem also\n  * fire MenuDragMouseEvent and MenuKeyEvents when mouse is dragged over\n  * the menu item or associated key with menu item is invoked respectively.\n- * </p>\n  */\n public class JMenuItem extends AbstractButton implements Accessible,\n                                                          MenuElement\n {\n   private static final long serialVersionUID = -1681004643499461044L;\n \n-  /** name for the UI delegate for this menuItem. */\n-  private static final String uiClassID = \"MenuItemUI\";\n-\n   /** Combination of keyboard keys that can be used to activate this menu item */\n   private KeyStroke accelerator;\n \n@@ -212,7 +206,7 @@ public void updateUI()\n    */\n   public String getUIClassID()\n   {\n-    return uiClassID;\n+    return \"MenuItemUI\";\n   }\n \n   /**\n@@ -325,11 +319,11 @@ public void processMouseEvent(MouseEvent event, MenuElement[] path,\n \tbreak;\n       case MouseEvent.MOUSE_ENTERED:\n \tif (isRolloverEnabled())\n-\t      model.setRollover(true);\n+\t  model.setRollover(true);\n \tbreak;\n       case MouseEvent.MOUSE_EXITED:\n \tif (isRolloverEnabled())\n-\t      model.setRollover(false);\n+\t  model.setRollover(false);\n \n \t// for JMenu last element on the path is its popupMenu.\n \t// JMenu shouldn't me disarmed.\t\n@@ -532,14 +526,14 @@ public void menuSelectionChanged(boolean changed)\n     Component parent = this.getParent();\n     if (changed)\n       {\n-      model.setArmed(true);\n+\tmodel.setArmed(true);\n \n \tif (parent != null && parent instanceof JPopupMenu)\n \t  ((JPopupMenu) parent).setSelected(this);\n       }\n     else\n       {\n-      model.setArmed(false);\n+\tmodel.setArmed(false);\n \n \tif (parent != null && parent instanceof JPopupMenu)\n \t  ((JPopupMenu) parent).getSelectionModel().clearSelection();\n@@ -551,7 +545,7 @@ public void menuSelectionChanged(boolean changed)\n    *\n    * @return $MenuElement[]$ Returns array of sub-components for this menu\n    *         item. By default menuItem doesn't have any subcomponents and so\n-   *             empty array is returned instead.\n+   *         empty array is returned instead.\n    */\n   public MenuElement[] getSubElements()\n   {\n@@ -644,7 +638,7 @@ public MenuKeyListener[] getMenuKeyListeners()\n    */\n   protected String paramString()\n   {\n-    return \"JMenuItem\";\n+    return super.paramString();\n   }\n \n   public AccessibleContext getAccessibleContext()"}, {"sha": "0a00729b5cce37f7b001df67ef02f862ec9f19a0", "filename": "libjava/javax/swing/JOptionPane.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJOptionPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJOptionPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJOptionPane.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -64,7 +64,7 @@ protected class AccessibleJOptionPane extends JComponent.AccessibleJComponent\n   {\n     /** DOCUMENT ME! */\n     private static final long serialVersionUID = 686071432213084821L;\n-  \n+\n     /**\n      * Creates a new AccessibleJOptionPane object.\n      */\n@@ -85,7 +85,7 @@ public AccessibleRole getAccessibleRole()\n \n   /** DOCUMENT ME! */\n   private static final long serialVersionUID = 5231143276678566796L;\n-  \n+\n   /** The value returned when cancel option is selected. */\n   public static final int CANCEL_OPTION = 2;\n "}, {"sha": "449aa82cd2c935f5d56de5d9c75bbfb6053600c2", "filename": "libjava/javax/swing/JPasswordField.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJPasswordField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJPasswordField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPasswordField.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -47,9 +47,10 @@\n import javax.swing.text.Document;\n \n /**\n- * JPasswordField\n- * @author\tAndrew Selkirk\n- * @version\t1.0\n+ * class JPasswordField\n+ * \n+ * @author Andrew Selkirk\n+ * @version 1.0\n  */\n public class JPasswordField extends JTextField\n {\n@@ -69,6 +70,7 @@ protected AccessibleJPasswordField()\n \n     /**\n      * getAccessibleRole\n+     * \n      * @return AccessibleRole\n      */\n     public AccessibleRole getAccessibleRole()\n@@ -83,7 +85,7 @@ public AccessibleRole getAccessibleRole()\n   private char echoChar = 0;\n \n   /**\n-   * Constructor JPasswordField\n+   * Creates a <code>JPasswordField</code> object.\n    */\n   public JPasswordField()\n   {\n@@ -240,7 +242,7 @@ public String getText(int offset, int length) throws BadLocationException\n    */\n   public char[] getPassword()\n   {\n-    return null; // TODO\n+    return new char[0]; // TODO\n   }\n \n   /**"}, {"sha": "00998b81a6f724c38ac654d645e83d50620d8bc5", "filename": "libjava/javax/swing/JPopupMenu.java", "status": "modified", "additions": 46, "deletions": 62, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPopupMenu.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n-/* JPopupMenu.java\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+/* JPopupMenu.java --\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,6 @@\n import java.awt.Component;\n import java.awt.Container;\n import java.awt.Dimension;\n-import java.awt.Graphics;\n import java.awt.GridBagConstraints;\n import java.awt.Insets;\n import java.awt.Panel;\n@@ -53,6 +52,7 @@\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n+import java.util.ArrayList;\n import java.util.EventListener;\n \n import javax.accessibility.Accessible;\n@@ -92,12 +92,6 @@ public class JPopupMenu extends JComponent implements Accessible, MenuElement\n {\n   private static final long serialVersionUID = -8336996630009646009L;\n \n-  /** name for the UI delegate for this menuItem. */\n-  private static final String uiClassID = \"PopupMenuUI\";\n-\n-  /** Fire a PropertyChangeEvent when the \"borderPainted\" property changes. */\n-  public static final String LABEL_CHANGED_PROPERTY = \"label\";\n-\n   /* indicates if popup's menu border should be painted*/\n   private boolean borderPainted = true;\n \n@@ -142,19 +136,12 @@ public class JPopupMenu extends JComponent implements Accessible, MenuElement\n   /* Field indicating if popup menu is visible or not */\n   private boolean visible = false;\n   \n-  /* Bound Property indicating visibility of the popup menu*/\n-  public static final String VISIBLE_CHANGED_PROPERTY = \"visible\";\n-\n   /**\n    * Creates a new JPopupMenu object.\n    */\n   public JPopupMenu()\n   {\n-    updateUI();\n-\n-    lightWeightPopupEnabled = DefaultLightWeightPopupEnabled;\n-    selectionModel = new DefaultSingleSelectionModel();\n-    super.setVisible(false);\n+    this(null);\n   }\n \n   /**\n@@ -164,7 +151,11 @@ public JPopupMenu()\n    */\n   public JPopupMenu(String label)\n   {\n+    lightWeightPopupEnabled = getDefaultLightWeightPopupEnabled();\n     setLabel(label);\n+    setSelectionModel(new DefaultSingleSelectionModel());\n+    super.setVisible(false);\n+    updateUI();\n   }\n \n   private void readObject(ObjectInputStream stream)\n@@ -177,12 +168,12 @@ private void writeObject(ObjectOutputStream stream) throws IOException\n   }\n \n   /**\n-   * Adds given menu item to the popup menu\n-   *\n-   * @param item menu item to add to the popup menu\n-   *\n-   * @return menu item that was added to the popup menu\n-   */\n+  * Adds given menu item to the popup menu\n+  *\n+  * @param item menu item to add to the popup menu\n+  *\n+  * @return menu item that was added to the popup menu\n+  */\n   public JMenuItem add(JMenuItem item)\n   {\n     this.insert(item, -1);\n@@ -290,18 +281,6 @@ public void insert(Component component, int index)\n       }\n   }\n \n-  /**\n-   * Paints popup menu's border if borderPainted is true\n-   *\n-   * @param graphics graphics context used to paint this popup's menu border.\n-   */\n-  protected void borderPainted(Graphics graphics)\n-  {\n-    if (borderPainted)\n-      getBorder().paintBorder(this, graphics, 0, 0, getSize(null).width,\n-                              getSize(null).height);\n-  }\n-\n   /**\n    * Returns flag indicating if newly created JPopupMenu will use\n    * heavyweight or lightweight container to display its menu items\n@@ -386,10 +365,7 @@ public SingleSelectionModel getSelectionModel()\n    */\n   public void setSelectionModel(SingleSelectionModel model)\n   {\n-    if (selectionModel != model)\n-      {\n-\tSingleSelectionModel oldModel = this.selectionModel;\n-      }\n+\tselectionModel = model;\n   }\n \n   /**\n@@ -452,7 +428,7 @@ public String getLabel()\n   /**\n    * Sets label for this popup menu. This method fires PropertyChangeEvent\n    * when the label property is changed. Please note that most\n-   * of the Look & Feel will ignore this property.\n+   * of the Look &amp; Feel will ignore this property.\n    *\n    * @param label label for this popup menu\n    */\n@@ -461,8 +437,8 @@ public void setLabel(String label)\n     if (label != this.label)\n       {\n \tString oldLabel = this.label;\n-    this.label = label;\n-\tfirePropertyChange(LABEL_CHANGED_PROPERTY, oldLabel, label);\n+\tthis.label = label;\n+\tfirePropertyChange(\"label\", oldLabel, label);\n       }\n   }\n \n@@ -574,11 +550,14 @@ public boolean isVisible()\n    */\n   public void setVisible(boolean visible)\n   {\n+    if (visible == isVisible())\n+      return;\n+\n     boolean old = isVisible();\n     this.visible = visible;\n     if (old != isVisible())\n       {\n-\tfirePropertyChange(VISIBLE_CHANGED_PROPERTY, old, (boolean) isVisible());\n+\tfirePropertyChange(\"visible\", old, isVisible());\n \tif (visible)\n \t  {\n \t    firePopupMenuWillBecomeVisible();\n@@ -619,11 +598,11 @@ public void setVisible(boolean visible)\n \t      {\n \t\t// Subtract insets of the top-level container if popup menu's\n \t\t// top-left corner is inside it.\n-\t\t    Insets insets = rootContainer.getInsets();\n-\t\t    popup.show(popupLocation.x - insets.left,\n-\t\t               popupLocation.y - insets.top, size.width,\n-\t\t               size.height);\n-\t\t  }\n+\t\tInsets insets = rootContainer.getInsets();\n+\t\tpopup.show(popupLocation.x - insets.left,\n+\t\t           popupLocation.y - insets.top, size.width,\n+\t\t           size.height);\n+\t      }\n \t  }\n \telse\n \t  {\n@@ -791,7 +770,17 @@ public Insets getMargin()\n    */\n   protected String paramString()\n   {\n-    return \"JPopupMenu\";\n+    StringBuffer sb = new StringBuffer();\n+    sb.append(super.paramString());\n+    sb.append(\",label=\");\n+    if (getLabel() != null)\n+      sb.append(getLabel());\n+    sb.append(\",lightWeightPopupEnabled=\").append(isLightWeightPopupEnabled());\n+    sb.append(\",margin=\");\n+    if (getMargin() != null)\n+      sb.append(margin);\n+    sb.append(\",paintBorder=\").append(isBorderPainted());\n+    return sb.toString();\n   }\n \n   /**\n@@ -839,19 +828,22 @@ public void menuSelectionChanged(boolean changed)\n   }\n \n   /**\n-   * Return subcomonents of this popup menu.\n+   * Return subcomonents of this popup menu. This method returns only\n+   * components that implement the <code>MenuElement</code> interface.\n    *\n-   * @return Array containing menuItem's of belonging to this popup menu.\n+   * @return array of menu items belonging to this popup menu\n    */\n   public MenuElement[] getSubElements()\n   {\n     Component[] items = getComponents();\n-    MenuElement[] subElements = new MenuElement[items.length];\n+    ArrayList subElements = new ArrayList();\n \n     for (int i = 0; i < items.length; i++)\n-      subElements[i] = (MenuElement) items[i];\n+      if (items[i] instanceof MenuElement)\n+\tsubElements.add(items[i]);\n \n-    return subElements;\n+    return (MenuElement[])\n+      subElements.toArray(new MenuElement[subElements.size()]);\n   }\n \n   /**\n@@ -1038,14 +1030,6 @@ public void show(int x, int y, int width, int height)\n       this.setBounds(x, y, width, height);\n       this.show();\n     }\n-\n-    /**\n-     * Hides JWindow with menu item's from the screen.\n-     */\n-    public void hide()\n-    {\n-      super.hide();\n-    }\n   }\n \n   /**"}, {"sha": "cf9334904d5e15b2cde9a3b6d15a809f75404716", "filename": "libjava/javax/swing/JProgressBar.java", "status": "modified", "additions": 7, "deletions": 24, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJProgressBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJProgressBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJProgressBar.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JProgressBar.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,6 +35,7 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n import java.awt.Graphics;\n@@ -48,14 +49,11 @@\n import javax.swing.event.ChangeListener;\n import javax.swing.plaf.ProgressBarUI;\n \n-\n /**\n- * <p>\n  * The ProgressBar is a widget that displays in two modes. In \n  * determinate mode, it displays fills a percentage of its bar\n  * based on its current value. In indeterminate mode, it creates\n  * box and bounces it between its bounds.\n- * </p>\n  *\n  * <p>\n  * JProgressBars have the following properties:\n@@ -171,21 +169,6 @@ public Number getMaximumAccessibleValue()\n \n   private static final long serialVersionUID = 1980046021813598781L;\n   \n-  /** Fired in a PropertyChangeEvent when the \"borderPainted\" property changes. */\n-  public static final String BORDER_PAINTED_CHANGED_PROPERTY = \"borderPainted\";\n-  \n-  /** Fired in a PropertyChangeEvent when the \"orientation\" property changes. */\n-  public static final String ORIENTATION_CHANGED_PROPERTY = \"orientation\";\n-  \n-  /** Fired in a PropertyChangeEvent when the \"string\" property changes. */\n-  public static final String STRING_CHANGED_PROPERTY = \"string\";\n-  \n-  /** Fired in a PropertyChangeEvent when the \"stringPainted\" property changes. */\n-  public static final String STRING_PAINTED_CHANGED_PROPERTY = \"stringPainted\";\n-  \n-  /** Fired in a PropertyChangeEvent when the \"indeterminate\" property changes. */\n-  public static final String INDETERMINATE_CHANGED_PROPERTY = \"indeterminate\";\n-\n   /** Whether the ProgressBar is determinate. */\n   private transient boolean indeterminate = false;\n \n@@ -331,7 +314,7 @@ public void setOrientation(int orientation)\n       {\n \tint oldOrientation = this.orientation;\n \tthis.orientation = orientation;\n-\tfirePropertyChange(ORIENTATION_CHANGED_PROPERTY, oldOrientation,\n+\tfirePropertyChange(\"orientation\", oldOrientation,\n \t                   this.orientation);\n       }\n   }\n@@ -357,7 +340,7 @@ public void setStringPainted(boolean painted)\n       {\n \tboolean oldPainted = paintString;\n \tpaintString = painted;\n-\tfirePropertyChange(STRING_PAINTED_CHANGED_PROPERTY, oldPainted,\n+\tfirePropertyChange(\"stringPainted\", oldPainted,\n \t                   paintString);\n       }\n   }\n@@ -394,7 +377,7 @@ public void setString(String string)\n       {\n \tString oldString = progressString;\n \tprogressString = string;\n-\tfirePropertyChange(STRING_CHANGED_PROPERTY, oldString, progressString);\n+\tfirePropertyChange(\"string\", oldString, progressString);\n       }\n   }\n \n@@ -435,7 +418,7 @@ public void setBorderPainted(boolean painted)\n       {\n \tboolean oldPainted = paintBorder;\n \tpaintBorder = painted;\n-\tfirePropertyChange(BORDER_PAINTED_CHANGED_PROPERTY, oldPainted,\n+\tfirePropertyChange(\"borderPainted\", oldPainted,\n \t                   paintBorder);\n       }\n   }\n@@ -641,7 +624,7 @@ public void setIndeterminate(boolean newValue)\n       {\n \tboolean olddeter = indeterminate;\n \tindeterminate = newValue;\n-\tfirePropertyChange(INDETERMINATE_CHANGED_PROPERTY, olddeter,\n+\tfirePropertyChange(\"indeterminate\", olddeter,\n \t                   indeterminate);\n       }\n   }"}, {"sha": "145750758a439b5c9337ef1c5a94caff7f71deae", "filename": "libjava/javax/swing/JRootPane.java", "status": "modified", "additions": 57, "deletions": 4, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJRootPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJRootPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRootPane.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -100,7 +100,7 @@ protected class RootLayout implements LayoutManager2, Serializable\n     protected RootLayout()\n     {\n     }\n-    \n+\n     /**\n      * DOCUMENT ME!\n      *\n@@ -230,8 +230,8 @@ public void layoutContainer(Container c)\n \t    {\n \t      glassPane.setBounds(0, 0, containerSize.width,\n \t                          containerSize.height);\n-\t    contentPane.setBounds(0, 0, containerSize.width,\n-\t                          containerSize.height);\n+\t      contentPane.setBounds(0, 0, containerSize.width,\n+\t                            containerSize.height);\n \t    }\n \n \t  layeredPane.setSize(containerSize.width, containerSize.height);\n@@ -333,6 +333,11 @@ public void removeLayoutComponent(Component comp)\n   protected Container contentPane;\n \n   protected JButton defaultButton;\n+\n+  /**\n+   * @since 1.4\n+   */\n+  private int windowDecorationStyle = NONE;\n   \n   /**\n    * DOCUMENT ME!\n@@ -341,8 +346,20 @@ public void removeLayoutComponent(Component comp)\n    */\n   public void setJMenuBar(JMenuBar m)\n   {\n+    JLayeredPane jlPane = getLayeredPane();\n+    if (menuBar != null)\n+      jlPane.remove(menuBar);\n     menuBar = m;\n-    getLayeredPane().add(menuBar, JLayeredPane.FRAME_CONTENT_LAYER);\n+    if (menuBar != null)\n+      jlPane.add(menuBar, JLayeredPane.FRAME_CONTENT_LAYER);\n+  }\n+\n+  /**\n+   * @deprecated Replaced by <code>setJMenuBar()</code>\n+   */\n+  public void setMenuBar(JMenuBar m)\n+  {\n+    setJMenuBar(m);\n   }\n \n   /**\n@@ -355,6 +372,14 @@ public JMenuBar getJMenuBar()\n     return menuBar;\n   }\n \n+  /**\n+   * @deprecated Replaced by <code>getJMenuBar()</code>\n+   */\n+  public JMenuBar getMenuBar()\n+  {\n+    return getJMenuBar();\n+  }\n+\n   /**\n    * DOCUMENT ME!\n    *\n@@ -569,4 +594,32 @@ public void setDefaultButton(JButton newButton)\n     defaultButton = newButton;\n     firePropertyChange(\"defaultButton\", oldButton, newButton);\n   }\n+\n+  /**\n+   * @since 1.4\n+   */\n+  public int getWindowDecorationStyle()\n+  {\n+    return windowDecorationStyle;\n+  }\n+\n+  /**\n+   * @since 1.4\n+   */\n+  public void setWindowDecorationStyle(int style)\n+  {\n+    if (style != NONE\n+\t&& style != FRAME\n+\t&& style != INFORMATION_DIALOG\n+\t&& style != ERROR_DIALOG\n+\t&& style != COLOR_CHOOSER_DIALOG\n+\t&& style != FILE_CHOOSER_DIALOG\n+\t&& style != QUESTION_DIALOG\n+\t&& style != WARNING_DIALOG)\n+      throw new IllegalArgumentException(\"invalid style\");\n+    \n+    int oldStyle = windowDecorationStyle;\n+    windowDecorationStyle = style;\n+    firePropertyChange(\"windowDecorationStyle\", oldStyle, style);\n+  }\n }"}, {"sha": "0ed7679e77fbed744ba9253db72c45e336acf2ec", "filename": "libjava/javax/swing/JScrollBar.java", "status": "modified", "additions": 6, "deletions": 94, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJScrollBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJScrollBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJScrollBar.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JScrollBar.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,6 +35,7 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n import java.awt.Adjustable;\n@@ -47,11 +48,8 @@\n import javax.accessibility.AccessibleRole;\n import javax.accessibility.AccessibleStateSet;\n import javax.accessibility.AccessibleValue;\n-import javax.swing.event.ChangeEvent;\n-import javax.swing.event.ChangeListener;\n import javax.swing.plaf.ScrollBarUI;\n \n-\n /**\n  * The JScrollBar. Two buttons control how the values that the \n  * scroll bar can take. You can also drag the thumb or click the track\n@@ -154,18 +152,6 @@ public Number getMaximumAccessibleValue()\n \n   private static final long serialVersionUID = -8195169869225066566L;\n   \n-  /** Fired in a PropertyChangeEvent when the \"blockIncrement\" changes. */\n-  public static final String BLOCK_INCREMENT_CHANGED_PROPERTY = \"blockIncrement\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"model\" changes. */\n-  public static final String MODEL_CHANGED_PROPERTY = \"model\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"orientation\" changes. */\n-  public static final String ORIENTATION_CHANGED_PROPERTY = \"orientation\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"unitIncrement\" changes. */\n-  public static final String UNIT_INCREMENT_CHANGED_PROPERTY = \"unitIncrement\";\n-\n   /** How much the thumb moves when moving in a block. */\n   protected int blockIncrement = 10;\n \n@@ -178,12 +164,6 @@ public Number getMaximumAccessibleValue()\n   /** How much the thumb moves when moving in a unit. */\n   protected int unitIncrement = 1;\n \n-  /** The ChangeListener that listens to the model. */\n-  private transient ChangeListener changeListener;\n-\n-  /** The ChangeEvent that's fired. */\n-  private transient ChangeEvent changeEvent;\n-\n   /** \n    * Creates a new horizontal JScrollBar object with a minimum\n    * of 0, a maxmium of 100, a value of 0 and an extent of 10.\n@@ -223,8 +203,6 @@ public JScrollBar(int orientation, int value, int extent, int min, int max)\n       throw new IllegalArgumentException(orientation\n                                          + \" is not a legal orientation\");\n     this.orientation = orientation;\n-    changeListener = createChangeListener();\n-    model.addChangeListener(changeListener);\n     updateUI();\n   }\n \n@@ -297,7 +275,7 @@ public void setOrientation(int orientation)\n       {\n \tint oldOrientation = this.orientation;\n \tthis.orientation = orientation;\n-\tfirePropertyChange(ORIENTATION_CHANGED_PROPERTY, oldOrientation,\n+\tfirePropertyChange(\"orientation\", oldOrientation,\n \t                   this.orientation);\n       }\n   }\n@@ -325,9 +303,7 @@ public void setModel(BoundedRangeModel newModel)\n       {\n \tBoundedRangeModel oldModel = model;\n \tmodel = newModel;\n-\toldModel.removeChangeListener(changeListener);\n-\tmodel.addChangeListener(changeListener);\n-\tfirePropertyChange(MODEL_CHANGED_PROPERTY, oldModel, model);\n+\tfirePropertyChange(\"model\", oldModel, model);\n       }\n   }\n \n@@ -356,7 +332,7 @@ public void setUnitIncrement(int unitIncrement)\n       {\n \tint oldInc = this.unitIncrement;\n \tthis.unitIncrement = unitIncrement;\n-\tfirePropertyChange(UNIT_INCREMENT_CHANGED_PROPERTY, oldInc,\n+\tfirePropertyChange(\"unitIncrement\", oldInc,\n \t                   this.unitIncrement);\n       }\n   }\n@@ -386,7 +362,7 @@ public void setBlockIncrement(int blockIncrement)\n       {\n \tint oldInc = this.blockIncrement;\n \tthis.blockIncrement = blockIncrement;\n-\tfirePropertyChange(BLOCK_INCREMENT_CHANGED_PROPERTY, oldInc,\n+\tfirePropertyChange(\"blockIncrement\", oldInc,\n \t                   this.blockIncrement);\n       }\n   }\n@@ -557,70 +533,6 @@ public void setValues(int newValue, int newExtent, int newMin, int newMax)\n     }\n   }\n \n-  /**\n-   * This method creates a new ChangeListener.\n-   *\n-   * @return A new ChangeListener.\n-   */\n-  private ChangeListener createChangeListener()\n-  {\n-    return new ChangeListener()\n-      {\n-\tpublic void stateChanged(ChangeEvent e)\n-\t{\n-\t  fireStateChanged();\n-\t}\n-      };\n-  }\n-\n-  /**\n-   * This method is called whenever the model fires a ChangeEvent. It should\n-   * propagate the ChangeEvent to its listeners with a new ChangeEvent that\n-   * identifies the scroll bar as the source.\n-   */\n-  private void fireStateChanged()\n-  {\n-    Object[] changeListeners = listenerList.getListenerList();\n-    if (changeEvent == null)\n-      changeEvent = new ChangeEvent(this);\n-    for (int i = changeListeners.length - 2; i >= 0; i -= 2)\n-      {\n-\tif (changeListeners[i] == ChangeListener.class)\n-\t  ((ChangeListener) changeListeners[i + 1]).stateChanged(changeEvent);\n-      }\n-  }\n-\n-  /**\n-   * This method adds a ChangeListener to the scroll bar.\n-   *\n-   * @param listener The listener to add.\n-   */\n-  public void addChangeListener(ChangeListener listener)\n-  {\n-    listenerList.add(ChangeListener.class, listener);\n-  }\n-\n-  /**\n-   * This method removes a ChangeListener from the scroll bar.\n-   *\n-   * @param listener The listener to remove.\n-   */\n-  public void removeChangeListener(ChangeListener listener)\n-  {\n-    listenerList.remove(ChangeListener.class, listener);\n-  }\n-\n-  /**\n-   * This method returns an array of all ChangeListeners listening to this\n-   * scroll bar.\n-   *\n-   * @return An array of ChangeListeners listening to this scroll bar.\n-   */\n-  public ChangeListener[] getChangeListeners()\n-  {\n-    return (ChangeListener[]) listenerList.getListeners(ChangeListener.class);\n-  }\n-\n   /**\n    * This method adds an AdjustmentListener to the scroll bar.\n    *"}, {"sha": "dfe5a76b196184965fad9fcc39546e5147556684", "filename": "libjava/javax/swing/JScrollPane.java", "status": "modified", "additions": 44, "deletions": 30, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJScrollPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJScrollPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJScrollPane.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JScrollPane.java -- \n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -99,18 +99,6 @@ public class JScrollPane\n   boolean wheelScrollingEnabled;\n   ChangeListener scrollListener;  \n \n-  public static final String COLUMN_HEADER_CHANGED_PROPERTY = \"columnHeader\";\n-  public static final String COMPONENT_ORIENTATION_CHANGED_PROPERTY = \"componentOrientation\";\n-  public static final String HORIZONTAL_SCROLLBAR_CHANGED_PROPERTY = \"horizontalScrollBar\";\n-  public static final String HORIZONTAL_SCROLLBAR_POLICY_CHANGED_PROPERTY = \"horizontalScrollBarPolicy\";\n-  public static final String LAYOUT_CHANGED_PROPERTY = \"layout\";\n-  public static final String ROW_HEADER_CHANGED_PROPERTY = \"rowHeader\";\n-  public static final String VERTICAL_SCROLLBAR_CHANGED_PROPERTY = \"verticalScrollBar\";\n-  public static final String VERTICAL_SCROLLBAR_POLICY_CHANGED_PROPERTY = \"verticalScrollBarPolicy\";\n-  public static final String VIEWPORT_CHANGED_PROPERTY = \"viewport\";\n-  public static final String VIEWPORT_BORDER_CHANGED_PROPERTY = \"viewportBorder\";\n-  public static final String WHEEL_SCROLLING_ENABLED_CHANGED_PROPERTY = \"wheelScrollingEnabled\";\n-\n   public JViewport getColumnHeader()\n   {\n     return columnHeader;\n@@ -247,17 +235,20 @@ public void setComponentOrientation(ComponentOrientation co)\n   {\n     ComponentOrientation old = super.getComponentOrientation();\n     super.setComponentOrientation(co);\n-    firePropertyChange(COMPONENT_ORIENTATION_CHANGED_PROPERTY, old, co);\n+    firePropertyChange(\"componentOrientation\", old, co);\n     sync();\n   }\n \n   public void setColumnHeader(JViewport h)\n   {\n+    if (columnHeader == h)\n+      return;\n+    \n     JViewport old = columnHeader;\n     removeNonNull(old);\n     columnHeader = h;\n     addNonNull(h);\n-    firePropertyChange(COLUMN_HEADER_CHANGED_PROPERTY, old, h);\n+    firePropertyChange(\"columnHeader\", old, h);\n     sync();\n   }\n \n@@ -327,11 +318,14 @@ else if (key == UPPER_LEFT_CORNER)\n \n   public void setHorizontalScrollBar(JScrollBar h)\n   {\n+    if (horizontalScrollBar == h)\n+      return;\n+\n     JScrollBar old = horizontalScrollBar;\n     removeNonNull(old);\n     horizontalScrollBar = h;\n     addNonNull(h);\n-    firePropertyChange(HORIZONTAL_SCROLLBAR_CHANGED_PROPERTY, old, h);\n+    firePropertyChange(\"horizontalScrollBar\", old, h);\n     sync();\n \n     if (old != null)\n@@ -349,14 +343,18 @@ public void setHorizontalScrollBar(JScrollBar h)\n   }\n \n   public void setHorizontalScrollBarPolicy(int h)\n-  {    \n+  {\n+    if (horizontalScrollBarPolicy == h)\n+      return;\n+    \n     if (h != HORIZONTAL_SCROLLBAR_AS_NEEDED\n         && h != HORIZONTAL_SCROLLBAR_NEVER\n         && h != HORIZONTAL_SCROLLBAR_ALWAYS)\n       throw new IllegalArgumentException(\"unknown horizontal scrollbar policy\");    \n+\n     int old = horizontalScrollBarPolicy;\n     horizontalScrollBarPolicy = h;\n-    firePropertyChange(HORIZONTAL_SCROLLBAR_POLICY_CHANGED_PROPERTY, old, h);\n+    firePropertyChange(\"horizontalScrollBarPolicy\", old, h);\n     sync();\n   }\n \n@@ -366,17 +364,20 @@ public void setLayout(LayoutManager l)\n     ScrollPaneLayout tmp = (ScrollPaneLayout) l;\n     super.setLayout(l);\n     tmp.syncWithScrollPane(this);\n-    firePropertyChange(LAYOUT_CHANGED_PROPERTY, old, l);\n+    firePropertyChange(\"layout\", old, l);\n     sync();\n   }\n \n   public void setRowHeader(JViewport v)\n   {\n+    if (rowHeader == v)\n+      return;\n+    \n     JViewport old = rowHeader;\n     removeNonNull(old);\n     rowHeader = v;\n     addNonNull(v);\n-    firePropertyChange(ROW_HEADER_CHANGED_PROPERTY, old, v);\n+    firePropertyChange(\"rowHeader\", old, v);\n     sync();\n   }\n \n@@ -390,11 +391,14 @@ public void setRowHeaderView(Component c)\n \n   public void setVerticalScrollBar(JScrollBar v)\n   {\n+    if (verticalScrollBar == v)\n+      return;\n+    \n     JScrollBar old = verticalScrollBar;\n     removeNonNull(old);\n     verticalScrollBar = v;\n     addNonNull(v);\n-    firePropertyChange(VERTICAL_SCROLLBAR_CHANGED_PROPERTY, old, v);\n+    firePropertyChange(\"verticalScrollBar\", old, v);\n     sync();\n \n     if (old != null)\n@@ -413,26 +417,36 @@ public void setVerticalScrollBar(JScrollBar v)\n \n   public void setVerticalScrollBarPolicy(int v)\n   {\n+    if (verticalScrollBarPolicy == v)\n+      return;\n+    \n     if (v != VERTICAL_SCROLLBAR_AS_NEEDED\n         && v != VERTICAL_SCROLLBAR_NEVER\n         && v != VERTICAL_SCROLLBAR_ALWAYS)\n       throw new IllegalArgumentException(\"unknown vertical scrollbar policy\");    \n+    \n     int old = verticalScrollBarPolicy;\n     verticalScrollBarPolicy = v;\n-    firePropertyChange(VERTICAL_SCROLLBAR_POLICY_CHANGED_PROPERTY, old, v);\n+    firePropertyChange(\"verticalScrollBarPolicy\", old, v);\n     sync();\n   }\n \n   public void setWheelScrollingEnabled(boolean b)\n   {\n+    if (wheelScrollingEnabled == b)\n+      return;\n+    \n     boolean old = wheelScrollingEnabled;\n     wheelScrollingEnabled = b;\n-    firePropertyChange(WHEEL_SCROLLING_ENABLED_CHANGED_PROPERTY, old, b);\n+    firePropertyChange(\"wheelScrollingEnabled\", old, b);\n     sync();\n   }\n \n   public void setViewport(JViewport v)\n   {\n+    if (viewport == v)\n+      return;\n+    \n     JViewport old = viewport;\n     removeNonNull(old);\n     if (old != null)\n@@ -443,15 +457,18 @@ public void setViewport(JViewport v)\n     addNonNull(v);\n     revalidate();\n     repaint();\n-    firePropertyChange(VIEWPORT_CHANGED_PROPERTY, old, v);\n+    firePropertyChange(\"viewport\", old, v);\n     sync();\n   }\n \n   public void setViewportBorder(Border b)\n   {\n+    if (viewportBorder == b)\n+      return;\n+    \n     Border old = viewportBorder;\n     viewportBorder = b;\n-    firePropertyChange(VIEWPORT_BORDER_CHANGED_PROPERTY, old, b);\n+    firePropertyChange(\"viewportBorder\", old, b);\n     sync();\n   }\n     \n@@ -588,7 +605,7 @@ public JScrollBar createVerticalScrollBar()\n     return new ScrollBar(SwingConstants.VERTICAL);\n   }\n     \n-  public JViewport createViewport()\n+  protected JViewport createViewport()\n   {\n     return new JViewport();\n   }\n@@ -624,7 +641,7 @@ public void setUI(ScrollPaneUI ui)\n     super.setUI(ui);\n   }\n \n-  class ScrollBar \n+  protected class ScrollBar \n     extends JScrollBar\n     implements UIResource\n   {\n@@ -660,8 +677,5 @@ public int getUnitIncrement(int direction)\n                                               direction);\n         }\n     }\n-\n-\n   }\n-  \n }"}, {"sha": "cfe7880df6542cf7210293995985b27e3905744a", "filename": "libjava/javax/swing/JSlider.java", "status": "modified", "additions": 11, "deletions": 45, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJSlider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJSlider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJSlider.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JSlider.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,6 +35,7 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n \n import java.awt.Dimension;\n@@ -54,14 +55,11 @@\n import javax.swing.event.ChangeListener;\n import javax.swing.plaf.SliderUI;\n \n-\n /**\n- * <p>\n  * The JSlider is a Swing component that allows selection of a value within a\n  * range by adjusting a thumb in a track. The values for the minimum,\n  * maximum, extent and value are stored in a {@link\n  * DefaultBoundedRangeModel}.\n- * </p>\n  * \n  * <p>\n  * JSliders have the following properties:\n@@ -114,7 +112,7 @@ public class JSlider extends JComponent implements SwingConstants, Accessible,\n                                                    MenuContainer, Serializable\n {\n   /** DOCUMENT ME! */\n-  static final long serialVersionUID = -1441275936141218479L;\n+  private static final long serialVersionUID = -1441275936141218479L;\n \n   /**\n    * DOCUMENT ME!\n@@ -206,36 +204,6 @@ public Number getMaximumAccessibleValue()\n     }\n   }\n \n-  /** Fired in a PropertyChangeEvent when the \"inverted\" property changes. */\n-  public static final String INVERTED_CHANGED_PROPERTY = \"inverted\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"labelTable\" property changes. */\n-  public static final String LABEL_TABLE_CHANGED_PROPERTY = \"labelTable\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the \"majorTickSpacing\" property\n-   * changes.\n-   */\n-  public static final String MAJOR_TICK_SPACING_CHANGED_PROPERTY = \"majorTickSpacing\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the \"minorTickSpacing\" property\n-   * changes.\n-   */\n-  public static final String MINOR_TICK_SPACING_CHANGED_PROPERTY = \"minorTickSpacing\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"model\" property changes. */\n-  public static final String MODEL_CHANGED_PROPERTY = \"model\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"orientation\" property changes. */\n-  public static final String ORIENTATION_CHANGED_PROPERTY = \"orientation\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"paintLabels\" property changes. */\n-  public static final String PAINT_LABELS_CHANGED_PROPERTY = \"paintLabels\";\n-\n-  /** Fired in a PropertyChangeEvent when the \"paintTicks\" property changes. */\n-  public static final String PAINT_TICKS_CHANGED_PROPERTY = \"paintTicks\";\n-  \n   /** Whether or not this slider paints its ticks. */\n   private transient boolean paintTicks = false;\n \n@@ -515,7 +483,7 @@ public void setModel(BoundedRangeModel model)\n \tsliderModel = model;\n \toldModel.removeChangeListener(changeListener);\n \tsliderModel.addChangeListener(changeListener);\n-\tfirePropertyChange(MODEL_CHANGED_PROPERTY, oldModel, sliderModel);\n+\tfirePropertyChange(\"model\", oldModel, sliderModel);\n       }\n   }\n \n@@ -624,7 +592,7 @@ public void setOrientation(int orientation)\n       {\n \tint oldOrientation = this.orientation;\n \tthis.orientation = orientation;\n-\tfirePropertyChange(ORIENTATION_CHANGED_PROPERTY, oldOrientation,\n+\tfirePropertyChange(\"orientation\", oldOrientation,\n \t                   this.orientation);\n       }\n   }\n@@ -650,7 +618,7 @@ public void setLabelTable(Dictionary table)\n       {\n \tDictionary oldTable = labelTable;\n \tlabelTable = table;\n-\tfirePropertyChange(LABEL_TABLE_CHANGED_PROPERTY, oldTable, labelTable);\n+\tfirePropertyChange(\"labelTable\", oldTable, labelTable);\n       }\n   }\n \n@@ -751,7 +719,7 @@ public void setInverted(boolean inverted)\n       {\n \tboolean oldInverted = isInverted;\n \tisInverted = inverted;\n-\tfirePropertyChange(INVERTED_CHANGED_PROPERTY, oldInverted, isInverted);\n+\tfirePropertyChange(\"inverted\", oldInverted, isInverted);\n       }\n   }\n \n@@ -777,7 +745,7 @@ public void setMajorTickSpacing(int spacing)\n       {\n \tint oldSpacing = majorTickSpacing;\n \tmajorTickSpacing = spacing;\n-\tfirePropertyChange(MAJOR_TICK_SPACING_CHANGED_PROPERTY, oldSpacing,\n+\tfirePropertyChange(\"majorTickSpacing\", oldSpacing,\n \t                   majorTickSpacing);\n       }\n   }\n@@ -804,7 +772,7 @@ public void setMinorTickSpacing(int spacing)\n       {\n \tint oldSpacing = minorTickSpacing;\n \tminorTickSpacing = spacing;\n-\tfirePropertyChange(MINOR_TICK_SPACING_CHANGED_PROPERTY, oldSpacing,\n+\tfirePropertyChange(\"minorTickSpacing\", oldSpacing,\n \t                   minorTickSpacing);\n       }\n   }\n@@ -864,8 +832,7 @@ public void setPaintTicks(boolean paint)\n       {\n \tboolean oldPaintTicks = paintTicks;\n \tpaintTicks = paint;\n-\tfirePropertyChange(PAINT_TICKS_CHANGED_PROPERTY, oldPaintTicks,\n-\t                   paintTicks);\n+\tfirePropertyChange(\"paintTicks\", oldPaintTicks, paintTicks);\n       }\n   }\n \n@@ -910,8 +877,7 @@ public void setPaintLabels(boolean paint)\n       {\n \tboolean oldPaintLabels = paintLabels;\n \tpaintLabels = paint;\n-\tfirePropertyChange(PAINT_LABELS_CHANGED_PROPERTY, oldPaintLabels,\n-\t                   paintLabels);\n+\tfirePropertyChange(\"paintLabels\", oldPaintLabels, paintLabels);\n       }\n   }\n "}, {"sha": "fbf2bbf5fcc79b55ad82419be2bb7c7ed5eebade", "filename": "libjava/javax/swing/JSpinner.java", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJSpinner.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJSpinner.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJSpinner.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JSpinner.java --\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -50,7 +50,6 @@\n import javax.swing.border.EtchedBorder;\n import javax.swing.event.ChangeEvent;\n import javax.swing.event.ChangeListener;\n-import javax.swing.event.EventListenerList;\n import javax.swing.plaf.SpinnerUI;\n \n \n@@ -59,7 +58,8 @@\n  * way to manipulate the value.\n  *\n  * @author Ka-Hing Cheung\n- * @version 1.0\n+ * \n+ * @since 1.4\n  */\n public class JSpinner extends JComponent\n {\n@@ -285,9 +285,6 @@ public SpinnerNumberModel getModel()\n   /** DOCUMENT ME! */\n   private JComponent editor;\n \n-  /** DOCUMENT ME! */\n-  private EventListenerList listenerList = new EventListenerList();\n-\n   /** DOCUMENT ME! */\n   private ChangeListener listener = new ChangeListener()\n     {"}, {"sha": "748ee2140509dd1df9f52472e3a521cf987691f8", "filename": "libjava/javax/swing/JTabbedPane.java", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJTabbedPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJTabbedPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTabbedPane.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "patch": "@@ -1,5 +1,5 @@\n /* JTabbedPane.java --\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -56,10 +56,8 @@\n import javax.swing.plaf.UIResource;\n \n /**\n- * <p>\n  * This is a container for components. One component is displayed at a time.\n  * Users can switch between components by clicking on tabs.\n- * </p>\n  * \n  * <p>\n  * Tabs can be oriented in several ways. They can be above, below, left and\n@@ -520,32 +518,18 @@ public int getDisplayedMnemonicIndex()\n      *         or equal to title.length.\n      */\n     public void setDisplayedMnemonicIndex(int index)\n-                                   throws IllegalArgumentException\n+      throws IllegalArgumentException\n     {\n       if (index < -1 || title != null && index >= title.length())\n \tthrow new IllegalArgumentException();\n \n-      if (title == null || title.charAt(index) != mnemonicKey)\n+      if (title == null || mnemonicKey == 0 || title.charAt(index) != mnemonicKey)\n \tindex = -1;\n \n       underlinedChar = index;\n     }\n   }\n \n-  /** Fired in a PropertyChangeEvent when the \"model\" property changes. */\n-  public static final String MODEL_CHANGED_PROPERTY = \"model\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the \"tabPlacement\" property changes.\n-   */\n-  public static final String TAB_PLACEMENT_CHANGED_PROPERTY = \"tabPlacement\";\n-\n-  /**\n-   * Fired in a PropertyChangeEvent when the \"tabLayoutPolicy\" property\n-   * changes.\n-   */\n-  public static final String TAB_LAYOUT_POLICY_CHANGED_PROPERTY = \"tabLayoutPolicy\";\n-\n   /** The changeEvent used to fire changes to listeners. */\n   protected ChangeEvent changeEvent;\n \n@@ -739,7 +723,7 @@ public void setModel(SingleSelectionModel model)\n \tthis.model.removeChangeListener(changeListener);\n \tthis.model = model;\n \tthis.model.addChangeListener(changeListener);\n-\tfirePropertyChange(MODEL_CHANGED_PROPERTY, oldModel, this.model);\n+\tfirePropertyChange(\"model\", oldModel, this.model);\n       }\n   }\n \n@@ -770,8 +754,7 @@ public void setTabPlacement(int tabPlacement)\n       {\n \tint oldPlacement = this.tabPlacement;\n \tthis.tabPlacement = tabPlacement;\n-\tfirePropertyChange(TAB_PLACEMENT_CHANGED_PROPERTY, oldPlacement,\n-\t                   this.tabPlacement);\n+\tfirePropertyChange(\"tabPlacement\", oldPlacement, this.tabPlacement);\n       }\n   }\n \n@@ -802,8 +785,7 @@ public void setTabLayoutPolicy(int tabLayoutPolicy)\n       {\n \tint oldPolicy = layoutPolicy;\n \tlayoutPolicy = tabLayoutPolicy;\n-\tfirePropertyChange(TAB_LAYOUT_POLICY_CHANGED_PROPERTY, oldPolicy,\n-\t                   layoutPolicy);\n+\tfirePropertyChange(\"tabLayoutPolicy\", oldPolicy, layoutPolicy);\n       }\n   }\n "}, {"sha": "ca38aa0ba0952516a714bb3f9b9b6fcdfc768d50", "filename": "libjava/javax/swing/JTable.java", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJTable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJTable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTable.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "d87655bc3fa7ba840bcd8cbbf0d3137ce43b49cc", "filename": "libjava/javax/swing/JTextField.java", "status": "modified", "additions": 30, "deletions": 26, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTextField.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "55f4c155f80ff7bb32a6bdc868abbac0f087fe54", "filename": "libjava/javax/swing/JToolBar.java", "status": "modified", "additions": 136, "deletions": 152, "changes": 288, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJToolBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJToolBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJToolBar.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "353547ca4dbfeb2ed8ad5f8e0b64fd5ef7e441cd", "filename": "libjava/javax/swing/JTree.java", "status": "modified", "additions": 730, "deletions": 9, "changes": 739, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJTree.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJTree.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJTree.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "657f192fd04d86a2fda34770e727dd250979c034", "filename": "libjava/javax/swing/JViewport.java", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJViewport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJViewport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJViewport.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "94efa3aa795a9a5c2318278bc5aba52dacddafda", "filename": "libjava/javax/swing/JWindow.java", "status": "modified", "additions": 125, "deletions": 161, "changes": 286, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FJWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJWindow.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "239c8dd1f8495beed861f0edb84739602063ffb1", "filename": "libjava/javax/swing/KeyStroke.java", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FKeyStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FKeyStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FKeyStroke.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "ab47a3c9f4f5bf677440fb70057b3d0556f6cc8d", "filename": "libjava/javax/swing/LayoutFocusTraversalPolicy.java", "status": "renamed", "additions": 42, "deletions": 29, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FLayoutFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FLayoutFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FLayoutFocusTraversalPolicy.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "previous_filename": "libjava/javax/swing/DefaultCellRenderer.java"}, {"sha": "a2508386d5e92bfb56d144bb6ed41fdb50fe7609", "filename": "libjava/javax/swing/LookAndFeel.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FLookAndFeel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "f78e21467b2504ef26c3faca005629b6c638b6b8", "filename": "libjava/javax/swing/MenuSelectionManager.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "706ffe2a2f623004e8c3097bc72384e86080dd6a", "filename": "libjava/javax/swing/OverlayLayout.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FOverlayLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FOverlayLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FOverlayLayout.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "c29ba787e37625401636922810bf58f609aaa0c9", "filename": "libjava/javax/swing/RepaintManager.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRepaintManager.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "a0461b4d037a7f99522dd57618365ce0230b5730", "filename": "libjava/javax/swing/ScrollPaneLayout.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FScrollPaneLayout.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "dd34d9cd97b9b83fece1ea6fabf3bb3e818b16bc", "filename": "libjava/javax/swing/SizeRequirements.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FSizeRequirements.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FSizeRequirements.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSizeRequirements.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "07a4e6561452ef31cb96cdedff7025798231917f", "filename": "libjava/javax/swing/SortingFocusTraversalPolicy.java", "status": "added", "additions": 333, "deletions": 0, "changes": 333, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FSortingFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FSortingFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSortingFocusTraversalPolicy.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "8e987425fc4d260e4039828f5c702d6be5a22fd8", "filename": "libjava/javax/swing/SwingUtilities.java", "status": "modified", "additions": 153, "deletions": 20, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FSwingUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FSwingUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSwingUtilities.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "0906b8d93bb50b17695187a468d038c616b54ef2", "filename": "libjava/javax/swing/Timer.java", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FTimer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FTimer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FTimer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "9d6fa4e3f7c51870044c332b675082565d25b4c7", "filename": "libjava/javax/swing/TransferHandler.java", "status": "modified", "additions": 88, "deletions": 14, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FTransferHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FTransferHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FTransferHandler.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "a2deae4978d07233190a5c6773d689c332fa9bc8", "filename": "libjava/javax/swing/UIDefaults.java", "status": "modified", "additions": 66, "deletions": 62, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FUIDefaults.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FUIDefaults.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUIDefaults.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "dfc6a82ac463b5a26d1a9f6e8dd14cbd05a0a4f1", "filename": "libjava/javax/swing/UIManager.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FUIManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FUIManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUIManager.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "3abf31da385079044178f0503c9f39b23d010af3", "filename": "libjava/javax/swing/ViewportLayout.java", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FViewportLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2FViewportLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FViewportLayout.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "9f85164041bf021997a90981a3be0be1d111ce7f", "filename": "libjava/javax/swing/colorchooser/DefaultRGBChooserPanel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultRGBChooserPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultRGBChooserPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultRGBChooserPanel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "20a72f438a8f3a3b7d8181dbde47bb124da4453d", "filename": "libjava/javax/swing/colorchooser/DefaultSwatchChooserPanel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultSwatchChooserPanel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultSwatchChooserPanel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FDefaultSwatchChooserPanel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "b94b5f8d9951c1bd9cd2e1eb313ee34bd8a6d906", "filename": "libjava/javax/swing/event/MouseInputAdapter.java", "status": "modified", "additions": 74, "deletions": 70, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fevent%2FMouseInputAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fevent%2FMouseInputAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fevent%2FMouseInputAdapter.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "48451c2373abbf843bd44953ed9cf127617102f2", "filename": "libjava/javax/swing/plaf/basic/BasicButtonListener.java", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonListener.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "ed352e7679438d2ca1ce815a08a08244872bb37f", "filename": "libjava/javax/swing/plaf/basic/BasicButtonUI.java", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicButtonUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "5d7bbcd2c33233c7219014372a1f8fa60a4be277", "filename": "libjava/javax/swing/plaf/basic/BasicCheckBoxMenuItemUI.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicCheckBoxMenuItemUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicCheckBoxMenuItemUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicCheckBoxMenuItemUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "a55e13c954ce4899e829d8fba48fd825d7c5cffd", "filename": "libjava/javax/swing/plaf/basic/BasicComboBoxEditor.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboBoxEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboBoxEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboBoxEditor.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "9f61e0d18e2bbea77c4b11bc7f45c54d37bd35f9", "filename": "libjava/javax/swing/plaf/basic/BasicComboBoxRenderer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboBoxRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboBoxRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboBoxRenderer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "9044ed76c8648f1c7aedbd1c78007be13766eb48", "filename": "libjava/javax/swing/plaf/basic/BasicComboBoxUI.java", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboBoxUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboBoxUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboBoxUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "2acc21fa7d4f5990069def1fa7098d647925041d", "filename": "libjava/javax/swing/plaf/basic/BasicComboPopup.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboPopup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboPopup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicComboPopup.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "18cacab114919d5225f77562079184b32971a8b5", "filename": "libjava/javax/swing/plaf/basic/BasicEditorPaneUI.java", "status": "renamed", "additions": 18, "deletions": 25, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicEditorPaneUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicEditorPaneUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicEditorPaneUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378", "previous_filename": "libjava/gnu/java/awt/peer/gtk/GtkArgList.java"}, {"sha": "fd2832a4073a96f93a22ef98b71d5b60b2c8b920", "filename": "libjava/javax/swing/plaf/basic/BasicInternalFrameTitlePane.java", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicInternalFrameTitlePane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicInternalFrameTitlePane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicInternalFrameTitlePane.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "594bb7ecf93adfa6dd5a74cb5d0da4b5ddfe47fb", "filename": "libjava/javax/swing/plaf/basic/BasicInternalFrameUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicInternalFrameUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicInternalFrameUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicInternalFrameUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "b278f1f593ba3be36a40cbd1dd71b00ad516c34b", "filename": "libjava/javax/swing/plaf/basic/BasicLabelUI.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLabelUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLabelUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicLabelUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "b39421798fad7ca363a24634dca91c8551ad449a", "filename": "libjava/javax/swing/plaf/basic/BasicListUI.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicListUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicListUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicListUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "bed2d051cc39c8779b4751aa1a3d77ca1c2bccf6", "filename": "libjava/javax/swing/plaf/basic/BasicMenuBarUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuBarUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuBarUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuBarUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "ff48a74f07474bde886a683123399155cad1e6c0", "filename": "libjava/javax/swing/plaf/basic/BasicMenuItemUI.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuItemUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuItemUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuItemUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "7cd16f9e75ec8e335bffffce825e69b0dc2611bd", "filename": "libjava/javax/swing/plaf/basic/BasicMenuUI.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "7d5e01493888ab4803204bf4e14dbaa64e1576ab", "filename": "libjava/javax/swing/plaf/basic/BasicOptionPaneUI.java", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicOptionPaneUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicOptionPaneUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicOptionPaneUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "1feb2c4ce452b5a6dd9a3b528eea2d4b8c6227e3", "filename": "libjava/javax/swing/plaf/basic/BasicProgressBarUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicProgressBarUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicProgressBarUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicProgressBarUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "55cfdc033e51ef17f797f433953cdf7f126de49a", "filename": "libjava/javax/swing/plaf/basic/BasicRadioButtonMenuItemUI.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicRadioButtonMenuItemUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicRadioButtonMenuItemUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicRadioButtonMenuItemUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "4923b90b2651907ee2c2ed81f42cc9035ce959e4", "filename": "libjava/javax/swing/plaf/basic/BasicRootPaneUI.java", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicRootPaneUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicRootPaneUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicRootPaneUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "36939b21da029036bccf0291f65c2d864f7116f9", "filename": "libjava/javax/swing/plaf/basic/BasicScrollBarUI.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicScrollBarUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicScrollBarUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicScrollBarUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "b4618b2f7bfc89ac47ca8e803d8ad943a507892f", "filename": "libjava/javax/swing/plaf/basic/BasicScrollPaneUI.java", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicScrollPaneUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicScrollPaneUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicScrollPaneUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "a08acc9bdade15ed8160c3cd20c56cd4e01fde72", "filename": "libjava/javax/swing/plaf/basic/BasicSliderUI.java", "status": "modified", "additions": 66, "deletions": 66, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSliderUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSliderUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSliderUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "987f86bdb1be1b49a3053ae10c9cd5fde9a3dadc", "filename": "libjava/javax/swing/plaf/basic/BasicSplitPaneDivider.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSplitPaneDivider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSplitPaneDivider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSplitPaneDivider.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "a533f0820aa0c205943aa921958bee62a85de6b6", "filename": "libjava/javax/swing/plaf/basic/BasicTabbedPaneUI.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTabbedPaneUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTabbedPaneUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTabbedPaneUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "ebc702ad39329023875a514d56c4c57e0e096557", "filename": "libjava/javax/swing/plaf/basic/BasicTableHeaderUI.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTableHeaderUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTableHeaderUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTableHeaderUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "9be6d60e918f7529a9a208a688fb157019378d04", "filename": "libjava/javax/swing/plaf/basic/BasicTableUI.java", "status": "modified", "additions": 5, "deletions": 38, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTableUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTableUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTableUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "ac20a0a990c86740437bf61ca122f8229d50884d", "filename": "libjava/javax/swing/plaf/basic/BasicTextPaneUI.java", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTextPaneUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTextPaneUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTextPaneUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "a94ca2bb420a8dbc30c3566c79c7b2bfc81accb6", "filename": "libjava/javax/swing/plaf/basic/BasicTextUI.java", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTextUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTextUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTextUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "fad0108e096b89a82c461f65b16da089b05577e4", "filename": "libjava/javax/swing/plaf/basic/BasicToolBarUI.java", "status": "modified", "additions": 128, "deletions": 131, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicToolBarUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicToolBarUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicToolBarUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "db74f067ef0bf77d7b65cbdf78a90523c72b964b", "filename": "libjava/javax/swing/plaf/basic/BasicTreeUI.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTreeUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTreeUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTreeUI.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "7c91eaadcb5d3d37484b5572511a2619fbc7b24d", "filename": "libjava/javax/swing/plaf/metal/DefaultMetalTheme.java", "status": "added", "additions": 143, "deletions": 0, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FDefaultMetalTheme.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FDefaultMetalTheme.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FDefaultMetalTheme.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "b33205004b0d95ce6cb58a024bfd08d19ec246ff", "filename": "libjava/javax/swing/plaf/metal/MetalLookAndFeel.java", "status": "modified", "additions": 264, "deletions": 24, "changes": 288, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalLookAndFeel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "970f83095700a3fa712275211d11caba5bd15c64", "filename": "libjava/javax/swing/plaf/metal/MetalTheme.java", "status": "added", "additions": 259, "deletions": 0, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalTheme.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalTheme.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fmetal%2FMetalTheme.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "790d0450f7f984bfbc11572689550c4bd174fea5", "filename": "libjava/javax/swing/table/DefaultTableCellRenderer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableCellRenderer.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "3a8b1a3bf6d3cea86c23d9a4ee59d663fc4c3fc7", "filename": "libjava/javax/swing/table/DefaultTableColumnModel.java", "status": "modified", "additions": 245, "deletions": 125, "changes": 370, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableColumnModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableColumnModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableColumnModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "aab4202012e7239a1f0611ee3e4fe3a3c70fcc52", "filename": "libjava/javax/swing/table/DefaultTableModel.java", "status": "modified", "additions": 256, "deletions": 111, "changes": 367, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "0f538ed2490019eb247b4f69e868a61e01e10167", "filename": "libjava/javax/swing/table/JTableHeader.java", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FJTableHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FJTableHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FJTableHeader.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "c2de7f0e1a7b7bbee4c6f3aeaa38ae9fdc1ca746", "filename": "libjava/javax/swing/table/TableColumn.java", "status": "modified", "additions": 200, "deletions": 177, "changes": 377, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumn.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumn.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumn.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "1c036d8a11e0a4e9e4a5948f06bb85bc0a21b148", "filename": "libjava/javax/swing/table/TableColumnModel.java", "status": "modified", "additions": 99, "deletions": 99, "changes": 198, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumnModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumnModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumnModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "591ce4342a02a43f17d0d005a9de0ae0992fb565", "filename": "libjava/javax/swing/table/TableModel.java", "status": "modified", "additions": 88, "deletions": 64, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FTableModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftable%2FTableModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FTableModel.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "a2c3fa65701fa19ab0b9667573aef1cf1d1e61ef", "filename": "libjava/javax/swing/text/AbstractDocument.java", "status": "modified", "additions": 115, "deletions": 48, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FAbstractDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FAbstractDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FAbstractDocument.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "ecec70731ce0dcf1773464fe6ed2adb48b91b11e", "filename": "libjava/javax/swing/text/DefaultEditorKit.java", "status": "modified", "additions": 44, "deletions": 33, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultEditorKit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultEditorKit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultEditorKit.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "83da23a2638e1e54e55e93923aba3c91706ff41d", "filename": "libjava/javax/swing/text/DefaultStyledDocument.java", "status": "added", "additions": 195, "deletions": 0, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultStyledDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultStyledDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FDefaultStyledDocument.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "5d89a11ba7f37457c67fdff39b0b299cb9b2c0b1", "filename": "libjava/javax/swing/text/EditorKit.java", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FEditorKit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FEditorKit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FEditorKit.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "44a8dcb58643fc7912fd65f6f707cfd6998cb2b7", "filename": "libjava/javax/swing/text/GapContent.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FGapContent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FGapContent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FGapContent.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "dee496d6b4001b5efb1f7faead5c6f4407bb440d", "filename": "libjava/javax/swing/text/JTextComponent.java", "status": "modified", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FJTextComponent.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "ad18350e947a4f0a5efbb85c9b70c8d6e43ce633", "filename": "libjava/javax/swing/text/PasswordView.java", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FPasswordView.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FPasswordView.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FPasswordView.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "64e9c8ab3f43cd2ad3ccc99a64986435b4a599bc", "filename": "libjava/javax/swing/text/PlainDocument.java", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FPlainDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FPlainDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FPlainDocument.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "c852c1d69b42d26fac9e5998f976907f4a807700", "filename": "libjava/javax/swing/text/PlainView.java", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FPlainView.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FPlainView.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FPlainView.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "2fe2bd347d358adae3e4348154bfa506861b3ee6", "filename": "libjava/javax/swing/text/Position.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FPosition.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FPosition.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FPosition.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "3b1d9e7aa912efa6938f37c35fa5653313f199c5", "filename": "libjava/javax/swing/text/Segment.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FSegment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FSegment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FSegment.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "f470dddf241d828f9f62fbd3a73190b1da373050", "filename": "libjava/javax/swing/text/StringContent.java", "status": "added", "additions": 304, "deletions": 0, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FStringContent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FStringContent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FStringContent.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "148ebd32bd28d66a34361c516733c25d6d6d74ba", "filename": "libjava/javax/swing/text/StyledEditorKit.java", "status": "modified", "additions": 261, "deletions": 261, "changes": 522, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FStyledEditorKit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FStyledEditorKit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FStyledEditorKit.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "0191a2dc41cd2aa1a7f48ea377834d77ca814b29", "filename": "libjava/javax/swing/text/TextAction.java", "status": "modified", "additions": 43, "deletions": 26, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FTextAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FTextAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FTextAction.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "46f42b50374185adf69c9fdf393efca976606499", "filename": "libjava/javax/swing/text/View.java", "status": "modified", "additions": 104, "deletions": 49, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FView.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FView.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FView.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "c9cc4b792b88fc648c89966cc6e83225d3cb45bd", "filename": "libjava/javax/swing/text/ViewFactory.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FViewFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftext%2FViewFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FViewFactory.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "de34ee07250213e1e7e2e5fdd1f30849812e6178", "filename": "libjava/javax/swing/tree/DefaultMutableTreeNode.java", "status": "modified", "additions": 899, "deletions": 966, "changes": 1865, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "1f0c943aad9fba575d6c5e6f85a998f4b0f269f3", "filename": "libjava/javax/swing/tree/MutableTreeNode.java", "status": "modified", "additions": 62, "deletions": 41, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftree%2FMutableTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftree%2FMutableTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FMutableTreeNode.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "4b4357a1611d71f5d95751f932a7e0e4c2217fb1", "filename": "libjava/javax/swing/tree/TreeCellEditor.java", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellEditor.java?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "3370152e4e39f254a3c1435ba277642aa65ebf95", "filename": "libjava/jni/gtk-peer/gdkfont.h", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgdkfont.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgdkfont.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgdkfont.h?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "7787eb4c47a4c3f711d645001a2b13ac689a4ca8", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GThreadNativeMethodRunner.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "52489386839d5c7e2e841056b7cb10d66a18bf52", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontMetrics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontMetrics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontMetrics.c?ref=7526f35528640700e63d664cdffbece6591131dd"}, {"sha": "7a8a2ceefd89e7ed96d6bfffc1719f838b3da569", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontPeer.c", "status": "modified", "additions": 232, "deletions": 18, "changes": 250, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkFontPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "df720971957c63062f48ba25f9f2887891cca939", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c", "status": "removed", "additions": 0, "deletions": 696, "changes": 696, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGlyphVector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGlyphVector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGlyphVector.c?ref=7526f35528640700e63d664cdffbece6591131dd"}, {"sha": "99b1511264c8d7ae7f009d2605ab51f1a29ff531", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "e6535b46324aaad5ceb3cd48ac3f3633040ee78e", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c", "status": "modified", "additions": 189, "deletions": 316, "changes": 505, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "0727999df196af8845a3e158c5b5cc9d4ee98491", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c", "status": "modified", "additions": 187, "deletions": 0, "changes": 187, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkPixbufDecoder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkPixbufDecoder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkPixbufDecoder.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "6b1b4a9f3b595a18e102c290bda11643f266dccd", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkRobotPeer.c", "status": "added", "additions": 328, "deletions": 0, "changes": 328, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkRobotPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkRobotPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkRobotPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "94e98bf965a06d2885684a28c81bae4f9ada2367", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "6c854eff855eb829cc65f98dd089b436a4b5305c", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "b4e64e62d0265bd6c4336a6ea873c17a02a3f189", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "e05185790b3e7934a09c2474feae080b7ca3c616", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkClipboard.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkClipboard.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkClipboard.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "4cd3f16574fb4e7a6651cf9b11cfe500b681a0fc", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "7ad20b8906326bb6d91a892e59506d2aef0df40b", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c", "status": "modified", "additions": 66, "deletions": 37, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "791916174ed38aae477f99451225c5157bd6e18a", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.c", "status": "modified", "additions": 46, "deletions": 44, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkFileDialogPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkFileDialogPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkFileDialogPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "52da40cae5d31b40e7065c336d5df3fa7c441a41", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFramePeer.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkFramePeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkFramePeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkFramePeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "49ccffcf660455a1904e633a966e5e795a88c052", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkGenericPeer.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkGenericPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkGenericPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkGenericPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "468be06c1579444f019a98f4726261e9fbe4a059", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "8a2a8105d0a345b288a3d01ff3f6a5ffa537921f", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c", "status": "removed", "additions": 0, "deletions": 307, "changes": 307, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7526f35528640700e63d664cdffbece6591131dd/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c?ref=7526f35528640700e63d664cdffbece6591131dd"}, {"sha": "1fe18f9f0646880a62836009a9e4ad93c000001d", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuItemPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuItemPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuItemPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "790c90109aeaec2165cb6b56ebb00d92962f49fa", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollBarPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollBarPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollBarPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "6eb06e073f00b4e5a9983b8903c7be71c056c797", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "81857c42b1b59aca69e1d4c97eb2c30cf0a6c4b5", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c", "status": "modified", "additions": 355, "deletions": 0, "changes": 355, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkToolkit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkToolkit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkToolkit.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "2ca7f83988c72972c358903cff0dc234a7b7ed4b", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c", "status": "modified", "additions": 61, "deletions": 36, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "85834cadb027d243a98e889e06769a7ef3a62f45", "filename": "libjava/jni/gtk-peer/gtkcairopeer.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgtkcairopeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgtkcairopeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtkcairopeer.h?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}, {"sha": "9b04bb116acb1671d5662497800bf80734f32374", "filename": "libjava/jni/gtk-peer/gtkpeer.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d933abbe01b2c3d85293ede4da34cdd7df47f378/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h?ref=d933abbe01b2c3d85293ede4da34cdd7df47f378"}]}