{"sha": "36d2f81e95cf28fdc06e2531ff99737dd6163f77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZkMmY4MWU5NWNmMjhmZGMwNmUyNTMxZmY5OTczN2RkNjE2M2Y3Nw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-07-13T10:19:49Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-07-13T10:19:49Z"}, "message": "[AArch64][testsuite] Adjust some arith+compare tests for potentially more aggressive if-conversion\n\n\t* gcc.target/aarch64/adds3.c: Adjust for more aggressive\n\tif-conversion..\n\t* gcc.target/aarch64/adds1.c: Likewise.\n\t* gcc.target/aarch64/ands_1.c: Likewise.\n\t* gcc.target/aarch64/bics_1.c: Likewise.\n\t* gcc.target/aarch64/subs1.c: Likewise.\n\t* gcc.target/aarch64/subs3.c: Likewise.\n\nFrom-SVN: r225732", "tree": {"sha": "6805f286953c7c564683b051a718cba11aeb09b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6805f286953c7c564683b051a718cba11aeb09b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36d2f81e95cf28fdc06e2531ff99737dd6163f77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d2f81e95cf28fdc06e2531ff99737dd6163f77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36d2f81e95cf28fdc06e2531ff99737dd6163f77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d2f81e95cf28fdc06e2531ff99737dd6163f77/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1b9b669f5abdbf2aac0973d7975ddd54d5d35ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b9b669f5abdbf2aac0973d7975ddd54d5d35ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b9b669f5abdbf2aac0973d7975ddd54d5d35ed"}], "stats": {"total": 197, "additions": 102, "deletions": 95}, "files": [{"sha": "afcd71fac3bd8e7da02ae166070c005a27352ad1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36d2f81e95cf28fdc06e2531ff99737dd6163f77", "patch": "@@ -1,3 +1,13 @@\n+2015-07-13  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/adds3.c: Adjust for more aggressive\n+\tif-conversion..\n+\t* gcc.target/aarch64/adds1.c: Likewise.\n+\t* gcc.target/aarch64/ands_1.c: Likewise.\n+\t* gcc.target/aarch64/bics_1.c: Likewise.\n+\t* gcc.target/aarch64/subs1.c: Likewise.\n+\t* gcc.target/aarch64/subs3.c: Likewise.\n+\n 2015-07-13  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/64589"}, {"sha": "2bb3129efb1f0f438a33dffa67a9d0339bd156af", "filename": "gcc/testsuite/gcc.target/aarch64/adds1.c", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds1.c?ref=36d2f81e95cf28fdc06e2531ff99737dd6163f77", "patch": "@@ -12,7 +12,7 @@ adds_si_test1 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -24,7 +24,7 @@ adds_si_test2 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -36,7 +36,7 @@ adds_si_test3 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n typedef long long s64;\n@@ -50,7 +50,7 @@ adds_di_test1 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n s64\n@@ -62,7 +62,7 @@ adds_di_test2 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n s64\n@@ -74,7 +74,7 @@ adds_di_test3 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int main ()\n@@ -83,64 +83,64 @@ int main ()\n   s64 y;\n \n   x = adds_si_test1 (29, 4, 5);\n-  if (x != 42)\n+  if (x != (29 + 4))\n     abort ();\n \n-  x = adds_si_test1 (5, 2, 20);\n-  if (x != 29)\n+  x = adds_si_test1 (5, 2, -5);\n+  if (x != 7)\n     abort ();\n \n   x = adds_si_test2 (29, 4, 5);\n-  if (x != 293)\n+  if (x != (29 + 0xff))\n     abort ();\n \n-  x = adds_si_test2 (1024, 2, 20);\n-  if (x != 1301)\n+  x = adds_si_test2 (-255, 2, 20);\n+  if (x != -235)\n     abort ();\n \n   x = adds_si_test3 (35, 4, 5);\n-  if (x != 76)\n+  if (x != (35 + (4 << 3)))\n     abort ();\n \n-  x = adds_si_test3 (5, 2, 20);\n-  if (x != 43)\n+  x = adds_si_test3 (-(2 << 3), 2, 20);\n+  if (x != (20 - (2 << 3)))\n     abort ();\n \n   y = adds_di_test1 (0x130000029ll,\n \t\t     0x320000004ll,\n \t\t     0x505050505ll);\n \n-  if (y != 0xc75050536)\n+  if (y != (0x130000029ll + 0x320000004ll))\n     abort ();\n \n   y = adds_di_test1 (0x5000500050005ll,\n-\t\t     0x2111211121112ll,\n+\t\t     -0x5000500050005ll,\n \t\t     0x0000000002020ll);\n-  if (y != 0x9222922294249)\n+  if (y != (0x5000500050005ll + 0x0000000002020ll))\n     abort ();\n \n   y = adds_di_test2 (0x130000029ll,\n \t\t     0x320000004ll,\n \t\t     0x505050505ll);\n-  if (y != 0x955050631)\n+  if (y != (0x130000029ll + 0xff))\n     abort ();\n \n-  y = adds_di_test2 (0x130002900ll,\n+  y = adds_di_test2 (-0xff,\n \t\t     0x320000004ll,\n \t\t     0x505050505ll);\n-  if (y != 0x955052f08)\n+  if (y != (0x505050505ll - 0xff))\n     abort ();\n \n   y = adds_di_test3 (0x130000029ll,\n \t\t     0x064000008ll,\n \t\t     0x505050505ll);\n-  if (y != 0x9b9050576)\n+  if (y != (0x130000029ll + (0x064000008ll << 3)))\n     abort ();\n \n   y = adds_di_test3 (0x130002900ll,\n-\t\t     0x088000008ll,\n+\t\t     -(0x130002900ll >> 3),\n \t\t     0x505050505ll);\n-  if (y != 0xafd052e4d)\n+  if (y != (0x130002900ll + 0x505050505ll))\n     abort ();\n \n   return 0;"}, {"sha": "c5518bdcaf20bba797de394492558cb41840e4e2", "filename": "gcc/testsuite/gcc.target/aarch64/adds3.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds3.c?ref=36d2f81e95cf28fdc06e2531ff99737dd6163f77", "patch": "@@ -12,7 +12,7 @@ adds_ext (s64 a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -23,7 +23,7 @@ adds_shift_ext (s64 a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int main ()\n@@ -32,27 +32,27 @@ int main ()\n   s64 y;\n \n   x = adds_ext (0x13000002ll, 41, 15);\n-  if (x != 318767203)\n+  if (x != (int)(0x13000002ll + 41))\n     abort ();\n \n-  x = adds_ext (0x50505050ll, 29, 4);\n-  if (x != 1347440782)\n+  x = adds_ext (0x50505050ll, -0x50505050ll, 4);\n+  if (x != (int)(0x50505050ll + 4))\n     abort ();\n \n   x = adds_ext (0x12121212121ll, 2, 14);\n-  if (x != 555819315)\n+  if (x != (int)(0x12121212121ll + 2))\n     abort ();\n \n   x = adds_shift_ext (0x123456789ll, 4, 12);\n-  if (x != 591751097)\n+  if (x != (int)(0x123456789ll + (4 << 3)))\n     abort ();\n \n-  x = adds_shift_ext (0x02020202ll, 9, 8);\n-  if (x != 33686107)\n+  x = adds_shift_ext (-(0x02020202ll << 3), 0x02020202ll, 8);\n+  if (x != (int)(8 - (0x02020202ll << 3)))\n     abort ();\n \n   x = adds_shift_ext (0x987987987987ll, 23, 41);\n-  if (x != -2020050305)\n+  if (x != (int)(0x987987987987ll + (23 << 3)))\n     abort ();\n \n   return 0;"}, {"sha": "005924625ccdd9950ff1501bfb17152dfc36ff20", "filename": "gcc/testsuite/gcc.target/aarch64/ands_1.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fands_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fands_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fands_1.c?ref=36d2f81e95cf28fdc06e2531ff99737dd6163f77", "patch": "@@ -12,7 +12,7 @@ ands_si_test1 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -24,7 +24,7 @@ ands_si_test2 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -36,7 +36,7 @@ ands_si_test3 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n typedef long long s64;\n@@ -50,7 +50,7 @@ ands_di_test1 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n s64\n@@ -62,7 +62,7 @@ ands_di_test2 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n s64\n@@ -74,7 +74,7 @@ ands_di_test3 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -84,23 +84,23 @@ main ()\n   s64 y;\n \n   x = ands_si_test1 (29, 4, 5);\n-  if (x != 13)\n+  if (x != (29 & 4))\n     abort ();\n \n   x = ands_si_test1 (5, 2, 20);\n   if (x != 25)\n     abort ();\n \n   x = ands_si_test2 (29, 4, 5);\n-  if (x != 38)\n+  if (x != (29 & 0xff))\n     abort ();\n \n   x = ands_si_test2 (1024, 2, 20);\n   if (x != 1044)\n     abort ();\n \n   x = ands_si_test3 (35, 4, 5);\n-  if (x != 41)\n+  if (x != (35 & (4 << 3)))\n     abort ();\n \n   x = ands_si_test3 (5, 2, 20);\n@@ -111,7 +111,7 @@ main ()\n                      0x320000004ll,\n                      0x505050505ll);\n \n-  if (y != ((0x130000029ll & 0x320000004ll) + 0x320000004ll + 0x505050505ll))\n+  if (y != ((0x130000029ll & 0x320000004ll)))\n     abort ();\n \n   y = ands_di_test1 (0x5000500050005ll,\n@@ -123,7 +123,7 @@ main ()\n   y = ands_di_test2 (0x130000029ll,\n                      0x320000004ll,\n                      0x505050505ll);\n-  if (y != ((0x130000029ll & 0xff) + 0x320000004ll + 0x505050505ll))\n+  if (y != ((0x130000029ll & 0xff)))\n     abort ();\n \n   y = ands_di_test2 (0x130002900ll,\n@@ -135,8 +135,7 @@ main ()\n   y = ands_di_test3 (0x130000029ll,\n                      0x064000008ll,\n                      0x505050505ll);\n-  if (y != ((0x130000029ll & (0x064000008ll << 3))\n-\t    + 0x064000008ll + 0x505050505ll))\n+  if (y != ((0x130000029ll & (0x064000008ll << 3))))\n     abort ();\n \n   y = ands_di_test3 (0x130002900ll,"}, {"sha": "682962c72eb9b2b354f08808e3626ef007f78282", "filename": "gcc/testsuite/gcc.target/aarch64/bics_1.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_1.c?ref=36d2f81e95cf28fdc06e2531ff99737dd6163f77", "patch": "@@ -12,7 +12,7 @@ bics_si_test1 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -24,7 +24,7 @@ bics_si_test2 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n typedef long long s64;\n@@ -38,7 +38,7 @@ bics_di_test1 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n s64\n@@ -50,7 +50,7 @@ bics_di_test2 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -60,15 +60,15 @@ main ()\n   s64 y;\n \n   x = bics_si_test1 (29, ~4, 5);\n-  if (x != ((29 & 4) + ~4 + 5))\n+  if (x != (29 & 4))\n     abort ();\n \n   x = bics_si_test1 (5, ~2, 20);\n   if (x != 25)\n     abort ();\n \n   x = bics_si_test2 (35, ~4, 5);\n-  if (x != ((35 & ~(~4 << 3)) + ~4 + 5))\n+  if (x != (35 & ~(~4 << 3)))\n     abort ();\n \n   x = bics_si_test2 (96, ~2, 20);\n@@ -79,7 +79,7 @@ main ()\n                      ~0x320000004ll,\n                      0x505050505ll);\n \n-  if (y != ((0x130000029ll & 0x320000004ll) + ~0x320000004ll + 0x505050505ll))\n+  if (y != (0x130000029ll & 0x320000004ll))\n     abort ();\n \n   y = bics_di_test1 (0x5000500050005ll,\n@@ -91,8 +91,7 @@ main ()\n   y = bics_di_test2 (0x130000029ll,\n                      ~0x064000008ll,\n                      0x505050505ll);\n-  if (y != ((0x130000029ll & ~(~0x064000008ll << 3))\n-\t    + ~0x064000008ll + 0x505050505ll))\n+  if (y != (0x130000029ll & ~(~0x064000008ll << 3)))\n     abort ();\n \n   y = bics_di_test2 (0x130002900ll,\n@@ -103,4 +102,3 @@ main ()\n \n   return 0;\n }\n-"}, {"sha": "ebfc17f4e7a42ebe4f193f17812792ff306610e4", "filename": "gcc/testsuite/gcc.target/aarch64/subs1.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs1.c?ref=36d2f81e95cf28fdc06e2531ff99737dd6163f77", "patch": "@@ -12,7 +12,7 @@ subs_si_test1 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -24,7 +24,7 @@ subs_si_test2 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -36,7 +36,7 @@ subs_si_test3 (int a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n typedef long long s64;\n@@ -50,7 +50,7 @@ subs_di_test1 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n s64\n@@ -62,7 +62,7 @@ subs_di_test2 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n s64\n@@ -74,7 +74,7 @@ subs_di_test3 (s64 a, s64 b, s64 c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int main ()\n@@ -83,64 +83,64 @@ int main ()\n   s64 y;\n \n   x = subs_si_test1 (29, 4, 5);\n-  if (x != 33)\n+  if (x != 24)\n     abort ();\n \n-  x = subs_si_test1 (5, 2, 20);\n-  if (x != 7)\n+  x = subs_si_test1 (20, 2, 20);\n+  if (x != 40)\n     abort ();\n \n-  x = subs_si_test2 (29, 4, 5);\n-  if (x != -217)\n-    abort ();\n+   x = subs_si_test2 (0xff, 4, 5);\n+   if (x != (0xff + 5))\n+     abort ();\n \n-  x = subs_si_test2 (1024, 2, 20);\n-  if (x != 791)\n-    abort ();\n+   x = subs_si_test2 (1024, 2, 20);\n+   if (x != (1024 - 0xff))\n+     abort ();\n \n   x = subs_si_test3 (35, 4, 5);\n-  if (x != 12)\n+  if (x != 35 - (4 << 3))\n     abort ();\n \n-  x = subs_si_test3 (5, 2, 20);\n-  if (x != 11)\n+  x = subs_si_test3 (5 << 3, 5, 20);\n+  if (x != (20 + (5 << 3)))\n     abort ();\n \n   y = subs_di_test1 (0x130000029ll,\n \t\t     0x320000004ll,\n \t\t     0x505050505ll);\n \n-  if (y != 0x45000002d)\n+  if (y != (0x130000029ll - 0x505050505ll))\n     abort ();\n \n   y = subs_di_test1 (0x5000500050005ll,\n \t\t     0x2111211121112ll,\n-\t\t     0x0000000002020ll);\n-  if (y != 0x7111711171117)\n+\t\t     0x5000500050005ll);\n+  if (y != (0x5000500050005ll + 0x5000500050005ll))\n     abort ();\n \n   y = subs_di_test2 (0x130000029ll,\n \t\t     0x320000004ll,\n \t\t     0x505050505ll);\n-  if (y != 0x955050433)\n+  if (y != (0x130000029ll - 0xff))\n     abort ();\n \n-  y = subs_di_test2 (0x130002900ll,\n+  y = subs_di_test2 (0xff,\n \t\t     0x320000004ll,\n \t\t     0x505050505ll);\n-  if (y != 0x955052d0a)\n+  if (y != (0xff + 0x505050505ll))\n     abort ();\n \n   y = subs_di_test3 (0x130000029ll,\n \t\t     0x064000008ll,\n \t\t     0x505050505ll);\n-  if (y != 0x3790504f6)\n+  if (y != (0x130000029ll - (0x064000008ll << 3)))\n     abort ();\n \n-  y = subs_di_test3 (0x130002900ll,\n-\t\t     0x088000008ll,\n+  y = subs_di_test3 (0x130002900ll << 3,\n+\t\t     0x130002900ll,\n \t\t     0x505050505ll);\n-  if (y != 0x27d052dcd)\n+  if (y != (0x505050505ll + (0x130002900ll << 3)))\n     abort ();\n \n   return 0;"}, {"sha": "59581bf1ab790b06a9be4489d7e02ee889519447", "filename": "gcc/testsuite/gcc.target/aarch64/subs3.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d2f81e95cf28fdc06e2531ff99737dd6163f77/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs3.c?ref=36d2f81e95cf28fdc06e2531ff99737dd6163f77", "patch": "@@ -12,7 +12,7 @@ subs_ext (s64 a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int\n@@ -23,7 +23,7 @@ subs_shift_ext (s64 a, int b, int c)\n   if (d == 0)\n     return a + c;\n   else\n-    return b + d + c;\n+    return d;\n }\n \n int main ()\n@@ -32,27 +32,27 @@ int main ()\n   s64 y;\n \n   x = subs_ext (0x13000002ll, 41, 15);\n-  if (x != 318767121)\n+  if (x != (int)(0x13000002ll - 41))\n     abort ();\n \n-  x = subs_ext (0x50505050ll, 29, 4);\n-  if (x != 1347440724)\n+  x = subs_ext (0x50505050ll, 0x50505050ll, 4);\n+  if (x != (int)(0x50505050ll + 4))\n     abort ();\n \n   x = subs_ext (0x12121212121ll, 2, 14);\n-  if (x != 555819311)\n+  if (x != (int)(0x12121212121ll - 2))\n     abort ();\n \n   x = subs_shift_ext (0x123456789ll, 4, 12);\n-  if (x != 591751033)\n+  if (x != (int)(0x123456789ll - (4 << 3)))\n     abort ();\n \n-  x = subs_shift_ext (0x02020202ll, 9, 8);\n-  if (x != 33685963)\n+  x = subs_shift_ext (0x02020202ll << 3, 0x02020202ll, 8);\n+  if (x != (int)(8 + (0x02020202ll << 3)))\n     abort ();\n \n   x = subs_shift_ext (0x987987987987ll, 23, 41);\n-  if (x != -2020050673)\n+  if (x != (int)(0x987987987987ll - (23 << 3)))\n     abort ();\n \n   return 0;"}]}