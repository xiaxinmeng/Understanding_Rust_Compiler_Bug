{"sha": "3807059e82873de1e5d0b8580b4755be7f90c54b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgwNzA1OWU4Mjg3M2RlMWU1ZDBiODU4MGI0NzU1YmU3ZjkwYzU0Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-01-28T21:04:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-01-28T21:04:29Z"}, "message": "re PR c++/58632 (ICE reusing template parameter name as class name)\n\n\tPR c++/58632\n\t* decl.c (lookup_and_check_tag): Ignore template parameters if\n\tscope == ts_current.\n\t* pt.c (check_template_shadow): Don't complain about the injected\n\tclass name.\n\nFrom-SVN: r207208", "tree": {"sha": "95949425d523e36db7eedfffc1daaa0ec7c0374a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95949425d523e36db7eedfffc1daaa0ec7c0374a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3807059e82873de1e5d0b8580b4755be7f90c54b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3807059e82873de1e5d0b8580b4755be7f90c54b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3807059e82873de1e5d0b8580b4755be7f90c54b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3807059e82873de1e5d0b8580b4755be7f90c54b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b2b9969c85179ac7f64f2d200cdbdcec7036725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b2b9969c85179ac7f64f2d200cdbdcec7036725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b2b9969c85179ac7f64f2d200cdbdcec7036725"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "43ba8047c401bf3adc7eee47b6daacb77a438367", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3807059e82873de1e5d0b8580b4755be7f90c54b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3807059e82873de1e5d0b8580b4755be7f90c54b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3807059e82873de1e5d0b8580b4755be7f90c54b", "patch": "@@ -1,5 +1,11 @@\n 2014-01-28  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/58632\n+\t* decl.c (lookup_and_check_tag): Ignore template parameters if\n+\tscope == ts_current.\n+\t* pt.c (check_template_shadow): Don't complain about the injected\n+\tclass name.\n+\n \t* decl.c (duplicate_decls): Tweak.\n \n \tPR c++/53756"}, {"sha": "e14e401d0fce23070f90dd50b1c79c8a8605e9fd", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3807059e82873de1e5d0b8580b4755be7f90c54b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3807059e82873de1e5d0b8580b4755be7f90c54b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3807059e82873de1e5d0b8580b4755be7f90c54b", "patch": "@@ -11982,7 +11982,10 @@ lookup_and_check_tag (enum tag_types tag_code, tree name,\n \n   if (decl\n       && (DECL_CLASS_TEMPLATE_P (decl)\n-\t  || DECL_TEMPLATE_TEMPLATE_PARM_P (decl)))\n+\t  /* If scope is ts_current we're defining a class, so ignore a\n+\t     template template parameter.  */\n+\t  || (scope != ts_current\n+\t      && DECL_TEMPLATE_TEMPLATE_PARM_P (decl))))\n     decl = DECL_TEMPLATE_RESULT (decl);\n \n   if (decl && TREE_CODE (decl) == TYPE_DECL)"}, {"sha": "6c68bae7c8ae94ac116525af2a0ffa2a51097a1f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3807059e82873de1e5d0b8580b4755be7f90c54b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3807059e82873de1e5d0b8580b4755be7f90c54b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3807059e82873de1e5d0b8580b4755be7f90c54b", "patch": "@@ -3527,6 +3527,11 @@ check_template_shadow (tree decl)\n \t  && TEMPLATE_PARMS_FOR_INLINE (current_template_parms)))\n     return true;\n \n+  /* Don't complain about the injected class name, as we've already\n+     complained about the class itself.  */\n+  if (DECL_SELF_REFERENCE_P (decl))\n+    return false;\n+\n   error (\"declaration of %q+#D\", decl);\n   error (\" shadows template parm %q+#D\", olddecl);\n   return false;"}, {"sha": "6eb30d0945b9291d3e6328809f7ea4759312006a", "filename": "gcc/testsuite/g++.dg/template/shadow1.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3807059e82873de1e5d0b8580b4755be7f90c54b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshadow1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3807059e82873de1e5d0b8580b4755be7f90c54b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshadow1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshadow1.C?ref=3807059e82873de1e5d0b8580b4755be7f90c54b", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/58632\n+\n+template<template<int I> class A> // { dg-message \"shadows\" }\n+class A {};\t\t\t// { dg-error \"declaration\" }"}]}