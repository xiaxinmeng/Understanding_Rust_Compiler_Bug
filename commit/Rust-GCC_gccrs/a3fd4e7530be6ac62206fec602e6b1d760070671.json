{"sha": "a3fd4e7530be6ac62206fec602e6b1d760070671", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNmZDRlNzUzMGJlNmFjNjIyMDZmZWM2MDJlNmIxZDc2MDA3MDY3MQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-15T23:28:44Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-15T23:28:44Z"}, "message": "frame.h (__register_frame, [...]): New.\n\n        * frame.h (__register_frame, __register_frame_table,\n        __deregister_frame): New.\n        * frame.c (__register_frame, __register_frame_table,\n        __deregister_frame): New.\n        * frame.c (__deregister_frame_info): Return void *.\n        * frame.h (__deregister_frame_info): Ditto.\n        * collect2.c (__deregister_frame_info): Ditto.\n\nFrom-SVN: r17113", "tree": {"sha": "6b08e545a3000a76739861bf072edc0eff7bd19d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b08e545a3000a76739861bf072edc0eff7bd19d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3fd4e7530be6ac62206fec602e6b1d760070671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3fd4e7530be6ac62206fec602e6b1d760070671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3fd4e7530be6ac62206fec602e6b1d760070671", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3fd4e7530be6ac62206fec602e6b1d760070671/comments", "author": null, "committer": null, "parents": [{"sha": "520cd331616a9abb78a927d5842647c414c58581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/520cd331616a9abb78a927d5842647c414c58581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/520cd331616a9abb78a927d5842647c414c58581"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "5aff3d1af7e2066a51a50c511563e8a9160f4dc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3fd4e7530be6ac62206fec602e6b1d760070671/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3fd4e7530be6ac62206fec602e6b1d760070671/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3fd4e7530be6ac62206fec602e6b1d760070671", "patch": "@@ -1,7 +1,17 @@\n-Tue Dec 16 00:14:29 1997  Jeffrey A Law  (law@cygnus.com)\n+Tue Dec 16 00:32:01 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* version.c: Bump for snapshot.\n \n+Tue Dec 16 00:14:29 1997  H.J. Lu  (hjl@gnu.org)\n+\n+\t* frame.h (__register_frame, __register_frame_table,\n+\t__deregister_frame): New.\n+\t* frame.c (__register_frame, __register_frame_table,\n+\t__deregister_frame): New.\n+\t* frame.c (__deregister_frame_info): Return void *.\n+\t* frame.h (__deregister_frame_info): Ditto.\n+\t* collect2.c (__deregister_frame_info): Ditto.\n+\n Mon Dec 15 18:40:08 1997  Richard Henderson  <rth@cygnus.com>\n \n \t* expmed.c (expand_shift): If SHIFT_COUNT_TRUNCATED, drop a SUBREG."}, {"sha": "aa23a0f7cddb020b898b2398ced113dc8dabe32d", "filename": "gcc/collect2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3fd4e7530be6ac62206fec602e6b1d760070671/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3fd4e7530be6ac62206fec602e6b1d760070671/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=a3fd4e7530be6ac62206fec602e6b1d760070671", "patch": "@@ -1791,7 +1791,7 @@ write_c_file_stat (stream, name)\n       fprintf (stream, \"};\\n\");\n \n       fprintf (stream, \"extern void __register_frame_info_table (void *, struct object *);\\n\");\n-      fprintf (stream, \"extern void __deregister_frame_info (void *);\\n\");\n+      fprintf (stream, \"extern void *__deregister_frame_info (void *);\\n\");\n \n       fprintf (stream, \"static void reg_frame () {\\n\");\n       fprintf (stream, \"\\tstatic struct object ob;\\n\");\n@@ -1877,7 +1877,7 @@ write_c_file_glob (stream, name)\n       fprintf (stream, \"};\\n\");\n \n       fprintf (stream, \"extern void __register_frame_info_table (void *, struct object *);\\n\");\n-      fprintf (stream, \"extern void __deregister_frame_info (void *);\\n\");\n+      fprintf (stream, \"extern void *__deregister_frame_info (void *);\\n\");\n \n       fprintf (stream, \"static void reg_frame () {\\n\");\n       fprintf (stream, \"\\tstatic struct object ob;\\n\");"}, {"sha": "5cc4184ce2a0279668fd94bd5fa0f59f9558d064", "filename": "gcc/frame.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3fd4e7530be6ac62206fec602e6b1d760070671/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3fd4e7530be6ac62206fec602e6b1d760070671/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=a3fd4e7530be6ac62206fec602e6b1d760070671", "patch": "@@ -528,6 +528,13 @@ __register_frame_info (void *begin, struct object *ob)\n   __gthread_mutex_unlock (&object_mutex);\n }\n \n+void\n+__register_frame (void *begin)\n+{\n+  struct object *ob = (struct object *) malloc (sizeof (struct object));\n+  __register_frame_info (begin, ob);                       \n+}\n+\n /* Similar, but BEGIN is actually a pointer to a table of unwind entries\n    for different translation units.  Called from the file generated by\n    collect2.  */\n@@ -549,9 +556,16 @@ __register_frame_info_table (void *begin, struct object *ob)\n   __gthread_mutex_unlock (&object_mutex);\n }\n \n+void\n+__register_frame_table (void *begin)\n+{\n+  struct object *ob = (struct object *) malloc (sizeof (struct object));\n+  __register_frame_info_table (begin, ob);\n+}\n+\n /* Called from crtend.o to deregister the unwind info for an object.  */\n \n-void\n+void *\n __deregister_frame_info (void *begin)\n {\n   struct object **p;\n@@ -571,7 +585,7 @@ __deregister_frame_info (void *begin)\n \t    free (ob->fde_array);\n \n \t  __gthread_mutex_unlock (&object_mutex);\n-\t  return;\n+\t  return (void *) ob;\n \t}\n       p = &((*p)->next);\n     }\n@@ -580,6 +594,12 @@ __deregister_frame_info (void *begin)\n   abort ();\n }\n \n+void\n+__deregister_frame (void *begin)\n+{\n+  free (__deregister_frame_info (begin));\n+}\n+\n /* Called from __throw to find the registers to restore for a given\n    PC_TARGET.  The caller should allocate a local variable of `struct\n    frame_state' (declared in frame.h) and pass its address to STATE_IN.  */"}, {"sha": "7493d92f80bd5e558675b3f4188e97be099b59eb", "filename": "gcc/frame.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3fd4e7530be6ac62206fec602e6b1d760070671/gcc%2Fframe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3fd4e7530be6ac62206fec602e6b1d760070671/gcc%2Fframe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.h?ref=a3fd4e7530be6ac62206fec602e6b1d760070671", "patch": "@@ -34,6 +34,10 @@ struct object {\n   struct object *next;\n };\n \n+extern void __register_frame (void * );\n+extern void __register_frame_table (void *);\n+extern void __deregister_frame (void *);\n+\n /* Called either from crtbegin.o or a static constructor to register the\n    unwind info for an object or translation unit, respectively.  */\n \n@@ -46,7 +50,7 @@ extern void __register_frame_info_table (void *, struct object *);\n \n /* Called from crtend.o to deregister the unwind info for an object.  */\n \n-extern void __deregister_frame_info (void *);\n+extern void *__deregister_frame_info (void *);\n \n /* Called from __throw to find the registers to restore for a given\n    PC_TARGET.  The caller should allocate a local variable of `struct"}]}