{"sha": "039f4db92051767d931d131a5ec2c7633061a2ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM5ZjRkYjkyMDUxNzY3ZDkzMWQxMzFhNWVjMmM3NjMzMDYxYTJlZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-02-24T22:35:18Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2017-02-24T22:35:18Z"}, "message": "nios2.c (nios2_simple_const_p): Returns false if the argument isn't a CONST_INT.\n\n2017-02-24  Segher Boessenkool  <segher@kernel.crashing.org>\n\t    Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* config/nios2/nios2.c (nios2_simple_const_p): Returns false if the\n\targument isn't a CONST_INT.\n\t(nios2_alternate_compare_const): Assert op is a CONST_INT.\n\t(nios2_valid_compare_const_p): Assert op is a CONST_INT.\n\t(nios2_validate_compare): Bypass alternate compare logic if *op2\n\tis not a CONST_INT.\n\t(ldstwm_operation_p): Return false if first_base is not a REG or\n\tif first_offset is not a CONST_INT.\n\n\nCo-Authored-By: Sandra Loosemore <sandra@codesourcery.com>\n\nFrom-SVN: r245724", "tree": {"sha": "ed6039601e79f32a051b87a579fcd18d0f7f780c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed6039601e79f32a051b87a579fcd18d0f7f780c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/039f4db92051767d931d131a5ec2c7633061a2ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039f4db92051767d931d131a5ec2c7633061a2ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/039f4db92051767d931d131a5ec2c7633061a2ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039f4db92051767d931d131a5ec2c7633061a2ed/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da3243b2b6c29514a0550cfcd4055fdf13c448f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da3243b2b6c29514a0550cfcd4055fdf13c448f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da3243b2b6c29514a0550cfcd4055fdf13c448f3"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "e0f560d48d161aa939105a7cc63d4e22a270409c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039f4db92051767d931d131a5ec2c7633061a2ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039f4db92051767d931d131a5ec2c7633061a2ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=039f4db92051767d931d131a5ec2c7633061a2ed", "patch": "@@ -1,3 +1,15 @@\n+2017-02-24  Segher Boessenkool  <segher@kernel.crashing.org>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* config/nios2/nios2.c (nios2_simple_const_p): Returns false if the\n+\targument isn't a CONST_INT.\n+\t(nios2_alternate_compare_const): Assert op is a CONST_INT.\n+\t(nios2_valid_compare_const_p): Assert op is a CONST_INT.\n+\t(nios2_validate_compare): Bypass alternate compare logic if *op2\n+\tis not a CONST_INT.\n+\t(ldstwm_operation_p): Return false if first_base is not a REG or\n+\tif first_offset is not a CONST_INT.\n+\n 2017-02-24  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/cris/cris.md: Use correct operand in a define_peephole2."}, {"sha": "2fc9a080402fa6271d86b9769d342dfe6281d161", "filename": "gcc/config/nios2/nios2.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039f4db92051767d931d131a5ec2c7633061a2ed/gcc%2Fconfig%2Fnios2%2Fnios2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039f4db92051767d931d131a5ec2c7633061a2ed/gcc%2Fconfig%2Fnios2%2Fnios2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.c?ref=039f4db92051767d931d131a5ec2c7633061a2ed", "patch": "@@ -1416,6 +1416,8 @@ nios2_option_override (void)\n static bool\n nios2_simple_const_p (const_rtx cst)\n {\n+  if (!CONST_INT_P (cst))\n+    return false;\n   HOST_WIDE_INT val = INTVAL (cst);\n   return SMALL_INT (val) || SMALL_INT_UNSIGNED (val) || UPPER16_INT (val);\n }\n@@ -1753,6 +1755,8 @@ nios2_alternate_compare_const (enum rtx_code code, rtx op,\n \t\t\t       enum rtx_code *alt_code, rtx *alt_op,\n \t\t\t       machine_mode mode)\n {\n+  gcc_assert (CONST_INT_P (op));\n+\n   HOST_WIDE_INT opval = INTVAL (op);\n   enum rtx_code scode = signed_condition (code);\n   bool dec_p = (scode == LT || scode == GE);\n@@ -1788,6 +1792,7 @@ nios2_alternate_compare_const (enum rtx_code code, rtx op,\n static bool\n nios2_valid_compare_const_p (enum rtx_code code, rtx op)\n {\n+  gcc_assert (CONST_INT_P (op));\n   switch (code)\n     {\n     case EQ: case NE: case GE: case LT:\n@@ -1846,7 +1851,7 @@ nios2_validate_compare (machine_mode mode, rtx *cmp, rtx *op1, rtx *op2)\n   if (GET_MODE_CLASS (mode) == MODE_FLOAT)\n     return nios2_validate_fpu_compare (mode, cmp, op1, op2, true);\n \n-  if (!reg_or_0_operand (*op2, mode))\n+  if (CONST_INT_P (*op2) && *op2 != const0_rtx)\n     {\n       /* Create alternate constant compare.  */\n       nios2_alternate_compare_const (code, *op2, &alt_code, &alt_op2, mode);\n@@ -1878,8 +1883,11 @@ nios2_validate_compare (machine_mode mode, rtx *cmp, rtx *op1, rtx *op2)\n \t  code = alt_code;\n \t  *op2 = alt_op2;\n \t}\n-      *op2 = force_reg (SImode, *op2);\n+      *op2 = force_reg (mode, *op2);\n     }\n+    else if (!reg_or_0_operand (*op2, mode))\n+      *op2 = force_reg (mode, *op2);\n+    \n  check_rebuild_cmp:\n   if (code == GT || code == GTU || code == LE || code == LEU)\n     {\n@@ -4558,6 +4566,8 @@ ldstwm_operation_p (rtx op, bool load_p)\n \t  if (!split_mem_address (XEXP (mem, 0),\n \t\t\t\t  &first_base, &first_offset))\n \t    return false;\n+\t  if (!REG_P (first_base) || !CONST_INT_P (first_offset))\n+\t    return false;\n \t  base_reg = first_base;\n \t  inc_p = INTVAL (first_offset) >= 0;\n \t}"}]}