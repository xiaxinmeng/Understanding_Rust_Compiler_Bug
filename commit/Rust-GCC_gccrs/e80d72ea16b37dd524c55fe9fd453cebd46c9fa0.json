{"sha": "e80d72ea16b37dd524c55fe9fd453cebd46c9fa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgwZDcyZWExNmIzN2RkNTI0YzU1ZmU5ZmQ0NTNjZWJkNDZjOWZhMA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2009-06-20T10:21:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-20T10:21:36Z"}, "message": "sem_ch3.adb (Is_OK_For_Limited_Init): An unchecked conversion of a function call is a legal expression to initialize...\n\n2009-06-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Is_OK_For_Limited_Init): An unchecked conversion of a\n\tfunction call is a legal expression to initialize a limited object.\n\n\t* exp_ch3.adb: Rename various freeze operations that perform expansion\n\tactions, to prevent confusion with subprograms in the freeze package.\n\nFrom-SVN: r148744", "tree": {"sha": "08f0eff7168368adfc22d5a944e21b69337a8c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08f0eff7168368adfc22d5a944e21b69337a8c48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e80d72ea16b37dd524c55fe9fd453cebd46c9fa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80d72ea16b37dd524c55fe9fd453cebd46c9fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e80d72ea16b37dd524c55fe9fd453cebd46c9fa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80d72ea16b37dd524c55fe9fd453cebd46c9fa0/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ca063eb448795111f97bf102df6189e116643b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca063eb448795111f97bf102df6189e116643b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ca063eb448795111f97bf102df6189e116643b3"}], "stats": {"total": 60, "additions": 35, "deletions": 25}, "files": [{"sha": "66edece62cd11583211fea7fb36286caab472297", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80d72ea16b37dd524c55fe9fd453cebd46c9fa0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80d72ea16b37dd524c55fe9fd453cebd46c9fa0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e80d72ea16b37dd524c55fe9fd453cebd46c9fa0", "patch": "@@ -1,3 +1,11 @@\n+2009-06-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Is_OK_For_Limited_Init): An unchecked conversion of a\n+\tfunction call is a legal expression to initialize a limited object.\n+\n+\t* exp_ch3.adb: Rename various freeze operations that perform expansion\n+\tactions, to prevent confusion with subprograms in the freeze package.\n+\n 2009-06-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem.adb (Walk_Library_Units): Check instantiations first."}, {"sha": "70287a652c1d1f1c72a486f035009fdefe8a2206", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80d72ea16b37dd524c55fe9fd453cebd46c9fa0/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80d72ea16b37dd524c55fe9fd453cebd46c9fa0/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=e80d72ea16b37dd524c55fe9fd453cebd46c9fa0", "patch": "@@ -166,19 +166,19 @@ package body Exp_Ch3 is\n    --  _controller of type Record_Controller or Limited_Record_Controller\n    --  in the record T.\n \n-   procedure Freeze_Array_Type (N : Node_Id);\n+   procedure Expand_Freeze_Array_Type (N : Node_Id);\n    --  Freeze an array type. Deals with building the initialization procedure,\n    --  creating the packed array type for a packed array and also with the\n    --  creation of the controlling procedures for the controlled case. The\n    --  argument N is the N_Freeze_Entity node for the type.\n \n-   procedure Freeze_Enumeration_Type (N : Node_Id);\n+   procedure Expand_Freeze_Enumeration_Type (N : Node_Id);\n    --  Freeze enumeration type with non-standard representation. Builds the\n    --  array and function needed to convert between enumeration pos and\n    --  enumeration representation values. N is the N_Freeze_Entity node\n    --  for the type.\n \n-   procedure Freeze_Record_Type (N : Node_Id);\n+   procedure Expand_Freeze_Record_Type (N : Node_Id);\n    --  Freeze record type. Builds all necessary discriminant checking\n    --  and other ancillary functions, and builds dispatch tables where\n    --  needed. The argument N is the N_Freeze_Entity node. This processing\n@@ -1312,8 +1312,8 @@ package body Exp_Ch3 is\n          Next_Component (Comp);\n       end loop;\n \n-      --  All components have static initialization. Build  positional\n-      --  aggregate from the given expressions or defaults.\n+      --  All components have static initialization. Build positional aggregate\n+      --  from the given expressions or defaults.\n \n       Agg := Make_Aggregate (Sloc (T), New_List, New_List);\n       Set_Parent (Agg, Parent (T));\n@@ -5082,11 +5082,11 @@ package body Exp_Ch3 is\n       end if;\n    end Clean_Task_Names;\n \n-   -----------------------\n-   -- Freeze_Array_Type --\n-   -----------------------\n+   ------------------------------\n+   -- Expand_Freeze_Array_Type --\n+   ------------------------------\n \n-   procedure Freeze_Array_Type (N : Node_Id) is\n+   procedure Expand_Freeze_Array_Type (N : Node_Id) is\n       Typ      : constant Entity_Id  := Entity (N);\n       Comp_Typ : constant Entity_Id := Component_Type (Typ);\n       Base     : constant Entity_Id  := Base_Type (Typ);\n@@ -5169,13 +5169,13 @@ package body Exp_Ch3 is\n       then\n          Build_Array_Init_Proc (Base, N);\n       end if;\n-   end Freeze_Array_Type;\n+   end Expand_Freeze_Array_Type;\n \n-   -----------------------------\n-   -- Freeze_Enumeration_Type --\n-   -----------------------------\n+   ------------------------------------\n+   -- Expand_Freeze_Enumeration_Type --\n+   ------------------------------------\n \n-   procedure Freeze_Enumeration_Type (N : Node_Id) is\n+   procedure Expand_Freeze_Enumeration_Type (N : Node_Id) is\n       Typ           : constant Entity_Id  := Entity (N);\n       Loc           : constant Source_Ptr := Sloc (Typ);\n       Ent           : Entity_Id;\n@@ -5465,13 +5465,13 @@ package body Exp_Ch3 is\n    exception\n       when RE_Not_Available =>\n          return;\n-   end Freeze_Enumeration_Type;\n+   end Expand_Freeze_Enumeration_Type;\n \n-   ------------------------\n-   -- Freeze_Record_Type --\n-   ------------------------\n+   -------------------------------\n+   -- Expand_Freeze_Record_Type --\n+   -------------------------------\n \n-   procedure Freeze_Record_Type (N : Node_Id) is\n+   procedure Expand_Freeze_Record_Type (N : Node_Id) is\n \n       procedure Add_Internal_Interface_Entities (Tagged_Type : Entity_Id);\n       --  Add to the list of primitives of Tagged_Types the internal entities\n@@ -5593,7 +5593,7 @@ package body Exp_Ch3 is\n       Wrapper_Body_List   : List_Id := No_List;\n       Null_Proc_Decl_List : List_Id := No_List;\n \n-   --  Start of processing for Freeze_Record_Type\n+   --  Start of processing for Expand_Freeze_Record_Type\n \n    begin\n       --  Build discriminant checking functions if not a derived type (for\n@@ -5990,7 +5990,7 @@ package body Exp_Ch3 is\n             Append_Freeze_Actions (Def_Id, Wrapper_Body_List);\n          end if;\n       end if;\n-   end Freeze_Record_Type;\n+   end Expand_Freeze_Record_Type;\n \n    ------------------------------\n    -- Freeze_Stream_Operations --\n@@ -6074,7 +6074,7 @@ package body Exp_Ch3 is\n \n       if Is_Record_Type (Def_Id) then\n          if Ekind (Def_Id) = E_Record_Type then\n-            Freeze_Record_Type (N);\n+            Expand_Freeze_Record_Type (N);\n \n          --  The subtype may have been declared before the type was frozen. If\n          --  the type has controlled components it is necessary to create the\n@@ -6149,7 +6149,7 @@ package body Exp_Ch3 is\n       --  Freeze processing for array types\n \n       elsif Is_Array_Type (Def_Id) then\n-         Freeze_Array_Type (N);\n+         Expand_Freeze_Array_Type (N);\n \n       --  Freeze processing for access types\n \n@@ -6356,7 +6356,7 @@ package body Exp_Ch3 is\n          --  is not the same as its representation)\n \n          if Has_Non_Standard_Rep (Def_Id) then\n-            Freeze_Enumeration_Type (N);\n+            Expand_Freeze_Enumeration_Type (N);\n          end if;\n \n       --  Private types that are completed by a derivation from a private"}, {"sha": "dcc8736d79df371f070662ad56bc610e9c68152a", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80d72ea16b37dd524c55fe9fd453cebd46c9fa0/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80d72ea16b37dd524c55fe9fd453cebd46c9fa0/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=e80d72ea16b37dd524c55fe9fd453cebd46c9fa0", "patch": "@@ -15322,8 +15322,10 @@ package body Sem_Ch3 is\n          --  N_Type_Conversion node to force displacement of the pointer to\n          --  reference the component containing the secondary dispatch table.\n          --  Otherwise a type conversion is not a legal context.\n+         --  A return statement for a build-in-place function returning a\n+         --  synchronized type also introduces an unchecked conversion.\n \n-         when N_Type_Conversion =>\n+         when N_Type_Conversion | N_Unchecked_Type_Conversion =>\n             return not Comes_From_Source (Exp)\n               and then\n                 OK_For_Limited_Init_In_05 (Expression (Original_Node (Exp)));"}]}