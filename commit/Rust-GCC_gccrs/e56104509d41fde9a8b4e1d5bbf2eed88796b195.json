{"sha": "e56104509d41fde9a8b4e1d5bbf2eed88796b195", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU2MTA0NTA5ZDQxZmRlOWE4YjRlMWQ1YmJmMmVlZDg4Nzk2YjE5NQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-10-07T20:06:37Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-10-07T20:06:37Z"}, "message": "errors.c: Don't include coretypes.h or tm.h.\n\n\t* errors.c: Don't include coretypes.h or tm.h.\n\t(trim_filename): Use IS_DIR_SEPARATOR.\n\t* Makefile.in: Update dependencies of errors.o and\n\t$(BUILD_PREFIX_1)errors.o.\n\nFrom-SVN: r72200", "tree": {"sha": "a4b3fcf74170d2dac98b9e8a660cf1b1fb26b7b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4b3fcf74170d2dac98b9e8a660cf1b1fb26b7b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e56104509d41fde9a8b4e1d5bbf2eed88796b195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56104509d41fde9a8b4e1d5bbf2eed88796b195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56104509d41fde9a8b4e1d5bbf2eed88796b195", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56104509d41fde9a8b4e1d5bbf2eed88796b195/comments", "author": null, "committer": null, "parents": [{"sha": "a594a19c2a352d53de842809678db0171e99878b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a594a19c2a352d53de842809678db0171e99878b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a594a19c2a352d53de842809678db0171e99878b"}], "stats": {"total": 49, "additions": 25, "deletions": 24}, "files": [{"sha": "b858dc69d84a29dbeb2ccef5857dca98c49bfa51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56104509d41fde9a8b4e1d5bbf2eed88796b195/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56104509d41fde9a8b4e1d5bbf2eed88796b195/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e56104509d41fde9a8b4e1d5bbf2eed88796b195", "patch": "@@ -1,3 +1,10 @@\n+2003-10-07  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* errors.c: Don't include coretypes.h or tm.h.\n+\t(trim_filename): Use IS_DIR_SEPARATOR.\n+\t* Makefile.in: Update dependencies of errors.o and\n+\t$(BUILD_PREFIX_1)errors.o.\n+\n 2003-10-07  Geoffrey Keating  <geoffk@apple.com>\n \n \t* function.c (pad_to_arg_alignment): Take STACK_POINTER_OFFSET into\n@@ -76,25 +83,25 @@\n \n 2003-10-07  Dorit Naishlos <dorit@il.ibm.com>\n \n-\t* sched-int.h (sched_info): New field \n+\t* sched-int.h (sched_info): New field\n \tsched_max_insns_priority.\n \t* sched-rgn.c (init_ready_list): Add invocations to\n-        targetm.sched.adjust_priority.  \n+\ttargetm.sched.adjust_priority.\n \t(sched_max_insns_priority): Init new field.\n \t* sched-ebb.c (sched_max_insns_priority): Init new field.\n-        * haifa-sched.c (set_priorities): Set\n-\tsched_info->sched_max_insns_priority. \n-        * config/rs6000/rs6000.h:\n-        (rs6000_sched_restricted_insns_priority_str): Support new\n-        flag -mprioritize-restricted-insns.\n-        (DEFAULT_RESTRICTED_INSNS_PRIORITY): Define.\n-        * config/rs6000/rs6000.c (is_dispatch_slot_restricted): New\n-        function.\n-        (rs6000_adjust_priority): Change priority of restricted\n-        insns, using above new function and new flag.\n-        * doc/invoke.texi (-mprioritize-restricted-insns): Document\n-        new option.\n-\t\n+\t* haifa-sched.c (set_priorities): Set\n+\tsched_info->sched_max_insns_priority.\n+\t* config/rs6000/rs6000.h:\n+\t(rs6000_sched_restricted_insns_priority_str): Support new\n+\tflag -mprioritize-restricted-insns.\n+\t(DEFAULT_RESTRICTED_INSNS_PRIORITY): Define.\n+\t* config/rs6000/rs6000.c (is_dispatch_slot_restricted): New\n+\tfunction.\n+\t(rs6000_adjust_priority): Change priority of restricted\n+\tinsns, using above new function and new flag.\n+\t* doc/invoke.texi (-mprioritize-restricted-insns): Document\n+\tnew option.\n+\n 2003-10-07  Zack Weinberg  <zack@codesourcery.com>\n \n \t* expr.c (cmpstr_optab, cmpmem_optab): New."}, {"sha": "e891ca5b896e4d028c5e2609922c137ebe16c88c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56104509d41fde9a8b4e1d5bbf2eed88796b195/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56104509d41fde9a8b4e1d5bbf2eed88796b195/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=e56104509d41fde9a8b4e1d5bbf2eed88796b195", "patch": "@@ -1522,7 +1522,7 @@ print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $\n rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(RTL_H) \\\n    hard-reg-set.h $(TM_P_H) insn-config.h $(RECOG_H) real.h flags.h\n \n-errors.o : errors.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) errors.h\n+errors.o : errors.c $(CONFIG_H) $(SYSTEM_H) errors.h\n \t$(CC) -c $(ALL_CFLAGS) -DGENERATOR_FILE $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n varasm.o : varasm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n@@ -2255,7 +2255,7 @@ $(BUILD_PREFIX_1)bitmap.o: $(srcdir)/bitmap.c $(BCONFIG_H) coretypes.h $(GTM_H)\n \tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/bitmap.c > $(BUILD_PREFIX)bitmap.c\n \t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)bitmap.c $(OUTPUT_OPTION)\n \n-$(BUILD_PREFIX_1)errors.o: errors.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) errors.h\n+$(BUILD_PREFIX_1)errors.o: errors.c $(BCONFIG_H) $(SYSTEM_H) errors.h\n \trm -f $(BUILD_PREFIX)errors.c\n \tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/errors.c > $(BUILD_PREFIX)errors.c\n \t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)errors.c $(OUTPUT_OPTION)"}, {"sha": "09504d39d86382631bb8944b6ea80463a40e4c61", "filename": "gcc/errors.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56104509d41fde9a8b4e1d5bbf2eed88796b195/gcc%2Ferrors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56104509d41fde9a8b4e1d5bbf2eed88796b195/gcc%2Ferrors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ferrors.c?ref=e56104509d41fde9a8b4e1d5bbf2eed88796b195", "patch": "@@ -25,8 +25,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n #include \"errors.h\"\n \n /* Set this to argv[0] at the beginning of main.  */\n@@ -116,11 +114,7 @@ trim_filename (const char *name)\n     p++, q++;\n \n   /* Now go backwards until the previous directory separator.  */\n-  while (p > name && p[-1] != DIR_SEPARATOR\n-#ifdef DIR_SEPARATOR_2\n-\t && p[-1] != DIR_SEPARATOR_2\n-#endif\n-\t )\n+  while (p > name && !IS_DIR_SEPARATOR (p[-1]))\n     p--;\n \n   return p;"}]}