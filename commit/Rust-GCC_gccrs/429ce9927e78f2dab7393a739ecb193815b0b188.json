{"sha": "429ce9927e78f2dab7393a739ecb193815b0b188", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI5Y2U5OTI3ZTc4ZjJkYWI3MzkzYTczOWVjYjE5MzgxNWIwYjE4OA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2008-11-12T16:34:14Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-11-12T16:34:14Z"}, "message": "m68k.c (print_operand): Mask off extra extension bits when writing out the representation of real values.\n\n\t* config/m68k/m68k.c (print_operand): Mask off extra extension\n\tbits when writing out the representation of real values.\n\nFrom-SVN: r141787", "tree": {"sha": "734326c32d36ecdb66987c0eaf44bc2b3f41eaf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/734326c32d36ecdb66987c0eaf44bc2b3f41eaf5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/429ce9927e78f2dab7393a739ecb193815b0b188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429ce9927e78f2dab7393a739ecb193815b0b188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429ce9927e78f2dab7393a739ecb193815b0b188", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429ce9927e78f2dab7393a739ecb193815b0b188/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46b0b69d2581551897da799c8e11bab135e51e5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b0b69d2581551897da799c8e11bab135e51e5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46b0b69d2581551897da799c8e11bab135e51e5d"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "7617fa7eaf0170f184952023576aa6bf4780f6d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/429ce9927e78f2dab7393a739ecb193815b0b188/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/429ce9927e78f2dab7393a739ecb193815b0b188/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=429ce9927e78f2dab7393a739ecb193815b0b188", "patch": "@@ -1,3 +1,8 @@\n+2008-11-12  Andreas Schwab  <schwab@suse.de>\n+\n+\t* config/m68k/m68k.c (print_operand): Mask off extra extension\n+\tbits when writing out the representation of real values.\n+\n 2008-11-12  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/38079"}, {"sha": "c762a8ffb9e5e354b7b11c92cc47841820e55d54", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/429ce9927e78f2dab7393a739ecb193815b0b188/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/429ce9927e78f2dab7393a739ecb193815b0b188/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=429ce9927e78f2dab7393a739ecb193815b0b188", "patch": "@@ -3888,23 +3888,24 @@ print_operand (FILE *file, rtx op, int letter)\n       long l;\n       REAL_VALUE_FROM_CONST_DOUBLE (r, op);\n       REAL_VALUE_TO_TARGET_SINGLE (r, l);\n-      asm_fprintf (file, \"%I0x%lx\", l);\n+      asm_fprintf (file, \"%I0x%lx\", l & 0xFFFFFFFF);\n     }\n   else if (GET_CODE (op) == CONST_DOUBLE && GET_MODE (op) == XFmode)\n     {\n       REAL_VALUE_TYPE r;\n       long l[3];\n       REAL_VALUE_FROM_CONST_DOUBLE (r, op);\n       REAL_VALUE_TO_TARGET_LONG_DOUBLE (r, l);\n-      asm_fprintf (file, \"%I0x%lx%08lx%08lx\", l[0], l[1], l[2]);\n+      asm_fprintf (file, \"%I0x%lx%08lx%08lx\", l[0] & 0xFFFFFFFF,\n+\t\t   l[1] & 0xFFFFFFFF, l[2] & 0xFFFFFFFF);\n     }\n   else if (GET_CODE (op) == CONST_DOUBLE && GET_MODE (op) == DFmode)\n     {\n       REAL_VALUE_TYPE r;\n       long l[2];\n       REAL_VALUE_FROM_CONST_DOUBLE (r, op);\n       REAL_VALUE_TO_TARGET_DOUBLE (r, l);\n-      asm_fprintf (file, \"%I0x%lx%08lx\", l[0], l[1]);\n+      asm_fprintf (file, \"%I0x%lx%08lx\", l[0] & 0xFFFFFFFF, l[1] & 0xFFFFFFFF);\n     }\n   else\n     {"}]}