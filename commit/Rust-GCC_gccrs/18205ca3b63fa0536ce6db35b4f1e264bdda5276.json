{"sha": "18205ca3b63fa0536ce6db35b4f1e264bdda5276", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgyMDVjYTNiNjNmYTA1MzZjZTZkYjM1YjRmMWUyNjRiZGRhNTI3Ng==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2000-11-27T03:16:14Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2000-11-27T03:16:14Z"}, "message": "Initial jndi check-in\n\nFrom-SVN: r37770", "tree": {"sha": "fddd25f01c276e915b483a1138befefd75ad4852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fddd25f01c276e915b483a1138befefd75ad4852"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18205ca3b63fa0536ce6db35b4f1e264bdda5276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18205ca3b63fa0536ce6db35b4f1e264bdda5276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18205ca3b63fa0536ce6db35b4f1e264bdda5276", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18205ca3b63fa0536ce6db35b4f1e264bdda5276/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "158227a66aac2270747de0be47f1026e6bb13782", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158227a66aac2270747de0be47f1026e6bb13782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158227a66aac2270747de0be47f1026e6bb13782"}], "stats": {"total": 676, "additions": 676, "deletions": 0}, "files": [{"sha": "00e95143bf6498ac71409bb04ceab1e3b27c2057", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -1,3 +1,21 @@\n+2000-11-26  Anthony Green  <green@redhat.com>\n+\n+\t* javax/naming/spi/NamingManager.java,\n+ \tjavax/naming/spi/ObjectFactory.java,\n+ \tjavax/naming/spi/InitialContextFactory.java,\n+ \tjavax/naming/spi/InitialContextFactoryBuilder.java,\n+ \tjavax/naming/RefAddr.java, javax/naming/Reference.java,\n+ \tjavax/naming/NamingException.java, javax/naming/Context.java,\n+ \tjavax/naming/Referenceable.java,\n+ \tjavax/naming/directory/InitialDirContext.java,\n+ \tjavax/naming/directory/DirContext.java,\n+ \tjavax/naming/directory/Attributes.java,\n+ \tjavax/naming/directory/Attribute.java,\n+ \tjavax/naming/StringRefAddr.java,\n+ \tjavax/naming/NamingEnumeration.java, javax/naming/Name.java,\n+ \tjavax/naming/InitialContext.java,\n+ \tjavax/naming/NoInitialContextException.java: New files.\n+\t\n 2000-11-25  Anthony Green  <green@redhat.com>\n \n \t* prims.cc (_Jv_NewObjectArray): Undo placement change."}, {"sha": "d9f520477c3235a3aec198cd62de86f00a9b1ae0", "filename": "libjava/javax/naming/Context.java", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FContext.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,83 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package javax.naming;\n+\n+public interface Context\n+{\n+  // Property with name of the inital context factory to use\n+  public static final String INITIAL_CONTEXT_FACTORY \n+    = \"java.naming.factory.initial\";\n+\n+  // Property with colon-separated list of object factories to use.\n+  public static final String OBJECT_FACTORIES\n+    = \"java.naming.factory.object\";\n+\n+  // Property with colon-separated list of state factories to use.\n+  public static final String STATE_FACTORIES\n+    = \"java.naming.factory.state\";\n+\n+  // Property with colon-separated list of package prefixes to use.\n+  public static final String URL_PKG_PREFIXES\n+    = \"java.naming.factory.url.pkgs\";\n+\n+  // Property with URL specifying configuration for the service\n+  // provider to use.\n+  public static final String PROVIDER_URL \n+    = \"java.naming.provider.url\";\n+  \n+  // Property with the DNS host and domain names to use.\n+  public static final String DNS_URL \n+    = \"java.naming.dns.url\";\n+  \n+  // Property with the authoritativeness of the service requested.\n+  public static final String AUTHORITATIVE \n+    = \"java.naming.authoritative\";\n+  \n+  // Property with the batch size to use when returning data via the\n+  // service's protocol.\n+  public static final String BATCHSIZE\n+    = \"java.naming.batchsize\";\n+  \n+  // Property defining how referrals encountered by the service\n+  // provider are to be processed.\n+  public static final String REFERRAL\n+    = \"java.naming.referral\";\n+\n+  // Property specifying the security protocol to use.\n+  public static final String SECURITY_PROTOCOL\n+    = \"java.naming.security.protocol\";\n+\n+  // Property specifying the security level to use.\n+  public static final String SECURITY_AUTHENTICATION\n+    = \"java.naming.security.authentication\";\n+\n+  // Property for the identity of the principal for authenticating\n+  // the caller to the service.\n+  public static final String SECURITY_PRINCIPAL\n+    = \"java.naming.security.principal\";\n+\n+  // Property specifying the credentials of the principal for\n+  // authenticating the caller to the service.\n+  public static final String SECURITY_CREDENTIAL\n+    = \"java.naming.security.credentials\";\n+\n+  // Property for specifying the preferred language to use with the\n+  // service.\n+  public static final String LANGUAGE\n+    = \"java.naming.language\";\n+\n+  // Property for the initial context constructor to use when searching\n+  // for other properties.\n+  public static final String APPLET\n+    = \"java.naming.applet\";\n+\n+  public void bind (Name name, Object obj) throws NamingException;\n+  public void bind (String name, Object obj) throws NamingException;\n+}\n+"}, {"sha": "66454a53b6fd779efbb43927e491eb8de967202b", "filename": "libjava/javax/naming/InitialContext.java", "status": "added", "additions": 197, "deletions": 0, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FInitialContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FInitialContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FInitialContext.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,197 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+   \n+   This file is part of libgcj.\n+   \n+   This software is copyrighted work licensed under the terms of the\n+   Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+   details.  */\n+\n+package javax.naming;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.util.Enumeration;\n+import java.util.Hashtable;\n+import java.util.Properties;\n+import java.applet.Applet;\n+import java.util.Hashtable;\n+import javax.naming.spi.NamingManager;\n+\n+\n+public class InitialContext implements Context\n+{\n+  protected Context defaultInitCtx;\n+  protected boolean gotDefault = false;\n+  protected Hashtable myProps;\n+  \n+  InitialContext (Hashtable environment)\n+    {\n+      init (environment);\n+    }\n+  \n+  protected InitialContext (boolean lazy)\n+    {\n+      if (! lazy)\n+\tinit (null);\n+    }\n+  \n+  InitialContext ()\n+    {\n+      init (null);\n+    }\n+  \n+  protected void init (Hashtable environment)\n+    {\n+      // FIXME: Is this enough?\n+      final String[] properties = {\n+\tContext.DNS_URL,\n+\tContext.INITIAL_CONTEXT_FACTORY,\n+\tContext.OBJECT_FACTORIES,\n+\tContext.PROVIDER_URL,\n+\tContext.STATE_FACTORIES,\n+\tContext.URL_PKG_PREFIXES,\n+      };\n+      \n+      // Create myProps, cloning environment if needed.\n+      if (environment != null)\n+\tmyProps = (Hashtable) environment.clone ();\n+      else\n+\tmyProps = new Hashtable ();\n+      \n+      Applet napplet = (Applet) myProps.get (Context.APPLET);\n+      \n+      for (int i = properties.length - 1; i >= 0; i--)\n+\t{\n+\t  Object o = myProps.get (properties[i]);\n+\t  \n+\t  if (o == null)\n+\t    {\n+\t      if (napplet != null)\n+\t\to = napplet.getParameter (properties[i]);\n+\t      if (o == null)\n+\t\to = System.getProperty (properties[i]);\n+\t      if (o != null)\n+\t\tmyProps.put (properties[i], o);\n+\t    }\n+\t}\n+      \n+      try\n+\t{\n+\t    Enumeration ep = Thread.currentThread().getContextClassLoader().getResources(\"jndi.naming\");\n+\t    while (ep.hasMoreElements ())\n+\t\t{\n+\t\t    URL url = (URL) ep.nextElement ();\n+\t\t    Properties p = new Properties ();\n+\t\t    \n+\t\t    try {\n+\t\t\tInputStream is = url.openStream ();\n+\t\t\tp.load (is);\n+\t\t\tis.close ();\n+\t\t    } catch (IOException e) {}\n+\n+\t\t    merge (myProps, p);\n+\t\t}\n+\t}\n+      catch (IOException e) {}\n+\n+      String home = System.getProperty(\"java.home\");\n+      if (home != null)\n+\t{\n+\t  String fileName = home + File.separator\n+\t    + \"lib\" + File.separator + \"jndi.properties\";\n+\t  Properties p = new Properties ();\n+\t\n+\t  try {\n+\t    InputStream is = new FileInputStream (fileName);\n+\t    p.load (is);\n+\t    is.close ();\n+\t  } catch (IOException e) {}\n+\n+\t  merge (myProps, p);\n+\t}\n+    }\n+\n+  // FIXME: Is this enough?\n+  private static final String[] colon_list = \n+  {\n+    Context.OBJECT_FACTORIS,\n+    Context.URL_PKG_PREFIXES,\n+    Context.STATE_FACTORIES\n+  };\n+\n+  private static void merge (Hashtable h1, Hashtable h2)\n+    {\n+      Enumeration e2 = h2.keys();\n+    \n+      while (e2.hasMoreElements())\n+\t{\n+\t  String key2 = (String) e2.nextElement();\n+\t  Object value1 = h1.get(key2);\n+\t  if (value1 == null)\n+\t    h1.put(key2, h2.get(key2));\n+\t  else if (key2.compareTo(colon_list[0]) == 0\n+\t\t   || key2.compareTo(colon_list[1]) == 0\n+\t\t   || key2.compareTo(colon_list[2]) == 0\n+\t\t   || key2.compareTo(colon_list[3]) == 0)\n+\t    {\n+\t      String value2 = (String) h2.get(key2);\n+\t      h1.put(key2, (String) value1 + \":\" + value2);\n+\t    }\n+\t}\n+    }\n+\n+  protected Context getDefaultInitCtx () throws NamingException\n+    {\n+      if (! gotDefault)\n+\t{\n+\t  defaultInitCtx = NamingManager.getInitialContext (myProps);\n+\t  gotDefault = true;\n+\t}\n+      return defaultInitCtx;\n+    }\n+\n+\n+  protected Context getURLOrDefaultInitCtx (Name name) \n+      throws NamingException\n+    {\n+      if (name.size () > 0)\n+\t  return getURLOrDefaultInitCtx (name.get (0));\n+      else\n+\t  return getDefaultInitCtx ();\n+    }\n+\n+  protected Context getURLOrDefaultInitCtx (String name) \n+      throws NamingException\n+    {\n+      String scheme = null;\n+\n+      if (NamingManager.hasInitialContextFactoryBuilder())\n+\treturn getDefaultInitCtx();\n+      int colon = name.indexOf(':');\n+      int slash = name.indexOf('/');\n+      if (colon > 0 && (slash == -1 || colon < slash))\n+\tscheme = name.substring(0, colon);\n+      if (scheme != null) \n+\t{\n+\t  Context context = \n+\t      NamingManager.getURLContext(scheme, myProps);\n+\t  if (context != null)\n+\t    return context;\n+\t}\n+\t\n+      return getDefaultInitCtx();\n+    }\n+\n+  public void bind (Name name, Object obj) throws NamingException\n+    {\n+      getURLOrDefaultInitCtx (name).bind (name, obj);\n+    }\n+\n+  public void bind (String name, Object obj) throws NamingException\n+    {\n+      getURLOrDefaultInitCtx (name).bind (name, obj);\n+    }\n+}"}, {"sha": "d07995bc86e43de662ead62518c039fa5f7ad553", "filename": "libjava/javax/naming/Name.java", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FName.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,17 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package javax.naming;\n+\n+import java.io.Serializable;\n+\n+public interface Name extends Cloneable, Serializable\n+{\n+  public int size ();\n+  public String get (int index);\n+}"}, {"sha": "aed4d76578f35e2f44ecb291c5c2064da08d1c26", "filename": "libjava/javax/naming/NamingEnumeration.java", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FNamingEnumeration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FNamingEnumeration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FNamingEnumeration.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,18 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+ \n+package javax.naming;\n+\n+import java.util.Enumeration;\n+\n+public interface NamingEnumeration extends Enumeration\n+{\n+  public void close() throws NamingException;\n+  public boolean hasMore() throws NamingException;\n+  public Object next() throws NamingException;\n+}"}, {"sha": "4cd870611230f2f08fbc9675b75addbca0f0f333", "filename": "libjava/javax/naming/NamingException.java", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FNamingException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FNamingException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FNamingException.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,36 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+ \n+package javax.naming;\n+\n+import java.lang.Exception;\n+ \n+public class NamingException extends Exception\n+{\n+  protected Throwable rootException;\n+\n+  public NamingException()\n+  {\n+    super();\n+  }\n+\n+  public NamingException(String msg)\n+  {\n+    super(msg);\n+  }\n+\n+  public Throwable getRootCause ()\n+  {\n+    return rootException;\n+  }\n+\n+  public void setRootCause (Throwable e)\n+  {\n+    rootException = e;\n+  }\n+}"}, {"sha": "1d13939c21002275be7f18a0234df9df1c0ff577", "filename": "libjava/javax/naming/NoInitialContextException.java", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FNoInitialContextException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FNoInitialContextException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FNoInitialContextException.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,24 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+ \n+package javax.naming;\n+\n+import java.lang.Exception;\n+ \n+public class NoInitialContextException extends NamingException\n+{\n+  public NoInitialContextException()\n+  {\n+    super();\n+  }\n+\n+  public NoInitialContextException(String msg)\n+  {\n+    super(msg);\n+  }\n+}"}, {"sha": "1973efba29eab500aa5cd1cacccbc2e81180086a", "filename": "libjava/javax/naming/RefAddr.java", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FRefAddr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FRefAddr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FRefAddr.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,15 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package javax.naming;\n+\n+import java.io.Serializable;\n+\n+public class RefAddr implements Serializable\n+{\n+}"}, {"sha": "79cecc3d4cae8ecd5d5c829cb176da9b9c581acc", "filename": "libjava/javax/naming/Reference.java", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FReference.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FReference.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FReference.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,36 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package javax.naming;\n+\n+import java.io.Serializable;\n+\n+public class Reference implements Cloneable, Serializable\n+{\n+  public Reference (String className, String factory, String factoryLocation)\n+  {\n+    this.className = className;\n+  }\n+\n+  void add (RefAddr addr)\n+  {\n+    throw new Error (\"javax.naming.Reference.add not implemented\");\n+  }\n+\n+  RefAddr get (String addrType)\n+  {\n+    throw new Error (\"javax.naming.Reference.get not implemented\");\n+  }\n+\n+  public String getClassName ()\n+  {\n+    return className;\n+  }\n+\n+  private String className;\n+}"}, {"sha": "feb97fc63c5eb5506fb9c3c720acade3d35c3613", "filename": "libjava/javax/naming/Referenceable.java", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FReferenceable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FReferenceable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FReferenceable.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,14 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package javax.naming;\n+\n+public interface Referenceable\n+{\n+  public Reference getReference() throws NamingException;\n+}"}, {"sha": "7ceffa34f74ee252636827625bfaeb9c70822ab1", "filename": "libjava/javax/naming/StringRefAddr.java", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FStringRefAddr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2FStringRefAddr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FStringRefAddr.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,24 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package javax.naming;\n+\n+import java.io.Serializable;\n+\n+public class StringRefAddr extends RefAddr\n+{\n+  public StringRefAddr (String addrType, String addr)\n+  {\n+    throw new Error (\"javax.naming.StringRefAddr not implemented\");\n+  }\n+  \n+  public Object getContent ()\n+  {\n+    throw new Error (\"javax.naming.StringRefAddr.getContent not implemented\");\n+  }\n+}"}, {"sha": "ec3861c55d50ab9503412209398336887e141519", "filename": "libjava/javax/naming/directory/Attribute.java", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fdirectory%2FAttribute.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fdirectory%2FAttribute.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2Fdirectory%2FAttribute.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,20 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+ \n+package javax.naming.directory;\n+\n+import javax.naming.*;\n+import java.io.Serializable;\n+\n+public interface Attribute extends Cloneable, Serializable\n+{\n+  // FIXME\n+\n+  NamingEnumeration getAll ();\n+}\n+"}, {"sha": "7d7c953a33fa09908965bde79b5f94ac9ca6d125", "filename": "libjava/javax/naming/directory/Attributes.java", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fdirectory%2FAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fdirectory%2FAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2Fdirectory%2FAttributes.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,20 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+ \n+package javax.naming.directory;\n+\n+import javax.naming.*;\n+import java.io.Serializable;\n+\n+public interface Attributes extends Cloneable, Serializable\n+{\n+  // FIXME\n+\n+  NamingEnumeration getAll ();\n+}\n+"}, {"sha": "50deca0e4457e8b7f71e390e24a9e2485422ebd1", "filename": "libjava/javax/naming/directory/DirContext.java", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fdirectory%2FDirContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fdirectory%2FDirContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2Fdirectory%2FDirContext.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,18 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+ \n+package javax.naming.directory;\n+\n+import javax.naming.*;\n+\n+public interface DirContext extends Context\n+{\n+  public Attributes getAttributes (String name);\n+  public Attributes getAttributes (String name, String[] attrIds);\n+}\n+"}, {"sha": "2e8915066cc57a8da3d7b5dc60ea759adfa7b3a0", "filename": "libjava/javax/naming/directory/InitialDirContext.java", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fdirectory%2FInitialDirContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fdirectory%2FInitialDirContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2Fdirectory%2FInitialDirContext.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,20 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package javax.naming.directory;\n+\n+import javax.naming.*;\n+import java.util.Hashtable;\n+\n+public class InitialDirContext extends InitialContext implements DirContext\n+{\n+  public InitialDirContext (Hashtable environment)\n+  {\n+    throw new Error (\"javax.naming.directory.InitialDirContext not implemented\");\n+  }\n+}"}, {"sha": "493b3f5234fc63ee3b053ba31b5983d8b535cbf8", "filename": "libjava/javax/naming/spi/InitialContextFactory.java", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fspi%2FInitialContextFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fspi%2FInitialContextFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2Fspi%2FInitialContextFactory.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,18 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+   \n+   This file is part of libgcj.\n+   \n+   This software is copyrighted work licensed under the terms of the\n+   Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+   details.  */\n+\n+package javax.naming.spi;\n+\n+import java.util.Hashtable;\n+import javax.naming.Context;\n+import javax.naming.NamingException;\n+\n+public interface InitialContextFactory\n+{\n+  public Context getInitialContext (Hashtable environment) throws NamingException;\n+}"}, {"sha": "e4ae85f7d3e1ce5723b073a894bfa01a3abf556d", "filename": "libjava/javax/naming/spi/InitialContextFactoryBuilder.java", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fspi%2FInitialContextFactoryBuilder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fspi%2FInitialContextFactoryBuilder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2Fspi%2FInitialContextFactoryBuilder.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,17 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+   \n+   This file is part of libgcj.\n+   \n+   This software is copyrighted work licensed under the terms of the\n+   Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+   details.  */\n+\n+package javax.naming.spi;\n+\n+import java.util.Hashtable;\n+import javax.naming.NamingException;\n+\n+public interface InitialContextFactoryBuilder\n+{\n+  public InitialContextFactory createInitialContextFactory (Hashtable environment) throws NamingException;\n+}"}, {"sha": "9cb814e9e12916540a460bf8b5f67d14fdeadab0", "filename": "libjava/javax/naming/spi/NamingManager.java", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fspi%2FNamingManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fspi%2FNamingManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2Fspi%2FNamingManager.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,57 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+   \n+   This file is part of libgcj.\n+   \n+   This software is copyrighted work licensed under the terms of the\n+   Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+   details.  */\n+\n+package javax.naming.spi;\n+\n+import java.util.Hashtable;\n+import javax.naming.*;\n+\n+public class NamingManager\n+{\n+  private static InitialContextFactoryBuilder icfb = null;\n+\n+  public static boolean hasInitialContextFactoryBuilder ()\n+  {\n+    return icfb != null;\n+  }\n+  \n+  public static Context getInitialContext (Hashtable environment) throws NamingException\n+  {\n+    InitialContextFactory icf = null;\n+    \n+    if (icfb != null)\n+      icf = icfb.createInitialContextFactory(environment);\n+    else\n+      {\t \n+\tString java_naming_factory_initial = null;\n+\tif (environment != null)\n+\t  java_naming_factory_initial\n+\t    = (String) environment.get (Context.INITIAL_CONTEXT_FACTORY);\n+\tif (java_naming_factory_initial == null)\n+\t  throw new NoInitialContextException (\"Can't find property: \" + Context.INITIAL_CONTEXT_FACTORY);\n+\t\n+\ttry {\n+\t  icf = (InitialContextFactory) Thread.currentThread().getContextClassLoader().loadClass(java_naming_factory_initial).newInstance();\n+\t} catch (Exception exception) {\n+\t  NoInitialContextException e\n+\t    = new NoInitialContextException(\"Can't load InitialContextFactory class: \" + java_naming_factory_initial);\n+\t  e.setRootCause(exception);\n+\t  throw e;\n+\t}\n+      }\n+    \n+    return icf.getInitialContext (environment);\n+  }\n+\n+  public static Context getURLContext(String scheme,\n+\t\t\t\t      Hashtable environment) \n+       throws NamingException\n+  {\n+    throw new Error (\"javax.naming.spi.NamingManager.getURLContext not implemented\");\n+  }\n+}"}, {"sha": "760e5863be9dbf04a62df9c6d53683e8ebe9c21e", "filename": "libjava/javax/naming/spi/ObjectFactory.java", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fspi%2FObjectFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18205ca3b63fa0536ce6db35b4f1e264bdda5276/libjava%2Fjavax%2Fnaming%2Fspi%2FObjectFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2Fspi%2FObjectFactory.java?ref=18205ca3b63fa0536ce6db35b4f1e264bdda5276", "patch": "@@ -0,0 +1,24 @@\n+/* Copyright (C) 2000 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package javax.naming.spi;\n+\n+import java.util.Hashtable;\n+import javax.naming.*;\n+\n+public class ObjectFactory\n+{\n+  public Object getObjectInstance (Object obj,\n+\t\t\t\t   Name name,\n+\t\t\t\t   Context nameCtx,\n+\t\t\t\t   Hashtable environment)\n+       throws Exception\n+  {\n+    throw new Error (\"javax.naming.spi.ObjectFactory.getObjectInstance not implemented\");\n+  }\n+}"}]}