{"sha": "30e328058abb3fc333dca6876950ea82d6d5a133", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBlMzI4MDU4YWJiM2ZjMzMzZGNhNjg3Njk1MGVhODJkNmQ1YTEzMw==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-07-30T13:55:22Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-07-30T13:55:22Z"}, "message": "(cpu attribute): List m88100 first for more efficient code in insn-attrtab.c.\n\n(cpu attribute): List m88100 first for more efficient\n        code in insn-attrtab.c.\n(rotate/and split pattern): Fix typo.\n\nFrom-SVN: r1724", "tree": {"sha": "b10329ee020a9d8b5404de2a470f91a8f989ed6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b10329ee020a9d8b5404de2a470f91a8f989ed6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30e328058abb3fc333dca6876950ea82d6d5a133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30e328058abb3fc333dca6876950ea82d6d5a133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30e328058abb3fc333dca6876950ea82d6d5a133", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30e328058abb3fc333dca6876950ea82d6d5a133/comments", "author": null, "committer": null, "parents": [{"sha": "7ddb68857a2579bfbaca9484c68a77e6ec32d743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ddb68857a2579bfbaca9484c68a77e6ec32d743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ddb68857a2579bfbaca9484c68a77e6ec32d743"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "22ce2cd10708bdb1441e5a3e374a86afa1d0ecfd", "filename": "gcc/config/m88k/m88k.md", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30e328058abb3fc333dca6876950ea82d6d5a133/gcc%2Fconfig%2Fm88k%2Fm88k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30e328058abb3fc333dca6876950ea82d6d5a133/gcc%2Fconfig%2Fm88k%2Fm88k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.md?ref=30e328058abb3fc333dca6876950ea82d6d5a133", "patch": "@@ -28,13 +28,13 @@\n (define_expand \"m88k_sccs_id\"\n   [(match_operand:SI 0 \"\" \"\")]\n   \"\"\n-  \"{ static char sccs_id[] = \\\"@(#)m88k.md\t2.2.6.6 13 Jul 1992 09:43:57\\\";\n+  \"{ static char sccs_id[] = \\\"@(#)m88k.md\t2.2.6.10 28 Jul 1992 10:22:08\\\";\n      FAIL; }\")\n \f\n ;; Attribute specifications\n \n ; Target CPU.\n-(define_attr \"cpu\" \"m88000,m88100,m88110\"\n+(define_attr \"cpu\" \"m88100,m88110,m88000\"\n   (const (symbol_ref \"m88k_cpu\")))\n \n ; Type of each instruction.  Default is arithmetic.\n@@ -619,15 +619,6 @@\n \n ;; rotate/and[.c] and rotate/ior[.c]\n \n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=r\")\n-\t(ior:CC (rotate:CC (match_operand:CC 1 \"register_operand\" \"r\")\n-\t\t\t   (match_operand:CC 2 \"int5_operand\" \"\"))\n-\t\t(match_operand:CC 3 \"register_operand\" \"r\")))\n-   (clobber (match_scratch:CC 4 \"=r\"))]\n-  \"\"\n-  \"#\")\n-\n (define_split\n   [(set (match_operand:CC 0 \"register_operand\" \"=r\")\n \t(ior:CC (rotate:CC (match_operand:CC 1 \"register_operand\" \"r\")\n@@ -643,8 +634,8 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=r\")\n-\t(ior:CC (not:CC (rotate:CC (match_operand:CC 1 \"register_operand\" \"r\")\n-\t\t\t\t   (match_operand:CC 2 \"int5_operand\" \"\")))\n+\t(ior:CC (rotate:CC (match_operand:CC 1 \"register_operand\" \"r\")\n+\t\t\t   (match_operand:CC 2 \"int5_operand\" \"\"))\n \t\t(match_operand:CC 3 \"register_operand\" \"r\")))\n    (clobber (match_scratch:CC 4 \"=r\"))]\n   \"\"\n@@ -665,8 +656,8 @@\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=r\")\n-\t(and:CC (rotate:CC (match_operand:CC 1 \"register_operand\" \"r\")\n-\t\t\t   (match_operand:CC 2 \"int5_operand\" \"\"))\n+\t(ior:CC (not:CC (rotate:CC (match_operand:CC 1 \"register_operand\" \"r\")\n+\t\t\t\t   (match_operand:CC 2 \"int5_operand\" \"\")))\n \t\t(match_operand:CC 3 \"register_operand\" \"r\")))\n    (clobber (match_scratch:CC 4 \"=r\"))]\n   \"\"\n@@ -682,13 +673,13 @@\n   [(set (match_dup 4)\n \t(rotate:CC (match_dup 1) (match_dup 2)))\n    (set (match_dup 0)\n-\t(ior:CC (match_dup 4) (match_dup 3)))]\n+\t(and:CC (match_dup 4) (match_dup 3)))]\n   \"\")\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=r\")\n-\t(and:CC (not:CC (rotate:CC (match_operand:CC 1 \"register_operand\" \"r\")\n-\t\t\t\t   (match_operand:CC 2 \"int5_operand\" \"\")))\n+\t(and:CC (rotate:CC (match_operand:CC 1 \"register_operand\" \"r\")\n+\t\t\t   (match_operand:CC 2 \"int5_operand\" \"\"))\n \t\t(match_operand:CC 3 \"register_operand\" \"r\")))\n    (clobber (match_scratch:CC 4 \"=r\"))]\n   \"\"\n@@ -706,6 +697,15 @@\n    (set (match_dup 0)\n \t(and:CC (not:CC (match_dup 4)) (match_dup 3)))]\n   \"\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:CC 0 \"register_operand\" \"=r\")\n+\t(and:CC (not:CC (rotate:CC (match_operand:CC 1 \"register_operand\" \"r\")\n+\t\t\t\t   (match_operand:CC 2 \"int5_operand\" \"\")))\n+\t\t(match_operand:CC 3 \"register_operand\" \"r\")))\n+   (clobber (match_scratch:CC 4 \"=r\"))]\n+  \"\"\n+  \"#\")\n \f\n ;; Recognize bcnd instructions for integer values.  This is distinguished\n ;; from a conditional branch instruction (below) with SImode instead of"}]}