{"sha": "a3313a2214a6253672ab4fa37a2dcf57fd0f8dce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMzMTNhMjIxNGE2MjUzNjcyYWI0ZmEzN2EyZGNmNTdmZDBmOGRjZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-24T23:22:01Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-24T23:41:28Z"}, "message": "libstdc++: Disable failing tests [PR 97936]\n\nThese tests are unstable and causing failures due to timeouts. Disable\nthem until the cause can be found, so that testing doesn't have to wait\nfor them to timeout.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/97936\n\tPR libstdc++/97944\n\t* testsuite/29_atomics/atomic_integral/wait_notify.cc: Disable.\n\tDo not require pthreads, but add -pthread when appropriate.\n\t* testsuite/30_threads/jthread/95989.cc: Likewise.\n\t* testsuite/30_threads/latch/3.cc: Likewise.\n\t* testsuite/30_threads/semaphore/try_acquire_until.cc: Likewise.", "tree": {"sha": "520b93546d299ee376b06a2ba1d22a4d608396d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/520b93546d299ee376b06a2ba1d22a4d608396d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "211d68dda14d6b773ad648909ef9dd0d65ec2053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/211d68dda14d6b773ad648909ef9dd0d65ec2053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/211d68dda14d6b773ad648909ef9dd0d65ec2053"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "762583cf8c76eaaecfea3308e127e7581b14e3ab", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/wait_notify.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fwait_notify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fwait_notify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fwait_notify.cc?ref=a3313a2214a6253672ab4fa37a2dcf57fd0f8dce", "patch": "@@ -1,8 +1,9 @@\n-// { dg-options \"-std=gnu++2a -pthread\" }\n+// { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target pthread }\n // { dg-require-gthreads \"\" }\n // { dg-add-options libatomic }\n+// { dg-additional-options \"-pthread\" { target pthread } }\n+// { dg-skip-if \"broken\" { *-*-* } }\n \n // Copyright (C) 2020 Free Software Foundation, Inc.\n //"}, {"sha": "a179eab381985254213239934cc91e98fa8e24b8", "filename": "libstdc++-v3/testsuite/30_threads/jthread/95989.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fjthread%2F95989.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fjthread%2F95989.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fjthread%2F95989.cc?ref=a3313a2214a6253672ab4fa37a2dcf57fd0f8dce", "patch": "@@ -20,6 +20,7 @@\n // { dg-require-gthreads {} }\n // { dg-additional-options \"-pthread\" { target pthread } }\n // { dg-additional-options \"-static\" { target static } }\n+// { dg-skip-if \"broken\" { *-*-* } }\n \n #include <thread>\n "}, {"sha": "6304135a877c352e961b027bb2266bbb7bfa711b", "filename": "libstdc++-v3/testsuite/30_threads/latch/3.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flatch%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flatch%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flatch%2F3.cc?ref=a3313a2214a6253672ab4fa37a2dcf57fd0f8dce", "patch": "@@ -15,11 +15,12 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-options \"-std=gnu++2a -pthread\" }\n+// { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target pthread }\n // { dg-require-gthreads \"\" }\n-//\n+// { dg-additional-options \"-pthread\" { target pthread } }\n+// { dg-skip-if \"broken\" { *-*-* } }\n+\n #include <latch>\n #include <atomic>\n #include <thread>"}, {"sha": "5e1141425f7246d8cb8c0a97e9ea812f42b00859", "filename": "libstdc++-v3/testsuite/30_threads/semaphore/try_acquire_until.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fsemaphore%2Ftry_acquire_until.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3313a2214a6253672ab4fa37a2dcf57fd0f8dce/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fsemaphore%2Ftry_acquire_until.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fsemaphore%2Ftry_acquire_until.cc?ref=a3313a2214a6253672ab4fa37a2dcf57fd0f8dce", "patch": "@@ -15,10 +15,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-options \"-std=gnu++2a -pthread\" }\n+// { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n-// { dg-require-effective-target pthread }\n // { dg-require-gthreads \"\" }\n+// { dg-additional-options \"-pthread\" { target pthread } }\n+// { dg-skip-if \"broken\" { *-*-* } }\n \n #include <semaphore>\n #include <chrono>"}]}