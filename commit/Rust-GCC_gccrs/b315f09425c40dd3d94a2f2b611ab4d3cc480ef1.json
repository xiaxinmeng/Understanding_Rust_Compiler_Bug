{"sha": "b315f09425c40dd3d94a2f2b611ab4d3cc480ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMxNWYwOTQyNWM0MGRkM2Q5NGEyZjJiNjExYWI0ZDNjYzQ4MGVmMQ==", "commit": {"author": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2013-03-22T12:06:10Z"}, "committer": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2013-03-22T12:06:10Z"}, "message": "Testcases that should have been committed with previous patch commits\n\nFrom-SVN: r196957", "tree": {"sha": "e292f401d615088eec580f0e6561f205601a567c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e292f401d615088eec580f0e6561f205601a567c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b315f09425c40dd3d94a2f2b611ab4d3cc480ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b315f09425c40dd3d94a2f2b611ab4d3cc480ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b315f09425c40dd3d94a2f2b611ab4d3cc480ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b315f09425c40dd3d94a2f2b611ab4d3cc480ef1/comments", "author": null, "committer": null, "parents": [{"sha": "c00217fc2535186f7fe4536d2fa5581f23182903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c00217fc2535186f7fe4536d2fa5581f23182903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c00217fc2535186f7fe4536d2fa5581f23182903"}], "stats": {"total": 109, "additions": 109, "deletions": 0}, "files": [{"sha": "a78dd8d607b40bdd31770d224271874107f36538", "filename": "gcc/testsuite/gcc.target/aarch64/extr.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b315f09425c40dd3d94a2f2b611ab4d3cc480ef1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fextr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b315f09425c40dd3d94a2f2b611ab4d3cc480ef1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fextr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fextr.c?ref=b315f09425c40dd3d94a2f2b611ab4d3cc480ef1", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-options \"-O2 --save-temps\" } */\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+int\n+test_si (int a, int b)\n+{\n+  /* { dg-final { scan-assembler \"extr\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, 27\\n\" } } */\n+  return (a << 5) | ((unsigned int) b >> 27);\n+}\n+\n+long long\n+test_di (long long a, long long b)\n+{\n+  /* { dg-final { scan-assembler \"extr\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, 45\\n\" } } */\n+  return (a << 19) | ((unsigned long long) b >> 45);\n+}\n+\n+int\n+main ()\n+{\n+  int v;\n+  long long w;\n+  v = test_si (0x00000004, 0x30000000);\n+  if (v != 0x00000086)\n+    abort();\n+  w = test_di (0x0001040040040004ll, 0x0070050066666666ll);\n+  if (w != 0x2002002000200380ll)\n+    abort();\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "4d266f00471653592acee144279c137e8cffeb47", "filename": "gcc/testsuite/gcc.target/aarch64/ror.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b315f09425c40dd3d94a2f2b611ab4d3cc480ef1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b315f09425c40dd3d94a2f2b611ab4d3cc480ef1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fror.c?ref=b315f09425c40dd3d94a2f2b611ab4d3cc480ef1", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-options \"-O2 --save-temps\" } */\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+int\n+test_si (int a)\n+{\n+  /* { dg-final { scan-assembler \"ror\\tw\\[0-9\\]+, w\\[0-9\\]+, 27\\n\" } } */\n+  return (a << 5) | ((unsigned int) a >> 27);\n+}\n+\n+long long\n+test_di (long long a)\n+{\n+  /* { dg-final { scan-assembler \"ror\\tx\\[0-9\\]+, x\\[0-9\\]+, 45\\n\" } } */\n+  return (a << 19) | ((unsigned long long) a >> 45);\n+}\n+\n+int\n+main ()\n+{\n+  int v;\n+  long long w;\n+  v = test_si (0x0203050);\n+  if (v != 0x4060a00)\n+    abort();\n+  w = test_di (0x0000020506010304ll);\n+  if (w != 0x1028300818200000ll)\n+    abort();\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "e479910bc2cb58f3f7aa9dd23ebc51ae8800cb0f", "filename": "gcc/testsuite/gcc.target/aarch64/sbc.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b315f09425c40dd3d94a2f2b611ab4d3cc480ef1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsbc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b315f09425c40dd3d94a2f2b611ab4d3cc480ef1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsbc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsbc.c?ref=b315f09425c40dd3d94a2f2b611ab4d3cc480ef1", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps\" } */\n+\n+extern void abort (void);\n+\n+typedef unsigned int u32int;\n+typedef unsigned long long u64int;\n+\n+u32int\n+test_si (u32int w1, u32int w2, u32int w3, u32int w4)\n+{\n+  u32int w0;\n+  /* { dg-final { scan-assembler \"sbc\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\\n\" } } */\n+  w0 = w1 - w2 - (w3 < w4);\n+  return w0;\n+}\n+\n+u64int\n+test_di (u64int x1, u64int x2, u64int x3, u64int x4)\n+{\n+  u64int x0;\n+  /* { dg-final { scan-assembler \"sbc\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\\n\" } } */\n+  x0 = x1 - x2 - (x3 < x4);\n+  return x0;\n+}\n+\n+int\n+main ()\n+{\n+  u32int x;\n+  u64int y;\n+  x = test_si (7, 8, 12, 15);\n+  if (x != -2)\n+    abort();\n+  y = test_di (0x987654321ll, 0x123456789ll, 0x345345345ll, 0x123123123ll);\n+  if (y != 0x8641fdb98ll)\n+    abort();\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}