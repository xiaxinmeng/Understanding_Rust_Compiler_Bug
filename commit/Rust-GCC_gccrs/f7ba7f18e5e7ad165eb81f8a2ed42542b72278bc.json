{"sha": "f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdiYTdmMThlNWU3YWQxNjVlYjgxZjhhMmVkNDI1NDJiNzIyNzhiYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-07-30T13:22:56Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-07-30T13:22:56Z"}, "message": "builtins.c (HAVE_atomic_clear, [...]): Delete.\n\ngcc/\n\t* builtins.c (HAVE_atomic_clear, gen_atomic_clear): Delete.\n\t(expand_builtin_atomic_clear): Remove support for atomic_clear\n\tpattern.\n\nFrom-SVN: r226405", "tree": {"sha": "2d39f6f7295018ab449b6ceeaa23f607a4e992e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d39f6f7295018ab449b6ceeaa23f607a4e992e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "819ec64c36cc83cf76a2820774b2baf0d73f45a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819ec64c36cc83cf76a2820774b2baf0d73f45a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/819ec64c36cc83cf76a2820774b2baf0d73f45a2"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "af6b1b44f0b2d173e74907da94f23ee60bc14bb8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc", "patch": "@@ -1,3 +1,9 @@\n+2015-07-30  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* builtins.c (HAVE_atomic_clear, gen_atomic_clear): Delete.\n+\t(expand_builtin_atomic_clear): Remove support for atomic_clear\n+\tpattern.\n+\n 2015-07-30  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-fold.c (fold_gimple_assign): Only fold !tcc_comparison"}, {"sha": "d7eb65f930beab0a5593a164ccfcc9b5edba4f76", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=f7ba7f18e5e7ad165eb81f8a2ed42542b72278bc", "patch": "@@ -5587,12 +5587,6 @@ expand_builtin_atomic_fetch_op (machine_mode mode, tree exp, rtx target,\n   return ret;\n }\n \n-\n-#ifndef HAVE_atomic_clear\n-# define HAVE_atomic_clear 0\n-# define gen_atomic_clear(x,y) (gcc_unreachable (), NULL_RTX)\n-#endif\n-\n /* Expand an atomic clear operation.\n \tvoid _atomic_clear (BOOL *obj, enum memmodel)\n    EXP is the call expression.  */\n@@ -5615,12 +5609,6 @@ expand_builtin_atomic_clear (tree exp)\n       model = MEMMODEL_SEQ_CST;\n     }\n \n-  if (HAVE_atomic_clear)\n-    {\n-      emit_insn (gen_atomic_clear (mem, model));\n-      return const0_rtx;\n-    }\n-\n   /* Try issuing an __atomic_store, and allow fallback to __sync_lock_release.\n      Failing that, a store is issued by __atomic_store.  The only way this can\n      fail is if the bool type is larger than a word size.  Unlikely, but"}]}