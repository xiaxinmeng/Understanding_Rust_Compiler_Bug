{"sha": "e87a56b45dc08376349075af385d3cf988419430", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg3YTU2YjQ1ZGMwODM3NjM0OTA3NWFmMzg1ZDNjZjk4ODQxOTQzMA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-10-06T00:47:35Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-10-06T00:47:35Z"}, "message": "* lib/target-supports.exp\n\t(check_effective_target_vect_cmdline_needed): Handle i?86-*-* the\n\tsame as x86_64-*-*; check for LP64.\n\nFrom-SVN: r117477", "tree": {"sha": "348d11aeba0aa1b6ad1e9dbaf26ddbd445e8414a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/348d11aeba0aa1b6ad1e9dbaf26ddbd445e8414a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e87a56b45dc08376349075af385d3cf988419430", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e87a56b45dc08376349075af385d3cf988419430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e87a56b45dc08376349075af385d3cf988419430", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e87a56b45dc08376349075af385d3cf988419430/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2406129ccd50a6ea21ec1215d2dc0b4acf3f52e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2406129ccd50a6ea21ec1215d2dc0b4acf3f52e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2406129ccd50a6ea21ec1215d2dc0b4acf3f52e1"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "31ba8d4b03be2a3c7e9daaaad0513080bd9c79ae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e87a56b45dc08376349075af385d3cf988419430/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e87a56b45dc08376349075af385d3cf988419430/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e87a56b45dc08376349075af385d3cf988419430", "patch": "@@ -1,3 +1,9 @@\n+2006-10-06  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_vect_cmdline_needed): Handle i?86-*-* the\n+\tsame as x86_64-*-*; check for LP64.\n+\n 2006-10-04  Richard Henderson  <rth@redhat.com>\n \n \t* lib/target-supports.exp (check_effective_target_tls): Redefine"}, {"sha": "074cdb2571898b89c15e7aabe738b1264fac0a95", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e87a56b45dc08376349075af385d3cf988419430/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e87a56b45dc08376349075af385d3cf988419430/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=e87a56b45dc08376349075af385d3cf988419430", "patch": "@@ -1207,18 +1207,33 @@ proc check_effective_target_dfprt { } {\n \n # Return 1 if the target needs a command line argument to enable a SIMD\n # instruction set.\n-#\n-# This won't change for different subtargets so cache the result.\n \n proc check_effective_target_vect_cmdline_needed { } {\n     global et_vect_cmdline_needed_saved\n+    global et_vect_cmdline_needed_target_name\n+\n+    if { ![info exists et_vect_cmdline_needed_target_name] } {\n+\tset et_vect_cmdline_needed_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_vect_cmdline_needed_target_name } {\n+\tverbose \"check_effective_target_vect_cmdline_needed: `$et_vect_cmdline_needed_target_name' `$current_target'\" 2\n+\tset et_vect_cmdline_needed_target_name $current_target\n+\tif { [info exists et_vect_cmdline_needed_saved] } {\n+\t    verbose \"check_effective_target_vect_cmdline_needed: removing cached result\" 2\n+\t    unset et_vect_cmdline_needed_saved\n+\t}\n+    }\n \n     if [info exists et_vect_cmdline_needed_saved] {\n \tverbose \"check_effective_target_vect_cmdline_needed: using cached result\" 2\n     } else {\n \tset et_vect_cmdline_needed_saved 1\n \tif { [istarget ia64-*-*]\n-\t      || [istarget x86_64-*-*] } {\n+\t     || (([istarget x86_64-*-*] || [istarget i?86-*-*])\n+\t\t && [check_effective_target_lp64])} {\n \t   set et_vect_cmdline_needed_saved 0\n \t}\n     }"}]}