{"sha": "500fc425860f86c0c9f38ea6a2a3f5b32e8549c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAwZmM0MjU4NjBmODZjMGM5ZjM4ZWE2YTJhM2Y1YjMyZTg1NDljMg==", "commit": {"author": {"name": "Thiemo Seufer", "email": "ths@mips.com", "date": "2007-04-25T12:05:48Z"}, "committer": {"name": "Thiemo Seufer", "email": "ths@gcc.gnu.org", "date": "2007-04-25T12:05:48Z"}, "message": "mips.opt (mdmx, [...]): New options.\n\n\t* config/mips/mips.opt (mdmx, mmt, mno-mdmx): New options.\n\t(mips16): Fix typo.\n\t* config/mips/mips.h (ASM_SPEC): Pass -mmt/-mno-mt and -mdmx/-mno-mdmx\n\ton to the assembler.  Improve handling of -mno-mips16.  Add handling\n\tof -mno-mips3d, -mno-dsp, -mno-dspr2.\n\t* doc/invoke.texi (MIPS Options): Whitespace cleanup.  Fix wrong use\n\tof @itemx.  Document -mno-dsp, -mno-dspr2, -mno-paired-single, -mdmx,\n\t-mno-mdmx, -mno-mips3d, -mmt and -mno-mt.\n\nFrom-SVN: r124153", "tree": {"sha": "4bf01dcdb081595abc17dd7312a331135339ffde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bf01dcdb081595abc17dd7312a331135339ffde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2/comments", "author": null, "committer": null, "parents": [{"sha": "c1e5569062a3d302e8a0d0b6be83a772b652bc95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e5569062a3d302e8a0d0b6be83a772b652bc95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1e5569062a3d302e8a0d0b6be83a772b652bc95"}], "stats": {"total": 73, "additions": 57, "deletions": 16}, "files": [{"sha": "07cf33ae7a1448f63f72ff5ef03153bf2e2460e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=500fc425860f86c0c9f38ea6a2a3f5b32e8549c2", "patch": "@@ -1,3 +1,14 @@\n+2007-04-25  Thiemo Seufer  <ths@mips.com>\n+\n+\t* config/mips/mips.opt (mdmx, mmt, mno-mdmx): New options.\n+\t(mips16): Fix typo.\n+\t* config/mips/mips.h (ASM_SPEC): Pass -mmt/-mno-mt and -mdmx/-mno-mdmx\n+\ton to the assembler.  Improve handling of -mno-mips16.  Add handling\n+\tof -mno-mips3d, -mno-dsp, -mno-dspr2.\n+\t* doc/invoke.texi (MIPS Options): Whitespace cleanup.  Fix wrong use\n+\tof @itemx.  Document -mno-dsp, -mno-dspr2, -mno-paired-single, -mdmx,\n+\t-mno-mdmx, -mno-mips3d, -mmt and -mno-mt.\n+\n 2007-04-25  Danny Smith  <dannysmith.users.sourceforge.net>\n \n \tPR target/31680"}, {"sha": "72845436cfdfe92aa677681d18ca62531c7de290", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=500fc425860f86c0c9f38ea6a2a3f5b32e8549c2", "patch": "@@ -844,10 +844,12 @@ extern const struct mips_rtx_cost_data *mips_cost;\n #define ASM_SPEC \"\\\n %{G*} %(endian_spec) %{mips1} %{mips2} %{mips3} %{mips4} \\\n %{mips32} %{mips32r2} %{mips64} \\\n-%{mips16:%{!mno-mips16:-mips16}} %{mno-mips16:-no-mips16} \\\n-%{mips3d:-mips3d} \\\n-%{mdsp} \\\n-%{mdspr2} \\\n+%{mips16} %{mno-mips16:-no-mips16} \\\n+%{mips3d} %{mno-mips3d:-no-mips3d} \\\n+%{mdmx} %{mno-mdmx:-no-mdmx} \\\n+%{mdsp} %{mno-dsp} \\\n+%{mdspr2} %{mno-dspr2} \\\n+%{mmt} %{mno-mt} \\\n %{mfix-vr4120} %{mfix-vr4130} \\\n %(subtarget_asm_optimizing_spec) \\\n %(subtarget_asm_debugging_spec) \\"}, {"sha": "f0c2dbf4c336c0fe4c5fba7ebb94015aca31d8ad", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=500fc425860f86c0c9f38ea6a2a3f5b32e8549c2", "patch": "@@ -51,6 +51,10 @@ mdivide-traps\n Target Report RejectNegative InverseMask(DIVIDE_BREAKS, DIVIDE_TRAPS)\n Use trap instructions to check for integer divide by zero\n \n+mdmx\n+Target Report RejectNegative Var(TARGET_MDMX)\n+Allow the use of MDMX instructions\n+\n mdouble-float\n Target Report RejectNegative InverseMask(SINGLE_FLOAT, DOUBLE_FLOAT)\n Allow hardware floating-point instructions to cover both 32-bit and 64-bit operations\n@@ -147,7 +151,7 @@ Target RejectNegative Joined\n \n mips16\n Target Report RejectNegative Mask(MIPS16)\n-Generate mips16 code\n+Generate MIPS16 code\n \n mips3d\n Target Report RejectNegative Mask(MIPS3D)\n@@ -173,10 +177,18 @@ mmips-tfile\n Target\n Use the mips-tfile postpass\n \n+mmt\n+Target Report Var(TARGET_MT)\n+Allow the use of MT instructions\n+\n mno-flush-func\n Target RejectNegative\n Do not use a cache-flushing function before calling stack trampolines\n \n+mno-mdmx\n+Target Report RejectNegative InverseVar(MDMX)\n+Do not use MDMX instructions\n+\n mno-mips16\n Target Report RejectNegative InverseMask(MIPS16)\n Generate normal-mode code"}, {"sha": "fb9607605621f086f51cdb739d2719319d614bae", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500fc425860f86c0c9f38ea6a2a3f5b32e8549c2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=500fc425860f86c0c9f38ea6a2a3f5b32e8549c2", "patch": "@@ -614,20 +614,22 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{-EL  -EB  -march=@var{arch}  -mtune=@var{arch} @gol\n -mips1  -mips2  -mips3  -mips4  -mips32  -mips32r2  -mips64 @gol\n -mips16  -mno-mips16  -mabi=@var{abi}  -mabicalls  -mno-abicalls @gol\n--mshared  -mno-shared  -mxgot  -mno-xgot  -mgp32  -mgp64  @gol\n--mfp32  -mfp64  -mhard-float  -msoft-float  @gol\n--msingle-float  -mdouble-float  -mdsp  -mdspr2  -mpaired-single  -mips3d @gol\n+-mshared  -mno-shared  -mxgot  -mno-xgot  -mgp32  -mgp64 @gol\n+-mfp32  -mfp64  -mhard-float  -msoft-float @gol\n+-msingle-float  -mdouble-float  -mdsp  -mno-dsp  -mdspr2  -mno-dspr2 @gol\n+-mpaired-single  -mno-paired-single  -mdmx  -mno-mdmx @gol\n+-mips3d  -mno-mips3d  -mmt  -mno-mt @gol\n -mlong64  -mlong32  -msym32  -mno-sym32 @gol\n -G@var{num}  -membedded-data  -mno-embedded-data @gol\n -muninit-const-in-rodata  -mno-uninit-const-in-rodata @gol\n--msplit-addresses  -mno-split-addresses  @gol\n--mexplicit-relocs  -mno-explicit-relocs  @gol\n+-msplit-addresses  -mno-split-addresses @gol\n+-mexplicit-relocs  -mno-explicit-relocs @gol\n -mcheck-zero-division  -mno-check-zero-division @gol\n -mdivide-traps  -mdivide-breaks @gol\n -mmemcpy  -mno-memcpy  -mlong-calls  -mno-long-calls @gol\n -mmad  -mno-mad  -mfused-madd  -mno-fused-madd  -nocpp @gol\n -mfix-r4000  -mno-fix-r4000  -mfix-r4400  -mno-fix-r4400 @gol\n--mfix-vr4120  -mno-fix-vr4120  -mfix-vr4130 @gol\n+-mfix-vr4120  -mno-fix-vr4120  -mfix-vr4130  -mno-fix-vr4130 @gol\n -mfix-sb1  -mno-fix-sb1 @gol\n -mflush-func=@var{func}  -mno-flush-func @gol\n -mbranch-likely  -mno-branch-likely @gol\n@@ -11472,25 +11474,25 @@ floating-point calculations using library calls instead.\n Assume that the floating-point coprocessor only supports single-precision\n operations.\n \n-@itemx -mdouble-float\n+@item -mdouble-float\n @opindex mdouble-float\n Assume that the floating-point coprocessor supports double-precision\n operations.  This is the default.\n \n-@itemx -mdsp\n+@item -mdsp\n @itemx -mno-dsp\n @opindex mdsp\n @opindex mno-dsp\n Use (do not use) the MIPS DSP ASE.  @xref{MIPS DSP Built-in Functions}.\n \n-@itemx -mdspr2\n+@item -mdspr2\n @itemx -mno-dspr2\n @opindex mdspr2\n @opindex mno-dspr2\n Use (do not use) the MIPS DSP ASE REV 2.  @xref{MIPS DSP Built-in Functions}.\n The option @option{-mdspr2} implies @option{-mdsp}.\n \n-@itemx -mpaired-single\n+@item -mpaired-single\n @itemx -mno-paired-single\n @opindex mpaired-single\n @opindex mno-paired-single\n@@ -11499,13 +11501,27 @@ Use (do not use) paired-single floating-point instructions.\n when generating 64-bit code and requires hardware floating-point\n support to be enabled.\n \n-@itemx -mips3d\n+@item -mdmx\n+@itemx -mno-mdmx\n+@opindex mdmx\n+@opindex mno-mdmx\n+Use (do not use) MIPS Digital Media Extension instructions.\n+This option can only be used when generating 64-bit code and requires\n+hardware floating-point support to be enabled.\n+\n+@item -mips3d\n @itemx -mno-mips3d\n @opindex mips3d\n @opindex mno-mips3d\n Use (do not use) the MIPS-3D ASE@.  @xref{MIPS-3D Built-in Functions}.\n The option @option{-mips3d} implies @option{-mpaired-single}.\n \n+@item -mmt\n+@itemx -mno-mt\n+@opindex mmt\n+@opindex mno-mt\n+Use (do not use) MT Multithreading instructions.\n+\n @item -mlong64\n @opindex mlong64\n Force @code{long} types to be 64 bits wide.  See @option{-mlong32} for"}]}