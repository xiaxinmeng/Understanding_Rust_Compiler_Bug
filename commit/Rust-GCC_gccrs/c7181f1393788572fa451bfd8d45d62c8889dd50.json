{"sha": "c7181f1393788572fa451bfd8d45d62c8889dd50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcxODFmMTM5Mzc4ODU3MmZhNDUxYmZkOGQ0NWQ2MmM4ODg5ZGQ1MA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-01-27T09:58:34Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-01-27T09:58:34Z"}, "message": "Enhance doc for -fprofile-arcs\n\n2017-01-27  Martin Liska  <mliska@suse.cz>\n\n\t* doc/invoke.texi (-fprofile-arcs): Document profiling support\n\tfor {cd}tors and C++ {cd}tors.\n\nFrom-SVN: r244964", "tree": {"sha": "6c75792198cd9c3ed0a0ee08b786a2c720fe3e7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c75792198cd9c3ed0a0ee08b786a2c720fe3e7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7181f1393788572fa451bfd8d45d62c8889dd50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7181f1393788572fa451bfd8d45d62c8889dd50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7181f1393788572fa451bfd8d45d62c8889dd50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7181f1393788572fa451bfd8d45d62c8889dd50/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d876f5cd0272d7d7d6842703d59a130bdaf72cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d876f5cd0272d7d7d6842703d59a130bdaf72cca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d876f5cd0272d7d7d6842703d59a130bdaf72cca"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "401037701ee563b2a2f720f850103317b9f2bde2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7181f1393788572fa451bfd8d45d62c8889dd50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7181f1393788572fa451bfd8d45d62c8889dd50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7181f1393788572fa451bfd8d45d62c8889dd50", "patch": "@@ -1,3 +1,8 @@\n+2017-01-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi (-fprofile-arcs): Document profiling support\n+\tfor {cd}tors and C++ {cd}tors.\n+\n 2017-01-27  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/s390.md (\"*setmem_long_and\")"}, {"sha": "c205023d59cf9bb495c58a3a08461736cce1ad66", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7181f1393788572fa451bfd8d45d62c8889dd50/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7181f1393788572fa451bfd8d45d62c8889dd50/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c7181f1393788572fa451bfd8d45d62c8889dd50", "patch": "@@ -10584,7 +10584,12 @@ linking.\n @opindex fprofile-arcs\n Add code so that program flow @dfn{arcs} are instrumented.  During\n execution the program records how many times each branch and call is\n-executed and how many times it is taken or returns.  When the compiled\n+executed and how many times it is taken or returns.  On targets that support\n+constructors with priority support, profiling properly handles constructors,\n+destructors and C++ constructors (and destructors) of classes which are used\n+as a type of a global variable.\n+\n+When the compiled\n program exits it saves this data to a file called\n @file{@var{auxname}.gcda} for each source file.  The data may be used for\n profile-directed optimizations (@option{-fbranch-probabilities}), or for"}]}