{"sha": "e78c79ff53c9370b5438d7f8b9f7096103ee0d44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc4Yzc5ZmY1M2M5MzcwYjU0MzhkN2Y4YjlmNzA5NjEwM2VlMGQ0NA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2018-07-31T09:55:11Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-31T09:55:11Z"}, "message": "[Ada] Spurious error -- \"allocation from empty storage pool\"\n\nThis patch fixes a bug in which if \"pragma Default_Storage_Pool (null);\"\nis given, then a build-in-place function will get an incorrect error\nmessage \"allocation from empty storage pool\" even though there is no\nsuch allocation in the source program.\n\n2018-07-31  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Allocator): Do not complain about the\n\timplicit allocator that occurs in the expansion of a return\n\tstatement for a build-in-place function.\n\nFrom-SVN: r263088", "tree": {"sha": "75802caed9b5edc54cd98f45ed61025710a597b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75802caed9b5edc54cd98f45ed61025710a597b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e78c79ff53c9370b5438d7f8b9f7096103ee0d44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78c79ff53c9370b5438d7f8b9f7096103ee0d44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e78c79ff53c9370b5438d7f8b9f7096103ee0d44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78c79ff53c9370b5438d7f8b9f7096103ee0d44/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1102fd64dbb76784ed46ff81bf905f6c52d296fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1102fd64dbb76784ed46ff81bf905f6c52d296fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1102fd64dbb76784ed46ff81bf905f6c52d296fc"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "d12064c25d5b9dec2fd8b325606a8948ab092851", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78c79ff53c9370b5438d7f8b9f7096103ee0d44/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78c79ff53c9370b5438d7f8b9f7096103ee0d44/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e78c79ff53c9370b5438d7f8b9f7096103ee0d44", "patch": "@@ -1,3 +1,9 @@\n+2018-07-31  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Allocator): Do not complain about the\n+\timplicit allocator that occurs in the expansion of a return\n+\tstatement for a build-in-place function.\n+\n 2018-07-20  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/82063"}, {"sha": "659b1efc6dd6936b5bf3d866749072418524995c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78c79ff53c9370b5438d7f8b9f7096103ee0d44/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78c79ff53c9370b5438d7f8b9f7096103ee0d44/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=e78c79ff53c9370b5438d7f8b9f7096103ee0d44", "patch": "@@ -5035,9 +5035,14 @@ package body Sem_Res is\n          end;\n       end if;\n \n-      --  Check for allocation from an empty storage pool\n+      --  Check for allocation from an empty storage pool. But do not complain\n+      --  if it's a return statement for a build-in-place function, because the\n+      --  allocator is there just in case the caller uses an allocator. If the\n+      --  caller does use an allocator, it will be caught at the call site.\n \n-      if No_Pool_Assigned (Typ) then\n+      if No_Pool_Assigned (Typ)\n+        and then not Alloc_For_BIP_Return (N)\n+      then\n          Error_Msg_N (\"allocation from empty storage pool!\", N);\n \n       --  If the context is an unchecked conversion, as may happen within an"}]}