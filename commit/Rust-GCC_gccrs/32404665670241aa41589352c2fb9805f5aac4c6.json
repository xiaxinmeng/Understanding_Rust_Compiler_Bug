{"sha": "32404665670241aa41589352c2fb9805f5aac4c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI0MDQ2NjU2NzAyNDFhYTQxNTg5MzUyYzJmYjk4MDVmNWFhYzRjNg==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2009-07-13T09:50:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T09:50:58Z"}, "message": "gnatcmd.adb, [...]: Minor reformatting.\n\n2009-07-13  Emmanuel Briot  <briot@adacore.com>\n\n\t* gnatcmd.adb, prj-proc.adb, prj-proc.ads, make.adb, prj-part.adb,\n\tprj.adb, prj.ads, clean.adb, prj-nmsc.adb, prj-nmsc.ads, prj-pars.adb,\n\tprj-pars.ads, prj-conf.adb, prj-conf.ads, prj-env.adb, prj-tree.adb,\n\tprj-tree.ads: Minor reformatting.\n\t(Processing_Flags): new record to encapsulate the set of common\n\tparameters to several subprograms in the project manager.\n\t(Prj.Nmsc.Process_Naming_Scheme): renames Check, and moved to body\n\tRemove the need for the Current_Dir parameter in subprograms.\n\t(Look_For_Sources): minor refactoring, now that we no longer need to\n\tshare subprograms between the two Ada_Only and Multi_Language modes\n\t(Processing_Flags): New field Error_On_Unknown_Language.\n\tMerge tests for library project between gnatmake and gprbuild.\n\nFrom-SVN: r149563", "tree": {"sha": "bdefab7fc895960f09b6dd991c164a52f489ac1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdefab7fc895960f09b6dd991c164a52f489ac1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32404665670241aa41589352c2fb9805f5aac4c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32404665670241aa41589352c2fb9805f5aac4c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32404665670241aa41589352c2fb9805f5aac4c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32404665670241aa41589352c2fb9805f5aac4c6/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/959dd7d8a085ca0f7bab2d37069559e98e63ebc1"}], "stats": {"total": 1307, "additions": 644, "deletions": 663}, "files": [{"sha": "46f59b81176b3dab4a28973ec45b88c6b9cd583c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -1,3 +1,18 @@\n+2009-07-13  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* gnatcmd.adb, prj-proc.adb, prj-proc.ads, make.adb, prj-part.adb,\n+\tprj.adb, prj.ads, clean.adb, prj-nmsc.adb, prj-nmsc.ads, prj-pars.adb,\n+\tprj-pars.ads, prj-conf.adb, prj-conf.ads, prj-env.adb, prj-tree.adb,\n+\tprj-tree.ads: Minor reformatting.\n+\t(Processing_Flags): new record to encapsulate the set of common\n+\tparameters to several subprograms in the project manager.\n+\t(Prj.Nmsc.Process_Naming_Scheme): renames Check, and moved to body\n+\tRemove the need for the Current_Dir parameter in subprograms.\n+\t(Look_For_Sources): minor refactoring, now that we no longer need to\n+\tshare subprograms between the two Ada_Only and Multi_Language modes\n+\t(Processing_Flags): New field Error_On_Unknown_Language.\n+\tMerge tests for library project between gnatmake and gprbuild.\n+\n 2009-07-13  Arnaud Charlet  <charlet@adacore.com>\n \n \t* lib.adb, make.adb, mlib.adb, exp_dist.adb: Update comments."}, {"sha": "79c0431f98248ebea5cad0505de089d18e9178e2", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -1391,6 +1391,7 @@ package body Clean is\n            (Project           => Main_Project,\n             In_Tree           => Project_Tree,\n             Project_File_Name => Project_File_Name.all,\n+            Flags             => Gnatmake_Flags,\n             Packages_To_Check => Packages_To_Check_By_Gnatmake);\n \n          if Main_Project = No_Project then"}, {"sha": "2aca64f5b27951b4f302c7da7b654871b2db3c65", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -1777,6 +1777,7 @@ begin\n            (Project           => Project,\n             In_Tree           => Project_Tree,\n             Project_File_Name => Project_File.all,\n+            Flags             => Gnatmake_Flags,\n             Packages_To_Check => Packages_To_Check);\n \n          if Project = Prj.No_Project then"}, {"sha": "307d894b0e3fdb6584132d725c2f4a715d02a8ab", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -6865,7 +6865,8 @@ package body Make is\n            (Project           => Main_Project,\n             In_Tree           => Project_Tree,\n             Project_File_Name => Project_File_Name.all,\n-            Packages_To_Check => Packages_To_Check_By_Gnatmake);\n+            Packages_To_Check => Packages_To_Check_By_Gnatmake,\n+            Flags             => Gnatmake_Flags);\n \n          --  The parsing of project files may have changed the current output\n "}, {"sha": "7c4cad3f48e548d157be4bdbf04956de75b2604e", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -396,6 +396,7 @@ package body Prj.Conf is\n       Config                     : out Prj.Project_Id;\n       Config_File_Path           : out String_Access;\n       Automatically_Generated    : out Boolean;\n+      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null)\n    is\n       function Default_File_Name return String;\n@@ -862,7 +863,7 @@ package body Prj.Conf is\n             Success                => Success,\n             From_Project_Node      => Config_Project_Node,\n             From_Project_Node_Tree => Project_Node_Tree,\n-            Report_Error           => null,\n+            Flags                  => Flags,\n             Reset_Tree             => False);\n       end if;\n \n@@ -904,13 +905,9 @@ package body Prj.Conf is\n       Config_File_Path           : out String_Access;\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n-      Report_Error               : Put_Line_Access := null;\n+      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null;\n-      Compiler_Driver_Mandatory  : Boolean := True;\n-      Allow_Duplicate_Basenames  : Boolean := False;\n-      Reset_Tree                 : Boolean := True;\n-      Require_Sources_Other_Lang : Boolean := True;\n-      When_No_Sources            : Error_Warning := Warning)\n+      Reset_Tree                 : Boolean := True)\n    is\n       Main_Config_Project : Project_Id;\n       Success : Boolean;\n@@ -925,7 +922,7 @@ package body Prj.Conf is\n          Success                => Success,\n          From_Project_Node      => User_Project_Node,\n          From_Project_Node_Tree => Project_Node_Tree,\n-         Report_Error           => Report_Error,\n+         Flags                  => Flags,\n          Reset_Tree             => Reset_Tree);\n \n       if not Success then\n@@ -948,6 +945,7 @@ package body Prj.Conf is\n          Packages_To_Check          => Packages_To_Check,\n          Config_File_Path           => Config_File_Path,\n          Automatically_Generated    => Automatically_Generated,\n+         Flags                      => Flags,\n          On_Load_Config             => On_Load_Config);\n \n       Apply_Config_File (Main_Config_Project, Project_Tree);\n@@ -960,12 +958,7 @@ package body Prj.Conf is\n          Success                    => Success,\n          From_Project_Node          => User_Project_Node,\n          From_Project_Node_Tree     => Project_Node_Tree,\n-         Report_Error               => Report_Error,\n-         Current_Dir                => Current_Directory,\n-         When_No_Sources            => When_No_Sources,\n-         Require_Sources_Other_Lang => Require_Sources_Other_Lang,\n-         Compiler_Driver_Mandatory  => Compiler_Driver_Mandatory,\n-         Allow_Duplicate_Basenames  => Allow_Duplicate_Basenames);\n+         Flags                      => Flags);\n \n       if not Success then\n          Main_Project := No_Project;\n@@ -990,7 +983,7 @@ package body Prj.Conf is\n       Config_File_Path           : out String_Access;\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n-      Report_Error               : Put_Line_Access := null;\n+      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null)\n    is\n    begin\n@@ -1029,7 +1022,7 @@ package body Prj.Conf is\n          Config_File_Path           => Config_File_Path,\n          Target_Name                => Target_Name,\n          Normalized_Hostname        => Normalized_Hostname,\n-         Report_Error               => Report_Error,\n+         Flags                      => Flags,\n          On_Load_Config             => On_Load_Config);\n    end Parse_Project_And_Apply_Config;\n \n@@ -1131,26 +1124,31 @@ package body Prj.Conf is\n       Project_Tree : Project_Node_Tree_Ref)\n    is\n       Name : Name_Id;\n+\n    begin\n       if Config_File = Empty_Node then\n-         --  Create a dummy config file is none was found.\n+\n+         --  Create a dummy config file is none was found\n \n          Name_Len := Auto_Cgpr'Length;\n          Name_Buffer (1 .. Name_Len) := Auto_Cgpr;\n          Name := Name_Find;\n \n-         Config_File := Create_Project\n-           (In_Tree        => Project_Tree,\n-            Name           => Name,\n-            Full_Path      => Path_Name_Type (Name),\n-            Is_Config_File => True);\n+         Config_File :=\n+           Create_Project\n+             (In_Tree        => Project_Tree,\n+              Name           => Name,\n+              Full_Path      => Path_Name_Type (Name),\n+              Is_Config_File => True);\n \n          --  ??? This isn't strictly required, since Prj.Nmsc.Add_Language\n          --  already has a workaround in the Ada_Only case. But it would be\n          --  nicer to do it this way\n          --  Likewise for the default language, hard-coded in\n          --  Pjr.Nmsc.Check_Programming_Languages\n \n+         --  Why is all the following code commented out???\n+\n --           Update_Attribute_Value_In_Scenario\n --             (Tree               => Project_Tree,\n --              Project            => Config_File,"}, {"sha": "89a3010480891ac3fc96527014e49e3ac73d3401", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 21, "deletions": 23, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -55,7 +55,7 @@ package Prj.Conf is\n       Config_File_Path           : out String_Access;\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n-      Report_Error               : Put_Line_Access := null;\n+      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null);\n    --  Find the main configuration project and parse the project tree rooted at\n    --  this configuration project.\n@@ -96,19 +96,17 @@ package Prj.Conf is\n       Config_File_Path           : out String_Access;\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n-      Report_Error               : Put_Line_Access := null;\n+      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null;\n-      Compiler_Driver_Mandatory  : Boolean := True;\n-      Allow_Duplicate_Basenames  : Boolean := False;\n-      Reset_Tree                 : Boolean := True;\n-      Require_Sources_Other_Lang : Boolean := True;\n-      When_No_Sources            : Error_Warning := Warning);\n+      Reset_Tree                 : Boolean := True);\n    --  Same as above, except the project must already have been parsed through\n    --  Prj.Part.Parse, and only the processing of the project and the\n    --  configuration is done at this level.\n+   --\n    --  If Reset_Tree is true, all projects are first removed from the tree.\n    --  When_No_Sources indicates what should be done when no sources are found\n    --  for one of the languages of the project.\n+   --\n    --  If Require_Sources_Other_Lang is true, then all languages must have at\n    --  least one source file, or an error is reported via When_No_Sources. If\n    --  it is false, this is only required for Ada (and only if it is a language\n@@ -129,6 +127,7 @@ package Prj.Conf is\n       Config                     : out Prj.Project_Id;\n       Config_File_Path           : out String_Access;\n       Automatically_Generated    : out Boolean;\n+      Flags                      : Processing_Flags;\n       On_Load_Config             : Config_File_Hook := null);\n    --  Compute the name of the configuration file that should be used. If no\n    --  default configuration file is found, a new one will be automatically\n@@ -142,20 +141,19 @@ package Prj.Conf is\n    --\n    --  The choice and generation of a configuration file depends on several\n    --  attributes of the user's project file (given by the Project argument),\n-   --  like the list of languages that must be supported. Project must\n-   --  therefore have been partially processed (phase one of the processing\n-   --  only).\n+   --  e.g. list of languages that must be supported. Project must therefore\n+   --  have been partially processed (phase one of the processing only).\n    --\n    --  Config_File_Name should be set to the name of the config file specified\n    --  by the user (either through gprbuild's --config or --autoconf switches).\n-   --  In the latter case, Autoconf_Specified should be set to true, to\n-   --  indicate that the configuration file can be regenerated to match target\n-   --  and languages. This name can either be an absolute path, or the a base\n-   --  name that will be searched in the default config file directories (which\n+   --  In the latter case, Autoconf_Specified should be set to true to indicate\n+   --  that the configuration file can be regenerated to match target and\n+   --  languages. This name can either be an absolute path, or the a base name\n+   --  that will be searched in the default config file directories (which\n    --  depends on the installation path for the tools).\n    --\n-   --  Target_Name is used to chose among several possibilities\n-   --  the configuration file that will be used.\n+   --  Target_Name is used to chose the configuration file that will be used\n+   --  from among several possibilities.\n    --\n    --  If a project file could be found, it is automatically parsed and\n    --  processed (and Packages_To_Check is used to indicate which packages\n@@ -175,11 +173,11 @@ package Prj.Conf is\n    procedure Add_Default_GNAT_Naming_Scheme\n      (Config_File  : in out Prj.Tree.Project_Node_Id;\n       Project_Tree : Prj.Tree.Project_Node_Tree_Ref);\n-   --  A hook for Get_Or_Create_Configuration_File and\n-   --  Process_Project_And_Apply_Config that will create a new config file (in\n-   --  memory) and add the default GNAT naming scheme to it. Nothing is done\n-   --  if the config_file already exists, to avoid overriding what the user\n-   --  might have put in there.\n+   --  A hook that will create a new config file (in memory), used for\n+   --  Get_Or_Create_Configuration_File and Process_Project_And_Apply_Config\n+   --  and add the default GNAT naming scheme to it. Nothing is done if the\n+   --  config_file already exists, to avoid overriding what the user might\n+   --  have put in there.\n \n    --------------\n    -- Runtimes --\n@@ -193,7 +191,7 @@ package Prj.Conf is\n    --  --config switch then automatically generating a configuration file.\n \n    function Runtime_Name_For (Language : Name_Id) return String;\n-   --  Returns the runtime name for a language. Returns an empty string if\n-   --  no runtime was specified for the language using option --RTS.\n+   --  Returns the runtime name for a language. Returns an empty string if no\n+   --  runtime was specified for the language using option --RTS.\n \n end Prj.Conf;"}, {"sha": "93c51abe2cf7173e8641fd051ed70305d94313ef", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -646,7 +646,6 @@ package body Prj.Env is\n          --  Visit all the files and process those that need an SFN pragma\n \n          Iter := For_Each_Source (In_Tree, For_Project);\n-\n          while Element (Iter) /= No_Source loop\n             Source := Element (Iter);\n "}, {"sha": "2609dffb0a5961b03e2a320450644cd23faffedd", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 401, "deletions": 345, "changes": 746, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -25,6 +25,7 @@\n \n with GNAT.Case_Util;             use GNAT.Case_Util;\n with GNAT.Directory_Operations;  use GNAT.Directory_Operations;\n+with GNAT.Dynamic_HTables;\n \n with Err_Vars; use Err_Vars;\n with MLib.Tgt;\n@@ -80,7 +81,9 @@ package body Prj.Nmsc is\n       Spec : File_Name_Type;\n       Impl : File_Name_Type;\n    end record;\n+\n    No_Unit_Exception : constant Unit_Exception := (No_Name, No_File, No_File);\n+\n    package Unit_Exceptions_Htable is new GNAT.Dynamic_HTables.Simple_HTable\n      (Header_Num => Header_Num,\n       Element    => Unit_Exception,\n@@ -97,7 +100,9 @@ package body Prj.Nmsc is\n       Found    : Boolean         := False;\n       Location : Source_Ptr      := No_Location;\n    end record;\n+\n    No_File_Found : constant File_Found := (No_File, False, No_Location);\n+\n    package Excluded_Sources_Htable is new GNAT.Dynamic_HTables.Simple_HTable\n      (Header_Num => Header_Num,\n       Element    => File_Found,\n@@ -122,7 +127,6 @@ package body Prj.Nmsc is\n       Source_Names    : Source_Names_Htable.Instance;\n       Unit_Exceptions : Unit_Exceptions_Htable.Instance;\n       Excluded        : Excluded_Sources_Htable.Instance;\n-      Object_Files    : Object_File_Names_Htable.Instance;\n \n       Source_List_File_Location : Source_Ptr;\n       --  Location of the Source_List_File attribute, for error messages\n@@ -131,15 +135,50 @@ package body Prj.Nmsc is\n    --  information which is only useful while processing the project, and can\n    --  be discarded as soon as we have finished processing the project\n \n+   package Files_Htable is new GNAT.Dynamic_HTables.Simple_HTable\n+     (Header_Num => Header_Num,\n+      Element    => Source_Id,\n+      No_Element => No_Source,\n+      Key        => File_Name_Type,\n+      Hash       => Hash,\n+      Equal      => \"=\");\n+   --  Mapping from base file names to Source_Id (containing full info about\n+   --  the source)\n+\n+   type Tree_Processing_Data is record\n+      Tree           : Project_Tree_Ref;\n+      File_To_Source : Files_Htable.Instance;\n+      Flags          : Prj.Processing_Flags;\n+   end record;\n+   --  Temporary data which is needed while parsing a project. It does not need\n+   --  to be kept in memory once a project has been fully loaded, but is\n+   --  necessary while performing consistency checks (duplicate sources,...)\n+   --  This data must be initialized before processing any project, and the\n+   --  same data is used for processing all projects in the tree.\n+\n+   procedure Initialize\n+     (Data  : out Tree_Processing_Data;\n+      Tree  : Project_Tree_Ref;\n+      Flags : Prj.Processing_Flags);\n+   --  Initialize Data\n+\n+   procedure Free (Data : in out Tree_Processing_Data);\n+   --  Free the memory occupied by Data\n+\n+   procedure Check\n+     (Project     : Project_Id;\n+      Data        : in out Tree_Processing_Data);\n+   --  Process the naming scheme for a single project.\n+\n    procedure Initialize\n      (Data    : in out Project_Processing_Data;\n       Project : Project_Id);\n    procedure Free (Data : in out Project_Processing_Data);\n    --  Initialize or free memory for a project-specific data\n \n    procedure Find_Excluded_Sources\n-     (Project   : in out Project_Processing_Data;\n-      Data      : in out Tree_Processing_Data);\n+     (Project : in out Project_Processing_Data;\n+      Data    : in out Tree_Processing_Data);\n    --  Find the list of files that should not be considered as source files\n    --  for this project. Sets the list in the Project.Excluded_Sources_Htable.\n \n@@ -148,8 +187,8 @@ package body Prj.Nmsc is\n    --  the unit data if necessary.\n \n    procedure Load_Naming_Exceptions\n-     (Project  : in out Project_Processing_Data;\n-      Data     : in out Tree_Processing_Data);\n+     (Project : in out Project_Processing_Data;\n+      Data    : in out Tree_Processing_Data);\n    --  All source files in Data.First_Source are considered as naming\n    --  exceptions, and copied into the Source_Names and Unit_Exceptions tables\n    --  as appropriate.\n@@ -231,8 +270,6 @@ package body Prj.Nmsc is\n       Data    : in out Tree_Processing_Data);\n    --  Check the library attributes of project Project in project tree\n    --  and modify its data Data accordingly.\n-   --  Current_Dir should represent the current directory, and is passed for\n-   --  efficiency to avoid system calls to recompute it.\n \n    procedure Check_Programming_Languages\n      (Project : Project_Id;\n@@ -250,13 +287,10 @@ package body Prj.Nmsc is\n \n    procedure Check_Stand_Alone_Library\n      (Project     : Project_Id;\n-      Current_Dir : String;\n       Extending   : Boolean;\n       Data        : in out Tree_Processing_Data);\n    --  Check if project Project in project tree Data.Tree is a Stand-Alone\n    --  Library project, and modify its data Data accordingly if it is one.\n-   --  Current_Dir should represent the current directory, and is passed for\n-   --  efficiency to avoid system calls to recompute it.\n \n    function Compute_Directory_Last (Dir : String) return Natural;\n    --  Return the index of the last significant character in Dir. This is used\n@@ -327,11 +361,9 @@ package body Prj.Nmsc is\n \n    procedure Get_Directories\n      (Project     : Project_Id;\n-      Current_Dir : String;\n       Data        : in out Tree_Processing_Data);\n    --  Get the object directory, the exec directory and the source directories\n-   --  of a project. Current_Dir should represent the current directory, and is\n-   --  passed for efficiency to avoid system calls to recompute it.\n+   --  of a project.\n \n    procedure Get_Mains\n      (Project : Project_Id;\n@@ -340,16 +372,16 @@ package body Prj.Nmsc is\n    --  them in the project data.\n \n    procedure Get_Sources_From_File\n-     (Path      : String;\n-      Location  : Source_Ptr;\n-      Project   : in out Project_Processing_Data;\n-      Data      : in out Tree_Processing_Data);\n+     (Path     : String;\n+      Location : Source_Ptr;\n+      Project  : in out Project_Processing_Data;\n+      Data     : in out Tree_Processing_Data);\n    --  Get the list of sources from a text file and put them in hash table\n    --  Source_Names.\n \n    procedure Find_Sources\n-     (Project   : in out Project_Processing_Data;\n-      Data      : in out Tree_Processing_Data);\n+     (Project : in out Project_Processing_Data;\n+      Data    : in out Tree_Processing_Data);\n    --  Process the Source_Files and Source_List_File attributes, and store the\n    --  list of source files into the Source_Names htable. When these attributes\n    --  are not defined, find all files matching the naming schemes in the\n@@ -398,8 +430,7 @@ package body Prj.Nmsc is\n    --  returned), or simply returned without checking for its existence (if\n    --  Must_Exist is False) or No_Path_Information is returned. In all cases,\n    --  Dir_Exists indicates whether the directory now exists. Create is also\n-   --  used for debugging traces to show which path we are\n-   --  computing\n+   --  used for debugging traces to show which path we are computing.\n \n    procedure Look_For_Sources\n      (Project : in out Project_Processing_Data;\n@@ -418,10 +449,10 @@ package body Prj.Nmsc is\n    procedure Remove_Source\n      (Id          : Source_Id;\n       Replaced_By : Source_Id);\n-   --  Remove a file from the list of sources of a project.\n-   --  This might be because the file is replaced by another one in an\n-   --  extending project, or because a file was added as a naming exception\n-   --  but was not found in the end.\n+   --  Remove a file from the list of sources of a project. This might be\n+   --  because the file is replaced by another one in an extending project,\n+   --  or because a file was added as a naming exception but was not found\n+   --  in the end.\n \n    procedure Report_No_Sources\n      (Project      : Project_Id;\n@@ -561,6 +592,7 @@ package body Prj.Nmsc is\n         and then Prev_Unit.File_Names (Kind) /= null\n       then\n          --  Suspicious, we need to check later whether this is authorized\n+\n          Add_Src := False;\n          Source := Prev_Unit.File_Names (Kind);\n \n@@ -574,18 +606,20 @@ package body Prj.Nmsc is\n          end if;\n       end if;\n \n-      --  Duplication of file/unit in same project is allowed\n-      --  if order of source directories is known.\n+      --  Duplication of file/unit in same project is allowed if order of\n+      --  source directories is known.\n \n       if Add_Src = False then\n          Add_Src := True;\n \n          if Project = Source.Project then\n             if Prev_Unit = No_Unit_Index then\n-               if Data.Allow_Duplicate_Basenames then\n+               if Data.Flags.Allow_Duplicate_Basenames then\n                   Add_Src := True;\n+\n                elsif Project.Known_Order_Of_Source_Dirs then\n                   Add_Src := False;\n+\n                else\n                   Error_Msg_File_1 := File_Name;\n                   Error_Msg\n@@ -599,7 +633,7 @@ package body Prj.Nmsc is\n                   Add_Src := False;\n \n                --  We might be seeing the same file through a different path\n-               --  (for instance because of symbolic links)\n+               --  (for instance because of symbolic links).\n \n                elsif Source.Path.Name /= Path.Name then\n                   Error_Msg_Name_1 := Unit;\n@@ -625,7 +659,7 @@ package body Prj.Nmsc is\n             --  Path is set if this is a source we found on the disk, in which\n             --  case we can provide more explicit error message. Path is unset\n             --  when the source is added from one of the naming exceptions in\n-            --  the project\n+            --  the project.\n \n             if Path /= No_Path_Information then\n                Error_Msg_Name_1 := Unit;\n@@ -655,7 +689,7 @@ package body Prj.Nmsc is\n             Add_Src := False;\n \n          elsif not Source.Locally_Removed\n-           and then not Data.Allow_Duplicate_Basenames\n+           and then not Data.Flags.Allow_Duplicate_Basenames\n            and then Lang_Id.Config.Kind = Unit_Based\n          then\n             Error_Msg_File_1 := File_Name;\n@@ -665,7 +699,8 @@ package body Prj.Nmsc is\n                \"{ is already a source of project {\", Location, Data);\n \n             --  Add the file anyway, to avoid further warnings like \"language\n-            --  unknown\"\n+            --  unknown\".\n+\n             Add_Src := True;\n          end if;\n       end if;\n@@ -801,9 +836,8 @@ package body Prj.Nmsc is\n    -----------\n \n    procedure Check\n-     (Project        : Project_Id;\n-      Current_Dir    : String;\n-      Data           : in out Tree_Processing_Data)\n+     (Project     : Project_Id;\n+      Data        : in out Tree_Processing_Data)\n    is\n       Specs     : Array_Element_Id;\n       Bodies    : Array_Element_Id;\n@@ -817,7 +851,7 @@ package body Prj.Nmsc is\n \n       --  Object, exec and source directories\n \n-      Get_Directories (Project, Current_Dir, Data);\n+      Get_Directories (Project, Data);\n \n       --  Get the programming languages\n \n@@ -904,7 +938,7 @@ package body Prj.Nmsc is\n \n                   if Language.First_Source = No_Source\n                     and then\n-                      (Data.Require_Sources_Other_Lang\n+                      (Data.Flags.Require_Sources_Other_Lang\n                        or else Language.Name = Name_Ada)\n                   then\n                      Iter := For_Each_Source (In_Tree => Data.Tree,\n@@ -941,18 +975,15 @@ package body Prj.Nmsc is\n          end if;\n       end if;\n \n-      if Get_Mode = Multi_Language then\n+      --  If a list of sources is specified in attribute Interfaces, set\n+      --  In_Interfaces only for the sources specified in the list.\n \n-         --  If a list of sources is specified in attribute Interfaces, set\n-         --  In_Interfaces only for the sources specified in the list.\n-\n-         Check_Interfaces (Project, Data);\n-      end if;\n+      Check_Interfaces (Project, Data);\n \n       --  If it is a library project file, check if it is a standalone library\n \n       if Project.Library then\n-         Check_Stand_Alone_Library (Project, Current_Dir, Extending, Data);\n+         Check_Stand_Alone_Library (Project, Extending, Data);\n       end if;\n \n       --  Put the list of Mains, if any, in the project data\n@@ -2341,7 +2372,7 @@ package body Prj.Nmsc is\n          --  For all languages, Compiler_Driver needs to be specified. This is\n          --  only needed if we do intend to compile (not in GPS for instance).\n \n-         if Data.Compiler_Driver_Mandatory\n+         if Data.Flags.Compiler_Driver_Mandatory\n            and then Lang_Index.Config.Compiler_Driver = No_File\n          then\n             Error_Msg_Name_1 := Lang_Index.Display_Name;\n@@ -2579,30 +2610,30 @@ package body Prj.Nmsc is\n       Specs          : out Array_Element_Id)\n    is\n       Naming_Id : constant Package_Id :=\n-                 Util.Value_Of (Name_Naming, Project.Decl.Packages, Data.Tree);\n+                    Util.Value_Of\n+                      (Name_Naming, Project.Decl.Packages, Data.Tree);\n       Naming    : Package_Element;\n \n       Ada_Body_Suffix_Loc : Source_Ptr := No_Location;\n \n-      procedure Check_Naming_Multi_Lang;\n-      --  Does Check_Naming_Schemes processing for Multi_Language mode\n+      procedure Check_Naming;\n+      --  Check the validity of the Naming package (suffixes valid, ...)\n \n       procedure Check_Common\n         (Dot_Replacement : in out File_Name_Type;\n          Casing          : in out Casing_Type;\n          Casing_Defined  : out Boolean;\n          Separate_Suffix : in out File_Name_Type;\n          Sep_Suffix_Loc  : out Source_Ptr);\n-      --  Check attributes common to Ada_Only and Multi_Lang modes\n+      --  Check attributes common\n \n       procedure Process_Exceptions_File_Based\n         (Lang_Id : Language_Ptr;\n          Kind    : Source_Kind);\n       procedure Process_Exceptions_Unit_Based\n         (Lang_Id : Language_Ptr;\n          Kind    : Source_Kind);\n-      --  In Multi_Lang mode, process the naming exceptions for the two types\n-      --  of languages we can have.\n+      --  Process the naming exceptions for the two types of languages\n \n       procedure Initialize_Naming_Data;\n       --  Initialize internal naming data for the various languages\n@@ -2846,21 +2877,22 @@ package body Prj.Nmsc is\n         (Lang_Id : Language_Ptr;\n          Kind    : Source_Kind)\n       is\n-         Lang              : constant Name_Id := Lang_Id.Name;\n-         Exceptions        : Array_Element_Id;\n-         Element           : Array_Element;\n-         Unit              : Name_Id;\n-         Index             : Int;\n-         File_Name         : File_Name_Type;\n-         Source            : Source_Id;\n+         Lang       : constant Name_Id := Lang_Id.Name;\n+         Exceptions : Array_Element_Id;\n+         Element    : Array_Element;\n+         Unit       : Name_Id;\n+         Index      : Int;\n+         File_Name  : File_Name_Type;\n+         Source     : Source_Id;\n \n       begin\n          case Kind is\n             when Impl | Sep =>\n-               Exceptions := Value_Of\n-                 (Name_Body,\n-                  In_Arrays => Naming.Decl.Arrays,\n-                  In_Tree   => Data.Tree);\n+               Exceptions :=\n+                 Value_Of\n+                   (Name_Body,\n+                    In_Arrays => Naming.Decl.Arrays,\n+                    In_Tree   => Data.Tree);\n \n                if Exceptions = No_Array_Element then\n                   Exceptions :=\n@@ -2878,10 +2910,11 @@ package body Prj.Nmsc is\n                     In_Tree   => Data.Tree);\n \n                if Exceptions = No_Array_Element then\n-                  Exceptions := Value_Of\n-                    (Name_Spec,\n-                     In_Arrays => Naming.Decl.Arrays,\n-                     In_Tree   => Data.Tree);\n+                  Exceptions :=\n+                    Value_Of\n+                      (Name_Spec,\n+                       In_Arrays => Naming.Decl.Arrays,\n+                       In_Tree   => Data.Tree);\n                end if;\n          end case;\n \n@@ -2928,13 +2961,14 @@ package body Prj.Nmsc is\n          end loop;\n       end Process_Exceptions_Unit_Based;\n \n-      -----------------------------\n-      -- Check_Naming_Multi_Lang --\n-      -----------------------------\n+      ------------------\n+      -- Check_Naming --\n+      ------------------\n \n-      procedure Check_Naming_Multi_Lang is\n+      procedure Check_Naming is\n          Dot_Replacement : File_Name_Type :=\n-           File_Name_Type (First_Name_Id + Character'Pos ('-'));\n+                             File_Name_Type\n+                               (First_Name_Id + Character'Pos ('-'));\n          Separate_Suffix : File_Name_Type := No_File;\n          Casing          : Casing_Type    := All_Lower_Case;\n          Casing_Defined  : Boolean;\n@@ -3016,18 +3050,20 @@ package body Prj.Nmsc is\n \n             --  Body_Suffix\n \n-            Suffix := Value_Of\n-              (Name                    => Lang,\n-               Attribute_Or_Array_Name => Name_Body_Suffix,\n-               In_Package              => Naming_Id,\n-               In_Tree                 => Data.Tree);\n+            Suffix :=\n+              Value_Of\n+                (Name                    => Lang,\n+                 Attribute_Or_Array_Name => Name_Body_Suffix,\n+                 In_Package              => Naming_Id,\n+                 In_Tree                 => Data.Tree);\n \n             if Suffix = Nil_Variable_Value then\n-               Suffix := Value_Of\n-                 (Name                    => Lang,\n-                  Attribute_Or_Array_Name => Name_Implementation_Suffix,\n-                  In_Package              => Naming_Id,\n-                  In_Tree                 => Data.Tree);\n+               Suffix :=\n+                 Value_Of\n+                   (Name                    => Lang,\n+                    Attribute_Or_Array_Name => Name_Implementation_Suffix,\n+                    In_Package              => Naming_Id,\n+                    In_Tree                 => Data.Tree);\n             end if;\n \n             if Suffix /= Nil_Variable_Value then\n@@ -3071,7 +3107,7 @@ package body Prj.Nmsc is\n \n             if Lang_Id.Config.Naming_Data.Spec_Suffix /= No_File\n               and then Lang_Id.Config.Naming_Data.Spec_Suffix =\n-                Lang_Id.Config.Naming_Data.Body_Suffix\n+                       Lang_Id.Config.Naming_Data.Body_Suffix\n             then\n                Error_Msg\n                  (Project,\n@@ -3082,9 +3118,9 @@ package body Prj.Nmsc is\n             end if;\n \n             if Lang_Id.Config.Naming_Data.Body_Suffix /=\n-              Lang_Id.Config.Naming_Data.Separate_Suffix\n+               Lang_Id.Config.Naming_Data.Separate_Suffix\n               and then Lang_Id.Config.Naming_Data.Spec_Suffix =\n-                Lang_Id.Config.Naming_Data.Separate_Suffix\n+                       Lang_Id.Config.Naming_Data.Separate_Suffix\n             then\n                Error_Msg\n                  (Project,\n@@ -3104,17 +3140,17 @@ package body Prj.Nmsc is\n             Lang_Id := Project.Languages;\n             while Lang_Id /= No_Language_Index loop\n                case Lang_Id.Config.Kind is\n-               when File_Based =>\n-                  Process_Exceptions_File_Based (Lang_Id, Kind);\n+                  when File_Based =>\n+                     Process_Exceptions_File_Based (Lang_Id, Kind);\n \n-               when Unit_Based =>\n-                  Process_Exceptions_Unit_Based (Lang_Id, Kind);\n+                  when Unit_Based =>\n+                     Process_Exceptions_Unit_Based (Lang_Id, Kind);\n                end case;\n \n                Lang_Id := Lang_Id.Next;\n             end loop;\n          end loop;\n-      end Check_Naming_Multi_Lang;\n+      end Check_Naming;\n \n       ----------------------------\n       -- Initialize_Naming_Data --\n@@ -3145,15 +3181,15 @@ package body Prj.Nmsc is\n \n          while Specs /= No_Array_Element loop\n             Lang_Name := Data.Tree.Array_Elements.Table (Specs).Index;\n-            Lang := Get_Language_From_Name\n-              (Project, Name => Get_Name_String (Lang_Name));\n+            Lang :=\n+              Get_Language_From_Name\n+                (Project, Name => Get_Name_String (Lang_Name));\n \n             --  An extending project inherits its parent projects' languages\n             --  so if needed we should create entries for those languages\n \n             if Lang = null  then\n                Extended := Project.Extends;\n-\n                while Extended /= null loop\n                   Lang := Get_Language_From_Name\n                     (Extended, Name => Get_Name_String (Lang_Name));\n@@ -3179,6 +3215,7 @@ package body Prj.Nmsc is\n                      & Get_Name_String (Lang_Name)\n                      & \" since language is not defined for this project\");\n                end if;\n+\n             else\n                Value := Data.Tree.Array_Elements.Table (Specs).Value;\n \n@@ -3193,8 +3230,9 @@ package body Prj.Nmsc is\n \n          while Impls /= No_Array_Element loop\n             Lang_Name := Data.Tree.Array_Elements.Table (Impls).Index;\n-            Lang := Get_Language_From_Name\n-              (Project, Name => Get_Name_String (Lang_Name));\n+            Lang :=\n+              Get_Language_From_Name\n+                (Project, Name => Get_Name_String (Lang_Name));\n \n             if Lang = null then\n                if Current_Verbosity = High then\n@@ -3239,7 +3277,7 @@ package body Prj.Nmsc is\n          end if;\n \n          Initialize_Naming_Data;\n-         Check_Naming_Multi_Lang;\n+         Check_Naming;\n       end if;\n    end Check_Package_Naming;\n \n@@ -3293,8 +3331,8 @@ package body Prj.Nmsc is\n       -------------------\n \n       procedure Check_Library (Proj : Project_Id; Extends : Boolean) is\n-         Src_Id    : Source_Id;\n-         Iter      : Source_Iterator;\n+         Src_Id : Source_Id;\n+         Iter   : Source_Iterator;\n \n       begin\n          if Proj /= No_Project then\n@@ -3873,17 +3911,15 @@ package body Prj.Nmsc is\n                   Write_Line (\"This is a library project file\");\n                end if;\n \n-               if Get_Mode = Multi_Language then\n-                  Check_Library (Project.Extends, Extends => True);\n+               Check_Library (Project.Extends, Extends => True);\n \n-                  Imported_Project_List := Project.Imported_Projects;\n-                  while Imported_Project_List /= null loop\n-                     Check_Library\n-                       (Imported_Project_List.Project,\n-                        Extends => False);\n-                     Imported_Project_List := Imported_Project_List.Next;\n-                  end loop;\n-               end if;\n+               Imported_Project_List := Project.Imported_Projects;\n+               while Imported_Project_List /= null loop\n+                  Check_Library\n+                    (Imported_Project_List.Project,\n+                     Extends => False);\n+                  Imported_Project_List := Imported_Project_List.Next;\n+               end loop;\n             end if;\n \n          end if;\n@@ -3972,7 +4008,7 @@ package body Prj.Nmsc is\n          Lang              := new Language_Data'(No_Language_Data);\n          Lang.Next         := Project.Languages;\n          Project.Languages := Lang;\n-         Lang.Name := Name;\n+         Lang.Name         := Name;\n          Lang.Display_Name := Display_Name;\n \n          if Name = Name_Ada then\n@@ -3987,8 +4023,9 @@ package body Prj.Nmsc is\n                --  ??? We should do as GPS does and create a dummy config file\n \n                Lang.Config.Naming_Data :=\n-                 (Dot_Replacement => File_Name_Type\n-                    (First_Name_Id + Character'Pos ('-')),\n+                 (Dot_Replacement =>\n+                    File_Name_Type\n+                      (First_Name_Id + Character'Pos ('-')),\n                   Casing          => All_Lower_Case,\n                   Separate_Suffix => Default_Ada_Body_Suffix,\n                   Spec_Suffix     => Default_Ada_Spec_Suffix,\n@@ -4128,7 +4165,6 @@ package body Prj.Nmsc is\n \n    procedure Check_Stand_Alone_Library\n      (Project     : Project_Id;\n-      Current_Dir : String;\n       Extending   : Boolean;\n       Data        : in out Tree_Processing_Data)\n    is\n@@ -4217,19 +4253,22 @@ package body Prj.Nmsc is\n \n                   String_Element_Table.Increment_Last\n                     (Data.Tree.String_Elements);\n+\n                   Data.Tree.String_Elements.Table\n                     (String_Element_Table.Last\n                       (Data.Tree.String_Elements)) :=\n-                    (Value         => ALI_Name_Id,\n-                     Index         => 0,\n-                     Display_Value => ALI_Name_Id,\n-                     Location      =>\n-                       Data.Tree.String_Elements.Table\n-                         (Interfaces).Location,\n-                     Flag          => False,\n-                     Next          => Interface_ALIs);\n-                  Interface_ALIs := String_Element_Table.Last\n-                                      (Data.Tree.String_Elements);\n+                         (Value         => ALI_Name_Id,\n+                          Index         => 0,\n+                          Display_Value => ALI_Name_Id,\n+                          Location      =>\n+                            Data.Tree.String_Elements.Table\n+                              (Interfaces).Location,\n+                          Flag          => False,\n+                          Next          => Interface_ALIs);\n+\n+                  Interface_ALIs :=\n+                    String_Element_Table.Last\n+                      (Data.Tree.String_Elements);\n                end;\n             end Add_ALI_For;\n \n@@ -4269,79 +4308,50 @@ package body Prj.Nmsc is\n                   if Get_Mode = Ada_Only then\n                      UData := Units_Htable.Get (Data.Tree.Units_HT, Unit);\n \n-                     if UData = No_Unit_Index then\n-                        Error_Msg\n-                          (Project,\n-                           \"unknown unit %%\",\n-                           Data.Tree.String_Elements.Table\n-                             (Interfaces).Location, Data);\n+                     --  Check that the unit is part of the project\n \n-                     else\n-                        --  Check that the unit is part of the project\n-\n-                        if UData.File_Names (Impl) /= null\n-                          and then not UData.File_Names (Impl).Locally_Removed\n+                     if UData /= null\n+                       and then UData.File_Names (Impl) /= null\n+                       and then not UData.File_Names (Impl).Locally_Removed\n+                     then\n+                        if Check_Project\n+                          (UData.File_Names (Impl).Project,\n+                           Project, Extending)\n                         then\n-                           if Check_Project\n-                             (UData.File_Names (Impl).Project,\n-                              Project, Extending)\n-                           then\n-                              --  There is a body for this unit. If there is\n-                              --  no spec, we need to check that it is not a\n-                              --  subunit.\n-\n-                              if UData.File_Names (Spec) = null then\n-                                 declare\n-                                    Src_Ind : Source_File_Index;\n-\n-                                 begin\n-                                    Src_Ind :=\n-                                      Sinput.P.Load_Project_File\n-                                        (Get_Name_String (UData.File_Names\n-                                                           (Impl).Path.Name));\n-\n-                                    if Sinput.P.Source_File_Is_Subunit\n-                                        (Src_Ind)\n-                                    then\n-                                       Error_Msg\n-                                         (Project,\n-                                          \"%% is a subunit; \" &\n-                                          \"it cannot be an interface\",\n-                                          Data.Tree.\n-                                            String_Elements.Table\n-                                              (Interfaces).Location,\n-                                          Data);\n-                                    end if;\n-                                 end;\n-                              end if;\n+                           --  There is a body for this unit. If there is\n+                           --  no spec, we need to check that it is not a\n+                           --  subunit.\n \n-                              --  The unit is not a subunit, so we add the\n-                              --  ALI file for its body to the Interface ALIs.\n+                           if UData.File_Names (Spec) = null then\n+                              declare\n+                                 Src_Ind : Source_File_Index;\n \n-                              Add_ALI_For\n-                                (UData.File_Names (Impl).File);\n+                              begin\n+                                 Src_Ind :=\n+                                   Sinput.P.Load_Project_File\n+                                     (Get_Name_String (UData.File_Names\n+                                      (Impl).Path.Name));\n \n-                           else\n-                              Error_Msg\n-                                (Project,\n-                                 \"%% is not an unit of this project\",\n-                                 Data.Tree.String_Elements.Table\n-                                   (Interfaces).Location, Data);\n+                                 if Sinput.P.Source_File_Is_Subunit\n+                                   (Src_Ind)\n+                                 then\n+                                    Error_Msg\n+                                      (Project,\n+                                       \"%% is a subunit; \" &\n+                                       \"it cannot be an interface\",\n+                                       Data.Tree.\n+                                         String_Elements.Table\n+                                           (Interfaces).Location,\n+                                       Data);\n+                                 end if;\n+                              end;\n                            end if;\n \n-                        elsif UData.File_Names (Spec) /= null\n-                          and then not UData.File_Names (Spec).Locally_Removed\n-                          and then Check_Project\n-                                     (UData.File_Names (Spec).Project,\n-                                      Project, Extending)\n-\n-                        then\n-                           --  The unit is part of the project, it has a spec,\n-                           --  but no body. We add the ALI for its spec to the\n-                           --  Interface ALIs.\n+                           --  The unit is not a subunit, so we add the\n+                           --  ALI file for its body to the Interface ALIs.\n \n                            Add_ALI_For\n-                             (UData.File_Names (Spec).File);\n+                             (UData.File_Names (Impl).File);\n \n                         else\n                            Error_Msg\n@@ -4350,11 +4360,31 @@ package body Prj.Nmsc is\n                               Data.Tree.String_Elements.Table\n                                 (Interfaces).Location, Data);\n                         end if;\n+\n+                     elsif UData /= null\n+                       and then UData.File_Names (Spec) /= null\n+                       and then not UData.File_Names (Spec).Locally_Removed\n+                       and then Check_Project\n+                         (UData.File_Names (Spec).Project,\n+                          Project, Extending)\n+\n+                     then\n+                        --  The unit is part of the project, it has a spec,\n+                        --  but no body. We add the ALI for its spec to the\n+                        --  Interface ALIs.\n+\n+                        Add_ALI_For\n+                          (UData.File_Names (Spec).File);\n+\n+                     else\n+                        Error_Msg\n+                          (Project,\n+                           \"%% is not an unit of this project\",\n+                           Data.Tree.String_Elements.Table\n+                             (Interfaces).Location, Data);\n                      end if;\n \n                   else\n-                     --  Multi_Language mode\n-\n                      Next_Proj := Project.Extends;\n                      Iter := For_Each_Source (Data.Tree, Project);\n                      loop\n@@ -4413,14 +4443,14 @@ package body Prj.Nmsc is\n                         Data.Tree.String_Elements.Table\n                           (String_Element_Table.Last\n                              (Data.Tree.String_Elements)) :=\n-                          (Value         => Name_Id (Source.Dep_Name),\n-                           Index         => 0,\n-                           Display_Value => Name_Id (Source.Dep_Name),\n-                           Location      =>\n-                             Data.Tree.String_Elements.Table\n-                               (Interfaces).Location,\n-                           Flag          => False,\n-                           Next          => Interface_ALIs);\n+                               (Value         => Name_Id (Source.Dep_Name),\n+                                Index         => 0,\n+                                Display_Value => Name_Id (Source.Dep_Name),\n+                                Location      =>\n+                                  Data.Tree.String_Elements.Table\n+                                    (Interfaces).Location,\n+                                Flag          => False,\n+                                Next          => Interface_ALIs);\n \n                         Interface_ALIs :=\n                           String_Element_Table.Last\n@@ -4498,7 +4528,7 @@ package body Prj.Nmsc is\n                   Dir_Id,\n                   Path             => Project.Library_Src_Dir,\n                   Dir_Exists       => Dir_Exists,\n-                  Data        => Data,\n+                  Data             => Data,\n                   Must_Exist       => False,\n                   Create           => \"library source copy\",\n                   Location         => Lib_Src_Dir.Location,\n@@ -4622,8 +4652,8 @@ package body Prj.Nmsc is\n          if not Lib_Symbol_Policy.Default then\n             declare\n                Value : constant String :=\n-                 To_Lower\n-                   (Get_Name_String (Lib_Symbol_Policy.Value));\n+                         To_Lower\n+                           (Get_Name_String (Lib_Symbol_Policy.Value));\n \n             begin\n                --  Symbol policy must hove one of a limited number of values\n@@ -4741,7 +4771,7 @@ package body Prj.Nmsc is\n                end if;\n \n                if not Is_Regular_File\n-                 (Get_Name_String (Project.Symbol_Data.Reference))\n+                        (Get_Name_String (Project.Symbol_Data.Reference))\n                then\n                   Error_Msg_File_1 :=\n                     File_Name_Type (Lib_Ref_Symbol_File.Value);\n@@ -4779,19 +4809,23 @@ package body Prj.Nmsc is\n \n                   if Name_Len > 0 then\n                      declare\n+                        --  We do not need to pass a Directory to\n+                        --  Normalize_Pathname, since the path_information\n+                        --  already contains absolute information.\n+\n                         Symb_Path : constant String :=\n                                       Normalize_Pathname\n                                         (Get_Name_String\n                                            (Project.Object_Directory.Name) &\n                                          Name_Buffer (1 .. Name_Len),\n-                                         Directory     => Current_Dir,\n+                                         Directory     => \"/\",\n                                          Resolve_Links =>\n                                            Opt.Follow_Links_For_Files);\n                         Ref_Path  : constant String :=\n                                       Normalize_Pathname\n                                         (Get_Name_String\n                                            (Project.Symbol_Data.Reference),\n-                                         Directory     => Current_Dir,\n+                                         Directory     => \"/\",\n                                          Resolve_Links =>\n                                            Opt.Follow_Links_For_Files);\n                      begin\n@@ -4944,7 +4978,7 @@ package body Prj.Nmsc is\n          Real_Location := Project.Location;\n       end if;\n \n-      if Data.Report_Error = null then\n+      if Data.Flags.Report_Error = null then\n          Prj.Err.Error_Msg (Msg, Real_Location);\n          return;\n       end if;\n@@ -4981,14 +5015,16 @@ package body Prj.Nmsc is\n             end if;\n \n             Add_Name;\n+\n          else\n             Add (Msg (Index));\n          end if;\n+\n          Index := Index + 1;\n \n       end loop;\n \n-      Data.Report_Error\n+      Data.Flags.Report_Error\n         (Error_Buffer (1 .. Error_Last), Project, Data.Tree);\n    end Error_Msg;\n \n@@ -4998,7 +5034,6 @@ package body Prj.Nmsc is\n \n    procedure Get_Directories\n      (Project     : Project_Id;\n-      Current_Dir : String;\n       Data        : in out Tree_Processing_Data)\n    is\n       package Recursive_Dirs is new GNAT.Dynamic_HTables.Simple_HTable\n@@ -5085,7 +5120,8 @@ package body Prj.Nmsc is\n             The_Path : constant String :=\n                          Normalize_Pathname\n                            (Get_Name_String (Path),\n-                            Directory     => Current_Dir,\n+                            Directory     => Get_Name_String\n+                              (Project.Directory.Display_Name),\n                             Resolve_Links => Opt.Follow_Links_For_Dirs) &\n                          Directory_Separator;\n \n@@ -5209,6 +5245,7 @@ package body Prj.Nmsc is\n \n                   begin\n                      if Is_Directory (Path_Name) then\n+\n                         --  We have found a new subdirectory, call self\n \n                         Name_Len := Path_Name'Length;\n@@ -5459,7 +5496,7 @@ package body Prj.Nmsc is\n       --  is no sources in the project.\n \n       if (((not Source_Files.Default)\n-           and then Source_Files.Values = Nil_String)\n+             and then Source_Files.Values = Nil_String)\n           or else\n            ((not Source_Dirs.Default) and then Source_Dirs.Values = Nil_String)\n               or else\n@@ -5621,6 +5658,7 @@ package body Prj.Nmsc is\n             Flag          => False,\n             Next          => Nil_String,\n             Index         => 0));\n+\n          Project.Source_Dirs :=\n            String_Element_Table.Last (Data.Tree.String_Elements);\n \n@@ -6083,7 +6121,9 @@ package body Prj.Nmsc is\n \n    begin\n       if Suffix_Str'Length = 0 then\n+\n          --  Always valid\n+\n          return;\n \n       elsif Index (Suffix_Str, \".\") = 0 then\n@@ -6298,15 +6338,14 @@ package body Prj.Nmsc is\n    ---------------------------\n \n    procedure Find_Excluded_Sources\n-     (Project   : in out Project_Processing_Data;\n-      Data      : in out Tree_Processing_Data)\n+     (Project : in out Project_Processing_Data;\n+      Data    : in out Tree_Processing_Data)\n    is\n       Excluded_Source_List_File : constant Variable_Value :=\n                                     Util.Value_Of\n                                       (Name_Excluded_Source_List_File,\n                                        Project.Project.Decl.Attributes,\n                                        Data.Tree);\n-\n       Excluded_Sources          : Variable_Value := Util.Value_Of\n                                     (Name_Excluded_Source_Files,\n                                      Project.Project.Decl.Attributes,\n@@ -6705,21 +6744,13 @@ package body Prj.Nmsc is\n    ----------------\n \n    procedure Initialize\n-     (Data                       : out Tree_Processing_Data;\n-      Tree                       : Project_Tree_Ref;\n-      Report_Error               : Put_Line_Access;\n-      When_No_Sources            : Error_Warning;\n-      Require_Sources_Other_Lang : Boolean := True;\n-      Allow_Duplicate_Basenames  : Boolean := True;\n-      Compiler_Driver_Mandatory  : Boolean := False) is\n+     (Data  : out Tree_Processing_Data;\n+      Tree  : Project_Tree_Ref;\n+      Flags : Prj.Processing_Flags) is\n    begin\n       Files_Htable.Reset (Data.File_To_Source);\n-      Data.Tree                       := Tree;\n-      Data.Require_Sources_Other_Lang := Require_Sources_Other_Lang;\n-      Data.Report_Error               := Report_Error;\n-      Data.When_No_Sources            := When_No_Sources;\n-      Data.Allow_Duplicate_Basenames  := Allow_Duplicate_Basenames;\n-      Data.Compiler_Driver_Mandatory  := Compiler_Driver_Mandatory;\n+      Data.Tree  := Tree;\n+      Data.Flags := Flags;\n    end Initialize;\n \n    ----------\n@@ -6751,7 +6782,6 @@ package body Prj.Nmsc is\n       Source_Names_Htable.Reset      (Data.Source_Names);\n       Unit_Exceptions_Htable.Reset   (Data.Unit_Exceptions);\n       Excluded_Sources_Htable.Reset  (Data.Excluded);\n-      Object_File_Names_Htable.Reset (Data.Object_Files);\n    end Free;\n \n    -------------------------------\n@@ -6934,7 +6964,8 @@ package body Prj.Nmsc is\n                            (Canonical_Case_File_Name (Name_Id (Path)));\n \n       Name_Loc              : Name_Location :=\n-        Source_Names_Htable.Get (Project.Source_Names, File_Name);\n+                                Source_Names_Htable.Get\n+                                  (Project.Source_Names, File_Name);\n       Check_Name            : Boolean := False;\n       Alternate_Languages   : Language_List;\n       Language              : Language_Ptr;\n@@ -6951,6 +6982,7 @@ package body Prj.Nmsc is\n \n       else\n          if Name_Loc.Found then\n+\n             --  Check if it is OK to have the same file name in several\n             --  source directories.\n \n@@ -7014,14 +7046,14 @@ package body Prj.Nmsc is\n \n             --  A file name in a list must be a source of a language\n \n-            if Get_Mode = Multi_Language then\n-               if Name_Loc.Found then\n-                  Error_Msg_File_1 := File_Name;\n-                  Error_Msg\n-                    (Project.Project,\n-                     \"language unknown for {\",\n-                     Name_Loc.Location, Data);\n-               end if;\n+            if Data.Flags.Error_On_Unknown_Language\n+              and then Name_Loc.Found\n+            then\n+               Error_Msg_File_1 := File_Name;\n+               Error_Msg\n+                 (Project.Project,\n+                  \"language unknown for {\",\n+                  Name_Loc.Location, Data);\n             end if;\n \n          else\n@@ -7201,8 +7233,8 @@ package body Prj.Nmsc is\n    ----------------------------\n \n    procedure Load_Naming_Exceptions\n-     (Project  : in out Project_Processing_Data;\n-      Data     : in out Tree_Processing_Data)\n+     (Project : in out Project_Processing_Data;\n+      Data    : in out Tree_Processing_Data)\n    is\n       Source : Source_Id;\n       Iter   : Source_Iterator;\n@@ -7216,7 +7248,7 @@ package body Prj.Nmsc is\n          --  An excluded file cannot also be an exception file name\n \n          if Excluded_Sources_Htable.Get (Project.Excluded, Source.File) /=\n-           No_File_Found\n+                                                                 No_File_Found\n          then\n             Error_Msg_File_1 := Source.File;\n             Error_Msg\n@@ -7235,10 +7267,10 @@ package body Prj.Nmsc is\n            (Project.Source_Names,\n             K => Source.File,\n             E => Name_Location'\n-              (Name     => Source.File,\n-               Location => No_Location,\n-               Source   => Source,\n-               Found    => False));\n+                  (Name     => Source.File,\n+                   Location => No_Location,\n+                   Source   => Source,\n+                   Found    => False));\n \n          --  If this is an Ada exception, record in table Unit_Exceptions\n \n@@ -7274,15 +7306,49 @@ package body Prj.Nmsc is\n      (Project : in out Project_Processing_Data;\n       Data    : in out Tree_Processing_Data)\n    is\n-      Iter     : Source_Iterator;\n-      Src      : Source_Id;\n+      Object_Files : Object_File_Names_Htable.Instance;\n+      Iter : Source_Iterator;\n+      Src  : Source_Id;\n \n-      procedure Process_Sources_In_Multi_Language_Mode;\n-      --  Find all source files when in multi language mode\n+      procedure Check_Object (Src : Source_Id);\n+      --  Check if object file name of Src is already used in the project tree,\n+      --  and report an error if so.\n+\n+      procedure Check_Object_Files;\n+      --  Check that no two sources of this project have the same object file\n \n       procedure Mark_Excluded_Sources;\n       --  Mark as such the sources that are declared as excluded\n \n+      ------------------\n+      -- Check_Object --\n+      ------------------\n+\n+      procedure Check_Object (Src : Source_Id) is\n+         Source : Source_Id;\n+\n+      begin\n+         Source := Object_File_Names_Htable.Get (Object_Files, Src.Object);\n+\n+         --  We cannot just check on \"Source /= Src\", since we might have\n+         --  two different entries for the same file (and since that's\n+         --  the same file it is expected that it has the same object)\n+\n+         if Source /= No_Source\n+           and then Source.Path /= Src.Path\n+         then\n+            Error_Msg_File_1 := Src.File;\n+            Error_Msg_File_2 := Source.File;\n+            Error_Msg\n+              (Project.Project,\n+               \"{ and { have the same object file name\",\n+               No_Location, Data);\n+\n+         else\n+            Object_File_Names_Htable.Set (Object_Files, Src.Object, Src);\n+         end if;\n+      end Check_Object;\n+\n       ---------------------------\n       -- Mark_Excluded_Sources --\n       ---------------------------\n@@ -7291,6 +7357,7 @@ package body Prj.Nmsc is\n          Source   : Source_Id := No_Source;\n          Excluded : File_Found;\n          Proj     : Project_Id;\n+\n       begin\n          --  Minor optimization: if there are no excluded files, no need to\n          --  traverse the list of sources. We cannot however also check whether\n@@ -7299,7 +7366,7 @@ package body Prj.Nmsc is\n          --  them in any case.\n \n          if Excluded_Sources_Htable.Get_First (Project.Excluded) /=\n-           No_File_Found\n+                                                             No_File_Found\n          then\n             Proj := Project.Project;\n             while Proj /= No_Project loop\n@@ -7335,7 +7402,6 @@ package body Prj.Nmsc is\n          --  the source file\n \n          Excluded := Excluded_Sources_Htable.Get_First (Project.Excluded);\n-\n          while Excluded /= No_File_Found loop\n             if not Excluded.Found then\n \n@@ -7366,129 +7432,77 @@ package body Prj.Nmsc is\n          end loop;\n       end Mark_Excluded_Sources;\n \n-      --------------------------------------------\n-      -- Process_Sources_In_Multi_Language_Mode --\n-      --------------------------------------------\n+      ------------------------\n+      -- Check_Object_Files --\n+      ------------------------\n \n-      procedure Process_Sources_In_Multi_Language_Mode is\n-         Iter : Source_Iterator;\n+      procedure Check_Object_Files is\n+         Iter    : Source_Iterator;\n+         Src_Id  : Source_Id;\n+         Src_Ind : Source_File_Index;\n \n       begin\n-         --  Check that two sources of this project do not have the same object\n-         --  file name.\n-\n-         Check_Object_File_Names : declare\n-            Src_Id      : Source_Id;\n-\n-            procedure Check_Object (Src : Source_Id);\n-            --  Check if object file name of the current source is already in\n-            --  hash table Object_File_Names. If it is, report an error. If it\n-            --  is not, put it there with the file name of the current source.\n-\n-            ------------------\n-            -- Check_Object --\n-            ------------------\n-\n-            procedure Check_Object (Src : Source_Id) is\n-               Source : Source_Id;\n-            begin\n-               Source := Object_File_Names_Htable.Get\n-                 (Project.Object_Files, Src.Object);\n-\n-               --  We cannot just check on \"Source /= Src\", since we might have\n-               --  two different entries for the same file (and since that's\n-               --  the same file it is expected that it has the same object)\n+         Iter := For_Each_Source (Data.Tree);\n+         loop\n+            Src_Id := Prj.Element (Iter);\n+            exit when Src_Id = No_Source;\n \n-               if Source /= No_Source\n-                 and then Source.Path /= Src.Path\n-               then\n-                  Error_Msg_File_1 := Src.File;\n-                  Error_Msg_File_2 := Source.File;\n-                  Error_Msg\n-                    (Project.Project,\n-                     \"{ and { have the same object file name\",\n-                     No_Location, Data);\n+            if Is_Compilable (Src_Id)\n+              and then Src_Id.Language.Config.Object_Generated\n+              and then Is_Extending (Project.Project, Src_Id.Project)\n+            then\n+               if Src_Id.Unit = No_Unit_Index then\n+                  if Src_Id.Kind = Impl then\n+                     Check_Object (Src_Id);\n+                  end if;\n \n                else\n-                  Object_File_Names_Htable.Set\n-                    (Project.Object_Files, Src.Object, Src);\n-               end if;\n-            end Check_Object;\n-\n-         --  Start of processing for Check_Object_File_Names\n+                  case Src_Id.Kind is\n+                     when Spec =>\n+                        if Other_Part (Src_Id) = No_Source then\n+                           Check_Object (Src_Id);\n+                        end if;\n \n-         begin\n-            Iter := For_Each_Source (Data.Tree);\n-            loop\n-               Src_Id := Prj.Element (Iter);\n-               exit when Src_Id = No_Source;\n+                     when Sep =>\n+                        null;\n \n-               if Is_Compilable (Src_Id)\n-                 and then Src_Id.Language.Config.Object_Generated\n-                 and then Is_Extending (Project.Project, Src_Id.Project)\n-               then\n-                  if Src_Id.Unit = No_Unit_Index then\n-                     if Src_Id.Kind = Impl then\n-                        Check_Object (Src_Id);\n-                     end if;\n+                     when Impl =>\n+                        if Other_Part (Src_Id) /= No_Source then\n+                           Check_Object (Src_Id);\n \n-                  else\n-                     case Src_Id.Kind is\n-                        when Spec =>\n-                           if Other_Part (Src_Id) = No_Source then\n-                              Check_Object (Src_Id);\n-                           end if;\n-\n-                        when Sep =>\n-                           null;\n+                        else\n+                           --  Check if it is a subunit\n \n-                        when Impl =>\n-                           if Other_Part (Src_Id) /= No_Source then\n-                              Check_Object (Src_Id);\n+                           Src_Ind := Sinput.P.Load_Project_File\n+                             (Get_Name_String (Src_Id.Path.Name));\n \n+                           if Sinput.P.Source_File_Is_Subunit (Src_Ind) then\n+                              Override_Kind (Src_Id, Sep);\n                            else\n-                              --  Check if it is a subunit\n-\n-                              declare\n-                                 Src_Ind : constant Source_File_Index :=\n-                                             Sinput.P.Load_Project_File\n-                                               (Get_Name_String\n-                                                 (Src_Id.Path.Name));\n-                              begin\n-                                 if Sinput.P.Source_File_Is_Subunit\n-                                      (Src_Ind)\n-                                 then\n-                                    Override_Kind (Src_Id, Sep);\n-                                 else\n-                                    Check_Object (Src_Id);\n-                                 end if;\n-                              end;\n+                              Check_Object (Src_Id);\n                            end if;\n-                     end case;\n-                  end if;\n+                        end if;\n+                  end case;\n                end if;\n+            end if;\n \n-               Next (Iter);\n-            end loop;\n-         end Check_Object_File_Names;\n-      end Process_Sources_In_Multi_Language_Mode;\n+            Next (Iter);\n+         end loop;\n+      end Check_Object_Files;\n \n    --  Start of processing for Look_For_Sources\n \n    begin\n       Find_Excluded_Sources (Project, Data);\n \n-      if (Get_Mode = Ada_Only\n-          and then Is_A_Language (Project.Project, Name_Ada))\n-        or else (Get_Mode = Multi_Language\n-                  and then Project.Project.Languages /= No_Language_Index)\n-      then\n+      if Project.Project.Languages /= No_Language_Index then\n          Load_Naming_Exceptions (Project, Data);\n          Find_Sources (Project, Data);\n          Mark_Excluded_Sources;\n-\n-         Process_Sources_In_Multi_Language_Mode;\n+         Check_Object_Files;\n       end if;\n+\n+      Object_File_Names_Htable.Reset (Object_Files);\n    end Look_For_Sources;\n \n    ------------------\n@@ -7579,7 +7593,7 @@ package body Prj.Nmsc is\n       Continuation : Boolean := False)\n    is\n    begin\n-      case Data.When_No_Sources is\n+      case Data.Flags.When_No_Sources is\n          when Silent =>\n             null;\n \n@@ -7591,7 +7605,7 @@ package body Prj.Nmsc is\n                        \" sources in this project\";\n \n             begin\n-               Error_Msg_Warn := Data.When_No_Sources = Warning;\n+               Error_Msg_Warn := Data.Flags.When_No_Sources = Warning;\n \n                if Continuation then\n                   Error_Msg (Project, \"\\\" & Msg, Location, Data);\n@@ -7626,4 +7640,46 @@ package body Prj.Nmsc is\n \n       Write_Line (\"end Source_Dirs.\");\n    end Show_Source_Dirs;\n+\n+   ---------------------------\n+   -- Process_Naming_Scheme --\n+   ---------------------------\n+\n+   procedure Process_Naming_Scheme\n+     (Tree         : Project_Tree_Ref;\n+      Root_Project : Project_Id;\n+      Flags        : Processing_Flags)\n+   is\n+      procedure Recursive_Check\n+        (Project : Project_Id;\n+         Data    : in out Tree_Processing_Data);\n+      --  Check_Naming_Scheme for the project\n+\n+      ---------------------\n+      -- Recursive_Check --\n+      ---------------------\n+\n+      procedure Recursive_Check\n+        (Project : Project_Id;\n+         Data    : in out Tree_Processing_Data) is\n+      begin\n+         if Verbose_Mode then\n+            Write_Str (\"Processing_Naming_Scheme for project \"\"\");\n+            Write_Str (Get_Name_String (Project.Name));\n+            Write_Line (\"\"\"\");\n+         end if;\n+\n+         Prj.Nmsc.Check (Project, Data);\n+      end Recursive_Check;\n+\n+      procedure Check_All_Projects is new\n+        For_Every_Project_Imported (Tree_Processing_Data, Recursive_Check);\n+\n+      Data : Tree_Processing_Data;\n+   begin\n+      Initialize (Data, Tree => Tree, Flags => Flags);\n+      Check_All_Projects (Root_Project, Data, Imported_First => True);\n+      Free (Data);\n+   end Process_Naming_Scheme;\n+\n end Prj.Nmsc;"}, {"sha": "eec6289e5031000dfa2a987abb1149a57e5206fc", "filename": "gcc/ada/prj-nmsc.ads", "status": "modified", "additions": 13, "deletions": 79, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-nmsc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-nmsc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.ads?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -23,87 +23,21 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Perform various checks on a project and find all its source files\n-\n-with GNAT.Dynamic_HTables;\n+--  Find source dirs and source files for a project\n \n private package Prj.Nmsc is\n \n-   type Tree_Processing_Data is private;\n-   --  Temporary data which is needed while parsing a project. It does not need\n-   --  to be kept in memory once a project has been fully loaded, but is\n-   --  necessary while performing consistency checks (duplicate sources,...)\n-   --  This data must be initialized before processing any project, and the\n-   --  same data is used for processing all projects in the tree.\n-\n-   procedure Initialize\n-     (Data                       : out Tree_Processing_Data;\n-      Tree                       : Project_Tree_Ref;\n-      Report_Error               : Put_Line_Access;\n-      When_No_Sources            : Error_Warning;\n-      Require_Sources_Other_Lang : Boolean := True;\n-      Allow_Duplicate_Basenames  : Boolean := True;\n-      Compiler_Driver_Mandatory  : Boolean := False);\n-   --  Initialize Data\n-   --  If Allow_Duplicate_Basenames, then files with the same base names are\n-   --  authorized within a project for source-based languages (never for unit\n-   --  based languages)\n-   --  If Compiler_Driver_Mandatory is true, then a Compiler.Driver attribute\n-   --  for each language must be defined, or we will not look for its source\n-   --  files.\n-   --  When_No_Sources indicates what should be done when no sources of a\n-   --  language are found in a project where this language is declared.\n-   --  If Require_Sources_Other_Lang is true, then all languages must have at\n-   --  least one source file, or an error is reported via When_No_Sources. If\n-   --  it is false, this is only required for Ada (and only if it is a language\n-   --  of the project).\n-   --  If Report_Error is null, use the standard error reporting mechanism\n-   --  (Errout). Otherwise, report errors using Report_Error.\n-\n-   procedure Free (Data : in out Tree_Processing_Data);\n-   --  Free the memory occupied by Data\n-\n-   procedure Check\n-     (Project        : Project_Id;\n-      Current_Dir    : String;\n-      Data           : in out Tree_Processing_Data);\n-   --  Perform consistency and semantic checks on a project, starting from the\n-   --  project tree parsed from the .gpr file. This procedure interprets the\n-   --  various case statements in the project based on the current environment\n-   --  variables (the \"scenario\"). After checking the validity of the naming\n-   --  scheme, it searches for all the source files of the project. The result\n-   --  of this procedure is a filled-in data structure for Project_Id which\n-   --  contains all the information about the project. This information is only\n-   --  valid while the scenario variables are preserved. If the current mode\n-   --  is Ada_Only, this procedure will only search Ada sources, but in multi-\n-   --  language mode it will look for sources for all supported languages.\n-   --\n-   --  Current_Dir is for optimization purposes only, avoiding system calls to\n-   --  query it.\n-\n-private\n-\n-   package Files_Htable is new GNAT.Dynamic_HTables.Simple_HTable\n-     (Header_Num => Header_Num,\n-      Element    => Source_Id,\n-      No_Element => No_Source,\n-      Key        => File_Name_Type,\n-      Hash       => Hash,\n-      Equal      => \"=\");\n-   --  Mapping from base file names to Source_Id (containing full info about\n-   --  the source)\n-\n-   type Tree_Processing_Data is record\n-      Tree                      : Project_Tree_Ref;\n-      --  The data applies when parsing this tree\n-\n-      File_To_Source            : Files_Htable.Instance;\n+   procedure Process_Naming_Scheme\n+     (Tree         : Project_Tree_Ref;\n+      Root_Project : Project_Id;\n+      Flags        : Processing_Flags);\n+   --  Perform consistency and semantic checks on all the projects in the tree.\n+   --  This procedure interprets the various case statements in the project\n+   --  based on the current environment variables (the \"scenario\"). After\n+   --  checking the validity of the naming scheme, it searches for all the\n+   --  source files of the project. The result of this procedure is a filled-in\n+   --  data structure for Project_Id which contains all the information about\n+   --  the project. This information is only valid while the scenario variables\n+   --  are preserved.\n \n-      Require_Sources_Other_Lang : Boolean;\n-      Report_Error               : Put_Line_Access;\n-      When_No_Sources            : Error_Warning;\n-      Allow_Duplicate_Basenames  : Boolean := True;\n-      Compiler_Driver_Mandatory  : Boolean := False;\n-      --  See comments for Initialize\n-   end record;\n end Prj.Nmsc;"}, {"sha": "83b0549b293c6bf5df3014157f4bf6b772a8af74", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -44,8 +44,7 @@ package body Prj.Pars is\n       Project           : out Project_Id;\n       Project_File_Name : String;\n       Packages_To_Check : String_List_Access := All_Packages;\n-      When_No_Sources   : Error_Warning := Error;\n-      Report_Error      : Put_Line_Access := null;\n+      Flags             : Processing_Flags;\n       Reset_Tree        : Boolean := True)\n    is\n       Project_Node      : Project_Node_Id := Empty_Node;\n@@ -90,15 +89,11 @@ package body Prj.Pars is\n                Allow_Automatic_Generation => False,\n                Automatically_Generated    => Automatically_Generated,\n                Config_File_Path           => Config_File_Path,\n-               Report_Error               => Report_Error,\n+               Flags                      => Flags,\n                Normalized_Hostname        => \"\",\n-               Compiler_Driver_Mandatory  => False,\n-               Allow_Duplicate_Basenames  => False,\n-               Require_Sources_Other_Lang => False,\n                On_Load_Config             =>\n                  Add_Default_GNAT_Naming_Scheme'Access,\n-               Reset_Tree                 => Reset_Tree,\n-               When_No_Sources            => When_No_Sources);\n+               Reset_Tree                 => Reset_Tree);\n \n             Success := The_Project /= No_Project;\n "}, {"sha": "01caff93c19b7ed35886b829d79aed64f26e5d9d", "filename": "gcc/ada/prj-pars.ads", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-pars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-pars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.ads?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -35,8 +35,7 @@ package Prj.Pars is\n       Project           : out Project_Id;\n       Project_File_Name : String;\n       Packages_To_Check : String_List_Access := All_Packages;\n-      When_No_Sources   : Error_Warning := Error;\n-      Report_Error      : Prj.Put_Line_Access := null;\n+      Flags             : Processing_Flags;\n       Reset_Tree        : Boolean := True);\n    --  Parse and process a project files and all its imported project files, in\n    --  the project tree In_Tree.\n@@ -56,9 +55,6 @@ package Prj.Pars is\n    --  produces an error. For other packages, an unknown attribute produces a\n    --  warning.\n    --\n-   --  When_No_Sources indicates what should be done when no sources are found\n-   --  in a project for a specified or implied language.\n-   --\n    --  When Reset_Tree is True, all the project data are removed from the\n    --  project table before processing.\n "}, {"sha": "9115952e3dcb202abc9524a8fd9d273770bd8c06", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -1110,8 +1110,8 @@ package body Prj.Part is\n          Write_Eol;\n       end if;\n \n-      Project_Directory := Path_Name_Type\n-        (Get_Directory (File_Name_Type (Normed_Path_Name)));\n+      Project_Directory :=\n+        Path_Name_Type (Get_Directory (File_Name_Type (Normed_Path_Name)));\n \n       --  Is there any imported project?\n "}, {"sha": "dbf64414de3973e7415adb95c95455ba8498701a", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 21, "deletions": 98, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -79,12 +79,7 @@ package body Prj.Proc is\n    procedure Check\n      (In_Tree                    : Project_Tree_Ref;\n       Project                    : Project_Id;\n-      Current_Dir                : String;\n-      Report_Error               : Put_Line_Access;\n-      When_No_Sources            : Error_Warning;\n-      Require_Sources_Other_Lang : Boolean;\n-      Compiler_Driver_Mandatory  : Boolean;\n-      Allow_Duplicate_Basenames  : Boolean);\n+      Flags                      : Processing_Flags);\n    --  Set all projects to not checked, then call Recursive_Check for the\n    --  main project Project. Project is set to No_Project if errors occurred.\n    --  Current_Dir is for optimization purposes, avoiding extra system calls.\n@@ -141,7 +136,7 @@ package body Prj.Proc is\n    procedure Recursive_Process\n      (In_Tree                : Project_Tree_Ref;\n       Project                : out Project_Id;\n-      Report_Error           : Put_Line_Access;\n+      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Extended_By            : Project_Id);\n@@ -152,18 +147,6 @@ package body Prj.Proc is\n    --  extended project, if any. Then process the declarative items of the\n    --  project.\n \n-   type Recursive_Check_Data is record\n-      Current_Dir               : String_Access;\n-      Proc_Data                 : Tree_Processing_Data;\n-   end record;\n-   --  Data passed to Recursive_Check\n-   --  Current_Dir is for optimization purposes, avoiding extra system calls.\n-\n-   procedure Recursive_Check\n-     (Project : Project_Id;\n-      Data    : in out Recursive_Check_Data);\n-   --  Check_Naming_Scheme for the project\n-\n    ---------\n    -- Add --\n    ---------\n@@ -283,33 +266,10 @@ package body Prj.Proc is\n    procedure Check\n      (In_Tree                    : Project_Tree_Ref;\n       Project                    : Project_Id;\n-      Current_Dir                : String;\n-      Report_Error               : Put_Line_Access;\n-      When_No_Sources            : Error_Warning;\n-      Require_Sources_Other_Lang : Boolean;\n-      Compiler_Driver_Mandatory  : Boolean;\n-      Allow_Duplicate_Basenames  : Boolean)\n+      Flags                      : Processing_Flags)\n    is\n-      Dir : aliased String := Current_Dir;\n-\n-      procedure Check_All_Projects is new\n-        For_Every_Project_Imported (Recursive_Check_Data, Recursive_Check);\n-\n-      Data : Recursive_Check_Data;\n-\n    begin\n-      Data.Current_Dir               := Dir'Unchecked_Access;\n-\n-      Initialize\n-        (Data.Proc_Data,\n-         Tree                       => In_Tree,\n-         Allow_Duplicate_Basenames  => Allow_Duplicate_Basenames,\n-         Require_Sources_Other_Lang => Require_Sources_Other_Lang,\n-         Compiler_Driver_Mandatory  => Compiler_Driver_Mandatory,\n-         When_No_Sources            => When_No_Sources,\n-         Report_Error               => Report_Error);\n-\n-      Check_All_Projects (Project, Data, Imported_First => True);\n+      Process_Naming_Scheme (In_Tree, Project, Flags);\n \n       --  Set the Other_Part field for the units\n \n@@ -342,8 +302,6 @@ package body Prj.Proc is\n             Next (Iter);\n          end loop;\n       end;\n-\n-      Free (Data.Proc_Data);\n    end Check;\n \n    -------------------------------\n@@ -1244,10 +1202,8 @@ package body Prj.Proc is\n       Success                : out Boolean;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n-      Report_Error           : Put_Line_Access;\n-      When_No_Sources        : Error_Warning := Error;\n-      Reset_Tree             : Boolean       := True;\n-      Current_Dir            : String        := \"\")\n+      Flags                  : Processing_Flags;\n+      Reset_Tree             : Boolean       := True)\n    is\n    begin\n       Process_Project_Tree_Phase_1\n@@ -1256,7 +1212,7 @@ package body Prj.Proc is\n          Success                => Success,\n          From_Project_Node      => From_Project_Node,\n          From_Project_Node_Tree => From_Project_Node_Tree,\n-         Report_Error           => Report_Error,\n+         Flags                  => Flags,\n          Reset_Tree             => Reset_Tree);\n \n       if Project_Qualifier_Of (From_Project_Node, From_Project_Node_Tree) /=\n@@ -1268,12 +1224,7 @@ package body Prj.Proc is\n             Success                    => Success,\n             From_Project_Node          => From_Project_Node,\n             From_Project_Node_Tree     => From_Project_Node_Tree,\n-            Report_Error               => Report_Error,\n-            When_No_Sources            => When_No_Sources,\n-            Current_Dir                => Current_Dir,\n-            Require_Sources_Other_Lang => False,\n-            Compiler_Driver_Mandatory  => True,\n-            Allow_Duplicate_Basenames  => False);\n+            Flags                      => Flags);\n       end if;\n    end Process;\n \n@@ -2287,7 +2238,7 @@ package body Prj.Proc is\n       Success                : out Boolean;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n-      Report_Error           : Put_Line_Access;\n+      Flags                  : Processing_Flags;\n       Reset_Tree             : Boolean := True)\n    is\n    begin\n@@ -2306,7 +2257,7 @@ package body Prj.Proc is\n       Recursive_Process\n         (Project                => Project,\n          In_Tree                => In_Tree,\n-         Report_Error           => Report_Error,\n+         Flags                  => Flags,\n          From_Project_Node      => From_Project_Node,\n          From_Project_Node_Tree => From_Project_Node_Tree,\n          Extended_By            => No_Project);\n@@ -2327,12 +2278,7 @@ package body Prj.Proc is\n       Success                    : out Boolean;\n       From_Project_Node          : Project_Node_Id;\n       From_Project_Node_Tree     : Project_Node_Tree_Ref;\n-      Report_Error               : Put_Line_Access;\n-      When_No_Sources            : Error_Warning := Error;\n-      Current_Dir                : String;\n-      Require_Sources_Other_Lang : Boolean;\n-      Compiler_Driver_Mandatory  : Boolean;\n-      Allow_Duplicate_Basenames  : Boolean)\n+      Flags                      : Processing_Flags)\n    is\n       Obj_Dir    : Path_Name_Type;\n       Extending  : Project_Id;\n@@ -2345,12 +2291,7 @@ package body Prj.Proc is\n       Success := True;\n \n       if Project /= No_Project then\n-         Check (In_Tree, Project, Current_Dir,\n-                When_No_Sources            => When_No_Sources,\n-                Report_Error               => Report_Error,\n-                Require_Sources_Other_Lang => Require_Sources_Other_Lang,\n-                Compiler_Driver_Mandatory  => Compiler_Driver_Mandatory,\n-                Allow_Duplicate_Basenames  => Allow_Duplicate_Basenames);\n+         Check (In_Tree, Project, Flags);\n       end if;\n \n       --  If main project is an extending all project, set the object\n@@ -2400,13 +2341,13 @@ package body Prj.Proc is\n                      if Extending2.Virtual then\n                         Error_Msg_Name_1 := Prj.Project.Display_Name;\n \n-                        if Report_Error = null then\n+                        if Flags.Report_Error = null then\n                            Error_Msg\n                              (\"project %% cannot be extended by a virtual\" &\n                               \" project with the same object directory\",\n                               Prj.Project.Location);\n                         else\n-                           Report_Error\n+                           Flags.Report_Error\n                              (\"project \"\"\" &\n                               Get_Name_String (Error_Msg_Name_1) &\n                               \"\"\" cannot be extended by a virtual \" &\n@@ -2418,7 +2359,7 @@ package body Prj.Proc is\n                         Error_Msg_Name_1 := Extending2.Display_Name;\n                         Error_Msg_Name_2 := Prj.Project.Display_Name;\n \n-                        if Report_Error = null then\n+                        if Flags.Report_Error = null then\n                            Error_Msg\n                              (\"project %% cannot extend project %%\",\n                               Extending2.Location);\n@@ -2427,13 +2368,13 @@ package body Prj.Proc is\n                               Extending2.Location);\n \n                         else\n-                           Report_Error\n+                           Flags.Report_Error\n                              (\"project \"\"\" &\n                               Get_Name_String (Error_Msg_Name_1) &\n                               \"\"\" cannot extend project \"\"\" &\n                               Get_Name_String (Error_Msg_Name_2) & \"\"\"\",\n                               Project, In_Tree);\n-                           Report_Error\n+                           Flags.Report_Error\n                              (\"they share the same object directory\",\n                               Project, In_Tree);\n                         end if;\n@@ -2456,32 +2397,14 @@ package body Prj.Proc is\n             (Warning_Mode /= Treat_As_Error or else Warnings_Detected = 0);\n    end Process_Project_Tree_Phase_2;\n \n-   ---------------------\n-   -- Recursive_Check --\n-   ---------------------\n-\n-   procedure Recursive_Check\n-     (Project : Project_Id;\n-      Data    : in out Recursive_Check_Data)\n-   is\n-   begin\n-      if Verbose_Mode then\n-         Write_Str (\"Checking project file \"\"\");\n-         Write_Str (Get_Name_String (Project.Name));\n-         Write_Line (\"\"\"\");\n-      end if;\n-\n-      Prj.Nmsc.Check (Project, Data.Current_Dir.all, Data.Proc_Data);\n-   end Recursive_Check;\n-\n    -----------------------\n    -- Recursive_Process --\n    -----------------------\n \n    procedure Recursive_Process\n      (In_Tree                : Project_Tree_Ref;\n       Project                : out Project_Id;\n-      Report_Error           : Put_Line_Access;\n+      Flags                  : Processing_Flags;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Extended_By            : Project_Id)\n@@ -2522,7 +2445,7 @@ package body Prj.Proc is\n                Recursive_Process\n                  (In_Tree                => In_Tree,\n                   Project                => New_Project,\n-                  Report_Error           => Report_Error,\n+                  Flags                  => Flags,\n                   From_Project_Node      =>\n                     Project_Node_Of\n                       (With_Clause, From_Project_Node_Tree),\n@@ -2664,7 +2587,7 @@ package body Prj.Proc is\n             Recursive_Process\n               (In_Tree                => In_Tree,\n                Project                => Project.Extends,\n-               Report_Error           => Report_Error,\n+               Flags                  => Flags,\n                From_Project_Node      => Extended_Project_Of\n                                           (Declaration_Node,\n                                            From_Project_Node_Tree),\n@@ -2674,7 +2597,7 @@ package body Prj.Proc is\n             Process_Declarative_Items\n               (Project                => Project,\n                In_Tree                => In_Tree,\n-               Report_Error           => Report_Error,\n+               Report_Error           => Flags.Report_Error,\n                From_Project_Node      => From_Project_Node,\n                From_Project_Node_Tree => From_Project_Node_Tree,\n                Pkg                    => No_Package,"}, {"sha": "4231b4ef961d3b7dd13590407a4cb318271b5226", "filename": "gcc/ada/prj-proc.ads", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-proc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-proc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.ads?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -37,7 +37,7 @@ package Prj.Proc is\n       Success                : out Boolean;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n-      Report_Error           : Put_Line_Access;\n+      Flags                  : Prj.Processing_Flags;\n       Reset_Tree             : Boolean := True);\n    --  Process a project tree (ie the direct resulting of parsing a .gpr file)\n    --  based on the current scenario variables.\n@@ -48,12 +48,6 @@ package Prj.Proc is\n    --  needed to automatically generate a configuration file. This first phase\n    --  of the processing does not require a configuration file.\n    --\n-   --  If Report_Error is null, use the error reporting mechanism. Otherwise,\n-   --  report errors using Report_Error.\n-   --\n-   --  When_No_Sources indicates what should be done when no sources are found\n-   --  in a project for a specified or implied language.\n-   --\n    --  When Reset_Tree is True, all the project data are removed from the\n    --  project table before processing.\n \n@@ -63,35 +57,22 @@ package Prj.Proc is\n       Success                    : out Boolean;\n       From_Project_Node          : Project_Node_Id;\n       From_Project_Node_Tree     : Project_Node_Tree_Ref;\n-      Report_Error               : Put_Line_Access;\n-      When_No_Sources            : Error_Warning := Error;\n-      Current_Dir                : String;\n-      Require_Sources_Other_Lang : Boolean;\n-      Compiler_Driver_Mandatory  : Boolean;\n-      Allow_Duplicate_Basenames  : Boolean);\n+      Flags                      : Processing_Flags);\n    --  Perform the second phase of the processing, filling the rest of the\n    --  project with the information extracted from the project tree. This phase\n    --  requires that the configuration file has already been parsed (in fact\n    --  we currently assume that the contents of the configuration file has\n    --  been included in Project through Confgpr.Apply_Config_File). The\n    --  parameters are the same as for phase_1, with the addition of:\n-   --\n-   --  Current_Dir is for optimization purposes, avoiding extra system calls.\n-   --\n-   --  If Allow_Duplicate_Basenames, then files with the same base names are\n-   --  authorized within a project for source-based languages (never for unit\n-   --  based languages)\n \n    procedure Process\n      (In_Tree                : Project_Tree_Ref;\n       Project                : out Project_Id;\n       Success                : out Boolean;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n-      Report_Error           : Put_Line_Access;\n-      When_No_Sources        : Error_Warning := Error;\n-      Reset_Tree             : Boolean := True;\n-      Current_Dir            : String := \"\");\n+      Flags                  : Processing_Flags;\n+      Reset_Tree             : Boolean       := True);\n    --  Performs the two phases of the processing\n \n end Prj.Proc;"}, {"sha": "e85078b3af99c5e75269fa992e15db3901946b32", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -24,7 +24,7 @@\n ------------------------------------------------------------------------------\n \n with Ada.Unchecked_Deallocation;\n-with Osint;                        use Osint;\n+with Osint;   use Osint;\n with Prj.Err;\n \n package body Prj.Tree is\n@@ -97,8 +97,7 @@ package body Prj.Tree is\n    begin\n       pragma Assert\n         (Present (To)\n-          and then\n-         In_Tree.Project_Nodes.Table (To).Kind /= N_Comment);\n+          and then In_Tree.Project_Nodes.Table (To).Kind /= N_Comment);\n \n       Zone := In_Tree.Project_Nodes.Table (To).Comments;\n \n@@ -109,25 +108,25 @@ package body Prj.Tree is\n          Project_Node_Table.Increment_Last (In_Tree.Project_Nodes);\n          In_Tree.Project_Nodes.Table\n            (Project_Node_Table.Last (In_Tree.Project_Nodes)) :=\n-           (Kind             => N_Comment_Zones,\n-            Qualifier        => Unspecified,\n-            Expr_Kind        => Undefined,\n-            Location         => No_Location,\n-            Directory        => No_Path,\n-            Variables        => Empty_Node,\n-            Packages         => Empty_Node,\n-            Pkg_Id           => Empty_Package,\n-            Name             => No_Name,\n-            Src_Index        => 0,\n-            Path_Name        => No_Path,\n-            Value            => No_Name,\n-            Field1           => Empty_Node,\n-            Field2           => Empty_Node,\n-            Field3           => Empty_Node,\n-            Field4           => Empty_Node,\n-            Flag1            => False,\n-            Flag2            => False,\n-            Comments         => Empty_Node);\n+           (Kind      => N_Comment_Zones,\n+            Qualifier => Unspecified,\n+            Expr_Kind => Undefined,\n+            Location  => No_Location,\n+            Directory => No_Path,\n+            Variables => Empty_Node,\n+            Packages  => Empty_Node,\n+            Pkg_Id    => Empty_Package,\n+            Name      => No_Name,\n+            Src_Index => 0,\n+            Path_Name => No_Path,\n+            Value     => No_Name,\n+            Field1    => Empty_Node,\n+            Field2    => Empty_Node,\n+            Field3    => Empty_Node,\n+            Field4    => Empty_Node,\n+            Flag1     => False,\n+            Flag2     => False,\n+            Comments  => Empty_Node);\n \n          Zone := Project_Node_Table.Last (In_Tree.Project_Nodes);\n          In_Tree.Project_Nodes.Table (To).Comments := Zone;"}, {"sha": "591c3dba272e42cefdee470995303a6f2dfd22bd", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 35, "deletions": 34, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -294,9 +294,8 @@ package Prj.Tree is\n      (Node    : Project_Node_Id;\n       In_Tree : Project_Node_Tree_Ref) return Path_Name_Type;\n    pragma Inline (Directory_Of);\n-   --  Only valid for N_Project nodes.\n-   --  Returns the directory that contains the project file. This always\n-   --  ends with a directory separator\n+   --  Returns the directory that contains the project file. This always ends\n+   --  with a directory separator. Only valid for N_Project nodes.\n \n    function Expression_Kind_Of\n      (Node    : Project_Node_Id;\n@@ -441,8 +440,7 @@ package Prj.Tree is\n      (Node    : Project_Node_Id;\n       In_Tree : Project_Node_Tree_Ref) return Project_Node_Id;\n    pragma Inline (Project_Of_Renamed_Package_Of);\n-   --  Only valid for N_Package_Declaration nodes.\n-   --  May return Empty_Node.\n+   --  Only valid for N_Package_Declaration nodes. May return Empty_Node.\n \n    function Next_Package_In_Project\n      (Node    : Project_Node_Id;\n@@ -601,8 +599,8 @@ package Prj.Tree is\n    -- Set Procedures --\n    --------------------\n \n-   --  The following procedures are part of the abstract interface of\n-   --  the Project File tree.\n+   --  The following procedures are part of the abstract interface of the\n+   --  Project File tree.\n \n    --  Each Set_* procedure is valid only for the same Project_Node_Kind\n    --  nodes as the corresponding query function above.\n@@ -971,6 +969,7 @@ package Prj.Tree is\n \n          Pkg_Id : Package_Node_Id := Empty_Package;\n          --  Only used for N_Package_Declaration\n+         --\n          --  The component Pkg_Id is an entry into the table Package_Attributes\n          --  (in Prj.Attr). It is used to indicate all the attributes of the\n          --  package with their characteristics.\n@@ -1006,38 +1005,45 @@ package Prj.Tree is\n \n          Flag1 : Boolean := False;\n          --  This flag is significant only for:\n+         --\n          --    N_Attribute_Declaration and N_Attribute_Reference\n-         --      It indicates for an associative array attribute, that the\n+         --      Indicates for an associative array attribute, that the\n          --      index is case insensitive.\n-         --    N_Comment - it indicates that the comment is preceded by an\n-         --                empty line.\n-         --    N_Project - it indicates that there are comments in the project\n-         --                source that cannot be kept in the tree.\n+         --\n+         --    N_Comment\n+         --      Indicates that the comment is preceded by an empty line.\n+         --\n+         --    N_Project\n+         --      Indicates that there are comments in the project source that\n+         --      cannot be kept in the tree.\n+         --\n          --    N_Project_Declaration\n-         --              - it indicates that there are unkept comments in the\n-         --                project.\n+         --      Indicates that there are unkept comments in the project.\n+         --\n          --    N_With_Clause\n-         --              - it indicates that this is not the last with in a\n-         --                with clause. It is set for \"A\", but not for \"B\" in\n-         --                    with \"B\";\n-         --                  and\n-         --                    with \"A\", \"B\";\n+         --      Indicates that this is not the last with in a with clause.\n+         --      Set for \"A\", but not for \"B\" in with \"B\"; and with \"A\", \"B\";\n \n          Flag2 : Boolean := False;\n          --  This flag is significant only for:\n-         --    N_Project - it indicates that the project \"extends all\" another\n-         --                project.\n-         --    N_Comment - it indicates that the comment is followed by an\n-         --                empty line.\n+         --\n+         --    N_Project\n+         --      Indicates that the project \"extends all\" another project.\n+         --\n+         --    N_Comment\n+         --      Indicates that the comment is followed by an empty line.\n+         --\n          --    N_With_Clause\n-         --              - it indicates that the originally imported project\n-         --                is an extending all project.\n+         --      Indicates that the originally imported project is an extending\n+         --      all project.\n \n          Comments : Project_Node_Id := Empty_Node;\n          --  For nodes other that N_Comment_Zones or N_Comment, designates the\n          --  comment zones associated with the node.\n-         --  for N_Comment_Zones, designates the comment after the \"end\" of\n+         --\n+         --  For N_Comment_Zones, designates the comment after the \"end\" of\n          --  the construct.\n+         --\n          --  For N_Comment, designates the next comment, if any.\n \n       end record;\n@@ -1256,15 +1262,14 @@ package Prj.Tree is\n       --    --  Flag2:     comment is followed by an empty line\n       --    --  Comments:  next comment\n \n-      package Project_Node_Table is\n-        new GNAT.Dynamic_Tables\n+      package Project_Node_Table is new\n+        GNAT.Dynamic_Tables\n           (Table_Component_Type => Project_Node_Record,\n            Table_Index_Type     => Project_Node_Id,\n            Table_Low_Bound      => First_Node_Id,\n            Table_Initial        => Project_Nodes_Initial,\n            Table_Increment      => Project_Nodes_Increment);\n-      --  This table contains the syntactic tree of project data\n-      --  from project files.\n+      --  Table contains the syntactic tree of project data from project files\n \n       type Project_Name_And_Node is record\n          Name : Name_Id;\n@@ -1320,13 +1325,9 @@ private\n \n    type Comment_State is record\n       End_Of_Line_Node   : Project_Node_Id := Empty_Node;\n-\n       Previous_Line_Node : Project_Node_Id := Empty_Node;\n-\n       Previous_End_Node  : Project_Node_Id := Empty_Node;\n-\n       Unkept_Comments    : Boolean := False;\n-\n       Comments           : Comments_Ptr := null;\n    end record;\n "}, {"sha": "3f5feed7bc1b8e87264c96dc35c04c27192d64d6", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -1219,6 +1219,28 @@ package body Prj is\n       end if;\n    end Other_Part;\n \n+   ------------------\n+   -- Create_Flags --\n+   ------------------\n+\n+   function Create_Flags\n+     (Report_Error               : Put_Line_Access;\n+      When_No_Sources            : Error_Warning;\n+      Require_Sources_Other_Lang : Boolean := True;\n+      Allow_Duplicate_Basenames  : Boolean := True;\n+      Compiler_Driver_Mandatory  : Boolean := False;\n+      Error_On_Unknown_Language  : Boolean := True)\n+      return Processing_Flags is\n+   begin\n+      return Processing_Flags'\n+        (Report_Error               => Report_Error,\n+         When_No_Sources            => When_No_Sources,\n+         Require_Sources_Other_Lang => Require_Sources_Other_Lang,\n+         Allow_Duplicate_Basenames  => Allow_Duplicate_Basenames,\n+         Error_On_Unknown_Language  => Error_On_Unknown_Language,\n+         Compiler_Driver_Mandatory  => Compiler_Driver_Mandatory);\n+   end Create_Flags;\n+\n begin\n    --  Make sure that the standard config and user project file extensions are\n    --  compatible with canonical case file naming."}, {"sha": "72193cab9121324fd5f6cd773e8a8c5162da7817", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32404665670241aa41589352c2fb9805f5aac4c6/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=32404665670241aa41589352c2fb9805f5aac4c6", "patch": "@@ -1342,6 +1342,42 @@ package Prj is\n    --  This procedure resets all the tables that are used when processing a\n    --  project file tree. Initialize must be called before the call to Reset.\n \n+   type Processing_Flags is private;\n+   --  Flags used while parsing and processing a project tree.\n+   --  These configure various behavior in the parser, as well as indicate how\n+   --  to report error messages.\n+   --  This structure does not allocate memory and never needs to be freed\n+\n+   function Create_Flags\n+     (Report_Error               : Put_Line_Access;\n+      When_No_Sources            : Error_Warning;\n+      Require_Sources_Other_Lang : Boolean := True;\n+      Allow_Duplicate_Basenames  : Boolean := True;\n+      Compiler_Driver_Mandatory  : Boolean := False;\n+      Error_On_Unknown_Language  : Boolean := True)\n+      return Processing_Flags;\n+   --  If Allow_Duplicate_Basenames, then files with the same base names are\n+   --  authorized within a project for source-based languages (never for unit\n+   --  based languages)\n+   --  If Compiler_Driver_Mandatory is true, then a Compiler.Driver attribute\n+   --  for each language must be defined, or we will not look for its source\n+   --  files.\n+   --  When_No_Sources indicates what should be done when no sources of a\n+   --  language are found in a project where this language is declared.\n+   --  If Require_Sources_Other_Lang is true, then all languages must have at\n+   --  least one source file, or an error is reported via When_No_Sources. If\n+   --  it is false, this is only required for Ada (and only if it is a language\n+   --  of the project).\n+   --  If Report_Error is null, use the standard error reporting mechanism\n+   --  (Errout). Otherwise, report errors using Report_Error.\n+   --  If Error_On_Unknown_Language is true, an error is displayed if some of\n+   --  the source files listed in the project do not match any naming scheme\n+\n+   Gprbuild_Flags : constant Processing_Flags;\n+   Gnatmake_Flags : constant Processing_Flags;\n+   --  Flags used by the various tools. They all display the error messages\n+   --  through Prj.Err\n+\n    package Project_Boolean_Htable is new Simple_HTable\n      (Header_Num => Header_Num,\n       Element    => Boolean,\n@@ -1517,4 +1553,29 @@ private\n    --  Type to represent the part of a project tree which is private to the\n    --  Project Manager.\n \n+   type Processing_Flags is record\n+      Require_Sources_Other_Lang : Boolean;\n+      Report_Error               : Put_Line_Access;\n+      When_No_Sources            : Error_Warning;\n+      Allow_Duplicate_Basenames  : Boolean;\n+      Compiler_Driver_Mandatory  : Boolean;\n+      Error_On_Unknown_Language  : Boolean;\n+   end record;\n+\n+   Gprbuild_Flags : constant Processing_Flags :=\n+     (Report_Error               => null,\n+      When_No_Sources            => Warning,\n+      Require_Sources_Other_Lang => True,\n+      Allow_Duplicate_Basenames  => False,\n+      Compiler_Driver_Mandatory  => True,\n+      Error_On_Unknown_Language  => True);\n+\n+   Gnatmake_Flags : constant Processing_Flags :=\n+     (Report_Error               => null,\n+      When_No_Sources            => Error,\n+      Require_Sources_Other_Lang => False,\n+      Allow_Duplicate_Basenames  => False,\n+      Compiler_Driver_Mandatory  => False,\n+      Error_On_Unknown_Language  => False);\n+\n end Prj;"}]}