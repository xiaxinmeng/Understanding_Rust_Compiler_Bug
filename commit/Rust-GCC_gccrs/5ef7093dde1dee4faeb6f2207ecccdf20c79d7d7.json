{"sha": "5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVmNzA5M2RkZTFkZWU0ZmFlYjZmMjIwN2VjY2NkZjIwYzc5ZDdkNw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-09-15T10:54:10Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-09-15T10:54:10Z"}, "message": "re PR fortran/57697 ([OOP] Segfault with defined assignment for components during intrinsic assignment)\n\n2013-09-15  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57697\n        * resolve.c (generate_component_assignments): Handle unallocated\n        LHS with defined assignment of components.\n\n2013-09-15  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57697\n        * gfortran.dg/defined_assignment_10.f90: New.\n\nFrom-SVN: r202601", "tree": {"sha": "0cd0183c7f8c82e506048dfb3024b9830dbcbdc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cd0183c7f8c82e506048dfb3024b9830dbcbdc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7/comments", "author": null, "committer": null, "parents": [{"sha": "97191ad09302f458e7861f8680370985f19ffed5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97191ad09302f458e7861f8680370985f19ffed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97191ad09302f458e7861f8680370985f19ffed5"}], "stats": {"total": 90, "additions": 88, "deletions": 2}, "files": [{"sha": "fdbe4b39c3e5fbd78d4cf79cd7acb0108f0badf7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7", "patch": "@@ -1,3 +1,9 @@\n+2013-09-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57697\n+\t* resolve.c (generate_component_assignments): Handle unallocated\n+\tLHS with defined assignment of components.\n+\n 2013-09-12  Brooks Moses  <bmoses@google.com>\n \n \tPR driver/42955"}, {"sha": "f2892e226eeb5722b411909aa5b9df5144d00c9e", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7", "patch": "@@ -9546,6 +9546,21 @@ generate_component_assignments (gfc_code **code, gfc_namespace *ns)\n \t\t  temp_code = build_assignment (EXEC_ASSIGN,\n \t\t\t\t\t\tt1, (*code)->expr1,\n \t\t\t\tNULL, NULL, (*code)->loc);\n+\n+\t\t  /* For allocatable LHS, check whether it is allocated.  */\n+\t\t  if (gfc_expr_attr((*code)->expr1).allocatable)\n+\t\t    {\n+\t\t      gfc_code *block;\n+\t\t      block = gfc_get_code (EXEC_IF);\n+\t\t      block->block = gfc_get_code (EXEC_IF);\n+\t\t      block->block->expr1\n+\t\t\t  = gfc_build_intrinsic_call (ns,\n+\t\t\t\t    GFC_ISYM_ASSOCIATED, \"allocated\",\n+\t\t\t\t    (*code)->loc, 2,\n+\t\t\t\t    gfc_copy_expr ((*code)->expr1), NULL);\n+\t\t      block->block->next = temp_code;\n+\t\t      temp_code = block;\n+\t\t    }\n \t\t  add_code_to_chain (&temp_code, &tmp_head, &tmp_tail);\n \t\t}\n \n@@ -9554,6 +9569,31 @@ generate_component_assignments (gfc_code **code, gfc_namespace *ns)\n \t      gfc_free_expr (this_code->ext.actual->expr);\n \t      this_code->ext.actual->expr = gfc_copy_expr (t1);\n \t      add_comp_ref (this_code->ext.actual->expr, comp1);\n+\n+\t      /* If the LHS is not allocated, we pointer-assign the LHS address\n+\t\t to the temporary - after the LHS has been allocated.  */\n+\t      if (gfc_expr_attr((*code)->expr1).allocatable)\n+\t\t{\n+\t\t  gfc_code *block;\n+                  gfc_expr *cond;\n+                  cond = gfc_get_expr ();\n+\t\t  cond->ts.type = BT_LOGICAL;\n+\t\t  cond->ts.kind = gfc_default_logical_kind;\n+\t\t  cond->expr_type = EXPR_OP;\n+\t\t  cond->where = (*code)->loc;\n+\t\t  cond->value.op.op = INTRINSIC_NOT;\n+\t\t  cond->value.op.op1 = gfc_build_intrinsic_call (ns,\n+\t\t\t\t\t  GFC_ISYM_ASSOCIATED, \"allocated\",\n+\t\t\t\t\t  (*code)->loc, 2,\n+\t\t\t\t\t  gfc_copy_expr (t1), NULL);\n+\t\t  block = gfc_get_code (EXEC_IF);\n+\t\t  block->block = gfc_get_code (EXEC_IF);\n+\t\t  block->block->expr1 = cond;\n+\t\t  block->block->next = build_assignment (EXEC_POINTER_ASSIGN,\n+\t\t\t\t\tt1, (*code)->expr1,\n+\t\t\t\t\tNULL, NULL, (*code)->loc);\n+\t\t  add_code_to_chain (&block, &head, &tail);\n+\t\t}\n \t    }\n \t  }\n       else if (this_code->op == EXEC_ASSIGN && !this_code->next)"}, {"sha": "d1469d790be94d9ca1156ac21a708313cfacde63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7", "patch": "@@ -1,7 +1,12 @@\n+2013-09-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57697\n+\t* gfortran.dg/defined_assignment_10.f90: New.\n+\n 2013-09-13  Evgeny Gavrin <e.gavrin@samsung.com>\n \n-        * gcc.dg/debug/dwarf2/omp-fesdr.c: Add test.\n-        * g++.dg/debug/dwarf2/omp-fesdr.C: Add test.\n+\t* gcc.dg/debug/dwarf2/omp-fesdr.c: Add test.\n+\t* g++.dg/debug/dwarf2/omp-fesdr.C: Add test.\n \n 2013-09-13  Jacek Caban  <jacek@codeweavers.com>\n "}, {"sha": "03f92c6a47e775ed2e5b0f62317e7fcc2550d56c", "filename": "gcc/testsuite/gfortran.dg/defined_assignment_10.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_10.f90?ref=5ef7093dde1dee4faeb6f2207ecccdf20c79d7d7", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do run }\n+!\n+! PR fortran/57697\n+!\n+! Further test of typebound defined assignment\n+!\n+module m0\n+  implicit none\n+  type component\n+    integer :: i = 42\n+  contains\n+    procedure :: assign0\n+    generic :: assignment(=) => assign0\n+  end type\n+  type parent\n+    type(component) :: foo\n+  end type\n+contains\n+  elemental subroutine assign0(lhs,rhs)\n+    class(component), intent(INout) :: lhs\n+    class(component), intent(in) :: rhs\n+    lhs%i = 20\n+  end subroutine\n+end module\n+\n+program main\n+  use m0\n+  implicit none\n+  type(parent), allocatable :: left\n+  type(parent) :: right\n+  print *, right%foo\n+  left = right\n+!  print *, left%foo\n+  if (left%foo%i /= 20) call abort()\n+end"}]}