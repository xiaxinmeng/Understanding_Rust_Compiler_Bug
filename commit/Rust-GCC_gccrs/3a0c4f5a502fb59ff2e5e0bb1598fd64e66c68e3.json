{"sha": "3a0c4f5a502fb59ff2e5e0bb1598fd64e66c68e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EwYzRmNWE1MDJmYjU5ZmYyZTVlMGJiMTU5OGZkNjRlNjZjNjhlMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-18T11:56:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-18T11:56:44Z"}, "message": "Resync\n\nFrom-SVN: r96679", "tree": {"sha": "a370ba2d62aaa980334cb2cf81136600fd83ee96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a370ba2d62aaa980334cb2cf81136600fd83ee96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a0c4f5a502fb59ff2e5e0bb1598fd64e66c68e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a0c4f5a502fb59ff2e5e0bb1598fd64e66c68e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a0c4f5a502fb59ff2e5e0bb1598fd64e66c68e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a0c4f5a502fb59ff2e5e0bb1598fd64e66c68e3/comments", "author": null, "committer": null, "parents": [{"sha": "fa7c4d231fb72d7a522f3894ea121177a899fdec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa7c4d231fb72d7a522f3894ea121177a899fdec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa7c4d231fb72d7a522f3894ea121177a899fdec"}], "stats": {"total": 248, "additions": 248, "deletions": 0}, "files": [{"sha": "bcd2cba05403b98a7eb1e72a1e8cab921915b358", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 248, "deletions": 0, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a0c4f5a502fb59ff2e5e0bb1598fd64e66c68e3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a0c4f5a502fb59ff2e5e0bb1598fd64e66c68e3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3a0c4f5a502fb59ff2e5e0bb1598fd64e66c68e3", "patch": "@@ -1,3 +1,251 @@\n+2005-03-17  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.h, adaint.c (__gnat_waitpid): Moved to expect.c where it is\n+\tused.\n+\n+\t* expect.c (__gnat_waitpid): Moved here from adaint.c.\n+\tReimplement under Win32 using Win32 API.\n+\n+\t(__gnat_kill) [Win32]: Properly close the process handle before leaving\n+\tthis routine.\n+\n+2005-03-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ada-tree.h: (DECL_RENAMING_GLOBAL_P): New predicate.\n+\t(DECL_RENAMED_OBJECT): New accessor macro.\n+\t(SET_DECL_RENAMED_OBJECT): New setter macro.\n+\n+\t* decl.c (gnat_to_gnu_entity) <E_Variable>: Stabilize the renamed\n+\tobject in all cases.  Attach the renamed object to the VAR_DECL.\n+\t(gnat_to_gnu_field): Do not lift the record wrapper if the size of the\n+\tfield is not prescribed.\n+\n+\t* misc.c (gnat_handle_option): Handle -gnatO separately.\n+\t(gnat_print_decl) <VAR_DECL>: New case.\n+\tPrint the DECL_RENAMED_OBJECT node.\n+\n+\t* lang.opt:  Declare separate -gnatO option.\n+\n+\t* trans.c (tree_transform) <N_Identifier>: If the object is a renaming\n+\tpointer, replace it with the renamed object.\n+\t<N_Validate_Unchecked_Conversion>: Warn for a conversion to a fat\n+\tpointer type if the source is not a fat pointer type whose underlying\n+\tarray has the same non-zero alias set as that of the destination array.\n+\n+2005-03-17  Javier Miranda  <miranda@adacore.com>\n+\n+\t* a-tags.ads, a-tags.adb (Get_Expanded_Name): Removed.\n+\t(Get_Inheritance_Depth): Removed.\n+\t(Set_Inheritance_Depth): Removed.\n+\n+\t* rtsfind.ads, exp_disp.ads, exp_disp.adb: Remove support to call the\n+\tsubprogram Get_Expanded_Name because it is not referenced by the\n+\tfrontend.\n+\n+\t* i-cpp.ads, i-cpp.adb (CPP_Get_Expanded_Name): Removed.\n+\t(CPP_Get_Inheritance_Depth): Removed.\n+\t(CPP_Set_Inheritance_Depth): Removed.\n+\n+\t* tbuild.ads, tbuild.adb (Make_DT_Component): Removed.\n+\n+2005-03-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb (Apply_Array_Size_Check): Completely remove this for GCC\n+\t3, since we now expect GCC 3 to do all the work.\n+\n+2005-03-17  Javier Miranda  <miranda@adacore.com>\n+\n+\t* einfo.adb (First_Private_Entity, Set_First_Private_Entity): Addition\n+\tof one barrier to avoid wrong usage of this attribute.\n+\n+\t* sem_ch12.adb (Formal_Entity): Fix erroneous usage of the attribute\n+\tFirst_Private_Entity.\n+\n+\t* sem_ch7.adb (Install_Visible_Declarations): Add a barrier to protect\n+\tthe subprogram against wrong usage.\n+\tAdapt the code to traverse the entities in the\n+\tscope of a record_type because in addition to its usage regarding\n+\tpackages, this subprogram is also called by Expand_N_Freeze_Entity\n+\tto install the visible declarations of the enclosing scope of a\n+\trecord_type_with_private to establish the proper visibility before\n+\tfreezing the entity and related subprograms.\n+\n+2005-03-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch2.adb (In_Assignment_Context): Recognize slice assignments to\n+\tentry formals.\n+\n+2005-03-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch3.adb (Check_Attr): New subprogram.\n+\t(Check_Stream_Attribute): Move the code for 13.13.2(9/1) enforcement\n+\tinto a new Check_Attr subprogram, in order to provide a more\n+\texplanatory error message (including the name of the missing attribute).\n+\t(Stream_Operation_OK): Renamed from Stream_Operations_OK. This\n+\tsubprogram determines whether a default implementation exists for a\n+\tgiven stream attribute.\n+\t(Make_Predefined_Primitive_Specs, Predefined_Primitive_Bodies):\n+\tDetermine whether to generate a default implementation for each stream\n+\tattribute separately, as this depends on the specific attribute.\n+\n+\t* exp_strm.adb (Make_Field_Attribute): For the case of an illegal\n+\tlimited extension where a stream attribute is missing for a limited\n+\tcomponent (which will have been flagged in Exp_Ch3.Sem_Attr), do not\n+\tgenerate a bogus reference to the missing attribute to prevent\n+\tcascaded errors. Instead, generate a null statement.\n+\n+\t* sem_attr.adb (Check_Stream_Attribute): A stream attribute is\n+\tavailable for a limited type if it has been specified for an ancestor\n+\tof the type.\n+\n+2005-03-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Inlined_Call): handle the case when the renamed\n+\tentity is an operator.\n+\n+2005-03-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb (Get_PCS_Name): Move from Exp_Dist body to Sem_Dist\n+\tspec, to make this predicate available to other units.\n+\n+\t* rtsfind.adb (Check_RPC): Use Sem_Dist.Get_PCS_Name instead of\n+\treimplementing it.\n+\n+\t* sem_ch8.adb: Disable expansion of remote access-to-subprogram types\n+\twhen no distribution runtime library is available.\n+\n+\t* sem_res.adb, sem_dist.adb: Disable expansion of remote\n+\taccess-to-subprogram types when no distribution runtime library is\n+\tavailable.\n+\t(Get_PCS_Name): Move from Exp_Dist body to Sem_Dist spec, to make this\n+\tpredicate available to other units.\n+\n+\t* sem_dist.ads (Get_PCS_Name): Move from Exp_Dist body to Sem_Dist\n+\tspec, to make this predicate available to other units.\n+\n+2005-03-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Insert_Project_Sources): Make sure the Q is always\n+\tinitialized.\n+\n+\t* prj-nmsc.adb (Check_Ada_Naming_Scheme_Validity): Check Naming against\n+\tthe default for the tree, not the global default naming.\n+\n+\t* prj-proc.adb (Recursive_Process): No need to put the default naming\n+\tin the project data, it's already there.\n+\n+2005-03-17  Doug Rupp  <rupp@adacore.com>\n+\n+\t* Makefile.in: (ia64-hp-*vms*): Use s-crtl-vms64.ads.\n+\n+        * 5xcrtl.ads: Renamed to...\n+        * s-crtl-vms64.ads: ...this new file\n+\n+2005-03-17  Robert Dewar  <dewar@adacore.com>\n+\n+\tPR ada/19519\n+\n+\t* namet.adb (Copy_One_Character): Set proper wide character encoding\n+\tfor upper half character if we have upper half encoding.\n+\n+2005-03-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par.adb (Par): Improved msg for attempt to recompile predefined unit\n+\n+2005-03-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch13.adb (New_Stream_Function, New_Stream_Procedure): For a\n+\ttagged limited type, the TSS is a newly built renaming declaration:\n+\tinsert it using Set_TSS, not Copy_TSS.\n+\n+2005-03-17  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch4.adb (Try_Primitive_Operation, Class_Wide_Operation and\n+\tTry_Object_Operation): Analyze the object that is accessible\n+\tthrough the prefix of the subprogram call before we apply\n+\tthe transformation of the object-operation notation.\n+\n+2005-03-17  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* s-taprob.adb (Initialize_Protection): Initialize the protected\n+\tobject's owner to Null_Task.\n+\t(Lock): If pragma Detect_Blocking is in effect and the caller of this\n+\tprocedure is already the protected object's owner then Program_Error\n+\tis raised. In addition the protected object's owner is updated.\n+\t(Lock_Read_Only): If pragma Detect_Blocking is in effect and the caller\n+\tof this procedure is already the protected object's owner then\n+\tProgram_Error is raised.\n+\tIn addition the protected object's owner is updated.\n+\t(Unlock): Remove the ownership of the protected object.\n+\n+\t* s-taprob.ads (Protection): Add the field Owner, used to store the\n+\tprotected object's owner.\n+\tThis component is needed for detecting one type of potentially blocking\n+\toperations (external calls on a protected subprogram with the same\n+\ttarget object as that of the protected action). Document the rest of\n+\tthe components.\n+\n+\t* s-tposen.adb, s-tpoben.adb (Initialize_Protection_Entries):\n+\tInitialize the protected object's owner to Null_Task.\n+\t(Lock_Read_Only_Entries): If pragma Detect_Blocking is in effect and the\n+\tcaller of this procedure is already the protected object's owner then\n+\tProgram_Error is raised.\n+\tDo not raise Program_Error when this procedure is called from a\n+\tprotected action.\n+\t(Unlock_Entries): Remove the ownership of the protected object.\n+\t(Lock_Entries): If pragma Detect_Blocking is in effect and the caller\n+\tof this procedure is already the protected object's owner then\n+\tProgram_Error is raised.\n+\tDo not raise Program_Error when this procedure is called from\n+\ta protected action.\n+\n+\t* s-tposen.ads, s-tpoben.ads (Protection_Entries): Add the field Owner,\n+\tused to store the protected object's owner.\n+\n+\t* s-tpobop.adb (Protected_Entry_Call): If pragma Detect_Blocking is in\n+\teffect and this procedure (a potentially blocking operation) is called\n+\tfrom whithin a protected action, Program_Error is raised.\n+\t(Timed_Protected_Entry_Call): If pragma Detect_Blocking is in effect\n+\tand this procedure (a potentially blocking operation) is called from\n+\twhithin a protected action, Program_Error is raised.\n+\n+2005-03-17  Vincent Celier  <celier@adacore.com>\n+\t    Nicolas Setton  <setton@adacore.com>\n+\n+\t* mlib-tgt-darwin.adb (Build_Dynamic_Library): Remove the \"-fini\"\n+\tswitch, not supported by the linker on Darwin. Add '_' before\n+\t<library>init, as this character is added unconditionally by the\n+\tcompiler.\n+\t(Is_Archive_Ext): Replace the wrong library extension \".dyld\" by the\n+\tcorrect one \".dylib\". This fixes detection of the archive files when\n+\tbuilding library projects.\n+\n+2005-03-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* switch-m.adb (Normalize_Compiler_Switches): Recognize switches\n+\t-gnat83, -gnat95 and -gnat05.\n+\n+2005-03-17  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* gnat_ugn.texi: Document gnatmem restriction\n+\n+2005-03-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* snames.adb: Document new TSS names introduced by exp_dist/exp_tss\n+\tcleanup\n+\n+2005-03-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-interr.ads, s-interr.adb, sem_ch3.adb, prj.ads, prj.adb,\n+\ta-interr.adb, a-interr.ads, s-interr-sigaction.adb, s-interr-dummy.adb,\n+\ts-interr-vms.adb, s-interr-vxworks.adb: Minor reformatting\n+\n+\t* casing.adb: Comment improvements\n+\n+2005-03-17  Pascal Obry  <obry@adacore.com>\n+\n+\t* g-expect.adb: Minor reformatting.\n+\n 2005-03-15  Zack Weinberg  <zack@codesourcery.com>\n \n \t* Make-lang.in (doc/gnat_ugn_unw.info, doc/gnat_rm.info)"}]}