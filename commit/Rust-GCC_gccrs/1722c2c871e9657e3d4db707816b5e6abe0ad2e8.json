{"sha": "1722c2c871e9657e3d4db707816b5e6abe0ad2e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcyMmMyYzg3MWU5NjU3ZTNkNGRiNzA3ODE2YjVlNmFiZTBhZDJlOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-06-07T21:30:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-06-07T21:30:49Z"}, "message": "basic-block.h (EDGE_SIBCALL): New.\n\n        * basic-block.h (EDGE_SIBCALL): New.\n        (EDGE_ALL_FLAGS): Update.\n        * cfg.c (dump_edge_info): Add sibcall name.\n        * cfgbuild.c (make_edges): Use EDGE_SIBCALL.\n        * cfgrtl.c (purge_dead_edges): Handle sibcalls.\n\nFrom-SVN: r67602", "tree": {"sha": "4c3e6dfddffa34e347102a0a9603cb42a831546b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c3e6dfddffa34e347102a0a9603cb42a831546b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1722c2c871e9657e3d4db707816b5e6abe0ad2e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1722c2c871e9657e3d4db707816b5e6abe0ad2e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1722c2c871e9657e3d4db707816b5e6abe0ad2e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/comments", "author": null, "committer": null, "parents": [{"sha": "5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5145a02e5ddfd75dfb212e5ab165b21cec63fe18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5145a02e5ddfd75dfb212e5ab165b21cec63fe18"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "14a02eade2591a22ef9f7939ddee9e3b2c45ed61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1722c2c871e9657e3d4db707816b5e6abe0ad2e8", "patch": "@@ -1,3 +1,11 @@\n+2003-06-07  Richard Henderson  <rth@redhat.com>\n+\n+\t* basic-block.h (EDGE_SIBCALL): New.\n+\t(EDGE_ALL_FLAGS): Update.\n+\t* cfg.c (dump_edge_info): Add sibcall name.\n+\t* cfgbuild.c (make_edges): Use EDGE_SIBCALL.\n+\t* cfgrtl.c (purge_dead_edges): Handle sibcalls.\n+\n 2003-06-07  Andreas Jaeger  <aj@suse.de>\n \n \t* mklibgcc.in (lib2funcs): Remove _exit."}, {"sha": "4aa47dd50ba8fc415470d57fdb4b7c1e65905e64", "filename": "gcc/basic-block.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=1722c2c871e9657e3d4db707816b5e6abe0ad2e8", "patch": "@@ -151,7 +151,8 @@ typedef struct edge_def {\n #define EDGE_CAN_FALLTHRU\t64\t/* Candidate for straight line\n \t\t\t\t\t   flow.  */\n #define EDGE_IRREDUCIBLE_LOOP\t128\t/* Part of irreducible loop.  */\n-#define EDGE_ALL_FLAGS\t\t255\n+#define EDGE_SIBCALL\t\t256\t/* Edge from sibcall to exit.  */\n+#define EDGE_ALL_FLAGS\t\t511\n \n #define EDGE_COMPLEX\t(EDGE_ABNORMAL | EDGE_ABNORMAL_CALL | EDGE_EH)\n "}, {"sha": "93736a66bb27da316a6d77e5e789523bf021b54c", "filename": "gcc/cfg.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=1722c2c871e9657e3d4db707816b5e6abe0ad2e8", "patch": "@@ -652,8 +652,10 @@ dump_edge_info (file, e, do_succ)\n \n   if (e->flags)\n     {\n-      static const char * const bitnames[]\n-\t= {\"fallthru\", \"ab\", \"abcall\", \"eh\", \"fake\", \"dfs_back\", \"can_fallthru\",\"irreducible\"};\n+      static const char * const bitnames[] = {\n+\t\"fallthru\", \"ab\", \"abcall\", \"eh\", \"fake\", \"dfs_back\",\n+\t\"can_fallthru\", \"irreducible\", \"sibcall\"\n+      };\n       int comma = 0;\n       int i, flags = e->flags;\n "}, {"sha": "ed8dfb88066ee12238cc0c121168f117876c43d6", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=1722c2c871e9657e3d4db707816b5e6abe0ad2e8", "patch": "@@ -406,8 +406,7 @@ make_edges (label_value_list, min, max, update_p)\n \t worry about EH edges, since we wouldn't have created the sibling call\n \t in the first place.  */\n       if (code == CALL_INSN && SIBLING_CALL_P (insn))\n-\tcached_make_edge (edge_cache, bb, EXIT_BLOCK_PTR,\n-\t\t   EDGE_ABNORMAL | EDGE_ABNORMAL_CALL);\n+\tcached_make_edge (edge_cache, bb, EXIT_BLOCK_PTR, EDGE_SIBCALL);\n \n       /* If this is a CALL_INSN, then mark it as reaching the active EH\n \t handler for this CALL_INSN.  If we're handling non-call"}, {"sha": "21208c9763a295d57b414d5fca010359f84d3b1e", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1722c2c871e9657e3d4db707816b5e6abe0ad2e8/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=1722c2c871e9657e3d4db707816b5e6abe0ad2e8", "patch": "@@ -2299,6 +2299,19 @@ purge_dead_edges (bb)\n \n       return purged;\n     }\n+  else if (GET_CODE (insn) == CALL_INSN && SIBLING_CALL_P (insn))\n+    {\n+      /* First, there should not be any EH or ABCALL edges resulting\n+\t from non-local gotos and the like.  If there were, we shouldn't\n+\t have created the sibcall in the first place.  Second, there\n+\t should of course never have been a fallthru edge.  */\n+      if (!bb->succ || bb->succ->succ_next)\n+\tabort ();\n+      if (bb->succ->flags != EDGE_SIBCALL)\n+\tabort ();\n+\n+      return 0;\n+    }\n \n   /* If we don't see a jump insn, we don't know exactly why the block would\n      have been broken at this point.  Look for a simple, non-fallthru edge,"}]}