{"sha": "dcb1e1379ea52c33e5025d6e5842c43888888afa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNiMWUxMzc5ZWE1MmMzM2U1MDI1ZDZlNTg0MmM0Mzg4ODg4OGFmYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-08-09T20:57:14Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-08-09T20:57:14Z"}, "message": "Fix POW2 histogram\n\n\t* gcc.dg/tree-prof/val-prof-8.c: New test.\n\t* value-prof.c (dump_histogram_value): Swap pow2 and non-pow2\n\tvalues.\n\t* libgcov-profiler.c (__gcov_pow2_profiler): Consider 0 as not\n\tpower of two.\n\nFrom-SVN: r239304", "tree": {"sha": "187f4b8334dcc9b7d561d703c32cb57e5646f3a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/187f4b8334dcc9b7d561d703c32cb57e5646f3a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcb1e1379ea52c33e5025d6e5842c43888888afa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb1e1379ea52c33e5025d6e5842c43888888afa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb1e1379ea52c33e5025d6e5842c43888888afa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb1e1379ea52c33e5025d6e5842c43888888afa/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54b367dbd22e07e734a8632484e763bea16ced87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b367dbd22e07e734a8632484e763bea16ced87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54b367dbd22e07e734a8632484e763bea16ced87"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "dc14d6f10e709a50a30fc487092e78bade490b6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb1e1379ea52c33e5025d6e5842c43888888afa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb1e1379ea52c33e5025d6e5842c43888888afa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcb1e1379ea52c33e5025d6e5842c43888888afa", "patch": "@@ -1,3 +1,8 @@\n+2016-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-prof.c (dump_histogram_value): Swap pow2 and non-pow2\n+\tvalues.\n+\n 2016-08-09  Renlin Li  <renlin.li@arm.com>\n \n \tPR middle-end/64971"}, {"sha": "927f1e31a3218bb417e17f32275c3da4b423be37", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb1e1379ea52c33e5025d6e5842c43888888afa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb1e1379ea52c33e5025d6e5842c43888888afa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dcb1e1379ea52c33e5025d6e5842c43888888afa", "patch": "@@ -1,3 +1,7 @@\n+2016-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/tree-prof/val-prof-8.c: New test.\n+\n 2016-08-09  Martin Jambor  <mjambor@suse.cz>\n \n         PR ipa/71981"}, {"sha": "2c505e3d97d27aefa1881c902bc497762e1ca044", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-8.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb1e1379ea52c33e5025d6e5842c43888888afa/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb1e1379ea52c33e5025d6e5842c43888888afa/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-8.c?ref=dcb1e1379ea52c33e5025d6e5842c43888888afa", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-options \"-O0 -fdump-ipa-profile\" } */\n+\n+int\n+main (int argc, char **argv)\n+{\n+  unsigned u = (argc - 1);\n+  int counter = 0;\n+\n+  for (unsigned i = 0; i < 100; i++)\n+  {\n+    unsigned x = i < 10 ? 16 : 15;\n+    counter += u % x;\n+  }\n+\n+  return counter;\n+}\n+\n+/* autofdo does not do value profiling so far */\n+/* { dg-final-use-not-autofdo { scan-ipa-dump \"Pow2 counter pow2:10 nonpow2:90.\" \"profile\" } } */"}, {"sha": "0527c2cc73851b5cb8acd33ad7fd91de7c0bc172", "filename": "gcc/value-prof.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb1e1379ea52c33e5025d6e5842c43888888afa/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb1e1379ea52c33e5025d6e5842c43888888afa/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=dcb1e1379ea52c33e5025d6e5842c43888888afa", "patch": "@@ -264,8 +264,8 @@ dump_histogram_value (FILE *dump_file, histogram_value hist)\n \t{\n \t   fprintf (dump_file, \"pow2:%\" PRId64\n \t\t    \" nonpow2:%\" PRId64,\n-\t\t    (int64_t) hist->hvalue.counters[0],\n-\t\t    (int64_t) hist->hvalue.counters[1]);\n+\t\t    (int64_t) hist->hvalue.counters[1],\n+\t\t    (int64_t) hist->hvalue.counters[0]);\n \t}\n       fprintf (dump_file, \".\\n\");\n       break;"}, {"sha": "5b05a7cac7dd306ae77dab8c0b900626d2fc51dd", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb1e1379ea52c33e5025d6e5842c43888888afa/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb1e1379ea52c33e5025d6e5842c43888888afa/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=dcb1e1379ea52c33e5025d6e5842c43888888afa", "patch": "@@ -1,3 +1,8 @@\n+2016-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* libgcov-profiler.c (__gcov_pow2_profiler): Consider 0 as not\n+\tpower of two.\n+\n 2016-07-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/_divkc3.c: Add copyright/license boilerplate."}, {"sha": "6da8a940660926b8a60e6b047c98e6e50bf1454d", "filename": "libgcc/libgcov-profiler.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb1e1379ea52c33e5025d6e5842c43888888afa/libgcc%2Flibgcov-profiler.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb1e1379ea52c33e5025d6e5842c43888888afa/libgcc%2Flibgcov-profiler.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-profiler.c?ref=dcb1e1379ea52c33e5025d6e5842c43888888afa", "patch": "@@ -53,7 +53,7 @@ __gcov_interval_profiler (gcov_type *counters, gcov_type value,\n void\n __gcov_pow2_profiler (gcov_type *counters, gcov_type value)\n {\n-  if (value & (value - 1))\n+  if (value == 0 || (value & (value - 1)))\n     counters[0]++;\n   else\n     counters[1]++;"}]}