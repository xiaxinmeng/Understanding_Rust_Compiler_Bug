{"sha": "c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFhZTNlYjQ0MDlmNTNiMDhmN2M1ZTlkYTI3ZDU0YWM1YWU3MDQzYQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2002-05-14T08:39:27Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2002-05-14T08:39:27Z"}, "message": "sysv4.h (DO_SELECT_SECTION): Factored out of SELECT_SECTION.\n\n\t* config/ia64/sysv4.h (DO_SELECT_SECTION): Factored out of\n\tSELECT_SECTION.\n\t(UNIQUE_SECTION): Define to get small data correctly.\n\nFrom-SVN: r53450", "tree": {"sha": "8d532c8e95997d6591e4d2412c676dd2671f7af0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d532c8e95997d6591e4d2412c676dd2671f7af0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b18fc2c4e03c5b9060bc72e702964e226919384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b18fc2c4e03c5b9060bc72e702964e226919384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b18fc2c4e03c5b9060bc72e702964e226919384"}], "stats": {"total": 157, "additions": 125, "deletions": 32}, "files": [{"sha": "79a2b7e76b0e99b1f581f1a079206ca3be3a6051", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a", "patch": "@@ -1,4 +1,8 @@\n-2002-05-13  Andreas Schwab  <schwab@suse.de>\n+2002-05-14  Andreas Schwab  <schwab@suse.de>\n+\n+\t* config/ia64/sysv4.h (DO_SELECT_SECTION): Factored out of\n+\tSELECT_SECTION.\n+\t(UNIQUE_SECTION): Define to get small data correctly.\n \n \t* varasm.c (resolve_unique_section): Add third parameter\n \tflag_function_or_data_sections and use it instead of"}, {"sha": "f4550b682dbde696e1cbd4cce1af39a6a307e220", "filename": "gcc/config/ia64/sysv4.h", "status": "modified", "additions": 120, "deletions": 31, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a/gcc%2Fconfig%2Fia64%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a/gcc%2Fconfig%2Fia64%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fsysv4.h?ref=c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a", "patch": "@@ -140,45 +140,134 @@ do {\t\t\t\t\t\t\t\t\t\\\n   emit_safe_across_calls (STREAM);\t\t\t\t\t\\\n } while (0)\n \n+/* A C statement or statements to switch to the appropriate\n+   section for output of DECL.  DECL is either a `VAR_DECL' node\n+   or a constant of some sort.  RELOC indicates whether forming\n+   the initial value of DECL requires link-time relocations.\n+\n+   Set SECNUM to:\n+\t0\t.text\n+\t1\t.rodata\n+\t2\t.data\n+\t3\t.sdata\n+\t4\t.bss\n+\t5\t.sbss\n+*/\n+#define DO_SELECT_SECTION(SECNUM, DECL, RELOC)\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  if (! flag_writable_strings)\t\t\t\t\t\\\n+\t    SECNUM = 0x101;\t\t\t\t\t\t\\\n+\t  else\t\t\t\t\t\t\t\t\\\n+\t    SECNUM = 2;\t\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  if (XSTR (XEXP (DECL_RTL (DECL), 0), 0)[0]\t\t\t\\\n+\t      == SDATA_NAME_FLAG_CHAR)\t\t\t\t\t\\\n+\t    SECNUM = 3;\t\t\t\t\t\t\t\\\n+\t  /* ??? We need the extra RELOC check, because the default\t\\\n+\t     is to only check RELOC if flag_pic is set, and we don't\t\\\n+\t     set flag_pic (yet?).  */\t\t\t\t\t\\\n+\t  else if (!DECL_READONLY_SECTION (DECL, RELOC) || (RELOC))\t\\\n+\t    SECNUM = 2;\t\t\t\t\t\t\t\\\n+\t  else if (flag_merge_constants < 2)\t\t\t\t\\\n+\t    /* C and C++ don't allow different variables to share\t\\\n+\t       the same location.  -fmerge-all-constants allows\t\t\\\n+\t       even that (at the expense of not conforming).  */\t\\\n+\t    SECNUM = 1;\t\t\t\t\t\t\t\\\n+\t  else if (TREE_CODE (DECL_INITIAL (DECL)) == STRING_CST)\t\\\n+\t    SECNUM = 0x201;\t\t\t\t\t\t\\\n+\t  else\t\t\t\t\t\t\t\t\\\n+\t    SECNUM = 0x301;\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      /* This could be a CONSTRUCTOR containing ADDR_EXPR of a VAR_DECL, \\\n+\t in which case we can't put it in a shared library rodata.  */\t\\\n+      else if (flag_pic && (RELOC))\t\t\t\t\t\\\n+\tSECNUM = 3;\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+\tSECNUM = 2;\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n /* We override svr4.h so that we can support the sdata section.  */\n \n #undef SELECT_SECTION\n #define SELECT_SECTION(DECL,RELOC,ALIGN)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\t\\\n-\tmergeable_string_section ((DECL), (ALIGN), 0);\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n+      typedef void (*sec_fn) PARAMS ((void));\t\t\t\t\\\n+      static sec_fn const sec_functions[6] =\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\ttext_section,\t\t\t\t\t\t\t\\\n+\tconst_section,\t\t\t\t\t\t\t\\\n+\tdata_section,\t\t\t\t\t\t\t\\\n+\tsdata_section,\t\t\t\t\t\t\t\\\n+\tbss_section,\t\t\t\t\t\t\t\\\n+\tsbss_section\t\t\t\t\t\t\t\\\n+      };\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      int sec;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      DO_SELECT_SECTION (sec, DECL, RELOC);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      switch (sec)\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\tcase 0x101:\t\t\t\t\t\t\t\\\n+\t  mergeable_string_section (DECL, ALIGN, 0);\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\tcase 0x201:\t\t\t\t\t\t\t\\\n+\t  mergeable_string_section (DECL_INITIAL (DECL),\t\t\\\n+\t\t\t\t    ALIGN, 0);\t\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\tcase 0x301:\t\t\t\t\t\t\t\\\n+\t  mergeable_constant_section (DECL_MODE (DECL),\t\t\t\\\n+\t\t\t\t      ALIGN, 0);\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\tdefault:\t\t\t\t\t\t\t\\\n+\t  (*sec_functions[sec]) ();\t\t\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n+  while (0)\n+\n+#undef  UNIQUE_SECTION\n+#define UNIQUE_SECTION(DECL, RELOC)\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      if (XSTR (XEXP (DECL_RTL (DECL), 0), 0)[0]\t\t\t\\\n-\t  == SDATA_NAME_FLAG_CHAR)\t\t\t\t\t\\\n-        sdata_section ();\t\t\t\t\t\t\\\n-      /* ??? We need the extra RELOC check, because the default is to\t\\\n-\t only check RELOC if flag_pic is set, and we don't set flag_pic \\\n-\t (yet?).  */\t\t\t\t\t\t\t\\\n-      else if (!DECL_READONLY_SECTION (DECL, RELOC) || (RELOC))\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else if (flag_merge_constants < 2)\t\t\t\t\\\n-\t/* C and C++ don't allow different variables to share\t\t\\\n-\t   the same location.  -fmerge-all-constants allows\t\t\\\n-\t   even that (at the expense of not conforming).  */\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-      else if (TREE_CODE (DECL_INITIAL (DECL)) == STRING_CST)\t\t\\\n-\tmergeable_string_section (DECL_INITIAL (DECL), (ALIGN), 0);\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tmergeable_constant_section (DECL_MODE (DECL), (ALIGN), 0);\t\\\n+      static const char * const prefixes[6][2] =\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\t{ \".text.\",   \".gnu.linkonce.t.\" },\t\t\t\t\\\n+\t{ \".rodata.\", \".gnu.linkonce.r.\" },\t\t\t\t\\\n+\t{ \".data.\",   \".gnu.linkonce.d.\" },\t\t\t\t\\\n+\t{ \".sdata.\",  \".gnu.linkonce.s.\" },\t\t\t\t\\\n+\t{ \".bss.\",    \".gnu.linkonce.b.\" },\t\t\t\t\\\n+\t{ \".sbss.\",   \".gnu.linkonce.sb.\" }\t\t\t\t\\\n+      };\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      int nlen, plen, sec;\t\t\t\t\t\t\\\n+      const char *name, *prefix;\t\t\t\t\t\\\n+      char *string;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      DO_SELECT_SECTION (sec, DECL, RELOC);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\t\\\n+      STRIP_NAME_ENCODING (name, name);\t\t\t\t\t\\\n+      nlen = strlen (name);\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      prefix = prefixes[sec & 0xff][DECL_ONE_ONLY(DECL)];\t\t\\\n+      plen = strlen (prefix);\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      string = alloca (nlen + plen + 1);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      memcpy (string, prefix, plen);\t\t\t\t\t\\\n+      memcpy (string + plen, name, nlen + 1);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      DECL_SECTION_NAME (DECL) = build_string (nlen + plen, string);\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  /* This could be a CONSTRUCTOR containing ADDR_EXPR of a VAR_DECL,\t\\\n-     in which case we can't put it in a shared library rodata.  */\t\\\n-  else if (flag_pic && (RELOC))\t\t\t\t\t\t\\\n-    data_section ();\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    const_section ();\t\t\t\t\t\t\t\\\n-}\n+  while (0)\n \n /* Similarly for constant pool data.  */\n "}]}