{"sha": "f7a0790f3ccdf71e47e8cb79af7820539361f9d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhMDc5MGYzY2NkZjcxZTQ3ZThjYjc5YWY3ODIwNTM5MzYxZjlkMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-02-13T23:20:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-02-13T23:20:31Z"}, "message": "re PR tree-optimization/65053 (PostgreSQL miscompilation)\n\n\tPR tree-optimization/65053\n\t* tree-ssa-phiopt.c (value_replacement): When moving assign before\n\tcond, either reset VR on lhs or set it to phi result VR.\n\n\t* gcc.c-torture/execute/pr65053-1.c: New test.\n\t* gcc.c-torture/execute/pr65053-2.c: New test.\n\nFrom-SVN: r220700", "tree": {"sha": "f6170a20c73ac9690afa1cf444ae8238f2e77498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6170a20c73ac9690afa1cf444ae8238f2e77498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7a0790f3ccdf71e47e8cb79af7820539361f9d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a0790f3ccdf71e47e8cb79af7820539361f9d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7a0790f3ccdf71e47e8cb79af7820539361f9d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5d9235ba945870c20a70499d5565edfb2bd4264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5d9235ba945870c20a70499d5565edfb2bd4264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5d9235ba945870c20a70499d5565edfb2bd4264"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "0795bc6409bbb24b21e9cbdf0c6f93a4cbd4ed5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7a0790f3ccdf71e47e8cb79af7820539361f9d2", "patch": "@@ -1,3 +1,9 @@\n+2015-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65053\n+\t* tree-ssa-phiopt.c (value_replacement): When moving assign before\n+\tcond, either reset VR on lhs or set it to phi result VR.\n+\n 2015-02-13  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/64823"}, {"sha": "f25e959ae2558988c49fc7a73ec401d268b36be2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f7a0790f3ccdf71e47e8cb79af7820539361f9d2", "patch": "@@ -1,3 +1,9 @@\n+2015-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65053\n+\t* gcc.c-torture/execute/pr65053-1.c: New test.\n+\t* gcc.c-torture/execute/pr65053-2.c: New test.\n+\n 2015-02-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/65050"}, {"sha": "edcf41ddb453b1670804b396ee7ad87eda802511", "filename": "gcc/testsuite/gcc.c-torture/execute/pr65053-1.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65053-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65053-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65053-1.c?ref=f7a0790f3ccdf71e47e8cb79af7820539361f9d2", "patch": "@@ -0,0 +1,32 @@\n+/* PR tree-optimization/65053 */\n+\n+int i;\n+\n+__attribute__ ((noinline, noclone))\n+unsigned int foo (void)\n+{\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  unsigned int u = -1;\n+  if (u == -1)\n+    {\n+      unsigned int n = foo ();\n+      if (n > 0)\n+\tu = n - 1;\n+    }\n+\n+  while (u != -1)\n+    {\n+      asm (\"\" : \"+g\" (u));\n+      u = -1;\n+      i = 1;\n+    }\n+\n+  if (i)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "2a0f4e4636131edd3f8d1683003622dea3cea707", "filename": "gcc/testsuite/gcc.c-torture/execute/pr65053-2.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65053-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65053-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65053-2.c?ref=f7a0790f3ccdf71e47e8cb79af7820539361f9d2", "patch": "@@ -0,0 +1,27 @@\n+/* PR tree-optimization/65053 */\n+\n+int i;\n+unsigned int x;\n+\n+int\n+main ()\n+{\n+  asm volatile (\"\" : \"+g\" (x));\n+  unsigned int n = x;\n+  unsigned int u = 32;\n+  if (n >= 32)\n+    __builtin_abort ();\n+  if (n != 0)\n+    u = n + 32;\n+\n+  while (u != 32)\n+    {\n+      asm (\"\" : : \"g\" (u));\n+      u = 32;\n+      i = 1;\n+    }\n+\n+  if (i)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "c7fb0731296075fbcc3e64759ffe6b5777123f2a", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a0790f3ccdf71e47e8cb79af7820539361f9d2/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=f7a0790f3ccdf71e47e8cb79af7820539361f9d2", "patch": "@@ -917,6 +917,31 @@ value_replacement (basic_block cond_bb, basic_block middle_bb,\n \t      && absorbing_element_p (code_def, cond_rhs))))\n     {\n       gsi = gsi_for_stmt (cond);\n+      if (INTEGRAL_TYPE_P (TREE_TYPE (lhs)))\n+\t{\n+\t  /* Moving ASSIGN might change VR of lhs, e.g. when moving u_6\n+\t     def-stmt in:\n+\t     if (n_5 != 0)\n+\t       goto <bb 3>;\n+\t     else\n+\t       goto <bb 4>;\n+\n+\t     <bb 3>:\n+\t     # RANGE [0, 4294967294]\n+\t     u_6 = n_5 + 4294967295;\n+\n+\t     <bb 4>:\n+\t     # u_3 = PHI <u_6(3), 4294967295(2)>  */\n+\t  SSA_NAME_RANGE_INFO (lhs) = NULL;\n+\t  SSA_NAME_ANTI_RANGE_P (lhs) = 0;\n+\t  /* If available, we can use VR of phi result at least.  */\n+\t  tree phires = gimple_phi_result (phi);\n+\t  struct range_info_def *phires_range_info\n+\t    = SSA_NAME_RANGE_INFO (phires);\n+\t  if (phires_range_info)\n+\t    duplicate_ssa_name_range_info (lhs, SSA_NAME_RANGE_TYPE (phires),\n+\t\t\t\t\t   phires_range_info);\n+\t}\n       gimple_stmt_iterator gsi_from = gsi_for_stmt (assign);\n       gsi_move_before (&gsi_from, &gsi);\n       replace_phi_edge_with_variable (cond_bb, e1, phi, lhs);"}]}