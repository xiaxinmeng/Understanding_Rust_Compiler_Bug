{"sha": "57abdadd18b3addfc32fb32086862db3f8fdd7b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdhYmRhZGQxOGIzYWRkZmMzMmZiMzIwODY4NjJkYjNmOGZkZDdiMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-05-22T12:54:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T12:54:59Z"}, "message": "einfo.ads (Has_Volatile_Full_Access): Rename into...\n\n2015-05-22  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* einfo.ads (Has_Volatile_Full_Access): Rename into...\n\t(Is_Volatile_Full_Access): ...this.\n\t(Set_Has_Volatile_Full_Access): Rename into...\n\t(Set_Is_Volatile_Full_Access): ...this.\n\t* einfo.adb (Has_Volatile_Full_Access): Rename into...\n\t(Is_Volatile_Full_Access): ...this.\n\t(Set_Has_Volatile_Full_Access): Rename into...\n\t(Set_Is_Volatile_Full_Access): ...this.\n\t(Is_Atomic_Or_VFA): Adjust to above renaming.\n\t* errout.adb (Special_Msg_Delete): Likewise.\n\t* exp_pakd.adb (Install_PAT): Likewise.\n\t* freeze.adb (Freeze_Array_Type): Likewise.\n\t* sem_ch8.adb (Analyze_Object_Renaming): Likewise.\n\t* sem_ch13.adb (Inherit_Delayed_Rep_Aspects): Likewise.\n\t(Inherit_Aspects_At_Freeze_Point): Likewise.\n\t* sem_prag.adb (Set_Atomic_VFA): Likewise.\n\t(Process_Atomic_Independent_Shared_Volatile): Likewise.\n\t* sem_util.adb (Is_Atomic_Or_VFA_Object): Likewise.\n\nFrom-SVN: r223561", "tree": {"sha": "445e481b9a28aa6561262767a4c380f99ff7fa77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/445e481b9a28aa6561262767a4c380f99ff7fa77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57abdadd18b3addfc32fb32086862db3f8fdd7b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57abdadd18b3addfc32fb32086862db3f8fdd7b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57abdadd18b3addfc32fb32086862db3f8fdd7b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57abdadd18b3addfc32fb32086862db3f8fdd7b1/comments", "author": null, "committer": null, "parents": [{"sha": "f280dd8f6d4e3f95357707c3064253cb87698b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f280dd8f6d4e3f95357707c3064253cb87698b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f280dd8f6d4e3f95357707c3064253cb87698b66"}], "stats": {"total": 129, "additions": 75, "deletions": 54}, "files": [{"sha": "e1a0db0dd3201c60eec5ee5103a69a2b638a982d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=57abdadd18b3addfc32fb32086862db3f8fdd7b1", "patch": "@@ -1,3 +1,24 @@\n+2015-05-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* einfo.ads (Has_Volatile_Full_Access): Rename into...\n+\t(Is_Volatile_Full_Access): ...this.\n+\t(Set_Has_Volatile_Full_Access): Rename into...\n+\t(Set_Is_Volatile_Full_Access): ...this.\n+\t* einfo.adb (Has_Volatile_Full_Access): Rename into...\n+\t(Is_Volatile_Full_Access): ...this.\n+\t(Set_Has_Volatile_Full_Access): Rename into...\n+\t(Set_Is_Volatile_Full_Access): ...this.\n+\t(Is_Atomic_Or_VFA): Adjust to above renaming.\n+\t* errout.adb (Special_Msg_Delete): Likewise.\n+\t* exp_pakd.adb (Install_PAT): Likewise.\n+\t* freeze.adb (Freeze_Array_Type): Likewise.\n+\t* sem_ch8.adb (Analyze_Object_Renaming): Likewise.\n+\t* sem_ch13.adb (Inherit_Delayed_Rep_Aspects): Likewise.\n+\t(Inherit_Aspects_At_Freeze_Point): Likewise.\n+\t* sem_prag.adb (Set_Atomic_VFA): Likewise.\n+\t(Process_Atomic_Independent_Shared_Volatile): Likewise.\n+\t* sem_util.adb (Is_Atomic_Or_VFA_Object): Likewise.\n+\n 2015-05-22  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch5.adb, layout.adb, einfo.adb, einfo.ads, sem_prag.adb,"}, {"sha": "64426ec3af650ffcf44550d9ba10652eae7b4f7c", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=57abdadd18b3addfc32fb32086862db3f8fdd7b1", "patch": "@@ -592,7 +592,7 @@ package body Einfo is\n    --    Has_Nested_Subprogram           Flag282\n    --    Is_Uplevel_Referenced_Entity    Flag283\n    --    Is_Unimplemented                Flag284\n-   --    Has_Volatile_Full_Access        Flag285\n+   --    Is_Volatile_Full_Access         Flag285\n    --    Needs_Typedef                   Flag286\n \n    --    (unused)                        Flag253\n@@ -1856,11 +1856,6 @@ package body Einfo is\n       return Flag87 (Implementation_Base_Type (Id));\n    end Has_Volatile_Components;\n \n-   function Has_Volatile_Full_Access (Id : E) return B is\n-   begin\n-      return Flag285 (Id);\n-   end Has_Volatile_Full_Access;\n-\n    function Has_Xref_Entry (Id : E) return B is\n    begin\n       return Flag182 (Id);\n@@ -2528,6 +2523,11 @@ package body Einfo is\n       end if;\n    end Is_Volatile;\n \n+   function Is_Volatile_Full_Access (Id : E) return B is\n+   begin\n+      return Flag285 (Id);\n+   end Is_Volatile_Full_Access;\n+\n    function Itype_Printed (Id : E) return B is\n    begin\n       pragma Assert (Is_Itype (Id));\n@@ -4758,11 +4758,6 @@ package body Einfo is\n       Set_Flag87 (Id, V);\n    end Set_Has_Volatile_Components;\n \n-   procedure Set_Has_Volatile_Full_Access (Id : E; V : B := True) is\n-   begin\n-      Set_Flag285 (Id, V);\n-   end Set_Has_Volatile_Full_Access;\n-\n    procedure Set_Has_Xref_Entry (Id : E; V : B := True) is\n    begin\n       Set_Flag182 (Id, V);\n@@ -5498,6 +5493,11 @@ package body Einfo is\n       Set_Flag16 (Id, V);\n    end Set_Is_Volatile;\n \n+   procedure Set_Is_Volatile_Full_Access (Id : E; V : B := True) is\n+   begin\n+      Set_Flag285 (Id, V);\n+   end Set_Is_Volatile_Full_Access;\n+\n    procedure Set_Itype_Printed (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Itype (Id));\n@@ -7335,7 +7335,7 @@ package body Einfo is\n \n    function Is_Atomic_Or_VFA (Id : E) return B is\n    begin\n-      return Is_Atomic (Id) or else Has_Volatile_Full_Access (Id);\n+      return Is_Atomic (Id) or else Is_Volatile_Full_Access (Id);\n    end Is_Atomic_Or_VFA;\n \n    ------------------\n@@ -8750,7 +8750,6 @@ package body Einfo is\n       W (\"Has_Uplevel_Reference\",           Flag215 (Id));\n       W (\"Has_Visible_Refinement\",          Flag263 (Id));\n       W (\"Has_Volatile_Components\",         Flag87  (Id));\n-      W (\"Has_Volatile_Full_Access\",        Flag285 (Id));\n       W (\"Has_Xref_Entry\",                  Flag182 (Id));\n       W (\"In_Package_Body\",                 Flag48  (Id));\n       W (\"In_Private_Part\",                 Flag45  (Id));\n@@ -8865,6 +8864,7 @@ package body Einfo is\n       W (\"Is_Visible_Formal\",               Flag206 (Id));\n       W (\"Is_Visible_Lib_Unit\",             Flag116 (Id));\n       W (\"Is_Volatile\",                     Flag16  (Id));\n+      W (\"Is_Volatile_Full_Access\",         Flag285 (Id));\n       W (\"Itype_Printed\",                   Flag202 (Id));\n       W (\"Kill_Elaboration_Checks\",         Flag32  (Id));\n       W (\"Kill_Range_Checks\",               Flag33  (Id));"}, {"sha": "d5a10c2826024e76afeed7f9511b94c92997e50c", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=57abdadd18b3addfc32fb32086862db3f8fdd7b1", "patch": "@@ -2047,12 +2047,6 @@ package Einfo is\n --       type the pragma will be chained to the rep item chain of the first\n --       subtype in the usual manner.\n \n---    Has_Volatile_Full_Access (Flag285)\n---       Defined in all type entities, and also in constants, components and\n---       variables. Set if a pragma Volatile_Full_Access applies to the entity.\n---       In the case of private and incomplete types, this flag is set in\n---       both the partial view and the full view.\n-\n --    Has_Xref_Entry (Flag182)\n --       Defined in all entities. Set if an entity has an entry in the Xref\n --       information generated in ali files. This is true for all source\n@@ -3192,6 +3186,12 @@ package Einfo is\n --       optimizations on volatile objects should test Treat_As_Volatile\n --       rather than testing this flag.\n \n+--    Is_Volatile_Full_Access (Flag285)\n+--       Defined in all type entities, and also in constants, components and\n+--       variables. Set if a pragma Volatile_Full_Access applies to the entity.\n+--       In the case of private and incomplete types, this flag is set in\n+--       both the partial view and the full view.\n+\n --    Is_Wrapper_Package (synthesized)\n --       Defined in package entities. Indicates that the package has been\n --       created as a wrapper for a subprogram instantiation.\n@@ -5444,7 +5444,6 @@ package Einfo is\n    --    Has_Task                            (Flag30)   (base type only)\n    --    Has_Unchecked_Union                 (Flag123)  (base type only)\n    --    Has_Volatile_Components             (Flag87)   (base type only)\n-   --    Has_Volatile_Full_Access            (Flag285)\n    --    In_Use                              (Flag8)\n    --    Is_Abstract_Type                    (Flag146)\n    --    Is_Asynchronous                     (Flag81)\n@@ -5462,6 +5461,7 @@ package Einfo is\n    --    Is_RACW_Stub_Type                   (Flag244)\n    --    Is_Unsigned_Type                    (Flag144)\n    --    Is_Volatile                         (Flag16)\n+   --    Is_Volatile_Full_Access             (Flag285)\n    --    Itype_Printed                       (Flag202)  (itypes only)\n    --    Known_To_Have_Preelab_Init          (Flag207)\n    --    May_Inherit_Delayed_Rep_Aspects     (Flag262)\n@@ -5630,12 +5630,12 @@ package Einfo is\n    --    Related_Type                        (Node27)\n    --    Has_Biased_Representation           (Flag139)\n    --    Has_Per_Object_Constraint           (Flag154)\n-   --    Has_Volatile_Full_Access            (Flag285)\n    --    Is_Atomic                           (Flag85)\n    --    Is_Independent                      (Flag268)\n    --    Is_Return_Object                    (Flag209)\n    --    Is_Tag                              (Flag78)\n    --    Is_Volatile                         (Flag16)\n+   --    Is_Volatile_Full_Access             (Flag285)\n    --    Treat_As_Volatile                   (Flag41)\n    --    Is_Atomic_Or_VFA                    (synth)\n    --    Next_Component                      (synth)\n@@ -5671,7 +5671,6 @@ package Einfo is\n    --    Has_Size_Clause                     (Flag29)\n    --    Has_Thunks                          (Flag228)  (constants only)\n    --    Has_Volatile_Components             (Flag87)\n-   --    Has_Volatile_Full_Access            (Flag285)\n    --    Is_Atomic                           (Flag85)\n    --    Is_Eliminated                       (Flag124)\n    --    Is_Independent                      (Flag268)\n@@ -5680,6 +5679,7 @@ package Einfo is\n    --    Is_True_Constant                    (Flag163)\n    --    Is_Uplevel_Referenced_Entity        (Flag283)\n    --    Is_Volatile                         (Flag16)\n+   --    Is_Volatile_Full_Access             (Flag285)\n    --    Optimize_Alignment_Space            (Flag241)  (constants only)\n    --    Optimize_Alignment_Time             (Flag242)  (constants only)\n    --    Stores_Attribute_Old_Prefix         (Flag270)  (constants only)\n@@ -6406,7 +6406,6 @@ package Einfo is\n    --    Has_Initial_Value                   (Flag219)\n    --    Has_Size_Clause                     (Flag29)\n    --    Has_Volatile_Components             (Flag87)\n-   --    Has_Volatile_Full_Access            (Flag285)\n    --    Is_Atomic                           (Flag85)\n    --    Is_Eliminated                       (Flag124)\n    --    Is_Independent                      (Flag268)\n@@ -6417,6 +6416,7 @@ package Einfo is\n    --    Is_True_Constant                    (Flag163)\n    --    Is_Uplevel_Referenced_Entity        (Flag283)\n    --    Is_Volatile                         (Flag16)\n+   --    Is_Volatile_Full_Access             (Flag285)\n    --    OK_To_Rename                        (Flag247)\n    --    Optimize_Alignment_Space            (Flag241)\n    --    Optimize_Alignment_Time             (Flag242)\n@@ -6859,7 +6859,6 @@ package Einfo is\n    function Has_Uplevel_Reference               (Id : E) return B;\n    function Has_Visible_Refinement              (Id : E) return B;\n    function Has_Volatile_Components             (Id : E) return B;\n-   function Has_Volatile_Full_Access            (Id : E) return B;\n    function Has_Xref_Entry                      (Id : E) return B;\n    function Hiding_Loop_Variable                (Id : E) return E;\n    function Homonym                             (Id : E) return E;\n@@ -6978,6 +6977,7 @@ package Einfo is\n    function Is_Visible_Formal                   (Id : E) return B;\n    function Is_Visible_Lib_Unit                 (Id : E) return B;\n    function Is_Volatile                         (Id : E) return B;\n+   function Is_Volatile_Full_Access             (Id : E) return B;\n    function Itype_Printed                       (Id : E) return B;\n    function Kill_Elaboration_Checks             (Id : E) return B;\n    function Kill_Range_Checks                   (Id : E) return B;\n@@ -7513,7 +7513,6 @@ package Einfo is\n    procedure Set_Has_Uplevel_Reference           (Id : E; V : B := True);\n    procedure Set_Has_Visible_Refinement          (Id : E; V : B := True);\n    procedure Set_Has_Volatile_Components         (Id : E; V : B := True);\n-   procedure Set_Has_Volatile_Full_Access        (Id : E; V : B := True);\n    procedure Set_Has_Xref_Entry                  (Id : E; V : B := True);\n    procedure Set_Hiding_Loop_Variable            (Id : E; V : E);\n    procedure Set_Homonym                         (Id : E; V : E);\n@@ -7637,6 +7636,7 @@ package Einfo is\n    procedure Set_Is_Visible_Formal               (Id : E; V : B := True);\n    procedure Set_Is_Visible_Lib_Unit             (Id : E; V : B := True);\n    procedure Set_Is_Volatile                     (Id : E; V : B := True);\n+   procedure Set_Is_Volatile_Full_Access         (Id : E; V : B := True);\n    procedure Set_Itype_Printed                   (Id : E; V : B := True);\n    procedure Set_Kill_Elaboration_Checks         (Id : E; V : B := True);\n    procedure Set_Kill_Range_Checks               (Id : E; V : B := True);\n@@ -8287,7 +8287,6 @@ package Einfo is\n    pragma Inline (Has_Uplevel_Reference);\n    pragma Inline (Has_Visible_Refinement);\n    pragma Inline (Has_Volatile_Components);\n-   pragma Inline (Has_Volatile_Full_Access);\n    pragma Inline (Has_Xref_Entry);\n    pragma Inline (Hiding_Loop_Variable);\n    pragma Inline (Homonym);\n@@ -8450,6 +8449,7 @@ package Einfo is\n    pragma Inline (Is_Valued_Procedure);\n    pragma Inline (Is_Visible_Formal);\n    pragma Inline (Is_Visible_Lib_Unit);\n+   pragma Inline (Is_Volatile_Full_Access);\n    pragma Inline (Itype_Printed);\n    pragma Inline (Kill_Elaboration_Checks);\n    pragma Inline (Kill_Range_Checks);\n@@ -8786,7 +8786,6 @@ package Einfo is\n    pragma Inline (Set_Has_Unknown_Discriminants);\n    pragma Inline (Set_Has_Visible_Refinement);\n    pragma Inline (Set_Has_Volatile_Components);\n-   pragma Inline (Set_Has_Volatile_Full_Access);\n    pragma Inline (Set_Has_Xref_Entry);\n    pragma Inline (Set_Hiding_Loop_Variable);\n    pragma Inline (Set_Homonym);\n@@ -8909,6 +8908,7 @@ package Einfo is\n    pragma Inline (Set_Is_Visible_Formal);\n    pragma Inline (Set_Is_Visible_Lib_Unit);\n    pragma Inline (Set_Is_Volatile);\n+   pragma Inline (Set_Is_Volatile_Full_Access);\n    pragma Inline (Set_Itype_Printed);\n    pragma Inline (Set_Kill_Elaboration_Checks);\n    pragma Inline (Set_Kill_Range_Checks);"}, {"sha": "7c2a097119f42b16ad207c3d4647fdf319cf089f", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=57abdadd18b3addfc32fb32086862db3f8fdd7b1", "patch": "@@ -3163,7 +3163,7 @@ package body Errout is\n \n       elsif Msg = \"volatile full access to & cannot be guaranteed\" then\n          if Is_Type (E)\n-           and then Has_Volatile_Full_Access (E)\n+           and then Is_Volatile_Full_Access (E)\n            and then No (Get_Rep_Pragma (E, Name_Volatile_Full_Access))\n          then\n             return True;"}, {"sha": "d4968a325a0f9475c2e37c7e87ea847e74bd1d18", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=57abdadd18b3addfc32fb32086862db3f8fdd7b1", "patch": "@@ -537,11 +537,11 @@ package body Exp_Pakd is\n \n          --  Propagate representation aspects\n \n-         Set_Is_Atomic                (PAT, Is_Atomic                (Typ));\n-         Set_Is_Independent           (PAT, Is_Independent           (Typ));\n-         Set_Has_Volatile_Full_Access (PAT, Has_Volatile_Full_Access (Typ));\n-         Set_Is_Volatile              (PAT, Is_Volatile              (Typ));\n-         Set_Treat_As_Volatile        (PAT, Treat_As_Volatile        (Typ));\n+         Set_Is_Atomic               (PAT, Is_Atomic                (Typ));\n+         Set_Is_Independent          (PAT, Is_Independent           (Typ));\n+         Set_Is_Volatile             (PAT, Is_Volatile              (Typ));\n+         Set_Is_Volatile_Full_Access (PAT, Is_Volatile_Full_Access  (Typ));\n+         Set_Treat_As_Volatile       (PAT, Treat_As_Volatile        (Typ));\n \n          --  For a non-bit-packed array, propagate reverse storage order\n          --  flag from original base type to packed array base type."}, {"sha": "586289dab7d60e2896b6a9be616fdf562e32f29d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=57abdadd18b3addfc32fb32086862db3f8fdd7b1", "patch": "@@ -2503,7 +2503,7 @@ package body Freeze is\n                   then\n                      Complain_CS (\"atomic\");\n \n-                  elsif Has_Volatile_Full_Access (Ctyp) then\n+                  elsif Is_Volatile_Full_Access (Ctyp) then\n                      Complain_CS (\"volatile full access\");\n                   end if;\n                end Alias_Atomic_Check;"}, {"sha": "f9ec0ae11374e3b4310218403151456c9a40b85c", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=57abdadd18b3addfc32fb32086862db3f8fdd7b1", "patch": "@@ -968,8 +968,8 @@ package body Sem_Ch13 is\n                      --  Volatile_Full_Access\n \n                      when Aspect_Volatile_Full_Access =>\n-                        if Has_Volatile_Full_Access (P) then\n-                           Set_Has_Volatile_Full_Access (E);\n+                        if Is_Volatile_Full_Access (P) then\n+                           Set_Is_Volatile_Full_Access (E);\n                         end if;\n \n                      --  Volatile_Components\n@@ -1065,7 +1065,7 @@ package body Sem_Ch13 is\n                   end if;\n \n                when Aspect_Volatile_Full_Access =>\n-                  if not Has_Volatile_Full_Access (Par) then\n+                  if not Is_Volatile_Full_Access (Par) then\n                      return;\n                   end if;\n \n@@ -11090,8 +11090,8 @@ package body Sem_Ch13 is\n                    (Get_Rep_Item (Typ, Name_Atomic, Name_Shared))\n       then\n          Set_Is_Atomic (Typ);\n-         Set_Treat_As_Volatile (Typ);\n          Set_Is_Volatile (Typ);\n+         Set_Treat_As_Volatile (Typ);\n       end if;\n \n       --  Convention\n@@ -11171,8 +11171,8 @@ package body Sem_Ch13 is\n         and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n                    (Get_Rep_Item (Typ, Name_Volatile))\n       then\n-         Set_Treat_As_Volatile (Typ);\n          Set_Is_Volatile (Typ);\n+         Set_Treat_As_Volatile (Typ);\n       end if;\n \n       --  Volatile_Full_Access\n@@ -11182,9 +11182,9 @@ package body Sem_Ch13 is\n         and then Is_Pragma_Or_Corr_Pragma_Present_In_Rep_Item\n                    (Get_Rep_Item (Typ, Name_Volatile_Full_Access))\n       then\n-         Set_Has_Volatile_Full_Access (Typ);\n-         Set_Treat_As_Volatile (Typ);\n+         Set_Is_Volatile_Full_Access (Typ);\n          Set_Is_Volatile (Typ);\n+         Set_Treat_As_Volatile (Typ);\n       end if;\n \n       --  Inheritance for derived types only"}, {"sha": "6772328ff9671a764729ed7f7d03d3f8bb84f9bd", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=57abdadd18b3addfc32fb32086862db3f8fdd7b1", "patch": "@@ -919,9 +919,9 @@ package body Sem_Ch8 is\n                P : constant Node_Id := Prefix (Nam);\n             begin\n                if Is_Entity_Name (P) then\n-                  if Has_Volatile_Full_Access (Entity (P))\n+                  if Is_Volatile_Full_Access (Entity (P))\n                        or else\n-                     Has_Volatile_Full_Access (Etype (P))\n+                     Is_Volatile_Full_Access (Etype (P))\n                   then\n                      Error_Msg_N\n                        (\"cannot rename component of Volatile_Full_Access \"\n@@ -1366,10 +1366,10 @@ package body Sem_Ch8 is\n       --  Also copy settings of Atomic/Independent/Volatile_Full_Access\n \n       if Is_Entity_Name (Nam) then\n-         Set_Is_Atomic                (Id, Is_Atomic      (Entity (Nam)));\n-         Set_Is_Independent           (Id, Is_Independent (Entity (Nam)));\n-         Set_Has_Volatile_Full_Access (Id,\n-           Has_Volatile_Full_Access (Entity (Nam)));\n+         Set_Is_Atomic               (Id, Is_Atomic      (Entity (Nam)));\n+         Set_Is_Independent          (Id, Is_Independent (Entity (Nam)));\n+         Set_Is_Volatile_Full_Access (Id,\n+           Is_Volatile_Full_Access (Entity (Nam)));\n       end if;\n \n       --  Treat as volatile if we just set the Volatile flag"}, {"sha": "f9526164aee01eeda3f31260f243bb65c4efdd33", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=57abdadd18b3addfc32fb32086862db3f8fdd7b1", "patch": "@@ -5843,7 +5843,7 @@ package body Sem_Prag is\n          Utyp : Entity_Id;\n \n          procedure Set_Atomic_VFA (E : Entity_Id);\n-         --  Set given type as Is_Atomic or Has_Volatile_Full_Access. Also, if\n+         --  Set given type as Is_Atomic or Is_Volatile_Full_Access. Also, if\n          --  no explicit alignment was given, set alignment to unknown, since\n          --  back end knows what the alignment requirements are for atomic and\n          --  full access arrays. Note: this is necessary for derived types.\n@@ -5855,7 +5855,7 @@ package body Sem_Prag is\n          procedure Set_Atomic_VFA (E : Entity_Id) is\n          begin\n             if Prag_Id = Pragma_Volatile_Full_Access then\n-               Set_Has_Volatile_Full_Access (E);\n+               Set_Is_Volatile_Full_Access (E);\n             else\n                Set_Is_Atomic (E);\n             end if;\n@@ -5889,7 +5889,7 @@ package body Sem_Prag is\n          --  Check Atomic and VFA used together\n \n          if (Is_Atomic (E) and then Prag_Id = Pragma_Volatile_Full_Access)\n-           or else (Has_Volatile_Full_Access (E)\n+           or else (Is_Volatile_Full_Access (E)\n                      and then (Prag_Id = Pragma_Atomic\n                                  or else\n                                Prag_Id = Pragma_Shared))\n@@ -5999,7 +5999,7 @@ package body Sem_Prag is\n                Prag_Id = Pragma_Volatile_Full_Access\n             then\n                if Prag_Id = Pragma_Volatile_Full_Access then\n-                  Set_Has_Volatile_Full_Access (E);\n+                  Set_Is_Volatile_Full_Access (E);\n                else\n                   Set_Is_Atomic (E);\n                end if;\n@@ -6048,7 +6048,7 @@ package body Sem_Prag is\n                                             Get_Source_File_Index (Sloc (Utyp))\n                then\n                   if Prag_Id = Pragma_Volatile_Full_Access then\n-                     Set_Has_Volatile_Full_Access (Utyp);\n+                     Set_Is_Volatile_Full_Access (Utyp);\n                   else\n                      Set_Is_Atomic (Utyp);\n                   end if;"}, {"sha": "8b9dfca717ebc2e4145c98bda41128e6f7f606d6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57abdadd18b3addfc32fb32086862db3f8fdd7b1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=57abdadd18b3addfc32fb32086862db3f8fdd7b1", "patch": "@@ -10285,9 +10285,9 @@ package body Sem_Util is\n       return Is_Atomic_Object (N)\n         or else (Is_Object_Reference (N)\n                    and then Is_Entity_Name (N)\n-                   and then (Has_Volatile_Full_Access (Entity (N))\n+                   and then (Is_Volatile_Full_Access (Entity (N))\n                                 or else\n-                             Has_Volatile_Full_Access (Etype (Entity (N)))));\n+                             Is_Volatile_Full_Access (Etype (Entity (N)))));\n    end Is_Atomic_Or_VFA_Object;\n \n    -------------------------"}]}