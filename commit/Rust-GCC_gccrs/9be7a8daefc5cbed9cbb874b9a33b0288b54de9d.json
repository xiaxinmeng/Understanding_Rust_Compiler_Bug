{"sha": "9be7a8daefc5cbed9cbb874b9a33b0288b54de9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJlN2E4ZGFlZmM1Y2JlZDljYmI4NzRiOWEzM2IwMjg4YjU0ZGU5ZA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-05-17T16:15:02Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-05-17T16:15:02Z"}, "message": "* arm/arm.c (output_option, output_options, m_options): Delete.\n\nFrom-SVN: r11993", "tree": {"sha": "f46223c9955094c5dd3442d879abbac2b5e182a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f46223c9955094c5dd3442d879abbac2b5e182a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9be7a8daefc5cbed9cbb874b9a33b0288b54de9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9be7a8daefc5cbed9cbb874b9a33b0288b54de9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9be7a8daefc5cbed9cbb874b9a33b0288b54de9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9be7a8daefc5cbed9cbb874b9a33b0288b54de9d/comments", "author": null, "committer": null, "parents": [{"sha": "cfd262048c77266eaa3eb04168fc7c645dfe5718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfd262048c77266eaa3eb04168fc7c645dfe5718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfd262048c77266eaa3eb04168fc7c645dfe5718"}], "stats": {"total": 92, "additions": 0, "deletions": 92}, "files": [{"sha": "dcc2ae2c86bd572d03853c9dce7f02b59beba1e7", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be7a8daefc5cbed9cbb874b9a33b0288b54de9d/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be7a8daefc5cbed9cbb874b9a33b0288b54de9d/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=9be7a8daefc5cbed9cbb874b9a33b0288b54de9d", "patch": "@@ -296,98 +296,6 @@ arm_override_options ()\n \n   arm_prog_mode = TARGET_APCS_32 ? PROG_MODE_PROG32 : PROG_MODE_PROG26;\n }\n-\n-#define MAX_LINE 79\n-\n-struct asm_option\n-{\n-  char *string;\n-  int *variable;\n-  int on_value;\n-};\n-\n-static int\n-output_option (file, type, name, pos)\n-     FILE *file;\n-     char *type;\n-     char *name;\n-     int pos;\n-{\n-  int type_len = strlen (type);\n-  int name_len = strlen (name);\n-\n-  if (1 + type_len + name_len + pos > MAX_LINE)\n-    {\n-      fprintf (file, \"\\n%s %s%s\", ASM_COMMENT_START, type, name);\n-      return 3 + type_len + name_len;\n-    }\n-  fprintf (file, \" %s%s\", type, name);\n-  return pos + 1 + type_len + name_len;\n-}\n-\n-static struct { char *name; int value; } m_options[] = TARGET_SWITCHES;\n-extern char *version_string, *language_string;\n-\n-void\n-output_options (file, f_options, f_len, W_options, W_len)\n-     FILE *file;\n-     struct asm_option *f_options;\n-     int f_len;\n-     struct asm_option *W_options;\n-     int W_len;\n-{\n-  int j;\n-  int flags = target_flags;\n-  int pos = 32767;\n-\n-  fprintf (file, \"%s %s %s\", ASM_COMMENT_START, language_string,\n-\t   version_string);\n-\n-  if (optimize)\n-    {\n-      char opt_string[20];\n-      sprintf (opt_string, \"%d\", optimize);\n-      pos = output_option (file, \"-O\", opt_string, pos);\n-    }\n-\n-  if (profile_flag)\n-    pos = output_option (file, \"-p\", \"\", pos);\n-\n-  if (inhibit_warnings)\n-    pos = output_option (file, \"-w\", \"\", pos);\n-\n-  for (j = 0; j < f_len; j++)\n-    {\n-      if (*f_options[j].variable == f_options[j].on_value)\n-\tpos = output_option (file, \"-f\", f_options[j].string, pos);\n-    }\n-\n-  for (j = 0; j < W_len; j++)\n-    {\n-      if (*W_options[j].variable == W_options[j].on_value)\n-\tpos = output_option (file, \"-W\", W_options[j].string, pos);\n-    }\n-\n-  for (j = 0; j < sizeof m_options / sizeof m_options[0]; j++)\n-    {\n-      if (m_options[j].name[0] != '\\0'\n-\t  && m_options[j].value > 0\n-\t  && ((m_options[j].value & flags) == m_options[j].value))\n-\t{\n-\t  pos = output_option (file, \"-m\", m_options[j].name, pos);\n-\t  flags &= ~ m_options[j].value;\n-\t}\n-    }\n-\n-  for (j = 0; j < sizeof (arm_select) / sizeof(arm_select[0]); j++)\n-    if (arm_select[j].string != (char *)0)\n-      pos = output_option (file, arm_select[j].name, arm_select[j].string,\n-\t\t\t   pos);\n-\n-  fputs (\"\\n\\n\", file);\n-}\n-\n-\n \f\n /* Return 1 if it is possible to return using a single instruction */\n "}]}