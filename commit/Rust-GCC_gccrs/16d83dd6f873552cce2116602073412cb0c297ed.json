{"sha": "16d83dd6f873552cce2116602073412cb0c297ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZkODNkZDZmODczNTUyY2NlMjExNjYwMjA3MzQxMmNiMGMyOTdlZA==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim.kuvyrkov@linaro.org", "date": "2014-05-22T07:25:48Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2014-05-22T07:25:48Z"}, "message": "Remove IA64 speculation tweaking flags\n\n\t* config/ia64/ia64.c (ia64_set_sched_flags): Delete handling of\n\tspeculation tuning flags.\n\t(msched-prefer-non-data-spec-insns,)\n\t(msched-prefer-non-control-spec-insns): Obsolete options.\n\t* haifa-sched.c (choose_ready): Remove handling of\n\tPREFER_NON_CONTROL_SPEC and PREFER_NON_DATA_SPEC.\n\t* sched-int.h (enum SPEC_SCHED_FLAGS): Remove PREFER_NON_CONTROL_SPEC\n\tand PREFER_NON_DATA_SPEC.\n\t* sel-sched.c (process_spec_exprs): Remove handling of\n\tPREFER_NON_CONTROL_SPEC and PREFER_NON_DATA_SPEC.\n\nFrom-SVN: r210746", "tree": {"sha": "0b3daa57eb64deffcaa18a86da8474cde31d369d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b3daa57eb64deffcaa18a86da8474cde31d369d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16d83dd6f873552cce2116602073412cb0c297ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d83dd6f873552cce2116602073412cb0c297ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16d83dd6f873552cce2116602073412cb0c297ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d83dd6f873552cce2116602073412cb0c297ed/comments", "author": {"login": "maxim-kuvyrkov", "id": 12545699, "node_id": "MDQ6VXNlcjEyNTQ1Njk5", "avatar_url": "https://avatars.githubusercontent.com/u/12545699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxim-kuvyrkov", "html_url": "https://github.com/maxim-kuvyrkov", "followers_url": "https://api.github.com/users/maxim-kuvyrkov/followers", "following_url": "https://api.github.com/users/maxim-kuvyrkov/following{/other_user}", "gists_url": "https://api.github.com/users/maxim-kuvyrkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxim-kuvyrkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxim-kuvyrkov/subscriptions", "organizations_url": "https://api.github.com/users/maxim-kuvyrkov/orgs", "repos_url": "https://api.github.com/users/maxim-kuvyrkov/repos", "events_url": "https://api.github.com/users/maxim-kuvyrkov/events{/privacy}", "received_events_url": "https://api.github.com/users/maxim-kuvyrkov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03bdb69f1d7196e80988b95166ab5670b0b62d44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03bdb69f1d7196e80988b95166ab5670b0b62d44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03bdb69f1d7196e80988b95166ab5670b0b62d44"}], "stats": {"total": 120, "additions": 25, "deletions": 95}, "files": [{"sha": "7c169f67d17468a99df0193cdad10e5e75a4998d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16d83dd6f873552cce2116602073412cb0c297ed", "patch": "@@ -1,3 +1,17 @@\n+2014-05-22  Maxim Kuvyrkov  <maxim.kuvyrkov@linaro.org>\n+\n+\tRemove IA64 speculation tweaking flags\n+        * config/ia64/ia64.c (ia64_set_sched_flags): Delete handling of\n+        speculation tuning flags.\n+        (msched-prefer-non-data-spec-insns,)\n+        (msched-prefer-non-control-spec-insns): Obsolete options.\n+        * haifa-sched.c (choose_ready): Remove handling of\n+        PREFER_NON_CONTROL_SPEC and PREFER_NON_DATA_SPEC.\n+        * sched-int.h (enum SPEC_SCHED_FLAGS): Remove PREFER_NON_CONTROL_SPEC\n+        and PREFER_NON_DATA_SPEC.\n+        * sel-sched.c (process_spec_exprs): Remove handling of\n+        PREFER_NON_CONTROL_SPEC and PREFER_NON_DATA_SPEC.\n+\n 2014-05-22  Maxim Kuvyrkov  <maxim.kuvyrkov@linaro.org>\n \n \tImprove scheduling debug output"}, {"sha": "7118146998ae52bac2e4516b6341ca91f603b886", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=16d83dd6f873552cce2116602073412cb0c297ed", "patch": "@@ -7943,17 +7943,9 @@ ia64_set_sched_flags (spec_info_t spec_info)\n \t  \n \t  spec_info->flags = 0;\n       \n-\t  if ((mask & DATA_SPEC) && mflag_sched_prefer_non_data_spec_insns)\n-\t    spec_info->flags |= PREFER_NON_DATA_SPEC;\n-\n-\t  if (mask & CONTROL_SPEC)\n-\t    {\n-\t      if (mflag_sched_prefer_non_control_spec_insns)\n-\t\tspec_info->flags |= PREFER_NON_CONTROL_SPEC;\n-\n-\t      if (sel_sched_p () && mflag_sel_sched_dont_check_control_spec)\n-\t\tspec_info->flags |= SEL_SCHED_SPEC_DONT_CHECK_CONTROL;\n-\t    }\n+\t  if ((mask & CONTROL_SPEC)\n+\t      && sel_sched_p () && mflag_sel_sched_dont_check_control_spec)\n+\t    spec_info->flags |= SEL_SCHED_SPEC_DONT_CHECK_CONTROL;\n \n \t  if (sched_verbose >= 1)\n \t    spec_info->dump = sched_dump;"}, {"sha": "60577a1528dab3e13372ce38f191c037e191e639", "filename": "gcc/config/ia64/ia64.opt", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2Fconfig%2Fia64%2Fia64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2Fconfig%2Fia64%2Fia64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.opt?ref=16d83dd6f873552cce2116602073412cb0c297ed", "patch": "@@ -164,12 +164,10 @@ Target Report Var(mflag_sched_spec_control_ldc) Init(0)\n Use simple data speculation check for control speculation\n \n msched-prefer-non-data-spec-insns\n-Target Report Var(mflag_sched_prefer_non_data_spec_insns) Init(0)\n-If set, data speculative instructions will be chosen for schedule only if there are no other choices at the moment \n+Target Ignore Warn(switch %qs is no longer supported)\n \n msched-prefer-non-control-spec-insns\n-Target Report Var(mflag_sched_prefer_non_control_spec_insns) Init(0)\n-If set, control speculative instructions will be chosen for schedule only if there are no other choices at the moment \n+Target Ignore Warn(switch %qs is no longer supported)\n \n msched-count-spec-in-critical-path\n Target Report Var(mflag_sched_count_spec_in_critical_path) Init(0)"}, {"sha": "f39c0476f00dd931c2e3526b9d28d63ae2a36b73", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 5, "deletions": 47, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=16d83dd6f873552cce2116602073412cb0c297ed", "patch": "@@ -5567,9 +5567,8 @@ choose_ready (struct ready_list *ready, bool first_cycle_insn_p,\n   else\n     {\n       /* Try to choose the better insn.  */\n-      int index = 0, i, n;\n+      int index = 0, i;\n       rtx insn;\n-      int try_data = 1, try_control = 1;\n       ds_t ts;\n \n       insn = ready_element (ready, 0);\n@@ -5579,43 +5578,10 @@ choose_ready (struct ready_list *ready, bool first_cycle_insn_p,\n \t  return 0;\n \t}\n \n-      if (spec_info\n-\t  && spec_info->flags & (PREFER_NON_DATA_SPEC\n-\t\t\t\t | PREFER_NON_CONTROL_SPEC))\n-\t{\n-\t  for (i = 0, n = ready->n_ready; i < n; i++)\n-\t    {\n-\t      rtx x;\n-\t      ds_t s;\n-\n-\t      x = ready_element (ready, i);\n-\t      s = TODO_SPEC (x);\n-\n-\t      if (spec_info->flags & PREFER_NON_DATA_SPEC\n-\t\t  && !(s & DATA_SPEC))\n-\t\t{\n-\t\t  try_data = 0;\n-\t\t  if (!(spec_info->flags & PREFER_NON_CONTROL_SPEC)\n-\t\t      || !try_control)\n-\t\t    break;\n-\t\t}\n-\n-\t      if (spec_info->flags & PREFER_NON_CONTROL_SPEC\n-\t\t  && !(s & CONTROL_SPEC))\n-\t\t{\n-\t\t  try_control = 0;\n-\t\t  if (!(spec_info->flags & PREFER_NON_DATA_SPEC) || !try_data)\n-\t\t    break;\n-\t\t}\n-\t    }\n-\t}\n-\n       ts = TODO_SPEC (insn);\n       if ((ts & SPECULATIVE)\n-\t  && (((!try_data && (ts & DATA_SPEC))\n-\t       || (!try_control && (ts & CONTROL_SPEC)))\n-\t      || (targetm.sched.first_cycle_multipass_dfa_lookahead_guard_spec\n-\t\t  && !targetm.sched\n+\t  && (targetm.sched.first_cycle_multipass_dfa_lookahead_guard_spec\n+\t      && (!targetm.sched\n \t\t  .first_cycle_multipass_dfa_lookahead_guard_spec (insn))))\n \t/* Discard speculative instruction that stands first in the ready\n \t   list.  */\n@@ -5624,16 +5590,8 @@ choose_ready (struct ready_list *ready, bool first_cycle_insn_p,\n \t  return 1;\n \t}\n \n-      ready_try[0] = 0;\n-\n-      for (i = 1; i < ready->n_ready; i++)\n-\t{\n-\t  insn = ready_element (ready, i);\n-\n-\t  ready_try [i]\n-\t    = ((!try_data && (TODO_SPEC (insn) & DATA_SPEC))\n-               || (!try_control && (TODO_SPEC (insn) & CONTROL_SPEC)));\n-\t}\n+      for (i = 0; i < ready->n_ready; i++)\n+\tready_try [i] = 0;\n \n       /* Let the target filter the search space.  */\n       for (i = 1; i < ready->n_ready; i++)"}, {"sha": "6e024c29f426a1606170f1c41262cdd3d47e784c", "filename": "gcc/sched-int.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2Fsched-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2Fsched-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-int.h?ref=16d83dd6f873552cce2116602073412cb0c297ed", "patch": "@@ -1141,9 +1141,7 @@ enum SCHED_FLAGS {\n \n enum SPEC_SCHED_FLAGS {\n   COUNT_SPEC_IN_CRITICAL_PATH = 1,\n-  PREFER_NON_DATA_SPEC = COUNT_SPEC_IN_CRITICAL_PATH << 1,\n-  PREFER_NON_CONTROL_SPEC = PREFER_NON_DATA_SPEC << 1,\n-  SEL_SCHED_SPEC_DONT_CHECK_CONTROL = PREFER_NON_CONTROL_SPEC << 1\n+  SEL_SCHED_SPEC_DONT_CHECK_CONTROL = COUNT_SPEC_IN_CRITICAL_PATH << 1\n };\n \n #define NOTE_NOT_BB_P(NOTE) (NOTE_P (NOTE) && (NOTE_KIND (NOTE)\t\\"}, {"sha": "e255d62c7c30dac7d429c0ecba21a291cdbe3ffb", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d83dd6f873552cce2116602073412cb0c297ed/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=16d83dd6f873552cce2116602073412cb0c297ed", "patch": "@@ -3502,8 +3502,6 @@ process_pipelined_exprs (av_set_t *av_ptr)\n static void\n process_spec_exprs (av_set_t *av_ptr)\n {\n-  bool try_data_p = true;\n-  bool try_control_p = true;\n   expr_t expr;\n   av_set_iterator si;\n \n@@ -3529,34 +3527,6 @@ process_spec_exprs (av_set_t *av_ptr)\n           av_set_iter_remove (&si);\n           continue;\n         }\n-\n-      if ((spec_info->flags & PREFER_NON_DATA_SPEC)\n-          && !(ds & BEGIN_DATA))\n-        try_data_p = false;\n-\n-      if ((spec_info->flags & PREFER_NON_CONTROL_SPEC)\n-          && !(ds & BEGIN_CONTROL))\n-        try_control_p = false;\n-    }\n-\n-  FOR_EACH_EXPR_1 (expr, si, av_ptr)\n-    {\n-      ds_t ds;\n-\n-      ds = EXPR_SPEC_DONE_DS (expr);\n-\n-      if (ds & SPECULATIVE)\n-        {\n-          if ((ds & BEGIN_DATA) && !try_data_p)\n-            /* We don't want any data speculative instructions right\n-               now.  */\n-            av_set_iter_remove (&si);\n-\n-          if ((ds & BEGIN_CONTROL) && !try_control_p)\n-            /* We don't want any control speculative instructions right\n-               now.  */\n-            av_set_iter_remove (&si);\n-        }\n     }\n }\n "}]}