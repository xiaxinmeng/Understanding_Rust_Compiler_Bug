{"sha": "a61df6c72756af151f6abc348936bd1389f100b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYxZGY2YzcyNzU2YWYxNTFmNmFiYzM0ODkzNmJkMTM4OWYxMDBiNQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-04-22T06:07:41Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-04-22T06:07:41Z"}, "message": "[multiple changes]\n\n2002-04-22  David S. Miller  <davem@redhat.com>\n\n\t* include/private/gcconfig.h: Hard-code STACKBOTTOM on\n\t64-bit SPARC Linux, the __libc_stack_end technique does\n\tnot work in this case.\n\n2002-04-22  Jeff Sturm  <jsturm@one-point.com>\n\n\t* gcconfig.h: Enable DYNAMIC_LOADING for all sparc-solaris ABIs.\n\nFrom-SVN: r52601", "tree": {"sha": "a4dc9ac198d716718dd70d7b3ce459ca5b9446cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4dc9ac198d716718dd70d7b3ce459ca5b9446cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a61df6c72756af151f6abc348936bd1389f100b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a61df6c72756af151f6abc348936bd1389f100b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a61df6c72756af151f6abc348936bd1389f100b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a61df6c72756af151f6abc348936bd1389f100b5/comments", "author": null, "committer": null, "parents": [{"sha": "77e2c290bab141e7fd02523d4b7ed011af6ff7ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77e2c290bab141e7fd02523d4b7ed011af6ff7ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77e2c290bab141e7fd02523d4b7ed011af6ff7ee"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "e24378d612860252d5afb65be4df6ec6804835ed", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a61df6c72756af151f6abc348936bd1389f100b5/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a61df6c72756af151f6abc348936bd1389f100b5/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=a61df6c72756af151f6abc348936bd1389f100b5", "patch": "@@ -1,3 +1,13 @@\n+2002-04-22  David S. Miller  <davem@redhat.com>\n+\n+\t* include/private/gcconfig.h: Hard-code STACKBOTTOM on\n+\t64-bit SPARC Linux, the __libc_stack_end technique does\n+\tnot work in this case.\n+\n+2002-04-22  Jeff Sturm  <jsturm@one-point.com>\n+\n+\t* gcconfig.h: Enable DYNAMIC_LOADING for all sparc-solaris ABIs.\n+\n 2002-04-17  Hans Boehm  <Hans_Boehm@hp.com>\n \n \t* include/private/gcconfig.h: Use LINUX_STACKBOTTOM for"}, {"sha": "70eee489d64f69c09e9b3d546abfd3212462ca42", "filename": "boehm-gc/include/private/gcconfig.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a61df6c72756af151f6abc348936bd1389f100b5/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a61df6c72756af151f6abc348936bd1389f100b5/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h?ref=a61df6c72756af151f6abc348936bd1389f100b5", "patch": "@@ -777,9 +777,7 @@\n #       define GETPAGESIZE()  sysconf(_SC_PAGESIZE)\n \t\t/* getpagesize() appeared to be missing from at least one */\n \t\t/* Solaris 5.4 installation.  Weird.\t\t\t  */\n-#       if CPP_WORDSZ == 32\n-#\t  define DYNAMIC_LOADING\n-#    \tendif\n+#\tdefine DYNAMIC_LOADING\n #   endif\n #   ifdef SUNOS4\n #\tdefine OS_TYPE \"SUNOS4\"\n@@ -820,10 +818,12 @@\n       extern int _etext[];\n #     define DATAEND (_end)\n #     define SVR4\n-#     define LINUX_STACKBOTTOM\n #     ifdef __arch64__\n+\t/* libc_stack_end is not set reliably for sparc64 */\n+#       define STACKBOTTOM ((ptr_t) 0x80000000000)\n #\tdefine DATASTART (ptr_t)GC_SysVGetDataStart(0x100000, _etext)\n #     else\n+#       define LINUX_STACKBOTTOM\n #\tdefine DATASTART (ptr_t)GC_SysVGetDataStart(0x10000, _etext)\n #     endif\n #   endif"}]}