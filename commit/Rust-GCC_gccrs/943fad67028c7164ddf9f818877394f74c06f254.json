{"sha": "943fad67028c7164ddf9f818877394f74c06f254", "node_id": "C_kwDOANBUbNoAKDk0M2ZhZDY3MDI4YzcxNjRkZGY5ZjgxODg3NzM5NGY3NGMwNmYyNTQ", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2022-01-06T17:28:20Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2022-01-16T09:22:14Z"}, "message": "Add VxWorks fixincludes hack, #include sysLib.h in time.h\n\nMake sure there is a visible prototype of sysClkRateGet() when\nCLOCKS_PER_SEC is #defined to that in time.h for VxWorks.  This\nwould typically be provided by sysLib.h.\n\n2021-01-10  Olivier Hainque  <hainque@adacore.com>\n\n\t* inclhack.def (vxworks_time_h_syslib): New hack.\n\t* tests/base/time.h: Update.\n\t* fixincl.x: Regenerate.", "tree": {"sha": "f119ad3270e87ed178de1f47eb0f4f96e28566ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f119ad3270e87ed178de1f47eb0f4f96e28566ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/943fad67028c7164ddf9f818877394f74c06f254", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943fad67028c7164ddf9f818877394f74c06f254", "html_url": "https://github.com/Rust-GCC/gccrs/commit/943fad67028c7164ddf9f818877394f74c06f254", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943fad67028c7164ddf9f818877394f74c06f254/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00cc412660fe4d64c0b04da9ae20b1ad6ef92bb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00cc412660fe4d64c0b04da9ae20b1ad6ef92bb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00cc412660fe4d64c0b04da9ae20b1ad6ef92bb0"}], "stats": {"total": 102, "additions": 97, "deletions": 5}, "files": [{"sha": "4389ac81a26d4eca2f4a754c062452b1f9dfb7c5", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 50, "deletions": 5, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943fad67028c7164ddf9f818877394f74c06f254/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943fad67028c7164ddf9f818877394f74c06f254/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=943fad67028c7164ddf9f818877394f74c06f254", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  January 15, 2022 at 10:53:02 PM by AutoGen 5.18.16\n+ * It has been AutoGen-ed  January 15, 2022 at 10:53:57 PM by AutoGen 5.18.16\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Jan 15 22:53:02 UTC 2022\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Jan 15 22:53:57 UTC 2022\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 264 fixup descriptions.\n+ * This file contains 265 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -10586,6 +10586,45 @@ static const char* apzVxworks_Iolib_Include_UnistdPatch[] = {\n     \"#include <unistd.h>\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Vxworks_Time_H_Syslib fix\n+ */\n+tSCC zVxworks_Time_H_SyslibName[] =\n+     \"vxworks_time_h_syslib\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zVxworks_Time_H_SyslibList[] =\n+  \"time.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzVxworks_Time_H_SyslibMachs[] = {\n+        \"*-*-vxworks*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zVxworks_Time_H_SyslibSelect0[] =\n+       \"[ \\t]*#define[ \\t]+CLOCKS_PER_SEC[ \\t]+sysClkRateGet.*\";\n+\n+#define    VXWORKS_TIME_H_SYSLIB_TEST_CT  1\n+static tTestDesc aVxworks_Time_H_SyslibTests[] = {\n+  { TT_EGREP,    zVxworks_Time_H_SyslibSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Vxworks_Time_H_Syslib\n+ */\n+static const char* apzVxworks_Time_H_SyslibPatch[] = {\n+    \"format\",\n+    \"%0\\n\\\n+#include <sysLib.h>\",\n+    \"#include <vxWorks.h>|#endif.* _YVALS.*\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of X11_Class fix\n@@ -10756,9 +10795,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          303\n+#define REGEX_COUNT          304\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            264\n+#define FIX_COUNT            265\n \n /*\n  *  Enumerate the fixes\n@@ -11024,6 +11063,7 @@ typedef enum {\n     VXWORKS_TIME_FIXIDX,\n     VXWORKS_WRITE_CONST_FIXIDX,\n     VXWORKS_IOLIB_INCLUDE_UNISTD_FIXIDX,\n+    VXWORKS_TIME_H_SYSLIB_FIXIDX,\n     X11_CLASS_FIXIDX,\n     X11_CLASS_USAGE_FIXIDX,\n     X11_NEW_FIXIDX,\n@@ -12331,6 +12371,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      VXWORKS_IOLIB_INCLUDE_UNISTD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aVxworks_Iolib_Include_UnistdTests,   apzVxworks_Iolib_Include_UnistdPatch, 0 },\n \n+  {  zVxworks_Time_H_SyslibName,    zVxworks_Time_H_SyslibList,\n+     apzVxworks_Time_H_SyslibMachs,\n+     VXWORKS_TIME_H_SYSLIB_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aVxworks_Time_H_SyslibTests,   apzVxworks_Time_H_SyslibPatch, 0 },\n+\n   {  zX11_ClassName,    zX11_ClassList,\n      apzX11_ClassMachs,\n      X11_CLASS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "60d7fd6d78b4733902005052e8b1f30a8f4a3776", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943fad67028c7164ddf9f818877394f74c06f254/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943fad67028c7164ddf9f818877394f74c06f254/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=943fad67028c7164ddf9f818877394f74c06f254", "patch": "@@ -5356,6 +5356,38 @@ fix = {\n     test_text       = \"#include \\\"unistd.h\\\"\";\n };\n \n+/*\n+ *  Make sure there is a visible prototype of sysClkRateGet() when\n+ *  CLOCKS_PER_SEC is #defined to that in time.h for VxWorks.  This would\n+ *  typically be provided by sysLib.h.\n+ *\n+ *  The new #include has to come after the one for vxWorks.h in kernel headers\n+ *  and vxWorks.h is typically not #included in RTP headers. yvals.h is\n+ *  conditionally included in the latter, instead, and new #include are better\n+ *  inserted after that.\n+ */\n+fix = {\n+    hackname    = vxworks_time_h_syslib;\n+    files       = time.h;\n+    mach        = \"*-*-vxworks*\";\n+    select      = \"[ \\t]*#define[ \\t]+CLOCKS_PER_SEC[ \\t]+sysClkRateGet.*\";\n+\n+    c_fix       = format;\n+    c_fix_arg   = \"%0\\n#include <sysLib.h>\";\n+    c_fix_arg   = \"#include <vxWorks.h>|#endif.* _YVALS.*\";\n+\n+    test_text   =\n+    \"/* kernel header pattern:  */\\n\"\n+    \"#include <vxWorks.h>\\n\"\n+    \"\\n\"\n+    \"/* rtp header pattern:  */\\n\"\n+    \"#ifndef _YVALS\\n\"\n+    \"#include <yvals.h>\\n\"\n+    \"#endif /* _YVALS */\\n\"\n+    \"\\n\"\n+    \"#define CLOCKS_PER_SEC  sysClkRateGet()\";\n+};\n+\n /*\n  *  There are several name conflicts with C++ reserved words in X11 header\n  *  files.  These are fixed in some versions, so don't do the fixes if"}, {"sha": "e0252bd85d14836498d800c28cc96abc87510057", "filename": "fixincludes/tests/base/time.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943fad67028c7164ddf9f818877394f74c06f254/fixincludes%2Ftests%2Fbase%2Ftime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943fad67028c7164ddf9f818877394f74c06f254/fixincludes%2Ftests%2Fbase%2Ftime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ftime.h?ref=943fad67028c7164ddf9f818877394f74c06f254", "patch": "@@ -25,3 +25,18 @@ typedef void (*__gcc_VOIDFUNCPTR) ();\n #endif\n #define VOIDFUNCPTR __gcc_VOIDFUNCPTR\n #endif  /* VXWORKS_TIME_CHECK */\n+\n+\n+#if defined( VXWORKS_TIME_H_SYSLIB_CHECK )\n+/* kernel header pattern:  */\n+#include <vxWorks.h>\n+#include <sysLib.h>\n+\n+/* rtp header pattern:  */\n+#ifndef _YVALS\n+#include <yvals.h>\n+#endif /* _YVALS */\n+#include <sysLib.h>\n+\n+#define CLOCKS_PER_SEC  sysClkRateGet()\n+#endif  /* VXWORKS_TIME_H_SYSLIB_CHECK */"}]}