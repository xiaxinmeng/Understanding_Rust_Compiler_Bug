{"sha": "ed053eb8240556e7953ff865c428b784b6546717", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQwNTNlYjgyNDA1NTZlNzk1M2ZmODY1YzQyOGI3ODRiNjU0NjcxNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-08T08:03:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-08T08:03:54Z"}, "message": "re PR tree-optimization/78224 (g++ ICE at -O2(-O1 on gcc6) and above in verify_loop_structure, at cfgloop.c:1646)\n\n2016-11-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/78224\n\t* tree-call-cdce.c (shrink_wrap_one_built_in_call_with_conds):\n\tSplit the fallthru edge in case its successor may have PHIs.\n\tDo not free dominance info.\n\n\t* g++.dg/torture/pr78224.C: New testcase.\n\nFrom-SVN: r241955", "tree": {"sha": "fef6fa3dc72e0b5fddeac5364f9e7a495ebeb207", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fef6fa3dc72e0b5fddeac5364f9e7a495ebeb207"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed053eb8240556e7953ff865c428b784b6546717", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed053eb8240556e7953ff865c428b784b6546717", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed053eb8240556e7953ff865c428b784b6546717", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed053eb8240556e7953ff865c428b784b6546717/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06658c6d05b360dfb85b173d67975603d5e960f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06658c6d05b360dfb85b173d67975603d5e960f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06658c6d05b360dfb85b173d67975603d5e960f3"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "64b0b93ef476d974c5fe2252d9025c3a2a78f1b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed053eb8240556e7953ff865c428b784b6546717/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed053eb8240556e7953ff865c428b784b6546717/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed053eb8240556e7953ff865c428b784b6546717", "patch": "@@ -1,3 +1,10 @@\n+2016-11-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78224\n+\t* tree-call-cdce.c (shrink_wrap_one_built_in_call_with_conds):\n+\tSplit the fallthru edge in case its successor may have PHIs.\n+\tDo not free dominance info.\n+\n 2016-11-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/78229"}, {"sha": "45a09a5e257e640ed12e10c81cfa5a077909eada", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed053eb8240556e7953ff865c428b784b6546717/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed053eb8240556e7953ff865c428b784b6546717/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed053eb8240556e7953ff865c428b784b6546717", "patch": "@@ -1,3 +1,8 @@\n+2016-11-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78224\n+\t* g++.dg/torture/pr78224.C: New testcase.\n+\n 2016-11-08  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \t* gcc.dg/store_merging_1.c: Require store_merge."}, {"sha": "bb85339e8f89f5527009c5ba5b068bccea4e2a4d", "filename": "gcc/testsuite/g++.dg/torture/pr78224.C", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed053eb8240556e7953ff865c428b784b6546717/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr78224.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed053eb8240556e7953ff865c428b784b6546717/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr78224.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr78224.C?ref=ed053eb8240556e7953ff865c428b784b6546717", "patch": "@@ -0,0 +1,51 @@\n+// { dg-do compile }\n+\n+extern \"C\"{\n+  float sqrtf(float);\n+}\n+\n+inline float squareroot(const float f)\n+{\n+  return sqrtf(f);\n+}\n+\n+inline int squareroot(const int f)\n+{\n+  return static_cast<int>(sqrtf(static_cast<float>(f)));\n+}\n+\n+template <class T>\n+class vector2d\n+{\n+public:\n+  vector2d(T nx, T ny) : X(nx), Y(ny) {}\n+  T getLength() const { return squareroot( X*X + Y*Y ); }\n+  T X;\n+  T Y;\n+};\n+\n+vector2d<int> getMousePos();\n+\n+class Client\n+{\n+public:\n+  Client();\n+  ~Client();\n+};\n+\n+void the_game(float turn_amount)\n+{\n+  Client client;\n+  bool first = true;\n+\n+  while (1) {\n+      if (first) {\n+        first = false;\n+      } else {\n+        int dx = getMousePos().X;\n+        int dy = getMousePos().Y;\n+\n+        turn_amount = vector2d<float>(dx, dy).getLength();\n+      }\n+  }\n+}"}, {"sha": "861834d36631a6d0848a745e5279556d508ce7cc", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed053eb8240556e7953ff865c428b784b6546717/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed053eb8240556e7953ff865c428b784b6546717/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=ed053eb8240556e7953ff865c428b784b6546717", "patch": "@@ -807,15 +807,20 @@ shrink_wrap_one_built_in_call_with_conds (gcall *bi_call, vec <gimple *> conds,\n \t can_guard_call_p.  */\n       join_tgt_in_edge_from_call = find_fallthru_edge (bi_call_bb->succs);\n       gcc_assert (join_tgt_in_edge_from_call);\n-      free_dominance_info (CDI_DOMINATORS);\n+      /* We don't want to handle PHIs.  */\n+      if (EDGE_COUNT (join_tgt_in_edge_from_call->dest->preds) > 1)\n+\tjoin_tgt_bb = split_edge (join_tgt_in_edge_from_call);\n+      else\n+\tjoin_tgt_bb = join_tgt_in_edge_from_call->dest;\n     }\n   else\n-    join_tgt_in_edge_from_call = split_block (bi_call_bb, bi_call);\n+    {\n+      join_tgt_in_edge_from_call = split_block (bi_call_bb, bi_call);\n+      join_tgt_bb = join_tgt_in_edge_from_call->dest;\n+    }\n \n   bi_call_bsi = gsi_for_stmt (bi_call);\n \n-  join_tgt_bb = join_tgt_in_edge_from_call->dest;\n-\n   /* Now it is time to insert the first conditional expression\n      into bi_call_bb and split this bb so that bi_call is\n      shrink-wrapped.  */"}]}