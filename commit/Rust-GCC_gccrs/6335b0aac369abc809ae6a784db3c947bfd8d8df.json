{"sha": "6335b0aac369abc809ae6a784db3c947bfd8d8df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMzNWIwYWFjMzY5YWJjODA5YWU2YTc4NGRiM2M5NDdiZmQ4ZDhkZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-09-26T12:29:45Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-09-26T12:29:45Z"}, "message": "ChangeLog.1: Follow spelling conventions.\n\n\t* ChangeLog.1: Follow spelling conventions.\n\t* ChangeLog.4: Likewise.\n\t* ChangeLog.6: Likewise.\n\t* FSFChangeLog.11: Likewise.\n\t* doc/cpp.texi: Likewise.\n\t* doc/invoke.texi: Likewise.\n\t* doc/tm.texi: Likewise.\n\nFrom-SVN: r57539", "tree": {"sha": "fdb4d3d27bd3bdb7bea00129cf48523c4baf442b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdb4d3d27bd3bdb7bea00129cf48523c4baf442b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6335b0aac369abc809ae6a784db3c947bfd8d8df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6335b0aac369abc809ae6a784db3c947bfd8d8df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6335b0aac369abc809ae6a784db3c947bfd8d8df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6335b0aac369abc809ae6a784db3c947bfd8d8df/comments", "author": null, "committer": null, "parents": [{"sha": "09818236a23f448cca09e1db84a18b08f59a5f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09818236a23f448cca09e1db84a18b08f59a5f24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09818236a23f448cca09e1db84a18b08f59a5f24"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "72e9233da051da3cfef8160071eb64a3f6c91544", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6335b0aac369abc809ae6a784db3c947bfd8d8df", "patch": "@@ -1,3 +1,13 @@\n+2002-09-26  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* ChangeLog.1: Follow spelling conventions.\n+\t* ChangeLog.4: Likewise.\n+\t* ChangeLog.6: Likewise.\n+\t* FSFChangeLog.11: Likewise.\n+\t* doc/cpp.texi: Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\t* doc/tm.texi: Likewise.\n+\n 2002-09-26  Nick Clifton  <nickc@redhat.com>\n \n \t* config.gcc: Add x prefix to v850e case for handling"}, {"sha": "7391715b244d95fcd4663edd5312fbf1237b0dba", "filename": "gcc/ChangeLog.1", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2FChangeLog.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2FChangeLog.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.1?ref=6335b0aac369abc809ae6a784db3c947bfd8d8df", "patch": "@@ -13371,7 +13371,7 @@ Sun Sep 13 08:13:39 1998  Ben Elliston  <bje@cygnus.com>\n \truntime library will do this.\n \n \t* objc/Make-lang.in: Do not build the runtime library or install\n-\tthe Objective C header files.  The Makefile for the runtime\n+\tthe Objective-C header files.  The Makefile for the runtime\n \tlibrary will do this.\n \n \t* objc/Makefile.in (all.indirect): Only build the front-end."}, {"sha": "abd3dea1ffa555d38804ca39148e80e028cae8bc", "filename": "gcc/ChangeLog.4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2FChangeLog.4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2FChangeLog.4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.4?ref=6335b0aac369abc809ae6a784db3c947bfd8d8df", "patch": "@@ -9445,7 +9445,7 @@ Thu 07-Sep-2000 21:29:00 BST  Neil Booth  <NeilB@earthling.net>\n \tyy_lim, or yy_get_token.  Don't define get_directive_line if\n \tUSE_CPPLIB.\n \t* c-common.h: Add multiple include guard.  Define RID values\n-\tfor every keyword in C, C++, and Objective C.  Put all the\n+\tfor every keyword in C, C++, and Objective-C.  Put all the\n \tmodifiers first.\n \t(struct c_fileinfo, get_fileinfo, dump_time_statistics): New.\n \t* c-decl.c (c_decode_option): Handle -lang-objc here."}, {"sha": "63eac7d38dd4e88a3fb5710b659ea895d9b8c378", "filename": "gcc/ChangeLog.6", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2FChangeLog.6", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2FChangeLog.6", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.6?ref=6335b0aac369abc809ae6a784db3c947bfd8d8df", "patch": "@@ -19186,13 +19186,13 @@ Sun Jul  1 11:53:52 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* c-parse.in (OBJC_STRING): Kill.\n \t(objc_string): Decompose to [objc_string] '@' STRING.\n-\t(reswords): Take the leading '@' off all the Objective C keywords.\n+\t(reswords): Take the leading '@' off all the Objective-C keywords.\n \t(objc_rid_sans_at): Kill.\n \t(init_reswords): Don't initialize it.\n \t(yylexname): Use OBJC_IS_AT_KEYWORD and OBJC_IS_PQ_KEYWORD.\n \t(_yylex): Kill reconsider label.  Look ahead one token after\n \tan '@'; if we get an identifier, check whether it's an\n-\tObjective C @-keyword.  If so, return the keyword.  Otherwise,\n+\tObjective-C @-keyword.  If so, return the keyword.  Otherwise,\n \tput back the token and return the '@' as a terminal.\n \n \t* cpplib.c (lex_macro_node): Remove unnecessary check for"}, {"sha": "1e80eab580ca58cf2918d0b6153c177c007c4eb9", "filename": "gcc/FSFChangeLog.11", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2FFSFChangeLog.11", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2FFSFChangeLog.11", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FFSFChangeLog.11?ref=6335b0aac369abc809ae6a784db3c947bfd8d8df", "patch": "@@ -9814,7 +9814,7 @@ Tue Oct 15 16:52:33 1996  Ian Lance Taylor  <ian@cygnus.com>\n \n Tue Oct 15 11:19:17 1996  Lee Iverson  <leei@Canada.AI.SRI.COM>\n \n-\t* mips.h (CPP_SPEC): Restore -D_LANGUAGE_C for Objective C.\n+\t* mips.h (CPP_SPEC): Restore -D_LANGUAGE_C for Objective-C.\n \n Mon Oct 14 18:03:35 1996  Jason Merrill  <jason@yorick.cygnus.com>\n \n@@ -9864,7 +9864,7 @@ Fri Oct 11 12:19:21 1996  Ian Lance Taylor  <ian@cygnus.com>\n \t(ASM_SPEC): Rewrite to use above specs.\n \t(SUBTARGET_CPP{,_SIZE}_SPEC): Define.\n \t(CPP_SPEC): Use above specs.  Don't define _LANGUAGE_C if C++ or\n-\tObjective C.\n+\tObjective-C.\n \t({,SUBTARGET_}EXTRA_SPECS): Define.\n \t* mips/dec-bsd.h ({CPP,ASM}_SPEC): Don't define.\n \t* mips/dec-osf1.h (CPP_SPEC): Don't define."}, {"sha": "8d5bde710261769e75cc1568756073cc12bee8c6", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=6335b0aac369abc809ae6a784db3c947bfd8d8df", "patch": "@@ -3604,11 +3604,11 @@ including extensions, with the exception that the effects of\n __STDC__ is not defined.\n \n @item\n-If you use digraphs the behaviour is undefined.\n+If you use digraphs the behavior is undefined.\n \n @item\n If a line that looks like a directive appears within macro arguments,\n-the behaviour is undefined.\n+the behavior is undefined.\n \n @end itemize\n "}, {"sha": "607a08aff3c944afdc34fc961abf76bc46776ef1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6335b0aac369abc809ae6a784db3c947bfd8d8df", "patch": "@@ -1784,7 +1784,7 @@ file named @file{@var{sourcename}.decl}.\n @opindex Wno-protocol\n If a class is declared to implement a protocol, a warning is issued for\n every method in the protocol that is not implemented by the class.  The\n-default behaviour is to issue a warning for every method not explicitly\n+default behavior is to issue a warning for every method not explicitly\n implemented in the class, even if a method implementation is inherited\n from the superclass.  If you use the @code{-Wno-protocol} option, then\n methods inherited from the superclass are considered to be implemented,"}, {"sha": "a0396bc696569a2fdedc8d0be5a32491f73b3fc9", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6335b0aac369abc809ae6a784db3c947bfd8d8df/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=6335b0aac369abc809ae6a784db3c947bfd8d8df", "patch": "@@ -1429,7 +1429,7 @@ alignment of the underlying types of itself and of the previous\n bit-field; (ii) a zero-sized bit-field will affect the alignment of\n the whole enclosing structure, even if it is unnamed; except that\n (iii) a zero-sized bit-field will be disregarded unless it follows\n-another bit-field of non-zero size.  If this hook returns @code{true},\n+another bit-field of nonzero size.  If this hook returns @code{true},\n other macros that control bit-field layout are ignored.\n \n When a bit-field is inserted into a packed record, the whole size"}]}