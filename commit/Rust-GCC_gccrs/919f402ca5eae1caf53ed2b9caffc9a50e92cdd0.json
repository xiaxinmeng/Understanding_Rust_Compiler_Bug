{"sha": "919f402ca5eae1caf53ed2b9caffc9a50e92cdd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE5ZjQwMmNhNWVhZTFjYWY1M2VkMmI5Y2FmZmM5YTUwZTkyY2RkMA==", "commit": {"author": {"name": "Harti Brandt", "email": "hartmut.brandt@dlr.de", "date": "2011-11-18T16:09:29Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-11-18T16:09:29Z"}, "message": "re PR libstdc++/51209 (The template _M_find_node in hashtable.h has a bad return value)\n\n2011-11-18  Harti Brandt  <hartmut.brandt@dlr.de>\n\n\tPR libstdc++/51209\n\t* include/bits/hashtable.h (_Hashtable<>::_M_find_node): Return\n\tnullptr when no node is found.\n\t* include/tr1/hashtable.h (_Hashtable<>::_M_find_node): Return\n\tzero when no node is found.\n\nFrom-SVN: r181480", "tree": {"sha": "4de36f4fca46222c9e46098e3d4b32b266042e1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4de36f4fca46222c9e46098e3d4b32b266042e1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/919f402ca5eae1caf53ed2b9caffc9a50e92cdd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919f402ca5eae1caf53ed2b9caffc9a50e92cdd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/919f402ca5eae1caf53ed2b9caffc9a50e92cdd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919f402ca5eae1caf53ed2b9caffc9a50e92cdd0/comments", "author": {"login": "hartib", "id": 25155062, "node_id": "MDQ6VXNlcjI1MTU1MDYy", "avatar_url": "https://avatars.githubusercontent.com/u/25155062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartib", "html_url": "https://github.com/hartib", "followers_url": "https://api.github.com/users/hartib/followers", "following_url": "https://api.github.com/users/hartib/following{/other_user}", "gists_url": "https://api.github.com/users/hartib/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartib/subscriptions", "organizations_url": "https://api.github.com/users/hartib/orgs", "repos_url": "https://api.github.com/users/hartib/repos", "events_url": "https://api.github.com/users/hartib/events{/privacy}", "received_events_url": "https://api.github.com/users/hartib/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "112eadc76334c1709962ddf47ebf5b11bae685c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112eadc76334c1709962ddf47ebf5b11bae685c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/112eadc76334c1709962ddf47ebf5b11bae685c1"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "235aa0578d479c576777f7bdae25790f48df0193", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919f402ca5eae1caf53ed2b9caffc9a50e92cdd0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919f402ca5eae1caf53ed2b9caffc9a50e92cdd0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=919f402ca5eae1caf53ed2b9caffc9a50e92cdd0", "patch": "@@ -1,3 +1,11 @@\n+2011-11-18  Harti Brandt  <hartmut.brandt@dlr.de>\n+\n+\tPR libstdc++/51209\n+\t* include/bits/hashtable.h (_Hashtable<>::_M_find_node): Return\n+\tnullptr when no node is found.\n+\t* include/tr1/hashtable.h (_Hashtable<>::_M_find_node): Return\n+\tzero when no node is found.\n+\n 2011-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* src/hash-long-double-aux.cc: Rename to..."}, {"sha": "83cef2d4ca45031df1af72bd0380b9463d3deace", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919f402ca5eae1caf53ed2b9caffc9a50e92cdd0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919f402ca5eae1caf53ed2b9caffc9a50e92cdd0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=919f402ca5eae1caf53ed2b9caffc9a50e92cdd0", "patch": "@@ -873,7 +873,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   // Find the node whose key compares equal to k, beginning the search\n-  // at p (usually the head of a bucket).  Return nil if no node is found.\n+  // at p (usually the head of a bucket).  Return nullptr if no node is found.\n   template<typename _Key, typename _Value,\n \t   typename _Allocator, typename _ExtractKey, typename _Equal,\n \t   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,\n@@ -889,7 +889,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       for (; __p; __p = __p->_M_next)\n \tif (this->_M_compare(__k, __code, __p))\n \t  return __p;\n-      return false;\n+      return nullptr;\n     }\n \n   // Insert v in bucket n (assumes no element with its key already present)."}, {"sha": "5e17b238a1fc9dcf4654511c9941a39edac73474", "filename": "libstdc++-v3/include/tr1/hashtable.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919f402ca5eae1caf53ed2b9caffc9a50e92cdd0/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919f402ca5eae1caf53ed2b9caffc9a50e92cdd0/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable.h?ref=919f402ca5eae1caf53ed2b9caffc9a50e92cdd0", "patch": "@@ -813,7 +813,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   // Find the node whose key compares equal to k, beginning the search\n-  // at p (usually the head of a bucket).  Return nil if no node is found.\n+  // at p (usually the head of a bucket).  Return zero if no node is found.\n   template<typename _Key, typename _Value,\n \t   typename _Allocator, typename _ExtractKey, typename _Equal,\n \t   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,\n@@ -829,7 +829,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       for (; __p; __p = __p->_M_next)\n \tif (this->_M_compare(__k, __code, __p))\n \t  return __p;\n-      return false;\n+      return 0;\n     }\n \n   // Insert v in bucket n (assumes no element with its key already present)."}]}