{"sha": "92ea370bfd463eceb6eadfb033f4328f78bfaa66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJlYTM3MGJmZDQ2M2VjZWI2ZWFkZmIwMzNmNDMyOGY3OGJmYWE2Ng==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1993-03-23T12:46:53Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1993-03-23T12:46:53Z"}, "message": "(INCOMING_REGNO, OUTGOING_REGNO): Define.\n\nFrom-SVN: r3835", "tree": {"sha": "0e1e61369ea30ee76461eb220c39c8010f31bdc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e1e61369ea30ee76461eb220c39c8010f31bdc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92ea370bfd463eceb6eadfb033f4328f78bfaa66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92ea370bfd463eceb6eadfb033f4328f78bfaa66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92ea370bfd463eceb6eadfb033f4328f78bfaa66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92ea370bfd463eceb6eadfb033f4328f78bfaa66/comments", "author": null, "committer": null, "parents": [{"sha": "cdece1efd184a99037324ebc23f5294b9a2e8168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdece1efd184a99037324ebc23f5294b9a2e8168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdece1efd184a99037324ebc23f5294b9a2e8168"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "b017400f071a7ace7f82a544329a1d75c1f79432", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92ea370bfd463eceb6eadfb033f4328f78bfaa66/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92ea370bfd463eceb6eadfb033f4328f78bfaa66/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=92ea370bfd463eceb6eadfb033f4328f78bfaa66", "patch": "@@ -709,6 +709,22 @@ extern char leaf_reg_backmap[];\n #define BASE_PASSING_ARG_REG(MODE) (8)\n #define BASE_INCOMING_ARG_REG(MODE) (TARGET_FRW ? 8 : 24)\n \n+/* Define this macro if the target machine has \"register windows\".  This\n+   C expression returns the register number as seen by the called function\n+   corresponding to register number OUT as seen by the calling function.\n+   Return OUT if register number OUT is not an outbound register.  */\n+\n+#define INCOMING_REGNO(OUT) \\\n+ ((TARGET_FRW || (OUT) < 8 || (OUT) > 15) ? (OUT) : (OUT) + 16)\n+\n+/* Define this macro if the target machine has \"register windows\".  This\n+   C expression returns the register number as seen by the calling function\n+   corresponding to register number IN as seen by the called function.\n+   Return IN if register number IN is not an inbound register.  */\n+\n+#define OUTGOING_REGNO(IN) \\\n+ ((TARGET_FRW || (IN) < 24 || (IN) > 31) ? (IN) : (IN) - 16)\n+\n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree).\n    If the precise function being called is known, FUNC is its FUNCTION_DECL;"}]}