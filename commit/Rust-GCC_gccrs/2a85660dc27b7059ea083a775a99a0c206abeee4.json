{"sha": "2a85660dc27b7059ea083a775a99a0c206abeee4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE4NTY2MGRjMjdiNzA1OWVhMDgzYTc3NWE5OWEwYzIwNmFiZWVlNA==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2002-03-03T08:35:11Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2002-03-03T08:35:11Z"}, "message": "Make --CLASSPATH by a synonym for --classpath and -classpath.\n\n\tImplement --bootclasspath.\n\nFrom-SVN: r50247", "tree": {"sha": "2d5ffb4752a4b455256e860f15ecb662d91ac6e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d5ffb4752a4b455256e860f15ecb662d91ac6e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a85660dc27b7059ea083a775a99a0c206abeee4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a85660dc27b7059ea083a775a99a0c206abeee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a85660dc27b7059ea083a775a99a0c206abeee4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a85660dc27b7059ea083a775a99a0c206abeee4/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c26a6db811ab9dd1dd94c1b410cb93871d6d1a47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c26a6db811ab9dd1dd94c1b410cb93871d6d1a47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c26a6db811ab9dd1dd94c1b410cb93871d6d1a47"}], "stats": {"total": 177, "additions": 101, "deletions": 76}, "files": [{"sha": "8db656dc7a325495d6f6e895c1ca93ee322ce6e4", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=2a85660dc27b7059ea083a775a99a0c206abeee4", "patch": "@@ -1,3 +1,30 @@\n+2002-03-02  Per Bothner  <per@bothner.com>\n+\n+\tMake --CLASSPATH by a synonym for --classpath and -classpath.\n+\tImplement --bootclasspath.\n+\t* jcf-path.c (classpath_u):  Rename static variable to classpath_user.\n+\t(classpath_l):  Remove.\n+\t(jcf_path_CLASSPATH_arg):  Remove.\n+\t(jcf_path_bootclasspath_arg):  New function.\n+\t(jcf_path_seal):  Simplify accordingly.\n+\n+\t* jcf.h (jcf_path_bootclasspath_arg):  New declarations.\n+\t(jcf_path_CLASSPATH):  Remove declaration.\n+\t* jvspec.c (jvgenmain_spec):  Also accept -fbootclasspath*.\n+\t(lang_specific_driver):  Translate -bootclasspath.\n+\t* lang-options.h:  Add --bootclasspath.  Update --CLASSPATH.\n+\t* lang.c (decode_lang_options):  Do jcf_path_init first.\n+\tHandle -fCLASSPATH same as -fclasspath.  Also process -fbootclasspath.\n+\t* gjavah.c:  Also handle --bootclasspath.\n+\tHandle --CLASSPATH as a synonum for --classpath.\n+\t* jcf-dump.c: Likewise.\n+\n+\t\".\" is not part of system path, but is the default for --classpath.\n+\t* jcf-path.c (jcf_path_init):  Don't add \".\" to sys_dirs.\n+\t(jcf_path_seal):  Add \".\" if no CLASSPATH specified.\n+\n+\t* gcj.texi:  Document changes.\n+\n 2002-03-01  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* expr.c (build_java_arraystore_check): Fix formatting."}, {"sha": "271a4e756cd81c36914190e3861df114413ddb44", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=2a85660dc27b7059ea083a775a99a0c206abeee4", "patch": "@@ -240,16 +240,16 @@ compatibility with tools like @code{javac} is imported, we recommend\n always using @code{-I} instead of the other options for manipulating the\n class path.\n \n-@item --CLASSPATH=@var{path}\n-This sets the class path to @var{path}, a colon-separated list of paths\n-(on Windows-based systems, a semicolon-separate list of paths). Using\n-this option causes the built in path to be suppressed.\n-\n @item --classpath=@var{path}\n This sets the class path to @var{path}, a colon-separated list of paths\n-(on Windows-based systems, a semicolon-separate list of paths).  This\n-differs from the @code{--classpath} option in that it does not suppress\n-the built-in system path.\n+(on Windows-based systems, a semicolon-separate list of paths).\n+This does not override the builtin (``boot'') search path.\n+\n+@item --CLASSPATH=@var{path}\n+Deprecated synonym for @code{--classpath}.\n+\n+@item --bootclasspath=@var{path}\n+Where to find the standard builtin classes, such as @code{java.lang.String}.\n \n @item CLASSPATH\n This is an environment variable which holds a list of paths.\n@@ -262,21 +262,14 @@ The final class path is constructed like so:\n First come all directories specified via @code{-I}.\n \n @item\n-If @option{--CLASSPATH} is specified, its value is appended and processing\n-stops.  That is, @option{--CLASSPATH} suppresses all the options mentioned\n-later in this list.\n-\n-@item\n-If @option{--classpath} is specified, its value is appended and the\n-@code{CLASSPATH} environment variable is suppressed.\n-\n-@item\n-If the @code{CLASSPATH} environment variable is specified (and was not\n-suppressed by @option{--classpath} or @option{--CLASSPATH}), then its\n-value is appended.\n+If @option{--classpath} is specified, its value is appended.\n+Otherwise, if the @code{CLASSPATH} environment variable is specified,\n+then its value is appended.\n+Otherwise, the current directory (@code{\".\"}) is appended.\n \n @item\n-Finally, the built-in system directory, @file{libgcj.jar}, is appended.\n+Finally, if @code{--bootclasspath} was specified, append its value.\n+Otherwise, append the built-in system directory, @file{libgcj.jar}.\n @end itemize\n \n The classfile built by @code{gcj} for the class @code{java.lang.Object}"}, {"sha": "b88ca8c118b7b52f6c6363583378ab98623acbaa", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=2a85660dc27b7059ea083a775a99a0c206abeee4", "patch": "@@ -2102,7 +2102,8 @@ DEFUN(process_file, (jcf, out),\n #define LONG_OPT(Num)  ((Num) + 128)\n \n #define OPT_classpath     LONG_OPT (0)\n-#define OPT_CLASSPATH     LONG_OPT (1)\n+#define OPT_CLASSPATH     OPT_classpath\n+#define OPT_bootclasspath LONG_OPT (1)\n #define OPT_HELP          LONG_OPT (2)\n #define OPT_TEMP          LONG_OPT (3)\n #define OPT_VERSION       LONG_OPT (4)\n@@ -2119,6 +2120,7 @@ DEFUN(process_file, (jcf, out),\n static const struct option options[] =\n {\n   { \"classpath\",     required_argument, NULL, OPT_classpath },\n+  { \"bootclasspath\", required_argument, NULL, OPT_bootclasspath },\n   { \"CLASSPATH\",     required_argument, NULL, OPT_CLASSPATH },\n   { \"help\",          no_argument,       NULL, OPT_HELP },\n   { \"stubs\",         no_argument,       &stubs, 1 },\n@@ -2158,10 +2160,9 @@ help ()\n   printf (\"  -friend TEXT            Insert TEXT as `friend' declaration\\n\");\n   printf (\"  -prepend TEXT           Insert TEXT before start of class\\n\");\n   printf (\"\\n\");\n-  printf (\"  --CLASSPATH PATH        Set path to find .class files, overriding\\n\\\n-                          built-in class path\\n\");\n   printf (\"  --classpath PATH        Set path to find .class files\\n\");\n   printf (\"  -IDIR                   Append directory to class path\\n\");\n+  printf (\"  --bootclasspath PATH    Override built-in class path\\n\");\n   printf (\"  -d DIRECTORY            Set output directory name\\n\");\n   printf (\"  -o FILE                 Set output file name\\n\");\n   printf (\"  -td DIRECTORY           Set temporary directory name\\n\");\n@@ -2241,8 +2242,8 @@ DEFUN(main, (argc, argv),\n \t  jcf_path_classpath_arg (optarg);\n \t  break;\n \n-\tcase OPT_CLASSPATH:\n-\t  jcf_path_CLASSPATH_arg (optarg);\n+\tcase OPT_bootclasspath:\n+\t  jcf_path_bootclasspath_arg (optarg);\n \t  break;\n \n \tcase OPT_HELP:"}, {"sha": "cf063ac747d0d0b7218db11858b3c51de1583fb7", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=2a85660dc27b7059ea083a775a99a0c206abeee4", "patch": "@@ -774,14 +774,16 @@ DEFUN(process_class, (jcf),\n #define LONG_OPT(Num)  ((Num) + 128)\n \n #define OPT_classpath     LONG_OPT (0)\n-#define OPT_CLASSPATH     LONG_OPT (1)\n+#define OPT_CLASSPATH     OPT_classpath\n+#define OPT_bootclasspath LONG_OPT (1)\n #define OPT_HELP          LONG_OPT (2)\n #define OPT_VERSION       LONG_OPT (3)\n #define OPT_JAVAP         LONG_OPT (4)\n \n static const struct option options[] =\n {\n   { \"classpath\",     required_argument, NULL, OPT_classpath },\n+  { \"bootclasspath\", required_argument, NULL, OPT_bootclasspath },\n   { \"CLASSPATH\",     required_argument, NULL, OPT_CLASSPATH },\n   { \"help\",          no_argument,       NULL, OPT_HELP },\n   { \"verbose\",       no_argument,       NULL, 'v' },\n@@ -806,10 +808,9 @@ help ()\n   printf (\"  -c                      Disassemble method bodies\\n\");\n   printf (\"  --javap                 Generate output in `javap' format\\n\");\n   printf (\"\\n\");\n-  printf (\"  --CLASSPATH PATH        Set path to find .class files, overriding\\n\\\n-                          built-in class path\\n\");\n   printf (\"  --classpath PATH        Set path to find .class files\\n\");\n   printf (\"  -IDIR                   Append directory to class path\\n\");\n+  printf (\"  --bootclasspath PATH    Override built-in class path\\n\");\n   printf (\"  -o FILE                 Set output file name\\n\");\n   printf (\"\\n\");\n   printf (\"  --help                  Print this help, then exit\\n\");\n@@ -876,8 +877,8 @@ DEFUN(main, (argc, argv),\n \t  jcf_path_classpath_arg (optarg);\n \t  break;\n \n-\tcase OPT_CLASSPATH:\n-\t  jcf_path_CLASSPATH_arg (optarg);\n+\tcase OPT_bootclasspath:\n+\t  jcf_path_bootclasspath_arg (optarg);\n \t  break;\n \n \tcase OPT_HELP:"}, {"sha": "0976705532b6ffafc26be1b46aa1f396bf2e67c0", "filename": "gcc/java/jcf-path.c", "status": "modified", "additions": 28, "deletions": 38, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fjcf-path.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fjcf-path.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-path.c?ref=2a85660dc27b7059ea083a775a99a0c206abeee4", "patch": "@@ -1,6 +1,6 @@\n /* Handle CLASSPATH, -classpath, and path searching.\n \n-   Copyright (C) 1998, 1999, 2000, 2001  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation, Inc.\n \n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -72,7 +72,8 @@ static void add_path PARAMS ((struct entry **, const char *, int));\n    built-in system directory (only libgcj.jar)\n    CLASSPATH environment variable\n    -classpath option overrides $CLASSPATH\n-   -CLASSPATH option overrides $CLASSPATH, -classpath, and built-in\n+   -CLASSPATH option is a synonym for -classpath (for compatibility)\n+   -bootclasspath overrides built-in\n    -I prepends path to list\n \n    We implement this by keeping several path lists, and then simply\n@@ -85,10 +86,7 @@ static struct entry *include_dirs;\n static struct entry *classpath_env;\n \n /* This holds the -classpath command-line option.  */\n-static struct entry *classpath_u;\n-\n-/* This holds the -CLASSPATH command-line option.  */\n-static struct entry *classpath_l;\n+static struct entry *classpath_user;\n \n /* This holds the default directories.  Some of these will have the\n    \"system\" flag set.  */\n@@ -222,6 +220,8 @@ add_path (entp, cp, is_system)\n     }\n }\n \n+static int init_done = 0;\n+\n /* Initialize the path module.  */\n void\n jcf_path_init ()\n@@ -231,7 +231,9 @@ jcf_path_init ()\n   struct stat stat_b;\n   int found = 0, len;\n \n-  add_entry (&sys_dirs, \".\", 0);\n+  if (init_done)\n+    return;\n+  init_done = 1;\n \n   sep[0] = DIR_SEPARATOR;\n   sep[1] = '\\0';\n@@ -284,27 +286,25 @@ jcf_path_init ()\n   add_path (&classpath_env, cp, 0);\n }\n \n-/* Call this when -CLASSPATH is seen on the command line.\n-   This is the override-all switch, even the built in classes\n-   are overridden.\n+/* Call this when -classpath is seen on the command line.\n+   This overrides only the $CLASSPATH environment variable.\n  */\n void\n-jcf_path_CLASSPATH_arg (path)\n+jcf_path_classpath_arg (path)\n      const char *path;\n {\n-  free_entry (&classpath_l);\n-  add_path (&classpath_l, path, 0);\n+  free_entry (&classpath_user);\n+  add_path (&classpath_user, path, 0);\n }\n \n-/* Call this when -classpath is seen on the command line.\n-   This overrides only the $CLASSPATH environment variable.\n+/* Call this when -bootclasspath is seen on the command line.\n  */\n void\n-jcf_path_classpath_arg (path)\n+jcf_path_bootclasspath_arg (path)\n      const char *path;\n {\n-  free_entry (&classpath_u);\n-  add_path (&classpath_u, path, 0);\n+  free_entry (&sys_dirs);\n+  add_path (&sys_dirs, path, 1);\n }\n \n /* Call this when -I is seen on the command line.  */\n@@ -322,42 +322,32 @@ void\n jcf_path_seal (print)\n      int print;\n {\n-  int do_system = 1;\n   struct entry *secondary;\n \n   sealed = include_dirs;\n   include_dirs = NULL;\n \n-  if (classpath_l)\n+  if (classpath_user)\n     {\n-      secondary = classpath_l;\n-      classpath_l = NULL;\n-      do_system = 0;\n-    }\n-  else if (classpath_u)\n-    {\n-      secondary = classpath_u;\n-      classpath_u = NULL;\n+      secondary = classpath_user;\n+      classpath_user = NULL;\n     }\n   else\n     {\n+      if (! classpath_env)\n+\tadd_entry (&classpath_env, \".\", 0);\n+\n       secondary = classpath_env;\n       classpath_env = NULL;\n     }\n \n-  free_entry (&classpath_l);\n-  free_entry (&classpath_u);\n+\n+  free_entry (&classpath_user);\n   free_entry (&classpath_env);\n \n   append_entry (&sealed, secondary);\n-\n-  if (do_system)\n-    {\n-      append_entry (&sealed, sys_dirs);\n-      sys_dirs = NULL;\n-    }\n-  else\n-    free_entry (&sys_dirs);\n+  append_entry (&sealed, sys_dirs);\n+  sys_dirs = NULL;\n \n   if (print)\n     {"}, {"sha": "ea096395b1cbac9800316ac453438d0e7b85efbd", "filename": "gcc/java/jcf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fjcf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fjcf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf.h?ref=2a85660dc27b7059ea083a775a99a0c206abeee4", "patch": "@@ -271,8 +271,8 @@ extern void jcf_dependency_print_dummies PARAMS ((void));\n \n /* Declarations for path handling code.  */\n extern void jcf_path_init PARAMS ((void));\n-extern void jcf_path_CLASSPATH_arg PARAMS ((const char *));\n extern void jcf_path_classpath_arg PARAMS ((const char *));\n+extern void jcf_path_bootclasspath_arg PARAMS ((const char *));\n extern void jcf_path_include_arg PARAMS ((const char *));\n extern void jcf_path_seal PARAMS ((int));\n extern void *jcf_path_start PARAMS ((void));"}, {"sha": "58aa1c6fc789cc928ce61c6bb962569a9d616499", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=2a85660dc27b7059ea083a775a99a0c206abeee4", "patch": "@@ -1,6 +1,6 @@\n /* Specific flags and argument handling of the front-end of the \n    GNU compiler for the Java(TM) language.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -66,8 +66,8 @@ static const char jvgenmain_spec[] =\n \t\t   %{<femit-class-file} %{<femit-class-files} %{<fencoding*}\\\n \t\t   %{<fuse-boehm-gc} %{<fhash-synchronization} %{<fjni}\\\n \t\t   %{<findirect-dispatch} \\\n-\t\t   %{<fno-store-check}\\\n-\t\t   %{<fclasspath*} %{<fCLASSPATH*} %{<foutput-class-dir}\\\n+\t\t   %{<fno-store-check} %{<foutput-class-dir}\\\n+\t\t   %{<fclasspath*} %{<fCLASSPATH*} %{<fbootclasspath*}\\\n \t\t   %{<fuse-divide-subroutine} %{<fno-use-divide-subroutine}\\\n \t\t   %{<fcheck-references} %{<fno-check-references}\\\n \t\t   %{<ffilelist-file}\\\n@@ -329,6 +329,7 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t      quote = argv[i];\n \t    }\n \t  else if (strcmp(argv[i], \"-classpath\") == 0\n+\t\t   || strcmp(argv[i], \"-bootclasspath\") == 0\n \t\t   || strcmp(argv[i], \"-CLASSPATH\") == 0)\n \t    {\n \t      quote = argv[i];\n@@ -522,6 +523,7 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t}\n \n       if (strcmp (argv[i], \"-classpath\") == 0\n+\t  || strcmp (argv[i], \"-bootclasspath\") == 0\n \t  || strcmp (argv[i], \"-CLASSPATH\") == 0)\n \t{\n \t  arglist[j] = concat (\"-f\", argv[i]+1, \"=\", argv[i+1], NULL);"}, {"sha": "90e3190871d4fbdb9be9b7feb194a2b5251f2fac", "filename": "gcc/java/lang-options.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang-options.h?ref=2a85660dc27b7059ea083a775a99a0c206abeee4", "patch": "@@ -34,10 +34,12 @@ DEFINE_LANG_NAME (\"Java\")\n     N_(\"Disable assignability checks for stores into object arrays\") },\n   { \"-fjni\",\n     N_(\"Assume native functions are implemented using JNI\") },\n-  { \"--CLASSPATH\",\n-    N_(\"Set class path and suppress system path\") },\n+  { \"--bootclasspath\",\n+    N_(\"Replace system path\") },\n   { \"--classpath\",\n     N_(\"Set class path\") },\n+  { \"--CLASSPATH\",\n+    N_(\"Set class path (deprecated: use --classpath instead)\") },\n   { \"--main\",\n     N_(\"Choose class whose main method should be used\") },\n   { \"--encoding\","}, {"sha": "a71f5ccc89ea65f5a2769dd719daa8a65123086b", "filename": "gcc/java/lang.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a85660dc27b7059ea083a775a99a0c206abeee4/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=2a85660dc27b7059ea083a775a99a0c206abeee4", "patch": "@@ -263,6 +263,8 @@ java_decode_option (argc, argv)\n {\n   char *p = argv[0];\n \n+  jcf_path_init ();\n+\n   if (strcmp (p, \"-version\") == 0)\n     {\n       version_flag = 1;\n@@ -308,7 +310,7 @@ java_decode_option (argc, argv)\n #define CLARG \"-fCLASSPATH=\"\n   if (strncmp (p, CLARG, sizeof (CLARG) - 1) == 0)\n     {\n-      jcf_path_CLASSPATH_arg (p + sizeof (CLARG) - 1);\n+      jcf_path_classpath_arg (p + sizeof (CLARG) - 1);\n       return 1;\n     }\n #undef CLARG\n@@ -318,6 +320,13 @@ java_decode_option (argc, argv)\n       jcf_path_classpath_arg (p + sizeof (CLARG) - 1);\n       return 1;\n     }\n+#undef CLARG\n+#define CLARG \"-fbootclasspath=\"\n+  if (strncmp (p, CLARG, sizeof (CLARG) - 1) == 0)\n+    {\n+      jcf_path_bootclasspath_arg (p + sizeof (CLARG) - 1);\n+      return 1;\n+    }\n #undef CLARG\n   else if (strncmp (p, \"-I\", 2) == 0)\n     {"}]}