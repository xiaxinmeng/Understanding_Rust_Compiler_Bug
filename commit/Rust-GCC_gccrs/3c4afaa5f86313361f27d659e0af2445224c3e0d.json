{"sha": "3c4afaa5f86313361f27d659e0af2445224c3e0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M0YWZhYTVmODYzMTMzNjFmMjdkNjU5ZTBhZjI0NDUyMjRjM2UwZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-16T20:38:20Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-16T20:38:20Z"}, "message": "(finish_decl): If asmspec_tree, clear DECL_BUILT_IN for function and\nDECL_RTL always.\n\nFrom-SVN: r7048", "tree": {"sha": "a69431ee67625d59cbb376722ae566801dfb6d55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a69431ee67625d59cbb376722ae566801dfb6d55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c4afaa5f86313361f27d659e0af2445224c3e0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c4afaa5f86313361f27d659e0af2445224c3e0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c4afaa5f86313361f27d659e0af2445224c3e0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c4afaa5f86313361f27d659e0af2445224c3e0d/comments", "author": null, "committer": null, "parents": [{"sha": "a28e3c7f21098041386f8c52962ac75781849d95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a28e3c7f21098041386f8c52962ac75781849d95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a28e3c7f21098041386f8c52962ac75781849d95"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "a7cd30ee4b136951df64e60b80a5c9bcbfff9ae3", "filename": "gcc/c-decl.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c4afaa5f86313361f27d659e0af2445224c3e0d/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c4afaa5f86313361f27d659e0af2445224c3e0d/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=3c4afaa5f86313361f27d659e0af2445224c3e0d", "patch": "@@ -3406,8 +3406,13 @@ finish_decl (decl, init, asmspec_tree)\n   int temporary = allocation_temporary_p ();\n   char *asmspec = 0;\n \n+  /* If a name was specified, get the string.  Then reset DECL_RTL\n+     so that we will remake it with the new name.  */\n   if (asmspec_tree)\n-    asmspec = TREE_STRING_POINTER (asmspec_tree);\n+    {\n+      asmspec = TREE_STRING_POINTER (asmspec_tree);\n+      DECL_RTL (decl) = 0;\n+    }\n \n   /* If `start_decl' didn't like having an initialization, ignore it now.  */\n \n@@ -3527,6 +3532,11 @@ finish_decl (decl, init, asmspec_tree)\n \t}\n     }\n \n+  /* If this is a function and an assembler name is specified, it isn't\n+     builtin any more.  */\n+  if (TREE_CODE (decl) == FUNCTION_DECL && asmspec)\n+    DECL_BUILT_IN (decl) = 0;\n+\n   /* Output the assembler code and/or RTL code for variables and functions,\n      unless the type is an undefined structure or union.\n      If not, it will get done when the type is completed.  */"}]}