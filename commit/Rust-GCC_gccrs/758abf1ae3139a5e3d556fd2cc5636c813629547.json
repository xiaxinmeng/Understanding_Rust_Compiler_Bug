{"sha": "758abf1ae3139a5e3d556fd2cc5636c813629547", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU4YWJmMWFlMzEzOWE1ZTNkNTU2ZmQyY2M1NjM2YzgxMzYyOTU0Nw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2021-01-06T11:05:40Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2021-01-06T11:05:40Z"}, "message": "add alignment to enable store merging in strict-alignment targets\n\nIn g++.dg/opt/store-merging-2.C, the natural alignment of types T and\nS is a single byte, so we shouldn't expect store merging on\nstrict-alignment platforms.  Indeed, without something like the\nadjust-alignment pass to bump up the alignment of the automatic\nvariable, as in GCC 10, the optimization does not occur.\n\nThis patch adjusts the test so that the required alignment is\nexpressly stated, and so we don't rely on its accidentally being there\nto get the desired optimization.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\t* g++.dg/opt/store-merging-2.C: Add the required alignment.", "tree": {"sha": "ed4c960a1f597766ad1a1b39621810a86ac6779f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed4c960a1f597766ad1a1b39621810a86ac6779f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/758abf1ae3139a5e3d556fd2cc5636c813629547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/758abf1ae3139a5e3d556fd2cc5636c813629547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/758abf1ae3139a5e3d556fd2cc5636c813629547", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/758abf1ae3139a5e3d556fd2cc5636c813629547/comments", "author": null, "committer": null, "parents": [{"sha": "cecf8c662de09c5db14d1e5a4006ab6147980546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cecf8c662de09c5db14d1e5a4006ab6147980546", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cecf8c662de09c5db14d1e5a4006ab6147980546"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "b1ad7018a17895bddcae8bb7a2bfa5d8fa8843af", "filename": "gcc/testsuite/g++.dg/opt/store-merging-2.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/758abf1ae3139a5e3d556fd2cc5636c813629547/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fstore-merging-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/758abf1ae3139a5e3d556fd2cc5636c813629547/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fstore-merging-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fstore-merging-2.C?ref=758abf1ae3139a5e3d556fd2cc5636c813629547", "patch": "@@ -4,7 +4,9 @@\n // { dg-options \"-O2 -flifetime-dse=2 -fdump-tree-store-merging-details\" }\n // { dg-final { scan-tree-dump \"New sequence of 2 stores to replace old one of 3 stores\" \"store-merging\" } }\n \n-struct T { char a[128]; };\n+/* The alignment is necessary for store-merging to take place on\n+   strict-alignment targets.  */\n+struct __attribute__ ((__aligned__ (4))) T { char a[128]; };\n struct S { S () : a () { a.a[12] = 0; a.a[13] = 1; a.a[14] = 0; a.a[15] = 6; } T a; };\n void foo (S &);\n void bar (void) { S s; foo (s); }"}]}