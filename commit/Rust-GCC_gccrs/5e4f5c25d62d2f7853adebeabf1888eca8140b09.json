{"sha": "5e4f5c25d62d2f7853adebeabf1888eca8140b09", "node_id": "C_kwDOANBUbNoAKDVlNGY1YzI1ZDYyZDJmNzg1M2FkZWJlYWJmMTg4OGVjYTgxNDBiMDk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-09-21T00:19:14Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-09-21T00:19:14Z"}, "message": "Daily bump.", "tree": {"sha": "733363a40665f4fdc9cfdb9684e4a78dcf01881c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/733363a40665f4fdc9cfdb9684e4a78dcf01881c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e4f5c25d62d2f7853adebeabf1888eca8140b09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4f5c25d62d2f7853adebeabf1888eca8140b09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e4f5c25d62d2f7853adebeabf1888eca8140b09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4f5c25d62d2f7853adebeabf1888eca8140b09/comments", "author": null, "committer": null, "parents": [{"sha": "59f6dea963b5f7a6b9ced325200359b4831e7fa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f6dea963b5f7a6b9ced325200359b4831e7fa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f6dea963b5f7a6b9ced325200359b4831e7fa7"}], "stats": {"total": 238, "additions": 237, "deletions": 1}, "files": [{"sha": "c37553007672c4ab8b3b8a31e6a272bc338130a8", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4f5c25d62d2f7853adebeabf1888eca8140b09/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4f5c25d62d2f7853adebeabf1888eca8140b09/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=5e4f5c25d62d2f7853adebeabf1888eca8140b09", "patch": "@@ -1,3 +1,8 @@\n+2022-09-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Skip egrep: warning: egrep is\n+\t  obsolescent; using grep -E.\n+\n 2022-08-31  Martin Liska  <mliska@suse.cz>\n \n \t* config-list.mk: Remove deprecated ports."}, {"sha": "0def653a237e84c0aee32d624e8e6f5594e81b6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e4f5c25d62d2f7853adebeabf1888eca8140b09", "patch": "@@ -1,3 +1,89 @@\n+2022-09-20  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.h (frange::maybe_isnan): Return false for\n+\tundefined ranges.\n+\n+2022-09-20  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (frange::set_nonnegative): Set +NAN.\n+\t(range_tests_signed_zeros): New test.\n+\t* value-range.h (frange::update_nan): New overload to set NAN sign.\n+\n+2022-09-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/106491\n+\t* config/aarch64/aarch64-sve-builtins.cc (scalar_types)\n+\t(acle_vector_types, acle_svpattern, acle_svprfop): Add GTY\n+\tmarkup to (new) extern declarations instead of to the main\n+\tdefinition.\n+\n+2022-09-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/106794\n+\tPR tree-optimization/106914\n+\t* tree-vect-slp.cc (vect_optimize_slp_pass::internal_node_cost):\n+\tOnly consider loads that already have a permutation.\n+\t(vect_optimize_slp_pass::start_choosing_layouts): Assert that\n+\tloads with permutations are leaf nodes.  Prevent any kind of grouped\n+\taccess from changing layout if it doesn't have a load permutation.\n+\n+2022-09-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-data-refs.cc (vect_check_gather_scatter): Restrict\n+\tearly-out optimisation to SSA_NAMEs.\n+\n+2022-09-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* ctfc.cc (ctf_add_string): Replace \"the the\" with \"the\".\n+\t* doc/md.texi: Likewise.\n+\t* gimple-range-infer.cc (non_null_loadstore): Likewise.\n+\n+2022-09-20  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/106910\n+\t* config/i386/mmx.md (nearbyintv2sf2): New expander.\n+\t(rintv2sf2): Ditto.\n+\t(ceilv2sf2): Ditto.\n+\t(lceilv2sfv2si2): Ditto.\n+\t(floorv2sf2): Ditto.\n+\t(lfloorv2sfv2si2): Ditto.\n+\t(btruncv2sf2): Ditto.\n+\t(lrintv2sfv2si2): Ditto.\n+\t(roundv2sf2): Ditto.\n+\t(lroundv2sfv2si2): Ditto.\n+\t(*mmx_roundv2sf2): New define_insn.\n+\n+2022-09-20  konglin1  <lingling.kong@intel.com>\n+\n+\tPR middle-end/105735\n+\t* tree-scalar-evolution.cc\n+\t(analyze_and_compute_bitop_with_inv_effect): New function.\n+\t(final_value_replacement_loop): Enhanced to handle bitop\n+\twith inv induction.\n+\n+2022-09-20  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* config/loongarch/gnu-user.h (GNU_USER_TARGET_LINK_SPEC): For\n+\t-static-pie, pass -static -pie --no-dynamic-linker -z text to\n+\tthe linker, and do not pass --dynamic-linker.\n+\n+2022-09-20  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (frange::flush_denormals_to_zero): New.\n+\t(frange::set): Call flush_denormals_to_zero.\n+\t* value-range.h (class frange): Add flush_denormals_to_zero.\n+\n+2022-09-20  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* config/i386/x86-tune-sched.cc (ix86_issue_rate): Adjust for\n+\tlatest Intel processors.\n+\n+2022-09-20  konglin1  <lingling.kong@intel.com>\n+\n+\tPR target/106887\n+\t* config/i386/i386-expand.cc (ix86_expand_vector_init_duplicate):\n+\tFixed V16BF mode case.\n+\n 2022-09-19  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n \n \t* targhooks.cc (default_zero_call_used_regs): Improve sorry"}, {"sha": "2407ee3feb454f6698594a51ba4cb707dfe66d49", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5e4f5c25d62d2f7853adebeabf1888eca8140b09", "patch": "@@ -1 +1 @@\n-20220920\n+20220921"}, {"sha": "fe048b898a4407608fdd3a2b13ee8afb75187e2c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5e4f5c25d62d2f7853adebeabf1888eca8140b09", "patch": "@@ -1,3 +1,9 @@\n+2022-09-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* exp_ch6.adb: Replace \"the the\" with \"the\".\n+\t* sem_ch6.adb: Likewise.\n+\t* sem_disp.ads: Likewise.\n+\n 2022-09-15  Richard Biener  <rguenther@suse.de>\n \n \t* gcc-interface/trans.cc (gigi): Do not initialize void_list_node."}, {"sha": "afcb0f0e2c7dc9aa997417a98da9823c23e7df50", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5e4f5c25d62d2f7853adebeabf1888eca8140b09", "patch": "@@ -1,3 +1,16 @@\n+2022-09-20  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* decl.cc (cp_finish_decl): After updating the deduced type of a\n+\tVAR_DECL, also update the corresponding TEMPLATE_DECL if there\n+\tis one.\n+\n+2022-09-20  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/106761\n+\t* module.cc (trees_out::type_node) <case TYPE_PACK_EXPANSION>:\n+\tStream PACK_EXPANSION_EXTRA_ARGS.\n+\t(trees_in::tree_node) <case TYPE_PACK_EXPANSION>: Likewise.\n+\n 2022-09-17  Patrick Palka  <ppalka@redhat.com>\n \n \t* module.cc (friend_from_decl_list): Don't consider"}, {"sha": "a53df9339f799306178f2a4cb2683da6d54888fe", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5e4f5c25d62d2f7853adebeabf1888eca8140b09", "patch": "@@ -1,3 +1,40 @@\n+2022-09-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/104143\n+\t* interface.cc (compare_parameter): Permit scalar args to\n+\t'type(*), dimension(*)'.\n+\n+2022-09-20  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/106986\n+\t* simplify.cc (gfc_simplify_findloc): Do not try to simplify\n+\tintrinsic FINDLOC when the ARRAY argument has a NULL shape.\n+\n+2022-09-20  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/106985\n+\t* expr.cc (gfc_simplify_expr): Avoid NULL pointer dereference.\n+\n+2022-09-20  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100132\n+\t* trans-types.cc (create_fn_spec): Fix function attributes when\n+\tpassing polymorphic pointers.\n+\n+2022-09-20  Martin Liska  <mliska@suse.cz>\n+\n+\tPR fortran/106636\n+\t* gfortran.texi: Add back link to ISO_VARYING_STRING.\n+\n+2022-09-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* gfortran.texi: Replace \"the the\" with \"the\".\n+\n+2022-09-20  Martin Liska  <mliska@suse.cz>\n+\n+\tPR fortran/106636\n+\t* gfortran.texi: Remove 2 dead links.\n+\n 2022-09-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* libgfortran.h: Declare GFC_FPE_AWAY."}, {"sha": "340a9f9acf97c3e77e4304aa1f60747e430a263e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4f5c25d62d2f7853adebeabf1888eca8140b09/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e4f5c25d62d2f7853adebeabf1888eca8140b09", "patch": "@@ -1,3 +1,87 @@\n+2022-09-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/104143\n+\t* gfortran.dg/c-interop/c407b-2.f90: Remove dg-error.\n+\t* gfortran.dg/assumed_type_16.f90: New test.\n+\t* gfortran.dg/assumed_type_17.f90: New test.\n+\n+2022-09-20  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/106986\n+\t* gfortran.dg/pr106986.f90: New test.\n+\n+2022-09-20  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/106985\n+\t* gfortran.dg/pr106985.f90: New test.\n+\n+2022-09-20  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* g++.dg/modules/xtreme-header-2.h: Include <execution>.\n+\t* g++.dg/modules/xtreme-header-6.h: Include implemented\n+\tC++20 library headers.\n+\t* g++.dg/modules/xtreme-header.h: Likewise.  Remove\n+\tNO_ASSOCIATED_LAMBDA workaround.  Include implemented C++23\n+\tlibrary headers.\n+\n+2022-09-20  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* g++.dg/modules/auto-3.h: New test.\n+\t* g++.dg/modules/auto-3_a.H: New test.\n+\t* g++.dg/modules/auto-3_b.C: New test.\n+\n+2022-09-20  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100132\n+\t* gfortran.dg/PR100132.f90: New test.\n+\n+2022-09-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.dg/vect/pr106914.c: New test.\n+\t* g++.dg/vect/pr106794.cc: Likewise.\n+\n+2022-09-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.dg/vect/vect-gather-5.c: New test.\n+\n+2022-09-20  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/106970\n+\t* gcc.dg/tree-ssa/pr106970.c: New test.\n+\n+2022-09-20  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/106761\n+\t* g++.dg/modules/pr106761.h: New test.\n+\t* g++.dg/modules/pr106761_a.H: New test.\n+\t* g++.dg/modules/pr106761_b.C: New test.\n+\n+2022-09-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/warn/Wclass-memaccess.C: Replace \"the the\" with \"the\".\n+\t* g++.dg/warn/Wconversion-real-integer2.C: Likewise.\n+\t* gcc.target/powerpc/p9-extract-1.c: Likewise.\n+\t* gcc.target/s390/s390.exp: Likewise.\n+\t* gcc.target/s390/zvector/vec-cmp-2.c: Likewise.\n+\t* gdc.dg/torture/simd_store.d: Likewise.\n+\t* gfortran.dg/actual_array_offset_1.f90: Likewise.\n+\t* gfortran.dg/pdt_15.f03: Likewise.\n+\t* gfortran.dg/pointer_array_8.f90: Likewise.\n+\n+2022-09-20  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr106910-1.c: New test.\n+\n+2022-09-20  konglin1  <lingling.kong@intel.com>\n+\n+\t* gcc.target/i386/pr105735-1.c: New test.\n+\t* gcc.target/i386/pr105735-2.c: New test.\n+\n+2022-09-20  konglin1  <lingling.kong@intel.com>\n+\n+\tPR target/106887\n+\t* gcc.target/i386/vect-bfloat16-2c.c: New test.\n+\n 2022-09-19  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/106947"}, {"sha": "fb02c6435b2db437d285696a9334d1b0a51abc3a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4f5c25d62d2f7853adebeabf1888eca8140b09/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4f5c25d62d2f7853adebeabf1888eca8140b09/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5e4f5c25d62d2f7853adebeabf1888eca8140b09", "patch": "@@ -1,3 +1,8 @@\n+2022-09-20  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/c_global/cstdlib [!_GLIBCXX_HOSTED] (quick_exit): Fix\n+\tmissing space.\n+\n 2022-09-16  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/106953"}]}