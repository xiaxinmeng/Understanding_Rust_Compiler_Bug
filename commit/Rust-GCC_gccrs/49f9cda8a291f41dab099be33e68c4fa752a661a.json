{"sha": "49f9cda8a291f41dab099be33e68c4fa752a661a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlmOWNkYThhMjkxZjQxZGFiMDk5YmUzM2U2OGM0ZmE3NTJhNjYxYQ==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-02-23T09:41:10Z"}, "committer": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-02-23T09:41:10Z"}, "message": "t-linux (LIBGCC1, [...]): Add macros and set to empty.\n\ne\n\t* config/t-linux (LIBGCC1, CROSS_LIBGCC1, LIBGCC1_TEST): Add macros and\n\tset to empty.\n\t* config/t-linux-aout (LIBGCC1, CROSS_LIBGCC1, LIBGCC1_TEST): Likewise.\n\t* config/alpha/t-linux: Remove file.\n\t* config/sparc/t-linux: Remove file.\n\t* config/m68k/t-linux (LIBGCC1, CROSS_LIBGCC1): Remove.\n\t* config/m68k/t-linux-aout (LIBGCC1, CROSS_LIBGCC1): Likewise.\n\t* configure.in (alpha*-*-linux-gnulibc1*): Use t-linux instead of alpha/t-linux\n\tfor tmake_file.\n\t(alpha*-*-linux-gnu*): Likewise.\n\t(sparc-*-linux-gnulibc1*): Use t-linux instead of sparc/t-linux for tmake_file.\n\t(sparc-*-linux-gnu*): Likewise.\n\nFrom-SVN: r18206", "tree": {"sha": "3b0bedf67cff3fc6e6c5b62be1f6fbf6f28420ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b0bedf67cff3fc6e6c5b62be1f6fbf6f28420ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49f9cda8a291f41dab099be33e68c4fa752a661a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49f9cda8a291f41dab099be33e68c4fa752a661a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49f9cda8a291f41dab099be33e68c4fa752a661a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49f9cda8a291f41dab099be33e68c4fa752a661a/comments", "author": null, "committer": null, "parents": [{"sha": "650036588ed477715dd2f6f5fa9853d49be99a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/650036588ed477715dd2f6f5fa9853d49be99a7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/650036588ed477715dd2f6f5fa9853d49be99a7d"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "e4c9fd492618ecd1740d5dffe0e150b73cef96a5", "filename": "gcc/config/alpha/t-linux", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/650036588ed477715dd2f6f5fa9853d49be99a7d/gcc%2Fconfig%2Falpha%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/650036588ed477715dd2f6f5fa9853d49be99a7d/gcc%2Fconfig%2Falpha%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ft-linux?ref=650036588ed477715dd2f6f5fa9853d49be99a7d", "patch": "@@ -1,5 +0,0 @@\n-# Do not build libgcc1. Let gcc generate those functions. The Linux\n-# C library can handle them.\n-LIBGCC1 = \n-CROSS_LIBGCC1 =\n-LIBGCC1_TEST ="}, {"sha": "99dc4522ea45622cd43a70867cc0a44ff2738c51", "filename": "gcc/config/m68k/t-linux-aout", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f9cda8a291f41dab099be33e68c4fa752a661a/gcc%2Fconfig%2Fm68k%2Ft-linux-aout", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f9cda8a291f41dab099be33e68c4fa752a661a/gcc%2Fconfig%2Fm68k%2Ft-linux-aout", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-linux-aout?ref=49f9cda8a291f41dab099be33e68c4fa752a661a", "patch": "@@ -1,5 +1,2 @@\n-# Don't make libgcc1.a\n-LIBGCC1 =\n-CROSS_LIBGCC1 =\n-# On Linux we can print long double\n+# On GNU/Linux we can print long double\n ENQUIRE_CFLAGS = -DNO_MEM -O0"}, {"sha": "5a4690eab1f71a30698c859948a76f154f206425", "filename": "gcc/config/sparc/t-linux", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/650036588ed477715dd2f6f5fa9853d49be99a7d/gcc%2Fconfig%2Fsparc%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/650036588ed477715dd2f6f5fa9853d49be99a7d/gcc%2Fconfig%2Fsparc%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-linux?ref=650036588ed477715dd2f6f5fa9853d49be99a7d", "patch": "@@ -1,6 +0,0 @@\n-LIBGCC1 =\n-CROSS_LIBGCC1 =\n-\n-# We don't want to build .umul, etc., because Linux provides them,\n-# which means that libgcc1-test will fail for cross-compiler.\n-LIBGCC1_TEST ="}, {"sha": "8826cddcab655f2de5c5ae9818e4b7513966c209", "filename": "gcc/config/t-linux-aout", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f9cda8a291f41dab099be33e68c4fa752a661a/gcc%2Fconfig%2Ft-linux-aout", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f9cda8a291f41dab099be33e68c4fa752a661a/gcc%2Fconfig%2Ft-linux-aout", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-linux-aout?ref=49f9cda8a291f41dab099be33e68c4fa752a661a", "patch": "@@ -3,3 +3,9 @@ STMP_FIXPROTO =\n \n # Don't install \"assert.h\" in gcc. We use the one in glibc.\n INSTALL_ASSERT_H =\n+\n+# Do not build libgcc1. Let gcc generate those functions. The GNU/Linux\n+# C library can handle them.\n+LIBGCC1 = \n+CROSS_LIBGCC1 =\n+LIBGCC1_TEST ="}]}