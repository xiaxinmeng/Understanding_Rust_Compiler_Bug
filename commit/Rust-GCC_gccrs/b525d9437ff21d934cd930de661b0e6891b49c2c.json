{"sha": "b525d9437ff21d934cd930de661b0e6891b49c2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUyNWQ5NDM3ZmYyMWQ5MzRjZDkzMGRlNjYxYjBlNjg5MWI0OWMyYw==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-11T11:22:26Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-11T11:22:26Z"}, "message": "i386-common.c (OPTION_MASK_ISA_AVX512BW_SET): Define.\n\ngcc/\n        * common/config/i386/i386-common.c\n\t(OPTION_MASK_ISA_AVX512BW_SET) : Define.\n\t(OPTION_MASK_ISA_AVX512BW_UNSET): Ditto.\n\t(OPTION_MASK_ISA_AVX512VL_UNSET) : Ditto.\n\t(ix86_handle_option): Handle OPT_mavx512bw.\n\t* config/i386/cpuid.h (bit_AVX512BW): Define.\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect avx512bw,\n\tset -mavx512bw accordingly.\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle\n\tOPTION_MASK_ISA_AVX512BW.\n\t* config/i386/i386.c (ix86_target_string): Handle -mavx512bw.\n\t(ix86_option_override_internal): Define PTA_AVX512BW, handle\n\tPTA_AVX512BW and OPTION_MASK_ISA_AVX512BW.\n\t(ix86_valid_target_attribute_inner_p): Handle OPT_mavx512bw.\n\t* config/i386/i386.h (TARGET_AVX512BW): Define.\n\t(TARGET_AVX512BW_P(x)): Ditto.\n\t* config/i386/i386.opt: Add mavx512bw.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r213811", "tree": {"sha": "364f4c0d8e9c8083588618f90b24c9d000f59643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/364f4c0d8e9c8083588618f90b24c9d000f59643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b525d9437ff21d934cd930de661b0e6891b49c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b525d9437ff21d934cd930de661b0e6891b49c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b525d9437ff21d934cd930de661b0e6891b49c2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b525d9437ff21d934cd930de661b0e6891b49c2c/comments", "author": null, "committer": null, "parents": [{"sha": "5f732aeb8ebbe04e9912faa497093dd91e8dc898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f732aeb8ebbe04e9912faa497093dd91e8dc898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f732aeb8ebbe04e9912faa497093dd91e8dc898"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "87f38b0d928884e33b960af117ec536dc1a775f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b525d9437ff21d934cd930de661b0e6891b49c2c", "patch": "@@ -1,3 +1,30 @@\n+2014-08-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+        * common/config/i386/i386-common.c\n+\t(OPTION_MASK_ISA_AVX512BW_SET) : Define.\n+\t(OPTION_MASK_ISA_AVX512BW_UNSET): Ditto.\n+\t(OPTION_MASK_ISA_AVX512VL_UNSET) : Ditto.\n+\t(ix86_handle_option): Handle OPT_mavx512bw.\n+\t* config/i386/cpuid.h (bit_AVX512BW): Define.\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect avx512bw,\n+\tset -mavx512bw accordingly.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle\n+\tOPTION_MASK_ISA_AVX512BW.\n+\t* config/i386/i386.c (ix86_target_string): Handle -mavx512bw.\n+\t(ix86_option_override_internal): Define PTA_AVX512BW, handle\n+\tPTA_AVX512BW and OPTION_MASK_ISA_AVX512BW.\n+\t(ix86_valid_target_attribute_inner_p): Handle OPT_mavx512bw.\n+\t* config/i386/i386.h (TARGET_AVX512BW): Define.\n+\t(TARGET_AVX512BW_P(x)): Ditto.\n+\t* config/i386/i386.opt: Add mavx512bw.\n+\n 2014-08-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/62070"}, {"sha": "bb7bc46e017452a8ac5fc147d711856b8b830fe1", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=b525d9437ff21d934cd930de661b0e6891b49c2c", "patch": "@@ -67,6 +67,8 @@ along with GCC; see the file COPYING3.  If not see\n   (OPTION_MASK_ISA_AVX512ER | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_AVX512DQ_SET \\\n   (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512F_SET)\n+#define OPTION_MASK_ISA_AVX512BW_SET \\\n+  (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_RTM_SET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_SET OPTION_MASK_ISA_PRFCHW\n #define OPTION_MASK_ISA_RDSEED_SET OPTION_MASK_ISA_RDSEED\n@@ -154,11 +156,13 @@ along with GCC; see the file COPYING3.  If not see\n   (OPTION_MASK_ISA_AVX2 | OPTION_MASK_ISA_AVX512F_UNSET)\n #define OPTION_MASK_ISA_AVX512F_UNSET \\\n   (OPTION_MASK_ISA_AVX512F | OPTION_MASK_ISA_AVX512CD_UNSET \\\n-   | OPTION_MASK_ISA_AVX512PF_UNSET | OPTION_MASK_ISA_AVX512ER_UNSET)\n+   | OPTION_MASK_ISA_AVX512PF_UNSET | OPTION_MASK_ISA_AVX512ER_UNSET \\\n+   | OPTION_MASK_ISA_AVX512DQ_UNSET | OPTION_MASK_ISA_AVX512BW_UNSET)\n #define OPTION_MASK_ISA_AVX512CD_UNSET OPTION_MASK_ISA_AVX512CD\n #define OPTION_MASK_ISA_AVX512PF_UNSET OPTION_MASK_ISA_AVX512PF\n #define OPTION_MASK_ISA_AVX512ER_UNSET OPTION_MASK_ISA_AVX512ER\n #define OPTION_MASK_ISA_AVX512DQ_UNSET OPTION_MASK_ISA_AVX512DQ\n+#define OPTION_MASK_ISA_AVX512BW_UNSET OPTION_MASK_ISA_AVX512BW\n #define OPTION_MASK_ISA_RTM_UNSET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_UNSET OPTION_MASK_ISA_PRFCHW\n #define OPTION_MASK_ISA_RDSEED_UNSET OPTION_MASK_ISA_RDSEED\n@@ -409,6 +413,19 @@ ix86_handle_option (struct gcc_options *opts,\n \t}\n       return true;\n \n+    case OPT_mavx512bw:\n+      if (value)\n+\t{\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512BW_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512BW_SET;\n+\t}\n+      else\n+\t{\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_AVX512BW_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512BW_UNSET;\n+\t}\n+      return true;\n+\n     case OPT_mfma:\n       if (value)\n \t{"}, {"sha": "49734c38f8af141c2a354d20f16b9c85fd2c9fac", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=b525d9437ff21d934cd930de661b0e6891b49c2c", "patch": "@@ -81,6 +81,7 @@\n #define bit_AVX512ER\t(1 << 27)\n #define bit_AVX512CD\t(1 << 28)\n #define bit_SHA\t\t(1 << 29)\n+#define bit_AVX512BW\t(1 << 30)\n \n /* %ecx */\n #define bit_PREFETCHWT1\t  (1 << 0)"}, {"sha": "c38cb756cf84add3534889ebcfd15dd76abf49a4", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=b525d9437ff21d934cd930de661b0e6891b49c2c", "patch": "@@ -411,7 +411,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   unsigned int has_avx512er = 0, has_avx512pf = 0, has_avx512cd = 0;\n   unsigned int has_avx512f = 0, has_sha = 0, has_prefetchwt1 = 0;\n   unsigned int has_clflushopt = 0, has_xsavec = 0, has_xsaves = 0;\n-  unsigned int has_avx512dq = 0;\n+  unsigned int has_avx512dq = 0, has_avx512bw = 0;\n \n   bool arch;\n \n@@ -491,6 +491,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_sha = ebx & bit_SHA;\n       has_clflushopt = ebx & bit_CLFLUSHOPT;\n       has_avx512dq = ebx & bit_AVX512DQ;\n+      has_avx512bw = ebx & bit_AVX512BW;\n \n       has_prefetchwt1 = ecx & bit_PREFETCHWT1;\n     }\n@@ -904,6 +905,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       const char *xsavec = has_xsavec ? \" -mxsavec\" : \" -mno-xsavec\";\n       const char *xsaves = has_xsaves ? \" -mxsaves\" : \" -mno-xsaves\";\n       const char *avx512dq = has_avx512dq ? \" -mavx512dq\" : \" -mno-avx512dq\";\n+      const char *avx512bw = has_avx512bw ? \" -mavx512bw\" : \" -mno-avx512bw\";\n \n       options = concat (options, mmx, mmx3dnow, sse, sse2, sse3, ssse3,\n \t\t\tsse4a, cx16, sahf, movbe, aes, sha, pclmul,\n@@ -912,7 +914,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t\t\thle, rdrnd, f16c, fsgsbase, rdseed, prfchw, adx,\n \t\t\tfxsr, xsave, xsaveopt, avx512f, avx512er,\n \t\t\tavx512cd, avx512pf, prefetchwt1, clflushopt,\n-\t\t\txsavec, xsaves, avx512dq, NULL);\n+\t\t\txsavec, xsaves, avx512dq, avx512bw, NULL);\n     }\n \n done:"}, {"sha": "96386a50ee0c7f3ae22222ef54d5b44ef33fe410", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=b525d9437ff21d934cd930de661b0e6891b49c2c", "patch": "@@ -347,6 +347,8 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__AVX512PF__\");\n   if (isa_flag & OPTION_MASK_ISA_AVX512DQ)\n     def_or_undef (parse_in, \"__AVX512DQ__\");\n+  if (isa_flag & OPTION_MASK_ISA_AVX512BW)\n+    def_or_undef (parse_in, \"__AVX512BW__\");\n   if (isa_flag & OPTION_MASK_ISA_FMA)\n     def_or_undef (parse_in, \"__FMA__\");\n   if (isa_flag & OPTION_MASK_ISA_RTM)"}, {"sha": "84c169b3f8d6d7146473315bb0d4906e1b311913", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b525d9437ff21d934cd930de661b0e6891b49c2c", "patch": "@@ -2593,6 +2593,7 @@ ix86_target_string (HOST_WIDE_INT isa, int flags, const char *arch,\n     { \"-mavx512cd\",\tOPTION_MASK_ISA_AVX512CD },\n     { \"-mavx512pf\",\tOPTION_MASK_ISA_AVX512PF },\n     { \"-mavx512dq\",\tOPTION_MASK_ISA_AVX512DQ },\n+    { \"-mavx512bw\",\tOPTION_MASK_ISA_AVX512BW },\n     { \"-msse4a\",\tOPTION_MASK_ISA_SSE4A },\n     { \"-msse4.2\",\tOPTION_MASK_ISA_SSE4_2 },\n     { \"-msse4.1\",\tOPTION_MASK_ISA_SSE4_1 },\n@@ -3124,6 +3125,7 @@ ix86_option_override_internal (bool main_args_p,\n #define PTA_XSAVEC\t\t(HOST_WIDE_INT_1 << 48)\n #define PTA_XSAVES\t\t(HOST_WIDE_INT_1 << 49)\n #define PTA_AVX512DQ\t\t(HOST_WIDE_INT_1 << 50)\n+#define PTA_AVX512BW\t\t(HOST_WIDE_INT_1 << 51)\n \n #define PTA_CORE2 \\\n   (PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3 | PTA_SSSE3 \\\n@@ -3694,6 +3696,9 @@ ix86_option_override_internal (bool main_args_p,\n \tif (processor_alias_table[i].flags & PTA_AVX512DQ\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512DQ))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512DQ;\n+\tif (processor_alias_table[i].flags & PTA_AVX512BW\n+\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512BW))\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512BW;\n \tif (processor_alias_table[i].flags & (PTA_PREFETCH_SSE | PTA_SSE))\n \t  x86_prefetch_sse = true;\n \n@@ -4551,6 +4556,7 @@ ix86_valid_target_attribute_inner_p (tree args, char *p_strings[],\n     IX86_ATTR_ISA (\"avx512er\",\tOPT_mavx512er),\n     IX86_ATTR_ISA (\"avx512cd\",\tOPT_mavx512cd),\n     IX86_ATTR_ISA (\"avx512dq\",\tOPT_mavx512dq),\n+    IX86_ATTR_ISA (\"avx512bw\",\tOPT_mavx512bw),\n     IX86_ATTR_ISA (\"mmx\",\tOPT_mmmx),\n     IX86_ATTR_ISA (\"pclmul\",\tOPT_mpclmul),\n     IX86_ATTR_ISA (\"popcnt\",\tOPT_mpopcnt),"}, {"sha": "582d3f8a1a8ca1611ac291b54f6d0b6cc65d26c9", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=b525d9437ff21d934cd930de661b0e6891b49c2c", "patch": "@@ -73,6 +73,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_AVX512CD_P(x)\tTARGET_ISA_AVX512CD_P(x)\n #define TARGET_AVX512DQ\tTARGET_ISA_AVX512DQ\n #define TARGET_AVX512DQ_P(x)\tTARGET_ISA_AVX512DQ_P(x)\n+#define TARGET_AVX512BW\tTARGET_ISA_AVX512BW\n+#define TARGET_AVX512BW_P(x)\tTARGET_ISA_AVX512BW_P(x)\n #define TARGET_FMA\tTARGET_ISA_FMA\n #define TARGET_FMA_P(x)\tTARGET_ISA_FMA_P(x)\n #define TARGET_SSE4A\tTARGET_ISA_SSE4A"}, {"sha": "1b67b0f2d4a64f12d67f7cb15687a8a79f19da5b", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b525d9437ff21d934cd930de661b0e6891b49c2c/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=b525d9437ff21d934cd930de661b0e6891b49c2c", "patch": "@@ -645,6 +645,10 @@ mavx512dq\n Target Report Mask(ISA_AVX512DQ) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512DQ built-in functions and code generation\n \n+mavx512bw\n+Target Report Mask(ISA_AVX512BW) Var(ix86_isa_flags) Save\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512BW built-in functions and code generation\n+\n mfma\n Target Report Mask(ISA_FMA) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and FMA built-in functions and code generation"}]}