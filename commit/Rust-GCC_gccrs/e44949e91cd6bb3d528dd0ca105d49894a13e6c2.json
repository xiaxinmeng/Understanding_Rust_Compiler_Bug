{"sha": "e44949e91cd6bb3d528dd0ca105d49894a13e6c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ0OTQ5ZTkxY2Q2YmIzZDUyOGRkMGNhMTA1ZDQ5ODk0YTEzZTZjMg==", "commit": {"author": {"name": "Stan Shebs", "email": "shebs@apple.com", "date": "2001-03-20T22:01:49Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2001-03-20T22:01:49Z"}, "message": "objc-act.c (get_static_reference): Use NULL_TREE.\n\n        * objc/objc-act.c (get_static_reference): Use NULL_TREE.\n        (get_object_reference): Ditto.\n        (error_with_ivar): Use error_with_file_and_line.\n        (warn_with_method): Use warning_with_file_and_line.\n\nFrom-SVN: r40672", "tree": {"sha": "b72697f64c821affd43732502542efe5ac4b3c3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b72697f64c821affd43732502542efe5ac4b3c3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e44949e91cd6bb3d528dd0ca105d49894a13e6c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e44949e91cd6bb3d528dd0ca105d49894a13e6c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e44949e91cd6bb3d528dd0ca105d49894a13e6c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e44949e91cd6bb3d528dd0ca105d49894a13e6c2/comments", "author": null, "committer": null, "parents": [{"sha": "2ba5f9b1345c6552b5b56f5ac2983f5459cbe7d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba5f9b1345c6552b5b56f5ac2983f5459cbe7d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ba5f9b1345c6552b5b56f5ac2983f5459cbe7d2"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "18ff1bb402b12094c30a20fceef8f3ce28f7c464", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e44949e91cd6bb3d528dd0ca105d49894a13e6c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e44949e91cd6bb3d528dd0ca105d49894a13e6c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e44949e91cd6bb3d528dd0ca105d49894a13e6c2", "patch": "@@ -1,3 +1,10 @@\n+2001-03-20  Stan Shebs  <shebs@apple.com>\n+\n+\t* objc/objc-act.c (get_static_reference): Use NULL_TREE.\n+\t(get_object_reference): Ditto.\n+\t(error_with_ivar): Use error_with_file_and_line.\n+\t(warn_with_method): Use warning_with_file_and_line.\n+\n 2001-03-20  Tom Tromey  <tromey@redhat.com>\n \n \t* libgcc-std.ver: Added __fixunssfsi and __fixunsdfsi."}, {"sha": "c4d03dce08501a3495f5ebb34b7b222847adee64", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e44949e91cd6bb3d528dd0ca105d49894a13e6c2/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e44949e91cd6bb3d528dd0ca105d49894a13e6c2/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=e44949e91cd6bb3d528dd0ca105d49894a13e6c2", "patch": "@@ -1126,7 +1126,7 @@ get_static_reference (interface, protocols)\n \t (in build_pointer_type)...so that the new template\n \t we just created will actually be used...what a hack!  */\n       if (TYPE_POINTER_TO (t))\n-\tTYPE_POINTER_TO (t) = 0;\n+\tTYPE_POINTER_TO (t) = NULL_TREE;\n \n       type = t;\n     }\n@@ -1176,7 +1176,7 @@ get_object_reference (protocols)\n \t (in build_pointer_type)...so that the new template\n \t we just created will actually be used...what a hack!  */\n       if (TYPE_POINTER_TO (t))\n-\tTYPE_POINTER_TO (t) = NULL;\n+\tTYPE_POINTER_TO (t) = NULL_TREE;\n \n       type = t;\n     }\n@@ -3616,10 +3616,13 @@ error_with_ivar (message, decl, rawdecl)\n \n   report_error_function (DECL_SOURCE_FILE (decl));\n \n-  fprintf (stderr, \"%s:%d: \",\n-\t   DECL_SOURCE_FILE (decl), DECL_SOURCE_LINE (decl));\n-  memset (errbuf, 0, BUFSIZE);\n-  fprintf (stderr, \"%s `%s'\\n\", message, gen_declaration (rawdecl, errbuf));\n+  strcpy (errbuf, message);\n+  strcat (errbuf, \" `\");\n+  gen_declaration (rawdecl, errbuf + strlen (errbuf));\n+  strcat (errbuf, \"'\");\n+  error_with_file_and_line (DECL_SOURCE_FILE (decl),\n+\t\t\t    DECL_SOURCE_LINE (decl),\n+\t\t\t    errbuf);\n }\n \n #define USERTYPE(t) \\\n@@ -7043,11 +7046,14 @@ warn_with_method (message, mtype, method)\n \n   report_error_function (DECL_SOURCE_FILE (method));\n \n-  fprintf (stderr, \"%s:%d: warning: \",\n-\t   DECL_SOURCE_FILE (method), DECL_SOURCE_LINE (method));\n-  memset (errbuf, 0, BUFSIZE);\n-  fprintf (stderr, \"%s `%c%s'\\n\",\n-\t   message, mtype, gen_method_decl (method, errbuf));\n+  /* Add a readable method name to the warning.  */\n+  sprintf (errbuf, \"%s `%c\", message, mtype);\n+  gen_method_decl (method, errbuf + strlen (errbuf));\n+  strcat (errbuf, \"'\");\n+\n+  warning_with_file_and_line (DECL_SOURCE_FILE (method),\n+\t\t\t      DECL_SOURCE_LINE (method),\n+\t\t\t      errbuf);\n }\n \n /* Return 1 if METHOD is consistent with PROTO.  */"}]}