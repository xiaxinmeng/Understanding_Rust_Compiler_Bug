{"sha": "6bb207b468da36d9d99c63409dc4098514759c90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJiMjA3YjQ2OGRhMzZkOWQ5OWM2MzQwOWRjNDA5ODUxNDc1OWM5MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-28T15:13:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-28T15:13:11Z"}, "message": "c++: Fix up handling of register ... asm (\"...\") vars in templates [PR33661, PR98847]\n\nAs the testcase shows, for vars appearing in templates, we don't attach\nthe asm spec string to the pattern decls, nor pass it back to cp_finish_decl\nduring instantiation.\n\nThe following patch does that.\n\n2021-01-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/33661\n\tPR c++/98847\n\t* decl.c (cp_finish_decl): For register vars with asmspec in templates\n\tcall set_user_assembler_name and set DECL_HARD_REGISTER.\n\t* pt.c (tsubst_expr): When instantiating DECL_HARD_REGISTER vars,\n\tpass asmspec_tree to cp_finish_decl.\n\n\t* g++.target/i386/pr98847.C: New test.", "tree": {"sha": "79e00d8728b885a5a24f3c40c9697a3108810234", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79e00d8728b885a5a24f3c40c9697a3108810234"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bb207b468da36d9d99c63409dc4098514759c90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb207b468da36d9d99c63409dc4098514759c90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bb207b468da36d9d99c63409dc4098514759c90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb207b468da36d9d99c63409dc4098514759c90/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a8e515c2bf1a48117f463a949174c666932711b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a8e515c2bf1a48117f463a949174c666932711b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a8e515c2bf1a48117f463a949174c666932711b"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "3b9875e3ceef54416e77aae2562990c7690df33a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb207b468da36d9d99c63409dc4098514759c90/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb207b468da36d9d99c63409dc4098514759c90/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6bb207b468da36d9d99c63409dc4098514759c90", "patch": "@@ -7840,6 +7840,12 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t  retrofit_lang_decl (decl);\n \t  SET_DECL_DEPENDENT_INIT_P (decl, true);\n \t}\n+\n+      if (VAR_P (decl) && DECL_REGISTER (decl) && asmspec)\n+\t{\n+\t  set_user_assembler_name (decl, asmspec);\n+\t  DECL_HARD_REGISTER (decl) = 1;\n+\t}\n       return;\n     }\n "}, {"sha": "9089afb6ae822243963675ce3859511b9a0bb0f2", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb207b468da36d9d99c63409dc4098514759c90/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb207b468da36d9d99c63409dc4098514759c90/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6bb207b468da36d9d99c63409dc4098514759c90", "patch": "@@ -18238,6 +18238,7 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \t\t    bool const_init = false;\n \t\t    unsigned int cnt = 0;\n \t\t    tree first = NULL_TREE, ndecl = error_mark_node;\n+\t\t    tree asmspec_tree = NULL_TREE;\n \t\t    maybe_push_decl (decl);\n \n \t\t    if (VAR_P (decl)\n@@ -18261,7 +18262,18 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \t\t       now.  */\n \t\t    predeclare_vla (decl);\n \n-\t\t    cp_finish_decl (decl, init, const_init, NULL_TREE, 0);\n+\t\t    if (VAR_P (decl) && DECL_HARD_REGISTER (pattern_decl))\n+\t\t      {\n+\t\t\ttree id = DECL_ASSEMBLER_NAME (pattern_decl);\n+\t\t\tconst char *asmspec = IDENTIFIER_POINTER (id);\n+\t\t\tgcc_assert (asmspec[0] == '*');\n+\t\t\tasmspec_tree\n+\t\t\t  = build_string (IDENTIFIER_LENGTH (id) - 1,\n+\t\t\t\t\t  asmspec + 1);\n+\t\t\tTREE_TYPE (asmspec_tree) = char_array_type_node;\n+\t\t      }\n+\n+\t\t    cp_finish_decl (decl, init, const_init, asmspec_tree, 0);\n \n \t\t    if (ndecl != error_mark_node)\n \t\t      cp_finish_decomp (ndecl, first, cnt);"}, {"sha": "0a72cccafd6f0e7331a1ed81d943c2f074d7aae5", "filename": "gcc/testsuite/g++.target/i386/pr98847.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bb207b468da36d9d99c63409dc4098514759c90/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr98847.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bb207b468da36d9d99c63409dc4098514759c90/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr98847.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr98847.C?ref=6bb207b468da36d9d99c63409dc4098514759c90", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/98847\n+// { dg-do run }\n+// { dg-options \"-O2 -masm=att\" }\n+\n+template <int N>\n+int\n+foo ()\n+{\n+  register int edx asm (\"edx\");\n+  asm (\"movl $1234, %%edx\" : \"=r\" (edx));\n+  return edx;\n+}\n+\n+int\n+main ()\n+{\n+  if (foo<0> () != 1234)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}