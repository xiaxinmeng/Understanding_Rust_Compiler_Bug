{"sha": "56d76b697d2cf1a0197742400edd8f6dda63308a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZkNzZiNjk3ZDJjZjFhMDE5Nzc0MjQwMGVkZDhmNmRkYTYzMzA4YQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-13T01:11:41Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-13T01:11:41Z"}, "message": "i386.c (ix86_gimplify_va_arg): Fix type mismatch errors across operations.\n\n        * config/i386/i386.c (ix86_gimplify_va_arg): Fix type mismatch\n        errors across operations.\n\nFrom-SVN: r92072", "tree": {"sha": "52da34fdc5bc7c372a88493c0e9179a8e837fb98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52da34fdc5bc7c372a88493c0e9179a8e837fb98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56d76b697d2cf1a0197742400edd8f6dda63308a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d76b697d2cf1a0197742400edd8f6dda63308a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56d76b697d2cf1a0197742400edd8f6dda63308a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d76b697d2cf1a0197742400edd8f6dda63308a/comments", "author": null, "committer": null, "parents": [{"sha": "0ecbf411230d3449fc85030984376a77765ad479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ecbf411230d3449fc85030984376a77765ad479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ecbf411230d3449fc85030984376a77765ad479"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "97437861d556c015be4940c552860d89be5aeccc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d76b697d2cf1a0197742400edd8f6dda63308a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d76b697d2cf1a0197742400edd8f6dda63308a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56d76b697d2cf1a0197742400edd8f6dda63308a", "patch": "@@ -1,3 +1,8 @@\n+2004-12-12  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_gimplify_va_arg): Fix type mismatch\n+\terrors across operations.\n+\n 2004-12-12  Di-an Jan  <dianj@freeshell.org>  \n \n \t* doc/passes.texi (Pass Manager): Correct list of source files."}, {"sha": "e255617e5d9cee3499b346e7dda576a8d3c9145e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d76b697d2cf1a0197742400edd8f6dda63308a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d76b697d2cf1a0197742400edd8f6dda63308a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=56d76b697d2cf1a0197742400edd8f6dda63308a", "patch": "@@ -3368,6 +3368,7 @@ ix86_gimplify_va_arg (tree valist, tree type, tree *pre_p, tree *post_p)\n \t  sse_addr = create_tmp_var (ptr_type_node, \"sse_addr\");\n \t  DECL_POINTER_ALIAS_SET (sse_addr) = get_varargs_alias_set ();\n \t}\n+\n       /* First ensure that we fit completely in registers.  */\n       if (needed_intregs)\n \t{\n@@ -3393,14 +3394,16 @@ ix86_gimplify_va_arg (tree valist, tree type, tree *pre_p, tree *post_p)\n       if (needed_intregs)\n \t{\n \t  /* int_addr = gpr + sav; */\n-\t  t = build2 (PLUS_EXPR, ptr_type_node, sav, gpr);\n+\t  t = fold_convert (ptr_type_node, gpr);\n+\t  t = build2 (PLUS_EXPR, ptr_type_node, sav, t);\n \t  t = build2 (MODIFY_EXPR, void_type_node, int_addr, t);\n \t  gimplify_and_add (t, pre_p);\n \t}\n       if (needed_sseregs)\n \t{\n \t  /* sse_addr = fpr + sav; */\n-\t  t = build2 (PLUS_EXPR, ptr_type_node, sav, fpr);\n+\t  t = fold_convert (ptr_type_node, fpr);\n+\t  t = build2 (PLUS_EXPR, ptr_type_node, sav, t);\n \t  t = build2 (MODIFY_EXPR, void_type_node, sse_addr, t);\n \t  gimplify_and_add (t, pre_p);\n \t}\n@@ -3453,14 +3456,14 @@ ix86_gimplify_va_arg (tree valist, tree type, tree *pre_p, tree *post_p)\n       if (needed_intregs)\n \t{\n \t  t = build2 (PLUS_EXPR, TREE_TYPE (gpr), gpr,\n-\t\t      build_int_cst (NULL_TREE, needed_intregs * 8));\n+\t\t      build_int_cst (TREE_TYPE (gpr), needed_intregs * 8));\n \t  t = build2 (MODIFY_EXPR, TREE_TYPE (gpr), gpr, t);\n \t  gimplify_and_add (t, pre_p);\n \t}\n       if (needed_sseregs)\n \t{\n \t  t = build2 (PLUS_EXPR, TREE_TYPE (fpr), fpr,\n-\t\t      build_int_cst (NULL_TREE, needed_sseregs * 16));\n+\t\t      build_int_cst (TREE_TYPE (fpr), needed_sseregs * 16));\n \t  t = build2 (MODIFY_EXPR, TREE_TYPE (fpr), fpr, t);\n \t  gimplify_and_add (t, pre_p);\n \t}\n@@ -3481,17 +3484,17 @@ ix86_gimplify_va_arg (tree valist, tree type, tree *pre_p, tree *post_p)\n     {\n       HOST_WIDE_INT align = FUNCTION_ARG_BOUNDARY (VOIDmode, type) / 8;\n       t = build (PLUS_EXPR, TREE_TYPE (ovf), ovf,\n-\t\t build_int_cst (NULL_TREE, align - 1));\n+\t\t build_int_cst (TREE_TYPE (ovf), align - 1));\n       t = build (BIT_AND_EXPR, TREE_TYPE (t), t,\n-\t\t build_int_cst (NULL_TREE, -align));\n+\t\t build_int_cst (TREE_TYPE (t), -align));\n     }\n   gimplify_expr (&t, pre_p, NULL, is_gimple_val, fb_rvalue);\n \n   t2 = build2 (MODIFY_EXPR, void_type_node, addr, t);\n   gimplify_and_add (t2, pre_p);\n \n   t = build2 (PLUS_EXPR, TREE_TYPE (t), t,\n-\t      build_int_cst (NULL_TREE, rsize * UNITS_PER_WORD));\n+\t      build_int_cst (TREE_TYPE (t), rsize * UNITS_PER_WORD));\n   t = build2 (MODIFY_EXPR, TREE_TYPE (ovf), ovf, t);\n   gimplify_and_add (t, pre_p);\n "}]}