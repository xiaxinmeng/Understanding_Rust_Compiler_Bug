{"sha": "ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM1YjkwYmRjMGNiNGMwYTkxZWQyMmQyMTNkMmNlZWIzMzQwMmNiNw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2011-10-15T10:36:00Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-10-15T10:36:00Z"}, "message": "ifcvt.c (dead_or_predicable): Disable if-conversion when doing so is likely to kill a shrink-wrapping opportunity.\n\n\t* ifcvt.c (dead_or_predicable): Disable if-conversion when\n\tdoing so is likely to kill a shrink-wrapping opportunity.\n\nFrom-SVN: r180028", "tree": {"sha": "f383c7a737c06f46332911cc4eeea2e82c40bbab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f383c7a737c06f46332911cc4eeea2e82c40bbab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "387748de2fd017a990aaf617f24b8dad53856888", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387748de2fd017a990aaf617f24b8dad53856888", "html_url": "https://github.com/Rust-GCC/gccrs/commit/387748de2fd017a990aaf617f24b8dad53856888"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "8a0f6ef0f500f1ee45904b7e847c7e7246c8f055", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7", "patch": "@@ -1,5 +1,8 @@\n 2011-10-15  Alan Modra  <amodra@gmail.com>\n \n+\t* ifcvt.c (dead_or_predicable): Disable if-conversion when\n+\tdoing so is likely to kill a shrink-wrapping opportunity.\n+\n \tPR rtl-optimization/49941\n \t* jump.c (mark_jump_label_1): Set JUMP_LABEL for simple_return jumps.\n "}, {"sha": "fee35326a14db3dfd7675c76eff9d6b849a0974e", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=ac5b90bdc0cb4c0a91ed22d213d2ceeb33402cb7", "patch": "@@ -4166,6 +4166,64 @@ dead_or_predicable (basic_block test_bb, basic_block merge_bb,\n       FOR_BB_INSNS (merge_bb, insn)\n \tif (NONDEBUG_INSN_P (insn))\n \t  df_simulate_find_defs (insn, merge_set);\n+\n+      /* If shrink-wrapping, disable this optimization when test_bb is\n+\t the first basic block and merge_bb exits.  The idea is to not\n+\t move code setting up a return register as that may clobber a\n+\t register used to pass function parameters, which then must be\n+\t saved in caller-saved regs.  A caller-saved reg requires the\n+\t prologue, killing a shrink-wrap opportunity.  */\n+      if ((flag_shrink_wrap && HAVE_simple_return && !epilogue_completed)\n+\t  && ENTRY_BLOCK_PTR->next_bb == test_bb\n+\t  && single_succ_p (new_dest)\n+\t  && single_succ (new_dest) == EXIT_BLOCK_PTR\n+\t  && bitmap_intersect_p (df_get_live_in (new_dest), merge_set))\n+\t{\n+\t  regset return_regs;\n+\t  unsigned int i;\n+\n+\t  return_regs = BITMAP_ALLOC (&reg_obstack);\n+\n+\t  /* Start off with the intersection of regs used to pass\n+\t     params and regs used to return values.  */\n+\t  for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n+\t    if (FUNCTION_ARG_REGNO_P (i)\n+\t\t&& targetm.calls.function_value_regno_p (i))\n+\t      bitmap_set_bit (return_regs, INCOMING_REGNO (i));\n+\n+\t  bitmap_and_into (return_regs, df_get_live_out (ENTRY_BLOCK_PTR));\n+\t  bitmap_and_into (return_regs, df_get_live_in (EXIT_BLOCK_PTR));\n+\t  if (!bitmap_empty_p (return_regs))\n+\t    {\n+\t      FOR_BB_INSNS_REVERSE (new_dest, insn)\n+\t\tif (NONDEBUG_INSN_P (insn))\n+\t\t  {\n+\t\t    df_ref *def_rec;\n+\t\t    unsigned int uid = INSN_UID (insn);\n+\n+\t\t    /* If this insn sets any reg in return_regs..  */\n+\t\t    for (def_rec = DF_INSN_UID_DEFS (uid); *def_rec; def_rec++)\n+\t\t      {\n+\t\t\tdf_ref def = *def_rec;\n+\t\t\tunsigned r = DF_REF_REGNO (def);\n+\n+\t\t\tif (bitmap_bit_p (return_regs, r))\n+\t\t\t  break;\n+\t\t      }\n+\t\t    /* ..then add all reg uses to the set of regs\n+\t\t       we're interested in.  */\n+\t\t    if (*def_rec)\n+\t\t      df_simulate_uses (insn, return_regs);\n+\t\t  }\n+\t      if (bitmap_intersect_p (merge_set, return_regs))\n+\t\t{\n+\t\t  BITMAP_FREE (return_regs);\n+\t\t  BITMAP_FREE (merge_set);\n+\t\t  return FALSE;\n+\t\t}\n+\t    }\n+\t  BITMAP_FREE (return_regs);\n+\t}\n     }\n \n  no_body:"}]}