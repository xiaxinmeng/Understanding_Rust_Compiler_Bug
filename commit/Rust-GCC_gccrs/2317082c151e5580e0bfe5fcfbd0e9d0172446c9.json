{"sha": "2317082c151e5580e0bfe5fcfbd0e9d0172446c9", "node_id": "C_kwDOANBUbNoAKDIzMTcwODJjMTUxZTU1ODBlMGJmZTVmY2ZiZDBlOWQwMTcyNDQ2Yzk", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-11-15T04:18:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-11-15T07:52:36Z"}, "message": "c++: location of lambda object and conversion call\n\nTwo things that had poor location info: we weren't giving the TARGET_EXPR\nfor a lambda object any location, and the call to a conversion function was\ngetting whatever input_location happened to be.\n\ngcc/cp/ChangeLog:\n\n\t* call.c (perform_implicit_conversion_flags): Use the location of\n\tthe argument.\n\t* lambda.c (build_lambda_object): Set location on the TARGET_EXPR.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/lambda/lambda-switch.C: Adjust expected location.", "tree": {"sha": "69059807d9ebc4345c55559282dec9b7519db46f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69059807d9ebc4345c55559282dec9b7519db46f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2317082c151e5580e0bfe5fcfbd0e9d0172446c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2317082c151e5580e0bfe5fcfbd0e9d0172446c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2317082c151e5580e0bfe5fcfbd0e9d0172446c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2317082c151e5580e0bfe5fcfbd0e9d0172446c9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37326651b439bac55d96fb5a43f4daf25e401eda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37326651b439bac55d96fb5a43f4daf25e401eda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37326651b439bac55d96fb5a43f4daf25e401eda"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "4ee21c7bdbdfaf2ff225576109a44a44ec7dee97", "filename": "gcc/cp/call.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2317082c151e5580e0bfe5fcfbd0e9d0172446c9/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2317082c151e5580e0bfe5fcfbd0e9d0172446c9/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=2317082c151e5580e0bfe5fcfbd0e9d0172446c9", "patch": "@@ -12549,7 +12549,11 @@ perform_implicit_conversion_flags (tree type, tree expr,\n \tIMPLICIT_CONV_EXPR_BRACED_INIT (expr) = true;\n     }\n   else\n-    expr = convert_like (conv, expr, complain);\n+    {\n+      /* Give a conversion call the same location as expr.  */\n+      iloc_sentinel il (loc);\n+      expr = convert_like (conv, expr, complain);\n+    }\n \n   /* Free all the conversions we allocated.  */\n   obstack_free (&conversion_obstack, p);"}, {"sha": "f68c68ca16e64072e9880e849ac72f1424bf7328", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2317082c151e5580e0bfe5fcfbd0e9d0172446c9/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2317082c151e5580e0bfe5fcfbd0e9d0172446c9/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=2317082c151e5580e0bfe5fcfbd0e9d0172446c9", "patch": "@@ -57,14 +57,13 @@ build_lambda_object (tree lambda_expr)\n      - cp_parser_functional_cast  */\n   vec<constructor_elt, va_gc> *elts = NULL;\n   tree node, expr, type;\n-  location_t saved_loc;\n \n   if (processing_template_decl || lambda_expr == error_mark_node)\n     return lambda_expr;\n \n   /* Make sure any error messages refer to the lambda-introducer.  */\n-  saved_loc = input_location;\n-  input_location = LAMBDA_EXPR_LOCATION (lambda_expr);\n+  location_t loc = LAMBDA_EXPR_LOCATION (lambda_expr);\n+  iloc_sentinel il (loc);\n \n   for (node = LAMBDA_EXPR_CAPTURE_LIST (lambda_expr);\n        node;\n@@ -117,10 +116,10 @@ build_lambda_object (tree lambda_expr)\n   type = LAMBDA_EXPR_CLOSURE (lambda_expr);\n   CLASSTYPE_NON_AGGREGATE (type) = 0;\n   expr = finish_compound_literal (type, expr, tf_warning_or_error);\n+  protected_set_expr_location (expr, loc);\n   CLASSTYPE_NON_AGGREGATE (type) = 1;\n \n  out:\n-  input_location = saved_loc;\n   return expr;\n }\n "}, {"sha": "e417967a17e486e554193ce358836bd46884917e", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-switch.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2317082c151e5580e0bfe5fcfbd0e9d0172446c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-switch.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2317082c151e5580e0bfe5fcfbd0e9d0172446c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-switch.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-switch.C?ref=2317082c151e5580e0bfe5fcfbd0e9d0172446c9", "patch": "@@ -16,11 +16,11 @@ main ()\n \t      break;\t\t// { dg-error \"break\" }\n \t    }\n \t  };\n-\t  l = []()\n+\t  l = []()\t\t// { dg-warning \"statement will never be executed\" }\n \t    {\n \t    case 3:\t\t// { dg-error \"case\" }\n \t      break;\t\t// { dg-error \"break\" }\n-\t    };\t\t// { dg-warning \"statement will never be executed\" }\n+\t    };\n \t}\n     }\n }"}]}