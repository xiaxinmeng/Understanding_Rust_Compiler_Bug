{"sha": "d20a6a3311b783482fa98194a0995a7f002d1c1b", "node_id": "C_kwDOANBUbNoAKGQyMGE2YTMzMTFiNzgzNDgyZmE5ODE5NGEwOTk1YTdmMDAyZDFjMWI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-31T00:17:02Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-31T00:17:02Z"}, "message": "Daily bump.", "tree": {"sha": "24591565a79ba1ce95325849fb7b50cc060a6441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24591565a79ba1ce95325849fb7b50cc060a6441"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d20a6a3311b783482fa98194a0995a7f002d1c1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d20a6a3311b783482fa98194a0995a7f002d1c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d20a6a3311b783482fa98194a0995a7f002d1c1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d20a6a3311b783482fa98194a0995a7f002d1c1b/comments", "author": null, "committer": null, "parents": [{"sha": "58df5350753c00f140c86e60ba5ce0cac686ec4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58df5350753c00f140c86e60ba5ce0cac686ec4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58df5350753c00f140c86e60ba5ce0cac686ec4b"}], "stats": {"total": 131, "additions": 130, "deletions": 1}, "files": [{"sha": "f0e4c8b4ee8d6807305595a88dd602f7d0c03c81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d20a6a3311b783482fa98194a0995a7f002d1c1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d20a6a3311b783482fa98194a0995a7f002d1c1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d20a6a3311b783482fa98194a0995a7f002d1c1b", "patch": "@@ -1,3 +1,38 @@\n+2023-03-30  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/109154\n+\t* gimple-range-gori.cc (gori_compute::may_recompute_p): Add depth limit.\n+\t* gimple-range-gori.h (may_recompute_p): Add depth param.\n+\t* params.opt (ranger-recompute-depth): New param.\n+\n+2023-03-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107897\n+\tPR c++/108887\n+\t* cgraph.h: Move reset() from cgraph_node to symtab_node.\n+\t* cgraphunit.cc (symtab_node::reset): Adjust.  Also call\n+\tremove_from_same_comdat_group.\n+\n+2023-03-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107561\n+\t* gimple-ssa-warn-access.cc (get_size_range): Add flags\n+\targument and pass it on.\n+\t(check_access): When querying for the size range pass\n+\tSR_ALLOW_ZERO when the known destination size is zero.\n+\n+2023-03-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109342\n+\t* tree-ssa-sccvn.cc (vn_nary_op_get_predicated_value): New\n+\toverload for edge.  When that edge is a backedge use\n+\tdominated_by_p directly.\n+\n+2023-03-30  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* config/i386/i386-expand.cc (expand_vec_perm_blend): Generate\n+\tvpblendd instead of vpblendw for V4SI under avx2.\n+\n 2023-03-29  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/cris.cc (cris_rtx_costs) [CONST_INT]: Return 0"}, {"sha": "bc28fe8762d81ad13f3fe56a9e419ed92408c58c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d20a6a3311b783482fa98194a0995a7f002d1c1b/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d20a6a3311b783482fa98194a0995a7f002d1c1b/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=d20a6a3311b783482fa98194a0995a7f002d1c1b", "patch": "@@ -1 +1 @@\n-20230330\n+20230331"}, {"sha": "9ac06ae7240734024ef1028ffa05d96a00604b3f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d20a6a3311b783482fa98194a0995a7f002d1c1b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d20a6a3311b783482fa98194a0995a7f002d1c1b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d20a6a3311b783482fa98194a0995a7f002d1c1b", "patch": "@@ -1,3 +1,39 @@\n+2023-03-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105452\n+\t* search.cc (type_context_for_name_lookup): New.\n+\t(accessible_p): Handle anonymous union.\n+\t* init.cc (maybe_instantiate_nsdmi_init): Use\n+\ttype_context_for_name_lookup.\n+\t* parser.cc (cp_parser_class_specifier): Likewise.\n+\t* cp-tree.h (type_context_for_name_lookup): Declare.\n+\n+2023-03-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105221\n+\t* pt.cc (unify) [FUNCTION_TYPE]: Handle function pointer\n+\tconversions.\n+\n+2023-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/109319\n+\t* decl2.cc (grok_array_decl): After emitting a pedwarn for\n+\t-Wcomma-subscript, if processing_template_decl set orig_index_exp\n+\tto compound expr from orig_index_exp_list.\n+\n+2023-03-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107897\n+\tPR c++/108887\n+\t* decl2.cc (record_mangling): Use symtab_node::reset.\n+\n+2023-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/109278\n+\t* call.cc (convert_like_internal): If pedwarn for extended float\n+\ttype conversions doesn't report anything, avoid calling\n+\tmaybe_inform_about_fndecl_for_bogus_argument_init.\n+\n 2023-03-29  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/109321"}, {"sha": "d09a89a785e51436864b1e07cefb1a5fd109d7f5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d20a6a3311b783482fa98194a0995a7f002d1c1b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d20a6a3311b783482fa98194a0995a7f002d1c1b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d20a6a3311b783482fa98194a0995a7f002d1c1b", "patch": "@@ -1,3 +1,9 @@\n+2023-03-30  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* dump-parse-tree.cc (get_c_type_name): Fix \"long_long\"\n+\ttype name to be \"long long\". Add a comment on why adding\n+\t2 to the name too.\n+\n 2023-03-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/109314"}, {"sha": "570033c5a305ecdf2bb9a70e6a567fc3097d026a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d20a6a3311b783482fa98194a0995a7f002d1c1b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d20a6a3311b783482fa98194a0995a7f002d1c1b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d20a6a3311b783482fa98194a0995a7f002d1c1b", "patch": "@@ -1,3 +1,50 @@\n+2023-03-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105452\n+\t* g++.dg/lookup/anon8.C: New test.\n+\n+2023-03-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105221\n+\t* g++.dg/cpp1z/noexcept-type27.C: New test.\n+\n+2023-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/109319\n+\t* g++.dg/cpp23/subscript14.C: New test.\n+\n+2023-03-30  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/109154\n+\t* gcc.dg/Walloca-13.c: Remove bogus warning that is now fixed.\n+\n+2023-03-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107897\n+\tPR c++/108887\n+\t* g++.dg/cpp2a/concepts-lambda3.C: Use -flto if supported.\n+\t* g++.dg/cpp0x/lambda/lambda-mangle7.C: New test.\n+\n+2023-03-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107561\n+\t* g++.dg/pr71488.C: Remove XFAILed bogus diagnostic again.\n+\t* g++.dg/warn/Warray-bounds-16.C: Likewise.\n+\n+2023-03-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109342\n+\t* g++.dg/torture/pr109342.C: New testcase.\n+\n+2023-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/109278\n+\t* g++.dg/cpp23/ext-floating15.C: New test.\n+\n+2023-03-30  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr88828-0.c: Adjust testcase.\n+\n 2023-03-29  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR modula2/109336"}, {"sha": "be8bc5d439b54968362dec0de91d6a158fe90d4d", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d20a6a3311b783482fa98194a0995a7f002d1c1b/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d20a6a3311b783482fa98194a0995a7f002d1c1b/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=d20a6a3311b783482fa98194a0995a7f002d1c1b", "patch": "@@ -1,3 +1,8 @@\n+2023-03-30  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* obstacks.texi (Preparing for Obstacks): Remove a (broken)\n+\treference to the Glibc manual.\n+\n 2023-03-03  Costas Argyris  <costas.argyris@gmail.com>\n \n \t* pex-win32.c (win32_spawn): Fix memory leak of cmdline"}]}