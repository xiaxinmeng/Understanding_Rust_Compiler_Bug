{"sha": "cfaa55890b6f9fb5fde5c84fc51326427dc48259", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZhYTU1ODkwYjZmOWZiNWZkZTVjODRmYzUxMzI2NDI3ZGM0ODI1OQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-18T15:17:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-18T15:17:37Z"}, "message": "re PR tree-optimization/46172 (ICE: in expand_widen_pattern_expr, at optabs.c:522 with -ftree-vectorize -fno-tree-dce)\n\n2010-11-18  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46172\n\t* tree-vect-loop-manip.c (remove_dead_stmts_from_loop): New\n\tfunction.\n\t(slpeel_tree_peel_loop_to_edge): Call it.\n\n\t* gcc.dg/torture/pr46172.c: New testcase.\n\nFrom-SVN: r166908", "tree": {"sha": "0b9c6efd0afebdf99e231fea3735c3c4b775243a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b9c6efd0afebdf99e231fea3735c3c4b775243a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfaa55890b6f9fb5fde5c84fc51326427dc48259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfaa55890b6f9fb5fde5c84fc51326427dc48259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfaa55890b6f9fb5fde5c84fc51326427dc48259", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfaa55890b6f9fb5fde5c84fc51326427dc48259/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12c2b0adb1afc982d140aae47be336730e1484b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12c2b0adb1afc982d140aae47be336730e1484b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12c2b0adb1afc982d140aae47be336730e1484b1"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "7aa714c802f27d308697d0df5d6af5dbf100a42b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfaa55890b6f9fb5fde5c84fc51326427dc48259/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfaa55890b6f9fb5fde5c84fc51326427dc48259/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfaa55890b6f9fb5fde5c84fc51326427dc48259", "patch": "@@ -1,3 +1,10 @@\n+2010-11-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46172\n+\t* tree-vect-loop-manip.c (remove_dead_stmts_from_loop): New\n+\tfunction.\n+\t(slpeel_tree_peel_loop_to_edge): Call it.\n+\n 2010-11-18  Jeff Law  <law@redhat.com>\n \n \tPR middle-end-optimization/46297"}, {"sha": "9eace4d767ac603097db15dba562108cdf65a29b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfaa55890b6f9fb5fde5c84fc51326427dc48259/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfaa55890b6f9fb5fde5c84fc51326427dc48259/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cfaa55890b6f9fb5fde5c84fc51326427dc48259", "patch": "@@ -1,3 +1,8 @@\n+2010-11-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46172\n+\t* gcc.dg/torture/pr46172.c: New testcase.\n+\n 2010-11-18  Jeff Law  <law@redhat.com>\n \n \tPR middle-end-optimization/46297"}, {"sha": "c8d1b4759678ba8295200e42de92fa0b35c7efc5", "filename": "gcc/testsuite/gcc.dg/torture/pr46172.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfaa55890b6f9fb5fde5c84fc51326427dc48259/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr46172.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfaa55890b6f9fb5fde5c84fc51326427dc48259/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr46172.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr46172.c?ref=cfaa55890b6f9fb5fde5c84fc51326427dc48259", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-tree-dce -ftree-vectorize\" } */\n+\n+extern short X[];\n+\n+int foo (int len)\n+{\n+  int i;\n+  int s = 0;\n+  for (i = 0; i < len; i++)\n+    s += X[i] * X[i];\n+  return s;\n+}"}, {"sha": "eb7eada03c0cd2b2e941d101c6d2e9aa2698adff", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfaa55890b6f9fb5fde5c84fc51326427dc48259/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfaa55890b6f9fb5fde5c84fc51326427dc48259/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=cfaa55890b6f9fb5fde5c84fc51326427dc48259", "patch": "@@ -1107,6 +1107,34 @@ set_prologue_iterations (basic_block bb_before_first_loop,\n }\n \n \n+/* Remove dead assignments from loop NEW_LOOP.  */\n+\n+static void\n+remove_dead_stmts_from_loop (struct loop *new_loop)\n+{\n+  basic_block *bbs = get_loop_body (new_loop);\n+  unsigned i;\n+  for (i = 0; i < new_loop->num_nodes; ++i)\n+    {\n+      gimple_stmt_iterator gsi;\n+      for (gsi = gsi_start_bb (bbs[i]); !gsi_end_p (gsi);)\n+\t{\n+\t  gimple stmt = gsi_stmt (gsi);\n+\t  if (is_gimple_assign (stmt)\n+\t      && TREE_CODE (gimple_assign_lhs (stmt)) == SSA_NAME\n+\t      && has_zero_uses (gimple_assign_lhs (stmt)))\n+\t    {\n+\t      gsi_remove (&gsi, true);\n+\t      release_defs (stmt);\n+\t    }\n+\t  else\n+\t    gsi_next (&gsi);\n+\t}\n+    }\n+  free (bbs);\n+}\n+\n+\n /* Function slpeel_tree_peel_loop_to_edge.\n \n    Peel the first (last) iterations of LOOP into a new prolog (epilog) loop\n@@ -1415,6 +1443,13 @@ slpeel_tree_peel_loop_to_edge (struct loop *loop,\n   if (update_first_loop_count)\n     slpeel_make_loop_iterate_ntimes (first_loop, first_niters);\n \n+  /* Remove all pattern statements from the loop copy.  They will confuse\n+     the expander if DCE is disabled.\n+     ???  The pattern recognizer should be split into an analysis and\n+     a transformation phase that is then run only on the loop that is\n+     going to be transformed.  */\n+  remove_dead_stmts_from_loop (new_loop);\n+\n   adjust_vec_debug_stmts ();\n \n   BITMAP_FREE (definitions);"}]}