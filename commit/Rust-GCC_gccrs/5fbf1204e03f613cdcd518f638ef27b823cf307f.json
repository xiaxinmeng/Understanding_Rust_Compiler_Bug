{"sha": "5fbf1204e03f613cdcd518f638ef27b823cf307f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZiZjEyMDRlMDNmNjEzY2RjZDUxOGY2MzhlZjI3YjgyM2NmMzA3Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-07-03T14:42:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-07-03T14:42:21Z"}, "message": "wide-int_plugin.c (test_double_int_round_udiv): Avoid narrowing error.\n\n\t* gcc.dg/plugin/wide-int_plugin.c (test_double_int_round_udiv):\n\tAvoid narrowing error.\n\nFrom-SVN: r225383", "tree": {"sha": "77d45a050977a5e8066c5ae87d88b9cde00c628f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77d45a050977a5e8066c5ae87d88b9cde00c628f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fbf1204e03f613cdcd518f638ef27b823cf307f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fbf1204e03f613cdcd518f638ef27b823cf307f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fbf1204e03f613cdcd518f638ef27b823cf307f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fbf1204e03f613cdcd518f638ef27b823cf307f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab1d746dcedf646029bbbfbb7f85156e8dc63c1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab1d746dcedf646029bbbfbb7f85156e8dc63c1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab1d746dcedf646029bbbfbb7f85156e8dc63c1e"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "598918e3c73c07a01fcc819863b8a2af35436725", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fbf1204e03f613cdcd518f638ef27b823cf307f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fbf1204e03f613cdcd518f638ef27b823cf307f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5fbf1204e03f613cdcd518f638ef27b823cf307f", "patch": "@@ -1,3 +1,8 @@\n+2015-07-03  Jason Merrill  <jason@redhat.com>\n+\n+\t* gcc.dg/plugin/wide-int_plugin.c (test_double_int_round_udiv):\n+\tAvoid narrowing error.\n+\n 2015-07-03  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/66706"}, {"sha": "17604c8cf991dc14aa3199c2d72b109c846e98b3", "filename": "gcc/testsuite/gcc.dg/plugin/wide-int_plugin.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fbf1204e03f613cdcd518f638ef27b823cf307f/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fwide-int_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fbf1204e03f613cdcd518f638ef27b823cf307f/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fwide-int_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fwide-int_plugin.c?ref=5fbf1204e03f613cdcd518f638ef27b823cf307f", "patch": "@@ -10,8 +10,8 @@ static void\n test_double_int_round_udiv (void)\n {\n   double_int dmin = { 0, HOST_WIDE_INT_MIN };\n-  double_int dmax = { -1, HOST_WIDE_INT_MAX };\n-  double_int dnegone = { -1, -1 };\n+  double_int dmax = { (unsigned HOST_WIDE_INT)-1, HOST_WIDE_INT_MAX };\n+  double_int dnegone = { (unsigned HOST_WIDE_INT)-1, -1 };\n   double_int mod, div;\n   div = dmin.udivmod (dnegone, ROUND_DIV_EXPR, &mod);\n   if (div.low != 1 || div.high != 0"}]}