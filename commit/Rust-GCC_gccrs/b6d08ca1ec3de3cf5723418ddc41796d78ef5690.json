{"sha": "b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZkMDhjYTFlYzNkZTNjZjU3MjM0MThkZGM0MTc5NmQ3OGVmNTY5MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-01-30T13:19:16Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-01-30T13:19:16Z"}, "message": "aix43.h: Fix comment typos.\n\n\t* config/rs6000/aix43.h: Fix comment typos.\n\t* config/rs6000/aix51.h: Likewise.\n\t* config/rs6000/aix52.h: Likewise.\n\t* config/rs6000/altivec.h: Likewise.\n\t* config/rs6000/rs6000.c: Likewise.\n\t* config/rs6000/rs6000.h: Likewise.\n\t* config/rs6000/rs6000.md: Likewise.\n\t* config/rs6000/spe.md: Likewise.\n\nFrom-SVN: r62133", "tree": {"sha": "3f6e6a023d3d6dea58de152f42dc1fd95f6c78a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f6e6a023d3d6dea58de152f42dc1fd95f6c78a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/comments", "author": null, "committer": null, "parents": [{"sha": "a693735b841b0228abc8e9eda50628d3d86381ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a693735b841b0228abc8e9eda50628d3d86381ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a693735b841b0228abc8e9eda50628d3d86381ae"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "9548a22d212ff2c6221f9196748d6bb814060ad4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "patch": "@@ -1,3 +1,14 @@\n+2003-01-30  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/rs6000/aix43.h: Fix comment typos.\n+\t* config/rs6000/aix51.h: Likewise.\n+\t* config/rs6000/aix52.h: Likewise.\n+\t* config/rs6000/altivec.h: Likewise.\n+\t* config/rs6000/rs6000.c: Likewise.\n+\t* config/rs6000/rs6000.h: Likewise.\n+\t* config/rs6000/rs6000.md: Likewise.\n+\t* config/rs6000/spe.md: Likewise.\n+\n 2003-01-29  Mark Mitchell  <mark@codesourcery.com>\n \n \t* c-common.c (builtin_define_float_constants): Define"}, {"sha": "19cadd8558640526b1e6f90e4c25f0cb9b44f047", "filename": "gcc/config/rs6000/aix43.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Faix43.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Faix43.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix43.h?ref=b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX version 4.3.\n-   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n    Contributed by David Edelsohn (edelsohn@gnu.org).\n \n This file is part of GNU CC.\n@@ -62,7 +62,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef ASM_SPEC\n #define ASM_SPEC \"-u %{maix64:-a64 -mppc64} %(asm_cpu)\"\n \n-/* Common ASM definitions used by ASM_SPEC amonst the various targets\n+/* Common ASM definitions used by ASM_SPEC amongst the various targets\n    for handling -mcpu=xxx switches.  */\n #undef ASM_CPU_SPEC\n #define ASM_CPU_SPEC \\"}, {"sha": "201b2addfb55d93f87318e19d501cecab5b0be93", "filename": "gcc/config/rs6000/aix51.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Faix51.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Faix51.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix51.h?ref=b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX V5.\n-   Copyright (C) 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n    Contributed by David Edelsohn (edelsohn@gnu.org).\n \n This file is part of GNU CC.\n@@ -62,7 +62,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef ASM_SPEC\n #define ASM_SPEC \"-u %{maix64:-a64 -mppc64} %(asm_cpu)\"\n \n-/* Common ASM definitions used by ASM_SPEC amonst the various targets\n+/* Common ASM definitions used by ASM_SPEC amongst the various targets\n    for handling -mcpu=xxx switches.  */\n #undef ASM_CPU_SPEC\n #define ASM_CPU_SPEC \\"}, {"sha": "da7e0366c9716303316d5981f6351c22be77a217", "filename": "gcc/config/rs6000/aix52.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Faix52.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Faix52.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix52.h?ref=b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX V5.2.\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n    Contributed by David Edelsohn (edelsohn@gnu.org).\n \n This file is part of GNU CC.\n@@ -62,7 +62,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef ASM_SPEC\n #define ASM_SPEC \"-u %{maix64:-a64 -mppc64} %(asm_cpu)\"\n \n-/* Common ASM definitions used by ASM_SPEC amonst the various targets\n+/* Common ASM definitions used by ASM_SPEC amongst the various targets\n    for handling -mcpu=xxx switches.  */\n #undef ASM_CPU_SPEC\n #define ASM_CPU_SPEC \\"}, {"sha": "0b789a97287fcdc9cb99b652ec422720412180b3", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "patch": "@@ -1,5 +1,5 @@\n /* PowerPC AltiVec include file.\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Aldy Hernandez (aldyh@redhat.com).\n \n This file is part of GNU CC.\n@@ -41,7 +41,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define __vector __attribute__((vector_size(16)))\n \n-/* You are allowed to undef this for C++ compatability.  */\n+/* You are allowed to undef this for C++ compatibility.  */\n #define vector __vector\n \n #define bool signed"}, {"sha": "2d9ac48109c4f367eb081167afa60e40931908a5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "patch": "@@ -4121,7 +4121,7 @@ static struct builtin_description bdesc_spe_evsel[] =\n   { 0, CODE_FOR_spe_evfststeq, \"__builtin_spe_evsel_fststeq\", SPE_BUILTIN_EVSEL_FSTSTEQ },\n };\n \n-/* ABS* opreations.  */\n+/* ABS* operations.  */\n \n static const struct builtin_description bdesc_abs[] =\n {\n@@ -5254,7 +5254,7 @@ rs6000_init_builtins ()\n \n /* Search through a set of builtins and enable the mask bits.\n    DESC is an array of builtins.\n-   SIZE is the totaly number of builtins.\n+   SIZE is the total number of builtins.\n    START is the builtin enum at which to start.\n    END is the builtin enum at which to end.  */\n static void\n@@ -6943,7 +6943,7 @@ includes_rshift_p (shiftop, andop)\n \n /* Return 1 if ANDOP is a mask suitable for use with an rldic insn\n    to perform a left shift.  It must have exactly SHIFTOP least\n-   signifigant 0's, then one or more 1's, then zero or more 0's.  */\n+   significant 0's, then one or more 1's, then zero or more 0's.  */\n \n int\n includes_rldic_lshift_p (shiftop, andop)\n@@ -6961,7 +6961,7 @@ includes_rldic_lshift_p (shiftop, andop)\n       shift_mask = ~0;\n       shift_mask <<= INTVAL (shiftop);\n \n-      /* Find the least signifigant one bit.  */\n+      /* Find the least significant one bit.  */\n       lsb = c & -c;\n \n       /* It must coincide with the LSB of the shift mask.  */\n@@ -8379,7 +8379,7 @@ rs6000_generate_compare (code)\n \t     bit3  bit2  bit1  bit0\n \n \t     ... bit 2 would be a GT CR alias, so later on we\n-\t     look in the GT bits for the branch instructins.\n+\t     look in the GT bits for the branch instructions.\n \t     However, we must be careful to emit correct RTL in\n \t     the meantime, so optimizations don't get confused.  */\n \n@@ -8694,7 +8694,7 @@ rs6000_emit_cmove (dest, op, true_cond, false_cond)\n   if (GET_CODE (op1) == CONST_DOUBLE)\n     REAL_VALUE_FROM_CONST_DOUBLE (c1, op1);\n     \n-  /* We're going to try to implement comparions by performing\n+  /* We're going to try to implement comparisons by performing\n      a subtract, then comparing against zero.  Unfortunately,\n      Inf - Inf is NaN which is not zero, and so if we don't\n      know that the operand is finite and the comparison"}, {"sha": "a96984d17ba3ebea1839fe0dee94383af3d2b96a", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "patch": "@@ -965,7 +965,7 @@ extern int rs6000_default_long_calls;\n    we end up clobbering r11.\n \n    The AltiVec case needs to be fixed.  Dunno if we should break ABI\n-   compatability and reserve a register for it as well..  */\n+   compatibility and reserve a register for it as well..  */\n \n #define FIXED_SCRATCH (TARGET_SPE ? 14 : 11)\n \n@@ -1362,7 +1362,7 @@ typedef struct rs6000_stack {\n   enum rs6000_abi abi;\t\t/* which ABI to use */\n   int gp_save_offset;\t\t/* offset to save GP regs from initial SP */\n   int fp_save_offset;\t\t/* offset to save FP regs from initial SP */\n-  int altivec_save_offset;\t/* offset to save AltiVec regs from inital SP */\n+  int altivec_save_offset;\t/* offset to save AltiVec regs from initial SP */\n   int lr_save_offset;\t\t/* offset to save LR from initial SP */\n   int cr_save_offset;\t\t/* offset to save CR from initial SP */\n   int vrsave_save_offset;\t/* offset to save VRSAVE from initial SP */"}, {"sha": "6af6beeed3f4ffd94803ea08c9a46d9e9857edef", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "patch": "@@ -6005,7 +6005,7 @@\n   \"\")\n \n ;; Twiddles bits to avoid double rounding.\n-;; Bits that might be trucated when converting to DFmode are replaced\n+;; Bits that might be truncated when converting to DFmode are replaced\n ;; by a bit that won't be lost at that stage, but is below the SFmode\n ;; rounding position.\n (define_expand \"floatdisf2_internal2\""}, {"sha": "3b658b8f5ecf8c253fd71c11d757a735312df39f", "filename": "gcc/config/rs6000/spe.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d08ca1ec3de3cf5723418ddc41796d78ef5690/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=b6d08ca1ec3de3cf5723418ddc41796d78ef5690", "patch": "@@ -1,5 +1,5 @@\n ;; e500 SPE description\n-;; Copyright (C) 2002 Free Software Foundation, Inc.\n+;; Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n ;; Contributed by Aldy Hernandez (aldy@quesejoda.com)\n \n ;; This file is part of GNU CC.\n@@ -736,7 +736,7 @@\n \n ;; SPE SIMD load instructions.\n \n-;; Only the hardware engineer who designed the SPE inderstands the\n+;; Only the hardware engineer who designed the SPE understands the\n ;; plethora of load and store instructions ;-).  We have no way of\n ;; differentiating between them with RTL so use an unspec of const_int 0 \n ;; to avoid identical RTL."}]}