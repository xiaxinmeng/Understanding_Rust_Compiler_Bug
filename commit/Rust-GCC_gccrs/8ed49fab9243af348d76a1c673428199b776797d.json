{"sha": "8ed49fab9243af348d76a1c673428199b776797d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVkNDlmYWI5MjQzYWYzNDhkNzZhMWM2NzM0MjgxOTliNzc2Nzk3ZA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-08-01T10:20:03Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-08-01T10:20:03Z"}, "message": "[AArch64] Allow multiple-of-8 immediate offsets for TImode LDP/STP\n\n        * config/aarch64/aarch64.c (aarch64_classify_address): Use DImode when\n        performing aarch64_offset_7bit_signed_scaled_p check for TImode LDP/STP\n        addresses.\n\n        * gcc.target/aarch64/ldp_stp_unaligned_1.c: New test.\n\nFrom-SVN: r238938", "tree": {"sha": "09d809978a648dcb7c75f1a5158ac34c046ee0d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09d809978a648dcb7c75f1a5158ac34c046ee0d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ed49fab9243af348d76a1c673428199b776797d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed49fab9243af348d76a1c673428199b776797d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ed49fab9243af348d76a1c673428199b776797d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed49fab9243af348d76a1c673428199b776797d/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b91cd96b291e3bbc0e370ba83f4bc6f0086404ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b91cd96b291e3bbc0e370ba83f4bc6f0086404ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b91cd96b291e3bbc0e370ba83f4bc6f0086404ee"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "14eb86bc281925a2f1a7b55060d8f3ef988ea626", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed49fab9243af348d76a1c673428199b776797d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed49fab9243af348d76a1c673428199b776797d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ed49fab9243af348d76a1c673428199b776797d", "patch": "@@ -1,3 +1,9 @@\n+2016-08-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_classify_address): Use DImode when\n+\tperforming aarch64_offset_7bit_signed_scaled_p check for TImode LDP/STP\n+\taddresses.\n+\n 2016-08-01  Virendra Pathak  <virendra.pathak@broadcom.com>\n \n \t* config/aarch64/aarch64.c (vulcan_tunings): Update"}, {"sha": "f2ed83c400fb4f286458cc7dcf6da098ed8f5512", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed49fab9243af348d76a1c673428199b776797d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed49fab9243af348d76a1c673428199b776797d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=8ed49fab9243af348d76a1c673428199b776797d", "patch": "@@ -3994,9 +3994,11 @@ aarch64_classify_address (struct aarch64_address_info *info,\n \t     X,X: 7-bit signed scaled offset\n \t     Q:   9-bit signed offset\n \t     We conservatively require an offset representable in either mode.\n-\t   */\n+\t     When performing the check for pairs of X registers i.e.  LDP/STP\n+\t     pass down DImode since that is the natural size of the LDP/STP\n+\t     instruction memory accesses.  */\n \t  if (mode == TImode || mode == TFmode)\n-\t    return (aarch64_offset_7bit_signed_scaled_p (mode, offset)\n+\t    return (aarch64_offset_7bit_signed_scaled_p (DImode, offset)\n \t\t    && offset_9bit_signed_unscaled_p (mode, offset));\n \n \t  /* A 7bit offset check because OImode will emit a ldp/stp"}, {"sha": "fa3e05751520fc8afe904db0b8947577ff01dd65", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed49fab9243af348d76a1c673428199b776797d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed49fab9243af348d76a1c673428199b776797d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ed49fab9243af348d76a1c673428199b776797d", "patch": "@@ -1,3 +1,7 @@\n+2016-08-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/ldp_stp_unaligned_1.c: New test.\n+\n 2016-08-01  Jan Beulich  <jbeulich@suse.com>\n \n \t* gcc.dg/vshift-6.c, gcc.dg/vshift-7.c: New."}, {"sha": "a70f92100fb91bcfdcfd4af1cab6f58915038568", "filename": "gcc/testsuite/gcc.target/aarch64/ldp_stp_unaligned_1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed49fab9243af348d76a1c673428199b776797d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fldp_stp_unaligned_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed49fab9243af348d76a1c673428199b776797d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fldp_stp_unaligned_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fldp_stp_unaligned_1.c?ref=8ed49fab9243af348d76a1c673428199b776797d", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-options \"-O2\" } */\n+\n+/* Check that we can use a REG + IMM addressing mode when moving an unaligned\n+   TImode value to and from memory.  */\n+\n+struct foo\n+{\n+  long long b;\n+  __int128 a;\n+} __attribute__ ((packed));\n+\n+void\n+bar (struct foo *p, struct foo *q)\n+{\n+  p->a = q->a;\n+}\n+\n+/* { dg-final { scan-assembler-not \"add\\tx\\[0-9\\]+, x\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler-times \"ldp\\tx\\[0-9\\]+, x\\[0-9\\], .*8\" 1 } } */\n+/* { dg-final { scan-assembler-times \"stp\\tx\\[0-9\\]+, x\\[0-9\\], .*8\" 1 } } */"}]}