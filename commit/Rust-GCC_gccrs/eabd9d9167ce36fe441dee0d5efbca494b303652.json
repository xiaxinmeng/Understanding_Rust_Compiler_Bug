{"sha": "eabd9d9167ce36fe441dee0d5efbca494b303652", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFiZDlkOTE2N2NlMzZmZTQ0MWRlZTBkNWVmYmNhNDk0YjMwMzY1Mg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-08-13T18:35:33Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-08-13T18:35:33Z"}, "message": "re PR fortran/89647 (Host associated procedure unable to be used as binding target)\n\n2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/89647\n\tresolve.c (resolve_typebound_procedure): Allow host associated \n\tprocedure to be a binding target.  While here, wrap long line.\n\n2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/89647\n\t* gfortran.dg/pr89647.f90: New test.\n\nFrom-SVN: r274393", "tree": {"sha": "ab2c5b387c5fabd9df61977ee4d703eb2b8914ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab2c5b387c5fabd9df61977ee4d703eb2b8914ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eabd9d9167ce36fe441dee0d5efbca494b303652", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eabd9d9167ce36fe441dee0d5efbca494b303652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eabd9d9167ce36fe441dee0d5efbca494b303652", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eabd9d9167ce36fe441dee0d5efbca494b303652/comments", "author": null, "committer": null, "parents": [{"sha": "5fbc8ab48a57a75e0ce064befc30dee3dc63327a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fbc8ab48a57a75e0ce064befc30dee3dc63327a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fbc8ab48a57a75e0ce064befc30dee3dc63327a"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "6a908eb88a0fcfc4b162df87cef734d4c4ddb45d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eabd9d9167ce36fe441dee0d5efbca494b303652/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eabd9d9167ce36fe441dee0d5efbca494b303652/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=eabd9d9167ce36fe441dee0d5efbca494b303652", "patch": "@@ -1,3 +1,9 @@\n+2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/89647\n+\tresolve.c (resolve_typebound_procedure): Allow host associated \n+\tprocedure to be a binding target.  While here, wrap long line.\n+\n 2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/87993"}, {"sha": "bd379b696a0c2e6ce77b03111c276f698621cdd0", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eabd9d9167ce36fe441dee0d5efbca494b303652/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eabd9d9167ce36fe441dee0d5efbca494b303652/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=eabd9d9167ce36fe441dee0d5efbca494b303652", "patch": "@@ -13583,14 +13583,34 @@ resolve_typebound_procedure (gfc_symtree* stree)\n     }\n   else\n     {\n+      /* If proc has not been resolved at this point, proc->name may \n+\t actually be a USE associated entity. See PR fortran/89647. */\n+      if (!proc->resolved\n+\t  && proc->attr.function == 0 && proc->attr.subroutine == 0)\n+\t{\n+\t  gfc_symbol *tmp;\n+\t  gfc_find_symbol (proc->name, gfc_current_ns->parent, 1, &tmp);\n+\t  if (tmp && tmp->attr.use_assoc)\n+\t    {\n+\t      proc->module = tmp->module;\n+\t      proc->attr.proc = tmp->attr.proc;\n+\t      proc->attr.function = tmp->attr.function;\n+\t      proc->attr.subroutine = tmp->attr.subroutine;\n+\t      proc->attr.use_assoc = tmp->attr.use_assoc;\n+\t      proc->ts = tmp->ts;\n+\t      proc->result = tmp->result;\n+\t    }\n+\t}\n+\n       /* Check for F08:C465.  */\n       if ((!proc->attr.subroutine && !proc->attr.function)\n \t  || (proc->attr.proc != PROC_MODULE\n \t      && proc->attr.if_source != IFSRC_IFBODY)\n \t  || proc->attr.abstract)\n \t{\n-\t  gfc_error (\"%qs must be a module procedure or an external procedure with\"\n-\t\t    \" an explicit interface at %L\", proc->name, &where);\n+\t  gfc_error (\"%qs must be a module procedure or an external \"\n+\t\t     \"procedure with an explicit interface at %L\",\n+\t\t     proc->name, &where);\n \t  goto error;\n \t}\n     }"}, {"sha": "e7ec05b55bcb104df165b39db40e920dd2ef7520", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eabd9d9167ce36fe441dee0d5efbca494b303652/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eabd9d9167ce36fe441dee0d5efbca494b303652/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eabd9d9167ce36fe441dee0d5efbca494b303652", "patch": "@@ -1,3 +1,8 @@\n+2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/89647\n+\t* gfortran.dg/pr89647.f90: New test.\n+\n 2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/87993"}, {"sha": "1d4dc2d058227391fadaf9e9c4d0a65f61c44ecb", "filename": "gcc/testsuite/gfortran.dg/pr89647.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eabd9d9167ce36fe441dee0d5efbca494b303652/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89647.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eabd9d9167ce36fe441dee0d5efbca494b303652/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89647.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89647.f90?ref=eabd9d9167ce36fe441dee0d5efbca494b303652", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do compile }\n+! Code contributed by Ian Harvey  <ian_harvey at bigpond dot com>\n+  MODULE m1\n+    IMPLICIT NONE\n+    PUBLIC :: False\n+    PUBLIC :: True\n+  CONTAINS\n+    FUNCTION False() RESULT(b)\n+      LOGICAL :: b\n+      b = .FALSE.\n+    END FUNCTION False\n+    \n+    FUNCTION True() RESULT(b)\n+      LOGICAL :: b\n+      b = .TRUE.\n+    END FUNCTION True\n+  END MODULE m1\n+\n+  MODULE m2\n+    USE m1\n+    IMPLICIT NONE\n+    TYPE, ABSTRACT :: t_parent\n+    CONTAINS\n+      PROCEDURE(False), DEFERRED, NOPASS :: Binding\n+    END TYPE t_parent\n+  CONTAINS\n+    SUBROUTINE s\n+      TYPE, EXTENDS(t_parent) :: t_extension\n+      CONTAINS\n+        PROCEDURE, NOPASS :: Binding => True\n+      END TYPE t_extension\n+    END SUBROUTINE s\n+  END MODULE m2"}]}