{"sha": "82a6a7583c61ea85cbe36170cab00b2bdab8cf03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJhNmE3NTgzYzYxZWE4NWNiZTM2MTcwY2FiMDBiMmJkYWI4Y2YwMw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-04-09T01:36:49Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-04-09T01:36:49Z"}, "message": "re PR target/14888 (ICE with -O2 -ffast-math in final_scan_insn())\n\n\n\tPR target/14888\n\t* config/i386/i386.md (truncdfsf2_noop, truncxfsf2_noop,\n\ttruncxfdf2_noop): Provide dummy \"fmov\" implementations.\n\n\t* g++.dg/opt/pr14888.C: New test case.\n\nFrom-SVN: r80539", "tree": {"sha": "55f596d2d4b533f64d0dbd50d38dbc9cdcad782e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55f596d2d4b533f64d0dbd50d38dbc9cdcad782e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82a6a7583c61ea85cbe36170cab00b2bdab8cf03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a6a7583c61ea85cbe36170cab00b2bdab8cf03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a6a7583c61ea85cbe36170cab00b2bdab8cf03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a6a7583c61ea85cbe36170cab00b2bdab8cf03/comments", "author": null, "committer": null, "parents": [{"sha": "2a782c52ee25dcad5966c76476b062d5b5356b4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a782c52ee25dcad5966c76476b062d5b5356b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a782c52ee25dcad5966c76476b062d5b5356b4b"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "7a1823a323e175e705b2c6c3b41e7a694af73623", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a6a7583c61ea85cbe36170cab00b2bdab8cf03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a6a7583c61ea85cbe36170cab00b2bdab8cf03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82a6a7583c61ea85cbe36170cab00b2bdab8cf03", "patch": "@@ -1,3 +1,9 @@\n+2004-04-08  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/14888\n+\t* config/i386/i386.md (truncdfsf2_noop, truncxfsf2_noop,\n+\ttruncxfdf2_noop): Provide dummy \"fmov\" implementations.\n+\n 2004-04-08  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \t* gcc.c (default_compilers): Add missing initializers."}, {"sha": "a9d8eedf1415d1bf6442a78eb1784a865e53cfd4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 33, "deletions": 3, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a6a7583c61ea85cbe36170cab00b2bdab8cf03/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a6a7583c61ea85cbe36170cab00b2bdab8cf03/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=82a6a7583c61ea85cbe36170cab00b2bdab8cf03", "patch": "@@ -3677,7 +3677,17 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float_truncate:SF (match_operand:DF 1 \"register_operand\" \"f\")))]\n   \"TARGET_80387 && flag_unsafe_math_optimizations\"\n-  \"#\")\n+{\n+  if (REG_P (operands[1])\n+      && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+    return \"fstp\\t%y0\";\n+  else if (STACK_TOP_P (operands[0]))\n+    return \"fld%z1\\t%y1\";\n+  else\n+    return \"fst\\t%y0\";\n+}\n+  [(set_attr \"type\" \"fmov\")\n+   (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*truncdfsf2_1\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?f#rx,?r#fx,?x#rf\")\n@@ -3920,7 +3930,17 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float_truncate:SF (match_operand:XF 1 \"register_operand\" \"f\")))]\n   \"TARGET_80387 && flag_unsafe_math_optimizations\"\n-  \"#\")\n+{\n+  if (REG_P (operands[1])\n+      && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+    return \"fstp\\t%y0\";\n+  else if (STACK_TOP_P (operands[0]))\n+    return \"fld%z1\\t%y1\";\n+  else\n+    return \"fst\\t%y0\";\n+}\n+  [(set_attr \"type\" \"fmov\")\n+   (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*truncxfsf2_1\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?f#rx,?r#fx,?x#rf\")\n@@ -3999,7 +4019,17 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(float_truncate:DF (match_operand:XF 1 \"register_operand\" \"f\")))]\n   \"TARGET_80387 && flag_unsafe_math_optimizations\"\n-  \"#\")\n+{\n+  if (REG_P (operands[1])\n+      && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+    return \"fstp\\t%y0\";\n+  else if (STACK_TOP_P (operands[0]))\n+    return \"fld%z1\\t%y1\";\n+  else\n+    return \"fst\\t%y0\";\n+}\n+  [(set_attr \"type\" \"fmov\")\n+   (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*truncxfdf2_1\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,?f#rY,?r#fY,?Y#rf\")"}, {"sha": "d581c800a7696d3a778f2b646c61d1a5feff7754", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a6a7583c61ea85cbe36170cab00b2bdab8cf03/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a6a7583c61ea85cbe36170cab00b2bdab8cf03/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=82a6a7583c61ea85cbe36170cab00b2bdab8cf03", "patch": "@@ -1,3 +1,8 @@\n+2004-04-08  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/14888\n+\t* g++.dg/opt/pr14888.C: New test case.\n+\n 2004-04-08  Geoffrey Keating  <geoffk@apple.com>\n \n \t* gcc.dg/pch/valid-1.c, gcc.dg/pch/valid-2.c, gcc.dg/pch/valid-3.c,"}, {"sha": "e5c56aaabf2bb4e0746b434680340d8440d73368", "filename": "gcc/testsuite/g++.dg/opt/pr14888.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a6a7583c61ea85cbe36170cab00b2bdab8cf03/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr14888.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a6a7583c61ea85cbe36170cab00b2bdab8cf03/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr14888.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr14888.C?ref=82a6a7583c61ea85cbe36170cab00b2bdab8cf03", "patch": "@@ -0,0 +1,22 @@\n+// PR target/14888\n+// This used to ICE because the truncdfsf2 isn't completely eliminated\n+\n+// { dg-do compile }\n+// { dg-options \"-O2 -ffast-math\" }\n+\n+class xcomplex\n+{\n+public:\n+  float re, im;\n+\n+  xcomplex &operator*= (const float &fact)\n+  { re*=fact; im*=fact; return *this; }\n+};\n+\n+void foo (xcomplex &almT, xcomplex &almG)\n+{\n+  double gb;\n+  almT*=gb;\n+  almG*=gb*42;\n+}\n+"}]}