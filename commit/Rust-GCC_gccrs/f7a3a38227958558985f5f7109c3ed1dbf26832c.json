{"sha": "f7a3a38227958558985f5f7109c3ed1dbf26832c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhM2EzODIyNzk1ODU1ODk4NWY1ZjcxMDljM2VkMWRiZjI2ODMyYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-09-27T16:20:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-09-27T16:20:40Z"}, "message": "PR libstdc++/91910 fix data race in Debug Mode destructors\n\nFix data race when _Safe_iterator_base::_M_detach() runs concurrently with\nthe _Safe_container_base destructor.\n\n\tPR libstdc++/91910\n\t* src/c++11/debug.cc (_Safe_iterator_base::_M_detach()): Load pointer\n\tatomically and lock the mutex before accessing the sequence.\n\t(_Safe_local_iterator_base::_M_detach()): Likewise.\n\t(_Safe_iterator_base::_M_reset()): Clear _M_sequence atomically.\n\nFrom-SVN: r276184", "tree": {"sha": "95f46a7f254a21f9609d5d6b236edcf8502dc3c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95f46a7f254a21f9609d5d6b236edcf8502dc3c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7a3a38227958558985f5f7109c3ed1dbf26832c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a3a38227958558985f5f7109c3ed1dbf26832c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7a3a38227958558985f5f7109c3ed1dbf26832c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a3a38227958558985f5f7109c3ed1dbf26832c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88e032f105da53ef628f0eecd1f5a6fc372d022b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e032f105da53ef628f0eecd1f5a6fc372d022b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e032f105da53ef628f0eecd1f5a6fc372d022b"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "0b19f29ddbe55f4626f7f2b8a091d63a3d39263a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a3a38227958558985f5f7109c3ed1dbf26832c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a3a38227958558985f5f7109c3ed1dbf26832c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f7a3a38227958558985f5f7109c3ed1dbf26832c", "patch": "@@ -1,3 +1,11 @@\n+2019-09-27  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/91910\n+\t* src/c++11/debug.cc (_Safe_iterator_base::_M_detach()): Load pointer\n+\tatomically and lock the mutex before accessing the sequence.\n+\t(_Safe_local_iterator_base::_M_detach()): Likewise.\n+\t(_Safe_iterator_base::_M_reset()): Clear _M_sequence atomically.\n+\n 2019-09-26  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/debug/array (to_array): Define for debug mode."}, {"sha": "efd1a9e0254329520e926939dd7610e148a56186", "filename": "libstdc++-v3/src/c++11/debug.cc", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a3a38227958558985f5f7109c3ed1dbf26832c/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a3a38227958558985f5f7109c3ed1dbf26832c/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc?ref=f7a3a38227958558985f5f7109c3ed1dbf26832c", "patch": "@@ -381,10 +381,17 @@ namespace __gnu_debug\n   _Safe_iterator_base::\n   _M_detach()\n   {\n-    if (_M_sequence)\n+    // This function can run concurrently with the sequence destructor,\n+    // so there is a TOCTTOU race here: the sequence could be destroyed\n+    // after we check that _M_sequence is not null. Use the pointer value\n+    // to acquire the mutex (rather than via _M_sequence->_M_get_mutex()).\n+    // If the sequence destructor runs between loading the pointer and\n+    // locking the mutex, it will detach this iterator and set _M_sequence\n+    // to null, and then _M_detach_single() will do nothing.\n+    if (auto seq = __atomic_load_n(&_M_sequence, __ATOMIC_ACQUIRE))\n       {\n-\t_M_sequence->_M_detach(this);\n-\t_M_reset();\n+\t__gnu_cxx::__scoped_lock sentry(get_safe_base_mutex(seq));\n+\t_M_detach_single();\n       }\n   }\n \n@@ -403,7 +410,7 @@ namespace __gnu_debug\n   _Safe_iterator_base::\n   _M_reset() throw ()\n   {\n-    _M_sequence = 0;\n+    __atomic_store_n(&_M_sequence, (_Safe_sequence_base*)0, __ATOMIC_RELEASE);\n     _M_version = 0;\n     _M_prior = 0;\n     _M_next = 0;\n@@ -466,10 +473,10 @@ namespace __gnu_debug\n   _Safe_local_iterator_base::\n   _M_detach()\n   {\n-    if (_M_sequence)\n+    if (auto seq = __atomic_load_n(&_M_sequence, __ATOMIC_ACQUIRE))\n       {\n-\t_M_get_container()->_M_detach_local(this);\n-\t_M_reset();\n+\t__gnu_cxx::__scoped_lock sentry(get_safe_base_mutex(seq));\n+\t_M_detach_single();\n       }\n   }\n "}]}