{"sha": "011f9d5d6787f09a00603b69f961a6c08c0593a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDExZjlkNWQ2Nzg3ZjA5YTAwNjAzYjY5Zjk2MWE2YzA4YzA1OTNhNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-15T08:39:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-15T08:39:05Z"}, "message": "[multiple changes]\n\n2012-03-15  Robert Dewar  <dewar@adacore.com>\n\n\t* par-ch6.adb, einfo.ads, sem_eval.adb, sem_eval.ads,\n\tsem_case.adb: Minor reformatting.\n\n2012-03-15  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Add handling\n\tof First_Valid/Last_Valid.\n\t* sem_attr.adb (Check_First_Last_Valid): New procedure\n\t(Analyze_Attribute): Add handling of First_Valid and Last_Valid\n\t(Eval_Attribute): ditto.\n\t* snames.ads-tmpl: Add entries for First_Valid and Last_Valid.\n\n2012-03-15  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch5.adb (Expand_Predicated_Loop): Suppress warnings on\n\tloop variable, for the unusual case where the range has a single\n\telement and the loop variable has no visible assignment to it.\n\n2012-03-15  Vincent Pucci  <pucci@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Quantified_Expression): Expand the\n\toriginal quantified expression node.\n\t* sem_ch4.adb (Analyze_Quantified_Expression): Properly analyze\n\tthe quantified expression and preserve the original non-analyzed\n\tquantified expression when an expansion is needed.\n\t* sem_ch5.adb (Analyze_Iteration_Scheme): Special treatment\n\tfor quantified expressions.\n\t(Analyze_Iterator_Specification): Special treatment for quantified\n\texpressions.\n\n2012-03-15  Ed Falis  <falis@adacore.com>\n\n\t* s-vxwork-ppc.ads: Update FP_CONTEXT so name of former pad\n\tfield matches VxWorks headers.\n\nFrom-SVN: r185409", "tree": {"sha": "b82df2b85a9c05739430521bf233b8096010b493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b82df2b85a9c05739430521bf233b8096010b493"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/011f9d5d6787f09a00603b69f961a6c08c0593a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/011f9d5d6787f09a00603b69f961a6c08c0593a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/011f9d5d6787f09a00603b69f961a6c08c0593a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/011f9d5d6787f09a00603b69f961a6c08c0593a7/comments", "author": null, "committer": null, "parents": [{"sha": "5457d860af14dd311a3408352ca1e27bdf945818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5457d860af14dd311a3408352ca1e27bdf945818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5457d860af14dd311a3408352ca1e27bdf945818"}], "stats": {"total": 363, "additions": 282, "deletions": 81}, "files": [{"sha": "3eedfea922036c5d948a0a9b036f0ed349dcbf12", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -1,3 +1,40 @@\n+2012-03-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch6.adb, einfo.ads, sem_eval.adb, sem_eval.ads,\n+\tsem_case.adb: Minor reformatting.\n+\n+2012-03-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Add handling\n+\tof First_Valid/Last_Valid.\n+\t* sem_attr.adb (Check_First_Last_Valid): New procedure\n+\t(Analyze_Attribute): Add handling of First_Valid and Last_Valid\n+\t(Eval_Attribute): ditto.\n+\t* snames.ads-tmpl: Add entries for First_Valid and Last_Valid.\n+\n+2012-03-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Predicated_Loop): Suppress warnings on\n+\tloop variable, for the unusual case where the range has a single\n+\telement and the loop variable has no visible assignment to it.\n+\n+2012-03-15  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Quantified_Expression): Expand the\n+\toriginal quantified expression node.\n+\t* sem_ch4.adb (Analyze_Quantified_Expression): Properly analyze\n+\tthe quantified expression and preserve the original non-analyzed\n+\tquantified expression when an expansion is needed.\n+\t* sem_ch5.adb (Analyze_Iteration_Scheme): Special treatment\n+\tfor quantified expressions.\n+\t(Analyze_Iterator_Specification): Special treatment for quantified\n+\texpressions.\n+\n+2012-03-15  Ed Falis  <falis@adacore.com>\n+\n+\t* s-vxwork-ppc.ads: Update FP_CONTEXT so name of former pad\n+\tfield matches VxWorks headers.\n+\n 2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc-interface/Makefile.in (mips-sgi-irix6*): Remove."}, {"sha": "c6cf78a543c4df8c527fd841dc8cc0ff5a6ca023", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -3682,13 +3682,14 @@ package Einfo is\n \n --    Static_Predicate (List25)\n --       Present in discrete types/subtypes with predicates (Has_Predicates\n---       set True). Points to a list of expression and N_Range nodes that\n---       represent the predicate in canonical form. The canonical form has\n---       entries sorted in ascending order, with all duplicates eliminated,\n---       and adjacent ranges coalesced, so that there is always a gap in the\n---       values between successive entries. The entries in this list are\n---       fully analyzed and typed with the base type of the subtype. Note\n---       that all entries are static and have values within the subtype range.\n+--       set True). Set if the type/subtype has a static predicate. Points to\n+--       a list of expression and N_Range nodes that represent the predicate\n+--       in canonical form. The canonical form has entries sorted in ascending\n+--       order, with duplicates eliminated, and adjacent ranges coalesced, so\n+--       that there is always a gap in the values between successive entries.\n+--       The entries in this list are fully analyzed and typed with the base\n+--       type of the subtype. Note that all entries are static and have values\n+--       within the subtype range.\n \n --    Storage_Size_Variable (Node15) [implementation base type only]\n --       Present in access types and task type entities. This flag is set"}, {"sha": "5843df9b8518212977f037c241a42ca373385472", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -5701,10 +5701,12 @@ package body Exp_Attr is\n            Attribute_Enabled                      |\n            Attribute_Epsilon                      |\n            Attribute_Fast_Math                    |\n+           Attribute_First_Valid                  |\n            Attribute_Has_Access_Values            |\n            Attribute_Has_Discriminants            |\n            Attribute_Has_Tagged_Values            |\n            Attribute_Large                        |\n+           Attribute_Last_Valid                   |\n            Attribute_Machine_Emax                 |\n            Attribute_Machine_Emin                 |\n            Attribute_Machine_Mantissa             |"}, {"sha": "d04512ad5e10e2475ef85b4ae76f294012a2f1eb", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -7891,9 +7891,22 @@ package body Exp_Ch4 is\n       Cond         : Node_Id;\n       Decl         : Node_Id;\n       I_Scheme     : Node_Id;\n+      Original_N   : Node_Id;\n       Test         : Node_Id;\n \n    begin\n+      --  Retrieve the original quantified expression (non analyzed)\n+\n+      if Present (Loop_Parameter_Specification (N)) then\n+         Original_N := Parent (Parent (Loop_Parameter_Specification (N)));\n+      else\n+         Original_N := Parent (Parent (Iterator_Specification (N)));\n+      end if;\n+\n+      --  Rewrite N with the original quantified expression\n+\n+      Rewrite (N, Original_N);\n+\n       Decl :=\n         Make_Object_Declaration (Loc,\n           Defining_Identifier => Tnn,\n@@ -7904,13 +7917,6 @@ package body Exp_Ch4 is\n \n       Cond := Relocate_Node (Condition (N));\n \n-      --  Reset flag analyzed in the condition to force its analysis. Required\n-      --  since the previous analysis was done with expansion disabled (see\n-      --  Resolve_Quantified_Expression) and hence checks were not inserted\n-      --  and record comparisons have not been expanded.\n-\n-      Reset_Analyzed_Flags (Cond);\n-\n       if Is_Universal then\n          Cond := Make_Op_Not (Loc, Cond);\n       end if;\n@@ -7926,9 +7932,14 @@ package body Exp_Ch4 is\n             Make_Exit_Statement (Loc)));\n \n       if Present (Loop_Parameter_Specification (N)) then\n-         I_Scheme := Relocate_Node (Parent (Loop_Parameter_Specification (N)));\n+         I_Scheme :=\n+           Make_Iteration_Scheme (Loc,\n+              Loop_Parameter_Specification =>\n+                Loop_Parameter_Specification (N));\n       else\n-         I_Scheme := Relocate_Node (Parent (Iterator_Specification (N)));\n+         I_Scheme :=\n+           Make_Iteration_Scheme (Loc,\n+             Iterator_Specification => Iterator_Specification (N));\n       end if;\n \n       Append_To (Actions,"}, {"sha": "6d00dc806ae19bbf7e25316213547ff89d7e4b62", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -3759,6 +3759,14 @@ package body Exp_Ch5 is\n             Set_Analyzed (Loop_Id, False);\n             Set_Ekind    (Loop_Id, E_Variable);\n \n+            --  In most loops the loop variable is assigned in various\n+            --  alternatives in the body. However, in the rare case when\n+            --  the range specifies a single element, the loop variable\n+            --  may trigger a spurious warning that is could be constant.\n+            --  This warning might as well be suppressed.\n+\n+            Set_Warnings_Off (Loop_Id);\n+\n             --  Loop to create branches of case statement\n \n             Alts := New_List;"}, {"sha": "f527dbe81cb0c0653e76e65bde870c23cc9c24b1", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -128,7 +128,8 @@ package body Ch6 is\n    --  other subprogram constructs.\n \n    --  EXPRESSION_FUNCTION ::=\n-   --    FUNCTION SPECIFICATION IS (EXPRESSION);\n+   --    FUNCTION SPECIFICATION IS (EXPRESSION)\n+   --      [ASPECT_SPECIFICATIONS];\n \n    --  The value in Pf_Flags indicates which of these possible declarations\n    --  is acceptable to the caller:"}, {"sha": "85daa3f42704a95e619df1607696667ce82049d8", "filename": "gcc/ada/s-vxwork-ppc.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fs-vxwork-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fs-vxwork-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-ppc.ads?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,9 +44,9 @@ package System.VxWorks is\n    type Fpr_Array is array (1 .. FP_NUM_DREGS) of IC.double;\n \n    type FP_CONTEXT is record\n-      fpr   : Fpr_Array;\n-      fpcsr : IC.int;\n-      pad   : IC.int;\n+      fpr       : Fpr_Array;\n+      fpcsr     : IC.int;\n+      fpcsrCopy : IC.int;\n    end record;\n    pragma Convention (C, FP_CONTEXT);\n "}, {"sha": "8d0a38d190956d6c503cfba5eef1b5bab961725a", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 135, "deletions": 27, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -217,9 +217,13 @@ package body Sem_Attr is\n       --  allowed with a type that has predicates. If the type is a generic\n       --  actual, then the message is a warning, and we generate code to raise\n       --  program error with an appropriate reason. No error message is given\n-      --  for internally generated uses of the attributes.\n-      --  The legality rule only applies to scalar types, even though the\n-      --  current AI mentions all subtypes.\n+      --  for internally generated uses of the attributes. This legality rule\n+      --  only applies to scalar types.\n+\n+      procedure Check_Ada_2012_Attribute;\n+      --  Check that we are in Ada 2012 mode for an Ada 2012 attribute, and\n+      --  issue appropriate messages if not (and return to caller even in\n+      --  the error case).\n \n       procedure Check_Array_Or_Scalar_Type;\n       --  Common procedure used by First, Last, Range attribute to check\n@@ -270,6 +274,9 @@ package body Sem_Attr is\n       --  reference when analyzing an inlined body will lose a proper warning\n       --  on a useless with_clause.\n \n+      procedure Check_First_Last_Valid;\n+      --  Perform all checks for First_Valid and Last_Valid attributes\n+\n       procedure Check_Fixed_Point_Type;\n       --  Verify that prefix of attribute N is a fixed type\n \n@@ -862,6 +869,21 @@ package body Sem_Attr is\n          end if;\n       end Bad_Attribute_For_Predicate;\n \n+      ------------------------------\n+      -- Check_Ada_2012_Attribute --\n+      ------------------------------\n+\n+      procedure Check_Ada_2012_Attribute is\n+      begin\n+         if Ada_Version < Ada_2012 then\n+            Error_Msg_Name_1 := Aname;\n+            Error_Msg_N\n+              (\"attribute % is an Ada 2012 feature\", N);\n+            Error_Msg_N\n+              (\"\\unit must be compiled with -gnat2012 switch\", N);\n+         end if;\n+      end Check_Ada_2012_Attribute;\n+\n       --------------------------------\n       -- Check_Array_Or_Scalar_Type --\n       --------------------------------\n@@ -1244,6 +1266,37 @@ package body Sem_Attr is\n          end if;\n       end Check_Enum_Image;\n \n+      ----------------------------\n+      -- Check_First_Last_Valid --\n+      ----------------------------\n+\n+      procedure Check_First_Last_Valid is\n+      begin\n+         Check_Ada_2012_Attribute;\n+         Check_Discrete_Type;\n+\n+         if not Is_Static_Subtype (P_Type) then\n+            Error_Attr_P (\"prefix of % attribute must be a static subtype\");\n+         end if;\n+\n+         if Has_Predicates (P_Type)\n+           and then No (Static_Predicate (P_Type))\n+         then\n+            Error_Attr_P\n+              (\"prefix of % attribute may not have dynamic predicate\");\n+         end if;\n+\n+         if Expr_Value (Type_Low_Bound (P_Type)) >\n+            Expr_Value (Type_High_Bound (P_Type))\n+           or else (Has_Predicates (P_Type)\n+                     and then Is_Empty_List (Static_Predicate (P_Type)))\n+         then\n+            Error_Attr_P\n+              (\"prefix of % attribute must be subtype with \"\n+               & \"at least one value\");\n+         end if;\n+      end Check_First_Last_Valid;\n+\n       ----------------------------\n       -- Check_Fixed_Point_Type --\n       ----------------------------\n@@ -3240,6 +3293,14 @@ package body Sem_Attr is\n          Check_Component;\n          Set_Etype (N, Universal_Integer);\n \n+      -----------------\n+      -- First_Valid --\n+      -----------------\n+\n+      when Attribute_First_Valid =>\n+         Check_First_Last_Valid;\n+         Set_Etype (N, P_Type);\n+\n       -----------------\n       -- Fixed_Value --\n       -----------------\n@@ -3456,6 +3517,14 @@ package body Sem_Attr is\n          Check_Component;\n          Set_Etype (N, Universal_Integer);\n \n+      ----------------\n+      -- Last_Valid --\n+      ----------------\n+\n+      when Attribute_Last_Valid =>\n+         Check_First_Last_Valid;\n+         Set_Etype (N, P_Type);\n+\n       ------------------\n       -- Leading_Part --\n       ------------------\n@@ -3928,12 +3997,7 @@ package body Sem_Attr is\n       ----------------------\n \n       when Attribute_Overlaps_Storage =>\n-         if Ada_Version < Ada_2012 then\n-            Error_Msg_N\n-              (\"attribute Overlaps_Storage is an Ada 2012 feature\", N);\n-            Error_Msg_N\n-              (\"\\unit must be compiled with -gnat2012 switch\", N);\n-         end if;\n+         Check_Ada_2012_Attribute;\n          Check_E1;\n \n          --  Both arguments must be objects of any type\n@@ -4425,13 +4489,7 @@ package body Sem_Attr is\n       ------------------\n \n       when Attribute_Same_Storage =>\n-         if Ada_Version < Ada_2012 then\n-            Error_Msg_N\n-              (\"attribute Same_Storage is an Ada 2012 feature\", N);\n-            Error_Msg_N\n-              (\"\\unit must be compiled with -gnat2012 switch\", N);\n-         end if;\n-\n+         Check_Ada_2012_Attribute;\n          Check_E1;\n \n          --  The arguments must be objects of any type\n@@ -5388,10 +5446,11 @@ package body Sem_Attr is\n       --  Used for First, Last and Length attributes applied to an array or\n       --  array subtype. Sets the variables Lo_Bound and Hi_Bound to the low\n       --  and high bound expressions for the index referenced by the attribute\n-      --  designator (i.e. the first index if no expression is present, and\n-      --  the N'th index if the value N is present as an expression). Also\n-      --  used for First and Last of scalar types. Static is reset to False\n-      --  if the type or index type is not statically constrained.\n+      --  designator (i.e. the first index if no expression is present, and the\n+      --  N'th index if the value N is present as an expression). Also used for\n+      --  First and Last of scalar types and for First_Valid and Last_Valid.\n+      --  Static is reset to False if the type or index type is not statically\n+      --  constrained.\n \n       function Statically_Denotes_Entity (N : Node_Id) return Boolean;\n       --  Verify that the prefix of a potentially static array attribute\n@@ -6459,6 +6518,31 @@ package body Sem_Attr is\n          end if;\n       end First_Attr;\n \n+      -----------------\n+      -- First_Valid --\n+      -----------------\n+\n+      when Attribute_First_Valid => First_Valid :\n+      begin\n+         if Has_Predicates (P_Type)\n+           and then Present (Static_Predicate (P_Type))\n+         then\n+            declare\n+               FirstN : constant Node_Id := First (Static_Predicate (P_Type));\n+            begin\n+               if Nkind (FirstN) = N_Range then\n+                  Fold_Uint (N, Expr_Value (Low_Bound (FirstN)), Static);\n+               else\n+                  Fold_Uint (N, Expr_Value (FirstN), Static);\n+               end if;\n+            end;\n+\n+         else\n+            Set_Bounds;\n+            Fold_Uint (N, Expr_Value (Lo_Bound), Static);\n+         end if;\n+      end First_Valid;\n+\n       -----------------\n       -- Fixed_Value --\n       -----------------\n@@ -6634,7 +6718,7 @@ package body Sem_Attr is\n       -- Last --\n       ----------\n \n-      when Attribute_Last => Last :\n+      when Attribute_Last => Last_Attr :\n       begin\n          Set_Bounds;\n \n@@ -6658,7 +6742,32 @@ package body Sem_Attr is\n          else\n             Check_Concurrent_Discriminant (Hi_Bound);\n          end if;\n-      end Last;\n+      end Last_Attr;\n+\n+      ----------------\n+      -- Last_Valid --\n+      ----------------\n+\n+      when Attribute_Last_Valid => Last_Valid :\n+      begin\n+         if Has_Predicates (P_Type)\n+           and then Present (Static_Predicate (P_Type))\n+         then\n+            declare\n+               LastN : constant Node_Id := Last (Static_Predicate (P_Type));\n+            begin\n+               if Nkind (LastN) = N_Range then\n+                  Fold_Uint (N, Expr_Value (High_Bound (LastN)), Static);\n+               else\n+                  Fold_Uint (N, Expr_Value (LastN), Static);\n+               end if;\n+            end;\n+\n+         else\n+            Set_Bounds;\n+            Fold_Uint (N, Expr_Value (Hi_Bound), Static);\n+         end if;\n+      end Last_Valid;\n \n       ------------------\n       -- Leading_Part --\n@@ -8568,14 +8677,13 @@ package body Sem_Attr is\n                if Ada_Version >= Ada_2005\n                  and then (Is_Local_Anonymous_Access (Btyp)\n \n-                            --  Handle cases where Btyp is the\n-                            --  anonymous access type of an Ada 2012\n-                            --  stand-alone object.\n+                            --  Handle cases where Btyp is the anonymous access\n+                            --  type of an Ada 2012 stand-alone object.\n \n                             or else Nkind (Associated_Node_For_Itype (Btyp)) =\n                                                         N_Object_Declaration)\n-                 and then Object_Access_Level (P)\n-                          > Deepest_Type_Access_Level (Btyp)\n+                 and then\n+                   Object_Access_Level (P) > Deepest_Type_Access_Level (Btyp)\n                  and then Attr_Id = Attribute_Access\n                then\n                   --  In an instance, this is a runtime check, but one we"}, {"sha": "1825cabd77dc8dde409035830b0baa0e9028bf5c", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -530,8 +530,8 @@ package body Sem_Case is\n    begin\n       if Case_Table'Last = 0 then\n \n-         --  Special case: only an others case is present.\n-         --  The others case covers the full range of the type.\n+         --  Special case: only an others case is present. The others case\n+         --  covers the full range of the type.\n \n          if Is_Static_Subtype (Choice_Type) then\n             Choice := New_Occurrence_Of (Choice_Type, Loc);\n@@ -543,8 +543,8 @@ package body Sem_Case is\n          return;\n       end if;\n \n-      --  Establish the bound values for the choice depending upon whether\n-      --  the type of the case statement is static or not.\n+      --  Establish the bound values for the choice depending upon whether the\n+      --  type of the case statement is static or not.\n \n       if Is_OK_Static_Subtype (Choice_Type) then\n          Exp_Lo := Type_Low_Bound (Choice_Type);"}, {"sha": "c6f8c0c1f07d16d3b4adceff98ef5e641c1fd441", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -3390,14 +3390,25 @@ package body Sem_Ch4 is\n    -----------------------------------\n \n    procedure Analyze_Quantified_Expression (N : Node_Id) is\n-      Loc : constant Source_Ptr := Sloc (N);\n-      Ent : constant Entity_Id :=\n-              New_Internal_Entity\n-                (E_Loop, Current_Scope, Sloc (N), 'L');\n+      Loc             : constant Source_Ptr := Sloc (N);\n+      Ent             : constant Entity_Id :=\n+                          New_Internal_Entity\n+                            (E_Loop, Current_Scope, Sloc (N), 'L');\n+      Needs_Expansion : constant Boolean :=\n+                          Operating_Mode /= Check_Semantics\n+                            and then not Alfa_Mode;\n \n-      Iterator : Node_Id;\n+      Iterator   : Node_Id;\n+      Original_N : Node_Id;\n \n    begin\n+      --  Preserve the original node used for the expansion of the quantified\n+      --  expression.\n+\n+      if Needs_Expansion then\n+         Original_N := Copy_Separate_Tree (N);\n+      end if;\n+\n       Set_Etype  (Ent, Standard_Void_Type);\n       Set_Scope  (Ent, Current_Scope);\n       Set_Parent (Ent, N);\n@@ -3433,7 +3444,15 @@ package body Sem_Ch4 is\n \n       Analyze (Condition (N));\n       End_Scope;\n+\n       Set_Etype (N, Standard_Boolean);\n+\n+      --  Attach the original node to the iteration scheme created above\n+\n+      if Needs_Expansion then\n+         Set_Etype (Original_N, Standard_Boolean);\n+         Set_Parent (Iterator, Original_N);\n+      end if;\n    end Analyze_Quantified_Expression;\n \n    -------------------"}, {"sha": "5a4e4c9acab6f3433c091865a8cda42aca66f996", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -2087,7 +2087,17 @@ package body Sem_Ch5 is\n \n                Check_Controlled_Array_Attribute (DS);\n \n-               Make_Index (DS, LP, In_Iter_Schm => True);\n+               --  The index is not processed during the analysis of a\n+               --  quantified expression but delayed to its expansion where the\n+               --  quantified expression is transformed into an expression with\n+               --  actions.\n+\n+               if Nkind (Parent (N)) /= N_Quantified_Expression\n+                 or else Operating_Mode = Check_Semantics\n+                 or else Alfa_Mode\n+               then\n+                  Make_Index (DS, LP, In_Iter_Schm => True);\n+               end if;\n \n                Set_Ekind (Id, E_Loop_Parameter);\n \n@@ -2097,14 +2107,7 @@ package body Sem_Ch5 is\n                --  because the second one may be created in a different scope,\n                --  e.g. a precondition procedure, leading to a crash in GIGI.\n \n-               --  Note that if the parent node is a quantified expression,\n-               --  this preservation is delayed until the expansion of the\n-               --  quantified expression where the node is rewritten as an\n-               --  expression with actions.\n-\n-               if (No (Etype (Id)) or else Etype (Id) = Any_Type)\n-                 and then Nkind (Parent (N)) /= N_Quantified_Expression\n-               then\n+               if No (Etype (Id)) or else Etype (Id) = Any_Type then\n                   Set_Etype (Id, Etype (DS));\n                end if;\n \n@@ -2241,14 +2244,14 @@ package body Sem_Ch5 is\n       --  If domain of iteration is an expression, create a declaration for\n       --  it, so that finalization actions are introduced outside of the loop.\n       --  The declaration must be a renaming because the body of the loop may\n-      --  assign to elements.\n-\n-      --  Note that if the parent node is a quantified expression, this\n-      --  declaration is created during the expansion of the quantified\n-      --  expression where the node is rewritten as an expression with actions.\n+      --  assign to elements. In case of a quantified expression, this\n+      --  declaration is delayed to its expansion where the node is rewritten\n+      --  as an expression with actions.\n \n       if not Is_Entity_Name (Iter_Name)\n-        and then Nkind (Parent (Parent (N))) /= N_Quantified_Expression\n+        and then (Nkind (Parent (Parent (N))) /= N_Quantified_Expression\n+                   or else Operating_Mode = Check_Semantics\n+                   or else Alfa_Mode)\n       then\n          declare\n             Id   : constant Entity_Id := Make_Temporary (Loc, 'R', Iter_Name);"}, {"sha": "18a59af25d07eaec8b2f104ac9577b6d4b13a9c6", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -4310,8 +4310,8 @@ package body Sem_Eval is\n          return\n            Ekind (Typ) = E_String_Literal_Subtype\n              or else\n-           (Is_OK_Static_Subtype (Component_Type (Typ))\n-              and then Is_OK_Static_Subtype (Etype (First_Index (Typ))));\n+               (Is_OK_Static_Subtype (Component_Type (Typ))\n+                 and then Is_OK_Static_Subtype (Etype (First_Index (Typ))));\n \n       --  Scalar types\n \n@@ -4401,9 +4401,8 @@ package body Sem_Eval is\n       elsif Is_String_Type (Typ) then\n          return\n            Ekind (Typ) = E_String_Literal_Subtype\n-             or else\n-           (Is_Static_Subtype (Component_Type (Typ))\n-              and then Is_Static_Subtype (Etype (First_Index (Typ))));\n+             or else (Is_Static_Subtype (Component_Type (Typ))\n+                       and then Is_Static_Subtype (Etype (First_Index (Typ))));\n \n       --  Scalar types\n "}, {"sha": "6e70021db29ef70e686f205cbbd258e6cd047f02", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -196,7 +196,15 @@ package Sem_Eval is\n \n    function Is_Static_Subtype (Typ : Entity_Id) return Boolean;\n    --  Determines whether a subtype fits the definition of an Ada static\n-   --  subtype as given in (RM 4.9(26)).\n+   --  subtype as given in (RM 4.9(26)). Important note: This check does not\n+   --  include the Ada 2012 case of a non-static predicate which results in an\n+   --  otherwise static subtype being non-static. Such a subtype will return\n+   --  True for this test, so if the distinction is important, the caller must\n+   --  deal with this.\n+   --\n+   --  Implementation note: an attempt to include this Ada 2012 case failed,\n+   --  since it appears that this routine is called in some cases before the\n+   --  Static_Predicate field is set ???\n \n    function Is_OK_Static_Subtype (Typ : Entity_Id) return Boolean;\n    --  Like Is_Static_Subtype but also makes sure that the bounds of the"}, {"sha": "15577220a665c3bc69dbcf4ff47efffd42753b51", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011f9d5d6787f09a00603b69f961a6c08c0593a7/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=011f9d5d6787f09a00603b69f961a6c08c0593a7", "patch": "@@ -770,6 +770,7 @@ package Snames is\n    Name_Fast_Math                      : constant Name_Id := N + $; -- GNAT\n    Name_First                          : constant Name_Id := N + $;\n    Name_First_Bit                      : constant Name_Id := N + $;\n+   Name_First_Valid                    : constant Name_Id := N + $; -- Ada 12\n    Name_Fixed_Value                    : constant Name_Id := N + $; -- GNAT\n    Name_Fore                           : constant Name_Id := N + $;\n    Name_Has_Access_Values              : constant Name_Id := N + $; -- GNAT\n@@ -784,6 +785,7 @@ package Snames is\n    Name_Large                          : constant Name_Id := N + $; -- Ada 83\n    Name_Last                           : constant Name_Id := N + $;\n    Name_Last_Bit                       : constant Name_Id := N + $;\n+   Name_Last_Valid                     : constant Name_Id := N + $; -- Ada 12\n    Name_Leading_Part                   : constant Name_Id := N + $;\n    Name_Length                         : constant Name_Id := N + $;\n    Name_Machine_Emax                   : constant Name_Id := N + $;\n@@ -1332,6 +1334,7 @@ package Snames is\n       Attribute_Fast_Math,\n       Attribute_First,\n       Attribute_First_Bit,\n+      Attribute_First_Valid,\n       Attribute_Fixed_Value,\n       Attribute_Fore,\n       Attribute_Has_Access_Values,\n@@ -1346,6 +1349,7 @@ package Snames is\n       Attribute_Large,\n       Attribute_Last,\n       Attribute_Last_Bit,\n+      Attribute_Last_Valid,\n       Attribute_Leading_Part,\n       Attribute_Length,\n       Attribute_Machine_Emax,"}]}