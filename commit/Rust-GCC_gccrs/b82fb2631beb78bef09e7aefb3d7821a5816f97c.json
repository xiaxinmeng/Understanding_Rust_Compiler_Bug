{"sha": "b82fb2631beb78bef09e7aefb3d7821a5816f97c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgyZmIyNjMxYmViNzhiZWYwOWU3YWVmYjNkNzgyMWE1ODE2Zjk3Yw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-04-08T04:41:56Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-04-08T04:41:56Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r706", "tree": {"sha": "f3f729839594733a506f4e5ba6277773db770ff4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3f729839594733a506f4e5ba6277773db770ff4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b82fb2631beb78bef09e7aefb3d7821a5816f97c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82fb2631beb78bef09e7aefb3d7821a5816f97c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82fb2631beb78bef09e7aefb3d7821a5816f97c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82fb2631beb78bef09e7aefb3d7821a5816f97c/comments", "author": null, "committer": null, "parents": [{"sha": "a72cb8ec98afe1a6bfe488992d3ba69981f57640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a72cb8ec98afe1a6bfe488992d3ba69981f57640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a72cb8ec98afe1a6bfe488992d3ba69981f57640"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "92886fe2dcf603d360a30f7d78442ae853b171e8", "filename": "gcc/unroll.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82fb2631beb78bef09e7aefb3d7821a5816f97c/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82fb2631beb78bef09e7aefb3d7821a5816f97c/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=b82fb2631beb78bef09e7aefb3d7821a5816f97c", "patch": "@@ -2808,7 +2808,7 @@ final_giv_value (v, loop_start, loop_end)\n   rtx reg, insn, pattern;\n   rtx increment, tem;\n   enum rtx_code code;\n-  rtx insert_before;\n+  rtx insert_before, seq;\n \n   bl = reg_biv_class[REGNO (v->src_reg)];\n \n@@ -2887,9 +2887,13 @@ final_giv_value (v, loop_start, loop_end)\n \t\t      || REGNO (XEXP (SET_SRC (pattern), 0)) != bl->regno)\n \t\t    abort ();\n \t\t  \n+\t\t  start_sequence ();\n \t\t  tem = expand_binop (GET_MODE (tem), sub_optab, tem,\n \t\t\t\t      XEXP (SET_SRC (pattern), 1), 0, 0,\n \t\t\t\t      OPTAB_LIB_WIDEN);\n+\t\t  seq = gen_sequence ();\n+\t\t  end_sequence ();\n+\t\t  emit_insn_before (seq, insert_before);\n \t\t}\n \t    }\n \t  "}]}