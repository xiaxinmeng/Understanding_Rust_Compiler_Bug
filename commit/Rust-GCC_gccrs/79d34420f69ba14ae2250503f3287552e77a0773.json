{"sha": "79d34420f69ba14ae2250503f3287552e77a0773", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlkMzQ0MjBmNjliYTE0YWUyMjUwNTAzZjMyODc1NTJlNzdhMDc3Mw==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2010-10-05T09:41:57Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-10-05T09:41:57Z"}, "message": "re PR libstdc++/44647 (std::nothrow and std::bad_alloc are coupled)\n\n2010-10-05  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n\t    Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\tPR libstdc++/44647\n\t* libsupc++/Makefile.am (sources): Add bad_alloc.cc.\n\t* libsupc++/new_handler.cc (bad_alloc): Move to ...\n\t* libsupc++/bad_alloc.cc (bad_alloc): ... here, new file.\n\t* libsupc++/Makefile.in: Regenerate.\n\nCo-Authored-By: Jonathan Wakely <jwakely.gcc@gmail.com>\n\nFrom-SVN: r164973", "tree": {"sha": "42fce2972f79017b2f80b76fc4921bc5c2bcd2ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42fce2972f79017b2f80b76fc4921bc5c2bcd2ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79d34420f69ba14ae2250503f3287552e77a0773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d34420f69ba14ae2250503f3287552e77a0773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d34420f69ba14ae2250503f3287552e77a0773", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d34420f69ba14ae2250503f3287552e77a0773/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92817e897757f430013104a01dbbaf222f7d950a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92817e897757f430013104a01dbbaf222f7d950a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92817e897757f430013104a01dbbaf222f7d950a"}], "stats": {"total": 72, "additions": 55, "deletions": 17}, "files": [{"sha": "97f94fdf80d9989fea86659242824a48554b8fde", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d34420f69ba14ae2250503f3287552e77a0773/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d34420f69ba14ae2250503f3287552e77a0773/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=79d34420f69ba14ae2250503f3287552e77a0773", "patch": "@@ -1,3 +1,12 @@\n+2010-10-05  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\t    Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/44647\n+\t* libsupc++/Makefile.am (sources): Add bad_alloc.cc.\n+\t* libsupc++/new_handler.cc (bad_alloc): Move to ...\n+\t* libsupc++/bad_alloc.cc (bad_alloc): ... here, new file.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\n 2010-10-04  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/functional (function<>::swap): Use std::swap."}, {"sha": "688e139cf595b8148060ab9cf7f0a093a114d56e", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d34420f69ba14ae2250503f3287552e77a0773/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d34420f69ba14ae2250503f3287552e77a0773/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=79d34420f69ba14ae2250503f3287552e77a0773", "patch": "@@ -1,6 +1,7 @@\n ## Makefile for the GNU C++ Support library.\n ##\n-## Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+## Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,\n+## 2009, 2010\n ## Free Software Foundation, Inc.\n ##\n ## Process this file with automake to produce Makefile.in.\n@@ -43,6 +44,7 @@ endif\n sources = \\\n \tarray_type_info.cc \\\n \tatexit_arm.cc \\\n+\tbad_alloc.cc \\\n \tbad_cast.cc \\\n \tbad_typeid.cc \\\n \tclass_type_info.cc \\"}, {"sha": "b0c507332dd05d6de53a62394aacd8813c0c7dc3", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d34420f69ba14ae2250503f3287552e77a0773/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d34420f69ba14ae2250503f3287552e77a0773/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=79d34420f69ba14ae2250503f3287552e77a0773", "patch": "@@ -88,13 +88,13 @@ am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \\\n \t\"$(DESTDIR)$(glibcxxinstalldir)\"\n LTLIBRARIES = $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n libsupc___la_LIBADD =\n-am__objects_1 = array_type_info.lo atexit_arm.lo bad_cast.lo \\\n-\tbad_typeid.lo class_type_info.lo del_op.lo del_opnt.lo \\\n-\tdel_opv.lo del_opvnt.lo dyncast.lo eh_alloc.lo eh_arm.lo \\\n-\teh_aux_runtime.lo eh_call.lo eh_catch.lo eh_exception.lo \\\n-\teh_globals.lo eh_personality.lo eh_ptr.lo eh_term_handler.lo \\\n-\teh_terminate.lo eh_throw.lo eh_type.lo eh_unex_handler.lo \\\n-\tenum_type_info.lo function_type_info.lo \\\n+am__objects_1 = array_type_info.lo atexit_arm.lo bad_alloc.lo \\\n+\tbad_cast.lo bad_typeid.lo class_type_info.lo del_op.lo \\\n+\tdel_opnt.lo del_opv.lo del_opvnt.lo dyncast.lo eh_alloc.lo \\\n+\teh_arm.lo eh_aux_runtime.lo eh_call.lo eh_catch.lo \\\n+\teh_exception.lo eh_globals.lo eh_personality.lo eh_ptr.lo \\\n+\teh_term_handler.lo eh_terminate.lo eh_throw.lo eh_type.lo \\\n+\teh_unex_handler.lo enum_type_info.lo function_type_info.lo \\\n \tfundamental_type_info.lo guard.lo hash_bytes.lo new_handler.lo \\\n \tnew_op.lo new_opnt.lo new_opv.lo new_opvnt.lo \\\n \tpbase_type_info.lo pmem_type_info.lo pointer_type_info.lo \\\n@@ -338,6 +338,7 @@ headers = \\\n sources = \\\n \tarray_type_info.cc \\\n \tatexit_arm.cc \\\n+\tbad_alloc.cc \\\n \tbad_cast.cc \\\n \tbad_typeid.cc \\\n \tclass_type_info.cc \\"}, {"sha": "16076cef933b9937136232f7b02577aa29047c2d", "filename": "libstdc++-v3/libsupc++/bad_alloc.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d34420f69ba14ae2250503f3287552e77a0773/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fbad_alloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d34420f69ba14ae2250503f3287552e77a0773/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fbad_alloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fbad_alloc.cc?ref=79d34420f69ba14ae2250503f3287552e77a0773", "patch": "@@ -0,0 +1,34 @@\n+// Implementation file for the -*- C++ -*- dynamic memory management header.\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of GCC.\n+//\n+// GCC is free software; you can redistribute it and/or modify\n+// it under the terms of the GNU General Public License as published by\n+// the Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// GCC is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"new\"\n+\n+std::bad_alloc::~bad_alloc() throw() { }\n+\n+const char* \n+std::bad_alloc::what() const throw()\n+{\n+  return \"std::bad_alloc\";\n+}"}, {"sha": "4e3c93545a58750cd5352fc3d1e192d07d120c2b", "filename": "libstdc++-v3/libsupc++/new_handler.cc", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d34420f69ba14ae2250503f3287552e77a0773/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d34420f69ba14ae2250503f3287552e77a0773/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_handler.cc?ref=79d34420f69ba14ae2250503f3287552e77a0773", "patch": "@@ -1,7 +1,7 @@\n // Implementation file for the -*- C++ -*- dynamic memory management header.\n \n // Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-// 2005, 2006, 2007, 2009\n+// 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of GCC.\n@@ -39,11 +39,3 @@ std::set_new_handler (new_handler handler) throw()\n   __new_handler = handler;\n   return prev_handler;\n }\n-\n-std::bad_alloc::~bad_alloc() throw() { }\n-\n-const char* \n-std::bad_alloc::what() const throw()\n-{\n-  return \"std::bad_alloc\";\n-}"}]}