{"sha": "5ea0d4df1e599d967b02fd4dad59796554f7f263", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVhMGQ0ZGYxZTU5OWQ5NjdiMDJmZDRkYWQ1OTc5NjU1NGY3ZjI2Mw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-02-21T18:03:30Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-02-21T18:03:30Z"}, "message": "dump-parse-tree.c (debug): Implement for gfc_expr *, gfc_typespec *, gfc_typespec and gfc_symbol *.\n\n2019-02-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n    * dump-parse-tree.c (debug): Implement for gfc_expr *,\n    gfc_typespec *, gfc_typespec and gfc_symbol *.\n\nFrom-SVN: r269071", "tree": {"sha": "c8afd1ae9df23e6b82e4925d9d64d1790ccfd3d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8afd1ae9df23e6b82e4925d9d64d1790ccfd3d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ea0d4df1e599d967b02fd4dad59796554f7f263", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea0d4df1e599d967b02fd4dad59796554f7f263", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ea0d4df1e599d967b02fd4dad59796554f7f263", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea0d4df1e599d967b02fd4dad59796554f7f263/comments", "author": null, "committer": null, "parents": [{"sha": "9e6644c6fd3c9cf9f6a2fc6315052c953ab363cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6644c6fd3c9cf9f6a2fc6315052c953ab363cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e6644c6fd3c9cf9f6a2fc6315052c953ab363cf"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "c3bc30c42f628a1afd4b150c860656743c91d95f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea0d4df1e599d967b02fd4dad59796554f7f263/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea0d4df1e599d967b02fd4dad59796554f7f263/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5ea0d4df1e599d967b02fd4dad59796554f7f263", "patch": "@@ -1,3 +1,8 @@\n+2019-02-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* dump-parse-tree.c (debug): Implement for gfc_expr *,\n+\tgfc_typespec *, gfc_typespec and gfc_symbol *.\n+\n 2019-02-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/86119"}, {"sha": "f798ed0a44715e48dd8e3f26c8d2b7266e97aca8", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea0d4df1e599d967b02fd4dad59796554f7f263/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea0d4df1e599d967b02fd4dad59796554f7f263/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=5ea0d4df1e599d967b02fd4dad59796554f7f263", "patch": "@@ -48,11 +48,37 @@ static void show_expr (gfc_expr *p);\n static void show_code_node (int, gfc_code *);\n static void show_namespace (gfc_namespace *ns);\n static void show_code (int, gfc_code *);\n-\n+static void show_symbol (gfc_symbol *);\n+static void show_typespec (gfc_typespec *);\n \n /* Allow dumping of an expression in the debugger.  */\n void gfc_debug_expr (gfc_expr *);\n \n+void debug (gfc_expr *e)\n+{\n+  FILE *tmp = dumpfile;\n+  dumpfile = stderr;\n+  show_expr (e);\n+  fputc (' ', dumpfile);\n+  show_typespec (&e->ts);\n+  fputc ('\\n', dumpfile);\n+  dumpfile = tmp;\n+}\n+\n+void debug (gfc_typespec *ts)\n+{\n+  FILE *tmp = dumpfile;\n+  dumpfile = stderr;\n+  show_typespec (ts);\n+  fputc ('\\n', dumpfile);\n+  dumpfile = tmp;\n+}\n+\n+void debug (gfc_typespec ts)\n+{\n+  debug (&ts);\n+}\n+\n void\n gfc_debug_expr (gfc_expr *e)\n {\n@@ -76,6 +102,15 @@ gfc_debug_code (gfc_code *c)\n   dumpfile = tmp;\n }\n \n+void debug (gfc_symbol *sym)\n+{\n+  FILE *tmp = dumpfile;\n+  dumpfile = stderr;\n+  show_symbol (sym);\n+  fputc ('\\n', dumpfile);\n+  dumpfile = tmp;\n+}\n+\n /* Do indentation for a specific level.  */\n \n static inline void"}]}