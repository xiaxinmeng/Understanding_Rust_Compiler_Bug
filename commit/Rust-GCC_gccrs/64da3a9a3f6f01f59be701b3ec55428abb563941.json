{"sha": "64da3a9a3f6f01f59be701b3ec55428abb563941", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRkYTNhOWEzZjZmMDFmNTliZTcwMWIzZWM1NTQyOGFiYjU2Mzk0MQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-10-15T09:39:35Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-10-15T09:39:35Z"}, "message": "re PR tree-optimization/67953 (match.pd: X - (X / Y) * Y wrong on change of sign)\n\n\tPR tree-optimization/67953\n\t* match.pd (X - (X / Y) * Y): Don't change signedness of @0.\n\n\t* gcc.dg/fold-minus-6.c (fn4): Change the type of A to\n\tunsigned.\n\t* gcc.dg/torture/pr67953.c: New test.\n\nFrom-SVN: r228839", "tree": {"sha": "5d133cead2c9e7b1ecb400268f2bfd649af8bcdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d133cead2c9e7b1ecb400268f2bfd649af8bcdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64da3a9a3f6f01f59be701b3ec55428abb563941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64da3a9a3f6f01f59be701b3ec55428abb563941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64da3a9a3f6f01f59be701b3ec55428abb563941", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64da3a9a3f6f01f59be701b3ec55428abb563941/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "269ca76f4b95b196558ee8b93828a722ee395196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/269ca76f4b95b196558ee8b93828a722ee395196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/269ca76f4b95b196558ee8b93828a722ee395196"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "6dec962d2839dd417ccce656dfea9ecbd1826e7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64da3a9a3f6f01f59be701b3ec55428abb563941/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64da3a9a3f6f01f59be701b3ec55428abb563941/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64da3a9a3f6f01f59be701b3ec55428abb563941", "patch": "@@ -1,3 +1,8 @@\n+2015-10-15  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/67953\n+\t* match.pd (X - (X / Y) * Y): Don't change signedness of @0.\n+\n 2015-10-15  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config.gcc: Recognize \".\" in architecture base name for AArch64."}, {"sha": "24e19a9647268598d5f26429257294b233c400c0", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64da3a9a3f6f01f59be701b3ec55428abb563941/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64da3a9a3f6f01f59be701b3ec55428abb563941/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=64da3a9a3f6f01f59be701b3ec55428abb563941", "patch": "@@ -267,7 +267,8 @@ along with GCC; see the file COPYING3.  If not see\n /* X - (X / Y) * Y is the same as X % Y.  */\n (simplify\n  (minus (convert1? @0) (convert2? (mult (trunc_div @0 @1) @1)))\n- (if (INTEGRAL_TYPE_P (type) || VECTOR_INTEGER_TYPE_P (type))\n+ (if ((INTEGRAL_TYPE_P (type) || VECTOR_INTEGER_TYPE_P (type))\n+      && TYPE_UNSIGNED (TREE_TYPE (@0)) == TYPE_UNSIGNED (type))\n   (trunc_mod (convert @0) (convert @1))))\n \n /* Optimize TRUNC_MOD_EXPR by a power of two into a BIT_AND_EXPR,"}, {"sha": "631d8a7b613914909831882c3faf6f1b68b511b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64da3a9a3f6f01f59be701b3ec55428abb563941/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64da3a9a3f6f01f59be701b3ec55428abb563941/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64da3a9a3f6f01f59be701b3ec55428abb563941", "patch": "@@ -1,3 +1,10 @@\n+2015-10-15  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/67953\n+\t* gcc.dg/fold-minus-6.c (fn4): Change the type of A to\n+\tunsigned.\n+\t* gcc.dg/torture/pr67953.c: New test.\n+\n 2015-10-14  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/ssa-dom-thread-2.c: Deleted.  The six functions"}, {"sha": "153545266d81472744ce0fdc946a7770a20bb3fe", "filename": "gcc/testsuite/gcc.dg/fold-minus-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64da3a9a3f6f01f59be701b3ec55428abb563941/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64da3a9a3f6f01f59be701b3ec55428abb563941/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-6.c?ref=64da3a9a3f6f01f59be701b3ec55428abb563941", "patch": "@@ -20,7 +20,7 @@ fn3 (long int x)\n }\n \n int\n-fn4 (int a, int b)\n+fn4 (unsigned int a, int b)\n {\n   return a - (unsigned) ((a / b) * b);\n }"}, {"sha": "68ff0132425de651e533c464316bbe3e5130b18f", "filename": "gcc/testsuite/gcc.dg/torture/pr67953.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64da3a9a3f6f01f59be701b3ec55428abb563941/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67953.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64da3a9a3f6f01f59be701b3ec55428abb563941/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67953.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67953.c?ref=64da3a9a3f6f01f59be701b3ec55428abb563941", "patch": "@@ -0,0 +1,36 @@\n+/* PR tree-optimization/67953 */\n+/* { dg-do run } */\n+\n+unsigned int\n+fn1 (signed int a)\n+{\n+  return (unsigned int) a - ((a / 3) * 3);\n+}\n+\n+unsigned int\n+fn2 (signed int a)\n+{\n+  return a - ((a / 3) * 3);\n+}\n+\n+unsigned int\n+fn3 (int a)\n+{\n+  return a - (unsigned) ((a / 3) * 3);\n+}\n+\n+signed int\n+fn4 (int a)\n+{\n+  return (unsigned) a - (unsigned) ((a / 3) * 3);\n+}\n+\n+int\n+main ()\n+{\n+  if (fn1 (-5) != -2\n+      || fn2 (-5) != -2\n+      || fn3 (-5) != -2\n+      || fn4 (-5) != -2)\n+    __builtin_abort ();\n+}"}]}