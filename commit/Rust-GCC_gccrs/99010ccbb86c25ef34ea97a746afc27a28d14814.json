{"sha": "99010ccbb86c25ef34ea97a746afc27a28d14814", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkwMTBjY2JiODZjMjVlZjM0ZWE5N2E3NDZhZmMyN2EyOGQxNDgxNA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-03-24T08:24:29Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-03-24T08:24:29Z"}, "message": "BeanContextEvent.java: Reformated.\n\n2003-03-24  Michael Koch  <konqueror@gmx.de>\n\n\t* java/beans/beancontext/BeanContextEvent.java:\n\tReformated.\n\nFrom-SVN: r64778", "tree": {"sha": "2886f3394c803d896a6e5d35f3a4f0520c420de1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2886f3394c803d896a6e5d35f3a4f0520c420de1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99010ccbb86c25ef34ea97a746afc27a28d14814", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99010ccbb86c25ef34ea97a746afc27a28d14814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99010ccbb86c25ef34ea97a746afc27a28d14814", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99010ccbb86c25ef34ea97a746afc27a28d14814/comments", "author": null, "committer": null, "parents": [{"sha": "b099daeb77ddb139f080f5e7d436927d1eb3f0e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b099daeb77ddb139f080f5e7d436927d1eb3f0e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b099daeb77ddb139f080f5e7d436927d1eb3f0e0"}], "stats": {"total": 106, "additions": 59, "deletions": 47}, "files": [{"sha": "a98a37cabae4a1945dfc087d5a6b18172bf66f83", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99010ccbb86c25ef34ea97a746afc27a28d14814/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99010ccbb86c25ef34ea97a746afc27a28d14814/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=99010ccbb86c25ef34ea97a746afc27a28d14814", "patch": "@@ -1,3 +1,8 @@\n+2003-03-24  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/beans/beancontext/BeanContextEvent.java:\n+\tReformated.\n+\n 2003-03-23  Eric Blake  <ebb9@email.byu.edu>\n \n \t* java/lang/natStringBuffer.cc (regionMatches): New function."}, {"sha": "1fa68292b1f4c619e1fc66c1e492a5426df6a6bb", "filename": "libjava/java/beans/beancontext/BeanContextEvent.java", "status": "modified", "additions": 54, "deletions": 47, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99010ccbb86c25ef34ea97a746afc27a28d14814/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99010ccbb86c25ef34ea97a746afc27a28d14814/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextEvent.java?ref=99010ccbb86c25ef34ea97a746afc27a28d14814", "patch": "@@ -44,60 +44,67 @@\n  * Generic superclass for events fired by <code>BeanContext</code>s.\n  *\n  * @author John Keiser\n- * @since JDK1.2\n+ * @since 1.2\n  */\n \n public abstract class BeanContextEvent extends EventObject\n {\n-\t/**\n-\t * The <code>BeanContext</code> that most recently passed this\n-\t * event on.\n-\t */\n-\tprotected BeanContext propagatedFrom;\n+  private static final long serialVersionUID = 7267998073569045052L;\n+  \n+  /**\n+   * The <code>BeanContext</code> that most recently passed this\n+   * event on.\n+   */\n+  protected BeanContext propagatedFrom;\n \n-\t/**\n-\t * Create a new event, from the specified <code>BeanContext</code>.\n-\t * <code>propagatedFrom</code> will be initialized to\n-\t * <code>null</code>.\n-\t *\n-\t * @param source the source of the event.\n-\t */\n-\tprotected BeanContextEvent(BeanContext source) {\n-\t\tsuper(source);\n-\t}\n+  /**\n+   * Create a new event, from the specified <code>BeanContext</code>.\n+   * <code>propagatedFrom</code> will be initialized to\n+   * <code>null</code>.\n+   *\n+   * @param source the source of the event.\n+   */\n+  protected BeanContextEvent(BeanContext source)\n+  {\n+    super(source);\n+  }\n \n-\t/**\n-\t * Get the <code>BeanContext</code> that originated this event.\n-\t * @return the originator of this event.\n-\t */\n-\tpublic BeanContext getBeanContext() {\n-\t\treturn (BeanContext)getSource();\n-\t}\n+  /**\n+   * Get the <code>BeanContext</code> that originated this event.\n+   * @return the originator of this event.\n+   */\n+  public BeanContext getBeanContext()\n+  {\n+    return (BeanContext)getSource();\n+  }\n \n-\t/**\n-\t * Get the most recent propagator of this event.\n-\t * If this value is <code>null</code>, you have received the event\n-\t * straight from the source.\n-\t *\n-\t * @return the most recent propagator of this event.\n-\t */\n-\tpublic BeanContext getPropagatedFrom() {\n-\t\treturn propagatedFrom;\n-\t}\n+  /**\n+   * Get the most recent propagator of this event.\n+   * If this value is <code>null</code>, you have received the event\n+   * straight from the source.\n+   *\n+   * @return the most recent propagator of this event.\n+   */\n+  public BeanContext getPropagatedFrom()\n+  {\n+    return propagatedFrom;\n+  }\n \n-\t/**\n-\t * Tell whether this event has been propagated.\n-\t * @return <code>true</code> iff <code>getPropagatedFrom() != null</code>.\n-\t */\n-\tpublic boolean isPropagated() {\n-\t\treturn propagatedFrom != null;\n-\t}\n+  /**\n+   * Tell whether this event has been propagated.\n+   * @return <code>true</code> iff <code>getPropagatedFrom() != null</code>.\n+   */\n+  public boolean isPropagated()\n+  {\n+    return propagatedFrom != null;\n+  }\n \n-\t/**\n-\t * Set the most recent propagator of this event.\n-\t * @param propagator the most recent propagator of this event.\n-\t */\n-\tpublic void setPropagatedFrom(BeanContext propagator) {\n-\t\tpropagatedFrom = propagator;\n-\t}\n+  /**\n+   * Set the most recent propagator of this event.\n+   * @param propagator the most recent propagator of this event.\n+   */\n+  public void setPropagatedFrom(BeanContext propagator)\n+  {\n+    propagatedFrom = propagator;\n+  }\n }"}]}