{"sha": "e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVkY2Q2OTU0YTFiNjIzNmUwZDM3ZDJhOGZiMzFhMTNjMjUxNTBhZA==", "commit": {"author": {"name": "Lin Zuojian", "email": "manjian2006@gmail.com", "date": "2014-04-22T05:55:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-04-22T05:55:40Z"}, "message": "re PR middle-end/60281 (Address Sanitizer triggers alignment fault in ARM machines)\n\n\tPR middle-end/60281\n\t* asan.c (asan_emit_stack_protection): Force the base to align to\n\tappropriate bits if STRICT_ALIGNMENT.  Set shadow_mem align to\n\tappropriate bits if STRICT_ALIGNMENT.\n\t* cfgexpand.c (expand_stack_vars): Set base_align appropriately\n\twhen asan is on.\n\t(expand_used_vars): Leave a space in the stack frame for alignment\n\tif STRICT_ALIGNMENT.\n\nFrom-SVN: r209554", "tree": {"sha": "36352461df132eef6f972e42a369651f69061d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36352461df132eef6f972e42a369651f69061d37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad/comments", "author": {"login": "linzj", "id": 5935381, "node_id": "MDQ6VXNlcjU5MzUzODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5935381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linzj", "html_url": "https://github.com/linzj", "followers_url": "https://api.github.com/users/linzj/followers", "following_url": "https://api.github.com/users/linzj/following{/other_user}", "gists_url": "https://api.github.com/users/linzj/gists{/gist_id}", "starred_url": "https://api.github.com/users/linzj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linzj/subscriptions", "organizations_url": "https://api.github.com/users/linzj/orgs", "repos_url": "https://api.github.com/users/linzj/repos", "events_url": "https://api.github.com/users/linzj/events{/privacy}", "received_events_url": "https://api.github.com/users/linzj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8c503f0941a59fb27677b017b727a55a247e915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c503f0941a59fb27677b017b727a55a247e915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c503f0941a59fb27677b017b727a55a247e915"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "577f4bdf9f8da3f69ef23d02e1d20742da1862d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad", "patch": "@@ -1,3 +1,14 @@\n+2014-04-22  Lin Zuojian  <manjian2006@gmail.com>\n+\n+\tPR middle-end/60281\n+\t* asan.c (asan_emit_stack_protection): Force the base to align to\n+\tappropriate bits if STRICT_ALIGNMENT.  Set shadow_mem align to\n+\tappropriate bits if STRICT_ALIGNMENT.\n+\t* cfgexpand.c (expand_stack_vars): Set base_align appropriately\n+\twhen asan is on.\n+\t(expand_used_vars): Leave a space in the stack frame for alignment\n+\tif STRICT_ALIGNMENT.\n+\n 2014-04-21  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gimple.h (gimple_assign_single_p): Accept a const_gimple rather"}, {"sha": "d7c282e312e4d79c922a3f527c84e20143d096f5", "filename": "gcc/asan.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad", "patch": "@@ -1017,8 +1017,17 @@ asan_emit_stack_protection (rtx base, rtx pbase, unsigned int alignb,\n \tbase_align_bias = ((asan_frame_size + alignb - 1)\n \t\t\t   & ~(alignb - HOST_WIDE_INT_1)) - asan_frame_size;\n     }\n+  /* Align base if target is STRICT_ALIGNMENT.  */\n+  if (STRICT_ALIGNMENT)\n+    base = expand_binop (Pmode, and_optab, base,\n+\t\t\t gen_int_mode (-((GET_MODE_ALIGNMENT (SImode)\n+\t\t\t\t\t  << ASAN_SHADOW_SHIFT)\n+\t\t\t\t\t / BITS_PER_UNIT), Pmode), NULL_RTX,\n+\t\t\t 1, OPTAB_DIRECT);\n+\n   if (use_after_return_class == -1 && pbase)\n     emit_move_insn (pbase, base);\n+\n   base = expand_binop (Pmode, add_optab, base,\n \t\t       gen_int_mode (base_offset - base_align_bias, Pmode),\n \t\t       NULL_RTX, 1, OPTAB_DIRECT);\n@@ -1097,6 +1106,8 @@ asan_emit_stack_protection (rtx base, rtx pbase, unsigned int alignb,\n \t      && (ASAN_RED_ZONE_SIZE >> ASAN_SHADOW_SHIFT) == 4);\n   shadow_mem = gen_rtx_MEM (SImode, shadow_base);\n   set_mem_alias_set (shadow_mem, asan_shadow_set);\n+  if (STRICT_ALIGNMENT)\n+    set_mem_align (shadow_mem, (GET_MODE_ALIGNMENT (SImode)));\n   prev_offset = base_offset;\n   for (l = length; l; l -= 2)\n     {\n@@ -1186,6 +1197,10 @@ asan_emit_stack_protection (rtx base, rtx pbase, unsigned int alignb,\n \n   shadow_mem = gen_rtx_MEM (BLKmode, shadow_base);\n   set_mem_alias_set (shadow_mem, asan_shadow_set);\n+\n+  if (STRICT_ALIGNMENT)\n+    set_mem_align (shadow_mem, (GET_MODE_ALIGNMENT (SImode)));\n+\n   prev_offset = base_offset;\n   last_offset = base_offset;\n   last_size = 0;"}, {"sha": "78eca25f493776f2a85248875188e734175323a1", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=e5dcd6954a1b6236e0d37d2a8fb31a13c25150ad", "patch": "@@ -1013,10 +1013,19 @@ expand_stack_vars (bool (*pred) (size_t), struct stack_vars_data *data)\n \t      if (data->asan_base == NULL)\n \t\tdata->asan_base = gen_reg_rtx (Pmode);\n \t      base = data->asan_base;\n+\n+\t      if (!STRICT_ALIGNMENT)\n+\t\tbase_align = crtl->max_used_stack_slot_alignment;\n+\t      else\n+\t\tbase_align = MAX (crtl->max_used_stack_slot_alignment,\n+\t\t\t\t  GET_MODE_ALIGNMENT (SImode)\n+\t\t\t\t  << ASAN_SHADOW_SHIFT);\n \t    }\n \t  else\n-\t    offset = alloc_stack_frame_space (stack_vars[i].size, alignb);\n-\t  base_align = crtl->max_used_stack_slot_alignment;\n+\t    {\n+\t      offset = alloc_stack_frame_space (stack_vars[i].size, alignb);\n+\t      base_align = crtl->max_used_stack_slot_alignment;\n+\t    }\n \t}\n       else\n \t{\n@@ -1845,6 +1854,11 @@ expand_used_vars (void)\n \t    = alloc_stack_frame_space (redzonesz, ASAN_RED_ZONE_SIZE);\n \t  data.asan_vec.safe_push (prev_offset);\n \t  data.asan_vec.safe_push (offset);\n+\t  /* Leave space for alignment if STRICT_ALIGNMENT.  */\n+\t  if (STRICT_ALIGNMENT)\n+\t    alloc_stack_frame_space ((GET_MODE_ALIGNMENT (SImode)\n+\t\t\t\t      << ASAN_SHADOW_SHIFT)\n+\t\t\t\t     / BITS_PER_UNIT, 1);\n \n \t  var_end_seq\n \t    = asan_emit_stack_protection (virtual_stack_vars_rtx,"}]}