{"sha": "0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU4MGM5YWE0YzA1MThjMWRkODM2MDVhZTA4ODJhNWE4ZTAzZDhhNw==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "1999-03-03T11:22:42Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "1999-03-03T11:22:42Z"}, "message": "decl.c (push_overloaded_decl): Only overwrite the old binding if there was one.\n\n\t* decl.c (push_overloaded_decl): Only overwrite the old binding if\n\tthere was one.\n\t* decl2.c (do_local_using_decl): Fix loop termination.\n\nFrom-SVN: r25560", "tree": {"sha": "e0fb4e88d0901c8a4b98eb878b4613e43ca2bbf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0fb4e88d0901c8a4b98eb878b4613e43ca2bbf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7/comments", "author": null, "committer": null, "parents": [{"sha": "69063200c247f1bb05d369b0f6b396858d9190d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69063200c247f1bb05d369b0f6b396858d9190d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69063200c247f1bb05d369b0f6b396858d9190d0"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "f9b40dbdca543ef4a44daa1314d06f5063c899db", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7", "patch": "@@ -1,3 +1,9 @@\n+1999-03-03  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* decl.c (push_overloaded_decl): Only overwrite the old binding if\n+\tthere was one.\n+\t* decl2.c (do_local_using_decl): Fix loop termination.\n+\n 1999-03-02  Mark Mitchell  <mark@markmitchell.com>\n \n \t* cp-tree.h (determine_specialization): Don't declare."}, {"sha": "f7580bac4e862d3e3f27992eba3c13c0b27c132e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7", "patch": "@@ -4274,11 +4274,12 @@ push_overloaded_decl (decl, flags)\n   else\n     {\n       /* We only create an OVERLOAD if there was a previous binding at\n-\t this level.  In that case, we need to remove the old binding\n-\t and replace it with the new binding.  We must also run\n-\t through the NAMES on the binding level where the name was\n-\t bound to update the chain.  */\n-      if (TREE_CODE (new_binding) == OVERLOAD)\n+\t this level, or if decl is a template. In the former case, we\n+\t need to remove the old binding and replace it with the new\n+\t binding.  We must also run through the NAMES on the binding\n+\t level where the name was bound to update the chain.  */\n+\n+      if (TREE_CODE (new_binding) == OVERLOAD && old)\n \t{\n \t  tree *d;\n \t  "}, {"sha": "353033cefc5a3f136f7a4779b84cb47ea92bf85a", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=0580c9aa4c0518c1dd83605ae0882a5a8e03d8a7", "patch": "@@ -4833,11 +4833,18 @@ do_local_using_decl (decl)\n     {\n       if (is_overloaded_fn (newval))\n \t{\n-\t  tree fn;\n+\t  tree fn, term;\n \n \t  /* We only need to push declarations for those functions\n-\t     that were not already bound in the current level.  */\n-\t  for (fn = newval; fn != oldval; fn = OVL_NEXT (fn))\n+\t     that were not already bound in the current level.\n+\t     The old value might be NULL_TREE, it might be a single\n+\t     function, or an OVERLOAD.  */\n+\t  if (oldval && TREE_CODE (oldval) == OVERLOAD)\n+\t    term = OVL_FUNCTION (oldval);\n+\t  else\n+\t    term = oldval;\n+\t  for (fn = newval; fn && OVL_CURRENT (fn) != term; \n+\t       fn = OVL_NEXT (fn))\n \t    push_overloaded_decl (OVL_CURRENT (fn), \n \t\t\t\t  PUSH_LOCAL | PUSH_USING);\n \t}"}]}