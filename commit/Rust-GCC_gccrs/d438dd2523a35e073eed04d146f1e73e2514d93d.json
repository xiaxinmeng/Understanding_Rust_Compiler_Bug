{"sha": "d438dd2523a35e073eed04d146f1e73e2514d93d", "node_id": "C_kwDOANBUbNoAKGQ0MzhkZDI1MjNhMzVlMDczZWVkMDRkMTQ2ZjFlNzNlMjUxNGQ5M2Q", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-21T08:00:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-21T08:02:31Z"}, "message": "testsuite/102861 - adjust gcc.dg/vect/bb-slp-16.c change\n\nThis reverts the bogus previous change causing runtime failures\nand instead realizes that we now have the loop condition\nif-converted and the BB vectorization opportunity realized during\nthe loop vectorization pass.\n\n2021-10-21  Richard Biener  <rguenther@suse.de>\n\n\tPR testsuite/102861\n\t* gcc.dg/vect/bb-slp-16.c: Revert previous change, scan\n\tthe vect dump instead.", "tree": {"sha": "c56b0d030cc206b51e4d0d1bbb9684dd8eb9d270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c56b0d030cc206b51e4d0d1bbb9684dd8eb9d270"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d438dd2523a35e073eed04d146f1e73e2514d93d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d438dd2523a35e073eed04d146f1e73e2514d93d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d438dd2523a35e073eed04d146f1e73e2514d93d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d438dd2523a35e073eed04d146f1e73e2514d93d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e4659199e814b7ee0f6bd925fd2c0a7610da856", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e4659199e814b7ee0f6bd925fd2c0a7610da856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e4659199e814b7ee0f6bd925fd2c0a7610da856"}], "stats": {"total": 73, "additions": 32, "deletions": 41}, "files": [{"sha": "82fae06e3244a9bbb4a471faecdc5f1174970229", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-16.c", "status": "modified", "additions": 32, "deletions": 41, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d438dd2523a35e073eed04d146f1e73e2514d93d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d438dd2523a35e073eed04d146f1e73e2514d93d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-16.c?ref=d438dd2523a35e073eed04d146f1e73e2514d93d", "patch": "@@ -1,4 +1,6 @@\n /* { dg-require-effective-target vect_int } */\n+/* The SLP vectorization happens as part of the if-converted loop body.  */\n+/* { dg-additional-options \"-fdump-tree-vect-details\" } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -16,52 +18,41 @@ main1 (int dummy)\n   unsigned int *pin = &in[0];\n   unsigned int *pout = &out[0];\n   unsigned int a = 0;\n-\n-  i = N;\n-  if (i > 0)\n+  \n+  for (i = 0; i < N; i++)\n     {\n-      do\n-\t{\n-\t  *pout++ = *pin++ + a;\n-\t  *pout++ = *pin++ + a;\n-\t  *pout++ = *pin++ + a;\n-\t  *pout++ = *pin++ + a;\n-\t  *pout++ = *pin++ + a;\n-\t  *pout++ = *pin++ + a;\n-\t  *pout++ = *pin++ + a;\n-\t  *pout++ = *pin++ + a;\n-\t  if (arr[i] = i)\n-\t    a = i;\n-\t  else\n-\t    a = 2;\n-\t}\n-      while (i < N);\n+      *pout++ = *pin++ + a;\n+      *pout++ = *pin++ + a;\n+      *pout++ = *pin++ + a;\n+      *pout++ = *pin++ + a;\n+      *pout++ = *pin++ + a;\n+      *pout++ = *pin++ + a;\n+      *pout++ = *pin++ + a;\n+      *pout++ = *pin++ + a;\n+      if (arr[i] = i)\n+        a = i;\n+      else\n+        a = 2;\n     }\n \n   a = 0;\n-  /* check results: */\n-  i = N;\n-  if (i > 0)\n+  /* check results: */ \n+  for (i = 0; i < N; i++)\n     {\n-      do\n-\t{\n-\t  if (out[i*8] !=  in[i*8] + a\n-\t      || out[i*8 + 1] != in[i*8 + 1] + a\n-\t      || out[i*8 + 2] != in[i*8 + 2] + a\n-\t      || out[i*8 + 3] != in[i*8 + 3] + a\n-\t      || out[i*8 + 4] != in[i*8 + 4] + a\n-\t      || out[i*8 + 5] != in[i*8 + 5] + a\n-\t      || out[i*8 + 6] != in[i*8 + 6] + a\n-\t      || out[i*8 + 7] != in[i*8 + 7] + a)\n-\t    abort ();\n+      if (out[i*8] !=  in[i*8] + a\n+         || out[i*8 + 1] != in[i*8 + 1] + a\n+         || out[i*8 + 2] != in[i*8 + 2] + a\n+         || out[i*8 + 3] != in[i*8 + 3] + a\n+         || out[i*8 + 4] != in[i*8 + 4] + a\n+         || out[i*8 + 5] != in[i*8 + 5] + a\n+         || out[i*8 + 6] != in[i*8 + 6] + a\n+         || out[i*8 + 7] != in[i*8 + 7] + a)\n+\tabort ();\n \n-\t  if (arr[i] = i)\n-\t    a = i;\n-\t  else\n-\t    a = 2;\n-\t  i++;\n-\t}\n-      while (i < N);\n+      if (arr[i] = i)\n+        a = i;\n+      else\n+        a = 2;\n     }\n \n   return 0;\n@@ -76,4 +67,4 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"optimized: basic block\" 1 \"slp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"optimized: basic block\" 1 \"vect\" } } */"}]}