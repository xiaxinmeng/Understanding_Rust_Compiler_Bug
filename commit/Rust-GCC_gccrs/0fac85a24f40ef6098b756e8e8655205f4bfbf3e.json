{"sha": "0fac85a24f40ef6098b756e8e8655205f4bfbf3e", "node_id": "C_kwDOANBUbNoAKDBmYWM4NWEyNGY0MGVmNjA5OGI3NTZlOGU4NjU1MjA1ZjRiZmJmM2U", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-21T00:19:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-21T00:23:22Z"}, "message": "libstdc++: Remove constraints from std::optional monadic ops [PR102863]\n\nThe constraints on transform and and_then can cause errors when checking\nsatisfaction. The constraints that were present in R6 of the paper were\nmoved for he final F8 revision, and so should have been included in the\nimplementation.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/102863\n\t* include/std/optional (optional::and_then, optional::transform):\n\tRemove requires-clause.\n\t* testsuite/20_util/optional/monadic/and_then.cc: Check\n\toverload resolution doesn't cause errors.\n\t* testsuite/20_util/optional/monadic/transform.cc: Likewise.", "tree": {"sha": "0460446bcc7e06ff2559b7452dfcf9709ec1e46e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0460446bcc7e06ff2559b7452dfcf9709ec1e46e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fac85a24f40ef6098b756e8e8655205f4bfbf3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fac85a24f40ef6098b756e8e8655205f4bfbf3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fac85a24f40ef6098b756e8e8655205f4bfbf3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fac85a24f40ef6098b756e8e8655205f4bfbf3e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "674dda6be01990c2def9bd7a41d53ec996e8b0ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/674dda6be01990c2def9bd7a41d53ec996e8b0ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/674dda6be01990c2def9bd7a41d53ec996e8b0ed"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "783d7ca1b64b56dff64e9e658c57e746b5e97c2e", "filename": "libstdc++-v3/include/std/optional", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fac85a24f40ef6098b756e8e8655205f4bfbf3e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fac85a24f40ef6098b756e8e8655205f4bfbf3e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional?ref=0fac85a24f40ef6098b756e8e8655205f4bfbf3e", "patch": "@@ -1048,7 +1048,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       // [optional.monadic]\n \n-      template<typename _Fn> requires invocable<_Fn, _Tp&>\n+      template<typename _Fn>\n \tconstexpr auto\n \tand_then(_Fn&& __f) &\n \t{\n@@ -1060,7 +1060,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    return _Up();\n \t}\n \n-      template<typename _Fn> requires invocable<_Fn, const _Tp&>\n+      template<typename _Fn>\n \tconstexpr auto\n \tand_then(_Fn&& __f) const &\n \t{\n@@ -1072,7 +1072,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    return _Up();\n \t}\n \n-      template<typename _Fn> requires invocable<_Fn, _Tp>\n+      template<typename _Fn>\n \tconstexpr auto\n \tand_then(_Fn&& __f) &&\n \t{\n@@ -1084,7 +1084,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    return _Up();\n \t}\n \n-      template<typename _Fn> requires invocable<_Fn, const _Tp>\n+      template<typename _Fn>\n \tconstexpr auto\n \tand_then(_Fn&& __f) const &&\n \t{\n@@ -1096,7 +1096,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    return _Up();\n \t}\n \n-      template<typename _Fn> requires invocable<_Fn, _Tp&>\n+      template<typename _Fn>\n \tconstexpr auto\n \ttransform(_Fn&& __f) &\n \t{\n@@ -1107,7 +1107,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    return optional<_Up>();\n \t}\n \n-      template<typename _Fn> requires invocable<_Fn, const _Tp&>\n+      template<typename _Fn>\n \tconstexpr auto\n \ttransform(_Fn&& __f) const &\n \t{\n@@ -1118,7 +1118,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    return optional<_Up>();\n \t}\n \n-      template<typename _Fn> requires invocable<_Fn, _Tp>\n+      template<typename _Fn>\n \tconstexpr auto\n \ttransform(_Fn&& __f) &&\n \t{\n@@ -1129,7 +1129,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    return optional<_Up>();\n \t}\n \n-      template<typename _Fn> requires invocable<_Fn, const _Tp>\n+      template<typename _Fn>\n \tconstexpr auto\n \ttransform(_Fn&& __f) const &&\n \t{"}, {"sha": "f69ab952643f9df1aa84f3d02b4e3e0874d8dd43", "filename": "libstdc++-v3/testsuite/20_util/optional/monadic/and_then.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fac85a24f40ef6098b756e8e8655205f4bfbf3e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Fand_then.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fac85a24f40ef6098b756e8e8655205f4bfbf3e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Fand_then.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Fand_then.cc?ref=0fac85a24f40ef6098b756e8e8655205f4bfbf3e", "patch": "@@ -113,8 +113,20 @@ test_forwarding()\n \n static_assert( test_forwarding() );\n \n+void f(int&) { }\n+\n+void\n+test_unconstrained()\n+{\n+  // PR libstc++/102863 - Optional monadic ops should not be constrained\n+  std::optional<int> x;\n+  auto answer = x.and_then([](auto& y) { f(y); return std::optional<int>{42}; });\n+  VERIFY( !answer );\n+}\n+\n int main()\n {\n   test_and_then();\n   test_forwarding();\n+  test_unconstrained();\n }"}, {"sha": "356c94de6d090a250dc2aa8913a945fbdd1efb1e", "filename": "libstdc++-v3/testsuite/20_util/optional/monadic/transform.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fac85a24f40ef6098b756e8e8655205f4bfbf3e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Ftransform.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fac85a24f40ef6098b756e8e8655205f4bfbf3e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Ftransform.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fmonadic%2Ftransform.cc?ref=0fac85a24f40ef6098b756e8e8655205f4bfbf3e", "patch": "@@ -132,9 +132,21 @@ test_copy_elision()\n \n static_assert( test_copy_elision() );\n \n+void f(int&) { }\n+\n+void\n+test_unconstrained()\n+{\n+  // PR libstc++/102863 - Optional monadic ops should not be constrained\n+  std::optional<int> x;\n+  auto answer = x.transform([](auto& y) { f(y); return 42; });\n+  VERIFY( !answer );\n+}\n+\n int main()\n {\n   test_transform();\n   test_forwarding();\n   test_copy_elision();\n+  test_unconstrained();\n }"}]}