{"sha": "4e0c8ad2e76232d2011364f507c840b1573249f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUwYzhhZDJlNzYyMzJkMjAxMTM2NGY1MDdjODQwYjE1NzMyNDlmNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-21T10:53:37Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-21T10:53:37Z"}, "message": "(USER_LABEL_PREFIX): Define instead of ASM_OUTPUT_LABELREF.\n\nFrom-SVN: r12750", "tree": {"sha": "04bfde498ac0c91dfed02321e9af06ec5aca5795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04bfde498ac0c91dfed02321e9af06ec5aca5795"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e0c8ad2e76232d2011364f507c840b1573249f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0c8ad2e76232d2011364f507c840b1573249f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e0c8ad2e76232d2011364f507c840b1573249f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0c8ad2e76232d2011364f507c840b1573249f7/comments", "author": null, "committer": null, "parents": [{"sha": "81d77cdaa774bed5405a4ab46060103b33b7e1e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81d77cdaa774bed5405a4ab46060103b33b7e1e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81d77cdaa774bed5405a4ab46060103b33b7e1e6"}], "stats": {"total": 148, "additions": 58, "deletions": 90}, "files": [{"sha": "86414a57598a8250a77184c9a11291cc5d25bc8e", "filename": "gcc/config/1750a/1750a.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2F1750a%2F1750a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2F1750a%2F1750a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1084,11 +1084,9 @@ enum reg_class { NO_REGS, R2, R0_1, INDEX_REGS, BASE_REGS, ALL_REGS, LIM_REG_CLA\n \t   fprintf (FILE, \"\\tglobal  %s\\t; export\\n\", NAME);\t\\\n   } while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-\t  fprintf (FILE, \"%s\", NAME)\n+#define USER_LABEL_PREFIX \"\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "f64c98db4443c6b93a54e6f09ec7167e44f44f55", "filename": "gcc/config/a29k/a29k.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fa29k%2Fa29k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fa29k%2Fa29k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1461,11 +1461,10 @@ extern int a29k_debug_reg_map[];\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\"\\t.global \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#undef USER_LABEL_PREFIX\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "dbd16a5967936c9c4dd0dc42e2f411b87a034fe4", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1753,11 +1753,9 @@ literal_section ()\t\t\t\t\t\t\\\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\"\\t.globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"%s\", NAME)\n+#define USER_LABEL_PREFIX \"\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "2aa6032592c02689b9c55b4c63256a4ac32a9a28", "filename": "gcc/config/convex/convex.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fconvex%2Fconvex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fconvex%2Fconvex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fconvex.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1292,10 +1292,9 @@ extern double atof();\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\".globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "bb389044bd3fa1fc2b1e3c9ddce556275e9db06a", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1796,10 +1796,10 @@ const_section ()                                                   \\\n \tassemble_name (FILE, XSTR (FUN, 0));\t\\\n \tfprintf (FILE, \"\\n\");\t\t\t\\\n }\n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+\n+/* The prefix to add to user-visible assembler symbols. */\n+\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "7a7e757b3a370aa49e8cf13e42848036b89ccb70", "filename": "gcc/config/elxsi/elxsi.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Felxsi%2Felxsi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Felxsi%2Felxsi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felxsi%2Felxsi.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  Elxsi version.\n-   Copyright (C) 1987, 1988, 1992, 1995 Free Software Foundation, Inc.\n-   This port, done by Mike Stump <mrs@cygnus.com> in 1988, is the first\n+   Copyright (C) 1987, 1988, 1992, 1995, 1996 Free Software Foundation, Inc.\n+   This port, contributed by Mike Stump <mrs@cygnus.com> in 1988, is the first\n    64 bit port of GNU CC.\n    Based upon the VAX port.\n \n@@ -797,10 +797,9 @@ enum reg_class { NO_REGS, GENERAL_REGS, ALL_REGS, LIM_REG_CLASSES };\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\"\\t.extdef\\t\", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"%s\", NAME)\n+#define USER_LABEL_PREFIX \"\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "b56834a372c791663e07b77f10d0a31be8bd81e8", "filename": "gcc/config/fx80/fx80.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Ffx80%2Ffx80.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Ffx80%2Ffx80.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffx80%2Ffx80.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Alliant FX version.\n-   Copyright (C) 1989, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n    Adapted from m68k.h by Paul Petersen (petersen@uicsrd.csrd.uiuc.edu)\n    and Joe Weening (weening@gang-of-four.stanford.edu).\n \n@@ -1063,11 +1063,9 @@ extern enum reg_class regno_reg_class[];\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\"\\t.globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "6333b1e1e3c7de0b728ab2d84015f2e161591c4e", "filename": "gcc/config/gmicro/gmicro.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgmicro%2Fgmicro.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1353,11 +1353,9 @@ extern enum reg_class regno_reg_class[];\n }\n \n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "acf096464e2b70d391161dbff08fc475e013401c", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1191,11 +1191,9 @@ readonly_data() \t\t\t\t\t\t\\\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL) \\\n    ASM_OUTPUT_LABEL(FILE, NAME)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE, NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "4d4d66c181a049259f6b212eafdb9ea4cce08af5", "filename": "gcc/config/i386/sun386.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fi386%2Fsun386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fi386%2Fsun386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsun386.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Sun assembler syntax for the Intel 80386.\n-   Copyright (C) 1988 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -131,10 +131,9 @@ do\t\t\t\t\t\t\t\t\\\n #define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)\t\\\n   sprintf ((BUF), \"*.%s%d\", (PREFIX), (NUMBER))\n \n-/* This is how to output a reference to a user-level label named NAME.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"%s\", NAME)\n+#define USER_LABEL_PREFIX \"\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "29a42cca316572877a28bc2225c0807065626c64", "filename": "gcc/config/i860/i860.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fi860%2Fi860.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fi860%2Fi860.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fi860.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for Intel 860.\n-   Copyright (C) 1989, 1991, 1993, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1991, 1993, 1995, 1996 Free Software Foundation, Inc.\n    Hacked substantially by Ron Guilmette (rfg@segfault.us.com) to cater to\n    the whims of the System V Release 4 assembler.\n \n@@ -1046,15 +1046,13 @@ struct cumulative_args { int ints, floats; };\n \tfputs (\"\\n\", FILE);\t\t\t\t\t\t\\\n   } while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.\n+/* The prefix to add to user-visible assembler symbols.\n \n    This definition is overridden in i860v4.h because under System V\n    Release 4, user-level symbols are *not* prefixed with underscores in\n    the generated assembly code.  */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "f5bcfa41e109190e11fa3e99f72bd4fd5ae777a9", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1263,10 +1263,9 @@ extern struct rtx_def *gen_compare_reg ();\n   assemble_name (FILE, NAME);\t\t\t\\\n   fputs (\"\\n\", FILE); }\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\tfprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "f10c772e0bad61bf989ba59ae510b52f0e6b8a0e", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  NS32000 version.\n-   Copyright (C) 1988, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -1364,11 +1364,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n } while (0)\n #endif\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "94da18e40f89a8ea79dcc9038472b24a457a971f", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1079,11 +1079,9 @@ fprintf (FILE, \"$help$: . = .+8 ; space for tmp moves!\\n\")\t\\\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\"\\t.globl \", FILE); assemble_name (FILE, NAME); fputs(\"\\n\", FILE); } while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "db9d1742e2353bc18864c26c52967f1696ad6980", "filename": "gcc/config/pyr/pyr.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fpyr%2Fpyr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fpyr%2Fpyr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpyr%2Fpyr.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine parameters for GNU compiler,\n    for Pyramid 90x, 9000, and MIServer Series.\n-   Copyright (C) 1989, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -1177,10 +1177,9 @@ extern int swap_operands;\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\".globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-   fprintf (FILE, \"_%s\", NAME);\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "be12d367fbba0d949177e33992a5f253835e2a0c", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1419,11 +1419,9 @@ extern int romp_debugger_arg_correction();\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\"\\t.globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "92fa50e693c3011893e37342649e5187dbaedc28", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1432,9 +1432,9 @@ dtors_section()\t\t\t\t\t\t\t\\\n    assemble_name (STREAM, NAME),\t\t\\\n    fputc ('\\n',STREAM))\n \n-/* Output a reference to a label.  */\n-#define ASM_OUTPUT_LABELREF(STREAM,NAME) \\\n-  fprintf (STREAM, \"_%s\", NAME)\n+/* The prefix to add to user-visible assembler symbols. */\n+\n+#define USER_LABEL_PREFIX \"_\"\n \n /* Make an internal label into a string.  */\n #define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM) \\"}, {"sha": "4e51a966e7b8019dc238cab6b3186e808a777532", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -2814,11 +2814,9 @@ extern struct rtx_def *legitimize_pic_address ();\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\"\\t.global \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output a definition of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "51e1add1b27a6058df8afb92941062d03d235541", "filename": "gcc/config/spur/spur.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fspur%2Fspur.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fspur%2Fspur.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspur%2Fspur.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for SPUR chip.\n-   Copyright (C) 1988, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -873,11 +873,9 @@ extern int current_function_pretend_args_size;\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\".globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "b4076ce53b3b0360e0c293aeb3741964e38bf669", "filename": "gcc/config/tahoe/tahoe.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Ftahoe%2Ftahoe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Ftahoe%2Ftahoe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftahoe%2Ftahoe.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Tahoe version.\n-   Copyright (C) 1989, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -781,10 +781,9 @@ enum reg_class {NO_REGS,GENERAL_REGS,FPP_REG,ALL_REGS,LIM_REG_CLASSES};\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\".globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* output a label by appending an underscore to it */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* use the standard format for printing internal labels */\n "}, {"sha": "e9370a07d4542e07fdf50624e980334779a632b1", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1076,10 +1076,9 @@ gen_rtx (PLUS, Pmode, frame, gen_rtx (CONST_INT, VOIDmode, 12))\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\".globl \", FILE); assemble_name (FILE, NAME); fputs (\"\\n\", FILE);} while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"_%s\", NAME)\n+#define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}, {"sha": "460fc3d282014d9a9a9b94a622848a1d4e8c1ea9", "filename": "gcc/config/we32k/we32k.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fwe32k%2Fwe32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0c8ad2e76232d2011364f507c840b1573249f7/gcc%2Fconfig%2Fwe32k%2Fwe32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwe32k%2Fwe32k.h?ref=4e0c8ad2e76232d2011364f507c840b1573249f7", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  AT&T we32000 version.\n-   Copyright (C) 1991, 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n    Contributed by John Wehle (john@feith1.uucp)\n \n This file is part of GNU CC.\n@@ -770,11 +770,9 @@ enum reg_class { NO_REGS, GENERAL_REGS,\n     fputs (\"\\n\", FILE);\t\t\t\\\n   } while (0)\n \n-/* This is how to output a reference to a user-level label named NAME.\n-   `assemble_name' uses this.  */\n+/* The prefix to add to user-visible assembler symbols. */\n \n-#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n-  fprintf (FILE, \"%s\", NAME)\n+#define USER_LABEL_PREFIX \"\"\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */"}]}