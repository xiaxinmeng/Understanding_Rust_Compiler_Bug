{"sha": "6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFkMWJmMTg0YjhjNjhiZTc1ZGExNTljZGZkYjdjMjVjY2FmMDVhMg==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2018-06-07T22:57:07Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2018-06-07T22:57:07Z"}, "message": "vsx.md (vextract_fp_from_shorth, [...]): Add BE support.\n\ngcc/ChangeLog:\n\n2018-06-07  Carl Love  <cel@us.ibm.com>\n\n\t* gcc/config/rs6000/vsx.md (vextract_fp_from_shorth,\n\tvextract_fp_from_shortl): Add BE support.\n\ngcc/testsuite/ChangeLog:\n\n2018-06-07  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/builtins-3-p9-runnable.c: Add debug print\n\tstatements.\n\nFrom-SVN: r261299", "tree": {"sha": "b8ea6812e42911ff2cb6663eb22e94917af48c64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8ea6812e42911ff2cb6663eb22e94917af48c64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07e2ef97f93fe04665d414dd2993e859a2e2b980", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07e2ef97f93fe04665d414dd2993e859a2e2b980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07e2ef97f93fe04665d414dd2993e859a2e2b980"}], "stats": {"total": 64, "additions": 56, "deletions": 8}, "files": [{"sha": "e85b742357683a1b1efde734ec63f0c283073e88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2", "patch": "@@ -1,3 +1,8 @@\n+2018-06-07  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc/config/rs6000/vsx.md (vextract_fp_from_shorth,\n+\tvextract_fp_from_shortl): Add BE support.\n+\n 2018-06-07  Paul Koning  <ni1d@arrl.net>\n \n \t* compare-elim.c (try_merge_compare): Don't merge compare if"}, {"sha": "a528ef2e8a039e7296f7bd711b50ddaca326e1cc", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2", "patch": "@@ -5214,20 +5214,25 @@\n    UNSPEC_VSX_VEXTRACT_FP_FROM_SHORTH))]\n   \"TARGET_P9_VECTOR\"\n {\n-  int vals[16] = {15, 14, 0, 0, 13, 12, 0, 0, 11, 10, 0, 0, 9, 8, 0, 0};\n   int i;\n+  int vals_le[16] = {15, 14, 0, 0, 13, 12, 0, 0, 11, 10, 0, 0, 9, 8, 0, 0};\n+  int vals_be[16] = {7, 6, 0, 0, 5, 4, 0, 0, 3, 2, 0, 0, 1, 0, 0, 0};\n \n   rtx rvals[16];\n   rtx mask = gen_reg_rtx (V16QImode);\n   rtx tmp = gen_reg_rtx (V16QImode);\n   rtvec v;\n \n   for (i = 0; i < 16; i++)\n-    rvals[i] = GEN_INT (vals[i]);\n+    if (!BYTES_BIG_ENDIAN)\n+      rvals[i] = GEN_INT (vals_le[i]);\n+    else\n+      rvals[i] = GEN_INT (vals_be[i]);\n \n   /* xvcvhpsp - vector convert F16 to vector F32 requires the four F16\n      inputs in half words 1,3,5,7 (IBM numbering).  Use xxperm to move\n-     src half words 0,1,2,3 for the conversion instruction.  */\n+     src half words 0,1,2,3 (LE), src half words 4,5,6,7 (BE) for the\n+     conversion instruction.  */\n   v = gen_rtvec_v (16, rvals);\n   emit_insn (gen_vec_initv16qiqi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n   emit_insn (gen_altivec_vperm_v8hiv16qi (tmp, operands[1],\n@@ -5244,19 +5249,25 @@\n \tUNSPEC_VSX_VEXTRACT_FP_FROM_SHORTL))]\n   \"TARGET_P9_VECTOR\"\n {\n-  int vals[16] = {7, 6, 0, 0, 5, 4, 0, 0, 3, 2, 0, 0, 1, 0, 0, 0};\n+  int vals_le[16] = {7, 6, 0, 0, 5, 4, 0, 0, 3, 2, 0, 0, 1, 0, 0, 0};\n+  int vals_be[16] = {15, 14, 0, 0, 13, 12, 0, 0, 11, 10, 0, 0, 9, 8, 0, 0};\n+\n   int i;\n   rtx rvals[16];\n   rtx mask = gen_reg_rtx (V16QImode);\n   rtx tmp = gen_reg_rtx (V16QImode);\n   rtvec v;\n \n   for (i = 0; i < 16; i++)\n-    rvals[i] = GEN_INT (vals[i]);\n+    if (!BYTES_BIG_ENDIAN)\n+      rvals[i] = GEN_INT (vals_le[i]);\n+    else\n+      rvals[i] = GEN_INT (vals_be[i]);\n \n   /* xvcvhpsp - vector convert F16 to vector F32 requires the four F16\n      inputs in half words 1,3,5,7 (IBM numbering).  Use xxperm to move\n-     src half words 4,5,6,7 for the conversion instruction.  */\n+     src half words 4,5,6,7 (LE), src half words 0,1,2,3 (BE) for the\n+     conversion instruction.  */\n   v = gen_rtvec_v (16, rvals);\n   emit_insn (gen_vec_initv16qiqi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n   emit_insn (gen_altivec_vperm_v8hiv16qi (tmp, operands[1],"}, {"sha": "ebd9880ac0102ddb58bb770f82b980a7c2cd241c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2", "patch": "@@ -1,3 +1,8 @@\n+2018-06-07  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/builtins-3-p9-runnable.c: Add debug print\n+\tstatements.\n+\n 2018-06-07  Carl Love  <cel@us.ibm.com>\n \n         * gcc.target/powerpc/vsu/vec-cntlz-lsbb-2.c (dg-error): Update expected"}, {"sha": "3197a5076e0e460009ee142a77cc1074bbbcf57e", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-p9-runnable.c", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p9-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p9-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p9-runnable.c?ref=6ad1bf184b8c68be75da159cdfdb7c25ccaf05a2", "patch": "@@ -2,6 +2,10 @@\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n /* { dg-options \"-mcpu=power9 -O2\" } */\n \n+#ifdef DEBUG\n+#include <stdio.h>\n+#endif\n+\n #include <altivec.h> // vector\n \n void abort (void);\n@@ -16,10 +20,26 @@ int main() {\n                                    0B000000000000000, 0B0100100001000000,\n                                    0B011111000000000, 0B0011100000000000,\n                                    0B011110100000000, 0B1011010000000000};\n-   \n+\n+#ifdef DEBUG\n+   printf (\"Claim, source data is 8 16-bit floats:\\n\");\n+   printf (\"   {1.0, -2.0, 0.0, 8.5, 1.5, 0.5, 1.25, -0.25}\\n\");\n+   printf (\"vusha = (vector unsigned short){0B011110000000000, 0B1100000000000000,\\n\");\n+   printf (\"                                0B000000000000000, 0B0100100001000000,\\n\");\n+   printf (\"                                0B011111000000000, 0B0011100000000000,\\n\");\n+   printf (\"                                0B011110100000000, 0B1011010000000000};\\n\\n\");\n+#endif\n+\n    vfexpt = (vector float){1.0, -2.0, 0.0, 8.5};\n    vfr = vec_extract_fp_from_shorth(vusha);\n \n+#ifdef DEBUG\n+   printf (\"vec_extract_fp_from_shorth\\n\");\n+   for (i=0; i<4; i++)\n+     printf(\"result[%d] = %f; expected[%d] = %f\\n\",\n+\t    i, vfr[i], i, vfexpt[i]);\n+#endif\n+\n    for (i=0; i<4; i++) {\n       if (vfr[i] != vfexpt[i])\n          abort();\n@@ -28,7 +48,14 @@ int main() {\n    vfexpt = (vector float){1.5, 0.5, 1.25, -0.25};\n    vfr = vec_extract_fp_from_shortl(vusha);\n \n-   for (i=0; i<4; i++) {\n+#ifdef DEBUG\n+   printf (\"\\nvec_extract_fp_from_shortl\\n\");\n+   for (i=0; i<4; i++)\n+     printf(\"result[%d] = %f; expected[%d] = %f\\n\",\n+\t    i, vfr[i], i, vfexpt[i]);\n+#endif\n+\n+    for (i=0; i<4; i++) {\n       if (vfr[i] != vfexpt[i])\n          abort();\n    }"}]}