{"sha": "20929c7f42580c832d6bc0b2010e8e7ee70359b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA5MjljN2Y0MjU4MGM4MzJkNmJjMGIyMDEwZThlN2VlNzAzNTliNg==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@libero.it", "date": "2003-06-30T19:07:32Z"}, "committer": {"name": "Wolfgang Bangerth", "email": "bangerth@gcc.gnu.org", "date": "2003-06-30T19:07:32Z"}, "message": "pt.c (value_dependent_expression_p): Cast expressions are value-dependent also if...\n\n2003-06-30  Giovanni Bajo  <giovannibajo@libero.it>\n\n        * pt.c (value_dependent_expression_p): Cast expressions are\n        value-dependent also if their operand is value-dependent itself.\n\nFrom-SVN: r68728", "tree": {"sha": "d75d608aa14435ea7d1ca7fef9c5af913db4d4c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d75d608aa14435ea7d1ca7fef9c5af913db4d4c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20929c7f42580c832d6bc0b2010e8e7ee70359b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20929c7f42580c832d6bc0b2010e8e7ee70359b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20929c7f42580c832d6bc0b2010e8e7ee70359b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20929c7f42580c832d6bc0b2010e8e7ee70359b6/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8bee204f6b5c5d6cee07c631453f0cb503b3caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8bee204f6b5c5d6cee07c631453f0cb503b3caf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8bee204f6b5c5d6cee07c631453f0cb503b3caf"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "2d80847c54938bf3b2858e1870c52248c07698b4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20929c7f42580c832d6bc0b2010e8e7ee70359b6/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20929c7f42580c832d6bc0b2010e8e7ee70359b6/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=20929c7f42580c832d6bc0b2010e8e7ee70359b6", "patch": "@@ -11379,7 +11379,8 @@ dependent_type_p (tree type)\n   return TYPE_DEPENDENT_P (type);\n }\n \n-/* Returns TRUE if the EXPRESSION is value-dependent.  */\n+/* Returns TRUE if the EXPRESSION is value-dependent, in the sense of\n+   [temp.dep.constexpr] */\n \n bool\n value_dependent_expression_p (tree expression)\n@@ -11406,13 +11407,15 @@ value_dependent_expression_p (tree expression)\n       && value_dependent_expression_p (DECL_INITIAL (expression)))\n     return true;\n   /* These expressions are value-dependent if the type to which the\n-     cast occurs is dependent.  */\n+     cast occurs is dependent or the expression being casted is\n+     value-dependent.  */\n   if ((TREE_CODE (expression) == DYNAMIC_CAST_EXPR\n        || TREE_CODE (expression) == STATIC_CAST_EXPR\n        || TREE_CODE (expression) == CONST_CAST_EXPR\n        || TREE_CODE (expression) == REINTERPRET_CAST_EXPR\n        || TREE_CODE (expression) == CAST_EXPR)\n-      && dependent_type_p (TREE_TYPE (expression)))\n+      && (dependent_type_p (TREE_TYPE (expression))\n+   || value_dependent_expression_p (TREE_OPERAND (expression, 0))))\n     return true;\n   /* A `sizeof' expression where the sizeof operand is a type is\n      value-dependent if the type is dependent.  If the type was not"}]}