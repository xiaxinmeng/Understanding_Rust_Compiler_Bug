{"sha": "4bcc3b5cc87505d13cda82846db2e223a9b41f79", "node_id": "C_kwDOANBUbNoAKDRiY2MzYjVjYzg3NTA1ZDEzY2RhODI4NDZkYjJlMjIzYTliNDFmNzk", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2023-03-14T17:41:06Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2023-03-14T17:41:06Z"}, "message": "i386: Use movss to implement V2SImode VEC_PERM.\n\nPerform V2SI vector permutation in the same way as existing V2SF for\nTARGET_MMX_WITH_SSE targets. The testcase:\n\ntypedef unsigned int v2si __attribute__((vector_size(8)));\nv2si foo(v2si x, v2si y) { return (v2si){y[0], x[1]}; }\n\nis currently compiled to (-O2):\n\nfoo:\n\tmovdqa  %xmm0, %xmm2\n\tmovdqa  %xmm1, %xmm0\n\tpshufd  $0xe5, %xmm2, %xmm2\n\tpunpckldq %xmm2, %xmm0\n\tret\n\nand with the patched compiler:\n\nfoo:\n\tmovss   %xmm1, %xmm0\n\tret\n\nThe functionality is already tested in gcc.target/i386/vperm-v2si.c\n\ngcc/ChangeLog:\n\n\t* config/i386/i386-expand.cc (expand_vec_perm_movs):\n\tHandle V2SImode for TARGET_MMX_WITH_SSE.\n\t* config/i386/mmx.md (*mmx_movss_<mode>): Rename from *mmx_movss\n\tusing V2FI mode iterator to handle both V2SI and V2SF modes.", "tree": {"sha": "eaf8e52311c230948c2f014b3ca3519e1e400815", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaf8e52311c230948c2f014b3ca3519e1e400815"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bcc3b5cc87505d13cda82846db2e223a9b41f79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcc3b5cc87505d13cda82846db2e223a9b41f79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bcc3b5cc87505d13cda82846db2e223a9b41f79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcc3b5cc87505d13cda82846db2e223a9b41f79/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f22d1c83e74c41116300bebac2e4c492c90b03d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f22d1c83e74c41116300bebac2e4c492c90b03d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f22d1c83e74c41116300bebac2e4c492c90b03d"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "6cc8bd5c80c5bd37b781225ea0cfbe70080a87d4", "filename": "gcc/config/i386/i386-expand.cc", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcc3b5cc87505d13cda82846db2e223a9b41f79/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcc3b5cc87505d13cda82846db2e223a9b41f79/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.cc?ref=4bcc3b5cc87505d13cda82846db2e223a9b41f79", "patch": "@@ -18949,11 +18949,9 @@ expand_vec_perm_movs (struct expand_vec_perm_d *d)\n   if (d->one_operand_p)\n     return false;\n \n-  if (!(TARGET_SSE && vmode == V4SFmode)\n-      && !(TARGET_SSE && vmode == V4SImode)\n-      && !(TARGET_MMX_WITH_SSE && vmode == V2SFmode)\n-      && !(TARGET_SSE2 && vmode == V2DFmode)\n-      && !(TARGET_SSE2 && vmode == V2DImode))\n+  if (!(TARGET_SSE && (vmode == V4SFmode || vmode == V4SImode))\n+      && !(TARGET_MMX_WITH_SSE && (vmode == V2SFmode || vmode == V2SImode))\n+      && !(TARGET_SSE2 && (vmode == V2DFmode || vmode == V2DImode)))\n     return false;\n \n   /* Only the first element is changed.  */"}, {"sha": "f9c66115f815c950d5327b10abc5e35b2b578128", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bcc3b5cc87505d13cda82846db2e223a9b41f79/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bcc3b5cc87505d13cda82846db2e223a9b41f79/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=4bcc3b5cc87505d13cda82846db2e223a9b41f79", "patch": "@@ -1518,11 +1518,11 @@\n    (set_attr \"prefix\" \"*,maybe_vex,orig\")\n    (set_attr \"mode\" \"DI,V4SF,V4SF\")])\n \n-(define_insn \"*mmx_movss\"\n-  [(set (match_operand:V2SF 0 \"register_operand\"   \"=x,v\")\n-\t(vec_merge:V2SF\n-\t  (match_operand:V2SF 2 \"register_operand\" \" x,v\")\n-\t  (match_operand:V2SF 1 \"register_operand\" \" 0,v\")\n+(define_insn \"*mmx_movss_<mode>\"\n+  [(set (match_operand:V2FI 0 \"register_operand\"   \"=x,v\")\n+\t(vec_merge:V2FI\n+\t  (match_operand:V2FI 2 \"register_operand\" \" x,v\")\n+\t  (match_operand:V2FI 1 \"register_operand\" \" 0,v\")\n \t  (const_int 1)))]\n   \"TARGET_MMX_WITH_SSE\"\n   \"@"}]}