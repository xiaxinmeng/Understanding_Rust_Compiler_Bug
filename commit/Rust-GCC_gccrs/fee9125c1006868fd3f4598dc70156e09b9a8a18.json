{"sha": "fee9125c1006868fd3f4598dc70156e09b9a8a18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVlOTEyNWMxMDA2ODY4ZmQzZjQ1OThkYzcwMTU2ZTA5YjlhOGExOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-05-28T07:34:48Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-05-28T07:34:48Z"}, "message": "putenv.c: Include ansidecl.h to define `const'.\n\n        * putenv.c: Include ansidecl.h to define `const'.\n        * setenv.c: Likewise.\n\nFrom-SVN: r27221", "tree": {"sha": "c4fecfe358ac386bb87127e046400b8dce0889b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4fecfe358ac386bb87127e046400b8dce0889b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fee9125c1006868fd3f4598dc70156e09b9a8a18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee9125c1006868fd3f4598dc70156e09b9a8a18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fee9125c1006868fd3f4598dc70156e09b9a8a18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee9125c1006868fd3f4598dc70156e09b9a8a18/comments", "author": null, "committer": null, "parents": [{"sha": "77b7d851874ee93b522a27847b393856b7e9cd6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b7d851874ee93b522a27847b393856b7e9cd6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77b7d851874ee93b522a27847b393856b7e9cd6c"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "cb77e8a5c9537dd24e58b505f3f6af442b30bd02", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee9125c1006868fd3f4598dc70156e09b9a8a18/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee9125c1006868fd3f4598dc70156e09b9a8a18/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=fee9125c1006868fd3f4598dc70156e09b9a8a18", "patch": "@@ -1,3 +1,8 @@\n+1999-05-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* putenv.c: Include ansidecl.h to define `const'.\n+\t* setenv.c: Likewise.\n+\n Wed May 26 03:58:20 1999  \"Melissa O'Neill\" <oneill@cs.sfu.ca>\n \n \t* Makefile.in (CFILES): Add putenv.c and setenv.c."}, {"sha": "9d5692222cf1936b90a52e908a1dc8d0da8b6754", "filename": "libiberty/putenv.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee9125c1006868fd3f4598dc70156e09b9a8a18/libiberty%2Fputenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee9125c1006868fd3f4598dc70156e09b9a8a18/libiberty%2Fputenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fputenv.c?ref=fee9125c1006868fd3f4598dc70156e09b9a8a18", "patch": "@@ -24,6 +24,8 @@\n # include <config.h>\n #endif\n \n+#include \"ansidecl.h\"\n+\n #if HAVE_STDLIB_H\n # include <stdlib.h>\n #endif\n@@ -55,7 +57,7 @@ putenv (string)\n \n   if (name_end)\n     {\n-      char *name = alloca (name_end - string + 1);\n+      char *name = (char *) alloca (name_end - string + 1);\n       memcpy (name, string, name_end - string);\n       name[name_end - string] = '\\0';\n       return setenv (name, name_end + 1, 1);"}, {"sha": "8a039d18fa8d9899d0a53c524616650fefc805c7", "filename": "libiberty/setenv.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee9125c1006868fd3f4598dc70156e09b9a8a18/libiberty%2Fsetenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee9125c1006868fd3f4598dc70156e09b9a8a18/libiberty%2Fsetenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsetenv.c?ref=fee9125c1006868fd3f4598dc70156e09b9a8a18", "patch": "@@ -20,6 +20,8 @@\n # include <config.h>\n #endif\n \n+#include \"ansidecl.h\"\n+\n #include <errno.h>\n #if !defined(errno) && !defined(HAVE_ERRNO_DECL)\n extern int errno;"}]}