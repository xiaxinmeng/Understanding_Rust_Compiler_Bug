{"sha": "bf7ad40253ca16f5998251999ac98e06356cef74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY3YWQ0MDI1M2NhMTZmNTk5ODI1MTk5OWFjOThlMDYzNTZjZWY3NA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-04-16T19:38:27Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-04-16T19:38:27Z"}, "message": "interpret.cc (_Jv_InterpMethod::run): Update _Jv_AllocObject arguments to match new signature.\n\n2004-04-16  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* interpret.cc (_Jv_InterpMethod::run): Update _Jv_AllocObject\n\targuments to match new signature. Remove FIXME comments.\n\nFrom-SVN: r80766", "tree": {"sha": "51d77fd9d5b222a735e5af8ac9d4676559dc4310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51d77fd9d5b222a735e5af8ac9d4676559dc4310"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf7ad40253ca16f5998251999ac98e06356cef74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf7ad40253ca16f5998251999ac98e06356cef74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf7ad40253ca16f5998251999ac98e06356cef74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf7ad40253ca16f5998251999ac98e06356cef74/comments", "author": null, "committer": null, "parents": [{"sha": "390e4c0dbe9b5e6854641701c3b0443526130d3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/390e4c0dbe9b5e6854641701c3b0443526130d3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/390e4c0dbe9b5e6854641701c3b0443526130d3b"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "d425a4b268e6beefea597bc8e9cd4436e744ea0c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7ad40253ca16f5998251999ac98e06356cef74/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7ad40253ca16f5998251999ac98e06356cef74/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bf7ad40253ca16f5998251999ac98e06356cef74", "patch": "@@ -1,3 +1,8 @@\n+2004-04-16  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* interpret.cc (_Jv_InterpMethod::run): Update _Jv_AllocObject\n+\targuments to match new signature. Remove FIXME comments.\n+\n 2004-04-09  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GtkPanelPeer.java (connectSignals):\n@@ -259,6 +264,7 @@\n \t* java/applet/Applet.java (getPreferredSize): New method.\n \t(getMinimumSize): New method.\n \n+>>>>>>> 1.2732\n 2004-04-15  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* prims.cc (_Jv_AllocObject): Remove `size' argument."}, {"sha": "61ff9fb0122a9d1b84dbf518a6315ff76476d998", "filename": "libjava/interpret.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7ad40253ca16f5998251999ac98e06356cef74/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7ad40253ca16f5998251999ac98e06356cef74/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=bf7ad40253ca16f5998251999ac98e06356cef74", "patch": "@@ -2917,11 +2917,7 @@ _Jv_InterpMethod::run (void *retp, ffi_raw *args)\n       {\n \tint index = GET2U ();\n \tjclass klass = (_Jv_ResolvePoolEntry (defining_class, index)).clazz;\n-\t// We initialize here because otherwise `size_in_bytes' may\n-\t// not be set correctly, leading us to pass `0' as the size.\n-\t// FIXME: fix in the allocator?  There is a PR for this.\n-\t_Jv_InitClass (klass);\n-\tjobject res = _Jv_AllocObject (klass, klass->size_in_bytes);\n+\tjobject res = _Jv_AllocObject (klass);\n \tPUSHA (res);\n \n #ifdef DIRECT_THREADED\n@@ -2935,7 +2931,7 @@ _Jv_InterpMethod::run (void *retp, ffi_raw *args)\n     new_resolved:\n       {\n \tjclass klass = (jclass) AVAL ();\n-\tjobject res = _Jv_AllocObject (klass, klass->size_in_bytes);\n+\tjobject res = _Jv_AllocObject (klass);\n \tPUSHA (res);\n       }\n       NEXT_INSN;"}]}