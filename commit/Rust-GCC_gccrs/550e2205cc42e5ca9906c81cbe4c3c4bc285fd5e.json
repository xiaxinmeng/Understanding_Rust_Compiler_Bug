{"sha": "550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUwZTIyMDVjYzQyZTVjYTk5MDZjODFjYmU0YzNjNGJjMjg1ZmQ1ZQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2017-02-13T15:54:50Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2017-02-13T15:54:50Z"}, "message": "[AArch64] Use contains_mem_rtx_p to detect memory sub-rtxes\n\n\t* config/aarch64/aarch64.c (has_memory_op): Delete.\n\t(aarch64_madd_needs_nop): Use contains_mem_rtx_p instead of\n\thas_memory_op.\n\nFrom-SVN: r245391", "tree": {"sha": "6cd19ba68944356e2066deca2e4c8f94367804be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cd19ba68944356e2066deca2e4c8f94367804be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b7716c9a7f94c00737a0c6f0a149dcae3b216b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7716c9a7f94c00737a0c6f0a149dcae3b216b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7716c9a7f94c00737a0c6f0a149dcae3b216b5"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "098b1e61247871e62df6f79e65938eb2e0dc7dc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e", "patch": "@@ -1,3 +1,9 @@\n+2017-02-13  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (has_memory_op): Delete.\n+\t(aarch64_madd_needs_nop): Use contains_mem_rtx_p instead of\n+\thas_memory_op.\n+\n 2017-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/79388\n@@ -6,7 +12,7 @@\n \tcorresponding dest has last value recorded, invalidate that last\n \tvalue.\n \n-2016-02-13  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+2017-02-13  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c (arm_print_tune_info): Use ASM_COMMENT_START instead\n \tof explicit '@'.  Add missing assembly comment marker on branch costs"}, {"sha": "4be3131275c88039f8696c9d73b50e88b5cf92a0", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=550e2205cc42e5ca9906c81cbe4c3c4bc285fd5e", "patch": "@@ -10912,21 +10912,6 @@ aarch64_mangle_type (const_tree type)\n   return NULL;\n }\n \n-\n-/* Return true if the rtx_insn contains a MEM RTX somewhere\n-   in it.  */\n-\n-static bool\n-has_memory_op (rtx_insn *mem_insn)\n-{\n-  subrtx_iterator::array_type array;\n-  FOR_EACH_SUBRTX (iter, array, PATTERN (mem_insn), ALL)\n-    if (MEM_P (*iter))\n-      return true;\n-\n-  return false;\n-}\n-\n /* Find the first rtx_insn before insn that will generate an assembly\n    instruction.  */\n \n@@ -11019,7 +11004,7 @@ aarch64_madd_needs_nop (rtx_insn* insn)\n      Restore recog state to INSN to avoid state corruption.  */\n   extract_constrain_insn_cached (insn);\n \n-  if (!prev || !has_memory_op (prev))\n+  if (!prev || !contains_mem_rtx_p (PATTERN (prev)))\n     return false;\n \n   body = single_set (prev);"}]}