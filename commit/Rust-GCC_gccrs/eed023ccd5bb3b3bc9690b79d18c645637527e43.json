{"sha": "eed023ccd5bb3b3bc9690b79d18c645637527e43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVkMDIzY2NkNWJiM2IzYmM5NjkwYjc5ZDE4YzY0NTYzNzUyN2U0Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-09-09T06:06:42Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-09-09T06:06:42Z"}, "message": "Fix paths\n\nFrom-SVN: r164048", "tree": {"sha": "a3db8602c8595005db66be6a660968112fb9ac0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3db8602c8595005db66be6a660968112fb9ac0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eed023ccd5bb3b3bc9690b79d18c645637527e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eed023ccd5bb3b3bc9690b79d18c645637527e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eed023ccd5bb3b3bc9690b79d18c645637527e43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eed023ccd5bb3b3bc9690b79d18c645637527e43/comments", "author": null, "committer": null, "parents": [{"sha": "1a11507ac951cded2dccd51fded2b41abf4376d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a11507ac951cded2dccd51fded2b41abf4376d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a11507ac951cded2dccd51fded2b41abf4376d1"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "5e80ee9e8bc70d76becc138f1b756188d7e504bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eed023ccd5bb3b3bc9690b79d18c645637527e43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eed023ccd5bb3b3bc9690b79d18c645637527e43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eed023ccd5bb3b3bc9690b79d18c645637527e43", "patch": "@@ -191,7 +191,7 @@\n \tPR target/36502\n \tPR target/42313\n \tPR target/44651\n-\t* gcc/config/i386/darwin.h (STACK_BOUNDARY): Redefine as 128 for\n+\t* config/i386/darwin.h (STACK_BOUNDARY): Redefine as 128 for\n \tprofiling or 64-bit MS_ABI and as BITS_PER_WORD otherwise.\n \t(PREFERRED_STACK_BOUNDARY): Replace STACK_BOUNDARY with 128 in\n \tMAX macro.\n@@ -2718,7 +2718,7 @@\n \n 2010-08-13  Jack Howarth <howarth@bromo.med.uc.edu>\n \n-\t* gcc/configure.ac: Enable -fomit-frame-pointer on darwin\n+\t* configure.ac: Enable -fomit-frame-pointer on darwin\n \twhich support dwarf2.\n \t* config/i386/i386.c (override_options): Same.\n \n@@ -9374,7 +9374,7 @@\n \t targetm.asm_file_start_file_directive\n \t* dwarf2out.c, opts.c, tree-vect-data-refs.c, except.c: Likewise.\n \t* varasm.c, config/alpha/alpha.c, config/cris/cris.c: Likewise.\n-\t* gcc/config/spu/spu.c, config/ia64/ia64.c: Rename target macros:\n+\t* config/spu/spu.c, config/ia64/ia64.c: Rename target macros:\n \tTARGET_VECTOR_ALIGNMENT_REACHABLE ->\n \t  TARGET_VECTORIZE_VECTOR_ALIGNMENT_REACHABLE\n \tTARGET_SUPPORT_VECTOR_MISALIGNMENT ->\n@@ -12784,10 +12784,10 @@\n \tPR c++/44188\n \t* c-common.c (is_typedef_decl): Move this definition ...\n \t* tree.c (is_typedef_decl): ... here.\n-\t(typdef_variant_p): Move definition here from gcc/cp/tree.c.\n+\t(typdef_variant_p): Move definition here from cp/tree.c.\n \t* c-common.h (is_typedef_decl): Move this declaration ...\n \t* tree.h (is_typedef_decl): ... here.\n-\t(typedef_variant_p): Move declaration here from gcc/cp/cp-tree.h\n+\t(typedef_variant_p): Move declaration here from cp/cp-tree.h\n \t* dwarf2out.c (is_naming_typedef_decl): New function.\n \t(gen_tagged_type_die): Split out of ...\n \t(gen_type_die_with_usage): ... this function. When an anonymous\n@@ -14406,12 +14406,12 @@\n \tdefinition ...\n \t* tree.c (is_typedef_decl): ... here.\n \t(typdef_variant_p): Revert the moving of this  definition\n-\there from gcc/cp/tree.c.\n+\there from cp/tree.c.\n \t* c-common.h (is_typedef_decl): Revert the moving of this\n \tdeclaration ...\n \t* tree.h (is_typedef_decl): ... here.\n \t(typedef_variant_p): Revert the moving of this  declaration here\n-\tfrom gcc/cp/cp-tree.h\n+\tfrom cp/cp-tree.h\n \t* dwarf2out.c (is_naming_typedef_decl): Revert this new function.\n \t(gen_tagged_type_die): Revert the splitting out of ...\n \t(gen_type_die_with_usage): ... this function. Revert the anonymous\n@@ -14544,10 +14544,10 @@\n \tPR c++/44188\n \t* c-common.c (is_typedef_decl): Move this definition ...\n \t* tree.c (is_typedef_decl): ... here.\n-\t(typdef_variant_p): Move definition here from gcc/cp/tree.c.\n+\t(typdef_variant_p): Move definition here from cp/tree.c.\n \t* c-common.h (is_typedef_decl): Move this declaration ...\n \t* tree.h (is_typedef_decl): ... here.\n-\t(typedef_variant_p): Move declaration here from gcc/cp/cp-tree.h\n+\t(typedef_variant_p): Move declaration here from cp/cp-tree.h\n \t* dwarf2out.c (is_naming_typedef_decl): New function.\n \t(gen_tagged_type_die): Split out of ...\n \t(gen_type_die_with_usage): ... this function. When an anonymous\n@@ -18703,9 +18703,9 @@\n \twarn if older binutils found.\n \t(LTO_BINARY_READER): New AC_SUBST'd variable.\n \t(LTO_USE_LIBELF): Likewise.\n-\t* gcc/config.gcc (lto_binary_reader): New target-specific configure\n+\t* config.gcc (lto_binary_reader): New target-specific configure\n \tvariable.\n-\t* gcc/Makefile.in (LTO_BINARY_READER): Import AC_SUBST'd autoconf var.\n+\t* Makefile.in (LTO_BINARY_READER): Import AC_SUBST'd autoconf var.\n \t(LTO_USE_LIBELF): Likewise.\n \t* configure: Regenerate.\n \n@@ -18737,10 +18737,10 @@\n 2010-04-26  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \tPR 43715\n-\t* gcc/configure.ac: Use \"$gcc_cv_nm -g\" on darwin\n+\t* configure.ac: Use \"$gcc_cv_nm -g\" on darwin\n \tinstead of \"$gcc_cv_objdump -T\".\n \tUse \"-undefined dynamic_lookup\" on darwin.\n-\t* gcc/configure: Regenerate.\n+\t* configure: Regenerate.\n \n 2010-04-26  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -19737,11 +19737,11 @@\n \t(MASK_ACCUMULATE_OUTGOING_ARGS) Define and Set.\n \t(rounded_frame_size): Adjust size with outgoing_args_size.\n \t(sh_set_return_address): Must return from stack pointer.\n-\t* gcc/config/sh/sh.h (CAN_DEBUG_WITHOUT_FP): Define.\n+\t* config/sh/sh.h (CAN_DEBUG_WITHOUT_FP): Define.\n \t(SUBTARGET_FRAME_POINTER_REQUIRED): Define.\n \t(ACCUMULATE_OUTGOING_ARGS): Define.\n \t* doc/invoke.texi (maccumulate-outgoing-args): Document for SH.\n-\t* gcc/config/sh/sh.opt (maccumulate-outgoing-args): New option.\n+\t* config/sh/sh.opt (maccumulate-outgoing-args): New option.\n \n 2010-04-15  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n@@ -20142,8 +20142,8 @@\n 2010-04-13  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \t    Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n-\t* gcc/config/s390/s390.md: Replace TARGET_64BIT with TARGET_ZARCH.\n-\t* gcc/config/s390/s390.c: Replace UNTIS_PER_WORD with\n+\t* config/s390/s390.md: Replace TARGET_64BIT with TARGET_ZARCH.\n+\t* config/s390/s390.c: Replace UNTIS_PER_WORD with\n \tUNITS_PER_LONG where it is ABI relevant.\n \t(s390_return_addr_rtx): Likewise.\n \t(s390_back_chain_rtx): Likewise.\n@@ -20174,9 +20174,9 @@\n \t(HARD_REGNO_CALL_PART_CLOBBERED): New macro.\n \t(DWARF_CIE_DATA_ALIGNMENT): New macro.\n \t(s390_expand_setmem): Remove unused variable src_addr.\n-\t* gcc/longlong.h: Make smul_ppmm and sdiv_qrnnd inline asms to\n+\t* longlong.h: Make smul_ppmm and sdiv_qrnnd inline asms to\n \tdeal with 64 bit registers.\n-\t* gcc/config/s390/s390.h: Define __zarch__ predefined macro.\n+\t* config/s390/s390.h: Define __zarch__ predefined macro.\n \tReplace UNITS_PER_WORD with UNITS_PER_LONG where it is ABI relevant.\n \t(UNITS_PER_LONG): New macro.\n \t* libjava/include/s390-signal.h: Define extended ucontext\n@@ -21958,7 +21958,7 @@\n \tfixinc/Makefile*, intl/Makefile.*.\n \t* doc/makefile.texi: Fixed markup. Abstract from version\n \tcontrol system used.\n-\t(Makefile): Removed obsolete gcc/java/parse.y example.\n+\t(Makefile): Removed obsolete java/parse.y example.\n \t* doc/sourcebuild.texi: Likewise.\n \t(Top Level): Added config, gnattools, libdecnumber, libgcc,\n \tlibgomp, libssp.  Removed fastjar.\n@@ -22487,7 +22487,7 @@\n 2010-03-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR middle-end/42431\n-\t* gcc/config/rs6000/rs6000.c (rs6000_emit_move): Delete band-aid\n+\t* config/rs6000/rs6000.c (rs6000_emit_move): Delete band-aid\n \tcode added to work around reload clobbering CONST insns.\n \n 2010-03-12  Jakub Jelinek  <jakub@redhat.com>"}]}