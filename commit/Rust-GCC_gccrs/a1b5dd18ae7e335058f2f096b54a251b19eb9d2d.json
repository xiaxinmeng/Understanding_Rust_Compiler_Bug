{"sha": "a1b5dd18ae7e335058f2f096b54a251b19eb9d2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFiNWRkMThhZTdlMzM1MDU4ZjJmMDk2YjU0YTI1MWIxOWViOWQyZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-11-13T09:06:54Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-11-13T09:06:54Z"}, "message": "GCOV: remove typedef of coverage_t.\n\n2017-11-13  Martin Liska  <mliska@suse.cz>\n\n\t* gcov.c (struct coverage_info): Remove typedef of coverage_t.\n\t(struct source_info): Likewise.\n\t(add_branch_counts): Likewise.\n\t(add_line_counts): Likewise.\n\t(function_summary): Likewise.\n\t(output_intermediate_line): Likewise.\n\t(generate_results): Likewise.\n\nFrom-SVN: r254678", "tree": {"sha": "fc2466b0bc4f467d290b3489fc08ae8d4e8691b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc2466b0bc4f467d290b3489fc08ae8d4e8691b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1b5dd18ae7e335058f2f096b54a251b19eb9d2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b5dd18ae7e335058f2f096b54a251b19eb9d2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1b5dd18ae7e335058f2f096b54a251b19eb9d2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b5dd18ae7e335058f2f096b54a251b19eb9d2d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bea002e923bdea212f928b3b9f5b9ff0c3941fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bea002e923bdea212f928b3b9f5b9ff0c3941fd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bea002e923bdea212f928b3b9f5b9ff0c3941fd9"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "2746cdf5ae89a729bb902280ad6a8f520bbab044", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1b5dd18ae7e335058f2f096b54a251b19eb9d2d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1b5dd18ae7e335058f2f096b54a251b19eb9d2d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1b5dd18ae7e335058f2f096b54a251b19eb9d2d", "patch": "@@ -1,3 +1,13 @@\n+2017-11-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcov.c (struct coverage_info): Remove typedef of coverage_t.\n+\t(struct source_info): Likewise.\n+\t(add_branch_counts): Likewise.\n+\t(add_line_counts): Likewise.\n+\t(function_summary): Likewise.\n+\t(output_intermediate_line): Likewise.\n+\t(generate_results): Likewise.\n+\n 2017-11-13  Martin Liska  <mliska@suse.cz>\n \n \t* gcov.c (struct block_info): Remove typedef for block_t."}, {"sha": "24e6da09fcf3fe7bd6f58cfde2eba31b474bd4d2", "filename": "gcc/gcov.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1b5dd18ae7e335058f2f096b54a251b19eb9d2d/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1b5dd18ae7e335058f2f096b54a251b19eb9d2d/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=a1b5dd18ae7e335058f2f096b54a251b19eb9d2d", "patch": "@@ -302,7 +302,7 @@ struct function_line_start_cmp\n \n /* Describes coverage of a file or function.  */\n \n-typedef struct coverage_info\n+struct coverage_info\n {\n   int lines;\n   int lines_executed;\n@@ -315,7 +315,7 @@ typedef struct coverage_info\n   int calls_executed;\n \n   char *name;\n-} coverage_t;\n+};\n \n /* Describes a file mentioned in the block graph.  Contains an array\n    of line info.  */\n@@ -337,7 +337,7 @@ struct source_info\n   /* Vector of line information.  */\n   vector<line_info> lines;\n \n-  coverage_t coverage;\n+  coverage_info coverage;\n \n   /* Functions in this source file.  These are in ascending line\n      number order.  */\n@@ -544,10 +544,10 @@ static void read_graph_file (void);\n static int read_count_file (void);\n static void solve_flow_graph (function_info *);\n static void find_exception_blocks (function_info *);\n-static void add_branch_counts (coverage_t *, const arc_info *);\n-static void add_line_counts (coverage_t *, function_info *);\n+static void add_branch_counts (coverage_info *, const arc_info *);\n+static void add_line_counts (coverage_info *, function_info *);\n static void executed_summary (unsigned, unsigned);\n-static void function_summary (const coverage_t *, const char *);\n+static void function_summary (const coverage_info *, const char *);\n static const char *format_gcov (gcov_type, gcov_type, int);\n static void accumulate_line_counts (source_info *);\n static void output_gcov_file (const char *, source_info *);\n@@ -981,8 +981,8 @@ output_intermediate_line (FILE *f, line_info *line, unsigned line_num)\n \tif (!(*it)->is_unconditional && !(*it)->is_call_non_return)\n \t  {\n \t    const char *branch_type;\n-\t    /* branch:<line_num>,<branch_coverage_type>\n-\t       branch_coverage_type\n+\t    /* branch:<line_num>,<branch_coverage_infoype>\n+\t       branch_coverage_infoype\n \t       : notexec (Branch not executed)\n \t       : taken (Branch executed and taken)\n \t       : nottaken (Branch executed, but not taken)\n@@ -1264,7 +1264,7 @@ generate_results (const char *file_name)\n        it != functions.end (); it++)\n     {\n       function_info *fn = *it;\n-      coverage_t coverage;\n+      coverage_info coverage;\n \n       memset (&coverage, 0, sizeof (coverage));\n       coverage.name = flag_demangled_names ? fn->demangled_name : fn->name;\n@@ -2130,7 +2130,7 @@ find_exception_blocks (function_info *fn)\n /* Increment totals in COVERAGE according to arc ARC.  */\n \n static void\n-add_branch_counts (coverage_t *coverage, const arc_info *arc)\n+add_branch_counts (coverage_info *coverage, const arc_info *arc)\n {\n   if (arc->is_call_non_return)\n     {\n@@ -2242,7 +2242,7 @@ executed_summary (unsigned lines, unsigned executed)\n /* Output summary info for a function or file.  */\n \n static void\n-function_summary (const coverage_t *coverage, const char *title)\n+function_summary (const coverage_info *coverage, const char *title)\n {\n   fnotice (stdout, \"%s '%s'\\n\", title, coverage->name);\n   executed_summary (coverage->lines, coverage->lines_executed);\n@@ -2479,7 +2479,7 @@ mangle_name (char const *base, char *ptr)\n    the appropriate basic block.  */\n \n static void\n-add_line_counts (coverage_t *coverage, function_info *fn)\n+add_line_counts (coverage_info *coverage, function_info *fn)\n {\n   bool has_any_line = false;\n   /* Scan each basic block.  */"}]}