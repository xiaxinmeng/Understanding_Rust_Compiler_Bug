{"sha": "49f60a1a01b7526ca317f18dd0ed87f9ff781f3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlmNjBhMWEwMWI3NTI2Y2EzMTdmMThkZDBlZDg3ZjlmZjc4MWYzYg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-07-26T00:40:50Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-07-26T00:40:50Z"}, "message": "natFileDescriptorPosix.cc (write): Try again on EINTR.\n\n\t* java/io/natFileDescriptorPosix.cc (write): Try again on EINTR.\n\t(write): Likewise.\n\t(read): Likewise.\n\t(read): Likewise.\n\nFrom-SVN: r69807", "tree": {"sha": "9875d1b9bc47a19b0c0f76f44a3bbecae0da6046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9875d1b9bc47a19b0c0f76f44a3bbecae0da6046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49f60a1a01b7526ca317f18dd0ed87f9ff781f3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49f60a1a01b7526ca317f18dd0ed87f9ff781f3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49f60a1a01b7526ca317f18dd0ed87f9ff781f3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49f60a1a01b7526ca317f18dd0ed87f9ff781f3b/comments", "author": null, "committer": null, "parents": [{"sha": "037af9d77b4df0c1330e7fd641d6c97d9dbf2f9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/037af9d77b4df0c1330e7fd641d6c97d9dbf2f9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/037af9d77b4df0c1330e7fd641d6c97d9dbf2f9b"}], "stats": {"total": 67, "additions": 44, "deletions": 23}, "files": [{"sha": "05f433a8837a03f703f52830f035e3cb3b5d18ed", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f60a1a01b7526ca317f18dd0ed87f9ff781f3b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f60a1a01b7526ca317f18dd0ed87f9ff781f3b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=49f60a1a01b7526ca317f18dd0ed87f9ff781f3b", "patch": "@@ -1,3 +1,10 @@\n+2003-07-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/io/natFileDescriptorPosix.cc (write): Try again on EINTR.\n+\t(write): Likewise.\n+\t(read): Likewise.\n+\t(read): Likewise.\n+\n 2003-07-25  Mark Wielaard  <mark@klomp.org>\n \n \t* java/lang/natRuntime.cc (_load): Add library name to"}, {"sha": "e43bb9d113591241b3dfaaa118edc0fc03278648", "filename": "libjava/java/io/natFileDescriptorPosix.cc", "status": "modified", "additions": 37, "deletions": 23, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f60a1a01b7526ca317f18dd0ed87f9ff781f3b/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f60a1a01b7526ca317f18dd0ed87f9ff781f3b/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc?ref=49f60a1a01b7526ca317f18dd0ed87f9ff781f3b", "patch": "@@ -150,7 +150,8 @@ java::io::FileDescriptor::write (jint b)\n \t      iioe->bytesTransferred = r == -1 ? 0 : r;\n \t      throw iioe;\n \t    }\t    \n-\t  throw new IOException (JvNewStringLatin1 (strerror (errno)));\n+\t  if (errno != EINTR)\n+\t    throw new IOException (JvNewStringLatin1 (strerror (errno)));\n \t}\n     }\n   position++;\n@@ -178,7 +179,8 @@ java::io::FileDescriptor::write (jbyteArray b, jint offset, jint len)\n \t      iioe->bytesTransferred = written;\n \t      throw iioe;\n \t    }\n-\t  throw new IOException (JvNewStringLatin1 (strerror (errno)));\n+\t  if (errno != EINTR)\n+\t    throw new IOException (JvNewStringLatin1 (strerror (errno)));\n \t}\n \n       written += r;\n@@ -282,20 +284,26 @@ jint\n java::io::FileDescriptor::read (void)\n {\n   jbyte b;\n-  int r = ::read (fd, &b, 1);\n-  if (r == 0)\n-    return -1;\n-  if (r == -1)\n+  int r;\n+  do\n     {\n-      if (java::lang::Thread::interrupted())\n+      r = ::read (fd, &b, 1);\n+      if (r == 0)\n+\treturn -1;\n+      if (r == -1)\n \t{\n-\t  InterruptedIOException *iioe\n-\t    = new InterruptedIOException (JvNewStringLatin1 (strerror (errno)));\n-\t  iioe->bytesTransferred = r == -1 ? 0 : r;\n-\t  throw iioe;\n+\t  if (java::lang::Thread::interrupted())\n+\t    {\n+\t      InterruptedIOException *iioe\n+\t\t= new InterruptedIOException (JvNewStringLatin1 (strerror (errno)));\n+\t      iioe->bytesTransferred = r == -1 ? 0 : r;\n+\t      throw iioe;\n+\t    }\n+\t  if (errno != EINTR)\n+\t    throw new IOException (JvNewStringLatin1 (strerror (errno)));\n \t}\n-      throw new IOException (JvNewStringLatin1 (strerror (errno)));\n     }\n+  while (r != 1);\n   position++;\n   return b & 0xFF;\n }\n@@ -314,20 +322,26 @@ java::io::FileDescriptor::read (jbyteArray buffer, jint offset, jint count)\n     return 0;\n \n   jbyte *bytes = elements (buffer) + offset;\n-  int r = ::read (fd, bytes, count);\n-  if (r == 0)\n-    return -1;\n-  if (r == -1)\n-    {    \n-      if (java::lang::Thread::interrupted())\n+  int r;\n+  do\n+    {\n+      r = ::read (fd, bytes, count);\n+      if (r == 0)\n+\treturn -1;\n+      if (r == -1)\n \t{\n-\t  InterruptedIOException *iioe\n-\t    = new InterruptedIOException (JvNewStringLatin1 (strerror (errno)));\n-\t  iioe->bytesTransferred = r == -1 ? 0 : r;\n-\t  throw iioe;\n+\t  if (java::lang::Thread::interrupted())\n+\t    {\n+\t      InterruptedIOException *iioe\n+\t\t= new InterruptedIOException (JvNewStringLatin1 (strerror (errno)));\n+\t      iioe->bytesTransferred = r == -1 ? 0 : r;\n+\t      throw iioe;\n+\t    }\n+\t  if (errno != EINTR)\n+\t    throw new IOException (JvNewStringLatin1 (strerror (errno)));\n \t}\n-      throw new IOException (JvNewStringLatin1 (strerror (errno)));\n     }\n+  while (r <= 0);\n   position += r;\n   return r;\n }"}]}