{"sha": "7c1a49fa1b2535dcce600d03887e2c72a463cc2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MxYTQ5ZmExYjI1MzVkY2NlNjAwZDAzODg3ZTJjNzJhNDYzY2MyYw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-12-31T11:20:22Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-12-31T11:20:22Z"}, "message": "re PR fortran/45338 (Failure on interfacing a function passed as an argument as a custom operator)\n\n2010-12-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/45338\n\t* resolve.c (resolve_operator):  Mark function for user-defined\n\toperator as referenced.\n\n2010-12-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/45338\n\t* gfortran.dg/userdef_operator_2.f90:  New test case.\n\nFrom-SVN: r168366", "tree": {"sha": "dce35256c392415d4df903f203fc6983ac3ba369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dce35256c392415d4df903f203fc6983ac3ba369"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c1a49fa1b2535dcce600d03887e2c72a463cc2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c1a49fa1b2535dcce600d03887e2c72a463cc2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c1a49fa1b2535dcce600d03887e2c72a463cc2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c1a49fa1b2535dcce600d03887e2c72a463cc2c/comments", "author": null, "committer": null, "parents": [{"sha": "1da41015bc4dbdd06cc0b94bbacfcfc537b42f25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1da41015bc4dbdd06cc0b94bbacfcfc537b42f25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1da41015bc4dbdd06cc0b94bbacfcfc537b42f25"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "c2103314bef44f0ba86869008c31c109fe82a725", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1a49fa1b2535dcce600d03887e2c72a463cc2c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1a49fa1b2535dcce600d03887e2c72a463cc2c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7c1a49fa1b2535dcce600d03887e2c72a463cc2c", "patch": "@@ -1,3 +1,9 @@\n+2010-12-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/45338\n+\t* resolve.c (resolve_operator):  Mark function for user-defined\n+\toperator as referenced.\n+\n 2010-12-31  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46971"}, {"sha": "9a5dcc1040ea5b20d89a80bcf10d141cfd97e9fd", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1a49fa1b2535dcce600d03887e2c72a463cc2c/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1a49fa1b2535dcce600d03887e2c72a463cc2c/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=7c1a49fa1b2535dcce600d03887e2c72a463cc2c", "patch": "@@ -3793,9 +3793,12 @@ resolve_operator (gfc_expr *e)\n \tsprintf (msg, _(\"Operand of user operator '%s' at %%L is %s\"),\n \t\t e->value.op.uop->name, gfc_typename (&op1->ts));\n       else\n-\tsprintf (msg, _(\"Operands of user operator '%s' at %%L are %s/%s\"),\n-\t\t e->value.op.uop->name, gfc_typename (&op1->ts),\n-\t\t gfc_typename (&op2->ts));\n+\t{\n+\t  sprintf (msg, _(\"Operands of user operator '%s' at %%L are %s/%s\"),\n+\t\t   e->value.op.uop->name, gfc_typename (&op1->ts),\n+\t\t   gfc_typename (&op2->ts));\n+\t  e->value.op.uop->op->sym->attr.referenced = 1;\n+\t}\n \n       goto bad_op;\n "}, {"sha": "4e4601de1bb91088ead40747bd64b87dcbb5578d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1a49fa1b2535dcce600d03887e2c72a463cc2c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1a49fa1b2535dcce600d03887e2c72a463cc2c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c1a49fa1b2535dcce600d03887e2c72a463cc2c", "patch": "@@ -1,3 +1,8 @@\n+2010-12-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/45338\n+\t* gfortran.dg/userdef_operator_2.f90:  New test case.\n+\n 2010-12-31  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46971\n@@ -6,16 +11,16 @@\n 2010-12-30  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/method-conflict-3.m: New.\n-\t* objc.dg/method-conflict-4.m: New.\t\n-\t* obj-c++.dg/method-conflict-3.m: New.\t\n+\t* objc.dg/method-conflict-4.m: New.\n+\t* obj-c++.dg/method-conflict-3.m: New.\n \t* obj-c++.dg/method-conflict-4.mm: New.\n \n 2010-12-30  Nicola Pero  <nicola.pero@meta-innovation.com>\n-\t\n+\n \t* objc.dg/class-extension-3.m: Updated.\n \t* objc.dg/method-1.m: Updated.\n \t* objc.dg/method-conflict-1.m: New.\n-\t* objc.dg/method-conflict-2.m: New.\t\n+\t* objc.dg/method-conflict-2.m: New.\n \t* obj-c++.dg/class-extension-3.mm: Updated.\n \t* obj-c++.dg/method-8.mm: Updated.\n \t* obj-c++.dg/method-conflict-1.mm: New."}, {"sha": "83392c6b6c391886758f91195ec8025425730fe4", "filename": "gcc/testsuite/gfortran.dg/userdef_operator_2.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1a49fa1b2535dcce600d03887e2c72a463cc2c/gcc%2Ftestsuite%2Fgfortran.dg%2Fuserdef_operator_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1a49fa1b2535dcce600d03887e2c72a463cc2c/gcc%2Ftestsuite%2Fgfortran.dg%2Fuserdef_operator_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuserdef_operator_2.f90?ref=7c1a49fa1b2535dcce600d03887e2c72a463cc2c", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+! PR 45338 - no ICE when cmp is not used explicitly.\n+! Test case by Simon Smart \n+module test_mod\n+  implicit none\n+contains\n+  subroutine test_fn (cmp)\n+    interface operator(.myop.)\n+       pure function cmp (a, b) result(ret)\n+         integer, intent(in) :: a, b\n+         logical ret\n+       end function cmp\n+    end interface\n+    integer :: a, b\n+    print*, a .myop. b\n+  end subroutine test_fn\n+end module test_mod"}]}