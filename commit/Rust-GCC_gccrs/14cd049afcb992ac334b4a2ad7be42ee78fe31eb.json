{"sha": "14cd049afcb992ac334b4a2ad7be42ee78fe31eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRjZDA0OWFmY2I5OTJhYzMzNGI0YTJhZDdiZTQyZWU3OGZlMzFlYg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-25T14:11:18Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-25T14:11:18Z"}, "message": "i386: Remove broadcasts from TARGET_MMX_WITH_SSE vec_dup insn patterns\n\nXMM broadcast instructions broadcast value from general reg to all\nelements of the vector.  This is not allowed for TARGET_MMX_WITH_SSE,\nwhere it is expected that bits outside lower 64bits load or retain\nzero value.  Following testcases expect broadcast, and are thus invalid:\n\nFAIL: gcc.target/i386/sse2-mmx-18b.c scan-assembler-not movd\nFAIL: gcc.target/i386/sse2-mmx-18b.c scan-assembler-times pbroadcastd 1\nFAIL: gcc.target/i386/sse2-mmx-19b.c scan-assembler-not movd\nFAIL: gcc.target/i386/sse2-mmx-19b.c scan-assembler-times pbroadcastw 1\nFAIL: gcc.target/i386/sse2-mmx-19d.c scan-assembler-times pbroadcastw 1\nFAIL: gcc.target/i386/sse2-mmx-19e.c scan-assembler-times pbroadcastw 1\n\nThese testcases are removed entirely.\n\n2020-05-25  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\t* config/i386/mmx.md (*vec_dupv2sf): Redefine as define_insn.\n\t(mmx_pshufw_1): Change Yv constraint to xYw.  Correct type attribute.\n\t(*vec_dupv4hi): Redefine as define_insn.\n\tRemove alternative with general register input.\n\t(*vec_dupv2si): Ditto.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.target/i386/sse2-mmx-18a.c (dg-options): Remove -mno-avx512vl.\n\t* gcc.target/i386/sse2-mmx-19a.c (dg-options): Remove -mno-avx.\n\t* gcc.target/i386/sse2-mmx-18b.c: Remove.\n\t* gcc.target/i386/sse2-mmx-18c.c: Ditto.\n\t* gcc.target/i386/sse2-mmx-19b.c: Ditto.\n\t* gcc.target/i386/sse2-mmx-19c.c: Ditto.\n\t* gcc.target/i386/sse2-mmx-19d.c: Ditto.\n\t* gcc.target/i386/sse2-mmx-19e.c: Ditto.", "tree": {"sha": "7f035729f52218faf7718c67333be9e841e5ca82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f035729f52218faf7718c67333be9e841e5ca82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14cd049afcb992ac334b4a2ad7be42ee78fe31eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cd049afcb992ac334b4a2ad7be42ee78fe31eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14cd049afcb992ac334b4a2ad7be42ee78fe31eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a42cc1f883f7a4aabd7f29e2fb842a51a213e37d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d"}], "stats": {"total": 174, "additions": 53, "deletions": 121}, "files": [{"sha": "52a7e507740306fadb94b5583e5fbcd2ba246a9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14cd049afcb992ac334b4a2ad7be42ee78fe31eb", "patch": "@@ -1,3 +1,11 @@\n+2020-05-25  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/mmx.md (*vec_dupv2sf): Redefine as define_insn.\n+\t(mmx_pshufw_1): Change Yv constraint to xYw.  Correct type attribute.\n+\t(*vec_dupv4hi): Redefine as define_insn.\n+\tRemove alternative with general register input.\n+\t(*vec_dupv2si): Ditto.\n+\n 2020-05-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/95309"}, {"sha": "b5564711aa454bab2915c73698971e8e6d361c05", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 32, "deletions": 77, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=14cd049afcb992ac334b4a2ad7be42ee78fe31eb", "patch": "@@ -947,27 +947,22 @@\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"V2SF\")])\n \n-(define_insn_and_split \"*vec_dupv2sf\"\n+(define_insn \"*vec_dupv2sf\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y,x,Yv\")\n \t(vec_duplicate:V2SF\n \t  (match_operand:SF 1 \"register_operand\" \"0,0,Yv\")))]\n   \"TARGET_MMX || TARGET_MMX_WITH_SSE\"\n   \"@\n    punpckldq\\t%0, %0\n-   #\n-   #\"\n-  \"TARGET_SSE && reload_completed\n-   && SSE_REGNO_P (REGNO (operands[0]))\"\n-  [(set (match_dup 0)\n-\t(vec_duplicate:V4SF (match_dup 1)))]\n-{\n-  operands[0] = lowpart_subreg (V4SFmode, operands[0],\n-\t\t\t\tGET_MODE (operands[0]));\n-}\n-  [(set_attr \"isa\" \"*,sse_noavx,avx\")\n+   shufps\\t{$0xe0, %0, %0|%0, %0, 0xe0}\n+   %vmovsldup\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"isa\" \"*,sse_noavx,sse3\")\n    (set_attr \"mmx_isa\" \"native,*,*\")\n-   (set_attr \"type\" \"mmxcvt,ssemov,ssemov\")\n-   (set_attr \"mode\" \"DI,TI,TI\")])\n+   (set_attr \"type\" \"mmxcvt,sseshuf1,sse\")\n+   (set_attr \"length_immediate\" \"*,1,*\")\n+   (set_attr \"prefix_rep\" \"*,*,1\")\n+   (set_attr \"prefix\" \"*,orig,maybe_vex\")\n+   (set_attr \"mode\" \"DI,V4SF,V4SF\")])\n \n (define_insn \"*mmx_concatv2sf\"\n   [(set (match_operand:V2SF 0 \"register_operand\"     \"=y,y\")\n@@ -1960,9 +1955,9 @@\n })\n \n (define_insn \"mmx_pshufw_1\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=y,Yv\")\n+  [(set (match_operand:V4HI 0 \"register_operand\" \"=y,xYw\")\n         (vec_select:V4HI\n-          (match_operand:V4HI 1 \"register_mmxmem_operand\" \"ym,Yv\")\n+          (match_operand:V4HI 1 \"register_mmxmem_operand\" \"ym,xYw\")\n           (parallel [(match_operand 2 \"const_0_to_3_operand\")\n                      (match_operand 3 \"const_0_to_3_operand\")\n                      (match_operand 4 \"const_0_to_3_operand\")\n@@ -1989,7 +1984,7 @@\n }\n   [(set_attr \"isa\" \"*,sse2\")\n    (set_attr \"mmx_isa\" \"native,*\")\n-   (set_attr \"type\" \"mmxcvt,sselog\")\n+   (set_attr \"type\" \"mmxcvt,sselog1\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"mode\" \"DI,TI\")])\n \n@@ -2004,77 +1999,37 @@\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn_and_split \"*vec_dupv4hi\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=y,xYw,Yw\")\n+(define_insn \"*vec_dupv4hi\"\n+  [(set (match_operand:V4HI 0 \"register_operand\" \"=y,xYw\")\n \t(vec_duplicate:V4HI\n \t  (truncate:HI\n-\t    (match_operand:SI 1 \"register_operand\" \"0,xYw,r\"))))]\n+\t    (match_operand:SI 1 \"register_operand\" \"0,xYw\"))))]\n   \"(TARGET_MMX || TARGET_MMX_WITH_SSE)\n    && (TARGET_SSE || TARGET_3DNOW_A)\"\n   \"@\n    pshufw\\t{$0, %0, %0|%0, %0, 0}\n-   #\n-   #\"\n-  \"TARGET_SSE2 && reload_completed\n-   && SSE_REGNO_P (REGNO (operands[0]))\"\n-  [(const_int 0)]\n-{\n-  rtx op;\n-  operands[0] = lowpart_subreg (V8HImode, operands[0],\n-\t\t\t\tGET_MODE (operands[0]));\n-  if (TARGET_AVX2)\n-    {\n-      operands[1] = lowpart_subreg (HImode, operands[1],\n-\t\t\t\t    GET_MODE (operands[1]));\n-      op = gen_rtx_VEC_DUPLICATE (V8HImode, operands[1]);\n-    }\n-  else\n-    {\n-      operands[1] = lowpart_subreg (V8HImode, operands[1],\n-\t\t\t\t    GET_MODE (operands[1]));\n-      rtx mask = gen_rtx_PARALLEL (VOIDmode,\n-\t\t\t\t   gen_rtvec (8,\n-\t\t\t\t\t      GEN_INT (0),\n-\t\t\t\t\t      GEN_INT (0),\n-\t\t\t\t\t      GEN_INT (0),\n-\t\t\t\t\t      GEN_INT (0),\n-\t\t\t\t\t      GEN_INT (4),\n-\t\t\t\t\t      GEN_INT (5),\n-\t\t\t\t\t      GEN_INT (6),\n-\t\t\t\t\t      GEN_INT (7)));\n-\n-      op = gen_rtx_VEC_SELECT (V8HImode, operands[1], mask);\n-    }\n-  emit_insn (gen_rtx_SET (operands[0], op));\n-  DONE;\n-}\n-  [(set_attr \"mmx_isa\" \"native,sse,avx\")\n-   (set_attr \"type\" \"mmxcvt,sselog1,ssemov\")\n-   (set_attr \"length_immediate\" \"1,1,0\")\n-   (set_attr \"mode\" \"DI,TI,TI\")])\n+   %vpshuflw\\t{$0, %1, %0|%0, %1, 0}\"\n+  [(set_attr \"isa\" \"*,sse2\")\n+   (set_attr \"mmx_isa\" \"native,*\")\n+   (set_attr \"type\" \"mmxcvt,sselog1\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"mode\" \"DI,TI\")])\n+\n \n-(define_insn_and_split \"*vec_dupv2si\"\n-  [(set (match_operand:V2SI 0 \"register_operand\" \"=y,x,Yv,Yw\")\n+(define_insn \"*vec_dupv2si\"\n+  [(set (match_operand:V2SI 0 \"register_operand\" \"=y,Yv\")\n \t(vec_duplicate:V2SI\n-\t  (match_operand:SI 1 \"register_operand\" \"0,0,Yv,r\")))]\n+\t  (match_operand:SI 1 \"register_operand\" \"0,Yv\")))]\n   \"TARGET_MMX || TARGET_MMX_WITH_SSE\"\n   \"@\n    punpckldq\\t%0, %0\n-   #\n-   #\n-   #\"\n-  \"TARGET_SSE && reload_completed\n-   && SSE_REGNO_P (REGNO (operands[0]))\"\n-  [(set (match_dup 0)\n-\t(vec_duplicate:V4SI (match_dup 1)))]\n-{\n-  operands[0] = lowpart_subreg (V4SImode, operands[0],\n-\t\t\t\tGET_MODE (operands[0]));\n-}\n-  [(set_attr \"isa\" \"*,sse_noavx,avx,avx\")\n-   (set_attr \"mmx_isa\" \"native,*,*,*\")\n-   (set_attr \"type\" \"mmxcvt,ssemov,ssemov,ssemov\")\n-   (set_attr \"mode\" \"DI,TI,TI,TI\")])\n+   %vpshufd\\t{$0xe0, %1, %0|%0, %1, 0xe0}\"\n+  [(set_attr \"isa\" \"*,sse2\")\n+   (set_attr \"mmx_isa\" \"native,*\")\n+   (set_attr \"type\" \"mmxcvt,sselog1\")\n+   (set_attr \"prefix_data16\" \"*,1\")\n+   (set_attr \"length_immediate\" \"*,1\")\n+   (set_attr \"mode\" \"DI,TI\")])\n \n (define_insn \"*mmx_concatv2si\"\n   [(set (match_operand:V2SI 0 \"register_operand\"     \"=y,y\")"}, {"sha": "4cc2d4188bfea04786ceb5acd0c51ff5ccaa13a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14cd049afcb992ac334b4a2ad7be42ee78fe31eb", "patch": "@@ -1,3 +1,14 @@\n+2020-05-25  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/sse2-mmx-18a.c (dg-options): Remove -mno-avx512vl.\n+\t* gcc.target/i386/sse2-mmx-19a.c (dg-options): Remove -mno-avx.\n+\t* gcc.target/i386/sse2-mmx-18b.c: Remove.\n+\t* gcc.target/i386/sse2-mmx-18c.c: Ditto.\n+\t* gcc.target/i386/sse2-mmx-19b.c: Ditto.\n+\t* gcc.target/i386/sse2-mmx-19c.c: Ditto.\n+\t* gcc.target/i386/sse2-mmx-19d.c: Ditto.\n+\t* gcc.target/i386/sse2-mmx-19e.c: Ditto.\n+\n 2020-05-25  Martin Jambor  <mjambor@suse.cz>\n \n \t* brig.dg/test/gimple/packed.hsail: Fix scan dump patterns."}, {"sha": "d08da8b43776721b33ff14b0d54fb5e084d8a471", "filename": "gcc/testsuite/gcc.target/i386/sse2-mmx-18a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-18a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-18a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-18a.c?ref=14cd049afcb992ac334b4a2ad7be42ee78fe31eb", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { ! ia32 } } } */\n-/* { dg-options \"-O2 -msse2 -mno-mmx -mno-avx512vl\" } */\n+/* { dg-options \"-O2 -msse2 -mno-mmx\" } */\n /* { dg-final { scan-assembler-times \"pshufd\" 1 } } */\n /* { dg-final { scan-assembler-times \"movd\" 1 } } */\n /* { dg-final { scan-assembler-not \"movl\" } } */"}, {"sha": "9b267b173465cec3458b527332fd1ef9e7a35ca0", "filename": "gcc/testsuite/gcc.target/i386/sse2-mmx-18b.c", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-18b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-18b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-18b.c?ref=a42cc1f883f7a4aabd7f29e2fb842a51a213e37d", "patch": "@@ -1,7 +0,0 @@\n-/* { dg-do compile { target { ! ia32 } } } */\n-/* { dg-options \"-O2 -mno-mmx -mavx512bw -mavx512vl\" } */\n-/* { dg-final { scan-assembler-times \"pbroadcastd\" 1 } } */\n-/* { dg-final { scan-assembler-not \"movd\" } } */\n-/* { dg-final { scan-assembler-not \"movl\" } } */\n-\n-#include \"sse2-mmx-18a.c\""}, {"sha": "394f05b6b49b71f4c1c0d639c1af76d7b305666c", "filename": "gcc/testsuite/gcc.target/i386/sse2-mmx-18c.c", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-18c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-18c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-18c.c?ref=a42cc1f883f7a4aabd7f29e2fb842a51a213e37d", "patch": "@@ -1,7 +0,0 @@\n-/* { dg-do compile { target { ! ia32 } } } */\n-/* { dg-options \"-O2 -mno-mmx -mavx512bw -mno-avx512vl\" } */\n-/* { dg-final { scan-assembler-times \"pshufd\" 1 } } */\n-/* { dg-final { scan-assembler-times \"movd\" 1 } } */\n-/* { dg-final { scan-assembler-not \"movl\" } } */\n-\n-#include \"sse2-mmx-18a.c\""}, {"sha": "7f8b8b261962c32137430cf223809b2385e6545d", "filename": "gcc/testsuite/gcc.target/i386/sse2-mmx-19a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cd049afcb992ac334b4a2ad7be42ee78fe31eb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19a.c?ref=14cd049afcb992ac334b4a2ad7be42ee78fe31eb", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { ! ia32 } } } */\n-/* { dg-options \"-O2 -msse2 -mno-mmx -mno-avx -mtune=intel\" } */\n+/* { dg-options \"-O2 -msse2 -mno-mmx -mtune=intel\" } */\n /* { dg-final { scan-assembler-times \"pshuflw\" 1 } } */\n /* { dg-final { scan-assembler-times \"movd\" 1 } } */\n /* { dg-final { scan-assembler-not \"movl\" } } */"}, {"sha": "a6d42313336f2622e4577554f89bd4e0f27318e7", "filename": "gcc/testsuite/gcc.target/i386/sse2-mmx-19b.c", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19b.c?ref=a42cc1f883f7a4aabd7f29e2fb842a51a213e37d", "patch": "@@ -1,7 +0,0 @@\n-/* { dg-do compile { target { ! ia32 } } } */\n-/* { dg-options \"-O2 -mno-mmx -mavx512bw -mavx512vl\" } */\n-/* { dg-final { scan-assembler-times \"pbroadcastw\" 1 } } */\n-/* { dg-final { scan-assembler-not \"movd\" } } */\n-/* { dg-final { scan-assembler-not \"movl\" } } */\n-\n-#include \"sse2-mmx-19a.c\""}, {"sha": "b02dc8c2ffd13c685fc222c53d7ae1e7fee4a986", "filename": "gcc/testsuite/gcc.target/i386/sse2-mmx-19c.c", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19c.c?ref=a42cc1f883f7a4aabd7f29e2fb842a51a213e37d", "patch": "@@ -1,7 +0,0 @@\n-/* { dg-do compile { target { ! ia32 } } } */\n-/* { dg-options \"-O2 -mno-mmx -mavx -mno-avx2 -mtune=intel\" } */\n-/* { dg-final { scan-assembler-times \"pshuflw\" 1 } } */\n-/* { dg-final { scan-assembler-times \"movd\" 1 } } */\n-/* { dg-final { scan-assembler-not \"movl\" } } */\n-\n-#include \"sse2-mmx-19a.c\""}, {"sha": "54691883c9caa97f3108ad3cb1dcfbef23cf7c3c", "filename": "gcc/testsuite/gcc.target/i386/sse2-mmx-19d.c", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19d.c?ref=a42cc1f883f7a4aabd7f29e2fb842a51a213e37d", "patch": "@@ -1,7 +0,0 @@\n-/* { dg-do compile { target { ! ia32 } } } */\n-/* { dg-options \"-O2 -mno-mmx -mavx512bw -mno-avx512vl -mtune=intel\" } */\n-/* { dg-final { scan-assembler-times \"pbroadcastw\" 1 } } */\n-/* { dg-final { scan-assembler-times \"movd\" 1 } } */\n-/* { dg-final { scan-assembler-not \"movl\" } } */\n-\n-#include \"sse2-mmx-19a.c\""}, {"sha": "8be973cc4fcf10fe0769aebf96eb3b40bdb66036", "filename": "gcc/testsuite/gcc.target/i386/sse2-mmx-19e.c", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19e.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42cc1f883f7a4aabd7f29e2fb842a51a213e37d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19e.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mmx-19e.c?ref=a42cc1f883f7a4aabd7f29e2fb842a51a213e37d", "patch": "@@ -1,7 +0,0 @@\n-/* { dg-do compile { target { ! ia32 } } } */\n-/* { dg-options \"-O2 -mno-mmx -mavx2 -mno-avx512f -mtune=intel\" } */\n-/* { dg-final { scan-assembler-times \"pbroadcastw\" 1 } } */\n-/* { dg-final { scan-assembler-times \"movd\" 1 } } */\n-/* { dg-final { scan-assembler-not \"movl\" } } */\n-\n-#include \"sse2-mmx-19a.c\""}]}