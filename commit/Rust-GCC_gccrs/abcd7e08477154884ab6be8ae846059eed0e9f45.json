{"sha": "abcd7e08477154884ab6be8ae846059eed0e9f45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJjZDdlMDg0NzcxNTQ4ODRhYjZiZThhZTg0NjA1OWVlZDBlOWY0NQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2009-12-15T20:17:27Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2009-12-15T20:17:27Z"}, "message": "future (unique_future::get, [...]): Remove workaround for c++/34022.\n\n2009-12-15  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\t* include/std/future (unique_future::get, promise::set_value): Remove\n\tworkaround for c++/34022.\n\t(packaged_task::get_future, packaged_task::operator()): Use\n\t__throw_bad_function_call.\n\t* testsuite/30_threads/packaged_task/cons/assign_neg.cc: Adjust.\n\t* testsuite/30_threads/packaged_task/cons/copy_neg.cc: Likewise.\n\t* testsuite/30_threads/promise/cons/assign_neg.cc: Likewise.\n\t* testsuite/30_threads/promise/cons/copy_neg.cc: Likewise.\n\t* testsuite/30_threads/shared_future/cons/assign_neg.cc: Likewise.\n\t* testsuite/30_threads/unique_future/cons/assign_neg.cc: Likewise.\n\t* testsuite/30_threads/unique_future/cons/copy_neg.cc: Likewise.\n\nFrom-SVN: r155269", "tree": {"sha": "e4ad8e4fe1c84b63e443243b4f7f21f55286f284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4ad8e4fe1c84b63e443243b4f7f21f55286f284"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abcd7e08477154884ab6be8ae846059eed0e9f45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abcd7e08477154884ab6be8ae846059eed0e9f45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abcd7e08477154884ab6be8ae846059eed0e9f45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abcd7e08477154884ab6be8ae846059eed0e9f45/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a5d50bd4837528ad014f967f5c92022b129c6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a5d50bd4837528ad014f967f5c92022b129c6b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a5d50bd4837528ad014f967f5c92022b129c6b1"}], "stats": {"total": 74, "additions": 29, "deletions": 45}, "files": [{"sha": "4e77d33b08dc0eb62895718ce35d34dc2a8409f7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=abcd7e08477154884ab6be8ae846059eed0e9f45", "patch": "@@ -1,3 +1,17 @@\n+2009-12-15  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/std/future (unique_future::get, promise::set_value): Remove\n+\tworkaround for c++/34022.\n+\t(packaged_task::get_future, packaged_task::operator()): Use\n+\t__throw_bad_function_call.\n+\t* testsuite/30_threads/packaged_task/cons/assign_neg.cc: Adjust.\n+\t* testsuite/30_threads/packaged_task/cons/copy_neg.cc: Likewise.\n+\t* testsuite/30_threads/promise/cons/assign_neg.cc: Likewise.\n+\t* testsuite/30_threads/promise/cons/copy_neg.cc: Likewise.\n+\t* testsuite/30_threads/shared_future/cons/assign_neg.cc: Likewise.\n+\t* testsuite/30_threads/unique_future/cons/assign_neg.cc: Likewise.\n+\t* testsuite/30_threads/unique_future/cons/copy_neg.cc: Likewise.\n+\n 2009-12-15  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/std/functional (function::function): Move construct target."}, {"sha": "8f9975dea1a496aa9bd5e0f348c151434962899f", "filename": "libstdc++-v3/include/std/future", "status": "modified", "additions": 8, "deletions": 38, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture?ref=abcd7e08477154884ab6be8ae846059eed0e9f45", "patch": "@@ -42,6 +42,7 @@\n #include <system_error>\n #include <exception>\n #include <cstdatomic>\n+#include <bits/functexcept.h>\n \n namespace std\n {\n@@ -172,7 +173,7 @@ namespace std\n \tvoid\n \t_M_set(_Res&& __res)\n \t{\n-\t  ::new (_M_addr()) _Res(_Move_result<_Res>::_S_move(__res));\n+\t  ::new (_M_addr()) _Res(std::move(__res));\n \t  _M_initialized = true;\n \t}\n \n@@ -183,27 +184,6 @@ namespace std\n     };\n \n \n-    /// Workaround for CWG issue 664 and c++/34022\n-    template<typename _Res, bool = is_scalar<_Res>::value>\n-      struct _Move_result;\n-\n-     /// Specialization for scalar types returns rvalue not rvalue-reference.\n-    template<typename _Res>\n-      struct _Move_result<_Res, true>\n-      {\n-\ttypedef _Res __rval_type;\n-\tstatic _Res _S_move(_Res __res) { return __res; }\n-      };\n-    \n-    /// Specialization for non-scalar types returns rvalue-reference.\n-    template<typename _Res>\n-      struct _Move_result<_Res, false>\n-      {\n-\ttypedef _Res&& __rval_type;\n-\tstatic _Res&& _S_move(_Res& __res) { return std::move(__res); }\n-      };\n-\n-\n     // TODO: use template alias when available\n     /*\n       template<typename _Res>\n@@ -426,7 +406,6 @@ namespace std\n \n       typedef __basic_future<_Res> _Base_type;\n       typedef typename _Base_type::__state_type __state_type;\n-      typedef __future_base::_Move_result<_Res> _Mover;\n \n       explicit\n       unique_future(const __state_type& __state) : _Base_type(__state) { }\n@@ -440,9 +419,9 @@ namespace std\n       unique_future& operator=(const unique_future&) = delete;\n \n       /// Retrieving the value\n-      typename _Mover::__rval_type\n+      _Res&&\n       get()\n-      { return _Mover::_S_move(this->_M_get_result()._M_value()); }\n+      { return std::move(this->_M_get_result()._M_value()); }\n     };\n  \n   /// Partial specialization for unique_future<R&>\n@@ -586,7 +565,6 @@ namespace std\n       template<typename> friend class packaged_task;\n \n       typedef __future_base::_State \t\t_State;\n-      typedef __future_base::_Move_result<_Res>\t_Mover;\n       typedef __future_base::_Result<_Res>\tresult_type;\n       \n       shared_ptr<_State>                        _M_future;\n@@ -654,7 +632,7 @@ namespace std\n       set_value(_Res&& __r)\n       {\n         if (!_M_satisfied())\n-          _M_storage->_M_set(_Mover::_S_move(__r));\n+          _M_storage->_M_set(std::move(__r));\n         _M_future->_M_set_result(std::move(_M_storage));\n       }\n \n@@ -940,11 +918,9 @@ namespace std\n         }\n         __catch (const future_error& __e)\n         {\n-#ifdef __EXCEPTIONS\n           if (__e.code() == future_errc::future_already_retrieved)\n-\t    throw std::bad_function_call();\n-\t  throw;\n-#endif\n+            __throw_bad_function_call();\n+          __throw_exception_again;\n         }\n       }\n \n@@ -953,13 +929,7 @@ namespace std\n       operator()(_ArgTypes... __args)\n       {\n         if (!static_cast<bool>(_M_task) || _M_promise._M_satisfied())\n-\t  {\n-#ifdef __EXCEPTIONS\n-\t    throw std::bad_function_call();\n-#else\n-\t    __builtin_abort();\n-#endif\n-\t  }\n+          __throw_bad_function_call();\n \n         __try\n         {"}, {"sha": "031ce0ba38e846805b926a9a1ee6a4465941a164", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fassign_neg.cc?ref=abcd7e08477154884ab6be8ae846059eed0e9f45", "patch": "@@ -33,4 +33,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 32 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 912 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 890 }"}, {"sha": "65cf9fdbf9c909ce029f26ac670ab88d0731db60", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2Fcons%2Fcopy_neg.cc?ref=abcd7e08477154884ab6be8ae846059eed0e9f45", "patch": "@@ -32,4 +32,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 911 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 889 }"}, {"sha": "54347408c530f6eeaee9e6c26cf78b8ecfef33dd", "filename": "libstdc++-v3/testsuite/30_threads/promise/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fassign_neg.cc?ref=abcd7e08477154884ab6be8ae846059eed0e9f45", "patch": "@@ -33,4 +33,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 32 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 630 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 608 }"}, {"sha": "79d2e16639fa73a067ff5739a78700ccf83af4a0", "filename": "libstdc++-v3/testsuite/30_threads/promise/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpromise%2Fcons%2Fcopy_neg.cc?ref=abcd7e08477154884ab6be8ae846059eed0e9f45", "patch": "@@ -32,4 +32,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 614 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 592 }"}, {"sha": "0f284cd0a262d2cfcef0ccec9cab031115684c8c", "filename": "libstdc++-v3/testsuite/30_threads/shared_future/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fcons%2Fassign_neg.cc?ref=abcd7e08477154884ab6be8ae846059eed0e9f45", "patch": "@@ -35,4 +35,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 34 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 514 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 493 }"}, {"sha": "69caf12edb4fc266eabb5be70aaaa28420388be9", "filename": "libstdc++-v3/testsuite/30_threads/unique_future/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Funique_future%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Funique_future%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Funique_future%2Fcons%2Fassign_neg.cc?ref=abcd7e08477154884ab6be8ae846059eed0e9f45", "patch": "@@ -35,4 +35,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 34 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 440 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 419 }"}, {"sha": "43e940cfa76e067b4365e2d163180eb57869487a", "filename": "libstdc++-v3/testsuite/30_threads/unique_future/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Funique_future%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abcd7e08477154884ab6be8ae846059eed0e9f45/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Funique_future%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Funique_future%2Fcons%2Fcopy_neg.cc?ref=abcd7e08477154884ab6be8ae846059eed0e9f45", "patch": "@@ -34,4 +34,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 33 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 439 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 418 }"}]}