{"sha": "e82059016e0a3eb2c69029cef46978a07635c3bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgyMDU5MDE2ZTBhM2ViMmM2OTAyOWNlZjQ2OTc4YTA3NjM1YzNiZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2000-08-03T15:20:43Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-03T15:20:43Z"}, "message": "h8300.c: Fix a comment typo.\n\n        * h8300.c: Fix a comment typo.\n        * h8300.h (OK_FOR_U): Accept a 32-bit constant address on H8/S.\n\nFrom-SVN: r35455", "tree": {"sha": "e7652a8799deff163215dff76d53427d2f8ec55e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7652a8799deff163215dff76d53427d2f8ec55e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e82059016e0a3eb2c69029cef46978a07635c3bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82059016e0a3eb2c69029cef46978a07635c3bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e82059016e0a3eb2c69029cef46978a07635c3bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82059016e0a3eb2c69029cef46978a07635c3bd/comments", "author": null, "committer": null, "parents": [{"sha": "99871835a6e3f56dc15396dbf78856fd8b276fa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99871835a6e3f56dc15396dbf78856fd8b276fa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99871835a6e3f56dc15396dbf78856fd8b276fa5"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "c58d5d15512998e83a7e96f3a4cce53ddd4243fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e82059016e0a3eb2c69029cef46978a07635c3bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e82059016e0a3eb2c69029cef46978a07635c3bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e82059016e0a3eb2c69029cef46978a07635c3bd", "patch": "@@ -15,6 +15,9 @@ Thu Aug  3 15:53:03 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n 2000-08-03  Kazu Hirata  <kazu@hxi.com>\n \n+\t* h8300.c: Fix a comment typo.\n+\t* h8300.h (OK_FOR_U): Accept a 32-bit constant address on H8/S.\n+\n \t* jump.c: Fix formatting.\n \n \t* toplev.c: Fix formatting."}, {"sha": "e1dea0d3d3022acf877d7f84d5c31f5d8ecff207", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e82059016e0a3eb2c69029cef46978a07635c3bd/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e82059016e0a3eb2c69029cef46978a07635c3bd/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=e82059016e0a3eb2c69029cef46978a07635c3bd", "patch": "@@ -977,7 +977,7 @@ const_costs (r, c)\n \f\n /* Documentation for the machine specific operand escapes:\n \n-   'A' print rn in h8/300 mode, erN in H8/300H mode\n+   'A' print rn in H8/300 mode, erN in H8/300H mode\n    'C' print (operand - 2).\n    'E' like s but negative.\n    'F' like t but negative."}, {"sha": "271e39296cf4b51f51f223453a2f6120b9b5e0d5", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e82059016e0a3eb2c69029cef46978a07635c3bd/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e82059016e0a3eb2c69029cef46978a07635c3bd/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=e82059016e0a3eb2c69029cef46978a07635c3bd", "patch": "@@ -866,9 +866,9 @@ struct cum_arg\n         && GET_CODE (XEXP (XEXP (XEXP (OP, 0), 0), 1)) == CONST_INT) \\\n         && (TARGET_H8300S || SYMBOL_REF_FLAG (XEXP (XEXP (OP, 0), 0)))) \\\n    || (GET_CODE (OP) == MEM\t\t\t\t\t\t\\\n-       && EIGHTBIT_CONSTANT_ADDRESS_P (XEXP (OP, 0))))\n-\n-\n+       && EIGHTBIT_CONSTANT_ADDRESS_P (XEXP (OP, 0)))\t\\\n+   || (GET_CODE (OP) == MEM && TARGET_H8300S\t\t\\\n+       && GET_CODE (XEXP (OP, 0)) == CONST_INT))\n \n #define EXTRA_CONSTRAINT(OP, C)\t\t\t\\\n   ((C) == 'T' ? OK_FOR_T (OP) :\t\t\t\\"}]}