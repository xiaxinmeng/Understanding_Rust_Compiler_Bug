{"sha": "a2ae4661ab37d05dc2610fb8bc1a6a32b2928748", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJhZTQ2NjFhYjM3ZDA1ZGMyNjEwZmI4YmMxYTZhMzJiMjkyODc0OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-01-14T15:10:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-14T15:10:41Z"}, "message": "re PR target/68269 (FAIL: gcc.dg/pr68129_1.c (internal compiler error))\n\n\tPR target/68269\n\t* combine.c (expand_field_assignment): Punt if compute_mode is\n\tunsupported scalar mode.\n\nFrom-SVN: r232366", "tree": {"sha": "e5b9d9876fb957027d6e8ec87808b576556c7808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5b9d9876fb957027d6e8ec87808b576556c7808"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2ae4661ab37d05dc2610fb8bc1a6a32b2928748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ae4661ab37d05dc2610fb8bc1a6a32b2928748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2ae4661ab37d05dc2610fb8bc1a6a32b2928748", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ae4661ab37d05dc2610fb8bc1a6a32b2928748/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21f88b7a131e29d1835dea1dd431ba939680878c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21f88b7a131e29d1835dea1dd431ba939680878c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21f88b7a131e29d1835dea1dd431ba939680878c"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "fe9a60a0c77926b300b2c348177e7a9863d76e74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ae4661ab37d05dc2610fb8bc1a6a32b2928748/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ae4661ab37d05dc2610fb8bc1a6a32b2928748/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2ae4661ab37d05dc2610fb8bc1a6a32b2928748", "patch": "@@ -1,3 +1,9 @@\n+2016-01-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/68269\n+\t* combine.c (expand_field_assignment): Punt if compute_mode is\n+\tunsupported scalar mode.\n+\n 2016-01-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66856"}, {"sha": "2f913dd8ea973acdedfe77d03ab252000c5547a6", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ae4661ab37d05dc2610fb8bc1a6a32b2928748/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ae4661ab37d05dc2610fb8bc1a6a32b2928748/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=a2ae4661ab37d05dc2610fb8bc1a6a32b2928748", "patch": "@@ -7247,6 +7247,10 @@ expand_field_assignment (const_rtx x)\n       if (len >= HOST_BITS_PER_WIDE_INT)\n \tbreak;\n \n+      /* Don't try to compute in too wide unsupported modes.  */\n+      if (!targetm.scalar_mode_supported_p (compute_mode))\n+\tbreak;\n+\n       /* Now compute the equivalent expression.  Make a copy of INNER\n \t for the SET_DEST in case it is a MEM into which we will substitute;\n \t we don't want shared RTL in that case.  */"}]}