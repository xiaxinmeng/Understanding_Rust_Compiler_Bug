{"sha": "4708440c7c3e49438684e33c6aa045336112567c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDcwODQ0MGM3YzNlNDk0Mzg2ODRlMzNjNmFhMDQ1MzM2MTEyNTY3Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-10-19T10:55:57Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-10-19T10:55:57Z"}, "message": "utils.c (gnat_set_type_context): New function.\n\n\t* gcc-interface/utils.c (gnat_set_type_context): New function.\n\t(gnat_pushdecl): Use it to set the context of the type.\n\nFrom-SVN: r203848", "tree": {"sha": "c4eb0272260c41f8d5e9b972b52d884abb64271e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4eb0272260c41f8d5e9b972b52d884abb64271e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4708440c7c3e49438684e33c6aa045336112567c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4708440c7c3e49438684e33c6aa045336112567c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4708440c7c3e49438684e33c6aa045336112567c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4708440c7c3e49438684e33c6aa045336112567c/comments", "author": null, "committer": null, "parents": [{"sha": "6f978a2a7834fa96f1899cf41f56f15509d34cf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f978a2a7834fa96f1899cf41f56f15509d34cf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f978a2a7834fa96f1899cf41f56f15509d34cf3"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "68e0cb95f690332d3705122ab0cbc28ee033db1f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4708440c7c3e49438684e33c6aa045336112567c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4708440c7c3e49438684e33c6aa045336112567c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4708440c7c3e49438684e33c6aa045336112567c", "patch": "@@ -1,3 +1,8 @@\n+2013-10-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c (gnat_set_type_context): New function.\n+\t(gnat_pushdecl): Use it to set the context of the type.\n+\n 2013-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_prag.adb (Check_Dependency_Clause):"}, {"sha": "68c965d06375b3c69e2dd588db63a4a288dfbd3b", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4708440c7c3e49438684e33c6aa045336112567c/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4708440c7c3e49438684e33c6aa045336112567c/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=4708440c7c3e49438684e33c6aa045336112567c", "patch": "@@ -531,6 +531,22 @@ gnat_zaplevel (void)\n   free_binding_level = level;\n }\n \f\n+/* Set the context of TYPE and its parallel types (if any) to CONTEXT.  */\n+\n+static void\n+gnat_set_type_context (tree type, tree context)\n+{\n+  tree decl = TYPE_STUB_DECL (type);\n+\n+  TYPE_CONTEXT (type) = context;\n+\n+  while (decl && DECL_PARALLEL_TYPE (decl))\n+    {\n+      TYPE_CONTEXT (DECL_PARALLEL_TYPE (decl)) = context;\n+      decl = TYPE_STUB_DECL (DECL_PARALLEL_TYPE (decl));\n+    }\n+}\n+\n /* Record DECL as belonging to the current lexical scope and use GNAT_NODE\n    for location information and flag propagation.  */\n \n@@ -612,7 +628,7 @@ gnat_pushdecl (tree decl, Node_Id gnat_node)\n \t      if (TREE_CODE (t) == POINTER_TYPE)\n \t\tTYPE_NEXT_PTR_TO (t) = tt;\n \t      TYPE_NAME (tt) = DECL_NAME (decl);\n-\t      TYPE_CONTEXT (tt) = DECL_CONTEXT (decl);\n+\t      gnat_set_type_context (tt, DECL_CONTEXT (decl));\n \t      TYPE_STUB_DECL (tt) = TYPE_STUB_DECL (t);\n \t      DECL_ORIGINAL_TYPE (decl) = tt;\n \t    }\n@@ -622,7 +638,7 @@ gnat_pushdecl (tree decl, Node_Id gnat_node)\n \t  /* We need a variant for the placeholder machinery to work.  */\n \t  tree tt = build_variant_type_copy (t);\n \t  TYPE_NAME (tt) = decl;\n-\t  TYPE_CONTEXT (tt) = DECL_CONTEXT (decl);\n+\t  gnat_set_type_context (tt, DECL_CONTEXT (decl));\n \t  TREE_USED (tt) = TREE_USED (t);\n \t  TREE_TYPE (decl) = tt;\n \t  if (DECL_ORIGINAL_TYPE (TYPE_NAME (t)))\n@@ -644,7 +660,7 @@ gnat_pushdecl (tree decl, Node_Id gnat_node)\n \t  if (!(TYPE_NAME (t) && TREE_CODE (TYPE_NAME (t)) == TYPE_DECL))\n \t    {\n \t      TYPE_NAME (t) = decl;\n-\t      TYPE_CONTEXT (t) = DECL_CONTEXT (decl);\n+\t      gnat_set_type_context (t, DECL_CONTEXT (decl));\n \t    }\n     }\n }"}]}