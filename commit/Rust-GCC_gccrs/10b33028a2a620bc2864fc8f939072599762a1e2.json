{"sha": "10b33028a2a620bc2864fc8f939072599762a1e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBiMzMwMjhhMmE2MjBiYzI4NjRmYzhmOTM5MDcyNTk5NzYyYTFlMg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-03-20T07:54:24Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-03-20T07:54:24Z"}, "message": "2003-03-20  Michael Koch  <konqueror@gmx.de>\n\n\t* java/io/FileInputStream.java\n\t(getChannel): New implementation.\n\t* java/io/FileOutputStream.java\n\t(ch): New member variable.\n\t(getChannel): Implemented.\n\t* java/io/RandomAccessFile.java\n\t(RandomAccessFile): Throws FileNotFoundException instead of\n\tIOException.\n\t(getChannel): New method.\n\t(ch): New member variable.\n\nFrom-SVN: r64609", "tree": {"sha": "c99af8765e9410ed162e184496445f198dee0afc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c99af8765e9410ed162e184496445f198dee0afc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10b33028a2a620bc2864fc8f939072599762a1e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b33028a2a620bc2864fc8f939072599762a1e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10b33028a2a620bc2864fc8f939072599762a1e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b33028a2a620bc2864fc8f939072599762a1e2/comments", "author": null, "committer": null, "parents": [{"sha": "04b3370bfd9d028ee9f048ca76bc25bbd2a86c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b3370bfd9d028ee9f048ca76bc25bbd2a86c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b3370bfd9d028ee9f048ca76bc25bbd2a86c88"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "7e3685709923e626010e61fbab3c8c22f233ee6b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b33028a2a620bc2864fc8f939072599762a1e2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b33028a2a620bc2864fc8f939072599762a1e2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=10b33028a2a620bc2864fc8f939072599762a1e2", "patch": "@@ -1,3 +1,16 @@\n+2003-03-20  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/io/FileInputStream.java\n+\t(getChannel): New implementation.\n+\t* java/io/FileOutputStream.java\n+\t(ch): New member variable.\n+\t(getChannel): Implemented.\n+\t* java/io/RandomAccessFile.java\n+\t(RandomAccessFile): Throws FileNotFoundException instead of\n+\tIOException.\n+\t(getChannel): New method.\n+\t(ch): New member variable.\n+\n 2003-03-20  Michael Koch  <konqueror@gmx.de>\n \n \t* java/io/DataOutputStream.java,"}, {"sha": "dcda9d81e64ae2beeb51ecf5ee36614325c6be9d", "filename": "libjava/java/io/FileInputStream.java", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b33028a2a620bc2864fc8f939072599762a1e2/libjava%2Fjava%2Fio%2FFileInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b33028a2a620bc2864fc8f939072599762a1e2/libjava%2Fjava%2Fio%2FFileInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileInputStream.java?ref=10b33028a2a620bc2864fc8f939072599762a1e2", "patch": "@@ -34,6 +34,7 @@\n package java.io;\n \n import java.nio.channels.FileChannel;\n+import gnu.java.nio.FileChannelImpl;\n \n /**\n  * @author Warren Levy <warrenl@cygnus.com>\n@@ -124,6 +125,12 @@ public long skip(long n) throws IOException\n \n   public FileChannel getChannel ()\n   {\n-    return ch;\n+    synchronized (this)\n+      {\n+        if (ch == null)\n+          ch = new FileChannelImpl (fd, false, this);\n+    \n+        return ch;\n+      }\n   }\n }"}, {"sha": "eaf4d9beaa258fd889ae669803069a74a3b67e81", "filename": "libjava/java/io/FileOutputStream.java", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b33028a2a620bc2864fc8f939072599762a1e2/libjava%2Fjava%2Fio%2FFileOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b33028a2a620bc2864fc8f939072599762a1e2/libjava%2Fjava%2Fio%2FFileOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileOutputStream.java?ref=10b33028a2a620bc2864fc8f939072599762a1e2", "patch": "@@ -39,6 +39,7 @@\n package java.io;\n \n import java.nio.channels.FileChannel;\n+import gnu.java.nio.FileChannelImpl;\n \n /**\n  * @author Tom Tromey <tromey@cygnus.com>\n@@ -147,11 +148,18 @@ public void close () throws IOException\n       fd.close();\n   }\n \n-  // Instance variables.\n-  private FileDescriptor fd;\n-\n   public FileChannel getChannel ()\n   {\n-    return null;\n+    synchronized (this)\n+      {\n+        if (ch == null)\n+          ch = new FileChannelImpl (fd, true, this);\n+\n+        return ch;\n+      }\n   }\n+\n+  // Instance variables.\n+  private FileDescriptor fd;\n+  private FileChannel ch;\n }"}, {"sha": "32d26877ed36093a20785a0a7dc2628896a3a200", "filename": "libjava/java/io/RandomAccessFile.java", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b33028a2a620bc2864fc8f939072599762a1e2/libjava%2Fjava%2Fio%2FRandomAccessFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b33028a2a620bc2864fc8f939072599762a1e2/libjava%2Fjava%2Fio%2FRandomAccessFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FRandomAccessFile.java?ref=10b33028a2a620bc2864fc8f939072599762a1e2", "patch": "@@ -38,6 +38,9 @@\n \n package java.io;\n \n+import java.nio.channels.FileChannel;\n+import gnu.java.nio.FileChannelImpl;\n+\n /**\n  * @author Tom Tromey <tromey@cygnus.com>\n  * @date September 25, 1998 \n@@ -78,7 +81,8 @@ public long length () throws IOException\n     return fd.length();\n   }\n \n-  public RandomAccessFile (String fileName, String mode) throws IOException\n+  public RandomAccessFile (String fileName, String mode)\n+    throws FileNotFoundException\n   {\n     int fdmode;\n     if (mode.compareTo (\"r\") == 0)\n@@ -101,7 +105,7 @@ else if (mode.compareTo (\"rw\") == 0)\n     in = new DataInputStream (new FileInputStream (fd));\n   }\n \n-  public RandomAccessFile (File file, String mode) throws IOException\n+  public RandomAccessFile (File file, String mode) throws FileNotFoundException\n   {\n     this (file.getPath(), mode);\n   }\n@@ -276,10 +280,21 @@ public final void writeUTF (String s) throws IOException\n     out.writeUTF(s);\n   }\n \n+  public FileChannel getChannel ()\n+  {\n+    synchronized (this)\n+      {\n+        if (ch == null)\n+          ch = new FileChannelImpl (fd, true, this);\n+\n+\treturn ch;\n+      }\n+  }\n \n   // The underlying file.\n   private FileDescriptor fd;\n   // The corresponding input and output streams.\n   private DataOutputStream out;\n   private DataInputStream in;\n+  private FileChannel ch;\n }"}]}