{"sha": "afd85c1ac4ae0d686477f3e80d3bb08016e92872", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZkODVjMWFjNGFlMGQ2ODY0NzdmM2U4MGQzYmIwODAxNmU5Mjg3Mg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-10-11T22:57:53Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-10-11T22:57:53Z"}, "message": "re PR other/17361 (gcc driver complains about C++ options when assembling)\n\n\n\tPR other/17361\n\t* c-opts.c (permit_fortran_options): Delete/obsolete global variable.\n\t(c_common_init_options): Remove #ifdef CL_F77 code.  Scan command\n\tline options for \"-lang-asm\" and if found allow any of the C-family\n\tfront-end options.\n\t(c_common_handle_option): Remove last use of permit_fortran_options.\n\nFrom-SVN: r88906", "tree": {"sha": "980a15344f27f138adaec49d0e95863c6769d4fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/980a15344f27f138adaec49d0e95863c6769d4fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afd85c1ac4ae0d686477f3e80d3bb08016e92872", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afd85c1ac4ae0d686477f3e80d3bb08016e92872", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afd85c1ac4ae0d686477f3e80d3bb08016e92872", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afd85c1ac4ae0d686477f3e80d3bb08016e92872/comments", "author": null, "committer": null, "parents": [{"sha": "1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "4083910e1d89f0868c88d1f9b9b072475caa0af2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afd85c1ac4ae0d686477f3e80d3bb08016e92872/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afd85c1ac4ae0d686477f3e80d3bb08016e92872/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afd85c1ac4ae0d686477f3e80d3bb08016e92872", "patch": "@@ -1,3 +1,12 @@\n+2004-10-11  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR other/17361\n+\t* c-opts.c (permit_fortran_options): Delete/obsolete global variable.\n+\t(c_common_init_options): Remove #ifdef CL_F77 code.  Scan command\n+\tline options for \"-lang-asm\" and if found allow any of the C-family\n+\tfront-end options.\n+\t(c_common_handle_option): Remove last use of permit_fortran_options.\n+\n 2004-10-11  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (print_operand): Support 'S' format flag."}, {"sha": "82932cec4f3a66ea296f7bf5b1a13d5774f2875f", "filename": "gcc/c-opts.c", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afd85c1ac4ae0d686477f3e80d3bb08016e92872/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afd85c1ac4ae0d686477f3e80d3bb08016e92872/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=afd85c1ac4ae0d686477f3e80d3bb08016e92872", "patch": "@@ -100,9 +100,6 @@ static size_t deferred_count;\n /* Number of deferred options scanned for -include.  */\n static size_t include_cursor;\n \n-/* Permit Fortran front-end options.  */\n-static bool permit_fortran_options;\n-\n static void set_Wimplicit (int);\n static void handle_OPT_d (const char *);\n static void set_std_cxx98 (int);\n@@ -194,10 +191,10 @@ defer_opt (enum opt_code code, const char *arg)\n \n /* Common initialization before parsing options.  */\n unsigned int\n-c_common_init_options (unsigned int argc, const char ** ARG_UNUSED (argv))\n+c_common_init_options (unsigned int argc, const char **argv)\n {\n   static const unsigned int lang_flags[] = {CL_C, CL_ObjC, CL_CXX, CL_ObjCXX};\n-  unsigned int result;\n+  unsigned int i, result;\n \n   /* This is conditionalized only because that is the way the front\n      ends used to do it.  Maybe this should be unconditional?  */\n@@ -230,16 +227,17 @@ c_common_init_options (unsigned int argc, const char ** ARG_UNUSED (argv))\n \n   result = lang_flags[c_language];\n \n-  /* If potentially preprocessing Fortran we have to accept its front\n-     end options since the driver passes most of them through.  */\n-#ifdef CL_F77\n-  if (c_language == clk_c && argc > 2\n-      && !strcmp (argv[2], \"-traditional-cpp\" ))\n+  if (c_language == clk_c)\n     {\n-      permit_fortran_options = true;\n-      result |= CL_F77;\n+      /* If preprocessing assembly language, accept any of the C-family\n+\t front end options since the driver may pass them through.  */\n+      for (i = 1; i < argc; i++)\n+\tif (! strcmp (argv[i], \"-lang-asm\"))\n+\t  {\n+\t    result |= CL_C | CL_ObjC | CL_CXX | CL_ObjCXX;\n+\t    break;\n+\t  }\n     }\n-#endif\n \n   return result;\n }\n@@ -260,7 +258,7 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n     default:\n       if (cl_options[code].flags & (CL_C | CL_CXX | CL_ObjC | CL_ObjCXX))\n \tbreak;\n-      result = permit_fortran_options;\n+      result = 0;\n       break;\n \n     case OPT__output_pch_:"}]}