{"sha": "4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg5N2M1YWFhN2E1ZGI0YzFlY2UyOGVmNjZhY2IzZDVlNDE3ODdiMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-09-09T17:59:29Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-09-09T17:59:29Z"}, "message": "Remove IOR_COMPL_HARD_REG_SET\n\nUse \"x |= ~y\" instead of \"IOR_COMPL_HARD_REG_SET (x, y)\", or just\n\"x | ~y\" if the result is a temporary.\n\n2019-09-09  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* hard-reg-set.h (IOR_COMPL_HARD_REG_SET): Delete.\n\t* config/aarch64/cortex-a57-fma-steering.c (rename_single_chain):\n\tUse \"|~\" instead of IOR_COMPL_HARD_REG_SET.\n\t* config/aarch64/falkor-tag-collision-avoidance.c (init_unavailable):\n\tLikewise.\n\t* ira-build.c (ira_create_object, ira_set_allocno_class): Likewise.\n\t* ira.c (setup_reg_renumber): Likewise.\n\t* lra-assigns.c (find_hard_regno_for_1): Likewise.\n\t* regrename.c (regrename_find_superclass): Likewise.\n\t* reload1.c (find_reg): Likewise.\n\nFrom-SVN: r275533", "tree": {"sha": "fa56ee920dccfe14c219e9c7f229ee84154e46c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa56ee920dccfe14c219e9c7f229ee84154e46c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d15e5131845e2a68513230a624839ef5abcda690", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d15e5131845e2a68513230a624839ef5abcda690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d15e5131845e2a68513230a624839ef5abcda690"}], "stats": {"total": 57, "additions": 26, "deletions": 31}, "files": [{"sha": "5a97cb9e61af341969946dd069bd76337d8ef99b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "patch": "@@ -1,3 +1,16 @@\n+2019-09-09  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* hard-reg-set.h (IOR_COMPL_HARD_REG_SET): Delete.\n+\t* config/aarch64/cortex-a57-fma-steering.c (rename_single_chain):\n+\tUse \"|~\" instead of IOR_COMPL_HARD_REG_SET.\n+\t* config/aarch64/falkor-tag-collision-avoidance.c (init_unavailable):\n+\tLikewise.\n+\t* ira-build.c (ira_create_object, ira_set_allocno_class): Likewise.\n+\t* ira.c (setup_reg_renumber): Likewise.\n+\t* lra-assigns.c (find_hard_regno_for_1): Likewise.\n+\t* regrename.c (regrename_find_superclass): Likewise.\n+\t* reload1.c (find_reg): Likewise.\n+\n 2019-09-09  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* hard-reg-set.h (AND_COMPL_HARD_REG_SET): Delete."}, {"sha": "3e890ad3de6a5b5e4145a8d874149982313b92a8", "filename": "gcc/config/aarch64/cortex-a57-fma-steering.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fconfig%2Faarch64%2Fcortex-a57-fma-steering.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fconfig%2Faarch64%2Fcortex-a57-fma-steering.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fcortex-a57-fma-steering.c?ref=4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "patch": "@@ -267,7 +267,7 @@ rename_single_chain (du_head_p head, HARD_REG_SET *unavailable)\n       if (DEBUG_INSN_P (tmp->insn))\n \tcontinue;\n       n_uses++;\n-      IOR_COMPL_HARD_REG_SET (*unavailable, reg_class_contents[tmp->cl]);\n+      *unavailable |= ~reg_class_contents[tmp->cl];\n       super_class = reg_class_superunion[(int) super_class][(int) tmp->cl];\n     }\n "}, {"sha": "9faed40403c3639486119a392467f2ad7362a60c", "filename": "gcc/config/aarch64/falkor-tag-collision-avoidance.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fconfig%2Faarch64%2Ffalkor-tag-collision-avoidance.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fconfig%2Faarch64%2Ffalkor-tag-collision-avoidance.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Ffalkor-tag-collision-avoidance.c?ref=4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "patch": "@@ -229,7 +229,7 @@ init_unavailable (tag_insn_info *insn_info, tag_map_t &tag_map, du_head_p head,\n       if (DEBUG_INSN_P (tmp->insn))\n \tcontinue;\n \n-      IOR_COMPL_HARD_REG_SET (*unavailable, reg_class_contents[tmp->cl]);\n+      *unavailable |= ~reg_class_contents[tmp->cl];\n       super_class = reg_class_superunion[(int) super_class][(int) tmp->cl];\n     }\n "}, {"sha": "793b8699c36b227e66e72e6b57ad3a29587f66fa", "filename": "gcc/hard-reg-set.h", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fhard-reg-set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fhard-reg-set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhard-reg-set.h?ref=4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "patch": "@@ -126,11 +126,6 @@ struct hard_reg_set_container\n    CLEAR_HARD_REG_SET and SET_HARD_REG_SET.\n    These take just one argument.\n \n-   Also define:\n-   IOR_COMPL_HARD_REG_SET\n-   This takes two arguments TO and FROM; it reads from FROM\n-   and combines its complement bitwise into TO.\n-\n    Also define:\n \n    hard_reg_set_subset_p (X, Y), which returns true if X is a subset of Y.\n@@ -152,8 +147,6 @@ struct hard_reg_set_container\n #define CLEAR_HARD_REG_SET(TO) ((TO) = HARD_CONST (0))\n #define SET_HARD_REG_SET(TO) ((TO) = ~ HARD_CONST (0))\n \n-#define IOR_COMPL_HARD_REG_SET(TO, FROM) ((TO) |= ~ (FROM))\n-\n static inline bool\n hard_reg_set_subset_p (const_hard_reg_set x, const_hard_reg_set y)\n {\n@@ -215,13 +208,6 @@ SET_HARD_REG_SET (HARD_REG_SET &set)\n     set.elts[i] = -1;\n }\n \n-inline void\n-IOR_COMPL_HARD_REG_SET (HARD_REG_SET &to, const_hard_reg_set from)\n-{\n-  for (unsigned int i = 0; i < ARRAY_SIZE (to.elts); ++i)\n-    to.elts[i] |= ~from.elts[i];\n-}\n-\n static inline bool\n hard_reg_set_subset_p (const_hard_reg_set x, const_hard_reg_set y)\n {"}, {"sha": "3170d7d16891a36364ad0fbb1cee3fe272ccc7d5", "filename": "gcc/ira-build.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fira-build.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fira-build.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-build.c?ref=4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "patch": "@@ -458,10 +458,8 @@ ira_create_object (ira_allocno_t a, int subword)\n   OBJECT_NUM_CONFLICTS (obj) = 0;\n   OBJECT_CONFLICT_HARD_REGS (obj) = ira_no_alloc_regs;\n   OBJECT_TOTAL_CONFLICT_HARD_REGS (obj) = ira_no_alloc_regs;\n-  IOR_COMPL_HARD_REG_SET (OBJECT_CONFLICT_HARD_REGS (obj),\n-\t\t\t  reg_class_contents[aclass]);\n-  IOR_COMPL_HARD_REG_SET (OBJECT_TOTAL_CONFLICT_HARD_REGS (obj),\n-\t\t\t  reg_class_contents[aclass]);\n+  OBJECT_CONFLICT_HARD_REGS (obj) |= ~reg_class_contents[aclass];\n+  OBJECT_TOTAL_CONFLICT_HARD_REGS (obj) |= ~reg_class_contents[aclass];\n   OBJECT_MIN (obj) = INT_MAX;\n   OBJECT_MAX (obj) = -1;\n   OBJECT_LIVE_RANGES (obj) = NULL;\n@@ -549,10 +547,8 @@ ira_set_allocno_class (ira_allocno_t a, enum reg_class aclass)\n   ALLOCNO_CLASS (a) = aclass;\n   FOR_EACH_ALLOCNO_OBJECT (a, obj, oi)\n     {\n-      IOR_COMPL_HARD_REG_SET (OBJECT_CONFLICT_HARD_REGS (obj),\n-\t\t\t      reg_class_contents[aclass]);\n-      IOR_COMPL_HARD_REG_SET (OBJECT_TOTAL_CONFLICT_HARD_REGS (obj),\n-\t\t\t      reg_class_contents[aclass]);\n+      OBJECT_CONFLICT_HARD_REGS (obj) |= ~reg_class_contents[aclass];\n+      OBJECT_TOTAL_CONFLICT_HARD_REGS (obj) |= ~reg_class_contents[aclass];\n     }\n }\n "}, {"sha": "344275a24a852461c4596643bb916ea2938a098e", "filename": "gcc/ira.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "patch": "@@ -2370,8 +2370,8 @@ setup_reg_renumber (void)\n \t  for (i = 0; i < nwords; i++)\n \t    {\n \t      obj = ALLOCNO_OBJECT (a, i);\n-\t      IOR_COMPL_HARD_REG_SET (OBJECT_TOTAL_CONFLICT_HARD_REGS (obj),\n-\t\t\t\t      reg_class_contents[pclass]);\n+\t      OBJECT_TOTAL_CONFLICT_HARD_REGS (obj)\n+\t\t|= ~reg_class_contents[pclass];\n \t    }\n \t  if (ALLOCNO_CALLS_CROSSED_NUM (a) != 0\n \t      && ira_hard_reg_set_intersection_p (hard_regno, ALLOCNO_MODE (a),"}, {"sha": "0a34ea921d0f4f014b72a1ca2475936aca73024b", "filename": "gcc/lra-assigns.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Flra-assigns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Flra-assigns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-assigns.c?ref=4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "patch": "@@ -611,7 +611,7 @@ find_hard_regno_for_1 (int regno, int *cost, int try_only_hard_regno,\n       }\n   /* Make sure that all registers in a multi-word pseudo belong to the\n      required class.  */\n-  IOR_COMPL_HARD_REG_SET (conflict_set, reg_class_contents[rclass]);\n+  conflict_set |= ~reg_class_contents[rclass];\n   lra_assert (rclass != NO_REGS);\n   rclass_size = ira_class_hard_regs_num[rclass];\n   best_hard_regno = -1;"}, {"sha": "d83e1e92d2577b7712b83a83115725cf56c79e52", "filename": "gcc/regrename.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "patch": "@@ -441,8 +441,7 @@ regrename_find_superclass (du_head_p head, int *pn_uses,\n       if (DEBUG_INSN_P (tmp->insn))\n \tcontinue;\n       n_uses++;\n-      IOR_COMPL_HARD_REG_SET (*punavailable,\n-\t\t\t      reg_class_contents[tmp->cl]);\n+      *punavailable |= ~reg_class_contents[tmp->cl];\n       super_class\n \t= reg_class_superunion[(int) super_class][(int) tmp->cl];\n     }"}, {"sha": "3c23e6e5eedb85d7367060839381a0e078da8825", "filename": "gcc/reload1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=4897c5aaa7a5db4c1ece28ef66acb3d5e41787b3", "patch": "@@ -1823,8 +1823,9 @@ find_reg (class insn_chain *chain, int order)\n   static int regno_pseudo_regs[FIRST_PSEUDO_REGISTER];\n   static int best_regno_pseudo_regs[FIRST_PSEUDO_REGISTER];\n \n-  not_usable = bad_spill_regs | bad_spill_regs_global;\n-  IOR_COMPL_HARD_REG_SET (not_usable, reg_class_contents[rl->rclass]);\n+  not_usable = (bad_spill_regs\n+\t\t| bad_spill_regs_global\n+\t\t| ~reg_class_contents[rl->rclass]);\n \n   CLEAR_HARD_REG_SET (used_by_other_reload);\n   for (k = 0; k < order; k++)"}]}