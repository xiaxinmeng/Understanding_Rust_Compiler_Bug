{"sha": "51b74457354bdff937b0dc7709112f5f9d412388", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFiNzQ0NTczNTRiZGZmOTM3YjBkYzc3MDkxMTJmNWY5ZDQxMjM4OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-12-01T15:12:52Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-12-01T15:12:52Z"}, "message": "profile-count.h (profile_count::operator<): Use IPA value for comparsion.\n\n\n\t* profile-count.h (profile_count::operator<): Use IPA value for\n\tcomparsion.\n\t(profile_count::operator>): Likewise.\n\t(profile_count::operator<=): Likewise.\n\t(profile_count::operator>=): Likewise.\n\t* predict.c (maybe_hot_count_p): Do not convert to gcov_type.\n\nFrom-SVN: r278885", "tree": {"sha": "68bf46ff923ae479cfcb05008e4783470496b0d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68bf46ff923ae479cfcb05008e4783470496b0d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51b74457354bdff937b0dc7709112f5f9d412388", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51b74457354bdff937b0dc7709112f5f9d412388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51b74457354bdff937b0dc7709112f5f9d412388", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51b74457354bdff937b0dc7709112f5f9d412388/comments", "author": null, "committer": null, "parents": [{"sha": "1f7a540c110a18ab1be7d931f02ccb5784f0a04d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f7a540c110a18ab1be7d931f02ccb5784f0a04d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f7a540c110a18ab1be7d931f02ccb5784f0a04d"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "0b012af497af36da8c2bf588df943eb99e289207", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51b74457354bdff937b0dc7709112f5f9d412388/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51b74457354bdff937b0dc7709112f5f9d412388/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51b74457354bdff937b0dc7709112f5f9d412388", "patch": "@@ -1,3 +1,12 @@\n+2019-11-30  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* profile-count.h (profile_count::operator<): Use IPA value for\n+\tcomparsion.\n+\t(profile_count::operator>): Likewise.\n+\t(profile_count::operator<=): Likewise.\n+\t(profile_count::operator>=): Likewise.\n+\t* predict.c (maybe_hot_count_p): Do not convert to gcov_type.\n+\n 2019-11-30  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-inline.c (compute_max_insns): Return int64_t."}, {"sha": "67f850de17a478c29efb9f0be0dede15be4c986e", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51b74457354bdff937b0dc7709112f5f9d412388/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51b74457354bdff937b0dc7709112f5f9d412388/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=51b74457354bdff937b0dc7709112f5f9d412388", "patch": "@@ -184,7 +184,7 @@ maybe_hot_count_p (struct function *fun, profile_count count)\n   /* Code executed at most once is not hot.  */\n   if (count <= MAX (profile_info ? profile_info->runs : 1, 1))\n     return false;\n-  return (count.to_gcov_type () >= get_hot_bb_threshold ());\n+  return (count >= get_hot_bb_threshold ());\n }\n \n /* Return true if basic block BB of function FUN can be CPU intensive"}, {"sha": "96145d51f2cf208e1a23413643a9384075d0adb5", "filename": "gcc/profile-count.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51b74457354bdff937b0dc7709112f5f9d412388/gcc%2Fprofile-count.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51b74457354bdff937b0dc7709112f5f9d412388/gcc%2Fprofile-count.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile-count.h?ref=51b74457354bdff937b0dc7709112f5f9d412388", "patch": "@@ -930,14 +930,14 @@ struct GTY(()) profile_count\n     {\n       gcc_checking_assert (ipa_p ());\n       gcc_checking_assert (other >= 0);\n-      return initialized_p () && m_val < (uint64_t) other;\n+      return ipa ().initialized_p () && ipa ().m_val < (uint64_t) other;\n     }\n \n   bool operator> (const gcov_type other) const\n     {\n       gcc_checking_assert (ipa_p ());\n       gcc_checking_assert (other >= 0);\n-      return initialized_p () && m_val > (uint64_t) other;\n+      return ipa ().initialized_p () && ipa ().m_val > (uint64_t) other;\n     }\n \n   bool operator<= (const profile_count &other) const\n@@ -968,14 +968,14 @@ struct GTY(()) profile_count\n     {\n       gcc_checking_assert (ipa_p ());\n       gcc_checking_assert (other >= 0);\n-      return initialized_p () && m_val <= (uint64_t) other;\n+      return ipa ().initialized_p () && ipa ().m_val <= (uint64_t) other;\n     }\n \n   bool operator>= (const gcov_type other) const\n     {\n       gcc_checking_assert (ipa_p ());\n       gcc_checking_assert (other >= 0);\n-      return initialized_p () && m_val >= (uint64_t) other;\n+      return ipa ().initialized_p () && ipa ().m_val >= (uint64_t) other;\n     }\n \n   /* Return true when value is not zero and can be used for scaling. "}]}