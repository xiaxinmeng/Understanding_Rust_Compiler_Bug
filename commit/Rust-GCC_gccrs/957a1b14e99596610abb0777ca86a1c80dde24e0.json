{"sha": "957a1b14e99596610abb0777ca86a1c80dde24e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU3YTFiMTRlOTk1OTY2MTBhYmIwNzc3Y2E4NmExYzgwZGRlMjRlMA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@pc30.home", "date": "2020-03-01T16:15:28Z"}, "committer": {"name": "Paul Thomas", "email": "pault@pc30.home", "date": "2020-03-01T16:15:28Z"}, "message": "Patch and ChangeLogs for PR92976", "tree": {"sha": "1e0fb5c91094e6f4c4f63b4260bc391845fbd096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e0fb5c91094e6f4c4f63b4260bc391845fbd096"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/957a1b14e99596610abb0777ca86a1c80dde24e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/957a1b14e99596610abb0777ca86a1c80dde24e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/957a1b14e99596610abb0777ca86a1c80dde24e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/957a1b14e99596610abb0777ca86a1c80dde24e0/comments", "author": null, "committer": null, "parents": [{"sha": "12caab4fb19dcbea25a140652da4f5ca439af7c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12caab4fb19dcbea25a140652da4f5ca439af7c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12caab4fb19dcbea25a140652da4f5ca439af7c5"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "1256b95ae75c0055874cd3085c79fdb569f93920", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957a1b14e99596610abb0777ca86a1c80dde24e0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957a1b14e99596610abb0777ca86a1c80dde24e0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=957a1b14e99596610abb0777ca86a1c80dde24e0", "patch": "@@ -1,3 +1,9 @@\n+2020-03-01  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/92976\n+\t* match.c (select_type_set_tmp): If the selector array spec has\n+\texplicit bounds, make the temporary's bounds deferred.\n+\n 2020-03-01  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/92959"}, {"sha": "753a5f1f1a4995f097c04de001ba5dad507b79b2", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957a1b14e99596610abb0777ca86a1c80dde24e0/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957a1b14e99596610abb0777ca86a1c80dde24e0/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=957a1b14e99596610abb0777ca86a1c80dde24e0", "patch": "@@ -6327,8 +6327,14 @@ select_type_set_tmp (gfc_typespec *ts)\n \t\t    = CLASS_DATA (selector)->attr.dimension;\n \t      sym->attr.codimension\n \t\t    = CLASS_DATA (selector)->attr.codimension;\n-\t      sym->as\n-\t\t    = gfc_copy_array_spec (CLASS_DATA (selector)->as);\n+\t      if (CLASS_DATA (selector)->as->type != AS_EXPLICIT)\n+\t\tsym->as = gfc_copy_array_spec (CLASS_DATA (selector)->as);\n+\t      else\n+\t\t{\n+\t\t  sym->as = gfc_get_array_spec();\n+\t\t  sym->as->rank = CLASS_DATA (selector)->as->rank;\n+\t\t  sym->as->type = AS_DEFERRED;\n+\t\t}\n \t    }\n \t}\n "}, {"sha": "fd3eeba994610dd0e6a5db47ff38c30fea6544c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957a1b14e99596610abb0777ca86a1c80dde24e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957a1b14e99596610abb0777ca86a1c80dde24e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=957a1b14e99596610abb0777ca86a1c80dde24e0", "patch": "@@ -1,3 +1,8 @@\n+2020-03-01  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/92976\n+\t* gfortran.dg/select_type_48.f90 : New test.\n+\n 2020-03-01  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/92959"}, {"sha": "d9ad01ce4f605a1a77fda7e799c8d08f1d6f2caf", "filename": "gcc/testsuite/gfortran.dg/select_type_48.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957a1b14e99596610abb0777ca86a1c80dde24e0/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_48.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957a1b14e99596610abb0777ca86a1c80dde24e0/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_48.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_48.f90?ref=957a1b14e99596610abb0777ca86a1c80dde24e0", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR92976, in which the TYPE IS statement caused an ICE\n+! because of the explicit bounds of 'x'.\n+!\n+! Contributed by Gerhard Steinmetz  <gscfq@t-online.de>\n+!\n+program p\n+   type t\n+      integer :: i\n+   end type\n+   class(t), allocatable :: c(:)\n+   allocate (c, source = [t(1111),t(2222),t(3333)])\n+   call s(c)\n+   if (sum (c%i) .ne. 3333) stop 1\n+contains\n+   subroutine s(x)\n+      class(t) :: x(2)\n+      select type (x)\n+! ICE as compiler attempted to assign descriptor to an array\n+         type is (t)\n+            x%i = 0\n+! Make sure that bounds are correctly translated.\n+            call counter (x)\n+      end select\n+   end\n+   subroutine counter (arg)\n+     type(t) :: arg(:)\n+     if (size (arg, 1) .ne. 2) stop 2\n+   end\n+end"}]}