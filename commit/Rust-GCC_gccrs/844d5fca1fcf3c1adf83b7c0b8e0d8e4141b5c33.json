{"sha": "844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ0ZDVmY2ExZmNmM2MxYWRmODNiN2MwYjhlMGQ4ZTQxNDFiNWMzMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-04T14:07:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-04T14:07:48Z"}, "message": "re PR tree-optimization/45991 (ICE: verify_stmts failed: Invalid address operand in in TARGET_MEM_REF. with -fstrict-overflow)\n\n2010-11-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/45991\n\t* gimplify.c (force_gimple_operand_1): Use the provded test\n\tfunction in the initial test.\n\n\t* gcc.dg/pr45991.c: New testcase.\n\nFrom-SVN: r166312", "tree": {"sha": "9dfb1a2c2186d79896700632d2853ce4acacea9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dfb1a2c2186d79896700632d2853ce4acacea9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9fcdd9fdfccb59cf22574bb091575f9e5b38ff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9fcdd9fdfccb59cf22574bb091575f9e5b38ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9fcdd9fdfccb59cf22574bb091575f9e5b38ff2"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "705c9ff0a452f8a70b0496d44fcf5b669e52fb66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33", "patch": "@@ -1,3 +1,9 @@\n+2010-11-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45991\n+\t* gimplify.c (force_gimple_operand_1): Use the provded test\n+\tfunction in the initial test.\n+\n 2010-11-04  Jeff Law  <law@redhat.com>\n \n \t* ira.c (validate_equiv_mem): Remove code to avoid invalidation"}, {"sha": "f4903499717758bf17715de84bafaf9e65b202c0", "filename": "gcc/gimplify.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33", "patch": "@@ -8047,7 +8047,11 @@ force_gimple_operand_1 (tree expr, gimple_seq *stmts,\n \n   *stmts = NULL;\n \n-  if (is_gimple_val (expr))\n+  /* gimple_test_f might be more strict than is_gimple_val, make\n+     sure we pass both.  Just checking gimple_test_f doesn't work\n+     because most gimple predicates do not work recursively.  */\n+  if (is_gimple_val (expr)\n+      && (*gimple_test_f) (expr))\n     return expr;\n \n   push_gimplify_context (&gctx);"}, {"sha": "c5ce28be1e3f5574e914e4905a9f2a7c42046edf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33", "patch": "@@ -1,3 +1,8 @@\n+2010-11-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45991\n+\t* gcc.dg/pr45991.c: New testcase.\n+\n 2010-11-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/46154"}, {"sha": "eefce4429e1b1360729cb424a9358adb64d83743", "filename": "gcc/testsuite/gcc.dg/pr45991.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45991.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45991.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45991.c?ref=844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fstrict-overflow\" } */\n+\n+struct S\n+{\n+  int i;\n+};\n+\n+char A[64];\n+\n+void foo (char **dst, int i)\n+{\n+  char *p = A + 16;\n+  while (i--)\n+    {\n+      int b = ((struct S *) (&p[i * 16 + 4]))->i;\n+      char *c = A + i * 16;\n+      dst[i] = c + b;\n+    }\n+}"}]}