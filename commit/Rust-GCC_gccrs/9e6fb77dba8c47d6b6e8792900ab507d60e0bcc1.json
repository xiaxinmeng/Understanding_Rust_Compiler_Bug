{"sha": "9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU2ZmI3N2RiYThjNDdkNmI2ZTg3OTI5MDBhYjUwN2Q2MGUwYmNjMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-05-17T15:29:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-05-17T15:29:18Z"}, "message": "re PR tree-optimization/27548 (ICE: SSA corruption - Conflict across an abnormal edge)\n\n\tPR tree-optimization/27548\n\t* g++.dg/tree-ssa/pr27548.C: New test.\n\nFrom-SVN: r113864", "tree": {"sha": "43ee9d6a768ef646c72ef838b78dc6fb97e69d11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43ee9d6a768ef646c72ef838b78dc6fb97e69d11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "3fe62f4c58f748cc0397616cf5d827da006b5195", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1", "patch": "@@ -1,3 +1,8 @@\n+2006-05-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/27548\n+\t* g++.dg/tree-ssa/pr27548.C: New test.\n+\n 2006-05-17  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/26551"}, {"sha": "d23b959a5997940fca1add251fb8ef6964174753", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr27548.C", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27548.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27548.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27548.C?ref=9e6fb77dba8c47d6b6e8792900ab507d60e0bcc1", "patch": "@@ -0,0 +1,60 @@\n+// PR tree-optimization/27548\n+// { dg-do compile }\n+// { dg-options \"-O1\" }\n+\n+namespace Gambit\n+{\n+  template < class T > class Array\n+  {\n+  protected:int mindex, maxdex;\n+    T *data;\n+    int InsertAt (const T & t, int n)\n+    {\n+      T *new_data = new T[++this->maxdex - this->mindex + 1] - this->mindex;\n+      int i;\n+      for (i = this->mindex; i <= n - 1; i++)\n+\t  new_data[i] = this->data[i];\n+\tnew_data[i++] = t;\n+    }\n+  public:   Array (unsigned int len = 0):mindex (1), maxdex (len),\n+      data ((len) ? new T[len] -\n+\t    1 : 0)\n+    {\n+    }\n+    virtual ~ Array ()\n+    {\n+      if (maxdex >= mindex)\n+\tdelete[](data + mindex);\n+    }\n+    const T & operator[] (int index) const\n+    {\n+    }\n+    int Append (const T & t)\n+    {\n+      return InsertAt (t, this->maxdex + 1);\n+    }\n+  };\n+}\n+\n+class gIndexOdometer\n+{\n+private:Gambit::Array < int >MinIndices;\n+    Gambit::Array < int >CurIndices;\n+    gIndexOdometer (const Gambit::Array < int >, const Gambit::Array < int >);\n+  void SetIndex (const int &, const int &);\n+  int NoIndices () const;\n+  gIndexOdometer AfterExcisionOf (int &) const;\n+};\n+gIndexOdometer\n+gIndexOdometer::AfterExcisionOf (int &to_be_zapped) const\n+{\n+  Gambit::Array < int >NewMins, NewMaxs;\n+  int i;\n+  for (i = 1; i <= NoIndices (); i++)\n+    {\n+      NewMins.Append (MinIndices[i]);\n+    }\n+  gIndexOdometer NewOdo (NewMins, NewMaxs);\n+  for (i = 1; i < to_be_zapped; i++)\n+    NewOdo.SetIndex (i, CurIndices[i]);\n+}"}]}