{"sha": "2ad3adf102641812fe09742f545f8565bebd74ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFkM2FkZjEwMjY0MTgxMmZlMDk3NDJmNTQ1Zjg1NjViZWJkNzRhYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-13T19:21:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-13T19:21:59Z"}, "message": "re PR middle-end/69156 (gcc.dg/pr59630.c: ICE: verify_gimple failed: non-trivial conversion at assignment with -fno-tree-ccp)\n\n\tPR tree-optimization/69156\n\t* gimple.c (validate_type): Removed.\n\t(gimple_builtin_call_types_compatible_p): Use\n\tuseless_type_conversion_p instead of validate_type.\n\t* value-prof.c (gimple_stringop_fixed_value): Fold\n\ticall_size to correct type.\n\n\t* gcc.dg/pr69156.c: New test.\n\nFrom-SVN: r232342", "tree": {"sha": "5cf0ee272a52d3041c573de778920af037820ca4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cf0ee272a52d3041c573de778920af037820ca4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ad3adf102641812fe09742f545f8565bebd74ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad3adf102641812fe09742f545f8565bebd74ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad3adf102641812fe09742f545f8565bebd74ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad3adf102641812fe09742f545f8565bebd74ac/comments", "author": null, "committer": null, "parents": [{"sha": "260936f29d63bb0cebfd624804c915e528aea575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260936f29d63bb0cebfd624804c915e528aea575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/260936f29d63bb0cebfd624804c915e528aea575"}], "stats": {"total": 82, "additions": 45, "deletions": 37}, "files": [{"sha": "c6ae288aa809a9abae9ce63774b4cbbd4ac9fd06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad3adf102641812fe09742f545f8565bebd74ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad3adf102641812fe09742f545f8565bebd74ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ad3adf102641812fe09742f545f8565bebd74ac", "patch": "@@ -1,3 +1,12 @@\n+2016-01-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/69156\n+\t* gimple.c (validate_type): Removed.\n+\t(gimple_builtin_call_types_compatible_p): Use\n+\tuseless_type_conversion_p instead of validate_type.\n+\t* value-prof.c (gimple_stringop_fixed_value): Fold\n+\ticall_size to correct type.\n+\n 2016-01-13  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/extend.texi (__atomic Builtins): Clarify compare_exchange\n@@ -47,7 +56,7 @@\n \t* config/arm/arm-arches.def: Remove spurious whitespace in \"armv8.1-a\"\n \tand \"armv8.1-a+crc\" entries.\n \n-2016-01-13  Alexander Fomin <alexander.fomin@intel.com>\n+2016-01-13  Alexander Fomin  <alexander.fomin@intel.com>\n \n \tPR target/69228\n \t* config/i386/sse.md (define_expand \"avx512pf_gatherpf<mode>sf\"):\n@@ -97,7 +106,7 @@\n \t(compute_path_counts): Only do count adjustment when it's really\n \tneeded.\n \n-2016-01-12  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-12  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi (Spec Files): Move section down in file, past\n \tall command-line option descriptions.\n@@ -111,7 +120,7 @@\n \t(walk_type): Likewise.\n \t(write_func_for_structure): Likewise.\n \n-2016-01-12  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-12  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi (Option Summary) Move -no-canonical-prefixes to\n \tDirectory Options, and -specs= to Overall Options.\n@@ -138,7 +147,7 @@\n \t* tree-vrp.c (adjust_range_with_scev): Check overflow in range\n \tinformation computed for expression \"init + nit * step\".\n \n-2016-01-12  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-12  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi (Invoking GCC): Copy-edit.  Incorporate information\n \tabout name of GCC executable.  Remove deleted node from menu.\n@@ -215,7 +224,7 @@\n \tfor permuted strided SLP loads and do not spuriously assign\n \tto SLP_TREE_VEC_STMTS.\n \n-2016-01-12  Andris Pavenis <andris.pavenis@iki.fi>\n+2016-01-12  Andris Pavenis  <andris.pavenis@iki.fi>\n \n \t* config/i386/djgpp.h (PREFERRED_DEBUGGING_TYPE): Define to DWARF2\n \t(TARGET_ASM_OUTPUT_IDENT): Define to default_asm_output_ident_directive\n@@ -361,7 +370,7 @@\n \t* ifcvt.c (bb_ok_for_noce_convert_multiple_sets): Limit number of\n \tconditionl moves.\n \n-2016-01-11  Alexandre Oliva <aoliva@redhat.com>\n+2016-01-11  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR bootstrap/69123\n \t* var-tracking.c (drop_overlapping_mem_locs): Operate on all\n@@ -586,7 +595,7 @@\n \tdepending on frame_pointer_needed before remaining integer and SSE\n \tregisters are saved.\n \n-2016-01-07  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-07  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR 1078\n \t* doc/extend.texi (Nvidia PDX Function Attributes): New section.\n@@ -662,7 +671,7 @@\n \tEXPR instead of ARG.\n \t* ubsan.h (ubsan_instrument_float_cast): Adjust declaration.\n \n-2016-01-05  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-05  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR 1078\n \t* doc/extend.texi (RL78 Variable Attributes): New section.\n@@ -702,19 +711,19 @@\n \t* config/i386/sse.md: Replace xm with xBm in plusminus and\n \tany_logic patterns.\n \n-2016-01-05  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-05  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR 1078\n \t* doc/extend.texi (V850 Function Attributes): New section.\n \t(V850 Variable Attributes): New section.\n \n-2016-01-05  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-05  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR 1078\n \t* doc/extend.texi (MicroBlaze Function Attributes): Document\n \tinterrupt_handler and fast_interrupt attributes.\n \n-2016-01-05  Sergei Trofimovich <siarheit@google.com>\n+2016-01-05  Sergei Trofimovich  <siarheit@google.com>\n \n \tPR other/60465\n \t* config/ia64/ia64.c (ia64_expand_load_address): Use gprel64\n@@ -813,7 +822,7 @@\n \t* doc/install.texi (--with-multilib-list): Describe the meaning of the\n \toption for arm*-*-* targets.\n \n-2016-01-03  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-03  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/extend.texi (Common Function Attributes): Move docs for\n \tMSP430-specific attributes to....\n@@ -823,7 +832,7 @@\n \tentries and add a cross-reference to the corresponding function\n \tattribute docs.\n \n-2016-01-03  Vladim\u00edr \u010cun\u00e1t <vcunat@gmail.com>\n+2016-01-03  Vladim\u00edr \u010cun\u00e1t  <vcunat@gmail.com>\n \n \t* doc/invoke.texi (RS/6000 and PowerPC Options): Fix\n \t-finite-math typo."}, {"sha": "ff3c68a47febb652a8f1985a88d36b2c04fde9cf", "filename": "gcc/gimple.c", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad3adf102641812fe09742f545f8565bebd74ac/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad3adf102641812fe09742f545f8565bebd74ac/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=2ad3adf102641812fe09742f545f8565bebd74ac", "patch": "@@ -2445,24 +2445,6 @@ gimple_ior_addresses_taken (bitmap addresses_taken, gimple *stmt)\n }\n \n \n-/* Return true if TYPE1 and TYPE2 are compatible enough for builtin\n-   processing.  */\n-\n-static bool\n-validate_type (tree type1, tree type2)\n-{\n-  if (INTEGRAL_TYPE_P (type1)\n-      && INTEGRAL_TYPE_P (type2))\n-    ;\n-  else if (POINTER_TYPE_P (type1)\n-\t   && POINTER_TYPE_P (type2))\n-    ;\n-  else if (TREE_CODE (type1)\n-\t   != TREE_CODE (type2))\n-    return false;\n-  return true;\n-}\n-\n /* Return true when STMTs arguments and return value match those of FNDECL,\n    a decl of a builtin function.  */\n \n@@ -2473,7 +2455,8 @@ gimple_builtin_call_types_compatible_p (const gimple *stmt, tree fndecl)\n \n   tree ret = gimple_call_lhs (stmt);\n   if (ret\n-      && !validate_type (TREE_TYPE (ret), TREE_TYPE (TREE_TYPE (fndecl))))\n+      && !useless_type_conversion_p (TREE_TYPE (ret),\n+\t\t\t\t     TREE_TYPE (TREE_TYPE (fndecl))))\n     return false;\n \n   tree targs = TYPE_ARG_TYPES (TREE_TYPE (fndecl));\n@@ -2484,7 +2467,7 @@ gimple_builtin_call_types_compatible_p (const gimple *stmt, tree fndecl)\n       if (!targs)\n \treturn true;\n       tree arg = gimple_call_arg (stmt, i);\n-      if (!validate_type (TREE_TYPE (arg), TREE_VALUE (targs)))\n+      if (!useless_type_conversion_p (TREE_VALUE (targs), TREE_TYPE (arg)))\n \treturn false;\n       targs = TREE_CHAIN (targs);\n     }"}, {"sha": "dff8d6988dc103f69dfd8f044b65a714f9bed8fb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad3adf102641812fe09742f545f8565bebd74ac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad3adf102641812fe09742f545f8565bebd74ac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ad3adf102641812fe09742f545f8565bebd74ac", "patch": "@@ -1,3 +1,8 @@\n+2016-01-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/69156\n+\t* gcc.dg/pr69156.c: New test.\n+\n 2016-01-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/pr69225-7.c: New test.\n@@ -19,7 +24,7 @@\n \tPR tree-optimization/69169\n \t* gcc.dg/pr69169.c: New test.\n \n-2016-01-13  Alexander Fomin <alexander.fomin@intel.com>\n+2016-01-13  Alexander Fomin  <alexander.fomin@intel.com>\n \n \tPR target/69228\n \t* gcc.target/i386/avx512pf-vscatterpf0dpd-1.c: Adjust.\n@@ -250,7 +255,7 @@\n \tfor ix86 targets.\n \t* gcc.dg/ifcvt-5.c: New test.\n \n-2016-01-11  Alexandre Oliva <aoliva@redhat.com>\n+2016-01-11  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR bootstrap/69123\n \t* g++.dg/pr69123.C: New.\n@@ -408,7 +413,7 @@\n \t* g++.dg/pr66655_1.cc: Test support file.\n \t* g++.dg/pr66655.h: Test header file.\n \n-2016-01-07  Dominique d'Humieres <dominiq@lps.ens.fr>\n+2016-01-07  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR fortran/66680\n \tgfortran.dg/gomp/pr66680.f90: New test."}, {"sha": "b22aaec4706fa2e8fc2b9df957bdf3d5872dc3a2", "filename": "gcc/testsuite/gcc.dg/pr69156.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad3adf102641812fe09742f545f8565bebd74ac/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69156.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad3adf102641812fe09742f545f8565bebd74ac/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69156.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69156.c?ref=2ad3adf102641812fe09742f545f8565bebd74ac", "patch": "@@ -0,0 +1,10 @@\n+/* PR tree-optimization/69156 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fno-tree-ccp\" } */\n+\n+_Bool\n+foo ()\n+{\n+  _Bool (*f) () = __builtin_abs;\t/* { dg-warning \"initialization from incompatible pointer type\" } */\n+  return f (0);\n+}"}, {"sha": "f9574b679bd6e3dcefaec2d806f70be1530c9386", "filename": "gcc/value-prof.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad3adf102641812fe09742f545f8565bebd74ac/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad3adf102641812fe09742f545f8565bebd74ac/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=2ad3adf102641812fe09742f545f8565bebd74ac", "patch": "@@ -1697,7 +1697,8 @@ gimple_stringop_fixed_value (gcall *vcall_stmt, tree icall_size, int prob,\n   gimple_set_vuse (vcall_stmt, NULL);\n   update_stmt (vcall_stmt);\n   icall_stmt = as_a <gcall *> (gimple_copy (vcall_stmt));\n-  gimple_call_set_arg (icall_stmt, size_arg, icall_size);\n+  gimple_call_set_arg (icall_stmt, size_arg,\n+\t\t       fold_convert (optype, icall_size));\n   gsi_insert_before (&gsi, icall_stmt, GSI_SAME_STMT);\n \n   /* Fix CFG. */"}]}