{"sha": "6791489ee5214b0181aa22adc250cbbde1897a5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc5MTQ4OWVlNTIxNGIwMTgxYWEyMmFkYzI1MGNiYmRlMTg5N2E1Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-05-03T12:40:10Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-05-03T12:40:10Z"}, "message": "Define std::remove_cvref and std::remove_cvref_t for C++2a\n\nAlso define __remove_cvref_t for internal use before C++2a.\n\n\t* include/std/any (any_cast): Use __remove_cvref_t.\n\t* include/std/tuple (__make_tuple): Likewise.\n\t* include/std/type_traits (__remove_cvref_t): Define.\n\t(__result_of_memobj, __result_of_memfun): Use __remove_cvref_t.\n\t[__cplusplus > 201703L] (remove_cvref, remove_cvref_t): Define.\n\t* include/std/variant (__erased_hash): Use __remove_cvref_t.\n\nFrom-SVN: r259887", "tree": {"sha": "71732d1991fd72acfd2525d9c0867410fa7182c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71732d1991fd72acfd2525d9c0867410fa7182c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6791489ee5214b0181aa22adc250cbbde1897a5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6791489ee5214b0181aa22adc250cbbde1897a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6791489ee5214b0181aa22adc250cbbde1897a5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6791489ee5214b0181aa22adc250cbbde1897a5c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31aac34486dca5948d39570ca5b9930307d52ad8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31aac34486dca5948d39570ca5b9930307d52ad8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31aac34486dca5948d39570ca5b9930307d52ad8"}], "stats": {"total": 45, "additions": 33, "deletions": 12}, "files": [{"sha": "692a46869fc24b39f2d81ea2b1ebe45dc9c5193d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6791489ee5214b0181aa22adc250cbbde1897a5c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6791489ee5214b0181aa22adc250cbbde1897a5c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6791489ee5214b0181aa22adc250cbbde1897a5c", "patch": "@@ -1,3 +1,12 @@\n+2018-05-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/any (any_cast): Use __remove_cvref_t.\n+\t* include/std/tuple (__make_tuple): Likewise.\n+\t* include/std/type_traits (__remove_cvref_t): Define.\n+\t(__result_of_memobj, __result_of_memfun): Use __remove_cvref_t.\n+\t[__cplusplus > 201703L] (remove_cvref, remove_cvref_t): Define.\n+\t* include/std/variant (__erased_hash): Use __remove_cvref_t.\n+\n 2018-05-02  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/bits/deque.tcc (deque<>::_M_assign_aux): Cast to void to"}, {"sha": "11b59d6d575f29e0191dcad502294cf39eb898a8", "filename": "libstdc++-v3/include/std/any", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6791489ee5214b0181aa22adc250cbbde1897a5c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6791489ee5214b0181aa22adc250cbbde1897a5c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fany?ref=6791489ee5214b0181aa22adc250cbbde1897a5c", "patch": "@@ -451,7 +451,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _ValueType>\n     inline _ValueType any_cast(const any& __any)\n     {\n-      using _Up = remove_cv_t<remove_reference_t<_ValueType>>;\n+      using _Up = __remove_cvref_t<_ValueType>;\n       static_assert(any::__is_valid_cast<_ValueType>(),\n \t  \"Template argument must be a reference or CopyConstructible type\");\n       static_assert(is_constructible_v<_ValueType, const _Up&>,\n@@ -477,7 +477,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _ValueType>\n     inline _ValueType any_cast(any& __any)\n     {\n-      using _Up = remove_cv_t<remove_reference_t<_ValueType>>;\n+      using _Up = __remove_cvref_t<_ValueType>;\n       static_assert(any::__is_valid_cast<_ValueType>(),\n \t  \"Template argument must be a reference or CopyConstructible type\");\n       static_assert(is_constructible_v<_ValueType, _Up&>,\n@@ -491,7 +491,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _ValueType>\n     inline _ValueType any_cast(any&& __any)\n     {\n-      using _Up = remove_cv_t<remove_reference_t<_ValueType>>;\n+      using _Up = __remove_cvref_t<_ValueType>;\n       static_assert(any::__is_valid_cast<_ValueType>(),\n \t  \"Template argument must be a reference or CopyConstructible type\");\n       static_assert(is_constructible_v<_ValueType, _Up>,"}, {"sha": "16f69220abbed7fa78c5513c400c435a12e9efd3", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6791489ee5214b0181aa22adc250cbbde1897a5c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6791489ee5214b0181aa22adc250cbbde1897a5c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=6791489ee5214b0181aa22adc250cbbde1897a5c", "patch": "@@ -1499,8 +1499,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // Returns the std::tuple equivalent of a tuple-like type.\n   template<typename _Tuple>\n     struct __make_tuple\n-    : public __do_make_tuple<typename std::remove_cv\n-            <typename std::remove_reference<_Tuple>::type>::type>\n+    : public __do_make_tuple<__remove_cvref_t<_Tuple>>\n     { };\n \n   // Combines several std::tuple's into a single one."}, {"sha": "7c0ba727511055d248431645e476da3ac0d5c4fd", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6791489ee5214b0181aa22adc250cbbde1897a5c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6791489ee5214b0181aa22adc250cbbde1897a5c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=6791489ee5214b0181aa22adc250cbbde1897a5c", "patch": "@@ -2092,6 +2092,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return __declval<_Tp>(0);\n     }\n \n+  // __remove_cvref_t (std::remove_cvref_t for C++11).\n+  template<typename _Tp>\n+    using __remove_cvref_t\n+     = typename remove_cv<typename remove_reference<_Tp>::type>::type;\n+\n   /// result_of\n   template<typename _Signature>\n     class result_of;\n@@ -2193,8 +2198,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Res, typename _Class, typename _Arg>\n     struct __result_of_memobj<_Res _Class::*, _Arg>\n     {\n-      typedef typename remove_cv<typename remove_reference<\n-        _Arg>::type>::type _Argval;\n+      typedef __remove_cvref_t<_Arg> _Argval;\n       typedef _Res _Class::* _MemPtr;\n       typedef typename conditional<__or_<is_same<_Argval, _Class>,\n         is_base_of<_Class, _Argval>>::value,\n@@ -2209,8 +2213,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Res, typename _Class, typename _Arg, typename... _Args>\n     struct __result_of_memfun<_Res _Class::*, _Arg, _Args...>\n     {\n-      typedef typename remove_cv<typename remove_reference<\n-        _Arg>::type>::type _Argval;\n+      typedef __remove_cvref_t<_Arg> _Argval;\n       typedef _Res _Class::* _MemPtr;\n       typedef typename conditional<__or_<is_same<_Argval, _Class>,\n         is_base_of<_Class, _Argval>>::value,\n@@ -2399,8 +2402,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // Internal type trait that allows us to sfinae-protect tuple_cat.\n   template<typename _Tp>\n     struct __is_tuple_like\n-    : public __is_tuple_like_impl<typename remove_cv<\n-      typename remove_reference<_Tp>::type>::type>::type\n+    : public __is_tuple_like_impl<__remove_cvref_t<_Tp>>::type\n     { };\n \n   template<typename _Tp>\n@@ -2942,6 +2944,17 @@ template <typename _From, typename _To>\n     big    = __ORDER_BIG_ENDIAN__,\n     native = __BYTE_ORDER__\n   };\n+\n+  /// Remove references and cv-qualifiers.\n+  template<typename _Tp>\n+    struct remove_cvref\n+    {\n+      using type = __remove_cvref_t<_Tp>;\n+    };\n+\n+  template<typename _Tp>\n+    using remove_cvref_t = __remove_cvref_t<_Tp>;\n+\n #endif // C++2a\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "f64c037a51406b050d2c339e7bc94399d64f9a8d", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6791489ee5214b0181aa22adc250cbbde1897a5c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6791489ee5214b0181aa22adc250cbbde1897a5c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=6791489ee5214b0181aa22adc250cbbde1897a5c", "patch": "@@ -289,7 +289,7 @@ namespace __variant\n     size_t\n     __erased_hash(void* __t)\n     {\n-      return std::hash<remove_cv_t<remove_reference_t<_Tp>>>{}(\n+      return std::hash<__remove_cvref_t<_Tp>>{}(\n \t  __variant::__ref_cast<_Tp>(__t));\n     }\n "}]}