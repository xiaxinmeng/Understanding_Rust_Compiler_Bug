{"sha": "7dc4605144fe5d8dbf6ad7d2610b6300287bd86a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RjNDYwNTE0NGZlNWQ4ZGJmNmFkN2QyNjEwYjYzMDAyODdiZDg2YQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-12-10T10:39:20Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-12-10T10:39:20Z"}, "message": "* ChangeLog: Fix my last ChangeLog entry.\n\nFrom-SVN: r130739", "tree": {"sha": "9f318c7393873939beb535d5be6a1c0330e20e12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f318c7393873939beb535d5be6a1c0330e20e12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dc4605144fe5d8dbf6ad7d2610b6300287bd86a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc4605144fe5d8dbf6ad7d2610b6300287bd86a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dc4605144fe5d8dbf6ad7d2610b6300287bd86a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc4605144fe5d8dbf6ad7d2610b6300287bd86a/comments", "author": null, "committer": null, "parents": [{"sha": "32070c7bf2f849e7e03e14d68dc8566c967f4ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32070c7bf2f849e7e03e14d68dc8566c967f4ea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32070c7bf2f849e7e03e14d68dc8566c967f4ea3"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "9d6a077ff7d31869616727bd04caa8ca655b39d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc4605144fe5d8dbf6ad7d2610b6300287bd86a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc4605144fe5d8dbf6ad7d2610b6300287bd86a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7dc4605144fe5d8dbf6ad7d2610b6300287bd86a", "patch": "@@ -5,10 +5,11 @@\n \n 2007-12-10 Uros Bizjak <ubizjak@gmail.com>\n \n-\t* config/i386/i386.c (ix86_function_regparm): Ditto. Use REGPARM_MAX\n-\tto check that no regparm hard register is taken by a fixed register\n-\tvariable. Check up to and including DI_REG when adjusting regparm\n-\tvalue due to fixed regs usage.\n+\t* config/i386/i386.c (ix86_function_regparm): Do not check global_regs\n+\tarray, registers that are members of global_regs are also members of\n+\tfixed_regs array.  Use REGPARM_MAX to check that no regparm hard\n+\tregister is taken by a fixed register variable.  Check up to and\n+\tincluding DI_REG when adjusting regparm value due to fixed regs usage.\n \t(rep_prefix_usable): Check fixed_regs array, not global_regs array for\n \tavailable hard registers.\n \t(ix86_expand_strlen): Ditto."}]}