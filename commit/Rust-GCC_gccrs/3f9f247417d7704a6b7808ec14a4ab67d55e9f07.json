{"sha": "3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y5ZjI0NzQxN2Q3NzA0YTZiNzgwOGVjMTRhNGFiNjdkNTVlOWYwNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2008-05-22T09:24:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-22T09:24:10Z"}, "message": "slice5.adb: New test.\n\n\t* gnat.dg/slice5.adb: New test.\n\t* gnat.dg/notnot.adb: New test.\n\t* gnat.dg/tf_interface_1.ad[sb]: New test.\n\t* gnat.dg/const1.adb: New test.\n\t* gnat.dg/parameterlessfunc.adb: New test.\n\t* gnat.dg/specs/interface5.ads: New test.\n\t* gnat.dg/specs/cpp_assignment.ads: New test.\n\nFrom-SVN: r135753", "tree": {"sha": "04b0c726e51a6ee09a6a0a69fca736b05a49d54f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04b0c726e51a6ee09a6a0a69fca736b05a49d54f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c9d87515a1bec530d1142f3a4fb7a0c978ea6d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c9d87515a1bec530d1142f3a4fb7a0c978ea6d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c9d87515a1bec530d1142f3a4fb7a0c978ea6d3"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "71abbb891131684580b36c10a038ad12551c3103", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "patch": "@@ -1,3 +1,13 @@\n+2008-05-22  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat.dg/slice5.adb: New test.\n+\t* gnat.dg/notnot.adb: New test.\n+\t* gnat.dg/tf_interface_1.ad[sb]: New test.\n+\t* gnat.dg/const1.adb: New test.\n+\t* gnat.dg/parameterlessfunc.adb: New test.\n+\t* gnat.dg/specs/interface5.ads: New test.\n+\t* gnat.dg/specs/cpp_assignment.ads: New test.\n+\n 2008-05-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* lib/dg-pch.exp (dg-pch): Fix if bracing."}, {"sha": "486e9632bc576bb87bd0cf21944dbd616c5655c3", "filename": "gcc/testsuite/gnat.dg/const1.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fconst1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fconst1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fconst1.adb?ref=3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "patch": "@@ -0,0 +1,8 @@\n+--  { dg-do compile }\n+\n+procedure const1 is\n+   Def_Const : constant Integer;\n+   pragma Import (Ada, Def_Const);\n+begin\n+   null;\n+end const1;"}, {"sha": "3d4181aaaaacae4b373f82396719fd0f507226d4", "filename": "gcc/testsuite/gnat.dg/notnot.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fnotnot.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fnotnot.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnotnot.adb?ref=3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "patch": "@@ -0,0 +1,9 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatwr\" }\n+\n+procedure notnot (x, y : integer) is\n+begin\n+   if not (not (x = y)) then  -- { dg-warning \"redundant double negation\" }\n+      return;\n+   end if;\n+end;"}, {"sha": "d63bc9addb56f5463236e2940c13092c1360e236", "filename": "gcc/testsuite/gnat.dg/parameterlessfunc.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fparameterlessfunc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fparameterlessfunc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fparameterlessfunc.adb?ref=3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "patch": "@@ -0,0 +1,17 @@\n+--  { dg-do compile }\n+\n+procedure parameterlessfunc is\n+  type Byte is mod 256;\n+  type Byte_Array is array(Byte range <>) of Byte;\n+  subtype Index is Byte range 0..7;\n+  subtype Small_Array is Byte_Array(Index);\n+  \n+  function F return Byte_Array is\n+  begin\n+    return (0..255=>0);\n+  end F;\n+  \n+  B5: Small_Array := F(Index);\n+begin\n+  null;\n+end parameterlessfunc;"}, {"sha": "c619b2f60ab65dc51f2c08c5de73b32d93a17c0e", "filename": "gcc/testsuite/gnat.dg/slice5.adb", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fslice5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fslice5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice5.adb?ref=3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "patch": "@@ -0,0 +1,24 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatwr\" }\n+\n+procedure Slice5 is\n+   \n+   type Item_Type is record\n+      I : Integer;\n+   end record;\n+   \n+   type Index_Type is (A, B);\n+\n+   type table is array (integer range <>) of integer;\n+   subtype Small is Integer range 1 .. 10;\n+   T1 : constant Table (Small) := (Small => 0);\n+   T2 : constant Table (Small) := T1 (Small);  -- { dg-warning \"redundant slice denotes whole array\" }\n+   \n+   Item_Array : constant array (Index_Type) of Item_Type\n+     := (A => (I => 10), B => (I => 22));\n+\n+   Item : Item_Type;\n+   for Item'Address use Item_Array(Index_Type)'Address;   -- { dg-warning \"redundant slice denotes whole array\" }\n+begin\n+   null;\n+end;"}, {"sha": "3247b671bd527bd912799e7be499fd266c0665da", "filename": "gcc/testsuite/gnat.dg/specs/cpp_assignment.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fcpp_assignment.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fcpp_assignment.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fcpp_assignment.ads?ref=3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do compile }\n+\n+package CPP_Assignment is\n+   type T is tagged record\n+      Data : Integer := 0;\n+   end record;\n+   pragma Convention (CPP, T); \n+\n+   Obj1 : T := (Data => 1);                                                        Obj2 : T'Class := Obj1;\n+end;"}, {"sha": "842b5e3fe60cb767a6cf16a5a71616af19655251", "filename": "gcc/testsuite/gnat.dg/specs/interface5.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Finterface5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Finterface5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Finterface5.ads?ref=3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "patch": "@@ -0,0 +1,9 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatc\" }\n+\n+package interface5 is\n+   type Lim_Iface is limited interface;\n+   protected type Prot_Typ is new Lim_Iface with\n+   private\n+   end Prot_Typ;\n+end interface5;"}, {"sha": "352e7e4a8328aa884f122d5b3b070dfb661c209a", "filename": "gcc/testsuite/gnat.dg/tf_interface_1.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Ftf_interface_1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Ftf_interface_1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftf_interface_1.adb?ref=3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "patch": "@@ -0,0 +1,8 @@\n+--  { dg-do compile }\n+package body TF_Interface_1 is\n+   procedure Get_It (Handle : Stream_Access; It : out CF_Interface_1'class)\n+  is\n+  begin\n+     CF_Interface_1'Class'Read (Handle, It);\n+  end;\n+end;"}, {"sha": "15c5a64cb8565ba6a95a97c669b78d1c5e770594", "filename": "gcc/testsuite/gnat.dg/tf_interface_1.ads", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Ftf_interface_1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9f247417d7704a6b7808ec14a4ab67d55e9f07/gcc%2Ftestsuite%2Fgnat.dg%2Ftf_interface_1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftf_interface_1.ads?ref=3f9f247417d7704a6b7808ec14a4ab67d55e9f07", "patch": "@@ -0,0 +1,19 @@\n+with Ada.Streams;\n+with Ada.Streams.Stream_IO; use Ada.Streams.Stream_IO;\n+package TF_INTERFACE_1 is\n+\n+   type CF_INTERFACE_1 is interface;\n+\n+   procedure P_PROCEDURE_1 (This : in out CF_INTERFACE_1)\n+   is abstract;\n+\n+   procedure Read (Stream : not null access ada.Streams.Root_stream_Type'Class;\n+                   Item : out CF_INTERFACE_1) is null;\n+   for CF_INTERFACE_1'Read use Read;\n+\n+   procedure Write (Stream : not null access ada.Streams.Root_stream_Type'Class;\n+                   Item : CF_INTERFACE_1) is null;\n+   for CF_INTERFACE_1'Write use Write;\n+\n+   procedure Get_It (Handle : Stream_Access; It : out CF_Interface_1'class);\n+end TF_INTERFACE_1;"}]}