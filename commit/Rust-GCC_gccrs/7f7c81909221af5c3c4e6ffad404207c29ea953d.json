{"sha": "7f7c81909221af5c3c4e6ffad404207c29ea953d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y3YzgxOTA5MjIxYWY1YzNjNGU2ZmZhZDQwNDIwN2MyOWVhOTUzZA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2012-09-19T21:46:47Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2012-09-19T21:46:47Z"}, "message": "ipa-prop.c (prune_expression_for_jf): New function.\n\n2012-09-19  Martin Jambor  <mjambor@suse.cz>\n\n\t* ipa-prop.c (prune_expression_for_jf): New function.\n\t(ipa_set_jf_constant): Use it.\n\t(ipa_set_jf_arith_pass_through): Likewise.\n\t(determine_known_aggregate_parts): Likewise.\n\nFrom-SVN: r191502", "tree": {"sha": "bb0b686895f3b5d0f65cba569449e90d39a49d03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb0b686895f3b5d0f65cba569449e90d39a49d03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f7c81909221af5c3c4e6ffad404207c29ea953d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7c81909221af5c3c4e6ffad404207c29ea953d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f7c81909221af5c3c4e6ffad404207c29ea953d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7c81909221af5c3c4e6ffad404207c29ea953d/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d91491e5160627426adfb804c2ac54610c650ed1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d91491e5160627426adfb804c2ac54610c650ed1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d91491e5160627426adfb804c2ac54610c650ed1"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "3fa4516546d17510a4a63e48511a84d54ea8c2e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7c81909221af5c3c4e6ffad404207c29ea953d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7c81909221af5c3c4e6ffad404207c29ea953d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f7c81909221af5c3c4e6ffad404207c29ea953d", "patch": "@@ -1,3 +1,10 @@\n+2012-09-19  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-prop.c (prune_expression_for_jf): New function.\n+\t(ipa_set_jf_constant): Use it.\n+\t(ipa_set_jf_arith_pass_through): Likewise.\n+\t(determine_known_aggregate_parts): Likewise.\n+\n 2012-09-19  Steve Ellcey  <sellcey@mips.com>\n \n \t* config.gcc (mips*-mti-elf*): New target."}, {"sha": "8f3cf72276f9255d8d0d4b8c7ef46d0b5b888597", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7c81909221af5c3c4e6ffad404207c29ea953d/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7c81909221af5c3c4e6ffad404207c29ea953d/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=7f7c81909221af5c3c4e6ffad404207c29ea953d", "patch": "@@ -287,6 +287,19 @@ ipa_print_all_jump_functions (FILE *f)\n     }\n }\n \n+/* Return the expression tree EXPR unshared and with location stripped off.  */\n+\n+static tree\n+prune_expression_for_jf (tree exp)\n+{\n+  if (EXPR_P (exp))\n+    {\n+      exp = unshare_expr (exp);\n+      SET_EXPR_LOCATION (exp, UNKNOWN_LOCATION);\n+    }\n+  return exp;\n+}\n+\n /* Set JFUNC to be a known type jump function.  */\n \n static void\n@@ -308,7 +321,7 @@ ipa_set_jf_constant (struct ipa_jump_func *jfunc, tree constant)\n   if (constant && EXPR_P (constant))\n     SET_EXPR_LOCATION (constant, UNKNOWN_LOCATION);\n   jfunc->type = IPA_JF_CONST;\n-  jfunc->value.constant = constant;\n+  jfunc->value.constant = prune_expression_for_jf (constant);\n }\n \n /* Set JFUNC to be a simple pass-through jump function.  */\n@@ -330,7 +343,7 @@ ipa_set_jf_arith_pass_through (struct ipa_jump_func *jfunc, int formal_id,\n \t\t\t       tree operand, enum tree_code operation)\n {\n   jfunc->type = IPA_JF_PASS_THROUGH;\n-  jfunc->value.pass_through.operand = operand;\n+  jfunc->value.pass_through.operand = prune_expression_for_jf (operand);\n   jfunc->value.pass_through.formal_id = formal_id;\n   jfunc->value.pass_through.operation = operation;\n   jfunc->value.pass_through.agg_preserved = false;\n@@ -1347,7 +1360,7 @@ determine_known_aggregate_parts (gimple call, tree arg,\n \t    {\n \t      struct ipa_agg_jf_item item;\n \t      item.offset = list->offset - arg_offset;\n-\t      item.value = list->constant;\n+\t      item.value = prune_expression_for_jf (list->constant);\n \t      VEC_quick_push (ipa_agg_jf_item_t, jfunc->agg.items, item);\n \t    }\n \t  list = list->next;"}]}