{"sha": "31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "node_id": "C_kwDOANBUbNoAKDMxZTk4OWEyNzg1YmVlOGQ1MDdmMmEwNmI1ZDNiZDhjNDU5ODlhYjU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-26T10:22:39Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-26T10:22:39Z"}, "message": "Daily bump.", "tree": {"sha": "cc4de94a93577f77d3c0808f62a974496be9b604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc4de94a93577f77d3c0808f62a974496be9b604"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/comments", "author": null, "committer": null, "parents": [{"sha": "0268c547de3e3559e056ce597eb168db5c4e5f74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0268c547de3e3559e056ce597eb168db5c4e5f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0268c547de3e3559e056ce597eb168db5c4e5f74"}], "stats": {"total": 176, "additions": 175, "deletions": 1}, "files": [{"sha": "5af9673def08e5e26b13b26610e94c28d3c48eec", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "patch": "@@ -1,3 +1,8 @@\n+2022-03-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc-changelog/git_update_version.py: Add\n+\t3ab5c8cd03d92bf4ec41e351820349d92fbc40c4 to ignored commits.\n+\n 2022-03-10  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR other/102664"}, {"sha": "6fc58ceb63f7605c198726df6b994b6040568080", "filename": "gcc/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "patch": "@@ -1,3 +1,45 @@\n+2022-03-26  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* reload.cc (find_reloads): Align comment with code where\n+\tconsidering the intersection of register classes then tweaking the\n+\tregclass for the current alternative or rejecting it.\n+\n+2022-03-25  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/104971\n+\t* lra-lives.cc (process_bb_lives): Check hard_regs_live for hard\n+\tregs to clear remove_p flag.\n+\n+2022-03-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105053\n+\t* tree-vect-loop.cc (vect_create_epilog_for_reduction): Pick\n+\tthe correct live-out stmt for a reduction chain.\n+\n+2022-03-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/105049\n+\t* tree.cc (uniform_vector_p): Recurse for VECTOR_CST or\n+\tCONSTRUCTOR first elements.\n+\n+2022-03-25  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR analyzer/103533\n+\t* doc/invoke.texi (Static Analyzer Options): Move\n+\t@ignore block after @gccoptlist's '}' for 'make pdf'.\n+\n+2022-03-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104954\n+\t* doc/invoke.texi (Static Analyzer Options): Add\n+\t-fdump-analyzer-untracked.\n+\n+2022-03-25  Avinash Sonawane  <rootkea@gmail.com>\n+\n+\tPR analyzer/103533\n+\t* doc/invoke.texi: Document that enabling taint analyzer\n+\tchecker disables some warnings from `-fanalyzer`.\n+\n 2022-03-24  Alexandre Oliva  <oliva@adacore.com>\n \n \tPR debug/104564"}, {"sha": "8b0bfd64c7b7cd6ab9cc6980252d74ef904e4884", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "patch": "@@ -1 +1 @@\n-20220325\n+20220326"}, {"sha": "a76d61e3cbb0047023137fdc32d5eac7b7a41aa2", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "patch": "@@ -1,3 +1,31 @@\n+2022-03-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104954\n+\t* analyzer.opt (-fdump-analyzer-untracked): New option.\n+\t* engine.cc (impl_run_checkers): Handle it.\n+\t* region-model-asm.cc (region_model::on_asm_stmt): Don't attempt\n+\tto clobber regions with !tracked_p ().\n+\t* region-model-manager.cc (dump_untracked_region): New.\n+\t(region_model_manager::dump_untracked_regions): New.\n+\t(frame_region::dump_untracked_regions): New.\n+\t* region-model.h (region_model_manager::dump_untracked_regions):\n+\tNew decl.\n+\t* region.cc (ipa_ref_requires_tracking): New.\n+\t(symnode_requires_tracking_p): New.\n+\t(decl_region::calc_tracked_p): New.\n+\t* region.h (region::tracked_p): New vfunc.\n+\t(frame_region::dump_untracked_regions): New decl.\n+\t(class decl_region): Note that this is also used fo SSA names.\n+\t(decl_region::decl_region): Initialize m_tracked.\n+\t(decl_region::tracked_p): New.\n+\t(decl_region::calc_tracked_p): New decl.\n+\t(decl_region::m_tracked): New.\n+\t* store.cc (store::get_or_create_cluster): Assert that we\n+\tdon't try to create clusters for base regions that aren't\n+\ttrackable.\n+\t(store::mark_as_escaped): Don't mark base regions that we're not\n+\ttracking.\n+\n 2022-03-23  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104979"}, {"sha": "c28da277ec028936d9265589b9a643a73f3f585f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "patch": "@@ -1,3 +1,12 @@\n+2022-03-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-ada-spec.cc (dump_ada_import): Deal with the \"section\" attribute\n+\t(dump_ada_node) <POINTER_TYPE>: Do not modify and pass the name, but\n+\tthe referenced type instead.  Deal with the anonymous original type\n+\tof a typedef'ed type.  In the actual access case, follow the chain\n+\tof external subtypes.\n+\t<TYPE_DECL>: Tidy up control flow.\n+\n 2022-03-21  Qian Jianhua  <qianjh@cn.fujitsu.com>\n \n \t* c-ada-spec.cc: Change array length"}, {"sha": "f17a9c9a5ac0da0b282af5f97e7c38954ada0fba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "patch": "@@ -1,3 +1,17 @@\n+2022-03-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* parser.cc (cp_parser_postfix_expression)\n+\t<case RID_BILTIN_CONVERTVECTOR, case RID_BUILTIN_BIT_CAST>: Don't\n+\treturn cp_build_{vec,convert,bit_cast} result right away, instead\n+\tset postfix_expression to it and break.\n+\n+2022-03-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/104944\n+\t* typeck.cc (cxx_sizeof_or_alignof_type): Diagnose alignof(void).\n+\t(cxx_alignas_expr): Call cxx_sizeof_or_alignof_type with\n+\tcomplain == true.\n+\n 2022-03-24  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/104284"}, {"sha": "a2aac51bd2e419f4cbb2ac7b6b52f0b451274ddd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "patch": "@@ -1,3 +1,11 @@\n+2022-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/103691\n+\t* trans-array.cc (gfc_conv_array_initializer): If TYPE_MAX_VALUE is\n+\tsmaller than TYPE_MIN_VALUE (i.e. empty array), ignore the\n+\tinitializer; if TYPE_MIN_VALUE is equal to TYPE_MAX_VALUE, use just\n+\tthe TYPE_MIN_VALUE as index instead of RANGE_EXPR.\n+\n 2022-03-23  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/103560"}, {"sha": "516c382f0c370a9823dffcf5667469f01208eca9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "patch": "@@ -1,3 +1,58 @@\n+2022-03-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-c++-common/builtin-convertvector-3.c: New test.\n+\t* g++.dg/cpp2a/bit-cast15.C: New test.\n+\n+2022-03-25  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\t* g++.dg/pr65240-1.C: Use -mdejagnu-cpu=.  Remove dg-skip-if.\n+\t* g++.dg/pr65240-2.C: Likewise.\n+\t* g++.dg/pr65240-3.C: Likewise.\n+\t* g++.dg/pr65240-4.C: Likewise.\n+\t* g++.dg/pr65242.C: Likewise.\n+\t* g++.dg/pr67211.C: Likewise.\n+\t* g++.dg/pr69667.C: Likewise.\n+\t* g++.dg/pr71294.C: Likewise.\n+\t* g++.dg/pr84279.C: Likewise.\n+\t* g++.dg/torture/ppc-ldst-array.C: Likewise.\n+\t* gfortran.dg/nint_p7.f90: Likewise.\n+\t* gfortran.dg/pr102860.f90: Likewise.\n+\t* gcc.target/powerpc/fusion.c: Use -mdejagnu-cpu= and -mdejagnu-tune=.\n+\t* gcc.target/powerpc/fusion2.c: Likewise.\n+\t* gcc.target/powerpc/int_128bit-runnable.c: Use -mdejagnu-cpu=.\n+\t* gcc.target/powerpc/test_mffsl.c: Likewise.\n+\t* gfortran.dg/pr47614.f: Likewise.\n+\t* gfortran.dg/pr58968.f: Likewise.\n+\n+2022-03-25  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR testsuite/105055\n+\t* gcc.target/i386/pr95483-1.c: Replace -msse with -msse2.\n+\n+2022-03-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105053\n+\t* g++.dg/vect/pr105053.cc: New testcase.\n+\n+2022-03-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/104944\n+\t* g++.dg/cpp0x/alignas20.C: New test.\n+\n+2022-03-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/105049\n+\t* gcc.dg/pr105049.c: New testcase.\n+\n+2022-03-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104954\n+\t* gcc.dg/analyzer/asm-x86-dyndbg-1.c: New test.\n+\t* gcc.dg/analyzer/asm-x86-dyndbg-2.c: New test.\n+\t* gcc.dg/analyzer/many-unused-locals.c: New test.\n+\t* gcc.dg/analyzer/untracked-1.c: New test.\n+\t* gcc.dg/analyzer/unused-local-1.c: New test.\n+\n 2022-03-24  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/104284"}, {"sha": "5c4009a9ede618744714a174afe47706b372e880", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "patch": "@@ -1,3 +1,11 @@\n+2022-03-25  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR libgomp/105042\n+\t* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: Reduce\n+\texecution time.\n+\t* testsuite/libgomp.oacc-c-c++-common/vred2d-128.c: Same.\n+\t* testsuite/libgomp.oacc-fortran/parallel-dims.f90: Same.\n+\n 2022-03-23  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR middle-end/104285"}, {"sha": "50eee8017abbec0f3bb5bc65a74d96f8005260b2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e989a2785bee8d507f2a06b5d3bd8c45989ab5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=31e989a2785bee8d507f2a06b5d3bd8c45989ab5", "patch": "@@ -1,3 +1,8 @@\n+2022-03-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/bit (bit_cast, byteswap, endian): Add doxygen\n+\tcomments.\n+\n 2022-03-23  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/105027"}]}