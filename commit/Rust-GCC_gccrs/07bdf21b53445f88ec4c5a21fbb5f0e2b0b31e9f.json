{"sha": "07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdiZGYyMWI1MzQ0NWY4OGVjNGM1YTIxZmJiNWYwZTJiMGIzMWU5Zg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2014-12-07T09:40:58Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2014-12-07T09:40:58Z"}, "message": "[ARM,AArch64][testsuite] Fix vaddl and vaddw tests\n\n2014-12-07  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vaddhn.c: Actually execute\n\tthe test.\n\t* gcc.target/aarch64/advsimd-intrinsics/vaddl.c: Actually execute\n\tthe test. Fix expected output.\n\t* gcc.target/aarch64/advsimd-intrinsics/vaddw.c: Likewise.\n\nFrom-SVN: r218463", "tree": {"sha": "d74120cc1186d1d1412a170904f636c152e8d3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d74120cc1186d1d1412a170904f636c152e8d3e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f/comments", "author": null, "committer": null, "parents": [{"sha": "3cb251b77933671acc8717ede172be28d839927f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb251b77933671acc8717ede172be28d839927f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cb251b77933671acc8717ede172be28d839927f"}], "stats": {"total": 56, "additions": 29, "deletions": 27}, "files": [{"sha": "4528bc3e41ed48873fc49fa238530ad46f8dfc39", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f", "patch": "@@ -1,3 +1,11 @@\n+2014-12-07  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vaddhn.c: Actually execute\n+\tthe test.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vaddl.c: Actually execute\n+\tthe test. Fix expected output.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vaddw.c: Likewise.\n+\n 2014-12-07  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.dg/addr_equal-1.c: New testcase."}, {"sha": "58fd5ea837a599be3cec41914f861520eafc4628", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vaddhn.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddhn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddhn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddhn.c?ref=07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f", "patch": "@@ -52,15 +52,13 @@ VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n \t\t\t\t\t   0x33333333, 0x33333333 };\n \n-#ifndef INSN_NAME\n #define INSN_NAME vaddhn\n #define TEST_MSG \"VADDHN\"\n-#endif\n \n-#define FNNAME1(NAME) void exec_ ## NAME (void)\n+#define FNNAME1(NAME) exec_ ## NAME\n #define FNNAME(NAME) FNNAME1(NAME)\n \n-FNNAME (INSN_NAME)\n+void FNNAME (INSN_NAME) (void)\n {\n   /* Basic test: vec64=vaddhn(vec128_a, vec128_b), then store the result.  */\n #define TEST_VADDHN1(INSN, T1, T2, W, W2, N)\t\t\t\t\\\n@@ -104,6 +102,6 @@ FNNAME (INSN_NAME)\n \n int main (void)\n {\n-  FNNAME (INSN_NAME);\n+  FNNAME (INSN_NAME) ();\n   return 0;\n }"}, {"sha": "030785d6ff17d6766523f57935993e0937f437c7", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vaddl.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddl.c?ref=07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f", "patch": "@@ -5,13 +5,13 @@\n /* Expected results.  */\n VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n \t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n-VECT_VAR_DECL(expected,int,16,4) [] = { 0x33, 0x33, 0x33, 0x33 };\n-VECT_VAR_DECL(expected,int,32,2) [] = { 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x33333333, 0x33333333 };\n VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n-VECT_VAR_DECL(expected,uint,8,8) [] = { 0x3, 0x3, 0x3, 0x3,\n-\t\t\t\t\t0x3, 0x3, 0x3, 0x3 };\n-VECT_VAR_DECL(expected,uint,16,4) [] = { 0x37, 0x37, 0x37, 0x37 };\n-VECT_VAR_DECL(expected,uint,32,2) [] = { 0x3, 0x3 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x33333333, 0x33333333 };\n VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n VECT_VAR_DECL(expected,poly,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n \t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n@@ -45,15 +45,13 @@ VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n \t\t\t\t\t   0x33333333, 0x33333333 };\n \n-#ifndef INSN_NAME\n #define INSN_NAME vaddl\n #define TEST_MSG \"VADDL\"\n-#endif\n \n-#define FNNAME1(NAME) void exec_ ## NAME (void)\n+#define FNNAME1(NAME) exec_ ## NAME\n #define FNNAME(NAME) FNNAME1(NAME)\n \n-FNNAME (INSN_NAME)\n+void FNNAME (INSN_NAME) (void)\n {\n   /* Basic test: y=vaddl(x1,x2), then store the result.  */\n #define TEST_VADDL1(INSN, T1, T2, W, W2, N)\t\t\t\t\\\n@@ -117,6 +115,6 @@ FNNAME (INSN_NAME)\n \n int main (void)\n {\n-  FNNAME (INSN_NAME);\n+  FNNAME (INSN_NAME) ();\n   return 0;\n }"}, {"sha": "95cbb310efa1c1d7224862c41c37778add51ccc3", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vaddw.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddw.c?ref=07bdf21b53445f88ec4c5a21fbb5f0e2b0b31e9f", "patch": "@@ -5,13 +5,13 @@\n /* Expected results.  */\n VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n \t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n-VECT_VAR_DECL(expected,int,16,4) [] = { 0x33, 0x33, 0x33, 0x33 };\n-VECT_VAR_DECL(expected,int,32,2) [] = { 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x33333333, 0x33333333 };\n VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n-VECT_VAR_DECL(expected,uint,8,8) [] = { 0x3, 0x3, 0x3, 0x3,\n-\t\t\t\t\t0x3, 0x3, 0x3, 0x3 };\n-VECT_VAR_DECL(expected,uint,16,4) [] = { 0x37, 0x37, 0x37, 0x37 };\n-VECT_VAR_DECL(expected,uint,32,2) [] = { 0x3, 0x3 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x33333333, 0x33333333 };\n VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n VECT_VAR_DECL(expected,poly,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n \t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n@@ -45,15 +45,13 @@ VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n \t\t\t\t\t   0x33333333, 0x33333333 };\n \n-#ifndef INSN_NAME\n #define INSN_NAME vaddw\n #define TEST_MSG \"VADDW\"\n-#endif\n \n-#define FNNAME1(NAME) void exec_ ## NAME (void)\n+#define FNNAME1(NAME) exec_ ## NAME\n #define FNNAME(NAME) FNNAME1(NAME)\n \n-FNNAME (INSN_NAME)\n+void FNNAME (INSN_NAME) (void)\n {\n   /* Basic test: y=vaddw(x1,x2), then store the result.  */\n #define TEST_VADDW1(INSN, T1, T2, W, W2, N)\t\t\t\t\\\n@@ -117,6 +115,6 @@ FNNAME (INSN_NAME)\n \n int main (void)\n {\n-  FNNAME (INSN_NAME);\n+  FNNAME (INSN_NAME) ();\n   return 0;\n }"}]}