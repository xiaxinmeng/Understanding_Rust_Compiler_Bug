{"sha": "ff26f0ba68fe6e870f315d0601b596f889b89680", "node_id": "C_kwDOANBUbNoAKGZmMjZmMGJhNjhmZTZlODcwZjMxNWQwNjAxYjU5NmY4ODliODk2ODA", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-28T08:07:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-28T12:35:45Z"}, "message": "middle-end/106457 - improve array_at_struct_end_p for array objects\n\nArray references to array objects are never at struct end.\n\n\tPR middle-end/106457\n\t* tree.cc (array_at_struct_end_p): Handle array objects\n\tspecially.", "tree": {"sha": "8112fe38d2b19e4c00ca3e37c1165c1089abd0d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8112fe38d2b19e4c00ca3e37c1165c1089abd0d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff26f0ba68fe6e870f315d0601b596f889b89680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff26f0ba68fe6e870f315d0601b596f889b89680", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff26f0ba68fe6e870f315d0601b596f889b89680", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff26f0ba68fe6e870f315d0601b596f889b89680/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f64eb636677d714781b4543f111b1c9239328db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f64eb636677d714781b4543f111b1c9239328db6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f64eb636677d714781b4543f111b1c9239328db6"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "fed1434d141d8297075cece345a5509c3b650b1d", "filename": "gcc/tree.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff26f0ba68fe6e870f315d0601b596f889b89680/gcc%2Ftree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff26f0ba68fe6e870f315d0601b596f889b89680/gcc%2Ftree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.cc?ref=ff26f0ba68fe6e870f315d0601b596f889b89680", "patch": "@@ -12778,6 +12778,10 @@ array_at_struct_end_p (tree ref)\n       && DECL_SIZE_UNIT (ref)\n       && TREE_CODE (DECL_SIZE_UNIT (ref)) == INTEGER_CST)\n     {\n+      /* If the object itself is the array it is not at struct end.  */\n+      if (DECL_P (ref_to_array))\n+\treturn false;\n+\n       /* Check whether the array domain covers all of the available\n          padding.  */\n       poly_int64 offset;"}]}