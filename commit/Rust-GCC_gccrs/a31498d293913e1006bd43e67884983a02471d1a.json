{"sha": "a31498d293913e1006bd43e67884983a02471d1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMxNDk4ZDI5MzkxM2UxMDA2YmQ0M2U2Nzg4NDk4M2EwMjQ3MWQxYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-02-24T19:55:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-02-24T19:55:47Z"}, "message": "re PR middle-end/30951 (Does not fold  x + CST == x and x + CST != x)\n\n2007-02-24  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/30951\n\t* fold-const.c (fold_binary): Fold x +- CST op x for\n\tEQ_EXPR and NE_EXPR.\n\n\t* gcc.dg/pr30951.c: New testcase.\n\nFrom-SVN: r122295", "tree": {"sha": "519e3bd036acaa7e2d9abb7b298d90d27eb168d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/519e3bd036acaa7e2d9abb7b298d90d27eb168d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a31498d293913e1006bd43e67884983a02471d1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31498d293913e1006bd43e67884983a02471d1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a31498d293913e1006bd43e67884983a02471d1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31498d293913e1006bd43e67884983a02471d1a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e6e2c303b65dc3aab3a3bd8e63416a585de88b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6e2c303b65dc3aab3a3bd8e63416a585de88b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e6e2c303b65dc3aab3a3bd8e63416a585de88b2"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "2368d6a0155cb7b49f712265c231848c719fe441", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31498d293913e1006bd43e67884983a02471d1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31498d293913e1006bd43e67884983a02471d1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a31498d293913e1006bd43e67884983a02471d1a", "patch": "@@ -1,3 +1,9 @@\n+2007-02-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/30951\n+\t* fold-const.c (fold_binary): Fold x +- CST op x for\n+\tEQ_EXPR and NE_EXPR.\n+\n 2007-02-24  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa.md (muldi3): Force subregs to registers in 64-bit expander."}, {"sha": "80c3c41ecff8b20b533241d194c330d3a0babf99", "filename": "gcc/fold-const.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31498d293913e1006bd43e67884983a02471d1a/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31498d293913e1006bd43e67884983a02471d1a/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=a31498d293913e1006bd43e67884983a02471d1a", "patch": "@@ -11203,6 +11203,24 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t\t\t\t\t fold_convert (TREE_TYPE (arg0), arg1),\n \t\t\t\t\t TREE_OPERAND (arg0, 1)));\n \n+      /* Transform comparisons of the form X +- C CMP X.  */\n+      if ((TREE_CODE (arg0) == PLUS_EXPR || TREE_CODE (arg0) == MINUS_EXPR)\n+\t  && operand_equal_p (TREE_OPERAND (arg0, 0), arg1, 0)\n+\t  && TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST\n+\t  && (INTEGRAL_TYPE_P (TREE_TYPE (arg0))\n+\t      || POINTER_TYPE_P (TREE_TYPE (arg0))))\n+\t{\n+\t  tree cst = TREE_OPERAND (arg0, 1);\n+\n+\t  if (code == EQ_EXPR\n+\t      && !integer_zerop (cst))\n+\t    return omit_two_operands (type, boolean_false_node,\n+\t\t\t\t      TREE_OPERAND (arg0, 0), arg1);\n+\t  else\n+\t    return omit_two_operands (type, boolean_true_node,\n+\t\t\t\t      TREE_OPERAND (arg0, 0), arg1);\n+\t}\n+\n       /* If we have X - Y == 0, we can convert that to X == Y and similarly\n \t for !=.  Don't do this for ordered comparisons due to overflow.  */\n       if (TREE_CODE (arg0) == MINUS_EXPR"}, {"sha": "bd67ab6de6bac887ff1e37a05cab61262639d23f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31498d293913e1006bd43e67884983a02471d1a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31498d293913e1006bd43e67884983a02471d1a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a31498d293913e1006bd43e67884983a02471d1a", "patch": "@@ -1,3 +1,8 @@\n+2007-02-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/30951\n+\t* gcc.dg/pr30951.c: New testcase.\n+\n 2007-02-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/torture/builtin-modf-1.c: New test."}, {"sha": "149b8ecaafd43345492b22376cd6cc06702642a3", "filename": "gcc/testsuite/gcc.dg/pr30951.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31498d293913e1006bd43e67884983a02471d1a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30951.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31498d293913e1006bd43e67884983a02471d1a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30951.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30951.c?ref=a31498d293913e1006bd43e67884983a02471d1a", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do link } */\n+\n+extern void link_error (void);\n+\n+void test (int x, unsigned int y)\n+{\n+  if (x + 5 == x)\n+    link_error ();\n+  if (x == x + 10)\n+    link_error ();\n+  if (y + 5 == y)\n+    link_error ();\n+  if (y == y + 10)\n+    link_error ();\n+  if (x + 5 != x)\n+    ;\n+  else\n+    link_error ();\n+  if (x != x + 10)\n+    ;\n+  else\n+    link_error ();\n+  if (y + 5 != y)\n+    ;\n+  else\n+    link_error ();\n+  if (y != y + 10)\n+    ;\n+  else\n+    link_error ();\n+}\n+\n+int main()\n+{\n+  return 0;\n+}"}]}