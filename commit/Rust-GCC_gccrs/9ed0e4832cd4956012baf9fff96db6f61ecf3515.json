{"sha": "9ed0e4832cd4956012baf9fff96db6f61ecf3515", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVkMGU0ODMyY2Q0OTU2MDEyYmFmOWZmZjk2ZGI2ZjYxZWNmMzUxNQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2008-11-07T10:17:40Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-11-07T10:17:40Z"}, "message": "trans.c (Attribute_to_gnu, [...]): Check for empty range in original base type, not converted result type.\n\n\t* gcc-interface/trans.c (Attribute_to_gnu, case Attr_Length): Check\n\tfor empty range in original base type, not converted result type.\n\nFrom-SVN: r141670", "tree": {"sha": "40c3631ee74a2176896062037e0000a12fec4e2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40c3631ee74a2176896062037e0000a12fec4e2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ed0e4832cd4956012baf9fff96db6f61ecf3515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed0e4832cd4956012baf9fff96db6f61ecf3515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ed0e4832cd4956012baf9fff96db6f61ecf3515", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed0e4832cd4956012baf9fff96db6f61ecf3515/comments", "author": null, "committer": null, "parents": [{"sha": "f0f91b6438b152d7c32bedc158ae5e79d7815cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f91b6438b152d7c32bedc158ae5e79d7815cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0f91b6438b152d7c32bedc158ae5e79d7815cf7"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "8dadc3dfe9e78ad7b6a66a6494f89f297714c527", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed0e4832cd4956012baf9fff96db6f61ecf3515/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed0e4832cd4956012baf9fff96db6f61ecf3515/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9ed0e4832cd4956012baf9fff96db6f61ecf3515", "patch": "@@ -1,3 +1,8 @@\n+2008-11-07  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gcc-interface/trans.c (Attribute_to_gnu, case Attr_Length): Check\n+\tfor empty range in original base type, not converted result type.\n+\n 2008-11-07  Geert Bosch  <bosch@adacore.com>\n \n \t* gcc-interface/trans.c (build_binary_op_trapv): Convert arguments"}, {"sha": "7a82004b2d2b2d8fc2d338305606a783b8aa3f66", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed0e4832cd4956012baf9fff96db6f61ecf3515/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed0e4832cd4956012baf9fff96db6f61ecf3515/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=9ed0e4832cd4956012baf9fff96db6f61ecf3515", "patch": "@@ -1287,7 +1287,10 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n \t\t   much rarer cases, for extremely large arrays we expect\n \t\t   never to encounter in practice.  In addition, the former\n \t\t   computation required the use of potentially constraining\n-\t\t   signed arithmetic while the latter doesn't.  */\n+\t\t   signed arithmetic while the latter doesn't. Note that the\n+\t\t   comparison must be done in the original index base type,\n+\t\t   otherwise the conversion of either bound to gnu_compute_type\n+\t\t   may overflow.  */\n \t\t\n \t\ttree gnu_compute_type = get_base_type (gnu_result_type);\n \n@@ -1301,7 +1304,9 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n \t\tgnu_result\n \t\t  = build3\n \t\t    (COND_EXPR, gnu_compute_type,\n-\t\t     build_binary_op (LT_EXPR, gnu_compute_type, hb, lb),\n+\t\t     build_binary_op (LT_EXPR, get_base_type (index_type),\n+\t\t\t\t      TYPE_MAX_VALUE (index_type),\n+\t\t\t\t      TYPE_MIN_VALUE (index_type)),\n \t\t     convert (gnu_compute_type, integer_zero_node),\n \t\t     build_binary_op\n \t\t     (PLUS_EXPR, gnu_compute_type,"}, {"sha": "824776d0459259951953c657f46f634238def372", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed0e4832cd4956012baf9fff96db6f61ecf3515/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed0e4832cd4956012baf9fff96db6f61ecf3515/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9ed0e4832cd4956012baf9fff96db6f61ecf3515", "patch": "@@ -1,3 +1,7 @@\n+2008-11-07  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gnat.dg/hyper_flat.adb: New test.\n+\n 2008-11-07  Geert Bosch  <bosch@adacore.com>\n \n \t* gnat.dg/test_8bitlong_overflow.adb: New test."}, {"sha": "6842edbf52ad48d7d9ab28b490e7bc73a77bd32d", "filename": "gcc/testsuite/gnat.dg/hyper_flat.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed0e4832cd4956012baf9fff96db6f61ecf3515/gcc%2Ftestsuite%2Fgnat.dg%2Fhyper_flat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed0e4832cd4956012baf9fff96db6f61ecf3515/gcc%2Ftestsuite%2Fgnat.dg%2Fhyper_flat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fhyper_flat.adb?ref=9ed0e4832cd4956012baf9fff96db6f61ecf3515", "patch": "@@ -0,0 +1,17 @@\n+-- { dg-do run }\n+-- { dg-options \"-gnatp\" }\n+\n+procedure Hyper_Flat is\n+\n+   type Unsigned is mod 2 ** 32;\n+   x : Integer := 0;\n+   pragma Volatile (X);\n+\n+   S : constant String := (1 .. X - 3 => 'A');\n+   --  Hyper-flat null string\n+\n+begin\n+   if Unsigned'(S'Length) /= 0 then\n+      raise Program_Error;\n+   end if;\n+end;"}]}