{"sha": "114b9aa4cd7daae9c8cfba2feb1011b39e4c6aea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE0YjlhYTRjZDdkYWFlOWM4Y2ZiYTJmZWIxMDExYjM5ZTRjNmFlYQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-14T19:20:51Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-14T19:20:51Z"}, "message": "Document sparclite integer multiply cycle times.\n\n(movdf, !TARGET_FPU): Remove tests for floating point registers.\n(divsi3, udivsi3): Correct length attribute.\n(ffssi2): Define for sparclite.\n\nFrom-SVN: r3235", "tree": {"sha": "16383dcc2352196fbb6f33df883067832076eea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16383dcc2352196fbb6f33df883067832076eea6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/114b9aa4cd7daae9c8cfba2feb1011b39e4c6aea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/114b9aa4cd7daae9c8cfba2feb1011b39e4c6aea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/114b9aa4cd7daae9c8cfba2feb1011b39e4c6aea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/114b9aa4cd7daae9c8cfba2feb1011b39e4c6aea/comments", "author": null, "committer": null, "parents": [{"sha": "228b4037f0d7b13bccfc2e4620bed6ac51f6cca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228b4037f0d7b13bccfc2e4620bed6ac51f6cca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/228b4037f0d7b13bccfc2e4620bed6ac51f6cca9"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "9b2ea3ec9389686e45c41b18465a65b5d6e2cf1f", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114b9aa4cd7daae9c8cfba2feb1011b39e4c6aea/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114b9aa4cd7daae9c8cfba2feb1011b39e4c6aea/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=114b9aa4cd7daae9c8cfba2feb1011b39e4c6aea", "patch": "@@ -136,6 +136,9 @@\n ;; (Noted only for documentation; units that take one cycle do not need to\n ;; be specified.)\n \n+;; On the sparclite, integer multiply takes 1, 3, or 5 cycles depending on\n+;; the inputs.\n+\n ;; (define_function_unit \"alu\" 1 0\n ;;  (eq_attr \"type\" \"unary,binary,move,address\") 1 0)\n \n@@ -1215,13 +1218,8 @@\n   \"! TARGET_FPU\n    && (register_operand (operands[0], DFmode)\n        || register_operand (operands[1], DFmode))\"\n-  \"*\n-{\n-  if (FP_REG_P (operands[0]) || FP_REG_P (operands[1]))\n-    return output_fp_move_double (operands);\n-  return output_move_double (operands);\n-}\"\n-  [(set_attr \"type\" \"fpstore,fpload,move,store,load\")\n+  \"* return output_move_double (operands);\"\n+  [(set_attr \"type\" \"store,load,move,store,load\")\n    (set_attr \"length\" \"1,1,2,3,3\")])\n \n (define_insn \"\"\n@@ -1837,7 +1835,7 @@\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"TARGET_V8\"\n   \"sra %1,31,%3\\;wr %%g0,%3,%%y\\;nop\\;nop\\;nop\\;sdiv %1,%2,%0\"\n-  [(set_attr \"length\" \"3\")])\n+  [(set_attr \"length\" \"6\")])\n \n ;; It is not known whether this will match.\n \n@@ -1851,15 +1849,15 @@\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"TARGET_V8\"\n   \"sra %1,31,%3\\;wr %%g0,%3,%%y\\;nop\\;nop\\;nop\\;sdivcc %1,%2,%0\"\n-  [(set_attr \"length\" \"3\")])\n+  [(set_attr \"length\" \"6\")])\n \n (define_insn \"udivsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(udiv:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t(match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"TARGET_V8\"\n   \"wr %%g0,%%g0,%%y\\;nop\\;nop\\;nop\\;udiv %1,%2,%0\"\n-  [(set_attr \"length\" \"2\")])\n+  [(set_attr \"length\" \"5\")])\n \n ;; It is not known whether this will match.\n \n@@ -1872,7 +1870,7 @@\n \t\t    (const_int 0)))]\n   \"TARGET_V8\"\n   \"wr %%g0,%%g0,%%y\\;nop\\;nop\\;nop\\;udivcc %1,%2,%0\"\n-  [(set_attr \"length\" \"2\")])\n+  [(set_attr \"length\" \"5\")])\n \n ;;- and instructions\n ;; We define DImode `and` so with DImode `not` we can get\n@@ -2791,6 +2789,22 @@\n   [(set_attr \"type\" \"misc\")\n    (set_attr \"length\" \"2\")])\n \f\n+;; find first set.\n+\n+;; The scan instruction searches from the most significant bit while ffs\n+;; searches from the least significant bit.  The bit index and treatment of\n+;; zero also differ.  It takes at least 7 instructions to get the proper\n+;; result.  Here is an obvious 8 instruction seequence.\n+\n+(define_insn \"ffssi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n+\t(ffs:SI (match_operand:SI 1 \"register_operand\" \"r\")))\n+   (clobber (match_scratch:SI 2 \"=&r\"))]\n+  \"TARGET_SPARCLITE\"\n+  \"sub %%g0,%1,%0\\;and %0,%1,%0\\;scan %0,0,%0\\;mov 32,%2\\;sub %2,%0,%0\\;sra %0,31,%2\\;and %2,31,%2\\;add %2,%0,%0\"\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"length\" \"8\")])\n+\f\n ;; Split up troublesome insns for better scheduling.  */\n \n ;; The following patterns are straightforward.  They can be applied"}]}