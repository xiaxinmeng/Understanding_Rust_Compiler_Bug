{"sha": "cec362c90b53bec41a0571220216401978b3a6ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VjMzYyYzkwYjUzYmVjNDFhMDU3MTIyMDIxNjQwMTk3OGIzYTZhZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-09-02T15:38:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-09-02T15:38:38Z"}, "message": "DR 1453\n\n/cp\n2014-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tDR 1453\n\t* class.c (check_field_decls): A class of literal type cannot have\n\tvolatile non-static data members and base classes.\n\t(explain_non_literal_class): Update.\n\n/testsuite\n2014-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tDR 1453\n\t* g++.dg/cpp0x/constexpr-volatile.C: New.\n\t* g++.dg/ext/is_literal_type2.C: Likewise.\n\nFrom-SVN: r214823", "tree": {"sha": "df50e30837aebdb34f1d08244a305e8c27331c26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df50e30837aebdb34f1d08244a305e8c27331c26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cec362c90b53bec41a0571220216401978b3a6ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cec362c90b53bec41a0571220216401978b3a6ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cec362c90b53bec41a0571220216401978b3a6ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cec362c90b53bec41a0571220216401978b3a6ad/comments", "author": null, "committer": null, "parents": [{"sha": "4e2b2eeec93479e9a6ecde090e7b748fabcae107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2b2eeec93479e9a6ecde090e7b748fabcae107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e2b2eeec93479e9a6ecde090e7b748fabcae107"}], "stats": {"total": 76, "additions": 73, "deletions": 3}, "files": [{"sha": "258fd9bf605288d565ee52113d0307af021e8596", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cec362c90b53bec41a0571220216401978b3a6ad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cec362c90b53bec41a0571220216401978b3a6ad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cec362c90b53bec41a0571220216401978b3a6ad", "patch": "@@ -1,3 +1,10 @@\n+2014-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tDR 1453\n+\t* class.c (check_field_decls): A class of literal type cannot have\n+\tvolatile non-static data members and base classes.\n+\t(explain_non_literal_class): Update.\n+\n 2014-09-02  Jakub Jelinek  <jakub@redhat.com>\n \t    Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \t    Igor Zamyatin  <igor.zamyatin@intel.com>"}, {"sha": "09f946fcdf7c45eef7c09dffe99ee71ed49c18a3", "filename": "gcc/cp/class.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cec362c90b53bec41a0571220216401978b3a6ad/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cec362c90b53bec41a0571220216401978b3a6ad/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=cec362c90b53bec41a0571220216401978b3a6ad", "patch": "@@ -3528,9 +3528,11 @@ check_field_decls (tree t, tree *access_decls,\n \tCLASSTYPE_NON_AGGREGATE (t) = 1;\n \n       /* If at least one non-static data member is non-literal, the whole\n-         class becomes non-literal.  Note: if the type is incomplete we\n-\t will complain later on.  */\n-      if (COMPLETE_TYPE_P (type) && !literal_type_p (type))\n+         class becomes non-literal.  Per Core/1453, volatile non-static\n+\t data members and base classes are also not allowed.\n+\t Note: if the type is incomplete we will complain later on.  */\n+      if (COMPLETE_TYPE_P (type)\n+\t  && (!literal_type_p (type) || CP_TYPE_VOLATILE_P (type))) \n         CLASSTYPE_LITERAL_P (t) = false;\n \n       /* A standard-layout class is a class that:\n@@ -5431,6 +5433,9 @@ explain_non_literal_class (tree t)\n \t      if (CLASS_TYPE_P (ftype))\n \t\texplain_non_literal_class (ftype);\n \t    }\n+\t  if (CP_TYPE_VOLATILE_P (ftype))\n+\t    inform (0, \"  non-static data member %q+D has \"\n+\t\t    \"volatile type\", field);\n \t}\n     }\n }"}, {"sha": "0bffdb06ae4668b65037ebf3fa087d07463eec83", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cec362c90b53bec41a0571220216401978b3a6ad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cec362c90b53bec41a0571220216401978b3a6ad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cec362c90b53bec41a0571220216401978b3a6ad", "patch": "@@ -1,3 +1,9 @@\n+2014-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tDR 1453\n+\t* g++.dg/cpp0x/constexpr-volatile.C: New.\n+\t* g++.dg/ext/is_literal_type2.C: Likewise.\n+\n 2014-09-02  Jakub Jelinek  <jakub@redhat.com>\n \t    Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \t    Igor Zamyatin  <igor.zamyatin@intel.com>"}, {"sha": "1203b04aff5aa1f0f6e7312568272bbeec318ea6", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-volatile.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cec362c90b53bec41a0571220216401978b3a6ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-volatile.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cec362c90b53bec41a0571220216401978b3a6ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-volatile.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-volatile.C?ref=cec362c90b53bec41a0571220216401978b3a6ad", "patch": "@@ -0,0 +1,26 @@\n+// DR 1453\n+// { dg-do compile { target c++11 } }\n+\n+struct S {\n+  constexpr S() : n{} { }\n+  volatile int n;\n+};\n+\n+constexpr S s;  // { dg-error \"literal\" }\n+\n+struct Z {\n+  volatile int m;\n+};\n+\n+struct T {\n+  constexpr T() : n{} { }\n+  Z n;\n+};\n+\n+constexpr T t;  // { dg-error \"literal\" }\n+\n+struct U : Z {\n+  constexpr U() : Z{} { }\n+};\n+\n+constexpr U u;  // { dg-error \"literal\" }"}, {"sha": "8a0632b12588435ccd8f2dc386ec53b478268149", "filename": "gcc/testsuite/g++.dg/ext/is_literal_type2.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cec362c90b53bec41a0571220216401978b3a6ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_literal_type2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cec362c90b53bec41a0571220216401978b3a6ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_literal_type2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_literal_type2.C?ref=cec362c90b53bec41a0571220216401978b3a6ad", "patch": "@@ -0,0 +1,26 @@\n+// DR 1453\n+// { dg-do compile { target c++11 } }\n+\n+struct S {\n+  constexpr S() : n{} { }\n+  volatile int n;\n+};\n+\n+static_assert(!__is_literal_type(S), \"\");\n+\n+struct Z {\n+  volatile int m;\n+};\n+\n+struct T {\n+  constexpr T() : n{} { }\n+  Z n;\n+};\n+\n+static_assert(!__is_literal_type(T), \"\");\n+\n+struct U : Z {\n+  constexpr U() : Z{} { }\n+};\n+\n+static_assert(!__is_literal_type(U), \"\");"}]}