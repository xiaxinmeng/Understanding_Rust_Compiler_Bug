{"sha": "9654e9c299a49165ead24c6c2fa773f44ea5d100", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY1NGU5YzI5OWE0OTE2NWVhZDI0YzZjMmZhNzczZjQ0ZWE1ZDEwMA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2012-12-18T15:19:43Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2012-12-18T15:19:43Z"}, "message": "re PR other/54324 (GCC install document does not list minimum required g++ version)\n\n\tPR other/54324\n\t* ansidecl.h (ATTRIBUTE_UNUSED): Do not set __attribute__ for GCC\n\t< 3.4.\n\nFrom-SVN: r194583", "tree": {"sha": "25ecd732d665c371bdcd93e5a671ac3b556de254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25ecd732d665c371bdcd93e5a671ac3b556de254"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9654e9c299a49165ead24c6c2fa773f44ea5d100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9654e9c299a49165ead24c6c2fa773f44ea5d100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9654e9c299a49165ead24c6c2fa773f44ea5d100", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9654e9c299a49165ead24c6c2fa773f44ea5d100/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "867fdd05e4de59b21ea5fec6182127404cc94712", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867fdd05e4de59b21ea5fec6182127404cc94712", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867fdd05e4de59b21ea5fec6182127404cc94712"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "f3acbfc2124b5c06911d486751e2dcc6fe640ba8", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9654e9c299a49165ead24c6c2fa773f44ea5d100/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9654e9c299a49165ead24c6c2fa773f44ea5d100/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=9654e9c299a49165ead24c6c2fa773f44ea5d100", "patch": "@@ -1,3 +1,9 @@\n+2012-12-18  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR other/54324\n+\t* ansidecl.h (ATTRIBUTE_UNUSED): Do not set __attribute__ for GCC\n+\t< 3.4.\n+\n 2012-11-09  Jason Merrill  <jason@redhat.com>\n \n \t* demangle.h (enum demangle_component_type): Add"}, {"sha": "40f4a5fea42a07cf25877fff29679c7267496257", "filename": "include/ansidecl.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9654e9c299a49165ead24c6c2fa773f44ea5d100/include%2Fansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9654e9c299a49165ead24c6c2fa773f44ea5d100/include%2Fansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fansidecl.h?ref=9654e9c299a49165ead24c6c2fa773f44ea5d100", "patch": "@@ -279,8 +279,15 @@ So instead we use the macro below and test it against specific values.  */\n # endif\n #endif\n \n+/* Similarly to ARG_UNUSED below.  Prior to GCC 3.4, the C++ frontend\n+   couldn't parse attributes placed after the identifier name, and now\n+   the entire compiler is built with C++.  */\n #ifndef ATTRIBUTE_UNUSED\n-#define ATTRIBUTE_UNUSED __attribute__ ((__unused__))\n+#if GCC_VERSION >= 3004\n+#  define ATTRIBUTE_UNUSED __attribute__ ((__unused__))\n+#else\n+#define ATTRIBUTE_UNUSED\n+#endif\n #endif /* ATTRIBUTE_UNUSED */\n \n /* Before GCC 3.4, the C++ frontend couldn't parse attributes placed after the"}]}