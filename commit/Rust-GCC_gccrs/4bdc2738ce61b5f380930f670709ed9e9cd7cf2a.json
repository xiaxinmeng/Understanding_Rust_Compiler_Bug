{"sha": "4bdc2738ce61b5f380930f670709ed9e9cd7cf2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJkYzI3MzhjZTYxYjVmMzgwOTMwZjY3MDcwOWVkOWU5Y2Q3Y2YyYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-04-27T14:32:09Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2018-04-27T14:32:09Z"}, "message": "Fix aarch64 ILP32 ICE with vaarg gimplified code\n\n2018-04-27  Richard Biener  <rguenther@suse.de>\n\n\t* config/aarch64/aarch64.c: Simplify ap.__stack advance and\n\tfix for ILP32.\n\nFrom-SVN: r259711", "tree": {"sha": "2deca801fb70e9fceb92c2c0f69498c8b0935f88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2deca801fb70e9fceb92c2c0f69498c8b0935f88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bdc2738ce61b5f380930f670709ed9e9cd7cf2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bdc2738ce61b5f380930f670709ed9e9cd7cf2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bdc2738ce61b5f380930f670709ed9e9cd7cf2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bdc2738ce61b5f380930f670709ed9e9cd7cf2a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "036b5ad136407a9a399ee4dc7d33067e0d95672e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/036b5ad136407a9a399ee4dc7d33067e0d95672e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/036b5ad136407a9a399ee4dc7d33067e0d95672e"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "4db67b8d069626305a807822ea97036b971daea1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bdc2738ce61b5f380930f670709ed9e9cd7cf2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bdc2738ce61b5f380930f670709ed9e9cd7cf2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bdc2738ce61b5f380930f670709ed9e9cd7cf2a", "patch": "@@ -1,3 +1,8 @@\n+2018-04-27  Richard Biener  <rguenther@suse.de>\n+\n+\t* config/aarch64/aarch64.c: Simplify ap.__stack advance and\n+\tfix for ILP32.\n+\n 2018-04-27  Richard Biener  <rguenther@suse.de>\n \n \t* tree-cfg.c (verify_expr): Make dead code hit gcc_unreachable."}, {"sha": "8aad9f74d7ac1364642dfcb20f7caf8c76f18244", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bdc2738ce61b5f380930f670709ed9e9cd7cf2a/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bdc2738ce61b5f380930f670709ed9e9cd7cf2a/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=4bdc2738ce61b5f380930f670709ed9e9cd7cf2a", "patch": "@@ -12267,23 +12267,17 @@ aarch64_gimplify_va_arg_expr (tree valist, tree type, gimple_seq *pre_p,\n   if (align > 8)\n     {\n       /* if (alignof(type) > 8) (arg = arg + 15) & -16;  */\n-      t = fold_convert (intDI_type_node, arg);\n-      t = build2 (PLUS_EXPR, TREE_TYPE (t), t,\n-\t\t  build_int_cst (TREE_TYPE (t), 15));\n+      t = fold_build_pointer_plus_hwi (arg, 15);\n       t = build2 (BIT_AND_EXPR, TREE_TYPE (t), t,\n \t\t  build_int_cst (TREE_TYPE (t), -16));\n-      t = fold_convert (TREE_TYPE (arg), t);\n       roundup = build2 (MODIFY_EXPR, TREE_TYPE (arg), arg, t);\n     }\n   else\n     roundup = NULL;\n   /* Advance ap.__stack  */\n-  t = fold_convert (intDI_type_node, arg);\n-  t = build2 (PLUS_EXPR, TREE_TYPE (t), t,\n-\t      build_int_cst (TREE_TYPE (t), size + 7));\n+  t = fold_build_pointer_plus_hwi (arg, size + 7);\n   t = build2 (BIT_AND_EXPR, TREE_TYPE (t), t,\n \t      build_int_cst (TREE_TYPE (t), -8));\n-  t = fold_convert (TREE_TYPE (arg), t);\n   t = build2 (MODIFY_EXPR, TREE_TYPE (stack), unshare_expr (stack), t);\n   /* String up roundup and advance.  */\n   if (roundup)"}]}