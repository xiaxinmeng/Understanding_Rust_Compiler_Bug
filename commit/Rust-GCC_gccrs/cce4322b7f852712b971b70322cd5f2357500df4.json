{"sha": "cce4322b7f852712b971b70322cd5f2357500df4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NlNDMyMmI3Zjg1MjcxMmI5NzFiNzAzMjJjZDVmMjM1NzUwMGRmNA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-07-12T13:33:12Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-07-12T13:33:12Z"}, "message": "(matcher for SFmode inequality comparison): Use cmfe, not cfm.\n\n(matchers for {store-flag, not-store-flag, neg-store-flag}): Output\nif-false instruction first before if-true instruction.\n(matcher for (AND store-flag x)): Only match if reversible_cc_register.\n(matcher for (IF-THEN-ELSE reg (NOT reg))): Likewise.\n\nFrom-SVN: r7741", "tree": {"sha": "4b64d6d0359c941efa547acbd9162813a4ff6a40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b64d6d0359c941efa547acbd9162813a4ff6a40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cce4322b7f852712b971b70322cd5f2357500df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce4322b7f852712b971b70322cd5f2357500df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cce4322b7f852712b971b70322cd5f2357500df4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce4322b7f852712b971b70322cd5f2357500df4/comments", "author": null, "committer": null, "parents": [{"sha": "31e6408aeef9635a0975c6fafb0cb94c490076ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e6408aeef9635a0975c6fafb0cb94c490076ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31e6408aeef9635a0975c6fafb0cb94c490076ef"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "ea09e13f51ba65c1603049e89605293b2d569ba4", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cce4322b7f852712b971b70322cd5f2357500df4/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cce4322b7f852712b971b70322cd5f2357500df4/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=cce4322b7f852712b971b70322cd5f2357500df4", "patch": "@@ -2792,8 +2792,8 @@\n \t\t       (match_operand:SF 1 \"fpu_add_operand\" \"fG,H\")))]\n   \"\"\n   \"@\n-   cmf%?\\\\t%0, %1\n-   cnf%?\\\\t%0, #%N1\"\n+   cmf%?e\\\\t%0, %1\n+   cnf%?e\\\\t%0, #%N1\"\n [(set_attr \"conds\" \"set\")\n  (set_attr \"type\" \"f_2_r\")])\n \n@@ -3146,7 +3146,7 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(match_operator:SI 1 \"comparison_operator\" [(reg 24) (const_int 0)]))]\n   \"\"\n-  \"mov%d1\\\\t%0, #1\\;mov%D1\\\\t%0, #0\"\n+  \"mov%D1\\\\t%0, #0\\;mov%d1\\\\t%0, #1\"\n [(set_attr \"conds\" \"use\")\n  (set_attr \"length\" \"8\")])\n \n@@ -3155,7 +3155,7 @@\n \t(neg:SI (match_operator:SI 1 \"comparison_operator\"\n \t\t [(reg 24) (const_int 0)])))]\n   \"\"\n-  \"mvn%d1\\\\t%0, #0\\;mov%D1\\\\t%0, #0\"\n+  \"mov%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #0\"\n [(set_attr \"conds\" \"use\")\n  (set_attr \"length\" \"8\")])\n \n@@ -3164,7 +3164,7 @@\n \t(not:SI (match_operator:SI 1 \"comparison_operator\"\n \t\t [(reg 24) (const_int 0)])))]\n   \"\"\n-  \"mvn%d1\\\\t%0, #1\\;mov%D1\\\\t%0, #0\"\n+  \"mov%D1\\\\t%0, #0\\;mvn%d1\\\\t%0, #1\"\n [(set_attr \"conds\" \"use\")\n  (set_attr \"length\" \"8\")])\n \n@@ -3634,7 +3634,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(and:SI (match_operator 1 \"comparison_operator\"\n-\t\t [(reg 24) (const_int 0)])\n+\t\t [(match_operand 3 \"reversible_cc_register\" \"\") (const_int 0)])\n \t\t(match_operand:SI 2 \"s_register_operand\" \"r\")))]\n   \"\"\n   \"mov%D1\\\\t%0, #0\\;and%d1\\\\t%0, %2, #1\"\n@@ -3851,10 +3851,10 @@\n   \"*\n   if (GET_CODE (operands[3]) == NE)\n     {\n-      if (which_alternative != 0)\n-\toutput_asm_insn (\\\"mov%d4\\\\t%0, %1\\\", operands);\n       if (which_alternative != 1)\n \toutput_asm_insn (\\\"mov%D4\\\\t%0, %2\\\", operands);\n+      if (which_alternative != 0)\n+\toutput_asm_insn (\\\"mov%d4\\\\t%0, %1\\\", operands);\n       return \\\"\\\";\n     }\n   if (which_alternative != 0)\n@@ -5401,7 +5401,8 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r\")\n \t(if_then_else:SI (match_operator 4 \"comparison_operator\"\n-\t\t\t  [(match_operand 3 \"cc_register\" \"\") (const_int 0)])\n+\t\t\t  [(match_operand 3 \"reversible_cc_register\" \"\")\n+\t\t\t   (const_int 0)])\n \t\t\t (match_operand:SI 1 \"arm_rhs_operand\" \"0,?rI\")\n \t\t\t (not:SI\n \t\t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\"))))]"}]}