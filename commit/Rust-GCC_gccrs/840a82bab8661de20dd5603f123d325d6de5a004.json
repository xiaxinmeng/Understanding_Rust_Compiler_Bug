{"sha": "840a82bab8661de20dd5603f123d325d6de5a004", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQwYTgyYmFiODY2MWRlMjBkZDU2MDNmMTIzZDMyNWQ2ZGU1YTAwNA==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2009-12-13T22:44:27Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2009-12-13T22:44:27Z"}, "message": "gc_locks.h: For __ARM_EABI__ define GC_test_and_set GC_clear to use the atomic builtins.\n\n2009-12-09  Matthias Klose  <doko@ubuntu.com> \n\n        * include/private/gc_locks.h: For __ARM_EABI__ define\n        GC_test_and_set  GC_clear to use the atomic builtins.\n\nFrom-SVN: r155198", "tree": {"sha": "c905c4a14d4f1d7e89745b13416dac4037c5cab2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c905c4a14d4f1d7e89745b13416dac4037c5cab2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/840a82bab8661de20dd5603f123d325d6de5a004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/840a82bab8661de20dd5603f123d325d6de5a004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/840a82bab8661de20dd5603f123d325d6de5a004", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/840a82bab8661de20dd5603f123d325d6de5a004/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38fb287358032f46d834287481984cdb997196df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38fb287358032f46d834287481984cdb997196df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38fb287358032f46d834287481984cdb997196df"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "542ddc1e0b62e56f3bd75013501c7734b75798e9", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/840a82bab8661de20dd5603f123d325d6de5a004/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/840a82bab8661de20dd5603f123d325d6de5a004/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=840a82bab8661de20dd5603f123d325d6de5a004", "patch": "@@ -1,3 +1,8 @@\n+2009-12-09  Matthias Klose  <doko@ubuntu.com> \n+\n+\t* include/private/gc_locks.h: For __ARM_EABI__ define\n+\tGC_test_and_set  GC_clear to use the atomic builtins.\n+\n 2009-12-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.in: Regenerate."}, {"sha": "54cfdb92d374e8634ef4f06bda6fb5b75c475d1d", "filename": "boehm-gc/include/private/gc_locks.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/840a82bab8661de20dd5603f123d325d6de5a004/boehm-gc%2Finclude%2Fprivate%2Fgc_locks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/840a82bab8661de20dd5603f123d325d6de5a004/boehm-gc%2Finclude%2Fprivate%2Fgc_locks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgc_locks.h?ref=840a82bab8661de20dd5603f123d325d6de5a004", "patch": "@@ -207,6 +207,12 @@\n #       define GC_CLEAR_DEFINED\n #    endif /* ALPHA */\n #    ifdef ARM32\n+#     define GC_TEST_AND_SET_DEFINED\n+#     if (__GNUC__>4)||((__GNUC__==4)&&(__GNUC_MINOR__>=5)) && defined(__ARM_EABI__)\n+#       define GC_CLEAR_DEFINED\n+#       define GC_test_and_set(addr) __sync_lock_test_and_set (addr, 1)\n+#       define GC_clear(addr) __sync_lock_release (addr)\n+#     else\n         inline static int GC_test_and_set(volatile unsigned int *addr) {\n           int oldval;\n           /* SWP on ARM is very similar to XCHG on x86.  Doesn't lock the\n@@ -219,7 +225,7 @@\n \t\t\t     : \"memory\");\n           return oldval;\n         }\n-#       define GC_TEST_AND_SET_DEFINED\n+#     endif\n #    endif /* ARM32 */\n #    ifdef CRIS\n         inline static int GC_test_and_set(volatile unsigned int *addr) {"}]}