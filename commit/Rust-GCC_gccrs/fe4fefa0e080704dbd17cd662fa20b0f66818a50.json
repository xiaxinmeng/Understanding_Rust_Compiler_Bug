{"sha": "fe4fefa0e080704dbd17cd662fa20b0f66818a50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU0ZmVmYTBlMDgwNzA0ZGJkMTdjZDY2MmZhMjBiMGY2NjgxOGE1MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-09-18T08:46:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-09-18T08:46:23Z"}, "message": "re PR tree-optimization/33340 (ICE: SSA corruption   with -O (FRE))\n\n2007-09-18  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/33340\n\t* tree-ssa-sccvn.c (set_ssa_val_to): Do not set values to\n\tSSA_NAMEs that occur in abnormal PHI nodes.\n\n\t* g++.dg/torture/pr33340.C: New testcase.\n\nFrom-SVN: r128571", "tree": {"sha": "79596190e659803867abccc985dbf62d3ac38592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79596190e659803867abccc985dbf62d3ac38592"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe4fefa0e080704dbd17cd662fa20b0f66818a50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe4fefa0e080704dbd17cd662fa20b0f66818a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe4fefa0e080704dbd17cd662fa20b0f66818a50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe4fefa0e080704dbd17cd662fa20b0f66818a50/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a9658279646ba0d7c8bf7c11ba709fb612e6cf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9658279646ba0d7c8bf7c11ba709fb612e6cf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a9658279646ba0d7c8bf7c11ba709fb612e6cf0"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "f8a9aff6c15cec4bd176a58bc50dc1f9d9c0038b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4fefa0e080704dbd17cd662fa20b0f66818a50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4fefa0e080704dbd17cd662fa20b0f66818a50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe4fefa0e080704dbd17cd662fa20b0f66818a50", "patch": "@@ -1,3 +1,9 @@\n+2007-09-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/33340\n+\t* tree-ssa-sccvn.c (set_ssa_val_to): Do not set values to\n+\tSSA_NAMEs that occur in abnormal PHI nodes.\n+\n 2007-09-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* tree-cfg.c (is_ctrl_altering_stmt, tree_block_ends_with_call_p):"}, {"sha": "3437101f9355c6f27b9383c03b18825fb024c9dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4fefa0e080704dbd17cd662fa20b0f66818a50/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4fefa0e080704dbd17cd662fa20b0f66818a50/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe4fefa0e080704dbd17cd662fa20b0f66818a50", "patch": "@@ -1,3 +1,8 @@\n+2007-09-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/33340\n+\t* g++.dg/torture/pr33340.C: New testcase.\n+\n 2007-09-18  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/33231"}, {"sha": "bac882156b552b0d25a35268c4a52a8fca7acfa5", "filename": "gcc/testsuite/g++.dg/torture/pr33340.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4fefa0e080704dbd17cd662fa20b0f66818a50/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr33340.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4fefa0e080704dbd17cd662fa20b0f66818a50/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr33340.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr33340.C?ref=fe4fefa0e080704dbd17cd662fa20b0f66818a50", "patch": "@@ -0,0 +1,27 @@\n+void* operator new(__SIZE_TYPE__, void* __p) { }\n+\n+struct auto_ptr {\n+        int* p;\n+        ~auto_ptr() { delete p; }\n+};\n+\n+typedef void* T;\n+struct vector {\n+        void push_back(const T& __x) {\n+                ::new(0) T(__x);\n+                insert(__x);\n+        }\n+        void insert(const T& __x);\n+} v;\n+\n+void g();\n+void f() {\n+        auto_ptr ap;\n+        if (ap.p) {\n+                ap.p = new int();\n+        }\n+        g();\n+        int* tmp = ap.p;\n+        ap.p = 0;\n+        v.push_back(tmp);\n+}"}, {"sha": "cddd2d1df58e68389f54b6415a133e6e30f240e8", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe4fefa0e080704dbd17cd662fa20b0f66818a50/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe4fefa0e080704dbd17cd662fa20b0f66818a50/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=fe4fefa0e080704dbd17cd662fa20b0f66818a50", "patch": "@@ -1022,6 +1022,11 @@ set_ssa_val_to (tree from, tree to)\n {\n   tree currval;\n \n+  if (from != to\n+      && TREE_CODE (to) == SSA_NAME\n+      && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (to))\n+    to = from;\n+\n   /* The only thing we allow as value numbers are VN_TOP, ssa_names\n      and invariants.  So assert that here.  */\n   gcc_assert (to != NULL_TREE"}]}