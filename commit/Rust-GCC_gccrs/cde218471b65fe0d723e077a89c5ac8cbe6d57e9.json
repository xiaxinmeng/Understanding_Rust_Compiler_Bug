{"sha": "cde218471b65fe0d723e077a89c5ac8cbe6d57e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RlMjE4NDcxYjY1ZmUwZDcyM2UwNzdhODljNWFjOGNiZTZkNTdlOQ==", "commit": {"author": {"name": "Stan Cox", "email": "scox@equinox.cygnus.com", "date": "1998-01-10T21:03:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-10T21:03:36Z"}, "message": "i386.md: (movsicc_1, movhicc_1): For alternate 3 set the opcode suffix from operand 3.\n\n        * i386.md: (movsicc_1, movhicc_1):  For alternate 3 set the opcode\n        suffix from operand 3.\n\nFrom-SVN: r17317", "tree": {"sha": "5f1406aaf1c78a148c620374c561ca9b9e7c4ede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f1406aaf1c78a148c620374c561ca9b9e7c4ede"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cde218471b65fe0d723e077a89c5ac8cbe6d57e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde218471b65fe0d723e077a89c5ac8cbe6d57e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cde218471b65fe0d723e077a89c5ac8cbe6d57e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde218471b65fe0d723e077a89c5ac8cbe6d57e9/comments", "author": null, "committer": null, "parents": [{"sha": "184bb750da2da4d22c64ea900ea1a4f00927ca77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/184bb750da2da4d22c64ea900ea1a4f00927ca77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/184bb750da2da4d22c64ea900ea1a4f00927ca77"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "e441214690a881bad61c275b30437423851e8081", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde218471b65fe0d723e077a89c5ac8cbe6d57e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde218471b65fe0d723e077a89c5ac8cbe6d57e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cde218471b65fe0d723e077a89c5ac8cbe6d57e9", "patch": "@@ -1,3 +1,8 @@\n+Sat Jan 10 22:04:15 1998  Stan Cox  <scox@equinox.cygnus.com>\n+\n+\t* i386.md: (movsicc_1, movhicc_1):  For alternate 3 set the opcode\n+\tsuffix from operand 3.\n+\n Sat Jan 10 21:50:16 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \t\t\t  Jeffrey A Law  (law@cygnus.com)\n "}, {"sha": "1a9f50507fce62950899888d7006f8830ab1c988", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde218471b65fe0d723e077a89c5ac8cbe6d57e9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde218471b65fe0d723e077a89c5ac8cbe6d57e9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=cde218471b65fe0d723e077a89c5ac8cbe6d57e9", "patch": "@@ -1,5 +1,5 @@\n ; GCC machine description for Intel X86.\n-;; Copyright (C) 1988, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+;; Copyright (C) 1988, 94-97, 1998 Free Software Foundation, Inc.\n ;; Mostly by William Schelter.\n \n ;; This file is part of GNU CC.\n@@ -7327,8 +7327,8 @@ byte_xor_operation:\n       {\n         if (GET_CODE (operands[0]) == MEM && GET_CODE (operands[3]) == MEM)\n           {\n-            output_asm_insn (AS2 (mov%z2,%3,%4), operands);\n-            output_asm_insn (AS2 (mov%z2,%4,%0), operands);\n+            output_asm_insn (AS2 (mov%z3,%3,%4), operands);\n+            output_asm_insn (AS2 (mov%z3,%4,%0), operands);\n           }\n         else\n       output_asm_insn (AS2 (mov%z0,%3,%0), operands);\n@@ -7388,8 +7388,8 @@ byte_xor_operation:\n       {\n         if (GET_CODE (operands[0]) == MEM && GET_CODE (operands[3]) == MEM)\n           {\n-            output_asm_insn (AS2 (mov%z2,%3,%4), operands);\n-            output_asm_insn (AS2 (mov%z2,%4,%0), operands);\n+            output_asm_insn (AS2 (mov%z3,%3,%4), operands);\n+            output_asm_insn (AS2 (mov%z3,%4,%0), operands);\n           }\n         else\n       output_asm_insn (AS2 (mov%z0,%3,%0), operands);"}]}