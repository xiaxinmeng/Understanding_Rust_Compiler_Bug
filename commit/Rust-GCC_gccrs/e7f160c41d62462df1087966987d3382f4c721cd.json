{"sha": "e7f160c41d62462df1087966987d3382f4c721cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdmMTYwYzQxZDYyNDYyZGYxMDg3OTY2OTg3ZDMzODJmNGM3MjFjZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-24T05:08:26Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-24T05:08:26Z"}, "message": "Set type of array length expressions.\n\nFrom-SVN: r170460", "tree": {"sha": "416cda2773ae046785c84772709dcecae0cbefc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/416cda2773ae046785c84772709dcecae0cbefc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7f160c41d62462df1087966987d3382f4c721cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f160c41d62462df1087966987d3382f4c721cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f160c41d62462df1087966987d3382f4c721cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f160c41d62462df1087966987d3382f4c721cd/comments", "author": null, "committer": null, "parents": [{"sha": "67e18edbc6fcddeb11629224e53629bdb59c7ed1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e18edbc6fcddeb11629224e53629bdb59c7ed1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67e18edbc6fcddeb11629224e53629bdb59c7ed1"}], "stats": {"total": 40, "additions": 16, "deletions": 24}, "files": [{"sha": "3e149b93734d58ebc84ccc7949f16f07ef49bf5e", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f160c41d62462df1087966987d3382f4c721cd/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f160c41d62462df1087966987d3382f4c721cd/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=e7f160c41d62462df1087966987d3382f4c721cd", "patch": "@@ -4287,56 +4287,48 @@ Array_type::verify_length()\n {\n   if (this->length_ == NULL)\n     return true;\n+\n+  Type_context context(Type::lookup_integer_type(\"int\"), false);\n+  this->length_->determine_type(&context);\n+\n   if (!this->length_->is_constant())\n     {\n       error_at(this->length_->location(), \"array bound is not constant\");\n       return false;\n     }\n \n   mpz_t val;\n-\n-  Type* t = this->length_->type();\n-  if (t->integer_type() != NULL)\n+  mpz_init(val);\n+  Type* vt;\n+  if (!this->length_->integer_constant_value(true, val, &vt))\n     {\n-      Type* vt;\n-      mpz_init(val);\n-      if (!this->length_->integer_constant_value(true, val, &vt))\n-\t{\n-\t  error_at(this->length_->location(),\n-\t\t   \"array bound is not constant\");\n-\t  mpz_clear(val);\n-\t  return false;\n-\t}\n-    }\n-  else if (t->float_type() != NULL)\n-    {\n-      Type* vt;\n       mpfr_t fval;\n       mpfr_init(fval);\n       if (!this->length_->float_constant_value(fval, &vt))\n \t{\n-\t  error_at(this->length_->location(),\n-\t\t   \"array bound is not constant\");\n+\t  if (this->length_->type()->integer_type() != NULL\n+\t      || this->length_->type()->float_type() != NULL)\n+\t    error_at(this->length_->location(),\n+\t\t     \"array bound is not constant\");\n+\t  else\n+\t    error_at(this->length_->location(),\n+\t\t     \"array bound is not numeric\");\n \t  mpfr_clear(fval);\n+\t  mpz_clear(val);\n \t  return false;\n \t}\n       if (!mpfr_integer_p(fval))\n \t{\n \t  error_at(this->length_->location(),\n \t\t   \"array bound truncated to integer\");\n \t  mpfr_clear(fval);\n+\t  mpz_clear(val);\n \t  return false;\n \t}\n       mpz_init(val);\n       mpfr_get_z(val, fval, GMP_RNDN);\n       mpfr_clear(fval);\n     }\n-  else\n-    {\n-      if (!t->is_error_type())\n-\terror_at(this->length_->location(), \"array bound is not numeric\");\n-      return false;\n-    }\n \n   if (mpz_sgn(val) < 0)\n     {"}]}