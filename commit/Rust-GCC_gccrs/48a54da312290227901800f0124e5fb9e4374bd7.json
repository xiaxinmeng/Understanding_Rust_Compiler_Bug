{"sha": "48a54da312290227901800f0124e5fb9e4374bd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhhNTRkYTMxMjI5MDIyNzkwMTgwMGYwMTI0ZTVmYjllNDM3NGJkNw==", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2010-09-09T12:23:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T12:23:29Z"}, "message": "gnatlbr.adb: Removed.\n\n2010-09-09  Doug Rupp  <rupp@adacore.com>\n\n\t* gnatlbr.adb: Removed.\n\t* gnat_rm.texi, ug_words, gnat_ugn.texi: Remove mention of gnatlbr.\n\nFrom-SVN: r164080", "tree": {"sha": "72aaba6087efcbd18ec86ed6000d433137e5ec1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72aaba6087efcbd18ec86ed6000d433137e5ec1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48a54da312290227901800f0124e5fb9e4374bd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48a54da312290227901800f0124e5fb9e4374bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48a54da312290227901800f0124e5fb9e4374bd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48a54da312290227901800f0124e5fb9e4374bd7/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae2aa109334c425eaab120a239b6807f211f84ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae2aa109334c425eaab120a239b6807f211f84ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae2aa109334c425eaab120a239b6807f211f84ff"}], "stats": {"total": 447, "additions": 6, "deletions": 441}, "files": [{"sha": "027896d0c6c66bbfd096b79f3b81665aa1bc208a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48a54da312290227901800f0124e5fb9e4374bd7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48a54da312290227901800f0124e5fb9e4374bd7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=48a54da312290227901800f0124e5fb9e4374bd7", "patch": "@@ -1,3 +1,8 @@\n+2010-09-09  Doug Rupp  <rupp@adacore.com>\n+\n+\t* gnatlbr.adb: Removed.\n+\t* gnat_rm.texi, ug_words, gnat_ugn.texi: Remove mention of gnatlbr.\n+\n 2010-09-09  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_res.adb (Resolve_Type_Conversion): Catch more cases of redundant"}, {"sha": "8d05b917878c731eba45038412ac027ef925edd4", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48a54da312290227901800f0124e5fb9e4374bd7/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48a54da312290227901800f0124e5fb9e4374bd7/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=48a54da312290227901800f0124e5fb9e4374bd7", "patch": "@@ -2428,9 +2428,7 @@ floating point types declared in the packages @code{Standard} and\n be @code{IEEE_Float} and the pragma has no effect. On OpenVMS, the\n argument may be @code{VAX_Float} to specify the use of the VAX float\n format for the floating-point types in Standard. This requires that\n-the standard runtime libraries be recompiled.  @xref{The GNAT Run-Time\n-Library Builder gnatlbr,,, gnat_ugn, @value{EDITION} User's Guide\n-OpenVMS}, for a description of the @code{GNAT LIBRARY} command.\n+the standard runtime libraries be recompiled.\n \n The two argument form specifies the representation to be used for\n the specified floating-point type. On all systems other than OpenVMS,\n@@ -3346,9 +3344,6 @@ type @code{Long_Float} and for floating point type representations with\n For further details on this pragma, see the\n @cite{DEC Ada Language Reference Manual}, section 3.5.7b.  Note that to use\n this pragma, the standard runtime libraries must be recompiled.\n-@xref{The GNAT Run-Time Library Builder gnatlbr,,, gnat_ugn,\n-@value{EDITION} User's Guide OpenVMS}, for a description of the\n-@code{GNAT LIBRARY} command.\n \n @node Pragma Machine_Attribute\n @unnumberedsec Pragma Machine_Attribute"}, {"sha": "ce4f863cf382d31aea6c43f777fcd80b86976197", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 0, "deletions": 88, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48a54da312290227901800f0124e5fb9e4374bd7/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48a54da312290227901800f0124e5fb9e4374bd7/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=48a54da312290227901800f0124e5fb9e4374bd7", "patch": "@@ -182,9 +182,6 @@ AdaCore@*\n * The GNAT Metric Tool gnatmetric::\n * File Name Krunching Using gnatkr::\n * Preprocessing Using gnatprep::\n-@ifset vms\n-* The GNAT Run-Time Library Builder gnatlbr::\n-@end ifset\n * The GNAT Library Browser gnatls::\n * Cleaning Up Using gnatclean::\n @ifclear vms\n@@ -409,14 +406,6 @@ Preprocessing Using gnatprep\n * Form of Definitions File::\n * Form of Input Text for gnatprep::\n \n-@ifset vms\n-The GNAT Run-Time Library Builder gnatlbr\n-\n-* Running gnatlbr::\n-* Switches for gnatlbr::\n-* Examples of gnatlbr Usage::\n-@end ifset\n-\n The GNAT Library Browser gnatls\n \n * Running gnatls::\n@@ -792,13 +781,6 @@ preprocessor utility that allows a single source file to be used to\n generate multiple or parameterized source files by means of macro\n substitution.\n \n-@ifset vms\n-@item\n-@ref{The GNAT Run-Time Library Builder gnatlbr}, describes @command{gnatlbr},\n-a tool for rebuilding the GNAT run time with user-supplied\n-configuration pragmas.\n-@end ifset\n-\n @item\n @ref{The GNAT Library Browser gnatls}, describes @code{gnatls}, a\n utility that displays information about compiled units, including dependences\n@@ -14995,76 +14977,6 @@ Header : String := $XYZ;\n @noindent\n and then the substitution will occur as desired.\n \n-@ifset vms\n-@node The GNAT Run-Time Library Builder gnatlbr\n-@chapter The GNAT Run-Time Library Builder @code{gnatlbr}\n-@findex gnatlbr\n-@cindex Library builder\n-\n-@noindent\n-@code{gnatlbr} is a tool for rebuilding the GNAT run time with user\n-supplied configuration pragmas.\n-\n-@menu\n-* Running gnatlbr::\n-* Switches for gnatlbr::\n-* Examples of gnatlbr Usage::\n-@end menu\n-\n-@node Running gnatlbr\n-@section Running @code{gnatlbr}\n-\n-@noindent\n-The @code{gnatlbr} command has the form\n-\n-@smallexample\n-$ GNAT LIBRARY /@r{[}CREATE@r{|}SET@r{|}DELETE@r{]}=directory @r{[}/CONFIG=file@r{]}\n-@end smallexample\n-\n-@node Switches for gnatlbr\n-@section Switches for @code{gnatlbr}\n-\n-@noindent\n-@code{gnatlbr} recognizes the following switches:\n-\n-@table @option\n-@c !sort!\n-@item /CREATE=directory\n-@cindex @code{/CREATE} (@code{gnatlbr})\n-Create the new run-time library in the specified directory.\n-\n-@item /SET=directory\n-@cindex @code{/SET} (@code{gnatlbr})\n-Make the library in the specified directory the current run-time library.\n-\n-@item /DELETE=directory\n-@cindex @code{/DELETE} (@code{gnatlbr})\n-Delete the run-time library in the specified directory.\n-\n-@item /CONFIG=file\n-@cindex @code{/CONFIG} (@code{gnatlbr})\n-With /CREATE: Use the configuration pragmas in the specified file when\n-building the library.\n-\n-With /SET: Use the configuration pragmas in the specified file when\n-compiling.\n-\n-@end table\n-\n-@node Examples of gnatlbr Usage\n-@section Example of @code{gnatlbr} Usage\n-\n-@smallexample\n-Contents of VAXFLOAT.ADC:\n-pragma Float_Representation (VAX_Float);\n-\n-$ GNAT LIBRARY /CREATE=[.VAXFLOAT] /CONFIG=VAXFLOAT.ADC\n-\n-GNAT LIBRARY rebuilds the run-time library in directory [.VAXFLOAT]\n-\n-@end smallexample\n-@end ifset\n-\n @node The GNAT Library Browser gnatls\n @chapter The GNAT Library Browser @code{gnatls}\n @findex gnatls"}, {"sha": "27962a4903412e86130237f96589aa15301f5d71", "filename": "gcc/ada/gnatlbr.adb", "status": "removed", "additions": 0, "deletions": 345, "changes": 345, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae2aa109334c425eaab120a239b6807f211f84ff/gcc%2Fada%2Fgnatlbr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae2aa109334c425eaab120a239b6807f211f84ff/gcc%2Fada%2Fgnatlbr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlbr.adb?ref=ae2aa109334c425eaab120a239b6807f211f84ff", "patch": "@@ -1,345 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                              G N A T L B R                               --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---          Copyright (C) 1997-2010, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n--- http://www.gnu.org/licenses for a complete copy of the license.          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  Program to create, set, or delete an alternate runtime library\n-\n---  Works by calling an appropriate target specific Makefile residing\n---  in the default library object (e.g. adalib) directory from the context\n---  of the new library objects directory.\n-\n---  Command line arguments are:\n---  1st:  --[create | set | delete]=<directory_spec>\n---    --create : Build a library\n---    --set    : Set environment variables to point to a library\n---    --delete : Delete a library\n-\n---  2nd:  --config=<file_spec>\n---  A -gnatg valid file containing desired configuration pragmas\n-\n---  This program is currently used only on Alpha/VMS\n-\n-with Ada.Command_Line;     use Ada.Command_Line;\n-with Ada.Text_IO;          use Ada.Text_IO;\n-with GNAT.OS_Lib;          use GNAT.OS_Lib;\n-with Gnatvsn;              use Gnatvsn;\n-with Interfaces.C_Streams; use Interfaces.C_Streams;\n-with Osint;                use Osint;\n-with System;\n-\n-procedure GnatLbr is\n-   pragma Ident (Gnat_Static_Version_String);\n-\n-   type Lib_Mode is (None, Create, Set, Delete);\n-   Next_Arg  : Integer;\n-   Mode      : Lib_Mode := None;\n-   ADC_File  : String_Access := null;\n-   Lib_Dir   : String_Access := null;\n-   Make      : constant String := \"make\";\n-   Make_Path : String_Access;\n-\n-   procedure Create_Directory (Name : System.Address);\n-   pragma Import (C, Create_Directory, \"__gnat_mkdir\");\n-\n-begin\n-   if Argument_Count = 0 then\n-      Put (\"Usage: \");\n-      Put_Line\n-        (\"gnatlbr --[create|set|delete]=<directory> [--config=<file>]\");\n-      Exit_Program (E_Fatal);\n-   end if;\n-\n-   Next_Arg := 1;\n-\n-   loop\n-      exit when Next_Arg > Argument_Count;\n-\n-      Process_One_Arg : declare\n-         Arg : constant String := Argument (Next_Arg);\n-\n-      begin\n-         if Arg'Length > 9 and then Arg (1 .. 9) = \"--create=\" then\n-            if Mode = None then\n-               Mode := Create;\n-               Lib_Dir := new String'(Arg (10 .. Arg'Last));\n-            else\n-               Put_Line (Standard_Error, \"Error: Multiple modes specified\");\n-               Exit_Program (E_Fatal);\n-            end if;\n-\n-         elsif Arg'Length > 6 and then Arg (1 .. 6) = \"--set=\" then\n-            if Mode = None then\n-               Mode := Set;\n-               Lib_Dir := new String'(Arg (7 .. Arg'Last));\n-            else\n-               Put_Line (Standard_Error, \"Error: Multiple modes specified\");\n-               Exit_Program (E_Fatal);\n-            end if;\n-\n-         elsif Arg'Length > 9 and then Arg (1 .. 9) = \"--delete=\" then\n-            if Mode = None then\n-               Mode := Delete;\n-               Lib_Dir := new String'(Arg (10 .. Arg'Last));\n-            else\n-               Put_Line (Standard_Error, \"Error: Multiple modes specified\");\n-               Exit_Program (E_Fatal);\n-            end if;\n-\n-         elsif Arg'Length > 9 and then Arg (1 .. 9) = \"--config=\" then\n-            if ADC_File /= null then\n-               Put_Line (Standard_Error,\n-                         \"Error: Multiple gnat.adc files specified\");\n-               Exit_Program (E_Fatal);\n-            end if;\n-\n-            ADC_File := new String'(Arg (10 .. Arg'Last));\n-\n-         else\n-            Put_Line (Standard_Error, \"Error: Unrecognized option: \" & Arg);\n-            Exit_Program (E_Fatal);\n-\n-         end if;\n-      end Process_One_Arg;\n-\n-      Next_Arg := Next_Arg + 1;\n-   end loop;\n-\n-   case Mode is\n-      when Create =>\n-\n-         --  Validate arguments\n-\n-         if Lib_Dir = null then\n-            Put_Line (Standard_Error, \"Error: No library directory specified\");\n-            Exit_Program (E_Fatal);\n-         end if;\n-\n-         if Is_Directory (Lib_Dir.all) then\n-            Put_Line (Standard_Error,\n-                      \"Error:\" & Lib_Dir.all & \" already exists\");\n-            Exit_Program (E_Fatal);\n-         end if;\n-\n-         if ADC_File = null then\n-            Put_Line (Standard_Error,\n-                      \"Error: No configuration file specified\");\n-            Exit_Program (E_Fatal);\n-         end if;\n-\n-         if not Is_Regular_File (ADC_File.all) then\n-            Put_Line (Standard_Error,\n-                      \"Error: \" & ADC_File.all & \" doesn't exist\");\n-            Exit_Program (E_Fatal);\n-         end if;\n-\n-         Create_Block : declare\n-            Success        : Boolean;\n-            Make_Args      : Argument_List (1 .. 9);\n-            C_Lib_Dir      : String := Lib_Dir.all & ASCII.NUL;\n-            C_ADC_File     : String := ADC_File.all & ASCII.NUL;\n-            F_ADC_File     : String (1 .. max_path_len);\n-            F_ADC_File_Len : Integer := max_path_len;\n-            Include_Dirs   : Integer;\n-            Object_Dirs    : Integer;\n-            Include_Dir    : array (Integer range 1 .. 256) of String_Access;\n-            Object_Dir     : array (Integer range 1 .. 256) of String_Access;\n-            Include_Dir_Name : String_Access;\n-            Object_Dir_Name  : String_Access;\n-\n-         begin\n-            --  Create the new top level library directory\n-\n-            if not Is_Directory (Lib_Dir.all) then\n-               Create_Directory (C_Lib_Dir'Address);\n-            end if;\n-\n-            full_name (C_ADC_File'Address, F_ADC_File'Address);\n-\n-            for I in 1 .. max_path_len loop\n-               if F_ADC_File (I) = ASCII.NUL then\n-                  F_ADC_File_Len := I - 1;\n-                  exit;\n-               end if;\n-            end loop;\n-\n-            --\n-            --  Make a list of the default library source and object\n-            --  directories.  Usually only one, except on VMS where\n-            --  there are two.\n-            --\n-            Include_Dirs := 0;\n-            Include_Dir_Name := new String'(Include_Dir_Default_Prefix);\n-            Get_Next_Dir_In_Path_Init (Include_Dir_Name);\n-\n-            loop\n-               declare\n-                  Dir : constant String_Access :=\n-                          Get_Next_Dir_In_Path (Include_Dir_Name);\n-               begin\n-                  exit when Dir = null;\n-                  Include_Dirs := Include_Dirs + 1;\n-                  Include_Dir (Include_Dirs) :=\n-                    String_Access (Normalize_Directory_Name (Dir.all));\n-               end;\n-            end loop;\n-\n-            Object_Dirs := 0;\n-            Object_Dir_Name := new String'(Object_Dir_Default_Prefix);\n-            Get_Next_Dir_In_Path_Init (Object_Dir_Name);\n-\n-            loop\n-               declare\n-                  Dir : constant String_Access :=\n-                          Get_Next_Dir_In_Path (Object_Dir_Name);\n-               begin\n-                  exit when Dir = null;\n-                  Object_Dirs := Object_Dirs + 1;\n-                  Object_Dir (Object_Dirs)\n-                    := String_Access (Normalize_Directory_Name (Dir.all));\n-               end;\n-            end loop;\n-\n-            --  \"Make\" an alternate sublibrary for each default sublibrary\n-\n-            for Dirs in 1 .. Object_Dirs loop\n-               Make_Args (1) :=\n-                 new String'(\"-C\");\n-\n-               Make_Args (2) :=\n-                 new String'(Lib_Dir.all);\n-\n-               --  Resolve /gnu on VMS by converting to host format and then\n-               --  convert resolved path back to canonical format for the\n-               --  make program. This fixes the problem that can occur when\n-               --  GNU: is a search path pointing to multiple versions of GNAT.\n-\n-               Make_Args (3) :=\n-                 new String'(\"ADA_INCLUDE_PATH=\" &\n-                   To_Canonical_Dir_Spec\n-                     (To_Host_Dir_Spec\n-                       (Include_Dir (Dirs).all, True).all, True).all);\n-\n-               Make_Args (4) :=\n-                 new String'(\"ADA_OBJECTS_PATH=\" &\n-                   To_Canonical_Dir_Spec\n-                     (To_Host_Dir_Spec\n-                       (Object_Dir (Dirs).all, True).all, True).all);\n-\n-               Make_Args (5) :=\n-                 new String'(\"GNAT_ADC_FILE=\"\n-                             & F_ADC_File (1 .. F_ADC_File_Len));\n-\n-               Make_Args (6) :=\n-                 new String'(\"LIBRARY_VERSION=\" & '\"' &\n-                             Verbose_Library_Version & '\"');\n-\n-               Make_Args (7) :=\n-                 new String'(\"-f\");\n-\n-               Make_Args (8) :=\n-                 new String'(Object_Dir (Dirs).all & \"Makefile.lib\");\n-\n-               Make_Args (9) :=\n-                 new String'(\"create\");\n-\n-               Make_Path := Locate_Exec_On_Path (Make);\n-               Put (Make);\n-\n-               for J in 1 .. Make_Args'Last loop\n-                  Put (\" \");\n-                  Put (Make_Args (J).all);\n-               end loop;\n-\n-               New_Line;\n-               Spawn (Make_Path.all, Make_Args, Success);\n-\n-               if not Success then\n-                  Put_Line (Standard_Error, \"Error: Make failed\");\n-                  Exit_Program (E_Fatal);\n-               end if;\n-            end loop;\n-         end Create_Block;\n-\n-      when Set =>\n-\n-         --  Validate arguments\n-\n-         if Lib_Dir = null then\n-            Put_Line (Standard_Error,\n-                      \"Error: No library directory specified\");\n-            Exit_Program (E_Fatal);\n-         end if;\n-\n-         if not Is_Directory (Lib_Dir.all) then\n-            Put_Line (Standard_Error,\n-                      \"Error: \" & Lib_Dir.all & \" doesn't exist\");\n-            Exit_Program (E_Fatal);\n-         end if;\n-\n-         if ADC_File = null then\n-            Put_Line (Standard_Error,\n-                      \"Error: No configuration file specified\");\n-            Exit_Program (E_Fatal);\n-         end if;\n-\n-         if not Is_Regular_File (ADC_File.all) then\n-            Put_Line (Standard_Error,\n-                      \"Error: \" & ADC_File.all & \" doesn't exist\");\n-            Exit_Program (E_Fatal);\n-         end if;\n-\n-         --  Give instructions\n-\n-         Put_Line (\"Copy the contents of \"\n-           & ADC_File.all & \" into your GNAT.ADC file\");\n-         Put_Line (\"and use GNAT Make qualifier /OBJECT_SEARCH=(\"\n-           & To_Host_Dir_Spec\n-               (Lib_Dir (Lib_Dir'First .. Lib_Dir'Last) & \"/declib\", False).all\n-           & \",\"\n-           & To_Host_Dir_Spec\n-               (Lib_Dir (Lib_Dir'First .. Lib_Dir'Last) & \"/adalib\", False).all\n-           & \")\");\n-         Put_Line (\"or else define ADA_OBJECTS_PATH as \" & '\"'\n-           & To_Host_Dir_Spec\n-               (Lib_Dir (Lib_Dir'First .. Lib_Dir'Last) & \"/declib\", False).all\n-           & ','\n-           & To_Host_Dir_Spec\n-               (Lib_Dir (Lib_Dir'First .. Lib_Dir'Last) & \"/adalib\", False).all\n-           & '\"');\n-\n-      when Delete =>\n-\n-         --  Give instructions\n-\n-         Put_Line (\"GNAT Librarian DELETE not yet implemented.\");\n-         Put_Line (\"Use appropriate system tools to remove library\");\n-\n-      when None =>\n-         Put_Line (Standard_Error,\n-                   \"Error: No mode (create|set|delete) specified\");\n-         Exit_Program (E_Fatal);\n-\n-   end case;\n-\n-end GnatLbr;"}, {"sha": "6d47ed473e5c23f3d0227b9f10eca8de72d2b03e", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48a54da312290227901800f0124e5fb9e4374bd7/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48a54da312290227901800f0124e5fb9e4374bd7/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=48a54da312290227901800f0124e5fb9e4374bd7", "patch": "@@ -24,8 +24,6 @@ gnatfind        ^ GNAT FIND\n Gnatfind        ^ GNAT FIND\n gnatkr          ^ GNAT KRUNCH\n Gnatkr          ^ GNAT KRUNCH\n-gnatlbr         ^ GNAT LIBRARY\n-Gnatlbr         ^ GNAT LIBRARY\n gnatlink        ^ GNAT LINK\n Gnatlink        ^ GNAT LINK\n gnatls          ^ GNAT LIST"}]}