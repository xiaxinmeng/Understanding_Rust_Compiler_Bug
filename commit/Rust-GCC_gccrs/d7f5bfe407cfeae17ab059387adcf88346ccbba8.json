{"sha": "d7f5bfe407cfeae17ab059387adcf88346ccbba8", "node_id": "C_kwDOANBUbNoAKGQ3ZjViZmU0MDdjZmVhZTE3YWIwNTkzODdhZGNmODgzNDZjY2JiYTg", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-01-14T15:09:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-09T09:27:36Z"}, "message": "[Ada] Remove redundant guards for empty list\n\nRoutine Has_Excluded_Declaration iterates over declarations with\nFirst/Present/Next, which is safe when declarations are No_List.\n\nCleanup related to excessive inlining-for-proof by GNATprove.\n\ngcc/ada/\n\n\t* inline.adb (Build_Body_To_Inline): Remove redundant guards.\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Likewise.", "tree": {"sha": "f9665b72ab891f2a74e3d8cc4ecf2678586d4b5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9665b72ab891f2a74e3d8cc4ecf2678586d4b5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7f5bfe407cfeae17ab059387adcf88346ccbba8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f5bfe407cfeae17ab059387adcf88346ccbba8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f5bfe407cfeae17ab059387adcf88346ccbba8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f5bfe407cfeae17ab059387adcf88346ccbba8/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f920ab029d9a742b5be4a52d5b9be19142c814ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f920ab029d9a742b5be4a52d5b9be19142c814ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f920ab029d9a742b5be4a52d5b9be19142c814ce"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "5944aed0b00a5cf1a9ffb5fdb01fc77ab8e146fd", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f5bfe407cfeae17ab059387adcf88346ccbba8/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f5bfe407cfeae17ab059387adcf88346ccbba8/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=d7f5bfe407cfeae17ab059387adcf88346ccbba8", "patch": "@@ -1330,9 +1330,7 @@ package body Inline is\n          return;\n       end if;\n \n-      if Present (Declarations (N))\n-        and then Has_Excluded_Declaration (Spec_Id, Declarations (N))\n-      then\n+      if Has_Excluded_Declaration (Spec_Id, Declarations (N)) then\n          return;\n       end if;\n \n@@ -2622,9 +2620,7 @@ package body Inline is\n \n       --  Check excluded declarations\n \n-      elsif Present (Declarations (N))\n-        and then Has_Excluded_Declaration (Spec_Id, Declarations (N))\n-      then\n+      elsif Has_Excluded_Declaration (Spec_Id, Declarations (N)) then\n          return;\n \n       --  Check excluded statements. There is no need to protect us against\n@@ -4388,9 +4384,7 @@ package body Inline is\n             return True;\n \n          elsif Nkind (S) = N_Block_Statement then\n-            if Present (Declarations (S))\n-              and then Has_Excluded_Declaration (Subp, Declarations (S))\n-            then\n+            if Has_Excluded_Declaration (Subp, Declarations (S)) then\n                return True;\n \n             elsif Present (Handled_Statement_Sequence (S)) then"}, {"sha": "22faeb6afb3c2a99249791dc0b532ec243d8b2a8", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f5bfe407cfeae17ab059387adcf88346ccbba8/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f5bfe407cfeae17ab059387adcf88346ccbba8/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=d7f5bfe407cfeae17ab059387adcf88346ccbba8", "patch": "@@ -4931,9 +4931,7 @@ package body Sem_Ch6 is\n                      --  by the GCC backend (ie. \"function might not be\n                      --  inlinable\").\n \n-                     if Present (Subp_Decl)\n-                       and then Has_Excluded_Declaration (Spec_Id, Subp_Decl)\n-                     then\n+                     if Has_Excluded_Declaration (Spec_Id, Subp_Decl) then\n                         null;\n \n                      elsif Has_Excluded_Statement"}]}