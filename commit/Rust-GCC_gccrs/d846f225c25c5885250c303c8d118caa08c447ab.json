{"sha": "d846f225c25c5885250c303c8d118caa08c447ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg0NmYyMjVjMjVjNTg4NTI1MGMzMDNjOGQxMThjYWEwOGM0NDdhYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-05-04T13:51:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-05-05T07:11:32Z"}, "message": "tree-optimization/79333 - fold stmts following SSA edges in VN\n\nThis makes sure to follow SSA edges when folding eliminated stmts.\nThis reaps the same benefit as forwprop folding all stmts, not\nwaiting for one to produce copysign in the new testcase.\n\n2021-05-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/79333\n\t* tree-ssa-sccvn.c (eliminate_dom_walker::eliminate_stmt):\n\tFold stmt following SSA edges.\n\n\t* gcc.dg/tree-ssa/ssa-fre-94.c: New testcase.\n\t* gcc.dg/graphite/fuse-1.c: Adjust.\n\t* gcc.dg/pr43864-4.c: Likewise.", "tree": {"sha": "c4fa398db14529b017baaa0696620167001518eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4fa398db14529b017baaa0696620167001518eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d846f225c25c5885250c303c8d118caa08c447ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d846f225c25c5885250c303c8d118caa08c447ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d846f225c25c5885250c303c8d118caa08c447ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d846f225c25c5885250c303c8d118caa08c447ab/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ebf6b99952ada09bf9ea0144dcd1d46363b0464", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ebf6b99952ada09bf9ea0144dcd1d46363b0464", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ebf6b99952ada09bf9ea0144dcd1d46363b0464"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "527b6e5c41597ce72f4e6a2a912039dd41b3d7f3", "filename": "gcc/testsuite/gcc.dg/graphite/fuse-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d846f225c25c5885250c303c8d118caa08c447ab/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d846f225c25c5885250c303c8d118caa08c447ab/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Ffuse-1.c?ref=d846f225c25c5885250c303c8d118caa08c447ab", "patch": "@@ -1,6 +1,6 @@\n /* Check that the two loops are fused and that we manage to fold the two xor\n    operations.  */\n-/* { dg-options \"-O2 -floop-nest-optimize -fdump-tree-forwprop-all -fdump-tree-graphite-all\" } */\n+/* { dg-options \"-O2 -floop-nest-optimize -fdump-tree-forwprop4 -fdump-tree-graphite-all\" } */\n \n /* Make sure we fuse the loops like this:\n AST generated by isl:\n@@ -12,7 +12,7 @@ for (int c0 = 0; c0 <= 99; c0 += 1) {\n /* { dg-final { scan-tree-dump-times \"AST generated by isl:.*for \\\\(int c0 = 0; c0 <= 99; c0 \\\\+= 1\\\\) \\\\{.*S_.*\\\\(c0\\\\);.*S_.*\\\\(c0\\\\);.*S_.*\\\\(c0\\\\);.*\\\\}\" 1 \"graphite\" } } */\n \n /* Check that after fusing the loops, the scalar computation is also fused.  */\n-/* { dg-final { scan-tree-dump-times \"gimple_simplified to\\[^\\\\n\\]*\\\\^ 12\" 1 \"forwprop4\" } } */\n+/* { dg-final { scan-tree-dump-times \" \\\\^ 12;\" 2 \"forwprop4\" } } */\n \n #define MAX 100\n int A[MAX];"}, {"sha": "8a25b0fd8efbea8ecf28389950616bade6b61702", "filename": "gcc/testsuite/gcc.dg/pr43864-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d846f225c25c5885250c303c8d118caa08c447ab/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43864-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d846f225c25c5885250c303c8d118caa08c447ab/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43864-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43864-4.c?ref=d846f225c25c5885250c303c8d118caa08c447ab", "patch": "@@ -22,7 +22,7 @@ int f(int c, int b, int d)\n   return r - r2;\n }\n \n-/* { dg-final { scan-tree-dump-times \"if \" 0 \"pre\"} } */\n-/* { dg-final { scan-tree-dump-times \"(?n)_.*\\\\+.*_\" 1 \"pre\"} } */\n-/* { dg-final { scan-tree-dump-times \"(?n)_.*-.*_\" 2 \"pre\"} } */\n+/* During PRE elimination we should simplify this to return b * 2.  */\n+/* { dg-final { scan-tree-dump-times \"if \" 0 \"pre\" } } */\n+/* { dg-final { scan-tree-dump \"_\\[0-9\\]+ = b_\\[0-9\\]+\\\\(D\\\\) \\\\* 2;\\[\\\\r\\\\n\\]\\[^\\\\r\\\\n\\]*return _\\[0-9\\]+;\" \"pre\" } } */\n /* { dg-final { scan-tree-dump-not \"Invalid sum\" \"pre\"} } */"}, {"sha": "92eebf636c650ab32288b59bc5e2956b7787e72d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-94.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d846f225c25c5885250c303c8d118caa08c447ab/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-94.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d846f225c25c5885250c303c8d118caa08c447ab/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-94.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-94.c?ref=d846f225c25c5885250c303c8d118caa08c447ab", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/79333 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ffinite-math-only -fdump-tree-fre1\" } */\n+\n+extern __inline __attribute__ ((__always_inline__,__gnu_inline__))\n+double __attribute__ ((__nothrow__ , __leaf__))\n+fabs (double __x) { return __builtin_fabs (__x); }\n+\n+double f(float f)\n+{\n+  double t1 = fabs(f);\n+  double t2 = f / t1;\n+  return t2;\n+}\n+\n+/* { dg-final { scan-tree-dump \"copysign\" \"fre1\" } } */"}, {"sha": "e54a0c9065c2c3c6ef64acafec8cb131d3570f06", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d846f225c25c5885250c303c8d118caa08c447ab/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d846f225c25c5885250c303c8d118caa08c447ab/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=d846f225c25c5885250c303c8d118caa08c447ab", "patch": "@@ -6362,7 +6362,7 @@ eliminate_dom_walker::eliminate_stmt (basic_block b, gimple_stmt_iterator *gsi)\n \trecompute_tree_invariant_for_addr_expr (gimple_assign_rhs1 (stmt));\n       gimple_stmt_iterator prev = *gsi;\n       gsi_prev (&prev);\n-      if (fold_stmt (gsi))\n+      if (fold_stmt (gsi, follow_all_ssa_edges))\n \t{\n \t  /* fold_stmt may have created new stmts inbetween\n \t     the previous stmt and the folded stmt.  Mark"}]}