{"sha": "1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVmMzNmZDRjZDEzOWEyNDUyNGYwY2Q0MWIwN2VhOTUyNmRmYWNjNQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-09-09T21:41:43Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-09-09T21:41:43Z"}, "message": "invoke.texi (Wnormalized=): Update.\n\ngcc/ChangeLog:\n\n2014-09-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\t* doc/invoke.texi (Wnormalized=): Update.\n\nlibcpp/ChangeLog:\n\n2014-09-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\t* include/cpplib.h (struct cpp_options): Declare warn_normalize as\n\tint instead of enum.\n\ngcc/c-family/ChangeLog:\n\n2014-09-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\t* c.opt\t(Wnormalized): New.\n\t(Wnormalized=): Use Enum and Reject Negative.\n\t* c-opts.c (c_common_handle_option): Do not handle Wnormalized here.\n\ngcc/testsuite/ChangeLog:\n\n2014-09-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\t* gcc.dg/cpp/warn-normalized-3.c: Delete useless dg-prune-output.\n\nFrom-SVN: r215093", "tree": {"sha": "b7149e4369f374e9f99892f05766f1f5473cbcd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7149e4369f374e9f99892f05766f1f5473cbcd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/comments", "author": null, "committer": null, "parents": [{"sha": "00c7a3c72adce967dc14999e14d166437dbb9f2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c7a3c72adce967dc14999e14d166437dbb9f2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c7a3c72adce967dc14999e14d166437dbb9f2d"}], "stats": {"total": 91, "additions": 57, "deletions": 34}, "files": [{"sha": "de1d1a9006e6a5f330a547a26e7de19669c9c344", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "patch": "@@ -1,3 +1,7 @@\n+2014-09-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* doc/invoke.texi (Wnormalized=): Update.\n+\n 2014-09-09  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/63195"}, {"sha": "81e253d03bd8403f67c53ba27e35a34d7f6d4a2f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "patch": "@@ -1,3 +1,9 @@\n+2014-09-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* c.opt\t(Wnormalized): New.\n+\t(Wnormalized=): Use Enum and Reject Negative.\n+\t* c-opts.c (c_common_handle_option): Do not handle Wnormalized here.\n+\n 2014-09-08  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Define macros for mantissa"}, {"sha": "74866911e5be4455fffbf4d5f790d0f5372fcbb2", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "patch": "@@ -384,29 +384,6 @@ c_common_handle_option (size_t scode, const char *arg, int value,\n       cpp_opts->warn_num_sign_change = value;\n       break;\n \n-    case OPT_Wnormalized_:\n-      /* FIXME: Move all this to c.opt.  */\n-      if (kind == DK_ERROR)\n-\t{\n-\t  gcc_assert (!arg);\n-\t  inform (input_location, \"-Werror=normalized=: set -Wnormalized=nfc\");\n-\t  cpp_opts->warn_normalize = normalized_C;\n-\t}\n-      else\n-\t{\n-\t  if (!value || (arg && strcasecmp (arg, \"none\") == 0))\n-\t    cpp_opts->warn_normalize = normalized_none;\n-\t  else if (!arg || strcasecmp (arg, \"nfkc\") == 0)\n-\t    cpp_opts->warn_normalize = normalized_KC;\n-\t  else if (strcasecmp (arg, \"id\") == 0)\n-\t    cpp_opts->warn_normalize = normalized_identifier_C;\n-\t  else if (strcasecmp (arg, \"nfc\") == 0)\n-\t    cpp_opts->warn_normalize = normalized_C;\n-\t  else\n-\t    error (\"argument %qs to %<-Wnormalized%> not recognized\", arg);\n-\t  break;\n-\t}\n-\n     case OPT_Wunknown_pragmas:\n       /* Set to greater than 1, so that even unknown pragmas in\n \t system headers will be warned about.  */"}, {"sha": "11703b92aaf6df2338899b24241a07dd95391bf2", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "patch": "@@ -633,9 +633,32 @@ Wnonnull\n C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall)\n ;\n \n+Wnormalized\n+C ObjC C++ ObjC++ Alias(Wnormalized=,nfc,none)\n+;\n+\n Wnormalized=\n-C ObjC C++ ObjC++ Joined Warning\n--Wnormalized=<id|nfc|nfkc>\tWarn about non-normalised Unicode strings\n+C ObjC C++ ObjC++ RejectNegative Joined Warning CPP(warn_normalize) Init(normalized_C) Var(cpp_warn_normalize) Enum(cpp_normalize_level)\n+-Wnormalized=<none|id|nfc|nfkc>\tWarn about non-normalised Unicode strings\n+\n+; Required for these enum values.\n+SourceInclude\n+cpplib.h\n+\n+Enum\n+Name(cpp_normalize_level) Type(int) UnknownError(argument %qs to %<-Wnormalized%> not recognized)\n+\n+EnumValue\n+Enum(cpp_normalize_level) String(none) Value(normalized_none)\n+\n+EnumValue\n+Enum(cpp_normalize_level) String(nfkc) Value(normalized_KC)\n+\n+EnumValue\n+Enum(cpp_normalize_level) String(id) Value(normalized_identifier_C)\n+\n+EnumValue\n+Enum(cpp_normalize_level) String(nfc) Value(normalized_C)\n \n Wold-style-cast\n C++ ObjC++ Var(warn_old_style_cast) Warning"}, {"sha": "a680be918fcd365bb26d86516108930ec933b0f2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "patch": "@@ -262,7 +262,8 @@ Objective-C and Objective-C++ Dialects}.\n -Wlogical-op -Wlogical-not-parentheses -Wlong-long @gol\n -Wmain -Wmaybe-uninitialized -Wmemset-transposed-args -Wmissing-braces @gol\n -Wmissing-field-initializers -Wmissing-include-dirs @gol\n--Wno-multichar  -Wnonnull  -Wodr  -Wno-overflow  -Wopenmp-simd @gol\n+-Wno-multichar  -Wnonnull  -Wnormalized=@r{[}none@r{|}id@r{|}nfc@r{|}nfkc@r{]} @gol\n+ -Wodr  -Wno-overflow  -Wopenmp-simd @gol\n -Woverlength-strings  -Wpacked  -Wpacked-bitfield-compat  -Wpadded @gol\n -Wparentheses  -Wpedantic-ms-format -Wno-pedantic-ms-format @gol\n -Wpointer-arith  -Wno-pointer-to-int-cast @gol\n@@ -4921,8 +4922,10 @@ Do not warn if a multicharacter constant (@samp{'FOOF'}) is used.\n Usually they indicate a typo in the user's code, as they have\n implementation-defined values, and should not be used in portable code.\n \n-@item -Wnormalized=<none|id|nfc|nfkc>\n+@item -Wnormalized@r{[}=@r{<}none@r{|}id@r{|}nfc@r{|}nfkc@r{>]}\n @opindex Wnormalized=\n+@opindex Wnormalized\n+@opindex Wno-normalized\n @cindex NFC\n @cindex NFKC\n @cindex character set, input normalization\n@@ -4938,7 +4941,8 @@ have not been normalized; this option controls that warning.\n There are four levels of warning supported by GCC@.  The default is\n @option{-Wnormalized=nfc}, which warns about any identifier that is\n not in the ISO 10646 ``C'' normalized form, @dfn{NFC}.  NFC is the\n-recommended form for most uses.\n+recommended form for most uses.  It is equivalent to\n+@option{-Wnormalized}.\n \n Unfortunately, there are some characters allowed in identifiers by\n ISO C and ISO C++ that, when turned into NFC, are not allowed in \n@@ -4949,9 +4953,10 @@ It is hoped that future versions of the standards involved will correct\n this, which is why this option is not the default.\n \n You can switch the warning off for all characters by writing\n-@option{-Wnormalized=none}.  You should only do this if you\n-are using some other normalization scheme (like ``D''), because\n-otherwise you can easily create bugs that are literally impossible to see.\n+@option{-Wnormalized=none} or @option{-Wno-normalized}.  You should\n+only do this if you are using some other normalization scheme (like\n+``D''), because otherwise you can easily create bugs that are\n+literally impossible to see.\n \n Some characters in ISO 10646 have distinct meanings but look identical\n in some fonts or display methodologies, especially once formatting has"}, {"sha": "0a2562ab42c47b57db555d9964453b45c40b4209", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "patch": "@@ -1,3 +1,7 @@\n+2014-09-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* gcc.dg/cpp/warn-normalized-3.c: Delete useless dg-prune-output.\n+\n 2014-09-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/swaps-p8-15.c: Remove scan-assembler-not for"}, {"sha": "d6cd56f0151aa11f5b05bca5bbec1f66b977e6a7", "filename": "gcc/testsuite/gcc.dg/cpp/warn-normalized-3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-normalized-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-normalized-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-normalized-3.c?ref=1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "patch": "@@ -1,5 +1,4 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -fextended-identifiers -Werror=normalized=\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-        // { dg-prune-output \".*-Werror=normalized=: set -Wnormalized=nfc.*\" }\n \\u0F43  // { dg-error \"`.U00000f43' is not in NFC .-Werror=normalized=.\" }"}, {"sha": "d98611925d22154e9a4a1595e9f8e588129f6834", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "patch": "@@ -1,3 +1,8 @@\n+2014-09-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* include/cpplib.h (struct cpp_options): Declare warn_normalize as\n+\tint instead of enum.\n+\n 2014-09-04  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* macro.c (replace_args): Use cpp_pedwarning, cpp_warning and"}, {"sha": "62d271be41cac5049697450b9a790546a0b7a443", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef33fd4cd139a24524f0cd41b07ea9526dfacc5/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=1ef33fd4cd139a24524f0cd41b07ea9526dfacc5", "patch": "@@ -457,8 +457,8 @@ struct cpp_options\n   const char *input_charset;\n \n   /* The minimum permitted level of normalization before a warning\n-     is generated.  */\n-  enum cpp_normalize_level warn_normalize;\n+     is generated.  See enum cpp_normalize_level.  */\n+  int warn_normalize;\n \n   /* True to warn about precompiled header files we couldn't use.  */\n   bool warn_invalid_pch;"}]}