{"sha": "e71b34aa4edbf78ac94eaed3d091f187387a0abe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcxYjM0YWE0ZWRiZjc4YWM5NGVhZWQzZDA5MWYxODczODdhMGFiZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-05-01T00:39:59Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-05-01T00:39:59Z"}, "message": "extend.texi: Improve documentation of volatile asms.\n\n\t* extend.texi: Improve documentation of volatile asms.\n\n\t* c-tree.texi: Fix thinko.\n\t* gcc.texi: Likewise.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r41712", "tree": {"sha": "06d1317ac6b39a4b55e0a3f558fb61942cd16006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06d1317ac6b39a4b55e0a3f558fb61942cd16006"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e71b34aa4edbf78ac94eaed3d091f187387a0abe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71b34aa4edbf78ac94eaed3d091f187387a0abe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e71b34aa4edbf78ac94eaed3d091f187387a0abe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71b34aa4edbf78ac94eaed3d091f187387a0abe/comments", "author": null, "committer": null, "parents": [{"sha": "d72040f508bfc01489f0fca666cbb6e8ddfae896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d72040f508bfc01489f0fca666cbb6e8ddfae896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d72040f508bfc01489f0fca666cbb6e8ddfae896"}], "stats": {"total": 64, "additions": 44, "deletions": 20}, "files": [{"sha": "699371b8e3369c699359cb076a085db514c8526a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71b34aa4edbf78ac94eaed3d091f187387a0abe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71b34aa4edbf78ac94eaed3d091f187387a0abe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e71b34aa4edbf78ac94eaed3d091f187387a0abe", "patch": "@@ -1,3 +1,13 @@\n+2001-04-30  Mark Mitchell  <mark@codesourcery.com>\n+            Richard Henderson  <rth@redhat.com>\n+\t\n+\t* extend.texi: Improve documentation of volatile asms.\n+\t\n+2001-04-30  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* c-tree.texi: Fix thinko.\n+\t* gcc.texi: Likewise.\n+\n 2001-04-30  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.c (c_promoting_integer_type_p): New function, from the"}, {"sha": "fe368f2a3e73311d07a580925548e60daf40b3c0", "filename": "gcc/c-tree.texi", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71b34aa4edbf78ac94eaed3d091f187387a0abe/gcc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71b34aa4edbf78ac94eaed3d091f187387a0abe/gcc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.texi?ref=e71b34aa4edbf78ac94eaed3d091f187387a0abe", "patch": "@@ -32,11 +32,10 @@ Copyright @copyright{} 1999, 2000, 2001 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.1 or\n-any later version published by the Free Software Foundation; with the\n-Invariant Sections being ``GNU General Public License'', the Front-Cover\n-texts being (a) (see below), and with the Back-Cover Texts being (b)\n-(see below).  A copy of the license is included in the section entitled\n-``GNU Free Documentation License''.\n+any later version published by the Free Software Foundation; with no\n+invariant sections, the Front-Cover texts being (a) (see below), and\n+with the Back-Cover Texts being (b) (see below).  A copy of the license\n+is included in the section entitled ``GNU Free Documentation License''.\n \n (a) The FSF's Front-Cover Text is:\n "}, {"sha": "57f541a7305f69c4d579f2dd7224480e5ff70f9d", "filename": "gcc/extend.texi", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71b34aa4edbf78ac94eaed3d091f187387a0abe/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71b34aa4edbf78ac94eaed3d091f187387a0abe/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=e71b34aa4edbf78ac94eaed3d091f187387a0abe", "patch": "@@ -3052,23 +3052,38 @@ the @code{asm}.  For example:\n @noindent\n If you write an @code{asm} instruction with no outputs, GNU CC will know\n the instruction has side-effects and will not delete the instruction or\n-move it outside of loops.  If the side-effects of your instruction are\n-not purely external, but will affect variables in your program in ways\n-other than reading the inputs and clobbering the specified registers or\n-memory, you should write the @code{volatile} keyword to prevent future\n-versions of GNU CC from moving the instruction around within a core\n-region.\n+move it outside of loops.\n \n-An @code{asm} instruction without any operands or clobbers (an ``old\n-style'' @code{asm}) will not be deleted or moved significantly,\n-regardless, unless it is unreachable, the same way as if you had\n-written a @code{volatile} keyword.\n+The @code{volatile} keyword indicates that the instruction has\n+important side-effects.  GCC will not delete a volatile @code{asm} if\n+it is reachable.  (The instruction can still be deleted if GCC can\n+prove that control-flow will never reach the location of the\n+instruction.)  In addition, GCC will not reschedule instructions\n+across a volatile @code{asm} instruction.  For example:\n+\n+@example\n+(volatile int *)addr = foo;\n+asm volatile (\"eieio\" : : );\n+@end example\n+\n+@noindent \n+Assume @code{addr} contains the address of a memory mapped device\n+register.  The PowerPC @code{eieio} instruction (Enforce In-order\n+Execution of I/O) tells the cpu to make sure that the store to that\n+device register happens before it issues any other I/O.\n \n Note that even a volatile @code{asm} instruction can be moved in ways\n that appear insignificant to the compiler, such as across jump\n instructions.  You can't expect a sequence of volatile @code{asm}\n instructions to remain perfectly consecutive.  If you want consecutive\n-output, use a single @code{asm}.\n+output, use a single @code{asm}.  Also, GCC will perform some\n+optimizations across a volatile @code{asm} instruction; GCC does not\n+``forget everything'' when it encounters a volatile @code{asm}\n+instruction the way some other compilers do.\n+\n+An @code{asm} instruction without any operands or clobbers (an ``old\n+style'' @code{asm}) will be treated identically to a volatile\n+@code{asm} instruction.\n \n It is a natural idea to look for a way to give access to the condition\n code left by the assembler instruction.  However, when we attempted to"}, {"sha": "c8897450d765e10ef75485e3b3ffc6d9e315d40b", "filename": "gcc/gcc.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71b34aa4edbf78ac94eaed3d091f187387a0abe/gcc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71b34aa4edbf78ac94eaed3d091f187387a0abe/gcc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.texi?ref=e71b34aa4edbf78ac94eaed3d091f187387a0abe", "patch": "@@ -125,10 +125,10 @@ Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.1 or\n any later version published by the Free Software Foundation; with the\n-Invariant Sections being ``GNU General Public License'', the Front-Cover\n-texts being (a) (see below), and with the Back-Cover Texts being (b)\n-(see below).  A copy of the license is included in the section entitled\n-``GNU Free Documentation License''.\n+Invariant Sections being ``GNU General Public License'' and ``Funding\n+Free Software'', the Front-Cover texts being (a) (see below), and with\n+the Back-Cover Texts being (b) (see below).  A copy of the license is\n+included in the section entitled ``GNU Free Documentation License''.\n \n (a) The FSF's Front-Cover Text is:\n "}]}