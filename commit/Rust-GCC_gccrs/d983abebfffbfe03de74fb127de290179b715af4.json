{"sha": "d983abebfffbfe03de74fb127de290179b715af4", "node_id": "C_kwDOANBUbNoAKGQ5ODNhYmViZmZmYmZlMDNkZTc0ZmIxMjdkZTI5MDE3OWI3MTVhZjQ", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-07-21T15:47:11Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-05T07:21:04Z"}, "message": "[Ada] Fix double identifiers in iterated component association\n\nThe iterated_component_association grammar construct appears in Ada RM\nin two syntactic forms: with iterator_specification and with\ndefining_identifier. This is now properly reflected in the GNAT AST,\nwhile previously we had two defining_identifiers regardless of the\nsyntactic form.\n\nCleanup related to handling of iterated_component_association in SPARK.\nBehavior of the compiler itself should not be affected.\n\ngcc/ada/\n\n\t* exp_aggr.adb (Two_Pass_Aggregate_Expansion): Expand iterated\n\tcomponent association with an unanalyzed copy of iterated\n\texpression. The previous code worked only because the expanded\n\tloop used both an analyzed copy of the iterator_specification and\n\tan analyzed copy of the iterated expression. Now the iterated\n\texpression is reanalyzed in the context of the expanded loop.\n\t* par-ch4.adb (Build_Iterated_Component_Association): Don't set\n\tdefining identifier when iterator specification is present.\n\t* sem_aggr.adb (Resolve_Iterated_Association): Pick index name\n\tfrom the iterator specification.\n\t* sem_elab.adb (Traverse_Potential_Scenario): Handle iterated\n\telement association just like iterated component association. Not\n\tstrictly part of this fix, but still worth for the completeness.\n\t* sem_res.adb (Resolve): Pick index name from the iterator\n\tspecification, when present.\n\t* sem_util.adb (Traverse_More): For completeness, just like the\n\tchange in Traverse_Potential_Scenario.\n\t* sinfo.ads\n\t(ITERATED_COMPONENT_ASSOCIATION): Fix and complete description.\n\t(ITERATED_ELEMENT_ASSOCIATION): Likewise.", "tree": {"sha": "d1ad50bfa607259b3d93aaa0f6e715dc82e16309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1ad50bfa607259b3d93aaa0f6e715dc82e16309"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d983abebfffbfe03de74fb127de290179b715af4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d983abebfffbfe03de74fb127de290179b715af4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d983abebfffbfe03de74fb127de290179b715af4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d983abebfffbfe03de74fb127de290179b715af4/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc32180d704e59553584ae2a814089c2af1bce09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc32180d704e59553584ae2a814089c2af1bce09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc32180d704e59553584ae2a814089c2af1bce09"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "157b01e0ba351dbbf1b9a05b319eca33e2463f34", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=d983abebfffbfe03de74fb127de290179b715af4", "patch": "@@ -6536,7 +6536,7 @@ package body Exp_Aggr is\n                     Prefix => New_Occurrence_Of (TmpE, Loc),\n                     Expressions =>\n                       New_List (New_Occurrence_Of (Index_Id, Loc))),\n-               Expression => New_Copy_Tree (Expression (Assoc)));\n+               Expression => Copy_Separate_Tree (Expression (Assoc)));\n \n             --  Advance index position for insertion.\n \n@@ -7500,11 +7500,11 @@ package body Exp_Aggr is\n \n             --  Iterated_Component_Association.\n \n-            Loop_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => Chars (Defining_Identifier (Comp)));\n-\n             if Present (Iterator_Specification (Comp)) then\n+               Loop_Id :=\n+                 Make_Defining_Identifier (Loc,\n+                   Chars => Chars (Defining_Identifier\n+                              (Iterator_Specification (Comp))));\n                L_Iteration_Scheme :=\n                  Make_Iteration_Scheme (Loc,\n                    Iterator_Specification => Iterator_Specification (Comp));\n@@ -7513,6 +7513,9 @@ package body Exp_Aggr is\n                --  Loop_Parameter_Specification is parsed with a choice list.\n                --  where the range is the first (and only) choice.\n \n+               Loop_Id :=\n+                 Make_Defining_Identifier (Loc,\n+                   Chars => Chars (Defining_Identifier (Comp)));\n                L_Range := Relocate_Node (First (Discrete_Choices (Comp)));\n \n                L_Iteration_Scheme :="}, {"sha": "9a00d7b1345e8a0c04e57dce3a3f1f65af48f938", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=d983abebfffbfe03de74fb127de290179b715af4", "patch": "@@ -3554,7 +3554,6 @@ package body Ch4 is\n          when Tok_Of =>\n             Restore_Scan_State (State);\n             Scan;  -- past OF\n-            Set_Defining_Identifier (Assoc_Node, Id);\n             Iter_Spec := P_Iterator_Specification (Id);\n             Set_Iterator_Specification (Assoc_Node, Iter_Spec);\n "}, {"sha": "8f20b3ac6fb4895622a917eb0639553df49fe201", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=d983abebfffbfe03de74fb127de290179b715af4", "patch": "@@ -3053,7 +3053,8 @@ package body Sem_Aggr is\n \n          elsif Present (Iterator_Specification (Comp)) then\n             Copy    := Copy_Separate_Tree (Iterator_Specification (Comp));\n-            Id_Name := Chars (Defining_Identifier (Comp));\n+            Id_Name :=\n+              Chars (Defining_Identifier (Iterator_Specification (Comp)));\n \n             Analyze (Copy);\n             Typ := Etype (Defining_Identifier (Copy));"}, {"sha": "c5303922fcb88954c258e7a61c63017a44bd88fd", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=d983abebfffbfe03de74fb127de290179b715af4", "patch": "@@ -3339,7 +3339,9 @@ package body Sem_Elab is\n                Traverse_List (Else_Actions (Scen));\n \n             elsif Nkind (Scen) in\n-                    N_Component_Association | N_Iterated_Component_Association\n+                    N_Component_Association\n+                  | N_Iterated_Component_Association\n+                  | N_Iterated_Element_Association\n             then\n                Traverse_List (Loop_Actions (Scen));\n "}, {"sha": "f61846717c9294cc7efb0e12d05e7dd4bfe5e155", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d983abebfffbfe03de74fb127de290179b715af4", "patch": "@@ -3163,9 +3163,21 @@ package body Sem_Res is\n                    = N_Iterated_Component_Association\n                  and then Is_Boolean_Type (Typ)\n                then\n-                  Error_Msg_N -- CODEFIX\n-                    (\"missing ALL or SOME in quantified expression\",\n-                     Defining_Identifier (First (Component_Associations (N))));\n+                  if Present\n+                       (Iterator_Specification\n+                         (First (Component_Associations (N))))\n+                  then\n+                     Error_Msg_N -- CODEFIX\n+                       (\"missing ALL or SOME in quantified expression\",\n+                        Defining_Identifier\n+                          (Iterator_Specification\n+                            (First (Component_Associations (N)))));\n+                  else\n+                     Error_Msg_N -- CODEFIX\n+                       (\"missing ALL or SOME in quantified expression\",\n+                        Defining_Identifier\n+                          (First (Component_Associations (N))));\n+                  end if;\n \n                --  For an operator with no interpretation, check whether\n                --  one of its operands may be a user-defined literal."}, {"sha": "e3e42c8521f222b6500ef36bbcda9008e1abc478", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=d983abebfffbfe03de74fb127de290179b715af4", "patch": "@@ -29500,6 +29500,9 @@ package body Sem_Util is\n             when N_Iterated_Component_Association =>\n                Traverse_More (Loop_Actions (Node),      Result);\n \n+            when N_Iterated_Element_Association =>\n+               Traverse_More (Loop_Actions (Node),      Result);\n+\n             when N_Iteration_Scheme =>\n                Traverse_More (Condition_Actions (Node), Result);\n "}, {"sha": "fddfc72ef095cd7e175179754774d20a554d99c6", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d983abebfffbfe03de74fb127de290179b715af4/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=d983abebfffbfe03de74fb127de290179b715af4", "patch": "@@ -4183,11 +4183,15 @@ package Sinfo is\n \n       --  ITERATED_COMPONENT_ASSOCIATION ::=\n       --    for DEFINING_IDENTIFIER in DISCRETE_CHOICE_LIST => EXPRESSION\n+      --    for ITERATOR_SPECIFICATION => EXPRESSION\n+\n+      --  At most one of (Defining_Identifier, Iterator_Specification)\n+      --  is present at a time, in which case the other one is empty.\n \n       --  N_Iterated_Component_Association\n       --  Sloc points to FOR\n       --  Defining_Identifier\n-      --  Iterator_Specification (set to Empty if no Iterator_Spec)\n+      --  Iterator_Specification\n       --  Expression\n       --  Discrete_Choices\n       --  Loop_Actions\n@@ -4207,9 +4211,13 @@ package Sinfo is\n       --  Etype\n \n       ---------------------------------\n-      --  3.4.5 Comtainer_Aggregates --\n+      --  3.4.5 Container_Aggregates --\n       ---------------------------------\n \n+      --  ITERATED_ELEMENT_ASSOCIATION ::=\n+      --    for LOOP_PARAMETER_SPECIFICATION[ use KEY_EXPRESSION] => EXPRESSION\n+      --  | for ITERATOR_SPECIFICATION[ use KEY_EXPRESSION] => EXPRESSION\n+\n       --  N_Iterated_Element_Association\n       --  Key_Expression\n       --  Iterator_Specification"}]}