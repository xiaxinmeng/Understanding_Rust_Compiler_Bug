{"sha": "feb61729c969ac0198f0fdb9027f75d781ccba56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmViNjE3MjljOTY5YWMwMTk4ZjBmZGI5MDI3Zjc1ZDc4MWNjYmE1Ng==", "commit": {"author": {"name": "Josef Zlomek", "email": "zlomekj@suse.cz", "date": "2004-07-05T04:50:22Z"}, "committer": {"name": "Josef Zlomek", "email": "zlomek@gcc.gnu.org", "date": "2004-07-05T04:50:22Z"}, "message": "var-tracking.c: Fix some comments.\n\n\t* var-tracking.c: Fix some comments.\n\t(frame_stack_adjust): New.\n\t(vt_stack_adjustments): Init stack_adjust of entry block to\n\tminus stack adjustment of function prologue.\n\t(adjust_stack_reference): Do not adjust if adjustment == 0.\n\t(compute_bb_dataflow): Use plus_constant instead of gen_rtx_PLUS.\n\t(emit_notes_in_bb): Likewise.\n\t(vt_add_function_parameters): Do not adjust locations of\n\tfunction arguments.\n\t(vt_initialize): Compute the stack adjustment of function\n\tprologue and offset the initial \"location\" of frame_base_decl\n\tfrom the stack pointer after prologue.\n\nFrom-SVN: r84106", "tree": {"sha": "194cd9d3db3e65d9b47a78e98a7fb831f6f48c95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/194cd9d3db3e65d9b47a78e98a7fb831f6f48c95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/feb61729c969ac0198f0fdb9027f75d781ccba56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb61729c969ac0198f0fdb9027f75d781ccba56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feb61729c969ac0198f0fdb9027f75d781ccba56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb61729c969ac0198f0fdb9027f75d781ccba56/comments", "author": null, "committer": null, "parents": [{"sha": "6071dc7fe912a65ba9ea25cb873005594b26f602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6071dc7fe912a65ba9ea25cb873005594b26f602", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6071dc7fe912a65ba9ea25cb873005594b26f602"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "2db8938a7ed816091ced333779f04e2a1988eee1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb61729c969ac0198f0fdb9027f75d781ccba56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb61729c969ac0198f0fdb9027f75d781ccba56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=feb61729c969ac0198f0fdb9027f75d781ccba56", "patch": "@@ -1,3 +1,18 @@\n+2004-07-05  Josef Zlomek  <zlomekj@suse.cz>\n+\n+\t* var-tracking.c: Fix some comments.\n+\t(frame_stack_adjust): New.\n+\t(vt_stack_adjustments): Init stack_adjust of entry block to\n+\tminus stack adjustment of function prologue.\n+\t(adjust_stack_reference): Do not adjust if adjustment == 0.\n+\t(compute_bb_dataflow): Use plus_constant instead of gen_rtx_PLUS.\n+\t(emit_notes_in_bb): Likewise.\n+\t(vt_add_function_parameters): Do not adjust locations of\n+\tfunction arguments.\n+\t(vt_initialize): Compute the stack adjustment of function\n+\tprologue and offset the initial \"location\" of frame_base_decl\n+\tfrom the stack pointer after prologue.\n+\n 2004-07-04  Richard Henderson  <rth@redhat.com>\n \n \t* function.c (struct assign_parm_data_all): New."}, {"sha": "32c78aefdcd5132019b66ecc26ba3ff35660ce3b", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb61729c969ac0198f0fdb9027f75d781ccba56/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb61729c969ac0198f0fdb9027f75d781ccba56/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=feb61729c969ac0198f0fdb9027f75d781ccba56", "patch": "@@ -267,6 +267,9 @@ static bool emit_notes;\n /* Fake variable for stack pointer.  */\n tree frame_base_decl;\n \n+/* Stack adjust caused by function prologue.  */\n+static HOST_WIDE_INT frame_stack_adjust;\n+\n /* Local function prototypes.  */\n static void stack_adjust_offset_pre_post (rtx, HOST_WIDE_INT *,\n \t\t\t\t\t  HOST_WIDE_INT *);\n@@ -484,7 +487,7 @@ bb_stack_adjust_offset (basic_block bb)\n   VTI (bb)->out.stack_adjust = offset;\n }\n \n-/* Compute stack adjustment caused by function prolog.  */\n+/* Compute stack adjustment caused by function prologue.  */\n \n static HOST_WIDE_INT\n prologue_stack_adjust (void)\n@@ -528,7 +531,7 @@ vt_stack_adjustments (void)\n \n   /* Initialize entry block.  */\n   VTI (ENTRY_BLOCK_PTR)->visited = true;\n-  VTI (ENTRY_BLOCK_PTR)->out.stack_adjust = 0;\n+  VTI (ENTRY_BLOCK_PTR)->out.stack_adjust = frame_stack_adjust;\n \n   /* Allocate stack for back-tracking up CFG.  */\n   stack = xmalloc ((n_basic_blocks + 1) * sizeof (edge));\n@@ -590,6 +593,9 @@ adjust_stack_reference (rtx mem, HOST_WIDE_INT adjustment)\n   rtx adjusted_mem;\n   rtx tmp;\n \n+  if (adjustment == 0)\n+    return mem;\n+\n   adjusted_mem = copy_rtx (mem);\n   XEXP (adjusted_mem, 0) = replace_rtx (XEXP (adjusted_mem, 0),\n \t\t\t\t\tstack_pointer_rtx,\n@@ -1653,9 +1659,8 @@ compute_bb_dataflow (basic_block bb)\n \t      rtx base;\n \n \t      out->stack_adjust += VTI (bb)->mos[i].u.adjust;\n-\t      base = gen_rtx_MEM (Pmode,\n-\t\t\t\t  gen_rtx_PLUS (Pmode, stack_pointer_rtx,\n-\t\t\t\t\t\tGEN_INT (out->stack_adjust)));\n+\t      base = gen_rtx_MEM (Pmode, plus_constant (stack_pointer_rtx,\n+\t\t\t\t\t\t\tout->stack_adjust));\n \t      set_frame_base_location (out, base);\n \t    }\n \t    break;\n@@ -1918,9 +1923,8 @@ variable_was_changed (variable var, htab_t htab)\n }\n \n /* Set the location of frame_base_decl to LOC in dataflow set SET.  This\n-   function expects that\n-   frame_base_decl has already one location for offset 0 in the variable table.\n- */\n+   function expects that frame_base_decl has already one location for offset 0\n+   in the variable table.  */\n \n static void\n set_frame_base_location (dataflow_set *set, rtx loc)\n@@ -2409,9 +2413,8 @@ emit_notes_in_bb (basic_block bb)\n \t      rtx base;\n \n \t      set.stack_adjust += VTI (bb)->mos[i].u.adjust;\n-\t      base = gen_rtx_MEM (Pmode,\n-\t\t\t\t  gen_rtx_PLUS (Pmode, stack_pointer_rtx,\n-\t\t\t\t\t\tGEN_INT (set.stack_adjust)));\n+\t      base = gen_rtx_MEM (Pmode, plus_constant (stack_pointer_rtx,\n+\t\t\t\t\t\t\tset.stack_adjust));\n \t      set_frame_base_location (&set, base);\n \t      emit_notes_for_changes (insn, EMIT_NOTE_AFTER_INSN);\n \t    }\n@@ -2490,11 +2493,7 @@ static void\n vt_add_function_parameters (void)\n {\n   tree parm;\n-  HOST_WIDE_INT stack_adjust = 0;\n   \n-  if (!frame_pointer_needed)\n-    stack_adjust = prologue_stack_adjust ();\n-\n   for (parm = DECL_ARGUMENTS (current_function_decl);\n        parm; parm = TREE_CHAIN (parm))\n     {\n@@ -2529,8 +2528,6 @@ vt_add_function_parameters (void)\n #endif\n \n       incoming = eliminate_regs (incoming, 0, NULL_RTX);\n-      if (!frame_pointer_needed && MEM_P (incoming))\n-\tincoming = adjust_stack_reference (incoming, -stack_adjust);\n       out = &VTI (ENTRY_BLOCK_PTR)->out;\n \n       if (REG_P (incoming))\n@@ -2703,7 +2700,9 @@ vt_initialize (void)\n       DECL_ARTIFICIAL (frame_base_decl) = 1;\n \n       /* Set its initial \"location\".  */\n-      base = gen_rtx_MEM (Pmode, stack_pointer_rtx);\n+      frame_stack_adjust = -prologue_stack_adjust ();\n+      base = gen_rtx_MEM (Pmode, plus_constant (stack_pointer_rtx,\n+\t\t\t\t\t\tframe_stack_adjust));\n       set_variable_part (&VTI (ENTRY_BLOCK_PTR)->out, base, frame_base_decl, 0);\n     }\n   else"}]}