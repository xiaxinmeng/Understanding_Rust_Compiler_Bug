{"sha": "d0d4af87cc5db924b337c8076cae91c65d19291c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBkNGFmODdjYzVkYjkyNGIzMzdjODA3NmNhZTkxYzY1ZDE5MjkxYw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1993-03-25T08:51:26Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1993-03-25T08:51:26Z"}, "message": "Added front-end taggint to object files.\n\nFrom-SVN: r3874", "tree": {"sha": "cfdc93c4bf9c6428d1d2d5f186799cfecb06737b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfdc93c4bf9c6428d1d2d5f186799cfecb06737b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0d4af87cc5db924b337c8076cae91c65d19291c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0d4af87cc5db924b337c8076cae91c65d19291c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0d4af87cc5db924b337c8076cae91c65d19291c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0d4af87cc5db924b337c8076cae91c65d19291c/comments", "author": null, "committer": null, "parents": [{"sha": "d1e37dc7e8bee5ba20eb7c04148a9e6cf379d946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e37dc7e8bee5ba20eb7c04148a9e6cf379d946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1e37dc7e8bee5ba20eb7c04148a9e6cf379d946"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "fe4acab9f838842ff980da2c768bbe9b61069e35", "filename": "gcc/c-lang.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d4af87cc5db924b337c8076cae91c65d19291c/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d4af87cc5db924b337c8076cae91c65d19291c/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=d0d4af87cc5db924b337c8076cae91c65d19291c", "patch": "@@ -47,6 +47,12 @@ lang_finish ()\n {\n }\n \n+char *\n+lang_identify ()\n+{\n+  return \"c\";\n+}\n+\n /* Used by c-lex.c, but only for objc.  */\n tree\n lookup_interface (arg)"}, {"sha": "7234206e7d2565fd7b55af0f8b0756f2b82d4821", "filename": "gcc/defaults.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d4af87cc5db924b337c8076cae91c65d19291c/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d4af87cc5db924b337c8076cae91c65d19291c/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=d0d4af87cc5db924b337c8076cae91c65d19291c", "patch": "@@ -108,3 +108,13 @@ do { fprintf (FILE, \"\\t%s\\t\", ASM_SHORT);\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t      \\\n   while (0)\n #endif\n+\n+#ifndef ASM_IDENTIFY_GCC\n+  /* Default the definition, only if ASM_IDENTIFY_GCC is not set,\n+     because if it is set, we might not want ASM_IDENTIFY_LANGUAGE\n+     outputting labels, if we do want it to, then it must be defined\n+     in the tm.h file.  */\n+#ifndef ASM_IDENTIFY_LANGUAGE\n+#define ASM_IDENTIFY_LANGUAGE(FILE) output_lang_identify (FILE);\n+#endif\n+#endif"}, {"sha": "a7ae6766fece12cdba7fac1bde87892af2e56e8b", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d4af87cc5db924b337c8076cae91c65d19291c/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d4af87cc5db924b337c8076cae91c65d19291c/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=d0d4af87cc5db924b337c8076cae91c65d19291c", "patch": "@@ -371,6 +371,12 @@ lang_finish ()\n {\n }\n \n+char *\n+lang_identify ()\n+{\n+  return \"objc\";\n+}\n+\n int\n lang_decode_option (p)\n      char *p;"}, {"sha": "34351b11ba7ab769ab18d3a0b104bc2d99043bcd", "filename": "gcc/toplev.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d4af87cc5db924b337c8076cae91c65d19291c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d4af87cc5db924b337c8076cae91c65d19291c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=d0d4af87cc5db924b337c8076cae91c65d19291c", "patch": "@@ -52,6 +52,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"rtl.h\"\n #include \"flags.h\"\n #include \"insn-attr.h\"\n+#include \"defaults.h\"\n \n #ifdef XCOFF_DEBUGGING_INFO\n #include \"xcoffout.h\"\n@@ -1495,6 +1496,17 @@ output_file_directive (asm_file, input_name)\n #endif\n }\n \f\n+/* Routine to build language identifier for object file. */\n+static void\n+output_lang_identify (asm_out_file)\n+     FILE *asm_out_file;\n+{\n+  int len = strlen (lang_identify ()) + sizeof (\"__gnu_compiled_\") + 1;\n+  char *s = (char *) alloca (len);\n+  sprintf (s, \"__gnu_compiled_%s\", lang_identify ());\n+  ASM_OUTPUT_LABEL (asm_out_file, s);\n+}\n+\n /* Compile an entire file of output from cpp, named NAME.\n    Write a file of assembly output and various debugging dumps.  */\n \n@@ -1789,6 +1801,12 @@ compile_file (name)\n #else\n   ASM_IDENTIFY_GCC (asm_out_file);\n #endif\n+\n+  /* Output something to identify which front-end produced this file. */\n+#ifdef ASM_IDENTIFY_LANGUAGE\n+  ASM_IDENTIFY_LANGUAGE (asm_out_file);\n+#endif\n+\n   /* Don't let the first function fall at the same address\n      as gcc_compiled., if profiling.  */\n   if (profile_flag || profile_block_flag)"}, {"sha": "5e2522f9c4d7ae68d1e0faaa36660eb7a175c3f7", "filename": "gcc/tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d4af87cc5db924b337c8076cae91c65d19291c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d4af87cc5db924b337c8076cae91c65d19291c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d0d4af87cc5db924b337c8076cae91c65d19291c", "patch": "@@ -1427,6 +1427,9 @@ extern void init_decl_processing\t\tPROTO((void));\n extern void lang_init\t\t\t\tPROTO((void));\n extern void lang_finish\t\t\t\tPROTO((void));\n \n+/* Funtion to identify which front-end produced the output file. */\n+extern char *lang_identify\t\t\tPROTO((void));\n+\n /* Function called with no arguments to parse and compile the input.  */\n extern int yyparse\t\t\t\tPROTO((void));\n /* Function called with option as argument"}]}