{"sha": "5d97670f7ab593223149b2b74fd96d9da79945b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ5NzY3MGY3YWI1OTMyMjMxNDliMmI3NGZkOTZkOWRhNzk5NDViMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-11-14T08:35:48Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-11-14T08:35:48Z"}, "message": "Update statistics about needed symbols in IPA ICF.\n\n2019-11-14  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-icf.c (sem_item_optimizer::execute): Save\n\tloaded_symbols.\n\t(sem_item_optimizer::parse_nonsingleton_classes):\n\tReturn number of loaded symbols.\n\t(sem_item_optimizer::merge_classes): Print\n\tstatistics about totally needed symbols.\n\t* ipa-icf.h (parse_nonsingleton_classes): Change return\n\ttype.\n\t(merge_classes): Add one argument.\n\nFrom-SVN: r278209", "tree": {"sha": "85a6e9053c8a787b004e6e9b01962584b1c57c00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85a6e9053c8a787b004e6e9b01962584b1c57c00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d97670f7ab593223149b2b74fd96d9da79945b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d97670f7ab593223149b2b74fd96d9da79945b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d97670f7ab593223149b2b74fd96d9da79945b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d97670f7ab593223149b2b74fd96d9da79945b2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7edcaa0b54eae1537622bc70a4f8702e15148e4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7edcaa0b54eae1537622bc70a4f8702e15148e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7edcaa0b54eae1537622bc70a4f8702e15148e4c"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "e0f2a210196ce18b56c65f3e9016ecf0a8cf7edd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d97670f7ab593223149b2b74fd96d9da79945b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d97670f7ab593223149b2b74fd96d9da79945b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d97670f7ab593223149b2b74fd96d9da79945b2", "patch": "@@ -1,3 +1,15 @@\n+2019-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf.c (sem_item_optimizer::execute): Save\n+\tloaded_symbols.\n+\t(sem_item_optimizer::parse_nonsingleton_classes):\n+\tReturn number of loaded symbols.\n+\t(sem_item_optimizer::merge_classes): Print\n+\tstatistics about totally needed symbols.\n+\t* ipa-icf.h (parse_nonsingleton_classes): Change return\n+\ttype.\n+\t(merge_classes): Add one argument.\n+\n 2019-11-14  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-icf-gimple.c (func_checker::hash_operand): Improve"}, {"sha": "15aac1cdbe690a56d03ded8b00785331f44d7073", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d97670f7ab593223149b2b74fd96d9da79945b2/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d97670f7ab593223149b2b74fd96d9da79945b2/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=5d97670f7ab593223149b2b74fd96d9da79945b2", "patch": "@@ -2400,7 +2400,7 @@ sem_item_optimizer::execute (void)\n \n   dump_cong_classes ();\n \n-  parse_nonsingleton_classes ();\n+  unsigned int loaded_symbols = parse_nonsingleton_classes ();\n   subdivide_classes_by_equality ();\n \n   if (dump_file)\n@@ -2413,7 +2413,7 @@ sem_item_optimizer::execute (void)\n   process_cong_reduction ();\n   dump_cong_classes ();\n   checking_verify_classes ();\n-  bool merged_p = merge_classes (prev_class_count);\n+  bool merged_p = merge_classes (prev_class_count, loaded_symbols);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     symtab->dump (dump_file);\n@@ -2587,7 +2587,7 @@ sem_item_optimizer::build_graph (void)\n /* Semantic items in classes having more than one element and initialized.\n    In case of WPA, we load function body.  */\n \n-void\n+unsigned int\n sem_item_optimizer::parse_nonsingleton_classes (void)\n {\n   unsigned int counter = 0;\n@@ -2607,6 +2607,8 @@ sem_item_optimizer::parse_nonsingleton_classes (void)\n       float f = m_items.length () ? 100.0f * counter / m_items.length () : 0.0f;\n       fprintf (dump_file, \"Init called for %u items (%.2f%%).\\n\", counter, f);\n     }\n+\n+  return counter;\n }\n \n /* Equality function for semantic items is used to subdivide existing\n@@ -3214,10 +3216,12 @@ sort_congruence_class_groups_by_decl_uid (const void *a, const void *b)\n /* After reduction is done, we can declare all items in a group\n    to be equal. PREV_CLASS_COUNT is start number of classes\n    before reduction. True is returned if there's a merge operation\n-   processed. */\n+   processed.  LOADED_SYMBOLS is number of symbols that were loaded\n+   in WPA.  */\n \n bool\n-sem_item_optimizer::merge_classes (unsigned int prev_class_count)\n+sem_item_optimizer::merge_classes (unsigned int prev_class_count,\n+\t\t\t\t   unsigned int loaded_symbols)\n {\n   unsigned int item_count = m_items.length ();\n   unsigned int class_count = m_classes_count;\n@@ -3280,8 +3284,10 @@ sem_item_optimizer::merge_classes (unsigned int prev_class_count)\n \t       non_singular_classes_count : 0.0f,\n \t       non_singular_classes_count);\n       fprintf (dump_file, \"Equal symbols: %u\\n\", equal_items);\n-      fprintf (dump_file, \"Fraction of visited symbols: %.2f%%\\n\\n\",\n-\t       item_count ? 100.0f * equal_items / item_count : 0.0f);\n+      unsigned total = equal_items + non_singular_classes_count;\n+      fprintf (dump_file, \"Totally needed symbols: %u\"\n+\t       \", fraction of loaded symbols: %.2f%%\\n\\n\", total,\n+\t       loaded_symbols ? 100.0f * total / loaded_symbols: 0.0f);\n     }\n \n   unsigned int l;"}, {"sha": "3098fd1f0cebaba69ecfb8844d663a4ff8fbc387", "filename": "gcc/ipa-icf.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d97670f7ab593223149b2b74fd96d9da79945b2/gcc%2Fipa-icf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d97670f7ab593223149b2b74fd96d9da79945b2/gcc%2Fipa-icf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.h?ref=5d97670f7ab593223149b2b74fd96d9da79945b2", "patch": "@@ -546,7 +546,7 @@ class sem_item_optimizer\n \n   /* Semantic items in classes having more than one element and initialized.\n      In case of WPA, we load function body.  */\n-  void parse_nonsingleton_classes (void);\n+  unsigned int parse_nonsingleton_classes (void);\n \n   /* Equality function for semantic items is used to subdivide existing\n      classes. If IN_WPA, fast equality function is invoked.  */\n@@ -571,8 +571,10 @@ class sem_item_optimizer\n   /* After reduction is done, we can declare all items in a group\n      to be equal. PREV_CLASS_COUNT is start number of classes\n      before reduction. True is returned if there's a merge operation\n-     processed.  */\n-  bool merge_classes (unsigned int prev_class_count);\n+     processed.  LOADED_SYMBOLS is number of symbols that were loaded\n+     in WPA.  */\n+  bool merge_classes (unsigned int prev_class_count,\n+\t\t      unsigned int loaded_symbols);\n \n   /* Fixup points to analysis info.  */\n   void fixup_points_to_sets (void);"}]}