{"sha": "8415f31724e1cb601b97b3f82292a24257cb5ff9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQxNWYzMTcyNGUxY2I2MDFiOTdiM2Y4MjI5MmEyNDI1N2NiNWZmOQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-04-26T19:10:17Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-04-26T19:10:17Z"}, "message": "c-parser.c (struct c_token): Move location field up.\n\n\t* c-parser.c (struct c_token): Move location field up.\n\t* c-tree.h (struct c_typespec): Move expr_const_operands field up.\n\t(struct c_declspecs): Convert typespec_word, storage_class, and\n\tdefault_int_p into bitfields.\n\t(struct c_declarator): Move loc field up.\n\nFrom-SVN: r158744", "tree": {"sha": "5d76eb6d77117ebeeac19e76ee6bd90f9bc662bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d76eb6d77117ebeeac19e76ee6bd90f9bc662bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8415f31724e1cb601b97b3f82292a24257cb5ff9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8415f31724e1cb601b97b3f82292a24257cb5ff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8415f31724e1cb601b97b3f82292a24257cb5ff9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8415f31724e1cb601b97b3f82292a24257cb5ff9/comments", "author": null, "committer": null, "parents": [{"sha": "448f65dba370077858a46c17c869c33a12f158a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/448f65dba370077858a46c17c869c33a12f158a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/448f65dba370077858a46c17c869c33a12f158a4"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "163bda85c495ed5a9c8038324bc17402b5e6ee5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8415f31724e1cb601b97b3f82292a24257cb5ff9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8415f31724e1cb601b97b3f82292a24257cb5ff9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8415f31724e1cb601b97b3f82292a24257cb5ff9", "patch": "@@ -1,3 +1,11 @@\n+2010-04-26  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* c-parser.c (struct c_token): Move location field up.\n+\t* c-tree.h (struct c_typespec): Move expr_const_operands field up.\n+\t(struct c_declspecs): Convert typespec_word, storage_class, and\n+\tdefault_int_p into bitfields.\n+\t(struct c_declarator): Move loc field up.\n+\n 2010-04-26  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* cfgloop.h (struct loop): Move can_be_parallel field up."}, {"sha": "cbdee1eb8a143a644568eb8fd3f5a6532528bf97", "filename": "gcc/c-parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8415f31724e1cb601b97b3f82292a24257cb5ff9/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8415f31724e1cb601b97b3f82292a24257cb5ff9/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=8415f31724e1cb601b97b3f82292a24257cb5ff9", "patch": "@@ -156,10 +156,10 @@ typedef struct GTY (()) c_token {\n   /* If this token is a CPP_PRAGMA, this indicates the pragma that\n      was seen.  Otherwise it is PRAGMA_NONE.  */\n   ENUM_BITFIELD (pragma_kind) pragma_kind : 8;\n-  /* The value associated with this token, if any.  */\n-  tree value;\n   /* The location at which this token was found.  */\n   location_t location;\n+  /* The value associated with this token, if any.  */\n+  tree value;\n } c_token;\n \n /* A parser structure recording information about the state and"}, {"sha": "50ed9db08a8beac4a7d68da5227169be26bc7a7a", "filename": "gcc/c-tree.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8415f31724e1cb601b97b3f82292a24257cb5ff9/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8415f31724e1cb601b97b3f82292a24257cb5ff9/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=8415f31724e1cb601b97b3f82292a24257cb5ff9", "patch": "@@ -160,6 +160,9 @@ enum c_typespec_kind {\n struct c_typespec {\n   /* What kind of type specifier this is.  */\n   enum c_typespec_kind kind;\n+  /* Whether the expression has operands suitable for use in constant\n+     expressions.  */\n+  bool expr_const_operands;\n   /* The specifier itself.  */\n   tree spec;\n   /* An expression to be evaluated before the type specifier, in the\n@@ -171,9 +174,6 @@ struct c_typespec {\n      expression itself (as opposed to the array sizes) forms no part\n      of the type and so needs to be recorded separately.  */\n   tree expr;\n-  /* Whether the expression has operands suitable for use in constant\n-     expressions.  */\n-  bool expr_const_operands;\n };\n \n /* A storage class specifier.  */\n@@ -220,11 +220,11 @@ struct c_declspecs {\n      NULL; attributes (possibly from multiple lists) will be passed\n      separately.  */\n   tree attrs;\n-  /* Any type specifier keyword used such as \"int\", not reflecting\n-     modifiers such as \"short\", or cts_none if none.  */\n-  enum c_typespec_keyword typespec_word;\n   /* The storage class specifier, or csc_none if none.  */\n   enum c_storage_class storage_class;\n+  /* Any type specifier keyword used such as \"int\", not reflecting\n+     modifiers such as \"short\", or cts_none if none.  */\n+  ENUM_BITFIELD (c_typespec_keyword) typespec_word : 8;\n   /* Whether any expressions in typeof specifiers may appear in\n      constant expressions.  */\n   BOOL_BITFIELD expr_const_operands : 1;\n@@ -252,7 +252,7 @@ struct c_declspecs {\n   BOOL_BITFIELD deprecated_p : 1;\n   /* Whether the type defaulted to \"int\" because there were no type\n      specifiers.  */\n-  BOOL_BITFIELD default_int_p;\n+  BOOL_BITFIELD default_int_p : 1;\n   /* Whether \"long\" was specified.  */\n   BOOL_BITFIELD long_p : 1;\n   /* Whether \"long\" was specified more than once.  */\n@@ -319,9 +319,9 @@ struct c_arg_info {\n struct c_declarator {\n   /* The kind of declarator.  */\n   enum c_declarator_kind kind;\n+  location_t id_loc; /* Currently only set for cdk_id, cdk_array. */\n   /* Except for cdk_id, the contained declarator.  For cdk_id, NULL.  */\n   struct c_declarator *declarator;\n-  location_t id_loc; /* Currently only set for cdk_id, cdk_array. */\n   union {\n     /* For identifiers, an IDENTIFIER_NODE or NULL_TREE if an abstract\n        declarator.  */"}]}