{"sha": "7260547dbffd8e6442f99da8adf98ab0ce294e4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI2MDU0N2RiZmZkOGU2NDQyZjk5ZGE4YWRmOThhYjBjZTI5NGU0ZQ==", "commit": {"author": {"name": "Thomas K\u00f6nig", "email": "tkoenig@gcc.gnu.org", "date": "2020-02-23T16:04:06Z"}, "committer": {"name": "Thomas K\u00f6nig", "email": "tkoenig@gcc.gnu.org", "date": "2020-02-23T16:09:01Z"}, "message": "Fix error message.\n\n2020-02-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/93890\n\t* interface.c: Replace \"can not\" by \"cannot\" and remove trailing\n\tspace.\n\n2020-02-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/93890\n\t* gfortran.dg/argument_checking_24.f90: Correct test case.", "tree": {"sha": "bbb51bedb1cdcc9a79c4cb33237938758ca0be63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbb51bedb1cdcc9a79c4cb33237938758ca0be63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7260547dbffd8e6442f99da8adf98ab0ce294e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7260547dbffd8e6442f99da8adf98ab0ce294e4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7260547dbffd8e6442f99da8adf98ab0ce294e4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7260547dbffd8e6442f99da8adf98ab0ce294e4e/comments", "author": null, "committer": null, "parents": [{"sha": "61c8d9e4e5f540501eaa98aae1d6c74bde7d4299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c8d9e4e5f540501eaa98aae1d6c74bde7d4299", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c8d9e4e5f540501eaa98aae1d6c74bde7d4299"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "5f889fb312091183b937d987c5794d7653e9c6ac", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7260547dbffd8e6442f99da8adf98ab0ce294e4e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7260547dbffd8e6442f99da8adf98ab0ce294e4e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7260547dbffd8e6442f99da8adf98ab0ce294e4e", "patch": "@@ -1,3 +1,9 @@\n+2020-02-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/93890\n+\t* interface.c: Replace \"can not\" by \"cannot\" and remove trailing\n+\tspace.\n+\n 2020-02-20  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/93825"}, {"sha": "4106fe5831b3de7811e461e9619830dea453a567", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7260547dbffd8e6442f99da8adf98ab0ce294e4e/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7260547dbffd8e6442f99da8adf98ab0ce294e4e/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=7260547dbffd8e6442f99da8adf98ab0ce294e4e", "patch": "@@ -2660,8 +2660,8 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t{\n \t  if (formal->attr.artificial)\n \t    gfc_error (\"Element of assumed-shape or pointer array \"\n-\t\t       \"as actual argument at %L can not correspond to \"\n-\t\t       \"actual argument at %L \",\n+\t\t       \"as actual argument at %L cannot correspond to \"\n+\t\t       \"actual argument at %L\",\n \t\t       &actual->where, &formal->declared_at);\n \t  else\n \t    gfc_error (\"Element of assumed-shape or pointer \""}, {"sha": "06d61c7e2ee0c512bf697fcb99556c98b34b98ac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7260547dbffd8e6442f99da8adf98ab0ce294e4e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7260547dbffd8e6442f99da8adf98ab0ce294e4e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7260547dbffd8e6442f99da8adf98ab0ce294e4e", "patch": "@@ -1,3 +1,8 @@\n+2020-02-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/93890\n+\t* gfortran.dg/argument_checking_24.f90: Correct test case.\n+\n 2020-02-21  Martin Sebor  <msebor@redhat.com>\n \n \tPR gcov-profile/93753"}, {"sha": "79096cd59afdd3da88d1be35c244148754ce973e", "filename": "gcc/testsuite/gfortran.dg/argument_checking_24.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7260547dbffd8e6442f99da8adf98ab0ce294e4e/gcc%2Ftestsuite%2Fgfortran.dg%2Fargument_checking_24.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7260547dbffd8e6442f99da8adf98ab0ce294e4e/gcc%2Ftestsuite%2Fgfortran.dg%2Fargument_checking_24.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fargument_checking_24.f90?ref=7260547dbffd8e6442f99da8adf98ab0ce294e4e", "patch": "@@ -33,14 +33,14 @@ subroutine foo(a)\n     call invalid_4 (b) ! { dg-error \"Rank mismatch\" }w\n     call invalid_5 (b) ! { dg-error \"Rank mismatch\" }\n     call invalid_5 (vv(1)%x) ! { dg-error \"Rank mismatch\" }\n-    call invalid_6 (x) ! { dg-error \"can not correspond to actual argument\" }\n-    call invalid_6 (pointer_v%x(1)) ! { dg-error \"can not correspond to actual argument\" }\n+    call invalid_6 (x) ! { dg-error \"cannot correspond to actual argument\" }\n+    call invalid_6 (pointer_v%x(1)) ! { dg-error \"cannot correspond to actual argument\" }\n     call invalid_7 (pointer_v%x(1)) ! { dg-error \"Rank mismatch\" }\n     call invalid_7 (x) ! { dg-error \"Rank mismatch\" }\n     call invalid_8 (p(1)) ! { dg-error \"Rank mismatch\" }\n     call invalid_8 (x) ! { dg-error \"Rank mismatch\" }\n-    call invalid_9 (x) ! { dg-error \"can not correspond to actual argument\" }\n-    call invalid_9 (p(1)) ! { dg-error \"can not correspond to actual argument\" }\n+    call invalid_9 (x) ! { dg-error \"cannot correspond to actual argument\" }\n+    call invalid_9 (p(1)) ! { dg-error \"cannot correspond to actual argument\" }\n   end subroutine foo\n \n   subroutine bar(a, alloc)"}]}