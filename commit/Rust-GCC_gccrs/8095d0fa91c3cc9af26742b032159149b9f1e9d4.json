{"sha": "8095d0fa91c3cc9af26742b032159149b9f1e9d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA5NWQwZmE5MWMzY2M5YWYyNjc0MmIwMzIxNTkxNDliOWYxZTlkNA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-03-18T11:53:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-18T11:53:50Z"}, "message": "switch-m.adb (Normalize_Compiler_Switches): Recognize switches -gnat83, -gnat95 and -gnat05.\n\n2005-03-17  Vincent Celier  <celier@adacore.com>\n\n\t* switch-m.adb (Normalize_Compiler_Switches): Recognize switches\n\t-gnat83, -gnat95 and -gnat05.\n\nFrom-SVN: r96677", "tree": {"sha": "1fbf797869f8f3471eef48a8e964e6aba1139657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fbf797869f8f3471eef48a8e964e6aba1139657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8095d0fa91c3cc9af26742b032159149b9f1e9d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8095d0fa91c3cc9af26742b032159149b9f1e9d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8095d0fa91c3cc9af26742b032159149b9f1e9d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8095d0fa91c3cc9af26742b032159149b9f1e9d4/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3bc7ffd0c0e182a5b212b572a5804bacc1440b37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bc7ffd0c0e182a5b212b572a5804bacc1440b37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bc7ffd0c0e182a5b212b572a5804bacc1440b37"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "aeb33e7cfb4d2dda495bb63d8a638b3436a20b99", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8095d0fa91c3cc9af26742b032159149b9f1e9d4/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8095d0fa91c3cc9af26742b032159149b9f1e9d4/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=8095d0fa91c3cc9af26742b032159149b9f1e9d4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -404,6 +404,50 @@ package body Switch.M is\n                         end if;\n                      end loop;\n \n+                  --  -gnat95 -gnat05\n+\n+                  when '0' | '9' =>\n+                     Last_Stored := First_Stored;\n+                     Storing (Last_Stored) := C;\n+                     Ptr := Ptr + 1;\n+\n+                     if Ptr /= Max or else Switch_Chars (Ptr) /= '5' then\n+\n+                        --  Invalid switch\n+\n+                        Last := 0;\n+                        return;\n+\n+                     else\n+                        Last_Stored := Last_Stored + 1;\n+                        Storing (Last_Stored) := '5';\n+                        Add_Switch_Component\n+                          (Storing (Storing'First .. Last_Stored));\n+                        Ptr := Ptr + 1;\n+                     end if;\n+\n+                  --  -gnat83\n+\n+                  when '8' =>\n+                     Last_Stored := First_Stored;\n+                     Storing (Last_Stored) := '8';\n+                     Ptr := Ptr + 1;\n+\n+                     if Ptr /= Max or else Switch_Chars (Ptr) /= '3' then\n+\n+                        --  Invalid switch\n+\n+                        Last := 0;\n+                        return;\n+\n+                     else\n+                        Last_Stored := Last_Stored + 1;\n+                        Storing (Last_Stored) := '3';\n+                        Add_Switch_Component\n+                          (Storing (Storing'First .. Last_Stored));\n+                        Ptr := Ptr + 1;\n+                     end if;\n+\n                   --  Not a valid switch\n \n                   when others =>"}]}