{"sha": "440f9408ea950a29ef7606b6114d84d1a5b53c90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQwZjk0MDhlYTk1MGEyOWVmNzYwNmI2MTE0ZDg0ZDFhNWI1M2M5MA==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gmx.de", "date": "2015-04-07T14:10:43Z"}, "committer": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2015-04-07T14:10:43Z"}, "message": "re PR fortran/65548 (gfc_conv_procedure_call)\n\n\tPR fortran/65548\n        * gfortran.dg/allocate_with_source_5.f90: New test.\n\n        * trans-stmt.c (gfc_trans_allocate): For intrinsic functions\n        use conv_expr_descriptor() instead of conv_expr_reference().\n\nFrom-SVN: r221897", "tree": {"sha": "55ce32d803f368b6cf5183f678a6422f3e722982", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55ce32d803f368b6cf5183f678a6422f3e722982"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/440f9408ea950a29ef7606b6114d84d1a5b53c90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/440f9408ea950a29ef7606b6114d84d1a5b53c90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/440f9408ea950a29ef7606b6114d84d1a5b53c90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/440f9408ea950a29ef7606b6114d84d1a5b53c90/comments", "author": {"login": "vehre", "id": 4761547, "node_id": "MDQ6VXNlcjQ3NjE1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4761547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vehre", "html_url": "https://github.com/vehre", "followers_url": "https://api.github.com/users/vehre/followers", "following_url": "https://api.github.com/users/vehre/following{/other_user}", "gists_url": "https://api.github.com/users/vehre/gists{/gist_id}", "starred_url": "https://api.github.com/users/vehre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vehre/subscriptions", "organizations_url": "https://api.github.com/users/vehre/orgs", "repos_url": "https://api.github.com/users/vehre/repos", "events_url": "https://api.github.com/users/vehre/events{/privacy}", "received_events_url": "https://api.github.com/users/vehre/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e081bde913120cdf87ac288c814dfcc9733eacb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e081bde913120cdf87ac288c814dfcc9733eacb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e081bde913120cdf87ac288c814dfcc9733eacb"}], "stats": {"total": 72, "additions": 70, "deletions": 2}, "files": [{"sha": "f7b1d38d654143b38cc25606f5f7def317cf7483", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440f9408ea950a29ef7606b6114d84d1a5b53c90/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440f9408ea950a29ef7606b6114d84d1a5b53c90/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=440f9408ea950a29ef7606b6114d84d1a5b53c90", "patch": "@@ -1,3 +1,9 @@\n+2015-04-07  Andre Vehreschild  <vehre@gmx.de>\n+\n+\tPR fortran/65548\n+\t* trans-stmt.c (gfc_trans_allocate): For intrinsic functions\n+\tuse conv_expr_descriptor() instead of conv_expr_reference().\n+\n 2015-03-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/65597"}, {"sha": "619564b6ef9d9092d9b981720d17a986abef3c14", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440f9408ea950a29ef7606b6114d84d1a5b53c90/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440f9408ea950a29ef7606b6114d84d1a5b53c90/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=440f9408ea950a29ef7606b6114d84d1a5b53c90", "patch": "@@ -5049,12 +5049,17 @@ gfc_trans_allocate (gfc_code * code)\n \t      /* In all other cases evaluate the expr3 and create a\n \t\t temporary.  */\n \t      gfc_init_se (&se, NULL);\n-\t      gfc_conv_expr_reference (&se, code->expr3);\n+\t      if (code->expr3->rank != 0\n+\t\t  && code->expr3->expr_type == EXPR_FUNCTION\n+\t\t  && code->expr3->value.function.isym)\n+\t\tgfc_conv_expr_descriptor (&se, code->expr3);\n+\t      else\n+\t\tgfc_conv_expr_reference (&se, code->expr3);\n \t      if (code->expr3->ts.type == BT_CLASS)\n \t\tgfc_conv_class_to_class (&se, code->expr3,\n \t\t\t\t\t code->expr3->ts,\n \t\t\t\t\t false, true,\n-\t\t\t\t\t  false,false);\n+\t\t\t\t\t false, false);\n \t      gfc_add_block_to_block (&block, &se.pre);\n \t      gfc_add_block_to_block (&post, &se.post);\n \t      /* Prevent aliasing, i.e., se.expr may be already a"}, {"sha": "34d12535e0285b5fa7b5e9fb4cded8221ec053ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440f9408ea950a29ef7606b6114d84d1a5b53c90/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440f9408ea950a29ef7606b6114d84d1a5b53c90/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=440f9408ea950a29ef7606b6114d84d1a5b53c90", "patch": "@@ -1,3 +1,8 @@\n+2015-04-07  Andre Vehreschild  <vehre@gmx.de>\n+\n+\tPR fortran/65548\n+\t* gfortran.dg/allocate_with_source_5.f90: New test.\n+\n 2015-04-07  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \t* gcc.target/i386/mpx/chkp-thunk-comdat-1.cc: New."}, {"sha": "e934e0873b356e6599fef7a2fd8656ff578b116b", "filename": "gcc/testsuite/gfortran.dg/allocate_with_source_5.f90", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440f9408ea950a29ef7606b6114d84d1a5b53c90/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440f9408ea950a29ef7606b6114d84d1a5b53c90/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_5.f90?ref=440f9408ea950a29ef7606b6114d84d1a5b53c90", "patch": "@@ -0,0 +1,52 @@\n+! { dg-do run }\n+!\n+! Check that pr65548 is fixed.\n+! Contributed by Juergen Reuter  <juergen.reuter@desy.de>\n+\n+module allocate_with_source_5_module\n+\n+  type :: selector_t\n+    integer, dimension(:), allocatable :: map\n+    real, dimension(:), allocatable :: weight\n+  contains\n+    procedure :: init => selector_init\n+  end type selector_t\n+\n+contains\n+\n+  subroutine selector_init (selector, weight)\n+    class(selector_t), intent(out) :: selector\n+    real, dimension(:), intent(in) :: weight\n+    real :: s\n+    integer :: n, i\n+    logical, dimension(:), allocatable :: mask\n+    s = sum (weight)\n+    allocate (mask (size (weight)), source = weight /= 0)\n+    n = count (mask)\n+    if (n > 0) then\n+       allocate (selector%map (n), &\n+            source = pack ([(i, i = 1, size (weight))], mask))\n+       allocate (selector%weight (n), &\n+            source = pack (weight / s, mask))\n+    else\n+       allocate (selector%map (1), source = 1)\n+       allocate (selector%weight (1), source = 0.)\n+    end if\n+  end subroutine selector_init\n+\n+end module allocate_with_source_5_module\n+\n+program allocate_with_source_5\n+  use allocate_with_source_5_module\n+\n+  class(selector_t), allocatable :: sel;\n+  real, dimension(5) :: w = [ 1, 0, 2, 0, 3];\n+\n+  allocate (sel)\n+  call sel%init(w)\n+\n+  if (any(sel%map /= [ 1, 3, 5])) call abort()\n+  if (any(abs(sel%weight - [1, 2, 3] / 6) < 1E-6)) call abort()\n+end program allocate_with_source_5\n+! { dg-final { cleanup-modules \"allocate_with_source_5_module\" } }\n+"}]}