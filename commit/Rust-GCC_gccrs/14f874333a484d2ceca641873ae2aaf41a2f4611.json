{"sha": "14f874333a484d2ceca641873ae2aaf41a2f4611", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRmODc0MzMzYTQ4NGQyY2VjYTY0MTg3M2FlMmFhZjQxYTJmNDYxMQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-09-17T18:01:01Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-09-17T18:01:01Z"}, "message": "c-decl.c (pushdecl): Don't set DECL_LANG_SPECIFIC.\n\n\t* c-decl.c (pushdecl): Don't set DECL_LANG_SPECIFIC.\n\t(c_builtin_function): Likewise.\n\t(grokdeclarator): Likewise.\n\nFrom-SVN: r128552", "tree": {"sha": "2f66fb6521ff0babea4a56ed65dad0bbc1486399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f66fb6521ff0babea4a56ed65dad0bbc1486399"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14f874333a484d2ceca641873ae2aaf41a2f4611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f874333a484d2ceca641873ae2aaf41a2f4611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f874333a484d2ceca641873ae2aaf41a2f4611", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f874333a484d2ceca641873ae2aaf41a2f4611/comments", "author": null, "committer": null, "parents": [{"sha": "be661bcec28ab9f6d361b37ee9ce4f2607568ba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be661bcec28ab9f6d361b37ee9ce4f2607568ba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be661bcec28ab9f6d361b37ee9ce4f2607568ba7"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "72ab6794879b4df43edda29751c0a3822cd8b8f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f874333a484d2ceca641873ae2aaf41a2f4611/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f874333a484d2ceca641873ae2aaf41a2f4611/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14f874333a484d2ceca641873ae2aaf41a2f4611", "patch": "@@ -1,3 +1,9 @@\n+2007-09-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* c-decl.c (pushdecl): Don't set DECL_LANG_SPECIFIC.\n+\t(c_builtin_function): Likewise.\n+\t(grokdeclarator): Likewise.\n+\n 2007-09-17  Zdenek Dvorak  <ook@ucw.cz>\n \n \tPR rtl-optimization/26449"}, {"sha": "ee8e7853383b3955abb4fc19abd7278807a7d7e0", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f874333a484d2ceca641873ae2aaf41a2f4611/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f874333a484d2ceca641873ae2aaf41a2f4611/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=14f874333a484d2ceca641873ae2aaf41a2f4611", "patch": "@@ -2071,10 +2071,6 @@ pushdecl (tree x)\n   struct c_binding *b;\n   bool nested = false;\n \n-  /* Functions need the lang_decl data.  */\n-  if (TREE_CODE (x) == FUNCTION_DECL && !DECL_LANG_SPECIFIC (x))\n-    DECL_LANG_SPECIFIC (x) = GGC_CNEW (struct lang_decl);\n-\n   /* Must set DECL_CONTEXT for everything not at file scope or\n      DECL_FILE_SCOPE_P won't work.  Local externs don't count\n      unless they have initializers (which generate code).  */\n@@ -2846,7 +2842,6 @@ c_builtin_function (tree decl)\n   tree   id = DECL_NAME (decl);\n \n   const char *name = IDENTIFIER_POINTER (id);\n-  DECL_LANG_SPECIFIC (decl) = GGC_CNEW (struct lang_decl);\n   C_DECL_BUILTIN_PROTOTYPE (decl) = (TYPE_ARG_TYPES (type) != 0);\n \n   /* Should never be called on a symbol with a preexisting meaning.  */\n@@ -4825,8 +4820,6 @@ grokdeclarator (const struct c_declarator *declarator,\n \tdecl = build_decl (FUNCTION_DECL, declarator->u.id, type);\n \tdecl = build_decl_attribute_variant (decl, decl_attr);\n \n-\tDECL_LANG_SPECIFIC (decl) = GGC_CNEW (struct lang_decl);\n-\n \tif (pedantic && type_quals && !DECL_IN_SYSTEM_HEADER (decl))\n \t  pedwarn (\"ISO C forbids qualified function types\");\n "}]}