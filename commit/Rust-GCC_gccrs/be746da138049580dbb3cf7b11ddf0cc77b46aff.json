{"sha": "be746da138049580dbb3cf7b11ddf0cc77b46aff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU3NDZkYTEzODA0OTU4MGRiYjNjZjdiMTFkZGYwY2M3N2I0NmFmZg==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-09-12T07:34:31Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-09-12T07:34:31Z"}, "message": "AVX-512. Extend gather insn patterns.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_expand \"<avx512>_gathersi<mode>\"): Rename from\n\t\"avx512f_gathersi<mode>\".\n\t(define_insn \"*avx512f_gathersi<mode>\"): Use VI48F.\n\t(define_insn \"*avx512f_gathersi<mode>_2\"): Ditto.\n\t(define_expand \"<avx512>_gatherdi<mode>\"): Rename from\n\t\"avx512f_gatherdi<mode>\".\n\t(define_insn \"*avx512f_gatherdi<mode>\"): Use VI48F.\n\t(define_insn \"*avx512f_gatherdi<mode>_2\"): Use VI48F, add 128/256-bit\n\twide versions.\n\t(define_expand \"<avx512>_scattersi<mode>\"): Rename from\n\t\"avx512f_scattersi<mode>\".\n\t(define_insn \"*avx512f_scattersi<mode>\"): Use VI48F.\n\t(define_expand \"<avx512>_scatterdi<mode>\"): Rename from\n\t\"avx512f_scatterdi<mode>\".\n\t(define_insn \"*avx512f_scatterdi<mode>\"): Use VI48F.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r215201", "tree": {"sha": "5d7d7583a9032029c336fd865dd4de1c7f073088", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d7d7583a9032029c336fd865dd4de1c7f073088"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be746da138049580dbb3cf7b11ddf0cc77b46aff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be746da138049580dbb3cf7b11ddf0cc77b46aff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be746da138049580dbb3cf7b11ddf0cc77b46aff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be746da138049580dbb3cf7b11ddf0cc77b46aff/comments", "author": null, "committer": null, "parents": [{"sha": "19c708dc8316d80ca3611106fd989b317d55b968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c708dc8316d80ca3611106fd989b317d55b968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19c708dc8316d80ca3611106fd989b317d55b968"}], "stats": {"total": 93, "additions": 62, "deletions": 31}, "files": [{"sha": "4c9a3704a9ef9ff6f1e8c96e39d3ae55f4c696de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be746da138049580dbb3cf7b11ddf0cc77b46aff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be746da138049580dbb3cf7b11ddf0cc77b46aff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be746da138049580dbb3cf7b11ddf0cc77b46aff", "patch": "@@ -1,3 +1,29 @@\n+2014-09-12  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_expand \"<avx512>_gathersi<mode>\"): Rename from\n+\t\"avx512f_gathersi<mode>\".\n+\t(define_insn \"*avx512f_gathersi<mode>\"): Use VI48F.\n+\t(define_insn \"*avx512f_gathersi<mode>_2\"): Ditto.\n+\t(define_expand \"<avx512>_gatherdi<mode>\"): Rename from\n+\t\"avx512f_gatherdi<mode>\".\n+\t(define_insn \"*avx512f_gatherdi<mode>\"): Use VI48F.\n+\t(define_insn \"*avx512f_gatherdi<mode>_2\"): Use VI48F, add 128/256-bit\n+\twide versions.\n+\t(define_expand \"<avx512>_scattersi<mode>\"): Rename from\n+\t\"avx512f_scattersi<mode>\".\n+\t(define_insn \"*avx512f_scattersi<mode>\"): Use VI48F.\n+\t(define_expand \"<avx512>_scatterdi<mode>\"): Rename from\n+\t\"avx512f_scatterdi<mode>\".\n+\t(define_insn \"*avx512f_scatterdi<mode>\"): Use VI48F.\n+\n 2014-09-12  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* ira.h (ira_finish_once): Delete."}, {"sha": "40b8f8342f37b3c019858f67a53b04bf29fb39e9", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 36, "deletions": 31, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be746da138049580dbb3cf7b11ddf0cc77b46aff/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be746da138049580dbb3cf7b11ddf0cc77b46aff/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=be746da138049580dbb3cf7b11ddf0cc77b46aff", "patch": "@@ -16650,10 +16650,10 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_expand \"avx512f_gathersi<mode>\"\n-  [(parallel [(set (match_operand:VI48F_512 0 \"register_operand\")\n-\t\t   (unspec:VI48F_512\n-\t\t     [(match_operand:VI48F_512 1 \"register_operand\")\n+(define_expand \"<avx512>_gathersi<mode>\"\n+  [(parallel [(set (match_operand:VI48F 0 \"register_operand\")\n+\t\t   (unspec:VI48F\n+\t\t     [(match_operand:VI48F 1 \"register_operand\")\n \t\t      (match_operand:<avx512fmaskmode> 4 \"register_operand\")\n \t\t      (mem:<ssescalarmode>\n \t\t\t(match_par_dup 6\n@@ -16670,9 +16670,9 @@\n })\n \n (define_insn \"*avx512f_gathersi<mode>\"\n-  [(set (match_operand:VI48F_512 0 \"register_operand\" \"=&v\")\n-\t(unspec:VI48F_512\n-\t  [(match_operand:VI48F_512 1 \"register_operand\" \"0\")\n+  [(set (match_operand:VI48F 0 \"register_operand\" \"=&v\")\n+\t(unspec:VI48F\n+\t  [(match_operand:VI48F 1 \"register_operand\" \"0\")\n \t   (match_operand:<avx512fmaskmode> 7 \"register_operand\" \"2\")\n \t   (match_operator:<ssescalarmode> 6 \"vsib_mem_operator\"\n \t     [(unspec:P\n@@ -16689,8 +16689,8 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"*avx512f_gathersi<mode>_2\"\n-  [(set (match_operand:VI48F_512 0 \"register_operand\" \"=&v\")\n-\t(unspec:VI48F_512\n+  [(set (match_operand:VI48F 0 \"register_operand\" \"=&v\")\n+\t(unspec:VI48F\n \t  [(pc)\n \t   (match_operand:<avx512fmaskmode> 6 \"register_operand\" \"1\")\n \t   (match_operator:<ssescalarmode> 5 \"vsib_mem_operator\"\n@@ -16708,9 +16708,9 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n \n-(define_expand \"avx512f_gatherdi<mode>\"\n-  [(parallel [(set (match_operand:VI48F_512 0 \"register_operand\")\n-\t\t   (unspec:VI48F_512\n+(define_expand \"<avx512>_gatherdi<mode>\"\n+  [(parallel [(set (match_operand:VI48F 0 \"register_operand\")\n+\t\t   (unspec:VI48F\n \t\t     [(match_operand:<VEC_GATHER_SRCDI> 1 \"register_operand\")\n \t\t      (match_operand:QI 4 \"register_operand\")\n \t\t      (mem:<ssescalarmode>\n@@ -16728,8 +16728,8 @@\n })\n \n (define_insn \"*avx512f_gatherdi<mode>\"\n-  [(set (match_operand:VI48F_512 0 \"register_operand\" \"=&v\")\n-\t(unspec:VI48F_512\n+  [(set (match_operand:VI48F 0 \"register_operand\" \"=&v\")\n+\t(unspec:VI48F\n \t  [(match_operand:<VEC_GATHER_SRCDI> 1 \"register_operand\" \"0\")\n \t   (match_operand:QI 7 \"register_operand\" \"2\")\n \t   (match_operator:<ssescalarmode> 6 \"vsib_mem_operator\"\n@@ -16747,8 +16747,8 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"*avx512f_gatherdi<mode>_2\"\n-  [(set (match_operand:VI48F_512 0 \"register_operand\" \"=&v\")\n-\t(unspec:VI48F_512\n+  [(set (match_operand:VI48F 0 \"register_operand\" \"=&v\")\n+\t(unspec:VI48F\n \t  [(pc)\n \t   (match_operand:QI 6 \"register_operand\" \"1\")\n \t   (match_operator:<ssescalarmode> 5 \"vsib_mem_operator\"\n@@ -16762,22 +16762,27 @@\n   \"TARGET_AVX512F\"\n {\n   if (<MODE>mode != <VEC_GATHER_SRCDI>mode)\n-    return \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%5, %t0%{%1%}|%t0%{%1%}, %g5}\";\n+    {\n+      if (GET_MODE_SIZE (<MODE>mode) != 64)\n+\treturn \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%5, %x0%{%1%}|%t0%{%1%}, %g5}\";\n+      else\n+\treturn \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%5, %t0%{%1%}|%t0%{%1%}, %g5}\";\n+    }\n   return \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%5, %0%{%1%}|%0%{%1%}, %g5}\";\n }\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_expand \"avx512f_scattersi<mode>\"\n-  [(parallel [(set (mem:VI48F_512\n+(define_expand \"<avx512>_scattersi<mode>\"\n+  [(parallel [(set (mem:VI48F\n \t\t     (match_par_dup 5\n \t\t       [(match_operand 0 \"vsib_address_operand\")\n \t\t\t(match_operand:<VEC_GATHER_IDXSI> 2 \"register_operand\")\n \t\t\t(match_operand:SI 4 \"const1248_operand\")]))\n-\t\t   (unspec:VI48F_512\n+\t\t   (unspec:VI48F\n \t\t     [(match_operand:<avx512fmaskmode> 1 \"register_operand\")\n-\t\t      (match_operand:VI48F_512 3 \"register_operand\")]\n+\t\t      (match_operand:VI48F 3 \"register_operand\")]\n \t\t     UNSPEC_SCATTER))\n \t      (clobber (match_scratch:<avx512fmaskmode> 6))])]\n   \"TARGET_AVX512F\"\n@@ -16788,15 +16793,15 @@\n })\n \n (define_insn \"*avx512f_scattersi<mode>\"\n-  [(set (match_operator:VI48F_512 5 \"vsib_mem_operator\"\n+  [(set (match_operator:VI48F 5 \"vsib_mem_operator\"\n \t  [(unspec:P\n \t     [(match_operand:P 0 \"vsib_address_operand\" \"Tv\")\n \t      (match_operand:<VEC_GATHER_IDXSI> 2 \"register_operand\" \"v\")\n \t      (match_operand:SI 4 \"const1248_operand\" \"n\")]\n \t     UNSPEC_VSIBADDR)])\n-\t(unspec:VI48F_512\n+\t(unspec:VI48F\n \t  [(match_operand:<avx512fmaskmode> 6 \"register_operand\" \"1\")\n-\t   (match_operand:VI48F_512 3 \"register_operand\" \"v\")]\n+\t   (match_operand:VI48F 3 \"register_operand\" \"v\")]\n \t  UNSPEC_SCATTER))\n    (clobber (match_scratch:<avx512fmaskmode> 1 \"=&Yk\"))]\n   \"TARGET_AVX512F\"\n@@ -16805,13 +16810,13 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_expand \"avx512f_scatterdi<mode>\"\n-  [(parallel [(set (mem:VI48F_512\n+(define_expand \"<avx512>_scatterdi<mode>\"\n+  [(parallel [(set (mem:VI48F\n \t\t     (match_par_dup 5\n \t\t       [(match_operand 0 \"vsib_address_operand\")\n-\t\t\t(match_operand:V8DI 2 \"register_operand\")\n+\t\t\t(match_operand:<VEC_GATHER_IDXDI> 2 \"register_operand\")\n \t\t\t(match_operand:SI 4 \"const1248_operand\")]))\n-\t\t   (unspec:VI48F_512\n+\t\t   (unspec:VI48F\n \t\t     [(match_operand:QI 1 \"register_operand\")\n \t\t      (match_operand:<VEC_GATHER_SRCDI> 3 \"register_operand\")]\n \t\t     UNSPEC_SCATTER))\n@@ -16824,13 +16829,13 @@\n })\n \n (define_insn \"*avx512f_scatterdi<mode>\"\n-  [(set (match_operator:VI48F_512 5 \"vsib_mem_operator\"\n+  [(set (match_operator:VI48F 5 \"vsib_mem_operator\"\n \t  [(unspec:P\n \t     [(match_operand:P 0 \"vsib_address_operand\" \"Tv\")\n-\t      (match_operand:V8DI 2 \"register_operand\" \"v\")\n+\t      (match_operand:<VEC_GATHER_IDXDI> 2 \"register_operand\" \"v\")\n \t      (match_operand:SI 4 \"const1248_operand\" \"n\")]\n \t     UNSPEC_VSIBADDR)])\n-\t(unspec:VI48F_512\n+\t(unspec:VI48F\n \t  [(match_operand:QI 6 \"register_operand\" \"1\")\n \t   (match_operand:<VEC_GATHER_SRCDI> 3 \"register_operand\" \"v\")]\n \t  UNSPEC_SCATTER))"}]}