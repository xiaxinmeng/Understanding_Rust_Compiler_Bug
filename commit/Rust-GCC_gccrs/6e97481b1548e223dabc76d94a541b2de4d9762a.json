{"sha": "6e97481b1548e223dabc76d94a541b2de4d9762a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU5NzQ4MWIxNTQ4ZTIyM2RhYmM3NmQ5NGE1NDFiMmRlNGQ5NzYyYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-12-03T09:09:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-12-03T09:09:43Z"}, "message": "re PR target/37610 (FAIL: g++.dg/eh/pr29166.C execution test)\n\n\tPR target/37610\n\t* configure.ac (gcc_cv_readelf): Look for readelf.\n\t(gcc_cv_as_cfi_advance_working): Check for working\n\tcfi advances with code alignment factor > 1.\n\t(HAVE_GAS_CFI_DIRECTIVE): Don't define if cfi advances\n\tdon't work properly.\n\t* configure: Regenerated.\n\nFrom-SVN: r142389", "tree": {"sha": "c4257262e0a24bc5d073d2055b871b6fc05a8205", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4257262e0a24bc5d073d2055b871b6fc05a8205"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e97481b1548e223dabc76d94a541b2de4d9762a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e97481b1548e223dabc76d94a541b2de4d9762a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e97481b1548e223dabc76d94a541b2de4d9762a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e97481b1548e223dabc76d94a541b2de4d9762a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ce2b2991c6cef3d65055cc06ad76aeffb3587a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce2b2991c6cef3d65055cc06ad76aeffb3587a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce2b2991c6cef3d65055cc06ad76aeffb3587a3"}], "stats": {"total": 172, "additions": 169, "deletions": 3}, "files": [{"sha": "3eef9372b7c7198e9fd3f2dcd416ab35d57467d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e97481b1548e223dabc76d94a541b2de4d9762a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e97481b1548e223dabc76d94a541b2de4d9762a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e97481b1548e223dabc76d94a541b2de4d9762a", "patch": "@@ -1,3 +1,13 @@\n+2008-12-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/37610\n+\t* configure.ac (gcc_cv_readelf): Look for readelf.\n+\t(gcc_cv_as_cfi_advance_working): Check for working\n+\tcfi advances with code alignment factor > 1.\n+\t(HAVE_GAS_CFI_DIRECTIVE): Don't define if cfi advances\n+\tdon't work properly.\n+\t* configure: Regenerated.\n+\n 2008-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n             Jakub Jelinek  <jakub@redhat.com>\n             Andrew Pinski  <andrew_pinski@playstation.sony.com>"}, {"sha": "9da1269e6e824d6a5ebaaff455af1651b3202aa5", "filename": "gcc/configure", "status": "modified", "additions": 114, "deletions": 2, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e97481b1548e223dabc76d94a541b2de4d9762a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e97481b1548e223dabc76d94a541b2de4d9762a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=6e97481b1548e223dabc76d94a541b2de4d9762a", "patch": "@@ -458,7 +458,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP EGREP loose_warn strict_warn warn_cflags nocommon_flag TREEBROWSER valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_decimal_float enable_fixed_point enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep PKGVERSION REPORT_BUGS_TO REPORT_BUGS_TEXI datarootdir docdir htmldir SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LTLIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file extra_opt_files USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS DATADIRNAME INSTOBJEXT GENCAT CATOBJEXT CROSS ALL SYSTEM_HEADER_DIR inhibit_libc CC_FOR_BUILD BUILD_CFLAGS BUILD_LDFLAGS STMP_FIXINC STMP_FIXPROTO collect2 LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN OBJDUMP ac_ct_OBJDUMP ac_ct_AR STRIP ac_ct_STRIP lt_ECHO DSYMUTIL ac_ct_DSYMUTIL NMEDIT ac_ct_NMEDIT LIPO ac_ct_LIPO OTOOL ac_ct_OTOOL OTOOL64 ac_ct_OTOOL64 objdir enable_fast_install gcc_cv_as ORIGINAL_AS_FOR_TARGET gcc_cv_ld ORIGINAL_LD_FOR_TARGET gcc_cv_nm ORIGINAL_NM_FOR_TARGET gcc_cv_objdump libgcc_visibility GGC zlibdir zlibinc MAINT gcc_tooldir dollar slibdir subdirs srcdir all_compilers all_gtfiles all_lang_makefrags all_lang_makefiles all_languages all_selected_languages build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines build_file_translate check_languages cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines c_target_objs cxx_target_objs fortran_target_objs target_cpu_default GMPLIBS GMPINC PPLLIBS PPLINC CLOOGLIBS CLOOGINC LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP EGREP loose_warn strict_warn warn_cflags nocommon_flag TREEBROWSER valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_decimal_float enable_fixed_point enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep PKGVERSION REPORT_BUGS_TO REPORT_BUGS_TEXI datarootdir docdir htmldir SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LTLIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file extra_opt_files USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS DATADIRNAME INSTOBJEXT GENCAT CATOBJEXT CROSS ALL SYSTEM_HEADER_DIR inhibit_libc CC_FOR_BUILD BUILD_CFLAGS BUILD_LDFLAGS STMP_FIXINC STMP_FIXPROTO collect2 LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN OBJDUMP ac_ct_OBJDUMP ac_ct_AR STRIP ac_ct_STRIP lt_ECHO DSYMUTIL ac_ct_DSYMUTIL NMEDIT ac_ct_NMEDIT LIPO ac_ct_LIPO OTOOL ac_ct_OTOOL OTOOL64 ac_ct_OTOOL64 objdir enable_fast_install gcc_cv_as ORIGINAL_AS_FOR_TARGET gcc_cv_ld ORIGINAL_LD_FOR_TARGET gcc_cv_nm ORIGINAL_NM_FOR_TARGET gcc_cv_objdump gcc_cv_readelf libgcc_visibility GGC zlibdir zlibinc MAINT gcc_tooldir dollar slibdir subdirs srcdir all_compilers all_gtfiles all_lang_makefrags all_lang_makefiles all_languages all_selected_languages build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines build_file_translate check_languages cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines c_target_objs cxx_target_objs fortran_target_objs target_cpu_default GMPLIBS GMPINC PPLLIBS PPLINC CLOOGLIBS CLOOGINC LIBOBJS LTLIBOBJS'\n ac_subst_files='language_hooks'\n ac_pwd=`pwd`\n \n@@ -20966,6 +20966,76 @@ else\n echo \"${ECHO_T}$gcc_cv_objdump\" >&6\n fi\n \n+# Figure out what readelf we will be using.\n+if test \"${gcc_cv_readelf+set}\" = set; then\n+  :\n+else\n+\n+if test -f $gcc_cv_binutils_srcdir/configure.in \\\n+     && test -f ../binutils/Makefile \\\n+     && test x$build = x$host; then\n+\t# Single tree build which includes binutils.\n+\tgcc_cv_readelf=../binutils/readelf$build_exeext\n+elif test -x readelf$build_exeext; then\n+\tgcc_cv_readelf=./readelf$build_exeext\n+else\n+        # Extract the first word of \"readelf\", so it can be a program name with args.\n+set dummy readelf; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_path_gcc_cv_readelf+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  case $gcc_cv_readelf in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_gcc_cv_readelf=\"$gcc_cv_readelf\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_gcc_cv_readelf=\"$as_dir/$ac_word$ac_exec_ext\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+  ;;\n+esac\n+fi\n+gcc_cv_readelf=$ac_cv_path_gcc_cv_readelf\n+\n+if test -n \"$gcc_cv_readelf\"; then\n+  echo \"$as_me:$LINENO: result: $gcc_cv_readelf\" >&5\n+echo \"${ECHO_T}$gcc_cv_readelf\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+fi\n+fi\n+\n+\n+echo \"$as_me:$LINENO: checking what readelf to use\" >&5\n+echo $ECHO_N \"checking what readelf to use... $ECHO_C\" >&6\n+if test \"$gcc_cv_readelf\" = ../binutils/readelf$build_exeext; then\n+\t# Single tree build which includes binutils.\n+\techo \"$as_me:$LINENO: result: newly built readelf\" >&5\n+echo \"${ECHO_T}newly built readelf\" >&6\n+elif test x$gcc_cv_readelf = x; then\n+\techo \"$as_me:$LINENO: result: not found\" >&5\n+echo \"${ECHO_T}not found\" >&6\n+else\n+\techo \"$as_me:$LINENO: result: $gcc_cv_readelf\" >&5\n+echo \"${ECHO_T}$gcc_cv_readelf\" >&6\n+fi\n+\n # Figure out what assembler alignment features are present.\n echo \"$as_me:$LINENO: checking assembler for .balign and .p2align\" >&5\n echo $ECHO_N \"checking assembler for .balign and .p2align... $ECHO_C\" >&6\n@@ -21502,9 +21572,50 @@ fi\n echo \"$as_me:$LINENO: result: $gcc_cv_as_cfi_directive\" >&5\n echo \"${ECHO_T}$gcc_cv_as_cfi_directive\" >&6\n \n+if test $gcc_cv_as_cfi_directive = yes && test x$gcc_cv_readelf != x; then\n+echo \"$as_me:$LINENO: checking assembler for working cfi advance\" >&5\n+echo $ECHO_N \"checking assembler for working cfi advance... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_cfi_advance_working+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_cfi_advance_working=no\n+  if test x$gcc_cv_as != x; then\n+    echo '\t.text\n+\t.cfi_startproc\n+\t.cfi_adjust_cfa_offset 64\n+\t.skip 512, 0\n+\t.cfi_adjust_cfa_offset 128\n+\t.cfi_endproc' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\n+if $gcc_cv_readelf -wf conftest.o 2>/dev/null \\\n+    | grep 'DW_CFA_advance_loc[12]:[ \t][ \t]*512[ \t]' >/dev/null; then\n+   gcc_cv_as_cfi_advance_working=yes\n+fi\n+\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_cfi_advance_working\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_cfi_advance_working\" >&6\n+\n+else\n+  gcc_cv_as_cfi_advance_working=yes\n+fi\n \n cat >>confdefs.h <<_ACEOF\n-#define HAVE_GAS_CFI_DIRECTIVE `if test $gcc_cv_as_cfi_directive = yes; then echo 1; else echo 0; fi`\n+#define HAVE_GAS_CFI_DIRECTIVE `if test $gcc_cv_as_cfi_directive = yes \\\n+       && test $gcc_cv_as_cfi_advance_working = yes; then echo 1; else echo 0; fi`\n _ACEOF\n \n \n@@ -25432,6 +25543,7 @@ s,@ORIGINAL_LD_FOR_TARGET@,$ORIGINAL_LD_FOR_TARGET,;t t\n s,@gcc_cv_nm@,$gcc_cv_nm,;t t\n s,@ORIGINAL_NM_FOR_TARGET@,$ORIGINAL_NM_FOR_TARGET,;t t\n s,@gcc_cv_objdump@,$gcc_cv_objdump,;t t\n+s,@gcc_cv_readelf@,$gcc_cv_readelf,;t t\n s,@libgcc_visibility@,$libgcc_visibility,;t t\n s,@GGC@,$GGC,;t t\n s,@zlibdir@,$zlibdir,;t t"}, {"sha": "559332f4ed5c635328d18bead532ea3bd86f185e", "filename": "gcc/configure.ac", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e97481b1548e223dabc76d94a541b2de4d9762a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e97481b1548e223dabc76d94a541b2de4d9762a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=6e97481b1548e223dabc76d94a541b2de4d9762a", "patch": "@@ -2005,6 +2005,29 @@ else\n \tAC_MSG_RESULT($gcc_cv_objdump)\n fi\n \n+# Figure out what readelf we will be using.\n+AS_VAR_SET_IF(gcc_cv_readelf,, [\n+if test -f $gcc_cv_binutils_srcdir/configure.in \\\n+     && test -f ../binutils/Makefile \\\n+     && test x$build = x$host; then\n+\t# Single tree build which includes binutils.\n+\tgcc_cv_readelf=../binutils/readelf$build_exeext\n+elif test -x readelf$build_exeext; then\n+\tgcc_cv_readelf=./readelf$build_exeext\n+else\n+        AC_PATH_PROG(gcc_cv_readelf, readelf)\n+fi])\n+\n+AC_MSG_CHECKING(what readelf to use)\n+if test \"$gcc_cv_readelf\" = ../binutils/readelf$build_exeext; then\n+\t# Single tree build which includes binutils.\n+\tAC_MSG_RESULT(newly built readelf)\n+elif test x$gcc_cv_readelf = x; then\n+\tAC_MSG_RESULT(not found)\n+else\n+\tAC_MSG_RESULT($gcc_cv_readelf)\n+fi\n+\n # Figure out what assembler alignment features are present.\n gcc_GAS_CHECK_FEATURE([.balign and .p2align], gcc_cv_as_balign_and_p2align,\n  [2,6,0],,\n@@ -2234,8 +2257,29 @@ gcc_GAS_CHECK_FEATURE([cfi directives], gcc_cv_as_cfi_directive,\n     gcc_cv_as_cfi_directive=yes\n     ;;\n esac])\n+if test $gcc_cv_as_cfi_directive = yes && test x$gcc_cv_readelf != x; then\n+gcc_GAS_CHECK_FEATURE([working cfi advance], gcc_cv_as_cfi_advance_working,\n+  ,,\n+[\t.text\n+\t.cfi_startproc\n+\t.cfi_adjust_cfa_offset 64\n+\t.skip 512, 0\n+\t.cfi_adjust_cfa_offset 128\n+\t.cfi_endproc],\n+[\n+changequote(,)dnl\n+if $gcc_cv_readelf -wf conftest.o 2>/dev/null \\\n+    | grep 'DW_CFA_advance_loc[12]:[ \t][ \t]*512[ \t]' >/dev/null; then\n+   gcc_cv_as_cfi_advance_working=yes\n+fi\n+changequote([,])dnl\n+])\n+else\n+  gcc_cv_as_cfi_advance_working=yes\n+fi\n AC_DEFINE_UNQUOTED(HAVE_GAS_CFI_DIRECTIVE,\n-  [`if test $gcc_cv_as_cfi_directive = yes; then echo 1; else echo 0; fi`],\n+  [`if test $gcc_cv_as_cfi_directive = yes \\\n+       && test $gcc_cv_as_cfi_advance_working = yes; then echo 1; else echo 0; fi`],\n   [Define 0/1 if your assembler supports CFI directives.])\n \n gcc_GAS_CHECK_FEATURE([cfi personality directive],"}]}