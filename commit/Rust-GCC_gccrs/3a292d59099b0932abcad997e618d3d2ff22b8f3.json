{"sha": "3a292d59099b0932abcad997e618d3d2ff22b8f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EyOTJkNTkwOTliMDkzMmFiY2FkOTk3ZTYxOGQzZDJmZjIyYjhmMw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-01-25T06:47:09Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-01-25T06:47:09Z"}, "message": "Remove duplicate close phi nodes in the canonical close phi representation.\n\n2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-scop-detection.c (same_close_phi_node): New.\n\t(remove_duplicate_close_phi): New.\n\t(make_close_phi_nodes_unique): New.\n\t(canonicalize_loop_closed_ssa): Call make_close_phi_nodes_unique.\n\nFrom-SVN: r169211", "tree": {"sha": "a66d538861c840fb03162e1705152cb0cc87c8f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a66d538861c840fb03162e1705152cb0cc87c8f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a292d59099b0932abcad997e618d3d2ff22b8f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a292d59099b0932abcad997e618d3d2ff22b8f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a292d59099b0932abcad997e618d3d2ff22b8f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a292d59099b0932abcad997e618d3d2ff22b8f3/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba85844784fbb14ff68f8b5e8bd1f78365f487fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba85844784fbb14ff68f8b5e8bd1f78365f487fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba85844784fbb14ff68f8b5e8bd1f78365f487fc"}], "stats": {"total": 83, "additions": 82, "deletions": 1}, "files": [{"sha": "cb76451bab63805331b07e02cb76e004f800c31d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a292d59099b0932abcad997e618d3d2ff22b8f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a292d59099b0932abcad997e618d3d2ff22b8f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a292d59099b0932abcad997e618d3d2ff22b8f3", "patch": "@@ -1,3 +1,10 @@\n+2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-scop-detection.c (same_close_phi_node): New.\n+\t(remove_duplicate_close_phi): New.\n+\t(make_close_phi_nodes_unique): New.\n+\t(canonicalize_loop_closed_ssa): Call make_close_phi_nodes_unique.\n+\n 2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-dependences.c (new_poly_ddr): Call same_pdr_p."}, {"sha": "1782e768ec266f1159af1b96151f7fc0bf5d4c36", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a292d59099b0932abcad997e618d3d2ff22b8f3/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a292d59099b0932abcad997e618d3d2ff22b8f3/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=3a292d59099b0932abcad997e618d3d2ff22b8f3", "patch": "@@ -1,3 +1,10 @@\n+2011-01-17  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-scop-detection.c (same_close_phi_node): New.\n+\t(remove_duplicate_close_phi): New.\n+\t(make_close_phi_nodes_unique): New.\n+\t(canonicalize_loop_closed_ssa): Call make_close_phi_nodes_unique.\n+\n 2011-01-17  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-dependences.c (new_poly_ddr): Call same_pdr_p."}, {"sha": "693dfeba2b809665ba32661adf30b37cafecbfab", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 68, "deletions": 1, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a292d59099b0932abcad997e618d3d2ff22b8f3/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a292d59099b0932abcad997e618d3d2ff22b8f3/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=3a292d59099b0932abcad997e618d3d2ff22b8f3", "patch": "@@ -1199,6 +1199,66 @@ limit_scops (VEC (scop_p, heap) **scops)\n   VEC_free (sd_region, heap, regions);\n }\n \n+/* Returns true when P1 and P2 are close phis with the same\n+   argument.  */\n+\n+static inline bool\n+same_close_phi_node (gimple p1, gimple p2)\n+{\n+  return operand_equal_p (gimple_phi_arg_def (p1, 0),\n+\t\t\t  gimple_phi_arg_def (p2, 0), 0);\n+}\n+\n+/* Remove the close phi node at GSI and replace its rhs with the rhs\n+   of PHI.  */\n+\n+static void\n+remove_duplicate_close_phi (gimple phi, gimple_stmt_iterator *gsi)\n+{\n+  gimple use_stmt;\n+  use_operand_p use_p;\n+  imm_use_iterator imm_iter;\n+  tree res = gimple_phi_result (phi);\n+  tree def = gimple_phi_result (gsi_stmt (*gsi));\n+\n+  gcc_assert (same_close_phi_node (phi, gsi_stmt (*gsi)));\n+\n+  FOR_EACH_IMM_USE_STMT (use_stmt, imm_iter, def)\n+    {\n+      FOR_EACH_IMM_USE_ON_STMT (use_p, imm_iter)\n+\tSET_USE (use_p, res);\n+\n+      update_stmt (use_stmt);\n+    }\n+\n+  remove_phi_node (gsi, true);\n+}\n+\n+/* Removes all the close phi duplicates from BB.  */\n+\n+static void\n+make_close_phi_nodes_unique (basic_block bb)\n+{\n+  gimple_stmt_iterator psi;\n+\n+  for (psi = gsi_start_phis (bb); !gsi_end_p (psi); gsi_next (&psi))\n+    {\n+      gimple_stmt_iterator gsi = psi;\n+      gimple phi = gsi_stmt (psi);\n+\n+      /* At this point, PHI should be a close phi in normal form.  */\n+      gcc_assert (gimple_phi_num_args (phi) == 1);\n+\n+      /* Iterate over the next phis and remove duplicates.  */\n+      gsi_next (&gsi);\n+      while (!gsi_end_p (gsi))\n+\tif (same_close_phi_node (phi, gsi_stmt (gsi)))\n+\t  remove_duplicate_close_phi (phi, &gsi);\n+\telse\n+\t  gsi_next (&gsi);\n+    }\n+}\n+\n /* Transforms LOOP to the canonical loop closed SSA form.  */\n \n static void\n@@ -1213,7 +1273,10 @@ canonicalize_loop_closed_ssa (loop_p loop)\n   bb = e->dest;\n \n   if (VEC_length (edge, bb->preds) == 1)\n-    split_block_after_labels (bb);\n+    {\n+      e = split_block_after_labels (bb);\n+      make_close_phi_nodes_unique (e->src);\n+    }\n   else\n     {\n       gimple_stmt_iterator psi;\n@@ -1248,6 +1311,8 @@ canonicalize_loop_closed_ssa (loop_p loop)\n \t\tupdate_stmt (phi);\n \t      }\n \t}\n+\n+      make_close_phi_nodes_unique (close);\n     }\n \n   /* The code above does not properly handle changes in the post dominance\n@@ -1272,6 +1337,8 @@ canonicalize_loop_closed_ssa (loop_p loop)\n \n    - the basic block containing the close phi nodes does not contain\n    other statements.\n+\n+   - there exist only one phi node per definition in the loop.\n */\n \n static void"}]}