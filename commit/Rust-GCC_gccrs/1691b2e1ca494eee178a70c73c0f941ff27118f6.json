{"sha": "1691b2e1ca494eee178a70c73c0f941ff27118f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY5MWIyZTFjYTQ5NGVlZTE3OGE3MGM3M2MwZjk0MWZmMjcxMThmNg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-04-17T09:26:50Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-04-17T09:26:50Z"}, "message": "Handle internal_fn in operand_equal_p\n\n2015-04-17  Tom de Vries  <tom@codesourcery.com>\n\n\t* fold-const.c (operand_equal_p): Handle INTERNAL_FNs.\n\t* calls.c (call_expr_flags): Same.\n\nFrom-SVN: r222172", "tree": {"sha": "37cc3da3b1e49c1cbab2ac01cbed05e03eea3bc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37cc3da3b1e49c1cbab2ac01cbed05e03eea3bc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1691b2e1ca494eee178a70c73c0f941ff27118f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1691b2e1ca494eee178a70c73c0f941ff27118f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1691b2e1ca494eee178a70c73c0f941ff27118f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1691b2e1ca494eee178a70c73c0f941ff27118f6/comments", "author": null, "committer": null, "parents": [{"sha": "302f08072ff5559a762baed4bde399852c0960be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/302f08072ff5559a762baed4bde399852c0960be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/302f08072ff5559a762baed4bde399852c0960be"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "54c3ccfe1635bba48da42e1be28e5ba2e3c798f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1691b2e1ca494eee178a70c73c0f941ff27118f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1691b2e1ca494eee178a70c73c0f941ff27118f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1691b2e1ca494eee178a70c73c0f941ff27118f6", "patch": "@@ -1,3 +1,8 @@\n+2015-04-17  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* fold-const.c (operand_equal_p): Handle INTERNAL_FNs.\n+\t* calls.c (call_expr_flags): Same.\n+\n 2015-04-17  Tom de Vries  <tom@codesourcery.com>\n \n \t* tree-stdarg.c (optimize_va_list_gpr_fpr_size): Factor out of ..."}, {"sha": "3be7ca5f4a58ffeb2d3b1a34d10b01a3d520f71e", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1691b2e1ca494eee178a70c73c0f941ff27118f6/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1691b2e1ca494eee178a70c73c0f941ff27118f6/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=1691b2e1ca494eee178a70c73c0f941ff27118f6", "patch": "@@ -847,6 +847,8 @@ call_expr_flags (const_tree t)\n \n   if (decl)\n     flags = flags_from_decl_or_type (decl);\n+  else if (CALL_EXPR_FN (t) == NULL_TREE)\n+    flags = internal_fn_flags (CALL_EXPR_IFN (t));\n   else\n     {\n       t = TREE_TYPE (CALL_EXPR_FN (t));"}, {"sha": "3654fd670b064ff83788a9655c740532bce3449b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1691b2e1ca494eee178a70c73c0f941ff27118f6/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1691b2e1ca494eee178a70c73c0f941ff27118f6/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=1691b2e1ca494eee178a70c73c0f941ff27118f6", "patch": "@@ -3045,11 +3045,26 @@ operand_equal_p (const_tree arg0, const_tree arg1, unsigned int flags)\n       switch (TREE_CODE (arg0))\n \t{\n \tcase CALL_EXPR:\n-\t  /* If the CALL_EXPRs call different functions, then they\n-\t     clearly can not be equal.  */\n-\t  if (! operand_equal_p (CALL_EXPR_FN (arg0), CALL_EXPR_FN (arg1),\n-\t\t\t\t flags))\n+\t  if ((CALL_EXPR_FN (arg0) == NULL_TREE)\n+\t      != (CALL_EXPR_FN (arg1) == NULL_TREE))\n+\t    /* If not both CALL_EXPRs are either internal or normal function\n+\t       functions, then they are not equal.  */\n \t    return 0;\n+\t  else if (CALL_EXPR_FN (arg0) == NULL_TREE)\n+\t    {\n+\t      /* If the CALL_EXPRs call different internal functions, then they\n+\t\t are not equal.  */\n+\t      if (CALL_EXPR_IFN (arg0) != CALL_EXPR_IFN (arg1))\n+\t\treturn 0;\n+\t    }\n+\t  else\n+\t    {\n+\t      /* If the CALL_EXPRs call different functions, then they are not\n+\t\t equal.  */\n+\t      if (! operand_equal_p (CALL_EXPR_FN (arg0), CALL_EXPR_FN (arg1),\n+\t\t\t\t     flags))\n+\t\treturn 0;\n+\t    }\n \n \t  {\n \t    unsigned int cef = call_expr_flags (arg0);"}]}