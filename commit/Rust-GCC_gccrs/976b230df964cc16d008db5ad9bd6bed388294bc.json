{"sha": "976b230df964cc16d008db5ad9bd6bed388294bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc2YjIzMGRmOTY0Y2MxNmQwMDhkYjVhZDliZDZiZWQzODgyOTRiYw==", "commit": {"author": {"name": "Laurynas Biveinis", "email": "lauras@softhome.net", "date": "2001-01-02T15:55:07Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2001-01-02T15:55:07Z"}, "message": "ltcf-c.sh: clear ac_cv_prog_cc_pic for DJGPP.\n\n* ltcf-c.sh: clear ac_cv_prog_cc_pic for DJGPP. Do not add\n'-DPIC' to ac_cv_prog_cc_pic for DJGPP.\n* ltcf-cxx.sh: likewise.\n* ltcf-gcj.sh: likewise.\n* ltconfig.sh: fix typo.\n\nFrom-SVN: r38624", "tree": {"sha": "1cfbf0b930635e92476331512fe864be808fb8f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cfbf0b930635e92476331512fe864be808fb8f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/976b230df964cc16d008db5ad9bd6bed388294bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976b230df964cc16d008db5ad9bd6bed388294bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/976b230df964cc16d008db5ad9bd6bed388294bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976b230df964cc16d008db5ad9bd6bed388294bc/comments", "author": null, "committer": null, "parents": [{"sha": "16b975401a4a424a1ee06cda43b470b8eadfe44d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b975401a4a424a1ee06cda43b470b8eadfe44d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b975401a4a424a1ee06cda43b470b8eadfe44d"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "b084ddf141c37644299a8f1ec8c69f11dded73e6", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976b230df964cc16d008db5ad9bd6bed388294bc/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976b230df964cc16d008db5ad9bd6bed388294bc/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=976b230df964cc16d008db5ad9bd6bed388294bc", "patch": "@@ -1,3 +1,11 @@\n+2001-01-02  Laurynas Biveinis  &lt;lauras@softhome.net&gt;\n+\n+\t* ltcf-c.sh: clear ac_cv_prog_cc_pic for DJGPP. Do not add\n+\t'-DPIC' to ac_cv_prog_cc_pic for DJGPP.\n+\t* ltcf-cxx.sh: likewise.\n+\t* ltcf-gcj.sh: likewise.\n+\t* ltconfig.sh: fix typo.\n+\n 2001-01-02  Laurynas Biveinis  <lauras@softhome.net>\n \n \t* configure: handle DOS-style absolute paths."}, {"sha": "4ce77fc472a276b2e4f70938f0b7b5e78d083c7a", "filename": "ltcf-c.sh", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976b230df964cc16d008db5ad9bd6bed388294bc/ltcf-c.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976b230df964cc16d008db5ad9bd6bed388294bc/ltcf-c.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-c.sh?ref=976b230df964cc16d008db5ad9bd6bed388294bc", "patch": "@@ -548,6 +548,10 @@ else\n       # we not sure about C++ programs.\n       ac_cv_prog_cc_static=\"$ac_cv_prog_cc_static ${ac_cv_prog_cc_wl}-lC\"\n       ;;\n+    *djgpp*)\n+      # DJGPP does not support shared libraries at all\n+      ac_cv_prog_cc_pic=\n+      ;;\n     cygwin* | mingw* | os2*)\n       # This hack is so that the source file can tell whether it is being\n       # built for inclusion in a dll (and should export symbols for example).\n@@ -642,7 +646,16 @@ else\n       ;;\n     esac\n   fi\n-  ac_cv_prog_cc_pic=\"$ac_cv_prog_cc_pic -DPIC\"\n+  case \"$host_os\" in\n+      # Platforms which do not suport PIC and -DPIC is meaningless\n+      # on them:\n+      *djgpp*)\n+        ac_cv_prog_cc_pic=\n+        ;;\n+      *)\n+        ac_cv_prog_cc_pic=\"$ac_cv_prog_cc_pic -DPIC\"\n+        ;;\n+  esac\n fi\n \n need_lc=yes"}, {"sha": "9c7782f2791a91c0d76ca04d9a85413d9eb25938", "filename": "ltcf-cxx.sh", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976b230df964cc16d008db5ad9bd6bed388294bc/ltcf-cxx.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976b230df964cc16d008db5ad9bd6bed388294bc/ltcf-cxx.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-cxx.sh?ref=976b230df964cc16d008db5ad9bd6bed388294bc", "patch": "@@ -595,6 +595,10 @@ if test \"$with_gcc\" = yes; then\n     # we not sure about C++ programs.\n     ac_cv_prog_cc_static=\"$ac_cv_prog_cc_static ${ac_cv_prog_cc_wl}-lC\"\n     ;;\n+  *djgpp*)\n+    # DJGPP does not support shared libraries at all\n+    ac_cv_prog_cc_pic=\n+    ;;\n   cygwin* | mingw* | os2*)\n     # This hack is so that the source file can tell whether it is being\n     # built for inclusion in a dll (and should export symbols for example).\n@@ -786,7 +790,17 @@ else\n       ;;\n   esac\n fi\n-ac_cv_prog_cc_pic=\"$ac_cv_prog_cc_pic -DPIC\"\n+\n+case \"$host_os\" in\n+    # Platforms which do not suport PIC and -DPIC is meaningless\n+    # on them:\n+    *djgpp*)\n+      ac_cv_prog_cc_pic=\n+      ;;\n+    *)\n+      ac_cv_prog_cc_pic=\"$ac_cv_prog_cc_pic -DPIC\"\n+      ;;\n+esac\n \n \n # Figure out \"hidden\" C++ library dependencies from verbose"}, {"sha": "dd46e0cd73b936e64cb95086da86a7fa87a5983a", "filename": "ltcf-gcj.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976b230df964cc16d008db5ad9bd6bed388294bc/ltcf-gcj.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976b230df964cc16d008db5ad9bd6bed388294bc/ltcf-gcj.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-gcj.sh?ref=976b230df964cc16d008db5ad9bd6bed388294bc", "patch": "@@ -546,6 +546,10 @@ fi\n       # we not sure about C++ programs.\n       ac_cv_prog_cc_static=\"$ac_cv_prog_cc_static ${ac_cv_prog_cc_wl}-lC\"\n       ;;\n+    *djgpp*)\n+      # DJGPP does not support shared libraries at all\n+      ac_cv_prog_cc_pic=\n+      ;;\n     cygwin* | mingw* | os2*)\n       # This hack is so that the source file can tell whether it is being\n       # built for inclusion in a dll (and should export symbols for example)."}, {"sha": "2f54843f54dd8eca3b4d04a4699de8822ae91fd2", "filename": "ltconfig", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976b230df964cc16d008db5ad9bd6bed388294bc/ltconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976b230df964cc16d008db5ad9bd6bed388294bc/ltconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltconfig?ref=976b230df964cc16d008db5ad9bd6bed388294bc", "patch": "@@ -1275,7 +1275,7 @@ sysv4)\n   ;;\n esac\n \n-# Handle CRLF in mingw too chain\n+# Handle CRLF in mingw tool chain\n opt_cr=\n case \"$host_os\" in\n mingw*)"}]}