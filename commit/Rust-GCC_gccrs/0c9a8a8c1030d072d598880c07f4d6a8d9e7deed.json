{"sha": "0c9a8a8c1030d072d598880c07f4d6a8d9e7deed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM5YThhOGMxMDMwZDA3MmQ1OTg4ODBjMDdmNGQ2YThkOWU3ZGVlZA==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-04-01T11:50:16Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-04-01T11:50:16Z"}, "message": "fortran : FAIL: gfortran.dg/pr93365.f90 PR94386\n\nFailures of pr93365.f90,  pr93600_1.f90 and pr93600_2.f90.\nChanges made by PR94246 delete and changed code from expr.c\nintroduced by PR93600, the deleted code.  This broke the PR93600\ntest cases.  Restoring the deleted code and leaving the changed\ncode alone allows the cases for PR93600 and PR94246 to pass.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/94386\n\texpr.c (simplify_parameter_variable): Restore code deleted\n\tin PR94246.", "tree": {"sha": "1f7bc576674a0745a538458fa9f49a3dd2b30a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f7bc576674a0745a538458fa9f49a3dd2b30a94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c9a8a8c1030d072d598880c07f4d6a8d9e7deed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c9a8a8c1030d072d598880c07f4d6a8d9e7deed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c9a8a8c1030d072d598880c07f4d6a8d9e7deed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c9a8a8c1030d072d598880c07f4d6a8d9e7deed/comments", "author": null, "committer": null, "parents": [{"sha": "d3ee88fdb4e0f718aaba050a3eb7174b8934a29d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ee88fdb4e0f718aaba050a3eb7174b8934a29d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ee88fdb4e0f718aaba050a3eb7174b8934a29d"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "2539e51861eb0f4b8b05f0f1df7a6ed0da8d88c3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c9a8a8c1030d072d598880c07f4d6a8d9e7deed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c9a8a8c1030d072d598880c07f4d6a8d9e7deed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0c9a8a8c1030d072d598880c07f4d6a8d9e7deed", "patch": "@@ -1,3 +1,9 @@\n+2020-04-01  Mark Eggleston  <mark.eggleston@codethink.com>\n+\n+\tPR fortran/94386\n+\texpr.c (simplify_parameter_variable): Restore code deleted\n+\tin PR94246.\n+\n 2020-03-28  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/94246"}, {"sha": "a9fa03ad153ff8d1bd6f51bfba991548c1cfa002", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 26, "deletions": 7, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c9a8a8c1030d072d598880c07f4d6a8d9e7deed/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c9a8a8c1030d072d598880c07f4d6a8d9e7deed/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=0c9a8a8c1030d072d598880c07f4d6a8d9e7deed", "patch": "@@ -2057,6 +2057,18 @@ simplify_parameter_variable (gfc_expr *p, int type)\n     }\n   gfc_expression_rank (p);\n \n+  /* Is this an inquiry?  */\n+  bool inquiry = false;\n+  gfc_ref* ref = p->ref;\n+  while (ref)\n+    {\n+      if (ref->type == REF_INQUIRY)\n+\tbreak;\n+      ref = ref->next;\n+    }\n+  if (ref && ref->type == REF_INQUIRY)\n+    inquiry = ref->u.i == INQUIRY_LEN || ref->u.i == INQUIRY_KIND;\n+\n   if (gfc_is_size_zero_array (p))\n     {\n       if (p->expr_type == EXPR_ARRAY)\n@@ -2069,15 +2081,22 @@ simplify_parameter_variable (gfc_expr *p, int type)\n       e->value.constructor = NULL;\n       e->shape = gfc_copy_shape (p->shape, p->rank);\n       e->where = p->where;\n-      gfc_replace_expr (p, e);\n-      return true;\n+      /* If %kind and %len are not used then we're done, otherwise\n+\t drop through for simplification.  */\n+      if (!inquiry)\n+\t{\n+\t  gfc_replace_expr (p, e);\n+\t  return true;\n+\t}\n     }\n+  else\n+    {\n+      e = gfc_copy_expr (p->symtree->n.sym->value);\n+      if (e == NULL)\n+\treturn false;\n \n-  e = gfc_copy_expr (p->symtree->n.sym->value);\n-  if (e == NULL)\n-    return false;\n-\n-  e->rank = p->rank;\n+      e->rank = p->rank;\n+    }\n \n   if (e->ts.type == BT_CHARACTER && e->ts.u.cl == NULL)\n     e->ts.u.cl = gfc_new_charlen (gfc_current_ns, p->ts.u.cl);"}]}