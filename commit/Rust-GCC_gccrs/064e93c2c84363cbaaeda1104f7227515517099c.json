{"sha": "064e93c2c84363cbaaeda1104f7227515517099c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY0ZTkzYzJjODQzNjNjYmFhZWRhMTEwNGY3MjI3NTE1NTE3MDk5Yw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-10-08T16:28:49Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-10-08T16:28:49Z"}, "message": "s390.h (TARGET_DEFAULT_BACKCHAIN): New define.\n\n\t* config/s390/s390.h (TARGET_DEFAULT_BACKCHAIN): New define.\n\t(TARGET_DEFAULT): Use symbolic values.\n\t* config/s390/tpf.h (TARGET_DEFAULT_BACKCHAIN): Redefine.\n\t(TARGET_DEFAULT): Use symbolic values.\n\t* config/s390/s390.c (s390_backchain_string): Initialize to\n\tTARGET_DEFAULT_BACKCHAIN.\n\nFrom-SVN: r88763", "tree": {"sha": "6ece29e660bcae9e7a8a1e374941a61689b5fe63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ece29e660bcae9e7a8a1e374941a61689b5fe63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/064e93c2c84363cbaaeda1104f7227515517099c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/064e93c2c84363cbaaeda1104f7227515517099c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/064e93c2c84363cbaaeda1104f7227515517099c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/064e93c2c84363cbaaeda1104f7227515517099c/comments", "author": null, "committer": null, "parents": [{"sha": "4d9ef6a988269beda1b4ca2ea04e043288d2039e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d9ef6a988269beda1b4ca2ea04e043288d2039e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d9ef6a988269beda1b4ca2ea04e043288d2039e"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "4c4dda6b81aab38a16c8bffe10673b9a53d03b94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/064e93c2c84363cbaaeda1104f7227515517099c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/064e93c2c84363cbaaeda1104f7227515517099c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=064e93c2c84363cbaaeda1104f7227515517099c", "patch": "@@ -1,3 +1,12 @@\n+2004-10-08  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.h (TARGET_DEFAULT_BACKCHAIN): New define.\n+\t(TARGET_DEFAULT): Use symbolic values.\n+\t* config/s390/tpf.h (TARGET_DEFAULT_BACKCHAIN): Redefine.\n+\t(TARGET_DEFAULT): Use symbolic values.\n+\t* config/s390/s390.c (s390_backchain_string): Initialize to\n+\tTARGET_DEFAULT_BACKCHAIN.\n+\n 2004-10-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (expand_builtin_mempcpy): Move tree handling code to"}, {"sha": "c2fb505d12d9555821d1cac2371ac6699c311930", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/064e93c2c84363cbaaeda1104f7227515517099c/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/064e93c2c84363cbaaeda1104f7227515517099c/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=064e93c2c84363cbaaeda1104f7227515517099c", "patch": "@@ -195,9 +195,9 @@ enum processor_flags s390_arch_flags;\n const char *s390_tune_string;\t\t/* for -mtune=<xxx> */\n const char *s390_arch_string;\t\t/* for -march=<xxx> */\n \n-/* String to specify backchain mode.  */\n-const char *s390_backchain_string = \"\"; /* \"\" no-backchain ,\"1\" backchain,\n-\t\t\t\t\t   \"2\" kernel-backchain */\n+/* String to specify backchain mode: \n+   \"\" no-backchain, \"1\" backchain, \"2\" kernel-backchain.  */\n+const char *s390_backchain_string = TARGET_DEFAULT_BACKCHAIN;\n \n const char *s390_warn_framesize_string;\n const char *s390_warn_dynamicstack_string;"}, {"sha": "11b6d84ab6d5296e053346b8f1f78547bd79503b", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/064e93c2c84363cbaaeda1104f7227515517099c/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/064e93c2c84363cbaaeda1104f7227515517099c/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=064e93c2c84363cbaaeda1104f7227515517099c", "patch": "@@ -126,11 +126,13 @@ extern int target_flags;\n #define TARGET_IEEE_FLOAT          1\n \n #ifdef DEFAULT_TARGET_64BIT\n-#define TARGET_DEFAULT             0x31\n+#define TARGET_DEFAULT             (MASK_64BIT | MASK_ZARCH | MASK_HARD_FLOAT)\n #else\n-#define TARGET_DEFAULT             0x1\n+#define TARGET_DEFAULT             MASK_HARD_FLOAT\n #endif\n \n+#define TARGET_DEFAULT_BACKCHAIN \"\"\n+\n #define TARGET_SWITCHES                                                  \\\n { { \"hard-float\",      1, N_(\"Use hardware fp\")},                        \\\n   { \"soft-float\",     -1, N_(\"Don't use hardware fp\")},                  \\"}, {"sha": "e6a016a7771a4bf4ece3e2f3fa4c9cf2e6a316bb", "filename": "gcc/config/s390/tpf.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/064e93c2c84363cbaaeda1104f7227515517099c/gcc%2Fconfig%2Fs390%2Ftpf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/064e93c2c84363cbaaeda1104f7227515517099c/gcc%2Fconfig%2Fs390%2Ftpf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Ftpf.h?ref=064e93c2c84363cbaaeda1104f7227515517099c", "patch": "@@ -54,9 +54,13 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #undef STACK_POINTER_OFFSET\n #define STACK_POINTER_OFFSET \t\t448\n \n-/* When building for TPF, set a generic default target that is 64 bits.  */\n+/* When building for TPF, set a generic default target that is 64 bits.\n+   Also, enable TPF profiling support and the standard backchain by default.  */\n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT             0xb3\n+#define TARGET_DEFAULT\t\t(MASK_64BIT | MASK_ZARCH | MASK_HARD_FLOAT \\\n+\t\t\t\t | MASK_TPF_PROFILING)\n+#undef TARGET_DEFAULT_BACKCHAIN\n+#define TARGET_DEFAULT_BACKCHAIN \"1\"\n \n /* Exception handling.  */\n "}]}