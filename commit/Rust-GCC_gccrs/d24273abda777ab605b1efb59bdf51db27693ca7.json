{"sha": "d24273abda777ab605b1efb59bdf51db27693ca7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI0MjczYWJkYTc3N2FiNjA1YjFlZmI1OWJkZjUxZGIyNzY5M2NhNw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-05-13T20:11:02Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-05-13T20:11:02Z"}, "message": "2003-05-13  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/nio/CharViewBufferImpl.java\n\t(CharViewBufferImpl): Fixed super constructor call, initialize offset.\n\t(get): Shift bits to the right direction.\n\t(put): Likewise.\n\t* gnu/java/nio/DoubleViewBufferImpl.java\n\t(DoubleViewBufferImpl): Fixed super constructor call, initialize offset.\n\t(get): Shift bits to the right direction.\n\t(put): Likewise.\n\t* gnu/java/nio/FloatViewBufferImpl.java\n\t(FloatViewBufferImpl): Fixed super constructor call, initialize offset.\n\t(get): Shift bits to the right direction.\n\t(put): Likewise.\n\t* gnu/java/nio/IntViewBufferImpl.java\n\t(IntViewBufferImpl): Fixed super constructor call, initialize offset.\n\t(get): Shift bits to the right direction.\n\t(put): Likewise.\n\t* gnu/java/nio/LongViewBufferImpl.java\n\t(LongViewBufferImpl): Fixed super constructor call, initialize offset.\n\t(get): Shift bits to the right direction.\n\t(put): Likewise.\n\t* gnu/java/nio/ShortViewBufferImpl.java\n\t(ShortViewBufferImpl): Fixed super constructor call, initialize offset.\n\t(get): Shift bits to the right direction.\n\t(put): Likewise.\n\nFrom-SVN: r66780", "tree": {"sha": "d92a6527783b0b07c57de681259c0e812ace4cfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d92a6527783b0b07c57de681259c0e812ace4cfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d24273abda777ab605b1efb59bdf51db27693ca7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24273abda777ab605b1efb59bdf51db27693ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d24273abda777ab605b1efb59bdf51db27693ca7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24273abda777ab605b1efb59bdf51db27693ca7/comments", "author": null, "committer": null, "parents": [{"sha": "03307888f71f81829bc96f569b927a825e5ab2f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03307888f71f81829bc96f569b927a825e5ab2f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03307888f71f81829bc96f569b927a825e5ab2f4"}], "stats": {"total": 99, "additions": 69, "deletions": 30}, "files": [{"sha": "1135ea7995b8936c304e94b8d22e615a609f4883", "filename": "libjava/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d24273abda777ab605b1efb59bdf51db27693ca7", "patch": "@@ -1,3 +1,30 @@\n+2003-05-13  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/nio/CharViewBufferImpl.java\n+\t(CharViewBufferImpl): Fixed super constructor call, initialize offset.\n+\t(get): Shift bits to the right direction.\n+\t(put): Likewise.\n+\t* gnu/java/nio/DoubleViewBufferImpl.java\n+\t(DoubleViewBufferImpl): Fixed super constructor call, initialize offset.\n+\t(get): Shift bits to the right direction.\n+\t(put): Likewise.\n+\t* gnu/java/nio/FloatViewBufferImpl.java\n+\t(FloatViewBufferImpl): Fixed super constructor call, initialize offset.\n+\t(get): Shift bits to the right direction.\n+\t(put): Likewise.\n+\t* gnu/java/nio/IntViewBufferImpl.java\n+\t(IntViewBufferImpl): Fixed super constructor call, initialize offset.\n+\t(get): Shift bits to the right direction.\n+\t(put): Likewise.\n+\t* gnu/java/nio/LongViewBufferImpl.java\n+\t(LongViewBufferImpl): Fixed super constructor call, initialize offset.\n+\t(get): Shift bits to the right direction.\n+\t(put): Likewise.\n+\t* gnu/java/nio/ShortViewBufferImpl.java\n+\t(ShortViewBufferImpl): Fixed super constructor call, initialize offset.\n+\t(get): Shift bits to the right direction.\n+\t(put): Likewise.\n+\n 2003-05-13  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/nio/natDirectByteBufferImpl.cc"}, {"sha": "7280de50904a25487adff76b794b1f0052cb461f", "filename": "libjava/gnu/java/nio/CharViewBufferImpl.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FCharViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FCharViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FCharViewBufferImpl.java?ref=d24273abda777ab605b1efb59bdf51db27693ca7", "patch": "@@ -62,34 +62,36 @@ public CharViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n                                int limit, int position, int mark,\n                                boolean readOnly)\n   {\n-    super (limit, limit, offset, position);\n+    super (limit >> 1, limit >> 1, position >> 1, mark >> 1);\n     this.bb = bb;\n+    this.offset = offset;\n     this.readOnly = readOnly;\n     // FIXME: What if this is called from CharViewBufferImpl and ByteBuffer has changed its endianess ?\n     this.endian = bb.order ();\n   }\n \n   public char get ()\n   {\n-    char result = bb.getChar ((position () >> 1) + offset);\n+    char result = bb.getChar ((position () << 1) + offset);\n     position (position () + 1);\n     return result;\n   }\n \n   public char get (int index)\n   {\n-    return bb.getChar ((index >> 1) + offset);\n+    return bb.getChar ((index << 1) + offset);\n   }\n \n   public CharBuffer put (char value)\n   {\n-    bb.putChar ((position () >> 1) + offset, value);\n+    bb.putChar ((position () << 1) + offset, value);\n+    position (position () + 1);\n     return this;\n   }\n   \n   public CharBuffer put (int index, char value)\n   {\n-    bb.putChar ((index >> 1) + offset, value);\n+    bb.putChar ((index << 1) + offset, value);\n     return this;\n   }\n "}, {"sha": "d9e1b1b6179db737f224e84de16e0819b4713bc6", "filename": "libjava/gnu/java/nio/DoubleViewBufferImpl.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FDoubleViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FDoubleViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FDoubleViewBufferImpl.java?ref=d24273abda777ab605b1efb59bdf51db27693ca7", "patch": "@@ -62,34 +62,36 @@ public DoubleViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n                                int limit, int position, int mark,\n                                boolean readOnly)\n   {\n-    super (limit, limit, offset, position);\n+    super (limit >> 3, limit >> 3, position >> 3, mark >> 3);\n     this.bb = bb;\n+    this.offset = offset;\n     this.readOnly = readOnly;\n     // FIXME: What if this is called from DoubleViewBufferImpl and ByteBuffer has changed its endianess ?\n     this.endian = bb.order ();\n   }\n \n   public double get ()\n   {\n-    double result = bb.getDouble ((position () >> 3) + offset);\n+    double result = bb.getDouble ((position () << 3) + offset);\n     position (position () + 1);\n     return result;\n   }\n \n   public double get (int index)\n   {\n-    return bb.getDouble ((index >> 3) + offset);\n+    return bb.getDouble ((index << 3) + offset);\n   }\n \n   public DoubleBuffer put (double value)\n   {\n-    bb.putDouble ((position () >> 3) + offset, value);\n+    bb.putDouble ((position () << 3) + offset, value);\n+    position (position () + 1);\n     return this;\n   }\n   \n   public DoubleBuffer put (int index, double value)\n   {\n-    bb.putDouble ((index >> 3) + offset, value);\n+    bb.putDouble ((index << 3) + offset, value);\n     return this;\n   }\n "}, {"sha": "946120341a83d1aa3df2afece53428f64cc263da", "filename": "libjava/gnu/java/nio/FloatViewBufferImpl.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FFloatViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FFloatViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FFloatViewBufferImpl.java?ref=d24273abda777ab605b1efb59bdf51db27693ca7", "patch": "@@ -62,34 +62,36 @@ public FloatViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n                                int limit, int position, int mark,\n                                boolean readOnly)\n   {\n-    super (limit, limit, offset, position);\n+    super (limit >> 2, limit >> 2, position >> 2, mark >> 2);\n     this.bb = bb;\n+    this.offset = offset;\n     this.readOnly = readOnly;\n     // FIXME: What if this is called from FloatViewBufferImpl and ByteBuffer has changed its endianess ?\n     this.endian = bb.order ();\n   }\n \n   public float get ()\n   {\n-    float result = bb.getFloat ((position () >> 2) + offset);\n+    float result = bb.getFloat ((position () << 2) + offset);\n     position (position () + 1);\n     return result;\n   }\n \n   public float get (int index)\n   {\n-    return bb.getFloat ((index >> 2) + offset);\n+    return bb.getFloat ((index << 2) + offset);\n   }\n \n   public FloatBuffer put (float value)\n   {\n-    bb.putFloat ((position () >> 2) + offset, value);\n+    bb.putFloat ((position () << 2) + offset, value);\n+    position (position () + 1);\n     return this;\n   }\n   \n   public FloatBuffer put (int index, float value)\n   {\n-    bb.putFloat ((index >> 2) + offset, value);\n+    bb.putFloat ((index << 2) + offset, value);\n     return this;\n   }\n "}, {"sha": "d049eb3f55e1c60e69ecee0e6058a0a7525552b4", "filename": "libjava/gnu/java/nio/IntViewBufferImpl.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FIntViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FIntViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FIntViewBufferImpl.java?ref=d24273abda777ab605b1efb59bdf51db27693ca7", "patch": "@@ -62,34 +62,36 @@ public IntViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n                                int limit, int position, int mark,\n                                boolean readOnly)\n   {\n-    super (limit, limit, offset, position);\n+    super (limit >> 2, limit >> 2, position >> 2, mark >> 2);\n     this.bb = bb;\n+    this.offset = offset;\n     this.readOnly = readOnly;\n     // FIXME: What if this is called from IntViewBufferImpl and ByteBuffer has changed its endianess ?\n     this.endian = bb.order ();\n   }\n \n   public int get ()\n   {\n-    int result = bb.getInt ((position () >> 2) + offset);\n+    int result = bb.getInt ((position () << 2) + offset);\n     position (position () + 1);\n     return result;\n   }\n \n   public int get (int index)\n   {\n-    return bb.getInt ((index >> 2) + offset);\n+    return bb.getInt ((index << 2) + offset);\n   }\n \n   public IntBuffer put (int value)\n   {\n-    bb.putInt ((position () >> 2) + offset, value);\n+    bb.putInt ((position () << 2) + offset, value);\n+    position (position () + 1);\n     return this;\n   }\n   \n   public IntBuffer put (int index, int value)\n   {\n-    bb.putInt ((index >> 2) + offset, value);\n+    bb.putInt ((index << 2) + offset, value);\n     return this;\n   }\n "}, {"sha": "3742fca1d0b6460a2ac87ef84b1d662cbc8c0a35", "filename": "libjava/gnu/java/nio/LongViewBufferImpl.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FLongViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FLongViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FLongViewBufferImpl.java?ref=d24273abda777ab605b1efb59bdf51db27693ca7", "patch": "@@ -62,34 +62,36 @@ public LongViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n                                int limit, int position, int mark,\n                                boolean readOnly)\n   {\n-    super (limit, limit, offset, position);\n+    super (limit >> 3, limit >> 3, position >> 3, mark >> 3);\n     this.bb = bb;\n+    this.offset = offset;\n     this.readOnly = readOnly;\n     // FIXME: What if this is called from LongViewBufferImpl and ByteBuffer has changed its endianess ?\n     this.endian = bb.order ();\n   }\n \n   public long get ()\n   {\n-    long result = bb.getLong ((position () >> 3) + offset);\n+    long result = bb.getLong ((position () << 3) + offset);\n     position (position () + 1);\n     return result;\n   }\n \n   public long get (int index)\n   {\n-    return bb.getLong ((index >> 3) + offset);\n+    return bb.getLong ((index << 3) + offset);\n   }\n \n   public LongBuffer put (long value)\n   {\n-    bb.putLong ((position () >> 3) + offset, value);\n+    bb.putLong ((position () << 3) + offset, value);\n+    position (position () + 1);\n     return this;\n   }\n   \n   public LongBuffer put (int index, long value)\n   {\n-    bb.putLong ((index >> 3) + offset, value);\n+    bb.putLong ((index << 3) + offset, value);\n     return this;\n   }\n "}, {"sha": "e7853bcfeb6e18514bdcfcc2667e9ebe6a73a543", "filename": "libjava/gnu/java/nio/ShortViewBufferImpl.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FShortViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d24273abda777ab605b1efb59bdf51db27693ca7/libjava%2Fgnu%2Fjava%2Fnio%2FShortViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FShortViewBufferImpl.java?ref=d24273abda777ab605b1efb59bdf51db27693ca7", "patch": "@@ -62,34 +62,36 @@ public ShortViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n                                int limit, int position, int mark,\n                                boolean readOnly)\n   {\n-    super (limit, limit, offset, position);\n+    super (limit >> 1, limit >> 1, position >> 1, mark >> 1);\n     this.bb = bb;\n+    this.offset = offset;\n     this.readOnly = readOnly;\n     // FIXME: What if this is called from ShortViewBufferImpl and ByteBuffer has changed its endianess ?\n     this.endian = bb.order ();\n   }\n \n   public short get ()\n   {\n-    short result = bb.getShort ((position () >> 1) + offset);\n+    short result = bb.getShort ((position () << 1) + offset);\n     position (position () + 1);\n     return result;\n   }\n \n   public short get (int index)\n   {\n-    return bb.getShort ((index >> 1) + offset);\n+    return bb.getShort ((index << 1) + offset);\n   }\n \n   public ShortBuffer put (short value)\n   {\n-    bb.putShort ((position () >> 1) + offset, value);\n+    bb.putShort ((position () << 1) + offset, value);\n+    position (position () + 1);\n     return this;\n   }\n   \n   public ShortBuffer put (int index, short value)\n   {\n-    bb.putShort ((index >> 1) + offset, value);\n+    bb.putShort ((index << 1) + offset, value);\n     return this;\n   }\n "}]}