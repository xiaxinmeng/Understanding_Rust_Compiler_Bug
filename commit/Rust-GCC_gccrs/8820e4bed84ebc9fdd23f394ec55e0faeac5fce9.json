{"sha": "8820e4bed84ebc9fdd23f394ec55e0faeac5fce9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgyMGU0YmVkODRlYmM5ZmRkMjNmMzk0ZWM1NWUwZmFlYWM1ZmNlOQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2004-09-29T19:46:18Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2004-09-29T19:46:18Z"}, "message": "cris.md (moverside, movemside): With MEM, make sure the address is (plus reg mem).\n\n\t* config/cris/cris.md (moverside, movemside): With MEM, make sure\n\tthe address is (plus reg mem).\n\nFrom-SVN: r88298", "tree": {"sha": "cc5465ee34f8f7a14ece2536147cd1434557e968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc5465ee34f8f7a14ece2536147cd1434557e968"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8820e4bed84ebc9fdd23f394ec55e0faeac5fce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8820e4bed84ebc9fdd23f394ec55e0faeac5fce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8820e4bed84ebc9fdd23f394ec55e0faeac5fce9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8820e4bed84ebc9fdd23f394ec55e0faeac5fce9/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8dc36d6bcf43e68ed48335ee16f9590139917bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8dc36d6bcf43e68ed48335ee16f9590139917bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8dc36d6bcf43e68ed48335ee16f9590139917bd"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "7b1103cc6e3a67ffe5d2e6b9b84e8321871b7c49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8820e4bed84ebc9fdd23f394ec55e0faeac5fce9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8820e4bed84ebc9fdd23f394ec55e0faeac5fce9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8820e4bed84ebc9fdd23f394ec55e0faeac5fce9", "patch": "@@ -1,3 +1,8 @@\n+2004-09-29  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* config/cris/cris.md (moverside, movemside): With MEM, make sure\n+\tthe address is (plus reg mem).\n+\n 2004-09-29  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/linux64.h (PROCESSOR_DEFAULT): Define."}, {"sha": "1e925dbf4baf159f7d49a363f456c3cd83398c65", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8820e4bed84ebc9fdd23f394ec55e0faeac5fce9/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8820e4bed84ebc9fdd23f394ec55e0faeac5fce9/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=8820e4bed84ebc9fdd23f394ec55e0faeac5fce9", "patch": "@@ -4904,9 +4904,10 @@\n   rtx otherop\n     = rtx_equal_p (operands[2], operands[0]) ? operands[3] : operands[2];\n \n-  /* Make sure we have canonical RTX so we match the insn pattern - a\n-     register or MULT in the first operand, not a constant.  */\n-  if (CONSTANT_P (otherop))\n+  /* Make sure we have canonical RTX so we match the insn pattern -\n+     not a constant in the first operand.  We also require the order\n+     (plus reg mem) to match the final pattern.  */\n+  if (CONSTANT_P (otherop) || MEM_P (otherop))\n     {\n       operands[7] = operands[1];\n       operands[8] = otherop;\n@@ -4954,9 +4955,10 @@\n   rtx otherop\n     = rtx_equal_p (operands[2], operands[0]) ? operands[3] : operands[2];\n \n-  /* Make sure we have canonical RTX so we match the insn pattern - a\n-     register or MULT in the first operand, not a constant.  */\n-  if (CONSTANT_P (otherop))\n+  /* Make sure we have canonical RTX so we match the insn pattern -\n+     not a constant in the first operand.  We also require the order\n+     (plus reg mem) to match the final pattern.  */\n+  if (CONSTANT_P (otherop) || MEM_P (otherop))\n     {\n       operands[7] = operands[1];\n       operands[8] = otherop;"}]}