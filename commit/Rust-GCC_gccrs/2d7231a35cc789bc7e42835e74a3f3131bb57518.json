{"sha": "2d7231a35cc789bc7e42835e74a3f3131bb57518", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ3MjMxYTM1Y2M3ODliYzdlNDI4MzVlNzRhM2YzMTMxYmI1NzUxOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-08-12T08:07:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-08-12T08:07:57Z"}, "message": "re PR c++/36688 (Incorrect struct assignments with nested const initializers)\n\n\tPR c++/36688\n\t* gimplify.c (gimplify_modify_expr_rhs): Test TREE_READONLY\n\ton the VAR_DECL instead of TYPE_READONLY on its type.\n\n\t* g++.dg/init/const6.C: New test.\n\nFrom-SVN: r139004", "tree": {"sha": "27fa7e139702c2af55d394f06a68e220c7210e1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27fa7e139702c2af55d394f06a68e220c7210e1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d7231a35cc789bc7e42835e74a3f3131bb57518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7231a35cc789bc7e42835e74a3f3131bb57518", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7231a35cc789bc7e42835e74a3f3131bb57518", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7231a35cc789bc7e42835e74a3f3131bb57518/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be349cac63fd9133c01354441a25ac1558e5c9c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be349cac63fd9133c01354441a25ac1558e5c9c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be349cac63fd9133c01354441a25ac1558e5c9c1"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "be9020ef9c8d6b18bd3e286702a63c585ebc67cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7231a35cc789bc7e42835e74a3f3131bb57518/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7231a35cc789bc7e42835e74a3f3131bb57518/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d7231a35cc789bc7e42835e74a3f3131bb57518", "patch": "@@ -1,3 +1,9 @@\n+2008-08-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/36688\n+\t* gimplify.c (gimplify_modify_expr_rhs): Test TREE_READONLY\n+\ton the VAR_DECL instead of TYPE_READONLY on its type.\n+\n 2008-08-12  Ira Rosen  <irar@il.ibm.com>\n \n \t* tree-vectorizer.c: Depend on langhooks.h."}, {"sha": "753aa591e405f792f2c6a0a6a207f2255b9b4047", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7231a35cc789bc7e42835e74a3f3131bb57518/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7231a35cc789bc7e42835e74a3f3131bb57518/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=2d7231a35cc789bc7e42835e74a3f3131bb57518", "patch": "@@ -3913,7 +3913,7 @@ gimplify_modify_expr_rhs (tree *expr_p, tree *from_p, tree *to_p,\n \t/* If we're assigning from a constant constructor, move the\n \t   constructor expression to the RHS of the MODIFY_EXPR.  */\n \tif (DECL_INITIAL (*from_p)\n-\t    && TYPE_READONLY (TREE_TYPE (*from_p))\n+\t    && TREE_READONLY (*from_p)\n \t    && !TREE_THIS_VOLATILE (*from_p)\n \t    && TREE_CODE (DECL_INITIAL (*from_p)) == CONSTRUCTOR)\n \t  {"}, {"sha": "d6f281122e3e57480bb4182386f093fdd3a03494", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7231a35cc789bc7e42835e74a3f3131bb57518/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7231a35cc789bc7e42835e74a3f3131bb57518/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d7231a35cc789bc7e42835e74a3f3131bb57518", "patch": "@@ -1,3 +1,8 @@\n+2008-08-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/36688\n+\t* g++.dg/init/const6.C: New test.\n+\n 2008-08-12  Ira Rosen  <irar@il.ibm.com>\n \n \t* gcc.dg/vect/vect-multitypes-12.c: New."}, {"sha": "f34196931a1855de9aadf1ee16775a0b677afece", "filename": "gcc/testsuite/g++.dg/init/const6.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7231a35cc789bc7e42835e74a3f3131bb57518/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7231a35cc789bc7e42835e74a3f3131bb57518/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fconst6.C?ref=2d7231a35cc789bc7e42835e74a3f3131bb57518", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/36688\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+struct S\n+{\n+  long long a;\n+  long long b;\n+  long long c;\n+};\n+\n+struct T\n+{\n+  S g;\n+  long long h[12];\n+};\n+\n+static const S s = { 1, 2, 3 };\n+static const T t = { s, 0 };\n+\n+int\n+main ()\n+{\n+  T x = t;\n+  if (__builtin_memcmp (&x, &t, sizeof (T)))\n+    __builtin_abort ();\n+}"}]}