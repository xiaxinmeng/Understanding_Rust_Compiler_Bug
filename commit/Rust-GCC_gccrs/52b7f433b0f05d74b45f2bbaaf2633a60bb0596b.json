{"sha": "52b7f433b0f05d74b45f2bbaaf2633a60bb0596b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJiN2Y0MzNiMGYwNWQ3NGI0NWYyYmJhYWYyNjMzYTYwYmIwNTk2Yg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-07-07T19:19:07Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-07-07T19:19:07Z"}, "message": "* friend.c: Convert to ISO C90 prototypes.\n\nFrom-SVN: r69052", "tree": {"sha": "783fc8ce42cf9163774d544414cb2b5686dc302e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/783fc8ce42cf9163774d544414cb2b5686dc302e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52b7f433b0f05d74b45f2bbaaf2633a60bb0596b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52b7f433b0f05d74b45f2bbaaf2633a60bb0596b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52b7f433b0f05d74b45f2bbaaf2633a60bb0596b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52b7f433b0f05d74b45f2bbaaf2633a60bb0596b/comments", "author": null, "committer": null, "parents": [{"sha": "b275810aed9683b353e3af23e18915ae0e6748c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b275810aed9683b353e3af23e18915ae0e6748c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b275810aed9683b353e3af23e18915ae0e6748c7"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "8d149a27c4bdb7ee249f5ef1c0087c5cfb0fdbf7", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52b7f433b0f05d74b45f2bbaaf2633a60bb0596b/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52b7f433b0f05d74b45f2bbaaf2633a60bb0596b/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=52b7f433b0f05d74b45f2bbaaf2633a60bb0596b", "patch": "@@ -36,8 +36,7 @@ Boston, MA 02111-1307, USA.  */\n /* Returns nonzero if SUPPLICANT is a friend of TYPE.  */\n \n int\n-is_friend (type, supplicant)\n-     tree type, supplicant;\n+is_friend (tree type, tree supplicant)\n {\n   int declp;\n   register tree list;\n@@ -131,8 +130,7 @@ is_friend (type, supplicant)\n    DECL is the FUNCTION_DECL of the friend being added.  */\n \n void\n-add_friend (type, decl)\n-     tree type, decl;\n+add_friend (tree type, tree decl)\n {\n   tree typedecl;\n   tree list;\n@@ -194,8 +192,7 @@ add_friend (type, decl)\n    be in use at the same time!  */\n \n void\n-make_friend_class (type, friend_type)\n-     tree type, friend_type;\n+make_friend_class (tree type, tree friend_type)\n {\n   tree classes;\n   int is_template_friend;\n@@ -324,12 +321,9 @@ make_friend_class (type, friend_type)\n    pointed to by `this'.  */\n \n tree\n-do_friend (ctype, declarator, decl, parmdecls, attrlist,\n-\t   flags, quals, funcdef_flag)\n-     tree ctype, declarator, decl, parmdecls, attrlist;\n-     enum overload_flags flags;\n-     tree quals;\n-     int funcdef_flag;\n+do_friend (tree ctype, tree declarator, tree decl, tree parmdecls,\n+\t   tree attrlist, enum overload_flags flags, tree quals,\n+\t   int funcdef_flag)\n {\n   int is_friend_template = 0;\n "}]}