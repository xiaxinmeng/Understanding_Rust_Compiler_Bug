{"sha": "742f0efebe4b177253b9df555af6a59ea0c17eb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQyZjBlZmViZTRiMTc3MjUzYjlkZjU1NWFmNmE1OWVhMGMxN2ViOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-03-21T07:08:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-03-21T07:08:02Z"}, "message": "re PR c++/7050 (g++ segfaults on: (i ? get_string() : throw))\n\n        PR c++/7050\n        * expr.c (store_expr): Don't attempt to store void-typed trees,\n        just evaluate them for side effects.\n\nFrom-SVN: r64646", "tree": {"sha": "27e2366b724a6c36b540bd88f4ceccdcc1330023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e2366b724a6c36b540bd88f4ceccdcc1330023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/742f0efebe4b177253b9df555af6a59ea0c17eb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742f0efebe4b177253b9df555af6a59ea0c17eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/742f0efebe4b177253b9df555af6a59ea0c17eb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742f0efebe4b177253b9df555af6a59ea0c17eb8/comments", "author": null, "committer": null, "parents": [{"sha": "963142fcd554cf2ccfab0d85062164fb0da3fb84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963142fcd554cf2ccfab0d85062164fb0da3fb84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/963142fcd554cf2ccfab0d85062164fb0da3fb84"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "4f494267e4b72fd259d10eaa4cdf441e840ad664", "filename": "gcc/testsuite/g++.dg/eh/cond1.C", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/742f0efebe4b177253b9df555af6a59ea0c17eb8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcond1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/742f0efebe4b177253b9df555af6a59ea0c17eb8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcond1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcond1.C?ref=742f0efebe4b177253b9df555af6a59ea0c17eb8", "patch": "@@ -0,0 +1,64 @@\n+// PR c++/7050\n+// { dg-do run }\n+\n+extern \"C\" void abort(void);\n+\n+#define CI(stmt) try { stmt; abort(); } catch (int) { }\n+\n+struct has_destructor\n+{\n+    ~has_destructor() { }\n+};\n+\n+struct no_destructor\n+{\n+};\n+\n+int PI(int& i) { return i++; }\n+\n+int main(int argc, char *argv[])\n+{\n+    (argc+1 ? has_destructor() : throw 0);\n+    CI((argc+1 ? throw 0 : has_destructor()));\n+    CI((0 ? has_destructor() : throw 0));\n+    CI((1 ? throw 0 : has_destructor()));\n+    (0 ? throw 0 : has_destructor());\n+    (1 ? has_destructor() : throw 0);\n+\n+    (argc+1 ? no_destructor() : throw 0);\n+    CI((argc+1 ? throw 0 : no_destructor()));\n+    CI((0 ? no_destructor() : throw 0));\n+    CI((1 ? throw 0 : no_destructor()));\n+    (0 ? throw 0 : no_destructor());\n+    (1 ? no_destructor() : throw 0);\n+\n+    int i = 1;\n+    CI(throw PI(i));\n+    if (i != 2) abort();\n+\n+    (1 ? 0 : throw PI(i));\n+    if (i != 2) abort();\n+\n+    CI(0 ? 0 : throw PI(i));\n+    if (i != 3) abort();\n+\n+    CI(0 ? has_destructor() : throw PI(i));\n+    if (i != 4) abort();\n+    (argc+1 ? has_destructor() : throw PI(i));\n+    if (i != 4) abort();\n+\n+    i = 1;\n+    CI(throw i++);\n+    if (i != 2) abort();\n+\n+    (1 ? 0 : throw i++);\n+    if (i != 2) abort();\n+\n+    CI(0 ? 0 : throw i++);\n+    if (i != 3) abort();\n+\n+    CI(0 ? has_destructor() : throw i++);\n+    if (i != 4) abort();\n+    (argc+1 ? has_destructor() : throw i++);\n+    if (i != 4) abort();\n+}"}]}