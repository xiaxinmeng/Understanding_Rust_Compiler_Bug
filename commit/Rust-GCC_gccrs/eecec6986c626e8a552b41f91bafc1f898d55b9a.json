{"sha": "eecec6986c626e8a552b41f91bafc1f898d55b9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVjZWM2OTg2YzYyNmU4YTU1MmI0MWY5MWJhZmMxZjg5OGQ1NWI5YQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-05-09T21:26:58Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-05-09T21:26:58Z"}, "message": "re PR c/15007 (crash when including precompiled header with -include)\n\n\tPR 15007\n\t* c-decl.c (current_file_decl): Rename to all_translation_units,\n\tadjust comment.\n\t(pop_scope): If popping file_scope, construct a\n\tTRANSLATION_UNIT_DECL and make it the context of all the\n\tsymbols in the scope.\n\t(push_file_scope): Don't construct a TRANSLATION_UNIT_DECL here.\n\t(pushdecl): Clarify comment.  Do not set DECL_CONTEXT of\n\tanything to current_file_decl.\n\t(pushdecl_top_level): Likewise.\n\t(store_parm_decls_newstyle): Adjust check for nested function.\n\t(c_write_global_declarations): Update for renamed variable.\n\nFrom-SVN: r81655", "tree": {"sha": "a97651f0372e55a005965094df6f8f2eba9540d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a97651f0372e55a005965094df6f8f2eba9540d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eecec6986c626e8a552b41f91bafc1f898d55b9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eecec6986c626e8a552b41f91bafc1f898d55b9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eecec6986c626e8a552b41f91bafc1f898d55b9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eecec6986c626e8a552b41f91bafc1f898d55b9a/comments", "author": null, "committer": null, "parents": [{"sha": "eb01299a99cd979f866e896f7deeedcc144db927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb01299a99cd979f866e896f7deeedcc144db927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb01299a99cd979f866e896f7deeedcc144db927"}], "stats": {"total": 55, "additions": 37, "deletions": 18}, "files": [{"sha": "2bf06506f5106ebb68e5771d7dd20df78794db35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecec6986c626e8a552b41f91bafc1f898d55b9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecec6986c626e8a552b41f91bafc1f898d55b9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eecec6986c626e8a552b41f91bafc1f898d55b9a", "patch": "@@ -1,3 +1,18 @@\n+2004-05-09  Zack Weinberg  <zack@codesourcery.com>\n+\n+\tPR 15007\n+\t* c-decl.c (current_file_decl): Rename to all_translation_units,\n+\tadjust comment.\n+\t(pop_scope): If popping file_scope, construct a\n+\tTRANSLATION_UNIT_DECL and make it the context of all the\n+\tsymbols in the scope.\n+\t(push_file_scope): Don't construct a TRANSLATION_UNIT_DECL here.\n+\t(pushdecl): Clarify comment.  Do not set DECL_CONTEXT of\n+\tanything to current_file_decl.\n+\t(pushdecl_top_level): Likewise.\n+\t(store_parm_decls_newstyle): Adjust check for nested function.\n+\t(c_write_global_declarations): Update for renamed variable\n+.\n 2004-05-09  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* config/rs6000/rs6000-protos.h\n@@ -44,7 +59,7 @@\n \tGenerate appropriate parallels for vector arguments\n \tpassed to vararg functions. (function_arg): make the call\n \tto rs6000_mixed_function_arg for vector args as needed.\n-\t\n+\n 2004-05-07  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.c (mips_va_arg): Fix calculation of osize for"}, {"sha": "3889726d492cbcba8c5257856cd415a8cc512da3", "filename": "gcc/c-decl.c", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecec6986c626e8a552b41f91bafc1f898d55b9a/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecec6986c626e8a552b41f91bafc1f898d55b9a/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=eecec6986c626e8a552b41f91bafc1f898d55b9a", "patch": "@@ -108,9 +108,11 @@ static GTY(()) tree c_scope_stmt_stack;\n int c_in_iteration_stmt;\n int c_in_case_stmt;\n \n-/* A DECL for the current file-scope context.  */\n+/* Linked list of TRANSLATION_UNIT_DECLS for the translation units\n+   included in this invocation.  Note that the current translation\n+   unit is not included in this list.  */\n \n-static GTY(()) tree current_file_decl;\n+static GTY(()) tree all_translation_units;\n \n /* A list of decls to be made automatically visible in each file scope.  */\n static GTY(()) tree visible_builtins;\n@@ -649,7 +651,12 @@ pop_scope (void)\n   if (scope->function_body)\n     context = current_function_decl;\n   else if (scope == file_scope)\n-    context = current_file_decl;\n+    {\n+      tree file_decl = build_decl (TRANSLATION_UNIT_DECL, 0, 0);\n+      TREE_CHAIN (file_decl) = all_translation_units;\n+      all_translation_units = file_decl;\n+      context = file_decl;\n+    }\n   else\n     context = block;\n \n@@ -736,6 +743,9 @@ pop_scope (void)\n \t      TREE_CHAIN (p) = BLOCK_VARS (block);\n \t      BLOCK_VARS (block) = p;\n \t    }\n+\t  /* If this is the file scope, must set DECL_CONTEXT on these.  */\n+\t  if (!C_DECL_IN_EXTERNAL_SCOPE (p) && scope == file_scope)\n+\t    DECL_CONTEXT (p) = context;\n \n \t  /* Fall through.  */\n \t  /* Parameters go in DECL_ARGUMENTS, not BLOCK_VARS, and have\n@@ -795,9 +805,6 @@ void\n push_file_scope (void)\n {\n   tree decl;\n-  tree file_decl = build_decl (TRANSLATION_UNIT_DECL, 0, 0);\n-  TREE_CHAIN (file_decl) = current_file_decl;\n-  current_file_decl = file_decl;\n \n   push_scope ();\n   file_scope = current_scope;\n@@ -1796,14 +1803,12 @@ pushdecl (tree x)\n   if (TREE_CODE (x) == FUNCTION_DECL && ! DECL_LANG_SPECIFIC (x))\n     DECL_LANG_SPECIFIC (x) = ggc_alloc_cleared (sizeof (struct lang_decl));\n \n-  /* A local extern declaration for a function doesn't constitute nesting.\n-     A local auto declaration does, since it's a forward decl\n-     for a nested function coming later.  */\n-  if (current_function_decl == NULL\n-      || ((TREE_CODE (x) == FUNCTION_DECL || TREE_CODE (x) == VAR_DECL)\n-\t  && DECL_INITIAL (x) == 0 && DECL_EXTERNAL (x)))\n-    DECL_CONTEXT (x) = current_file_decl;\n-  else\n+  /* Must set DECL_CONTEXT for everything not at file scope or\n+     DECL_FILE_SCOPE_P won't work.  Local externs don't count\n+     unless they have initializers (which generate code).  */\n+  if (current_function_decl\n+      && ((TREE_CODE (x) != FUNCTION_DECL && TREE_CODE (x) != VAR_DECL)\n+\t  || DECL_INITIAL (x) || !DECL_EXTERNAL (x)))\n     DECL_CONTEXT (x) = current_function_decl;\n \n   /* Anonymous decls are just inserted in the scope.  */\n@@ -1927,7 +1932,6 @@ pushdecl_top_level (tree x)\n   if (I_SYMBOL_BINDING (name))\n     abort ();\n \n-  DECL_CONTEXT (x) = current_file_decl;\n   if (DECL_EXTERNAL (x) || TREE_PUBLIC (x))\n     {\n       C_DECL_IN_EXTERNAL_SCOPE (x) = 1;\n@@ -5825,7 +5829,7 @@ store_parm_decls_newstyle (tree fndecl, tree arg_info)\n      (this happens when a function definition has just an ellipsis in\n      its parameter list).  */\n   else if (warn_traditional && !in_system_header\n-\t   && DECL_CONTEXT (fndecl) == current_file_decl\n+\t   && !current_scope->outer_function\n \t   && ARG_INFO_TYPES (arg_info) != error_mark_node)\n     warning (\"%Jtraditional C rejects ISO C style function definitions\",\n \t     fndecl);\n@@ -6625,7 +6629,7 @@ c_write_global_declarations (void)\n     return;\n \n   /* Process all file scopes in this compilation.  */\n-  for (t = current_file_decl; t; t = TREE_CHAIN (t))\n+  for (t = all_translation_units; t; t = TREE_CHAIN (t))\n     c_write_global_declarations_1 (BLOCK_VARS (DECL_INITIAL (t)));\n \n   /* Now do the same for the externals scope.  */"}]}