{"sha": "2196a8859b66598642fc3e65c96e676888f868ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE5NmE4ODU5YjY2NTk4NjQyZmMzZTY1Yzk2ZTY3Njg4OGY4NjhlZA==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@intel.com", "date": "2014-01-23T09:25:11Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-01-23T09:25:11Z"}, "message": "avx512fintrin.h (_mm512_kmov): New.\n\ngcc/\n\t* config/i386/avx512fintrin.h (_mm512_kmov): New.\n\t* config/i386/i386.c (IX86_BUILTIN_KMOV16): Ditto.\n\t(__builtin_ia32_kmov16): Ditto.\n\t* config/i386/i386.md (UNSPEC_KMOV): New.\n\t(kmovw): Ditto.\n\ntestsuite/gcc/\n\t* gcc.target/i386/avx512f-kmovw-1.c: New.\n\n\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\n\nFrom-SVN: r206958", "tree": {"sha": "a664aa6be63bb5358498b26ff75e163d7e06ca03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a664aa6be63bb5358498b26ff75e163d7e06ca03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2196a8859b66598642fc3e65c96e676888f868ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2196a8859b66598642fc3e65c96e676888f868ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2196a8859b66598642fc3e65c96e676888f868ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2196a8859b66598642fc3e65c96e676888f868ed/comments", "author": null, "committer": null, "parents": [{"sha": "7ecc3eb9e6c61a3f1408a55e22eefa5fd3d08e79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ecc3eb9e6c61a3f1408a55e22eefa5fd3d08e79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ecc3eb9e6c61a3f1408a55e22eefa5fd3d08e79"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "c67c6ff10c65a3f28ec38e8b77a54e5a4092145a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2196a8859b66598642fc3e65c96e676888f868ed", "patch": "@@ -28,6 +28,15 @@\n \tgoing until we reach the size of the line.\n \t* Makefile.in: Add vec.o to OBJS-libcommon\n \n+2014-01-23  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Ilya Tocar     <ilya.tocar@intel.com>\n+\n+\t* config/i386/avx512fintrin.h (_mm512_kmov): New.\n+\t* config/i386/i386.c (IX86_BUILTIN_KMOV16): Ditto.\n+\t(__builtin_ia32_kmov16): Ditto.\n+\t* config/i386/i386.md (UNSPEC_KMOV): New.\n+\t(kmovw): Ditto.\n+\n 2014-01-23  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t* config/i386/avx512fintrin.h (_mm512_loadu_si512): Rename."}, {"sha": "46799470f4f8a67b2fef2d59585eb59383a523e7", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=2196a8859b66598642fc3e65c96e676888f868ed", "patch": "@@ -12688,6 +12688,13 @@ _mm_mask_cmp_ss_mask (__mmask8 __M, __m128 __X, __m128 __Y, const int __P)\n \t\t\t\t\t M,_MM_FROUND_CUR_DIRECTION))\n #endif\n \n+extern __inline __mmask16\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_kmov (__mmask16 __A)\n+{\n+  return __builtin_ia32_kmov16 (__A);\n+}\n+\n #ifdef __DISABLE_AVX512F__\n #undef __DISABLE_AVX512F__\n #pragma GCC pop_options"}, {"sha": "cf7948616f7c872706703f2f27273c17338ffac9", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2196a8859b66598642fc3e65c96e676888f868ed", "patch": "@@ -28376,6 +28376,7 @@ enum ix86_builtins\n   IX86_BUILTIN_KUNPCKBW,\n   IX86_BUILTIN_KXNOR16,\n   IX86_BUILTIN_KXOR16,\n+  IX86_BUILTIN_KMOV16,\n \n   /* Alternate 4 and 8 element gather/scatter for the vectorizer\n      where all operands are 32-byte or 64-byte wide respectively.  */\n@@ -30083,6 +30084,7 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_kunpckhi, \"__builtin_ia32_kunpckhi\", IX86_BUILTIN_KUNPCKBW, UNKNOWN, (int) HI_FTYPE_HI_HI },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_kxnorhi, \"__builtin_ia32_kxnorhi\", IX86_BUILTIN_KXNOR16, UNKNOWN, (int) HI_FTYPE_HI_HI },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_xorhi3, \"__builtin_ia32_kxorhi\", IX86_BUILTIN_KXOR16, UNKNOWN, (int) HI_FTYPE_HI_HI },\n+  { OPTION_MASK_ISA_AVX512F, CODE_FOR_kmovw, \"__builtin_ia32_kmov16\", IX86_BUILTIN_KMOV16, UNKNOWN, (int) HI_FTYPE_HI },\n \n   /* SHA */\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sha1msg1, 0, IX86_BUILTIN_SHA1MSG1, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },"}, {"sha": "ddc3be67c65c87ea09695f3fb223bf0a545b9c4c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=2196a8859b66598642fc3e65c96e676888f868ed", "patch": "@@ -178,6 +178,9 @@\n   ;; For BMI2 support\n   UNSPEC_PDEP\n   UNSPEC_PEXT\n+\n+  ;; For AVX512F support\n+  UNSPEC_KMOV\n ])\n \n (define_c_enum \"unspecv\" [\n@@ -2288,6 +2291,20 @@\n \t   ]\n \t   (const_string \"SI\")))])\n \n+(define_insn \"kmovw\"\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=k,k\")\n+\t(unspec:HI\n+\t  [(match_operand:HI 1 \"nonimmediate_operand\" \"rm,k\")]\n+\t  UNSPEC_KMOV))]\n+  \"!(MEM_P (operands[0]) && MEM_P (operands[1])) && TARGET_AVX512F\"\n+  \"@\n+   kmovw\\t{%k1, %0|%0, %k1}\n+   kmovw\\t{%1, %0|%0, %1}\";\n+  [(set_attr \"mode\" \"HI\")\n+   (set_attr \"type\" \"mskmov\")\n+   (set_attr \"prefix\" \"vex\")])\n+\n+\n (define_insn \"*movhi_internal\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r ,r ,m ,Yk,Yk,rm\")\n \t(match_operand:HI 1 \"general_operand\"      \"r ,rn,rm,rn,rm,Yk,Yk\"))]"}, {"sha": "3204dd683cc15f1e020aaf0329e2ee6ea096d73f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2196a8859b66598642fc3e65c96e676888f868ed", "patch": "@@ -4,8 +4,13 @@\n \t* c-c++-common/cpp/warning-zero-in-literals-1.c: New test file.\n \n 2014-01-23  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Ilya Tocar     <ilya.tocar@intel.com>\n \n-        * gcc.target/i386/avx512f-vmovdqu32-1.c: Fix intrinsic name.\n+\t* gcc.target/i386/avx512f-kmovw-1.c: New.\n+\n+2014-01-23  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\t* gcc.target/i386/avx512f-vmovdqu32-1.c: Fix intrinsic name.\n \t* gcc.target/i386/avx512f-vmovdqu32-2.c: Ditto.\n \t* gcc.target/i386/avx512f-vpcmpd-2.c: Ditto.\n \t* gcc.target/i386/avx512f-vpcmpq-2.c: Ditto."}, {"sha": "c092726a6eda5b451597497d00bd19395a6945c6", "filename": "gcc/testsuite/gcc.target/i386/avx512f-kmovw-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kmovw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2196a8859b66598642fc3e65c96e676888f868ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kmovw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kmovw-1.c?ref=2196a8859b66598642fc3e65c96e676888f868ed", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler \"kmovw\\[ \\\\t\\]+\\[^\\n\\]*%k\\[1-7\\]\" } } */\n+\n+#include <immintrin.h>\n+volatile __mmask16 k1;\n+\n+void\n+avx512f_test ()\n+{\n+  k1 = _mm512_kmov (11);\n+}"}]}