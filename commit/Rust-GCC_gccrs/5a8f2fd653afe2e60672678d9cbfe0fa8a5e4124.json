{"sha": "5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124", "node_id": "C_kwDOANBUbNoAKDVhOGYyZmQ2NTNhZmUyZTYwNjcyNjc4ZDljYmZlMGZhOGE1ZTQxMjQ", "commit": {"author": {"name": "Faisal Abbas", "email": "90.abbasfaisal@gmail.com", "date": "2022-08-23T16:47:59Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-25T11:40:28Z"}, "message": "rust-constexpr.cc: fixes\n- error in handling of NOP_EXPR which results in failure in make check-rust\n- DECL not being marked constant inside finalize_intrinsic_block\n\nSigned-off-by: Faisal Abbas <90.abbasfaisal@gmail.com>", "tree": {"sha": "bf5cc532faae91c399f363bcfed30161b121e908", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf5cc532faae91c399f363bcfed30161b121e908"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124/comments", "author": {"login": "abbasfaisal", "id": 9428333, "node_id": "MDQ6VXNlcjk0MjgzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/9428333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abbasfaisal", "html_url": "https://github.com/abbasfaisal", "followers_url": "https://api.github.com/users/abbasfaisal/followers", "following_url": "https://api.github.com/users/abbasfaisal/following{/other_user}", "gists_url": "https://api.github.com/users/abbasfaisal/gists{/gist_id}", "starred_url": "https://api.github.com/users/abbasfaisal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abbasfaisal/subscriptions", "organizations_url": "https://api.github.com/users/abbasfaisal/orgs", "repos_url": "https://api.github.com/users/abbasfaisal/repos", "events_url": "https://api.github.com/users/abbasfaisal/events{/privacy}", "received_events_url": "https://api.github.com/users/abbasfaisal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f83e254c29dc3690603e06a98d94b3d39eb853d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f83e254c29dc3690603e06a98d94b3d39eb853d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f83e254c29dc3690603e06a98d94b3d39eb853d7"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "c56a0eab6de1c72d12bd4d1f685fda5c52fb2161", "filename": "gcc/rust/backend/rust-compile-base.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-base.cc?ref=5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124", "patch": "@@ -701,7 +701,7 @@ HIRCompileBase::compile_constant_item (\n \n       gcc_assert (TREE_CODE (bind_tree) == BIND_EXPR);\n       DECL_SAVED_TREE (fndecl) = bind_tree;\n-      DECL_DECLARED_CONSTEXPR_P (fndecl);\n+      DECL_DECLARED_CONSTEXPR_P (fndecl) = 1;\n       maybe_save_constexpr_fundef (fndecl);\n \n       ctx->pop_fn ();"}, {"sha": "616919677c9a0be93f229666f49280b181f44eae", "filename": "gcc/rust/backend/rust-compile-intrinsic.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124/gcc%2Frust%2Fbackend%2Frust-compile-intrinsic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124/gcc%2Frust%2Fbackend%2Frust-compile-intrinsic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-intrinsic.cc?ref=5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124", "patch": "@@ -215,7 +215,7 @@ finalize_intrinsic_block (Context *ctx, tree fndecl)\n \n   ctx->push_function (fndecl);\n \n-  DECL_DECLARED_CONSTEXPR_P (fndecl);\n+  DECL_DECLARED_CONSTEXPR_P (fndecl) = 1;\n   maybe_save_constexpr_fundef (fndecl);\n }\n "}, {"sha": "36da7cb26abe8d32c1825f53787896daefd09bd3", "filename": "gcc/rust/backend/rust-constexpr.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124/gcc%2Frust%2Fbackend%2Frust-constexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124/gcc%2Frust%2Fbackend%2Frust-constexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-constexpr.cc?ref=5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124", "patch": "@@ -5795,14 +5795,8 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict, bool now,\n \t}\n       return true;\n \n-    case NOP_EXPR:\n-      if (REINTERPRET_CAST_P (t))\n-\t{\n-\t  if (flags & tf_error)\n-\t    error_at (loc, \"%<reinterpret_cast%> is not a constant expression\");\n-\t  return false;\n-\t}\n       /* FALLTHRU */\n+    case NOP_EXPR:\n     case CONVERT_EXPR:\n     case VIEW_CONVERT_EXPR:\n       /* -- a reinterpret_cast.  FIXME not implemented, and this rule"}]}