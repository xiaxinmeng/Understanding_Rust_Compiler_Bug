{"sha": "83f6f4e5f42e74459ceaa17ad45e45983afae100", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNmNmY0ZTVmNDJlNzQ0NTljZWFhMTdhZDQ1ZTQ1OTgzYWZhZTEwMA==", "commit": {"author": {"name": "Hongtao Liu", "email": "hongtao.liu@intel.com", "date": "2019-01-22T16:20:25Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-01-22T16:20:25Z"}, "message": "i386: Add mask2 to builtin_description\n\nThere are\n\nstruct builtin_description\n{\n  const HOST_WIDE_INT mask;\n  const enum insn_code icode;\n  const char *const name;\n  const enum ix86_builtins code;\n  const enum rtx_code comparison;\n  const int flag;\n};\n\nSince \"mask\" is used for both ix86_isa_flags and ix86_isa_flags2, buitins\nwith both flags can't be handled easily.  This patch adds mask2 to\nbuiltin_description to handle it properly.\n\n2019-01-22  Hongtao Liu  <hongtao.liu@intel.com>\n\t    H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/88909\n\t* config/i386/i386-builtin.def: Add mask2 to all builtin\n\tinitializations.  Merge ARGS2 and SPECIAL_ARGS2 into ARGS and\n\tSPECIAL_ARGS.\n\t* config/i386/i386.c (BDESC): Add mask2 to the definition.\n\t(BDESC_FIRST): Likewise.\n\t(define_builtin): Add an argument for mask2.  Updated to handle\n\tboth ix86_isa_flags and ix86_isa_flags2.\n\t(define_builtin_const): Likewise.\n\t(define_builtin_pure): Likewise.\n\t(define_builtin2): Deleted.\n\t(define_builtin_const2): Likewise.\n\t(builtin_description): Add a member, mask2.\n\t(bdesc_*): Add mask2 to builtin initializations.\n\t(ix86_init_mmx_sse_builtins): Update calls to def_builtin,\n\tdef_builtin_const and def_builtin_pure.  Remove SPECIAL_ARGS2\n\tsupport.\n\t(ix86_get_builtin_func_type): Remove SPECIAL_ARGS2 support.\n\nCo-Authored-By: H.J. Lu <hongjiu.lu@intel.com>\n\nFrom-SVN: r268155", "tree": {"sha": "e77999ca9377f96ef83847cfb1ac39090af7911c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e77999ca9377f96ef83847cfb1ac39090af7911c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83f6f4e5f42e74459ceaa17ad45e45983afae100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83f6f4e5f42e74459ceaa17ad45e45983afae100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83f6f4e5f42e74459ceaa17ad45e45983afae100", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83f6f4e5f42e74459ceaa17ad45e45983afae100/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c6b09810beee144208acfd097fee6f796961e94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6b09810beee144208acfd097fee6f796961e94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c6b09810beee144208acfd097fee6f796961e94"}], "stats": {"total": 6357, "additions": 3132, "deletions": 3225}, "files": [{"sha": "8a077cc7daefe363f93c1ccb6c118ecfdb7ac9e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f6f4e5f42e74459ceaa17ad45e45983afae100/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f6f4e5f42e74459ceaa17ad45e45983afae100/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83f6f4e5f42e74459ceaa17ad45e45983afae100", "patch": "@@ -1,3 +1,25 @@\n+2019-01-22  Hongtao Liu  <hongtao.liu@intel.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/88909\n+\t* config/i386/i386-builtin.def: Add mask2 to all builtin\n+\tinitializations.  Merge ARGS2 and SPECIAL_ARGS2 into ARGS and\n+\tSPECIAL_ARGS.\n+\t* config/i386/i386.c (BDESC): Add mask2 to the definition.\n+\t(BDESC_FIRST): Likewise.\n+\t(define_builtin): Add an argument for mask2.  Updated to handle\n+\tboth ix86_isa_flags and ix86_isa_flags2.\n+\t(define_builtin_const): Likewise.\n+\t(define_builtin_pure): Likewise.\n+\t(define_builtin2): Deleted.\n+\t(define_builtin_const2): Likewise.\n+\t(builtin_description): Add a member, mask2.\n+\t(bdesc_*): Add mask2 to builtin initializations.\n+\t(ix86_init_mmx_sse_builtins): Update calls to def_builtin,\n+\tdef_builtin_const and def_builtin_pure.  Remove SPECIAL_ARGS2\n+\tsupport.\n+\t(ix86_get_builtin_func_type): Remove SPECIAL_ARGS2 support.\n+\n 2019-01-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/88954"}, {"sha": "88005f4687f6424bd4bdcd5d038978959797de68", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 2876, "deletions": 2881, "changes": 5757, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f6f4e5f42e74459ceaa17ad45e45983afae100/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f6f4e5f42e74459ceaa17ad45e45983afae100/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=83f6f4e5f42e74459ceaa17ad45e45983afae100"}, {"sha": "e0d7c74fcecdb91d7e5a140e027eae68c66930f5", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 234, "deletions": 344, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f6f4e5f42e74459ceaa17ad45e45983afae100/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f6f4e5f42e74459ceaa17ad45e45983afae100/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=83f6f4e5f42e74459ceaa17ad45e45983afae100", "patch": "@@ -30365,10 +30365,10 @@ enum ix86_builtins\n   /* All the remaining builtins are tracked in bdesc_* arrays in\n      i386-builtin.def.  Don't add any IX86_BUILTIN_* enumerators after\n      this point.  */\n-#define BDESC(mask, icode, name, code, comparison, flag) \\\n+#define BDESC(mask, mask2, icode, name, code, comparison, flag)\t\\\n   code,\n-#define BDESC_FIRST(kind, kindu, mask, icode, name, code, comparison, flag) \\\n-  code,\t\t\t\t\t\t\t\t\t    \\\n+#define BDESC_FIRST(kind, kindu, mask, mask2, icode, name, code, comparison, flag) \\\n+  code,\t\t\t\t\t\t\t\t\t\\\n   IX86_BUILTIN__BDESC_##kindu##_FIRST = code,\n #define BDESC_END(kind, next_kind)\n \n@@ -30383,8 +30383,8 @@ enum ix86_builtins\n   IX86_BUILTIN__BDESC_MAX_FIRST = IX86_BUILTIN_MAX,\n \n   /* Now just the aliases for bdesc_* start/end.  */\n-#define BDESC(mask, icode, name, code, comparison, flag)\n-#define BDESC_FIRST(kind, kindu, mask, icode, name, code, comparison, flag)\n+#define BDESC(mask, mask2, icode, name, code, comparison, flag)\n+#define BDESC_FIRST(kind, kindu, mask, mask2, icode, name, code, comparison, flag)\n #define BDESC_END(kind, next_kind) \\\n   IX86_BUILTIN__BDESC_##kind##_LAST\t\t\t\t\t    \\\n     = IX86_BUILTIN__BDESC_##next_kind##_FIRST - 1,\n@@ -30423,10 +30423,11 @@ static struct builtin_isa ix86_builtins_isa[(int) IX86_BUILTIN_MAX];\n static HOST_WIDE_INT deferred_isa_values = 0;\n static HOST_WIDE_INT deferred_isa_values2 = 0;\n \n-/* Add an ix86 target builtin function with CODE, NAME and TYPE.  Save the MASK\n-   of which isa_flags to use in the ix86_builtins_isa array.  Stores the\n-   function decl in the ix86_builtins array.  Returns the function decl or\n-   NULL_TREE, if the builtin was not added.\n+/* Add an ix86 target builtin function with CODE, NAME and TYPE.  Save the\n+   MASK and MASK2 of which isa_flags and ix86_isa_flags2 to use in the\n+   ix86_builtins_isa array.  Stores the function decl in the ix86_builtins\n+   array.  Returns the function decl or NULL_TREE, if the builtin was not\n+   added.\n \n    If the front end has a special hook for builtin functions, delay adding\n    builtin functions that aren't in the current ISA until the ISA is changed\n@@ -30440,15 +30441,18 @@ static HOST_WIDE_INT deferred_isa_values2 = 0;\n    errors if a builtin is added in the middle of a function scope.  */\n \n static inline tree\n-def_builtin (HOST_WIDE_INT mask, const char *name,\n+def_builtin (HOST_WIDE_INT mask, HOST_WIDE_INT mask2,\n+\t     const char *name,\n \t     enum ix86_builtin_func_type tcode,\n \t     enum ix86_builtins code)\n {\n   tree decl = NULL_TREE;\n \n+  /* An instruction may be 64bit only regardless of ISAs.  */\n   if (!(mask & OPTION_MASK_ISA_64BIT) || TARGET_64BIT)\n     {\n       ix86_builtins_isa[(int) code].isa = mask;\n+      ix86_builtins_isa[(int) code].isa2 = mask2;\n \n       mask &= ~OPTION_MASK_ISA_64BIT;\n \n@@ -30460,8 +30464,8 @@ def_builtin (HOST_WIDE_INT mask, const char *name,\n \t  && mask != OPTION_MASK_ISA_AVX512BW)\n \tmask &= ~OPTION_MASK_ISA_AVX512BW;\n \n-      if (mask == 0\n-\t  || (mask & ix86_isa_flags) != 0\n+      if (((mask2 == 0 || (mask2 & ix86_isa_flags2) != 0)\n+\t   && (mask == 0 || (mask & ix86_isa_flags) != 0))\n \t  || (lang_hooks.builtin_function\n \t      == lang_hooks.builtin_function_ext_scope))\n \t{\n@@ -30473,9 +30477,10 @@ def_builtin (HOST_WIDE_INT mask, const char *name,\n \t}\n       else\n \t{\n-\t  /* Just a MASK where set_and_not_built_p == true can potentially\n+\t  /* Just MASK and MASK2 where set_and_not_built_p == true can potentially\n \t     include a builtin.  */\n \t  deferred_isa_values |= mask;\n+\t  deferred_isa_values2 |= mask2;\n \t  ix86_builtins[(int) code] = NULL_TREE;\n \t  ix86_builtins_isa[(int) code].tcode = tcode;\n \t  ix86_builtins_isa[(int) code].name = name;\n@@ -30493,10 +30498,10 @@ def_builtin (HOST_WIDE_INT mask, const char *name,\n /* Like def_builtin, but also marks the function decl \"const\".  */\n \n static inline tree\n-def_builtin_const (HOST_WIDE_INT mask, const char *name,\n+def_builtin_const (HOST_WIDE_INT mask, HOST_WIDE_INT mask2, const char *name,\n \t\t   enum ix86_builtin_func_type tcode, enum ix86_builtins code)\n {\n-  tree decl = def_builtin (mask, name, tcode, code);\n+  tree decl = def_builtin (mask, mask2, name, tcode, code);\n   if (decl)\n     TREE_READONLY (decl) = 1;\n   else\n@@ -30508,10 +30513,10 @@ def_builtin_const (HOST_WIDE_INT mask, const char *name,\n /* Like def_builtin, but also marks the function decl \"pure\".  */\n \n static inline tree\n-def_builtin_pure (HOST_WIDE_INT mask, const char *name,\n+def_builtin_pure (HOST_WIDE_INT mask, HOST_WIDE_INT mask2, const char *name,\n \t\t  enum ix86_builtin_func_type tcode, enum ix86_builtins code)\n {\n-  tree decl = def_builtin (mask, name, tcode, code);\n+  tree decl = def_builtin (mask, mask2, name, tcode, code);\n   if (decl)\n     DECL_PURE_P (decl) = 1;\n   else\n@@ -30520,68 +30525,6 @@ def_builtin_pure (HOST_WIDE_INT mask, const char *name,\n   return decl;\n }\n \n-/* Like def_builtin, but for additional isa2 flags.  */\n-\n-static inline tree\n-def_builtin2 (HOST_WIDE_INT mask, const char *name,\n-\t      enum ix86_builtin_func_type tcode,\n-\t      enum ix86_builtins code)\n-{\n-  tree decl = NULL_TREE;\n-\n-  if (tcode == VOID_FTYPE_UINT64)\n-    {\n-      if (!TARGET_64BIT)\n-\treturn decl;\n-      ix86_builtins_isa[(int) code].isa = OPTION_MASK_ISA_64BIT;\n-    }\n-  ix86_builtins_isa[(int) code].isa2 = mask;\n-\n-  if (mask == 0\n-      || (mask & ix86_isa_flags2) != 0\n-      || (lang_hooks.builtin_function\n-\t  == lang_hooks.builtin_function_ext_scope))\n-\n-    {\n-      tree type = ix86_get_builtin_func_type (tcode);\n-      decl = add_builtin_function (name, type, code, BUILT_IN_MD,\n-\t\t\t\t   NULL, NULL_TREE);\n-      ix86_builtins[(int) code] = decl;\n-      ix86_builtins_isa[(int) code].set_and_not_built_p = false;\n-    }\n-  else\n-    {\n-      /* Just a MASK where set_and_not_built_p == true can potentially\n-\t include a builtin.  */\n-      deferred_isa_values2 |= mask;\n-      ix86_builtins[(int) code] = NULL_TREE;\n-      ix86_builtins_isa[(int) code].tcode = tcode;\n-      ix86_builtins_isa[(int) code].name = name;\n-      ix86_builtins_isa[(int) code].leaf_p = false;\n-      ix86_builtins_isa[(int) code].nothrow_p = false;\n-      ix86_builtins_isa[(int) code].const_p = false;\n-      ix86_builtins_isa[(int) code].pure_p = false;\n-      ix86_builtins_isa[(int) code].set_and_not_built_p = true;\n-    }\n-\n-  return decl;\n-}\n-\n-/* Like def_builtin, but also marks the function decl \"const\".  */\n-\n-static inline tree\n-def_builtin_const2 (HOST_WIDE_INT mask, const char *name,\n-\t\t    enum ix86_builtin_func_type tcode, enum ix86_builtins code)\n-{\n-  tree decl = def_builtin2 (mask, name, tcode, code);\n-  if (decl)\n-    TREE_READONLY (decl) = 1;\n-  else\n-    ix86_builtins_isa[(int) code].const_p = true;\n-\n-  return decl;\n-}\n-\n /* Add any new builtin functions for a given ISA that may not have been\n    declared.  This saves a bit of space compared to adding all of the\n    declarations to the tree, even if we didn't use them.  */\n@@ -30644,6 +30587,7 @@ ix86_add_new_builtins (HOST_WIDE_INT isa, HOST_WIDE_INT isa2)\n struct builtin_description\n {\n   const HOST_WIDE_INT mask;\n+  const HOST_WIDE_INT mask2;\n   const enum insn_code icode;\n   const char *const name;\n   const enum ix86_builtins code;\n@@ -30704,12 +30648,12 @@ struct builtin_description\n #define MULTI_ARG_1_QI_SI\tV4SI_FTYPE_V16QI\n #define MULTI_ARG_1_QI_HI\tV8HI_FTYPE_V16QI\n \n-#define BDESC(mask, icode, name, code, comparison, flag) \\\n-  { mask, icode, name, code, comparison, flag },\n-#define BDESC_FIRST(kind, kindu, mask, icode, name, code, comparison, flag) \\\n+#define BDESC(mask, mask2, icode, name, code, comparison, flag)\t\\\n+  { mask, mask2, icode, name, code, comparison, flag },\n+#define BDESC_FIRST(kind, kindu, mask, mask2, icode, name, code, comparison, flag) \\\n static const struct builtin_description bdesc_##kind[] =\t\t    \\\n {\t\t\t\t\t\t\t\t\t    \\\n-  BDESC (mask, icode, name, code, comparison, flag)\n+  BDESC (mask, mask2, icode, name, code, comparison, flag)\n #define BDESC_END(kind, next_kind) \\\n };\n \n@@ -30718,40 +30662,41 @@ static const struct builtin_description bdesc_##kind[] =\t\t    \\\n #undef BDESC\n #undef BDESC_FIRST\n #undef BDESC_END\n+\n \f\n /* TM vector builtins.  */\n \n /* Reuse the existing x86-specific `struct builtin_description' cause\n    we're lazy.  Add casts to make them fit.  */\n static const struct builtin_description bdesc_tm[] =\n {\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_nothing, \"__builtin__ITM_WM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_nothing, \"__builtin__ITM_WaRM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAR_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_nothing, \"__builtin__ITM_WaWM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAW_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_nothing, \"__builtin__ITM_RM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_nothing, \"__builtin__ITM_RaRM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAR_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_nothing, \"__builtin__ITM_RaWM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAW_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_nothing, \"__builtin__ITM_RfWM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RFW_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n-\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_nothing, \"__builtin__ITM_WM128\", (enum ix86_builtins) BUILT_IN_TM_STORE_M128, UNKNOWN, VOID_FTYPE_PV4SF_V4SF },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_nothing, \"__builtin__ITM_WaRM128\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAR_M128, UNKNOWN, VOID_FTYPE_PV4SF_V4SF },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_nothing, \"__builtin__ITM_WaWM128\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAW_M128, UNKNOWN, VOID_FTYPE_PV4SF_V4SF },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_nothing, \"__builtin__ITM_RM128\", (enum ix86_builtins) BUILT_IN_TM_LOAD_M128, UNKNOWN, V4SF_FTYPE_PCV4SF },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_nothing, \"__builtin__ITM_RaRM128\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAR_M128, UNKNOWN, V4SF_FTYPE_PCV4SF },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_nothing, \"__builtin__ITM_RaWM128\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAW_M128, UNKNOWN, V4SF_FTYPE_PCV4SF },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_nothing, \"__builtin__ITM_RfWM128\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RFW_M128, UNKNOWN, V4SF_FTYPE_PCV4SF },\n-\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_nothing, \"__builtin__ITM_WM256\", (enum ix86_builtins) BUILT_IN_TM_STORE_M256, UNKNOWN, VOID_FTYPE_PV8SF_V8SF },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_nothing, \"__builtin__ITM_WaRM256\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAR_M256, UNKNOWN, VOID_FTYPE_PV8SF_V8SF },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_nothing, \"__builtin__ITM_WaWM256\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAW_M256, UNKNOWN, VOID_FTYPE_PV8SF_V8SF },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_nothing, \"__builtin__ITM_RM256\", (enum ix86_builtins) BUILT_IN_TM_LOAD_M256, UNKNOWN, V8SF_FTYPE_PCV8SF },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_nothing, \"__builtin__ITM_RaRM256\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAR_M256, UNKNOWN, V8SF_FTYPE_PCV8SF },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_nothing, \"__builtin__ITM_RaWM256\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAW_M256, UNKNOWN, V8SF_FTYPE_PCV8SF },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_nothing, \"__builtin__ITM_RfWM256\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RFW_M256, UNKNOWN, V8SF_FTYPE_PCV8SF },\n-\n-  { OPTION_MASK_ISA_MMX, CODE_FOR_nothing, \"__builtin__ITM_LM64\", (enum ix86_builtins) BUILT_IN_TM_LOG_M64, UNKNOWN, VOID_FTYPE_PCVOID },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_nothing, \"__builtin__ITM_LM128\", (enum ix86_builtins) BUILT_IN_TM_LOG_M128, UNKNOWN, VOID_FTYPE_PCVOID },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_nothing, \"__builtin__ITM_LM256\", (enum ix86_builtins) BUILT_IN_TM_LOG_M256, UNKNOWN, VOID_FTYPE_PCVOID },\n+  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_WM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_WaRM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAR_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_WaWM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAW_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_RM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n+  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_RaRM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAR_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n+  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_RaWM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAW_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n+  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_RfWM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RFW_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n+\n+  { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_WM128\", (enum ix86_builtins) BUILT_IN_TM_STORE_M128, UNKNOWN, VOID_FTYPE_PV4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_WaRM128\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAR_M128, UNKNOWN, VOID_FTYPE_PV4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_WaWM128\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAW_M128, UNKNOWN, VOID_FTYPE_PV4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_RM128\", (enum ix86_builtins) BUILT_IN_TM_LOAD_M128, UNKNOWN, V4SF_FTYPE_PCV4SF },\n+  { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_RaRM128\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAR_M128, UNKNOWN, V4SF_FTYPE_PCV4SF },\n+  { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_RaWM128\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAW_M128, UNKNOWN, V4SF_FTYPE_PCV4SF },\n+  { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_RfWM128\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RFW_M128, UNKNOWN, V4SF_FTYPE_PCV4SF },\n+\n+  { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_WM256\", (enum ix86_builtins) BUILT_IN_TM_STORE_M256, UNKNOWN, VOID_FTYPE_PV8SF_V8SF },\n+  { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_WaRM256\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAR_M256, UNKNOWN, VOID_FTYPE_PV8SF_V8SF },\n+  { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_WaWM256\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAW_M256, UNKNOWN, VOID_FTYPE_PV8SF_V8SF },\n+  { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_RM256\", (enum ix86_builtins) BUILT_IN_TM_LOAD_M256, UNKNOWN, V8SF_FTYPE_PCV8SF },\n+  { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_RaRM256\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAR_M256, UNKNOWN, V8SF_FTYPE_PCV8SF },\n+  { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_RaWM256\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAW_M256, UNKNOWN, V8SF_FTYPE_PCV8SF },\n+  { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_RfWM256\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RFW_M256, UNKNOWN, V8SF_FTYPE_PCV8SF },\n+\n+  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_LM64\", (enum ix86_builtins) BUILT_IN_TM_LOG_M64, UNKNOWN, VOID_FTYPE_PCVOID },\n+  { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_LM128\", (enum ix86_builtins) BUILT_IN_TM_LOG_M128, UNKNOWN, VOID_FTYPE_PCVOID },\n+  { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_LM256\", (enum ix86_builtins) BUILT_IN_TM_LOG_M256, UNKNOWN, VOID_FTYPE_PCVOID },\n };\n \n /* Initialize the transactional memory vector load/store builtins.  */\n@@ -30846,12 +30791,8 @@ BDESC_VERIFYS (IX86_BUILTIN__BDESC_ARGS_FIRST,\n \t       IX86_BUILTIN__BDESC_SPECIAL_ARGS_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_ROUND_ARGS_FIRST,\n \t       IX86_BUILTIN__BDESC_ARGS_LAST, 1);\n-BDESC_VERIFYS (IX86_BUILTIN__BDESC_ARGS2_FIRST,\n-\t       IX86_BUILTIN__BDESC_ROUND_ARGS_LAST, 1);\n-BDESC_VERIFYS (IX86_BUILTIN__BDESC_SPECIAL_ARGS2_FIRST,\n-\t       IX86_BUILTIN__BDESC_ARGS2_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_MULTI_ARG_FIRST,\n-\t       IX86_BUILTIN__BDESC_SPECIAL_ARGS2_LAST, 1);\n+\t       IX86_BUILTIN__BDESC_ROUND_ARGS_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_CET_FIRST,\n \t       IX86_BUILTIN__BDESC_MULTI_ARG_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_CET_NORMAL_FIRST,\n@@ -30880,28 +30821,12 @@ ix86_init_mmx_sse_builtins (void)\n \tcontinue;\n \n       ftype = (enum ix86_builtin_func_type) d->flag;\n-      def_builtin (d->mask, d->name, ftype, d->code);\n+      def_builtin (d->mask, d->mask2, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_SPECIAL_ARGS_LAST,\n \t\t IX86_BUILTIN__BDESC_SPECIAL_ARGS_FIRST,\n \t\t ARRAY_SIZE (bdesc_special_args) - 1);\n \n-  /* Add all special builtins with variable number of operands.  */\n-  for (i = 0, d = bdesc_special_args2;\n-       i < ARRAY_SIZE (bdesc_special_args2);\n-       i++, d++)\n-    {\n-      BDESC_VERIFY (d->code, IX86_BUILTIN__BDESC_SPECIAL_ARGS2_FIRST, i);\n-      if (d->name == 0)\n-\tcontinue;\n-\n-      ftype = (enum ix86_builtin_func_type) d->flag;\n-      def_builtin2 (d->mask, d->name, ftype, d->code);\n-    }\n-  BDESC_VERIFYS (IX86_BUILTIN__BDESC_SPECIAL_ARGS2_LAST,\n-\t\t IX86_BUILTIN__BDESC_SPECIAL_ARGS2_FIRST,\n-\t\t ARRAY_SIZE (bdesc_special_args2) - 1);\n-\n   /* Add all builtins with variable number of operands.  */\n   for (i = 0, d = bdesc_args;\n        i < ARRAY_SIZE (bdesc_args);\n@@ -30912,28 +30837,12 @@ ix86_init_mmx_sse_builtins (void)\n \tcontinue;\n \n       ftype = (enum ix86_builtin_func_type) d->flag;\n-      def_builtin_const (d->mask, d->name, ftype, d->code);\n+      def_builtin_const (d->mask, d->mask2, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_ARGS_LAST,\n \t\t IX86_BUILTIN__BDESC_ARGS_FIRST,\n \t\t ARRAY_SIZE (bdesc_args) - 1);\n \n-  /* Add all builtins with variable number of operands.  */\n-  for (i = 0, d = bdesc_args2;\n-       i < ARRAY_SIZE (bdesc_args2);\n-       i++, d++)\n-    {\n-      BDESC_VERIFY (d->code, IX86_BUILTIN__BDESC_ARGS2_FIRST, i);\n-      if (d->name == 0)\n-\tcontinue;\n-\n-      ftype = (enum ix86_builtin_func_type) d->flag;\n-      def_builtin_const2 (d->mask, d->name, ftype, d->code);\n-    }\n-  BDESC_VERIFYS (IX86_BUILTIN__BDESC_ARGS2_LAST,\n-\t\t IX86_BUILTIN__BDESC_ARGS2_FIRST,\n-\t\t ARRAY_SIZE (bdesc_args2) - 1);\n-  \n   /* Add all builtins with rounding.  */\n   for (i = 0, d = bdesc_round_args;\n        i < ARRAY_SIZE (bdesc_round_args);\n@@ -30944,7 +30853,7 @@ ix86_init_mmx_sse_builtins (void)\n \tcontinue;\n \n       ftype = (enum ix86_builtin_func_type) d->flag;\n-      def_builtin_const (d->mask, d->name, ftype, d->code);\n+      def_builtin_const (d->mask, d->mask2, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_ROUND_ARGS_LAST,\n \t\t IX86_BUILTIN__BDESC_ROUND_ARGS_FIRST,\n@@ -30960,7 +30869,7 @@ ix86_init_mmx_sse_builtins (void)\n \tftype = V16QI_FTYPE_V16QI_INT_V16QI_INT_INT;\n       else\n \tftype = INT_FTYPE_V16QI_INT_V16QI_INT_INT;\n-      def_builtin_const (d->mask, d->name, ftype, d->code);\n+      def_builtin_const (d->mask, d->mask2, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_PCMPESTR_LAST,\n \t\t IX86_BUILTIN__BDESC_PCMPESTR_FIRST,\n@@ -30976,7 +30885,7 @@ ix86_init_mmx_sse_builtins (void)\n \tftype = V16QI_FTYPE_V16QI_V16QI_INT;\n       else\n \tftype = INT_FTYPE_V16QI_V16QI_INT;\n-      def_builtin_const (d->mask, d->name, ftype, d->code);\n+      def_builtin_const (d->mask, d->mask2, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_PCMPISTR_LAST,\n \t\t IX86_BUILTIN__BDESC_PCMPISTR_FIRST,\n@@ -30990,603 +30899,603 @@ ix86_init_mmx_sse_builtins (void)\n \tftype = INT_FTYPE_V2DF_V2DF;\n       else\n \tftype = INT_FTYPE_V4SF_V4SF;\n-      def_builtin_const (d->mask, d->name, ftype, d->code);\n+      def_builtin_const (d->mask, d->mask2, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_COMI_LAST,\n \t\t IX86_BUILTIN__BDESC_COMI_FIRST,\n \t\t ARRAY_SIZE (bdesc_comi) - 1);\n \n   /* SSE */\n-  def_builtin (OPTION_MASK_ISA_SSE, \"__builtin_ia32_ldmxcsr\",\n+  def_builtin (OPTION_MASK_ISA_SSE, 0,  \"__builtin_ia32_ldmxcsr\",\n \t       VOID_FTYPE_UNSIGNED, IX86_BUILTIN_LDMXCSR);\n-  def_builtin_pure (OPTION_MASK_ISA_SSE, \"__builtin_ia32_stmxcsr\",\n+  def_builtin_pure (OPTION_MASK_ISA_SSE, 0, \"__builtin_ia32_stmxcsr\",\n \t\t    UNSIGNED_FTYPE_VOID, IX86_BUILTIN_STMXCSR);\n \n   /* SSE or 3DNow!A */\n   def_builtin (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A\n \t       /* As it uses V4HImode, we have to require -mmmx too.  */\n-\t       | OPTION_MASK_ISA_MMX,\n+\t       | OPTION_MASK_ISA_MMX, 0,\n \t       \"__builtin_ia32_maskmovq\", VOID_FTYPE_V8QI_V8QI_PCHAR,\n \t       IX86_BUILTIN_MASKMOVQ);\n \n   /* SSE2 */\n-  def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_maskmovdqu\",\n+  def_builtin (OPTION_MASK_ISA_SSE2, 0, \"__builtin_ia32_maskmovdqu\",\n \t       VOID_FTYPE_V16QI_V16QI_PCHAR, IX86_BUILTIN_MASKMOVDQU);\n \n-  def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_clflush\",\n+  def_builtin (OPTION_MASK_ISA_SSE2, 0, \"__builtin_ia32_clflush\",\n \t       VOID_FTYPE_PCVOID, IX86_BUILTIN_CLFLUSH);\n-  x86_mfence = def_builtin (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_mfence\",\n+  x86_mfence = def_builtin (OPTION_MASK_ISA_SSE2, 0, \"__builtin_ia32_mfence\",\n \t\t\t    VOID_FTYPE_VOID, IX86_BUILTIN_MFENCE);\n \n   /* SSE3.  */\n-  def_builtin (OPTION_MASK_ISA_SSE3, \"__builtin_ia32_monitor\",\n+  def_builtin (OPTION_MASK_ISA_SSE3, 0, \"__builtin_ia32_monitor\",\n \t       VOID_FTYPE_PCVOID_UNSIGNED_UNSIGNED, IX86_BUILTIN_MONITOR);\n-  def_builtin (OPTION_MASK_ISA_SSE3, \"__builtin_ia32_mwait\",\n+  def_builtin (OPTION_MASK_ISA_SSE3, 0, \"__builtin_ia32_mwait\",\n \t       VOID_FTYPE_UNSIGNED_UNSIGNED, IX86_BUILTIN_MWAIT);\n \n   /* AES */\n-  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2,\n+  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2, 0,\n \t\t     \"__builtin_ia32_aesenc128\",\n \t\t     V2DI_FTYPE_V2DI_V2DI, IX86_BUILTIN_AESENC128);\n-  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2,\n+  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2, 0,\n \t\t     \"__builtin_ia32_aesenclast128\",\n \t\t     V2DI_FTYPE_V2DI_V2DI, IX86_BUILTIN_AESENCLAST128);\n-  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2,\n+  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2, 0,\n \t\t     \"__builtin_ia32_aesdec128\",\n \t\t     V2DI_FTYPE_V2DI_V2DI, IX86_BUILTIN_AESDEC128);\n-  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2,\n+  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2, 0,\n \t\t     \"__builtin_ia32_aesdeclast128\",\n \t\t     V2DI_FTYPE_V2DI_V2DI, IX86_BUILTIN_AESDECLAST128);\n-  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2,\n+  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2, 0,\n \t\t     \"__builtin_ia32_aesimc128\",\n \t\t     V2DI_FTYPE_V2DI, IX86_BUILTIN_AESIMC128);\n-  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2,\n+  def_builtin_const (OPTION_MASK_ISA_AES | OPTION_MASK_ISA_SSE2, 0,\n \t\t     \"__builtin_ia32_aeskeygenassist128\",\n \t\t     V2DI_FTYPE_V2DI_INT, IX86_BUILTIN_AESKEYGENASSIST128);\n \n   /* PCLMUL */\n-  def_builtin_const (OPTION_MASK_ISA_PCLMUL | OPTION_MASK_ISA_SSE2,\n+  def_builtin_const (OPTION_MASK_ISA_PCLMUL | OPTION_MASK_ISA_SSE2, 0,\n \t\t     \"__builtin_ia32_pclmulqdq128\",\n \t\t     V2DI_FTYPE_V2DI_V2DI_INT, IX86_BUILTIN_PCLMULQDQ128);\n \n   /* RDRND */\n-  def_builtin (OPTION_MASK_ISA_RDRND, \"__builtin_ia32_rdrand16_step\",\n+  def_builtin (OPTION_MASK_ISA_RDRND, 0, \"__builtin_ia32_rdrand16_step\",\n \t       INT_FTYPE_PUSHORT, IX86_BUILTIN_RDRAND16_STEP);\n-  def_builtin (OPTION_MASK_ISA_RDRND, \"__builtin_ia32_rdrand32_step\",\n+  def_builtin (OPTION_MASK_ISA_RDRND, 0,  \"__builtin_ia32_rdrand32_step\",\n \t       INT_FTYPE_PUNSIGNED, IX86_BUILTIN_RDRAND32_STEP);\n-  def_builtin (OPTION_MASK_ISA_RDRND | OPTION_MASK_ISA_64BIT,\n+  def_builtin (OPTION_MASK_ISA_RDRND | OPTION_MASK_ISA_64BIT, 0,\n \t       \"__builtin_ia32_rdrand64_step\", INT_FTYPE_PULONGLONG,\n \t       IX86_BUILTIN_RDRAND64_STEP);\n \n   /* AVX2 */\n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gathersiv2df\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gathersiv2df\",\n \t\t    V2DF_FTYPE_V2DF_PCDOUBLE_V4SI_V2DF_INT,\n \t\t    IX86_BUILTIN_GATHERSIV2DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gathersiv4df\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gathersiv4df\",\n \t\t    V4DF_FTYPE_V4DF_PCDOUBLE_V4SI_V4DF_INT,\n \t\t    IX86_BUILTIN_GATHERSIV4DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatherdiv2df\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatherdiv2df\",\n \t\t    V2DF_FTYPE_V2DF_PCDOUBLE_V2DI_V2DF_INT,\n \t\t    IX86_BUILTIN_GATHERDIV2DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatherdiv4df\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatherdiv4df\",\n \t\t    V4DF_FTYPE_V4DF_PCDOUBLE_V4DI_V4DF_INT,\n \t\t    IX86_BUILTIN_GATHERDIV4DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gathersiv4sf\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gathersiv4sf\",\n \t\t    V4SF_FTYPE_V4SF_PCFLOAT_V4SI_V4SF_INT,\n \t\t    IX86_BUILTIN_GATHERSIV4SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gathersiv8sf\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gathersiv8sf\",\n \t\t    V8SF_FTYPE_V8SF_PCFLOAT_V8SI_V8SF_INT,\n \t\t    IX86_BUILTIN_GATHERSIV8SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatherdiv4sf\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatherdiv4sf\",\n \t\t    V4SF_FTYPE_V4SF_PCFLOAT_V2DI_V4SF_INT,\n \t\t    IX86_BUILTIN_GATHERDIV4SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatherdiv4sf256\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatherdiv4sf256\",\n \t\t    V4SF_FTYPE_V4SF_PCFLOAT_V4DI_V4SF_INT,\n \t\t    IX86_BUILTIN_GATHERDIV8SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gathersiv2di\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gathersiv2di\",\n \t\t    V2DI_FTYPE_V2DI_PCINT64_V4SI_V2DI_INT,\n \t\t    IX86_BUILTIN_GATHERSIV2DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gathersiv4di\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gathersiv4di\",\n \t\t    V4DI_FTYPE_V4DI_PCINT64_V4SI_V4DI_INT,\n \t\t    IX86_BUILTIN_GATHERSIV4DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatherdiv2di\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatherdiv2di\",\n \t\t    V2DI_FTYPE_V2DI_PCINT64_V2DI_V2DI_INT,\n \t\t    IX86_BUILTIN_GATHERDIV2DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatherdiv4di\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatherdiv4di\",\n \t\t    V4DI_FTYPE_V4DI_PCINT64_V4DI_V4DI_INT,\n \t\t    IX86_BUILTIN_GATHERDIV4DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gathersiv4si\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gathersiv4si\",\n \t\t    V4SI_FTYPE_V4SI_PCINT_V4SI_V4SI_INT,\n \t\t    IX86_BUILTIN_GATHERSIV4SI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gathersiv8si\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gathersiv8si\",\n \t\t    V8SI_FTYPE_V8SI_PCINT_V8SI_V8SI_INT,\n \t\t    IX86_BUILTIN_GATHERSIV8SI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatherdiv4si\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatherdiv4si\",\n \t\t    V4SI_FTYPE_V4SI_PCINT_V2DI_V4SI_INT,\n \t\t    IX86_BUILTIN_GATHERDIV4SI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatherdiv4si256\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatherdiv4si256\",\n \t\t    V4SI_FTYPE_V4SI_PCINT_V4DI_V4SI_INT,\n \t\t    IX86_BUILTIN_GATHERDIV8SI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatheraltsiv4df \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatheraltsiv4df \",\n \t\t    V4DF_FTYPE_V4DF_PCDOUBLE_V8SI_V4DF_INT,\n \t\t    IX86_BUILTIN_GATHERALTSIV4DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatheraltdiv8sf \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatheraltdiv8sf \",\n \t\t    V8SF_FTYPE_V8SF_PCFLOAT_V4DI_V8SF_INT,\n \t\t    IX86_BUILTIN_GATHERALTDIV8SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatheraltsiv4di \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatheraltsiv4di \",\n \t\t    V4DI_FTYPE_V4DI_PCINT64_V8SI_V4DI_INT,\n \t\t    IX86_BUILTIN_GATHERALTSIV4DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatheraltdiv8si \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, 0, \"__builtin_ia32_gatheraltdiv8si \",\n \t\t    V8SI_FTYPE_V8SI_PCINT_V4DI_V8SI_INT,\n \t\t    IX86_BUILTIN_GATHERALTDIV8SI);\n \n   /* AVX512F */\n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gathersiv16sf\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gathersiv16sf\",\n \t\t    V16SF_FTYPE_V16SF_PCVOID_V16SI_HI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV16SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gathersiv8df\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gathersiv8df\",\n \t\t    V8DF_FTYPE_V8DF_PCVOID_V8SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV8DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gatherdiv16sf\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gatherdiv16sf\",\n \t\t    V8SF_FTYPE_V8SF_PCVOID_V8DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV16SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gatherdiv8df\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gatherdiv8df\",\n \t\t    V8DF_FTYPE_V8DF_PCVOID_V8DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV8DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gathersiv16si\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gathersiv16si\",\n \t\t    V16SI_FTYPE_V16SI_PCVOID_V16SI_HI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV16SI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gathersiv8di\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gathersiv8di\",\n \t\t    V8DI_FTYPE_V8DI_PCVOID_V8SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV8DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gatherdiv16si\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gatherdiv16si\",\n \t\t    V8SI_FTYPE_V8SI_PCVOID_V8DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV16SI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gatherdiv8di\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gatherdiv8di\",\n \t\t    V8DI_FTYPE_V8DI_PCVOID_V8DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV8DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gather3altsiv8df \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gather3altsiv8df \",\n \t\t    V8DF_FTYPE_V8DF_PCDOUBLE_V16SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTSIV8DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gather3altdiv16sf \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gather3altdiv16sf \",\n \t\t    V16SF_FTYPE_V16SF_PCFLOAT_V8DI_HI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTDIV16SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gather3altsiv8di \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gather3altsiv8di \",\n \t\t    V8DI_FTYPE_V8DI_PCINT64_V16SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTSIV8DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gather3altdiv16si \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_gather3altdiv16si \",\n \t\t    V16SI_FTYPE_V16SI_PCINT_V8DI_HI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTDIV16SI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scattersiv16sf\",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scattersiv16sf\",\n \t       VOID_FTYPE_PVOID_HI_V16SI_V16SF_INT,\n \t       IX86_BUILTIN_SCATTERSIV16SF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scattersiv8df\",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scattersiv8df\",\n \t       VOID_FTYPE_PVOID_QI_V8SI_V8DF_INT,\n \t       IX86_BUILTIN_SCATTERSIV8DF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatterdiv16sf\",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scatterdiv16sf\",\n \t       VOID_FTYPE_PVOID_QI_V8DI_V8SF_INT,\n \t       IX86_BUILTIN_SCATTERDIV16SF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatterdiv8df\",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scatterdiv8df\",\n \t       VOID_FTYPE_PVOID_QI_V8DI_V8DF_INT,\n \t       IX86_BUILTIN_SCATTERDIV8DF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scattersiv16si\",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scattersiv16si\",\n \t       VOID_FTYPE_PVOID_HI_V16SI_V16SI_INT,\n \t       IX86_BUILTIN_SCATTERSIV16SI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scattersiv8di\",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scattersiv8di\",\n \t       VOID_FTYPE_PVOID_QI_V8SI_V8DI_INT,\n \t       IX86_BUILTIN_SCATTERSIV8DI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatterdiv16si\",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scatterdiv16si\",\n \t       VOID_FTYPE_PVOID_QI_V8DI_V8SI_INT,\n \t       IX86_BUILTIN_SCATTERDIV16SI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatterdiv8di\",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scatterdiv8di\",\n \t       VOID_FTYPE_PVOID_QI_V8DI_V8DI_INT,\n \t       IX86_BUILTIN_SCATTERDIV8DI);\n \n   /* AVX512VL */\n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3siv2df\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3siv2df\",\n \t\t    V2DF_FTYPE_V2DF_PCVOID_V4SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV2DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3siv4df\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3siv4df\",\n \t\t    V4DF_FTYPE_V4DF_PCVOID_V4SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV4DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3div2df\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3div2df\",\n \t\t    V2DF_FTYPE_V2DF_PCVOID_V2DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV2DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3div4df\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3div4df\",\n \t\t    V4DF_FTYPE_V4DF_PCVOID_V4DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV4DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3siv4sf\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3siv4sf\",\n \t\t    V4SF_FTYPE_V4SF_PCVOID_V4SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV4SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3siv8sf\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3siv8sf\",\n \t\t    V8SF_FTYPE_V8SF_PCVOID_V8SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV8SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3div4sf\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3div4sf\",\n \t\t    V4SF_FTYPE_V4SF_PCVOID_V2DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV4SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3div8sf\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3div8sf\",\n \t\t    V4SF_FTYPE_V4SF_PCVOID_V4DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV8SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3siv2di\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3siv2di\",\n \t\t    V2DI_FTYPE_V2DI_PCVOID_V4SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV2DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3siv4di\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3siv4di\",\n \t\t    V4DI_FTYPE_V4DI_PCVOID_V4SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV4DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3div2di\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3div2di\",\n \t\t    V2DI_FTYPE_V2DI_PCVOID_V2DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV2DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3div4di\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3div4di\",\n \t\t    V4DI_FTYPE_V4DI_PCVOID_V4DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV4DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3siv4si\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3siv4si\",\n \t\t    V4SI_FTYPE_V4SI_PCVOID_V4SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV4SI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3siv8si\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3siv8si\",\n \t\t    V8SI_FTYPE_V8SI_PCVOID_V8SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3SIV8SI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3div4si\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3div4si\",\n \t\t    V4SI_FTYPE_V4SI_PCVOID_V2DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV4SI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3div8si\",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3div8si\",\n \t\t    V4SI_FTYPE_V4SI_PCVOID_V4DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV8SI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3altsiv4df \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3altsiv4df \",\n \t\t    V4DF_FTYPE_V4DF_PCDOUBLE_V8SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTSIV4DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3altdiv8sf \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3altdiv8sf \",\n \t\t    V8SF_FTYPE_V8SF_PCFLOAT_V4DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTDIV8SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3altsiv4di \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3altsiv4di \",\n \t\t    V4DI_FTYPE_V4DI_PCINT64_V8SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTSIV4DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_gather3altdiv8si \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_gather3altdiv8si \",\n \t\t    V8SI_FTYPE_V8SI_PCINT_V4DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTDIV8SI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scattersiv8sf\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scattersiv8sf\",\n \t       VOID_FTYPE_PVOID_QI_V8SI_V8SF_INT,\n \t       IX86_BUILTIN_SCATTERSIV8SF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scattersiv4sf\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scattersiv4sf\",\n \t       VOID_FTYPE_PVOID_QI_V4SI_V4SF_INT,\n \t       IX86_BUILTIN_SCATTERSIV4SF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scattersiv4df\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scattersiv4df\",\n \t       VOID_FTYPE_PVOID_QI_V4SI_V4DF_INT,\n \t       IX86_BUILTIN_SCATTERSIV4DF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scattersiv2df\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scattersiv2df\",\n \t       VOID_FTYPE_PVOID_QI_V4SI_V2DF_INT,\n \t       IX86_BUILTIN_SCATTERSIV2DF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatterdiv8sf\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatterdiv8sf\",\n \t       VOID_FTYPE_PVOID_QI_V4DI_V4SF_INT,\n \t       IX86_BUILTIN_SCATTERDIV8SF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatterdiv4sf\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatterdiv4sf\",\n \t       VOID_FTYPE_PVOID_QI_V2DI_V4SF_INT,\n \t       IX86_BUILTIN_SCATTERDIV4SF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatterdiv4df\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatterdiv4df\",\n \t       VOID_FTYPE_PVOID_QI_V4DI_V4DF_INT,\n \t       IX86_BUILTIN_SCATTERDIV4DF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatterdiv2df\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatterdiv2df\",\n \t       VOID_FTYPE_PVOID_QI_V2DI_V2DF_INT,\n \t       IX86_BUILTIN_SCATTERDIV2DF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scattersiv8si\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scattersiv8si\",\n \t       VOID_FTYPE_PVOID_QI_V8SI_V8SI_INT,\n \t       IX86_BUILTIN_SCATTERSIV8SI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scattersiv4si\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scattersiv4si\",\n \t       VOID_FTYPE_PVOID_QI_V4SI_V4SI_INT,\n \t       IX86_BUILTIN_SCATTERSIV4SI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scattersiv4di\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scattersiv4di\",\n \t       VOID_FTYPE_PVOID_QI_V4SI_V4DI_INT,\n \t       IX86_BUILTIN_SCATTERSIV4DI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scattersiv2di\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scattersiv2di\",\n \t       VOID_FTYPE_PVOID_QI_V4SI_V2DI_INT,\n \t       IX86_BUILTIN_SCATTERSIV2DI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatterdiv8si\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatterdiv8si\",\n \t       VOID_FTYPE_PVOID_QI_V4DI_V4SI_INT,\n \t       IX86_BUILTIN_SCATTERDIV8SI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatterdiv4si\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatterdiv4si\",\n \t       VOID_FTYPE_PVOID_QI_V2DI_V4SI_INT,\n \t       IX86_BUILTIN_SCATTERDIV4SI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatterdiv4di\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatterdiv4di\",\n \t       VOID_FTYPE_PVOID_QI_V4DI_V4DI_INT,\n \t       IX86_BUILTIN_SCATTERDIV4DI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatterdiv2di\",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatterdiv2di\",\n \t       VOID_FTYPE_PVOID_QI_V2DI_V2DI_INT,\n \t       IX86_BUILTIN_SCATTERDIV2DI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatteraltsiv8df \",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scatteraltsiv8df \",\n \t       VOID_FTYPE_PDOUBLE_QI_V16SI_V8DF_INT,\n \t       IX86_BUILTIN_SCATTERALTSIV8DF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatteraltdiv16sf \",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scatteraltdiv16sf \",\n \t       VOID_FTYPE_PFLOAT_HI_V8DI_V16SF_INT,\n \t       IX86_BUILTIN_SCATTERALTDIV16SF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatteraltsiv8di \",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scatteraltsiv8di \",\n \t       VOID_FTYPE_PLONGLONG_QI_V16SI_V8DI_INT,\n \t       IX86_BUILTIN_SCATTERALTSIV8DI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatteraltdiv16si \",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, 0, \"__builtin_ia32_scatteraltdiv16si \",\n \t       VOID_FTYPE_PINT_HI_V8DI_V16SI_INT,\n \t       IX86_BUILTIN_SCATTERALTDIV16SI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltsiv4df \",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatteraltsiv4df \",\n \t       VOID_FTYPE_PDOUBLE_QI_V8SI_V4DF_INT,\n \t       IX86_BUILTIN_SCATTERALTSIV4DF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltdiv8sf \",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatteraltdiv8sf \",\n \t       VOID_FTYPE_PFLOAT_QI_V4DI_V8SF_INT,\n \t       IX86_BUILTIN_SCATTERALTDIV8SF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltsiv4di \",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatteraltsiv4di \",\n \t       VOID_FTYPE_PLONGLONG_QI_V8SI_V4DI_INT,\n \t       IX86_BUILTIN_SCATTERALTSIV4DI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltdiv8si \",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatteraltdiv8si \",\n \t       VOID_FTYPE_PINT_QI_V4DI_V8SI_INT,\n \t       IX86_BUILTIN_SCATTERALTDIV8SI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltsiv2df \",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatteraltsiv2df \",\n \t       VOID_FTYPE_PDOUBLE_QI_V4SI_V2DF_INT,\n \t       IX86_BUILTIN_SCATTERALTSIV2DF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltdiv4sf \",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatteraltdiv4sf \",\n \t       VOID_FTYPE_PFLOAT_QI_V2DI_V4SF_INT,\n \t       IX86_BUILTIN_SCATTERALTDIV4SF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltsiv2di \",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatteraltsiv2di \",\n \t       VOID_FTYPE_PLONGLONG_QI_V4SI_V2DI_INT,\n \t       IX86_BUILTIN_SCATTERALTSIV2DI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltdiv4si \",\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, 0, \"__builtin_ia32_scatteraltdiv4si \",\n \t       VOID_FTYPE_PINT_QI_V2DI_V4SI_INT,\n \t       IX86_BUILTIN_SCATTERALTDIV4SI);\n \n   /* AVX512PF */\n-  def_builtin (OPTION_MASK_ISA_AVX512PF, \"__builtin_ia32_gatherpfdpd\",\n+  def_builtin (OPTION_MASK_ISA_AVX512PF, 0, \"__builtin_ia32_gatherpfdpd\",\n \t       VOID_FTYPE_QI_V8SI_PCVOID_INT_INT,\n \t       IX86_BUILTIN_GATHERPFDPD);\n-  def_builtin (OPTION_MASK_ISA_AVX512PF, \"__builtin_ia32_gatherpfdps\",\n+  def_builtin (OPTION_MASK_ISA_AVX512PF, 0, \"__builtin_ia32_gatherpfdps\",\n \t       VOID_FTYPE_HI_V16SI_PCVOID_INT_INT,\n \t       IX86_BUILTIN_GATHERPFDPS);\n-  def_builtin (OPTION_MASK_ISA_AVX512PF, \"__builtin_ia32_gatherpfqpd\",\n+  def_builtin (OPTION_MASK_ISA_AVX512PF, 0, \"__builtin_ia32_gatherpfqpd\",\n \t       VOID_FTYPE_QI_V8DI_PCVOID_INT_INT,\n \t       IX86_BUILTIN_GATHERPFQPD);\n-  def_builtin (OPTION_MASK_ISA_AVX512PF, \"__builtin_ia32_gatherpfqps\",\n+  def_builtin (OPTION_MASK_ISA_AVX512PF, 0, \"__builtin_ia32_gatherpfqps\",\n \t       VOID_FTYPE_QI_V8DI_PCVOID_INT_INT,\n \t       IX86_BUILTIN_GATHERPFQPS);\n-  def_builtin (OPTION_MASK_ISA_AVX512PF, \"__builtin_ia32_scatterpfdpd\",\n+  def_builtin (OPTION_MASK_ISA_AVX512PF, 0, \"__builtin_ia32_scatterpfdpd\",\n \t       VOID_FTYPE_QI_V8SI_PCVOID_INT_INT,\n \t       IX86_BUILTIN_SCATTERPFDPD);\n-  def_builtin (OPTION_MASK_ISA_AVX512PF, \"__builtin_ia32_scatterpfdps\",\n+  def_builtin (OPTION_MASK_ISA_AVX512PF, 0, \"__builtin_ia32_scatterpfdps\",\n \t       VOID_FTYPE_HI_V16SI_PCVOID_INT_INT,\n \t       IX86_BUILTIN_SCATTERPFDPS);\n-  def_builtin (OPTION_MASK_ISA_AVX512PF, \"__builtin_ia32_scatterpfqpd\",\n+  def_builtin (OPTION_MASK_ISA_AVX512PF, 0, \"__builtin_ia32_scatterpfqpd\",\n \t       VOID_FTYPE_QI_V8DI_PCVOID_INT_INT,\n \t       IX86_BUILTIN_SCATTERPFQPD);\n-  def_builtin (OPTION_MASK_ISA_AVX512PF, \"__builtin_ia32_scatterpfqps\",\n+  def_builtin (OPTION_MASK_ISA_AVX512PF, 0, \"__builtin_ia32_scatterpfqps\",\n \t       VOID_FTYPE_QI_V8DI_PCVOID_INT_INT,\n \t       IX86_BUILTIN_SCATTERPFQPS);\n \n   /* SHA */\n-  def_builtin_const (OPTION_MASK_ISA_SHA, \"__builtin_ia32_sha1msg1\",\n+  def_builtin_const (OPTION_MASK_ISA_SHA, 0, \"__builtin_ia32_sha1msg1\",\n \t\t     V4SI_FTYPE_V4SI_V4SI, IX86_BUILTIN_SHA1MSG1);\n-  def_builtin_const (OPTION_MASK_ISA_SHA, \"__builtin_ia32_sha1msg2\",\n+  def_builtin_const (OPTION_MASK_ISA_SHA, 0, \"__builtin_ia32_sha1msg2\",\n \t\t     V4SI_FTYPE_V4SI_V4SI, IX86_BUILTIN_SHA1MSG2);\n-  def_builtin_const (OPTION_MASK_ISA_SHA, \"__builtin_ia32_sha1nexte\",\n+  def_builtin_const (OPTION_MASK_ISA_SHA, 0, \"__builtin_ia32_sha1nexte\",\n \t\t     V4SI_FTYPE_V4SI_V4SI, IX86_BUILTIN_SHA1NEXTE);\n-  def_builtin_const (OPTION_MASK_ISA_SHA, \"__builtin_ia32_sha1rnds4\",\n+  def_builtin_const (OPTION_MASK_ISA_SHA, 0, \"__builtin_ia32_sha1rnds4\",\n \t\t     V4SI_FTYPE_V4SI_V4SI_INT, IX86_BUILTIN_SHA1RNDS4);\n-  def_builtin_const (OPTION_MASK_ISA_SHA, \"__builtin_ia32_sha256msg1\",\n+  def_builtin_const (OPTION_MASK_ISA_SHA, 0, \"__builtin_ia32_sha256msg1\",\n \t\t     V4SI_FTYPE_V4SI_V4SI, IX86_BUILTIN_SHA256MSG1);\n-  def_builtin_const (OPTION_MASK_ISA_SHA, \"__builtin_ia32_sha256msg2\",\n+  def_builtin_const (OPTION_MASK_ISA_SHA, 0, \"__builtin_ia32_sha256msg2\",\n \t\t     V4SI_FTYPE_V4SI_V4SI, IX86_BUILTIN_SHA256MSG2);\n-  def_builtin_const (OPTION_MASK_ISA_SHA, \"__builtin_ia32_sha256rnds2\",\n+  def_builtin_const (OPTION_MASK_ISA_SHA, 0, \"__builtin_ia32_sha256rnds2\",\n \t\t     V4SI_FTYPE_V4SI_V4SI_V4SI, IX86_BUILTIN_SHA256RNDS2);\n \n   /* RTM.  */\n-  def_builtin (OPTION_MASK_ISA_RTM, \"__builtin_ia32_xabort\",\n+  def_builtin (OPTION_MASK_ISA_RTM, 0, \"__builtin_ia32_xabort\",\n \t       VOID_FTYPE_UNSIGNED, IX86_BUILTIN_XABORT);\n \n   /* MMX access to the vec_init patterns.  */\n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_init_v2si\",\n+  def_builtin_const (OPTION_MASK_ISA_MMX, 0, \"__builtin_ia32_vec_init_v2si\",\n \t\t     V2SI_FTYPE_INT_INT, IX86_BUILTIN_VEC_INIT_V2SI);\n \n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_init_v4hi\",\n+  def_builtin_const (OPTION_MASK_ISA_MMX, 0, \"__builtin_ia32_vec_init_v4hi\",\n \t\t     V4HI_FTYPE_HI_HI_HI_HI,\n \t\t     IX86_BUILTIN_VEC_INIT_V4HI);\n \n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_init_v8qi\",\n+  def_builtin_const (OPTION_MASK_ISA_MMX, 0, \"__builtin_ia32_vec_init_v8qi\",\n \t\t     V8QI_FTYPE_QI_QI_QI_QI_QI_QI_QI_QI,\n \t\t     IX86_BUILTIN_VEC_INIT_V8QI);\n \n   /* Access to the vec_extract patterns.  */\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v2df\",\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, 0, \"__builtin_ia32_vec_ext_v2df\",\n \t\t     DOUBLE_FTYPE_V2DF_INT, IX86_BUILTIN_VEC_EXT_V2DF);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v2di\",\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, 0, \"__builtin_ia32_vec_ext_v2di\",\n \t\t     DI_FTYPE_V2DI_INT, IX86_BUILTIN_VEC_EXT_V2DI);\n-  def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_vec_ext_v4sf\",\n+  def_builtin_const (OPTION_MASK_ISA_SSE, 0, \"__builtin_ia32_vec_ext_v4sf\",\n \t\t     FLOAT_FTYPE_V4SF_INT, IX86_BUILTIN_VEC_EXT_V4SF);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v4si\",\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, 0, \"__builtin_ia32_vec_ext_v4si\",\n \t\t     SI_FTYPE_V4SI_INT, IX86_BUILTIN_VEC_EXT_V4SI);\n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v8hi\",\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, 0, \"__builtin_ia32_vec_ext_v8hi\",\n \t\t     HI_FTYPE_V8HI_INT, IX86_BUILTIN_VEC_EXT_V8HI);\n \n   def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A\n \t\t     /* As it uses V4HImode, we have to require -mmmx too.  */\n-\t\t     | OPTION_MASK_ISA_MMX,\n+\t\t     | OPTION_MASK_ISA_MMX, 0,\n \t\t     \"__builtin_ia32_vec_ext_v4hi\",\n \t\t     HI_FTYPE_V4HI_INT, IX86_BUILTIN_VEC_EXT_V4HI);\n \n-  def_builtin_const (OPTION_MASK_ISA_MMX, \"__builtin_ia32_vec_ext_v2si\",\n+  def_builtin_const (OPTION_MASK_ISA_MMX, 0, \"__builtin_ia32_vec_ext_v2si\",\n \t\t     SI_FTYPE_V2SI_INT, IX86_BUILTIN_VEC_EXT_V2SI);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_ext_v16qi\",\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, 0, \"__builtin_ia32_vec_ext_v16qi\",\n \t\t     QI_FTYPE_V16QI_INT, IX86_BUILTIN_VEC_EXT_V16QI);\n \n   /* Access to the vec_set patterns.  */\n-  def_builtin_const (OPTION_MASK_ISA_SSE4_1 | OPTION_MASK_ISA_64BIT,\n+  def_builtin_const (OPTION_MASK_ISA_SSE4_1 | OPTION_MASK_ISA_64BIT, 0,\n \t\t     \"__builtin_ia32_vec_set_v2di\",\n \t\t     V2DI_FTYPE_V2DI_DI_INT, IX86_BUILTIN_VEC_SET_V2DI);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_vec_set_v4sf\",\n+  def_builtin_const (OPTION_MASK_ISA_SSE4_1, 0, \"__builtin_ia32_vec_set_v4sf\",\n \t\t     V4SF_FTYPE_V4SF_FLOAT_INT, IX86_BUILTIN_VEC_SET_V4SF);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_vec_set_v4si\",\n+  def_builtin_const (OPTION_MASK_ISA_SSE4_1, 0, \"__builtin_ia32_vec_set_v4si\",\n \t\t     V4SI_FTYPE_V4SI_SI_INT, IX86_BUILTIN_VEC_SET_V4SI);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE2, \"__builtin_ia32_vec_set_v8hi\",\n+  def_builtin_const (OPTION_MASK_ISA_SSE2, 0, \"__builtin_ia32_vec_set_v8hi\",\n \t\t     V8HI_FTYPE_V8HI_HI_INT, IX86_BUILTIN_VEC_SET_V8HI);\n \n   def_builtin_const (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A\n \t\t     /* As it uses V4HImode, we have to require -mmmx too.  */\n-\t\t     | OPTION_MASK_ISA_MMX,\n+\t\t     | OPTION_MASK_ISA_MMX, 0,\n \t\t     \"__builtin_ia32_vec_set_v4hi\",\n \t\t     V4HI_FTYPE_V4HI_HI_INT, IX86_BUILTIN_VEC_SET_V4HI);\n \n-  def_builtin_const (OPTION_MASK_ISA_SSE4_1, \"__builtin_ia32_vec_set_v16qi\",\n+  def_builtin_const (OPTION_MASK_ISA_SSE4_1, 0, \"__builtin_ia32_vec_set_v16qi\",\n \t\t     V16QI_FTYPE_V16QI_QI_INT, IX86_BUILTIN_VEC_SET_V16QI);\n \n   /* RDSEED */\n-  def_builtin (OPTION_MASK_ISA_RDSEED, \"__builtin_ia32_rdseed_hi_step\",\n+  def_builtin (OPTION_MASK_ISA_RDSEED, 0, \"__builtin_ia32_rdseed_hi_step\",\n \t       INT_FTYPE_PUSHORT, IX86_BUILTIN_RDSEED16_STEP);\n-  def_builtin (OPTION_MASK_ISA_RDSEED, \"__builtin_ia32_rdseed_si_step\",\n+  def_builtin (OPTION_MASK_ISA_RDSEED, 0, \"__builtin_ia32_rdseed_si_step\",\n \t       INT_FTYPE_PUNSIGNED, IX86_BUILTIN_RDSEED32_STEP);\n-  def_builtin (OPTION_MASK_ISA_RDSEED | OPTION_MASK_ISA_64BIT,\n+  def_builtin (OPTION_MASK_ISA_RDSEED | OPTION_MASK_ISA_64BIT, 0,\n \t       \"__builtin_ia32_rdseed_di_step\",\n \t       INT_FTYPE_PULONGLONG, IX86_BUILTIN_RDSEED64_STEP);\n \n   /* ADCX */\n-  def_builtin (0, \"__builtin_ia32_addcarryx_u32\",\n+  def_builtin (0, 0, \"__builtin_ia32_addcarryx_u32\",\n \t       UCHAR_FTYPE_UCHAR_UINT_UINT_PUNSIGNED, IX86_BUILTIN_ADDCARRYX32);\n-  def_builtin (OPTION_MASK_ISA_64BIT,\n+  def_builtin (OPTION_MASK_ISA_64BIT, 0,\n \t       \"__builtin_ia32_addcarryx_u64\",\n \t       UCHAR_FTYPE_UCHAR_ULONGLONG_ULONGLONG_PULONGLONG,\n \t       IX86_BUILTIN_ADDCARRYX64);\n \n   /* SBB */\n-  def_builtin (0, \"__builtin_ia32_sbb_u32\",\n+  def_builtin (0, 0, \"__builtin_ia32_sbb_u32\",\n \t       UCHAR_FTYPE_UCHAR_UINT_UINT_PUNSIGNED, IX86_BUILTIN_SBB32);\n-  def_builtin (OPTION_MASK_ISA_64BIT,\n+  def_builtin (OPTION_MASK_ISA_64BIT, 0,\n \t       \"__builtin_ia32_sbb_u64\",\n \t       UCHAR_FTYPE_UCHAR_ULONGLONG_ULONGLONG_PULONGLONG,\n \t       IX86_BUILTIN_SBB64);\n \n   /* Read/write FLAGS.  */\n   if (TARGET_64BIT)\n     {\n-      def_builtin (OPTION_MASK_ISA_64BIT, \"__builtin_ia32_readeflags_u64\",\n+      def_builtin (OPTION_MASK_ISA_64BIT, 0, \"__builtin_ia32_readeflags_u64\",\n \t\t   UINT64_FTYPE_VOID, IX86_BUILTIN_READ_FLAGS);\n-      def_builtin (OPTION_MASK_ISA_64BIT, \"__builtin_ia32_writeeflags_u64\",\n+      def_builtin (OPTION_MASK_ISA_64BIT, 0, \"__builtin_ia32_writeeflags_u64\",\n \t\t   VOID_FTYPE_UINT64, IX86_BUILTIN_WRITE_FLAGS);\n     }\n   else\n     {\n-      def_builtin (0, \"__builtin_ia32_readeflags_u32\",\n+      def_builtin (0, 0, \"__builtin_ia32_readeflags_u32\",\n \t\t   UNSIGNED_FTYPE_VOID, IX86_BUILTIN_READ_FLAGS);\n-      def_builtin (0, \"__builtin_ia32_writeeflags_u32\",\n+      def_builtin (0, 0, \"__builtin_ia32_writeeflags_u32\",\n \t\t   VOID_FTYPE_UNSIGNED, IX86_BUILTIN_WRITE_FLAGS);\n     }\n \n   /* CLFLUSHOPT.  */\n-  def_builtin (OPTION_MASK_ISA_CLFLUSHOPT, \"__builtin_ia32_clflushopt\",\n+  def_builtin (OPTION_MASK_ISA_CLFLUSHOPT, 0, \"__builtin_ia32_clflushopt\",\n \t       VOID_FTYPE_PCVOID, IX86_BUILTIN_CLFLUSHOPT);\n \n   /* CLWB.  */\n-  def_builtin (OPTION_MASK_ISA_CLWB, \"__builtin_ia32_clwb\",\n+  def_builtin (OPTION_MASK_ISA_CLWB, 0, \"__builtin_ia32_clwb\",\n \t       VOID_FTYPE_PCVOID, IX86_BUILTIN_CLWB);\n \n   /* MONITORX and MWAITX.  */\n-  def_builtin2 (OPTION_MASK_ISA_MWAITX, \"__builtin_ia32_monitorx\",\n+  def_builtin (0, OPTION_MASK_ISA_MWAITX, \"__builtin_ia32_monitorx\",\n \t\tVOID_FTYPE_PCVOID_UNSIGNED_UNSIGNED, IX86_BUILTIN_MONITORX);\n-  def_builtin2 (OPTION_MASK_ISA_MWAITX, \"__builtin_ia32_mwaitx\",\n+  def_builtin (0, OPTION_MASK_ISA_MWAITX, \"__builtin_ia32_mwaitx\",\n \t\tVOID_FTYPE_UNSIGNED_UNSIGNED_UNSIGNED, IX86_BUILTIN_MWAITX);\n \n   /* CLZERO.  */\n-  def_builtin2 (OPTION_MASK_ISA_CLZERO, \"__builtin_ia32_clzero\",\n+  def_builtin (0, OPTION_MASK_ISA_CLZERO, \"__builtin_ia32_clzero\",\n \t\tVOID_FTYPE_PCVOID, IX86_BUILTIN_CLZERO);\n \n   /* WAITPKG.  */\n-  def_builtin2 (OPTION_MASK_ISA_WAITPKG, \"__builtin_ia32_umonitor\",\n+  def_builtin (0, OPTION_MASK_ISA_WAITPKG, \"__builtin_ia32_umonitor\",\n \t       VOID_FTYPE_PVOID, IX86_BUILTIN_UMONITOR);\n-  def_builtin2 (OPTION_MASK_ISA_WAITPKG, \"__builtin_ia32_umwait\",\n+  def_builtin (0, OPTION_MASK_ISA_WAITPKG, \"__builtin_ia32_umwait\",\n \t       UINT8_FTYPE_UNSIGNED_UINT64, IX86_BUILTIN_UMWAIT);\n-  def_builtin2 (OPTION_MASK_ISA_WAITPKG, \"__builtin_ia32_tpause\",\n+  def_builtin (0, OPTION_MASK_ISA_WAITPKG, \"__builtin_ia32_tpause\",\n \t       UINT8_FTYPE_UNSIGNED_UINT64, IX86_BUILTIN_TPAUSE);\n \n   /* CLDEMOTE.  */\n-  def_builtin2 (OPTION_MASK_ISA_CLDEMOTE, \"__builtin_ia32_cldemote\",\n+  def_builtin (0, OPTION_MASK_ISA_CLDEMOTE, \"__builtin_ia32_cldemote\",\n \t       VOID_FTYPE_PCVOID, IX86_BUILTIN_CLDEMOTE);\n \n   /* Add FMA4 multi-arg argument instructions */\n@@ -31597,7 +31506,7 @@ ix86_init_mmx_sse_builtins (void)\n \tcontinue;\n \n       ftype = (enum ix86_builtin_func_type) d->flag;\n-      def_builtin_const (d->mask, d->name, ftype, d->code);\n+      def_builtin_const (d->mask, d->mask2, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_MULTI_ARG_LAST,\n \t\t IX86_BUILTIN__BDESC_MULTI_ARG_FIRST,\n@@ -31611,7 +31520,7 @@ ix86_init_mmx_sse_builtins (void)\n \tcontinue;\n \n       ftype = (enum ix86_builtin_func_type) d->flag;\n-      def_builtin (d->mask, d->name, ftype, d->code);\n+      def_builtin (d->mask, d->mask2, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_CET_LAST,\n \t\t IX86_BUILTIN__BDESC_CET_FIRST,\n@@ -31626,7 +31535,7 @@ ix86_init_mmx_sse_builtins (void)\n \tcontinue;\n \n       ftype = (enum ix86_builtin_func_type) d->flag;\n-      def_builtin (d->mask, d->name, ftype, d->code);\n+      def_builtin (d->mask, d->mask2, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_CET_NORMAL_LAST,\n \t\t IX86_BUILTIN__BDESC_CET_NORMAL_FIRST,\n@@ -33844,9 +33753,9 @@ ix86_init_builtins (void)\n   ix86_init_platform_type_builtins ();\n \n   /* TFmode support builtins.  */\n-  def_builtin_const (0, \"__builtin_infq\",\n+  def_builtin_const (0, 0, \"__builtin_infq\",\n \t\t     FLOAT128_FTYPE_VOID, IX86_BUILTIN_INFQ);\n-  def_builtin_const (0, \"__builtin_huge_valq\",\n+  def_builtin_const (0, 0, \"__builtin_huge_valq\",\n \t\t     FLOAT128_FTYPE_VOID, IX86_BUILTIN_HUGE_VALQ);\n \n   ftype = ix86_get_builtin_func_type (FLOAT128_FTYPE_CONST_STRING);\n@@ -38325,35 +38234,10 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \t\t\t\t\t       target);\n     }\n \n-  if (fcode >= IX86_BUILTIN__BDESC_SPECIAL_ARGS2_FIRST\n-      && fcode <= IX86_BUILTIN__BDESC_SPECIAL_ARGS2_LAST)\n-    {\n-      i = fcode - IX86_BUILTIN__BDESC_SPECIAL_ARGS2_FIRST;\n-      return ix86_expand_special_args_builtin (bdesc_special_args2 + i, exp,\n-\t\t\t\t\t       target);\n-    }\n-\n   if (fcode >= IX86_BUILTIN__BDESC_ARGS_FIRST\n       && fcode <= IX86_BUILTIN__BDESC_ARGS_LAST)\n     {\n       i = fcode - IX86_BUILTIN__BDESC_ARGS_FIRST;\n-      switch (fcode)\n-\t{\n-\tcase IX86_BUILTIN_FABSQ:\n-\tcase IX86_BUILTIN_COPYSIGNQ:\n-\t  if (!TARGET_SSE)\n-\t    /* Emit a normal call if SSE isn't available.  */\n-\t    return expand_call (exp, target, ignore);\n-\t  /* FALLTHRU */\n-\tdefault:\n-\t  return ix86_expand_args_builtin (bdesc_args + i, exp, target);\n-\t}\n-    }\n-\n-  if (fcode >= IX86_BUILTIN__BDESC_ARGS2_FIRST\n-      && fcode <= IX86_BUILTIN__BDESC_ARGS2_LAST)\n-    {\n-      i = fcode - IX86_BUILTIN__BDESC_ARGS2_FIRST;\n       rtx (*fcn) (rtx, rtx, rtx, rtx) = NULL;\n       rtx (*fcn_mask) (rtx, rtx, rtx, rtx, rtx);\n       rtx (*fcn_maskz) (rtx, rtx, rtx, rtx, rtx, rtx);\n@@ -38578,10 +38462,16 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \t      return target;\n \t    }\n \t  case IX86_BUILTIN_RDPID:\n-\t    return ix86_expand_special_args_builtin (bdesc_args2 + i, exp,\n+\t    return ix86_expand_special_args_builtin (bdesc_args + i, exp,\n \t\t\t\t\t\t     target);\n+\t  case IX86_BUILTIN_FABSQ:\n+\t  case IX86_BUILTIN_COPYSIGNQ:\n+\t    if (!TARGET_SSE)\n+\t      /* Emit a normal call if SSE isn't available.  */\n+\t      return expand_call (exp, target, ignore);\n+\t    /* FALLTHRU */\n \t  default:\n-\t    return ix86_expand_args_builtin (bdesc_args2 + i, exp, target);\n+\t    return ix86_expand_args_builtin (bdesc_args + i, exp, target);\n \t  }\n     }\n "}]}