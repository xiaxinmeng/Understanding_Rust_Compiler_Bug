{"sha": "37e4d57b99efe65710bb4a000093c596ab3f5124", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdlNGQ1N2I5OWVmZTY1NzEwYmI0YTAwMDA5M2M1OTZhYjNmNTEyNA==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2017-10-26T16:34:03Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2017-10-26T16:34:03Z"}, "message": "Improve addressing of TI/TFmode\n\nIn https://gcc.gnu.org/ml/gcc-patches/2017-06/msg01125.html Jiong\npointed out some addressing inefficiencies due to a recent change in\nregcprop (https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00775.html).\n\nThis patch improves aarch64_legitimize_address_displacement to split\nunaligned offsets of TImode and TFmode accesses.  The resulting code\nis better and no longer relies on the original regcprop optimization.\n\nFor the test we now produce:\n\n\tadd\tx1, sp, 4\n\tstp\txzr, xzr, [x1, 24]\n\nrather than:\n\n        mov     x1, sp\n        add     x1, x1, 28\n        stp     xzr, xzr, [x1]\n\n    gcc/\n\t* config/aarch64/aarch64.c (aarch64_legitimize_address_displacement):\n\tImprove unaligned TImode/TFmode base/offset split.\n\n    testsuite/\n\t* gcc.target/aarch64/ldp_stp_unaligned_2.c: New file.\n\nFrom-SVN: r254111", "tree": {"sha": "c50f11ebc27468dce659470f8cae33c57099bdf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c50f11ebc27468dce659470f8cae33c57099bdf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37e4d57b99efe65710bb4a000093c596ab3f5124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e4d57b99efe65710bb4a000093c596ab3f5124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37e4d57b99efe65710bb4a000093c596ab3f5124", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e4d57b99efe65710bb4a000093c596ab3f5124/comments", "author": null, "committer": null, "parents": [{"sha": "9eaf97d6d7f1511638fb9209b7acf30e8f26a060", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eaf97d6d7f1511638fb9209b7acf30e8f26a060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eaf97d6d7f1511638fb9209b7acf30e8f26a060"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "7e0417ba60ca72842b9093917e5417adb40c2945", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e4d57b99efe65710bb4a000093c596ab3f5124/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e4d57b99efe65710bb4a000093c596ab3f5124/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37e4d57b99efe65710bb4a000093c596ab3f5124", "patch": "@@ -1,3 +1,8 @@\n+2017-10-26  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_legitimize_address_displacement):\n+\tImprove unaligned TImode/TFmode base/offset split.\n+\n 2017-10-26  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "83630fce1cce85b4d5beece2fa303ab09b9ac4dd", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e4d57b99efe65710bb4a000093c596ab3f5124/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e4d57b99efe65710bb4a000093c596ab3f5124/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=37e4d57b99efe65710bb4a000093c596ab3f5124", "patch": "@@ -4727,16 +4727,20 @@ aarch64_legitimate_address_p (machine_mode mode, rtx x,\n /* Split an out-of-range address displacement into a base and offset.\n    Use 4KB range for 1- and 2-byte accesses and a 16KB range otherwise\n    to increase opportunities for sharing the base address of different sizes.\n-   For unaligned accesses and TI/TF mode use the signed 9-bit range.  */\n+   Unaligned accesses use the signed 9-bit range, TImode/TFmode use\n+   the intersection of signed scaled 7-bit and signed 9-bit offset.  */\n static bool\n aarch64_legitimize_address_displacement (rtx *disp, rtx *off, machine_mode mode)\n {\n   HOST_WIDE_INT offset = INTVAL (*disp);\n-  HOST_WIDE_INT base = offset & ~(GET_MODE_SIZE (mode) < 4 ? 0xfff : 0x3ffc);\n+  HOST_WIDE_INT base;\n \n-  if (mode == TImode || mode == TFmode\n-      || (offset & (GET_MODE_SIZE (mode) - 1)) != 0)\n+  if (mode == TImode || mode == TFmode)\n+    base = (offset + 0x100) & ~0x1f8;\n+  else if ((offset & (GET_MODE_SIZE (mode) - 1)) != 0)\n     base = (offset + 0x100) & ~0x1ff;\n+  else\n+    base = offset & ~(GET_MODE_SIZE (mode) < 4 ? 0xfff : 0x3ffc);\n \n   *off = GEN_INT (base);\n   *disp = GEN_INT (offset - base);"}, {"sha": "283c78718a9724b045c71a39a8158405a0cdb616", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e4d57b99efe65710bb4a000093c596ab3f5124/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e4d57b99efe65710bb4a000093c596ab3f5124/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37e4d57b99efe65710bb4a000093c596ab3f5124", "patch": "@@ -1,3 +1,7 @@\n+2017-10-26  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* gcc.target/aarch64/ldp_stp_unaligned_2.c: New file.\n+\n 2017-10-26  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.target/arm/require-pic-register-loc.c: Use wider regex for"}, {"sha": "1e46755a39a0b97fa7af704086f82ffd5a216fb4", "filename": "gcc/testsuite/gcc.target/aarch64/ldp_stp_unaligned_2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e4d57b99efe65710bb4a000093c596ab3f5124/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fldp_stp_unaligned_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e4d57b99efe65710bb4a000093c596ab3f5124/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fldp_stp_unaligned_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fldp_stp_unaligned_2.c?ref=37e4d57b99efe65710bb4a000093c596ab3f5124", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-options \"-O2 -fomit-frame-pointer\" } */\n+\n+/* Check that we split unaligned LDP/STP into base and aligned offset.  */\n+\n+typedef struct\n+{\n+  int a, b, c, d, e;\n+} S;\n+\n+void foo (S *);\n+\n+void test (int x)\n+{\n+  S s = { .a = x };\n+  foo (&s);\n+}\n+\n+/* { dg-final { scan-assembler-not \"mov\\tx\\[0-9\\]+, sp\" } } */"}]}