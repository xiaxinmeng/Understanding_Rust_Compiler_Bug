{"sha": "51a9f20ca91d656734198405f8955e33adb54189", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFhOWYyMGNhOTFkNjU2NzM0MTk4NDA1Zjg5NTVlMzNhZGI1NDE4OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-10-30T12:45:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-10-30T12:45:53Z"}, "message": "revert: [multiple changes]\n\n2017-10-30  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82762\n\tRevert\n\t2017-10-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82129\n\tRevert\n\t2017-08-01  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/81181\n\t* tree-ssa-pre.c (compute_antic_aux): Defer clean() to ...\n\t(compute_antic): ... end of iteration here.\n\n\t* gcc.dg/torture/pr82762.c: New testcase.\n\nFrom-SVN: r254218", "tree": {"sha": "c36bee2e8670bcffc7493b2bc3a32dc64b7a16d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c36bee2e8670bcffc7493b2bc3a32dc64b7a16d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51a9f20ca91d656734198405f8955e33adb54189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a9f20ca91d656734198405f8955e33adb54189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51a9f20ca91d656734198405f8955e33adb54189", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a9f20ca91d656734198405f8955e33adb54189/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1136864438968b76d5063c1af99118c19b1cf83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1136864438968b76d5063c1af99118c19b1cf83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1136864438968b76d5063c1af99118c19b1cf83"}], "stats": {"total": 77, "additions": 75, "deletions": 2}, "files": [{"sha": "5468ee672430adcdca19fb02bca420eb21370021", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a9f20ca91d656734198405f8955e33adb54189/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a9f20ca91d656734198405f8955e33adb54189/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51a9f20ca91d656734198405f8955e33adb54189", "patch": "@@ -1,3 +1,17 @@\n+2017-10-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82762\n+\tRevert\n+\t2017-10-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82129\n+\tRevert\n+\t2017-08-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81181\n+\t* tree-ssa-pre.c (compute_antic_aux): Defer clean() to ...\n+\t(compute_antic): ... end of iteration here.\n+\n 2017-10-30  Joseph Myers  <joseph@codesourcery.com>\n \n \t* doc/invoke.texi (C Dialect Options): Document -std=c17,"}, {"sha": "a5cb0ca25566c745a80525d48707946787c19111", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a9f20ca91d656734198405f8955e33adb54189/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a9f20ca91d656734198405f8955e33adb54189/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51a9f20ca91d656734198405f8955e33adb54189", "patch": "@@ -1,3 +1,8 @@\n+2017-10-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82762\n+\t* gcc.dg/torture/pr82762.c: New testcase.\n+\n 2017-10-30  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/gimplefe-27.c: New testcase."}, {"sha": "d4f57bc55f7dcc92d00bb92c417741035f7b4902", "filename": "gcc/testsuite/gcc.dg/torture/pr82762.c", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a9f20ca91d656734198405f8955e33adb54189/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82762.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a9f20ca91d656734198405f8955e33adb54189/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82762.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82762.c?ref=51a9f20ca91d656734198405f8955e33adb54189", "patch": "@@ -0,0 +1,46 @@\n+/* { dg-do compile } */\n+\n+int printf (const char *, ...);\n+\n+int b, c, d, e, f, g, j, k;\n+char h, i;\n+volatile int l;\n+\n+int m (int n, int o)\n+{ \n+  return o < 0 || o > 1 ? n : o;\n+}\n+\n+int p (int n, unsigned o)\n+{ \n+  return n - o;\n+}\n+\n+int q ()\n+{ \n+  char r;\n+  int a, s, t, u, v, w;\n+L:\n+  if (t)\n+    printf (\"%d\", d);\n+  u = v;\n+  while (j)\n+    { \n+      while (e)\n+\tfor (w = 0; w != 54; w += 6)\n+\t  { \n+\t    l;\n+\t    s = p (u < 1, i || c);\n+\t    r = s < 0 || s > 1 ? 0 : 1 >> s;\n+\t    v = r;\n+\t    g = h;\n+\t  }\n+      if (h)\n+\treturn f;\n+      if (u)\n+\tfor (a = 0; a != 54; a += 6)\n+\t  f = m (2, -(k || b));\n+    }\n+  d = t;\n+  goto L;\n+}"}, {"sha": "281f100ada2ec0bcecfca12e14acdb73e2014e2f", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a9f20ca91d656734198405f8955e33adb54189/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a9f20ca91d656734198405f8955e33adb54189/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=51a9f20ca91d656734198405f8955e33adb54189", "patch": "@@ -2029,7 +2029,8 @@ static sbitmap has_abnormal_preds;\n      ANTIC_OUT[BLOCK] = phi_translate (ANTIC_IN[succ(BLOCK)])\n \n    ANTIC_IN[BLOCK] = clean(ANTIC_OUT[BLOCK] U EXP_GEN[BLOCK] - TMP_GEN[BLOCK])\n-*/\n+\n+   Note that clean() is deferred until after the iteration.  */\n \n static bool\n compute_antic_aux (basic_block block, bool block_has_abnormal_pred_edge)\n@@ -2165,7 +2166,8 @@ compute_antic_aux (basic_block block, bool block_has_abnormal_pred_edge)\n     bitmap_value_insert_into_set (ANTIC_IN (block),\n \t\t\t\t  expression_for_id (bii));\n \n-  clean (ANTIC_IN (block));\n+  /* clean (ANTIC_IN (block)) is defered to after the iteration converged\n+     because it can cause non-convergence, see for example PR81181.  */\n \n   if (!bitmap_set_equal (old, ANTIC_IN (block)))\n     changed = true;\n@@ -2397,6 +2399,12 @@ compute_antic (void)\n       gcc_checking_assert (num_iterations < 500);\n     }\n \n+  /* We have to clean after the dataflow problem converged as cleaning\n+     can cause non-convergence because it is based on expressions\n+     rather than values.  */\n+  FOR_EACH_BB_FN (block, cfun)\n+    clean (ANTIC_IN (block));\n+\n   statistics_histogram_event (cfun, \"compute_antic iterations\",\n \t\t\t      num_iterations);\n "}]}