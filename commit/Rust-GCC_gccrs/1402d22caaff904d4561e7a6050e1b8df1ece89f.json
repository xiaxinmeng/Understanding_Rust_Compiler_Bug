{"sha": "1402d22caaff904d4561e7a6050e1b8df1ece89f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQwMmQyMmNhYWZmOTA0ZDQ1NjFlN2E2MDUwZTFiOGRmMWVjZTg5Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-04T04:40:25Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-04T04:40:25Z"}, "message": "(install): Add semicolon to make an empty command.\n\n(SYSTEM_HEADER_DIR): New variable.\n(xlimits.h): New target, broken out from install-limits-h.\nLook in SYSTEM_HEADER_DIR for system's limits.h.\n(start.encap): Dep on xlimits.h.\n(install-limits-h): Install xlimits.h already made.\n\nFrom-SVN: r2050", "tree": {"sha": "113a1e177783057135f968a0291d3157c28b6ec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/113a1e177783057135f968a0291d3157c28b6ec9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1402d22caaff904d4561e7a6050e1b8df1ece89f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1402d22caaff904d4561e7a6050e1b8df1ece89f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1402d22caaff904d4561e7a6050e1b8df1ece89f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1402d22caaff904d4561e7a6050e1b8df1ece89f/comments", "author": null, "committer": null, "parents": [{"sha": "39fa3485494de7fae8850e58cc0213cef37683a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39fa3485494de7fae8850e58cc0213cef37683a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39fa3485494de7fae8850e58cc0213cef37683a9"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "47cfff57c71178d66873cf493283297999446af8", "filename": "gcc/Makefile.in", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1402d22caaff904d4561e7a6050e1b8df1ece89f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1402d22caaff904d4561e7a6050e1b8df1ece89f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=1402d22caaff904d4561e7a6050e1b8df1ece89f", "patch": "@@ -113,6 +113,9 @@ RANLIB_FOR_TARGET = $(TARGET_TOOLPREFIX)ranlib\n RANLIB_TEST_FOR_TARGET = [ -f $(TARGET_TOOLPREFIX)ranlib ]\n CROSS_TOOLS =\n \n+# Dir to search for system headers.  Overridden by cross-make.\n+SYSTEM_HEADER_DIR = /usr/include\n+\n # There may be a premade insn-attrtab.c for this machine.\n # (You could rebuild it with genattrtab as usual, but it takes a long time.)\n # PREMADE_ATTRTAB is the file name of the file to use.\n@@ -416,7 +419,7 @@ all.internal: start.encap rest.encap\n # This is what to compile if making a cross-compiler.\n all.cross: native gcc-cross libgcc.a cross-test $(EXTRA_PARTS)\n # This is what must be made before installing GCC and converting libraries.\n-start.encap: native xgcc specs $(LIBGCC1)\n+start.encap: native xgcc specs $(LIBGCC1) xlimits.h\n # Use this to make a GCC that will be used only to recompile GCC.\n for-bootstrap: start.encap libgcc.a\n # These can't be made, with COFF encapsulation, until after GCC can run.\n@@ -496,6 +499,14 @@ enquire.o: $(srcdir)/enquire.c $(GCC_PASSES)\n #\t-cp $(srcdir)/enquire.c . > /dev/null 2>&1\n # Breaking this line caused a problem with one version of GNU make.\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(ENQUIRE_CFLAGS) -I. -c $(srcdir)/enquire.c\n+\n+# Build the version of limits.h that we will install.\n+xlimits.h: glimits.h limitx.h limity.h\n+\tif [ -f $(SYSTEM_HEADER_DIR)/limits.h ] ; then \\\n+\t  cat $(srcdir)/limitx.h $(srcdir)/glimits.h $(srcdir)/limity.h > xlimits.h; \\\n+\telse \\\n+\t  cat $(srcdir)/glimits.h > xlimits.h; \\\n+\tfi\n \f\n # Build libgcc.a.\n # This is done in two parts because some functions, in libgcc1.c,\n@@ -878,6 +889,13 @@ alloca.o:\talloca.c\n \n # Each of the other insn-* files is handled by a similar pair of rules.\n \n+# This causes an anomaly in the results of make -n\n+# because insn-* is older than stamp-*\n+# and thus make -n thinks that insn-* will be updated\n+# and force recompilation of things that depend on it.\n+# We use move-if-changed precisely to avoid such recompilation.\n+# But there is no way to teach make -n that it will be avoided.\n+\n # Each of the insn-*.[ch] rules has a semicolon at the end,\n # for otherwise the system Make on SunOS 4.1 never tries\n # to recompile insn-*.o.\n@@ -1273,7 +1291,9 @@ realclean: distclean\n # Also temporarily `install-fixincludes' could replace `install-headers'.\n # Also use `install-collect2' to install collect2 when the config files don't.\n \n-install: $(INSTALL_TARGET)\n+# The semicolon is to prevent the install.sh -> install default rule\n+# from doing anything.\n+install: $(INSTALL_TARGET) ;\n \n # Copy the files of native compiler into directories where they will be run.\n install-native: install-common install-libgcc $(INSTALL_HEADERS) \\\n@@ -1442,16 +1462,10 @@ install-float-h: float.h install-dir\n \tchmod a-x $(libsubdir)/include/float.h\n \n # Install limits.h, optionally inheriting from the standard system version.\n-install-limits-h: glimits.h limitx.h install-dir\n-\t-rm -f $(libsubdir)/include/limits.h tmp-limits.h\n-\tif [ -f /usr/include/limits.h ] ; then \\\n-\t  cat $(srcdir)/limitx.h $(srcdir)/glimits.h $(srcdir)/limity.h > tmp-limits.h; \\\n-\telse \\\n-\t  cat $(srcdir)/glimits.h > tmp-limits.h; \\\n-\tfi\n-\t$(INSTALL_DATA) tmp-limits.h $(libsubdir)/include/limits.h\n+install-limits-h: xlimits.h install-dir\n+\t-rm -f $(libsubdir)/include/limits.h\n+\t$(INSTALL_DATA) xlimits.h $(libsubdir)/include/limits.h\n \tchmod a-x $(libsubdir)/include/limits.h\n-\trm tmp-limits.h\n \n # Install the fixed headers that are the same for all machines.\n install-common-headers: install-dir $(USER_H) gvarargs.h gstdarg.h gstddef.h"}]}