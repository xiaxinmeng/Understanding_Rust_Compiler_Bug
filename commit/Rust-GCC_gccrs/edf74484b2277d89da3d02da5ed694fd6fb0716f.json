{"sha": "edf74484b2277d89da3d02da5ed694fd6fb0716f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRmNzQ0ODRiMjI3N2Q4OWRhM2QwMmRhNWVkNjk0ZmQ2ZmIwNzE2Zg==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2004-05-29T05:11:41Z"}, "committer": {"name": "Ranjit Mathew", "email": "rmathew@gcc.gnu.org", "date": "2004-05-29T05:11:41Z"}, "message": "java-tree.h (DECL_LOCAL_FINAL_IUD): New macro to test if a local variable was initialised upon declaration.\n\n\t* java-tree.h (DECL_LOCAL_FINAL_IUD): New macro to test if a\n\tlocal variable was initialised upon declaration.\n\t* parse.y (declare_local_variables): Set DECL_LOCAL_FINAL_IUD if\n\tvariable was final and initialised upon declaration.\n\t* check-init.c (check_final_reassigned): Give error only if a blank\n\tfinal is not definitely unassigned or if an initialised final is\n\treassigned.\n\t(check_bool_init): Respect JLS2 16.1.7 requirements for boolean\n\tassignment expressions. Remove case MODIFY_EXPR, label do_default.\n\t(check_init): Perform initialised-variable-removing-optimisation\n\tonly on non-final local variables.\n\nCo-Authored-By: Per Bothner <per@bothner.com>\n\nFrom-SVN: r82416", "tree": {"sha": "fa7c6c430b62609bd2e6979cf8f506515595ec7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa7c6c430b62609bd2e6979cf8f506515595ec7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edf74484b2277d89da3d02da5ed694fd6fb0716f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf74484b2277d89da3d02da5ed694fd6fb0716f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edf74484b2277d89da3d02da5ed694fd6fb0716f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf74484b2277d89da3d02da5ed694fd6fb0716f/comments", "author": null, "committer": null, "parents": [{"sha": "27e1a8d2eebf19730394a178567c775dd39ac248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e1a8d2eebf19730394a178567c775dd39ac248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27e1a8d2eebf19730394a178567c775dd39ac248"}], "stats": {"total": 55, "additions": 30, "deletions": 25}, "files": [{"sha": "05d61d1b02bf3bad4553ebf5338d9561d21af0b7", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf74484b2277d89da3d02da5ed694fd6fb0716f/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf74484b2277d89da3d02da5ed694fd6fb0716f/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=edf74484b2277d89da3d02da5ed694fd6fb0716f", "patch": "@@ -1,3 +1,18 @@\n+2004-05-29  Ranjit Mathew  <rmathew@hotmail.com>\n+            Per Bothner  <per@bothner.com>\n+\n+\t* java-tree.h (DECL_LOCAL_FINAL_IUD): New macro to test if a\n+\tlocal variable was initialised upon declaration.\n+\t* parse.y (declare_local_variables): Set DECL_LOCAL_FINAL_IUD if\n+\tvariable was final and initialised upon declaration.\n+\t* check-init.c (check_final_reassigned): Give error only if a blank\n+\tfinal is not definitely unassigned or if an initialised final is\n+\treassigned.\n+\t(check_bool_init): Respect JLS2 16.1.7 requirements for boolean\n+\tassignment expressions. Remove case MODIFY_EXPR, label do_default.\n+\t(check_init): Perform initialised-variable-removing-optimisation\n+\tonly on non-final local variables.\n+\n 2004-05-28  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* jcf-write.c (generate_bytecode_conditional): Handle binops "}, {"sha": "3ec8d6488214d80119bc530405a7f0a46b81194f", "filename": "gcc/java/check-init.c", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf74484b2277d89da3d02da5ed694fd6fb0716f/gcc%2Fjava%2Fcheck-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf74484b2277d89da3d02da5ed694fd6fb0716f/gcc%2Fjava%2Fcheck-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fcheck-init.c?ref=edf74484b2277d89da3d02da5ed694fd6fb0716f", "patch": "@@ -210,7 +210,8 @@ check_final_reassigned (tree decl, words before)\n      assigned must be reported as errors */\n   if (DECL_FINAL (decl) && index != -2\n       && (index < loop_current_locals /* I.e. -1, or outside current loop. */\n-\t  || ! UNASSIGNED_P (before, index)))\n+          || (DECL_LOCAL_FINAL_IUD (decl) ? ASSIGNED_P (before, index)\n+              : ! UNASSIGNED_P (before, index))))\n     {\n       final_assign_error (DECL_NAME (decl));\n     }\n@@ -337,27 +338,6 @@ check_bool_init (tree exp, words before, words when_false, words when_true)\n     case TRUTH_NOT_EXPR:\n       check_bool_init (TREE_OPERAND (exp, 0), before, when_true, when_false);\n       return;\n-    case MODIFY_EXPR:\n-      {\n-\ttree tmp = TREE_OPERAND (exp, 0);\n-\tif ((tmp = get_variable_decl (tmp)) != NULL_TREE)\n-\t  {\n-\t    int index;\n-\t    check_bool_init (TREE_OPERAND (exp, 1), before,\n-\t\t\t     when_false, when_true);\n-\t    check_final_reassigned (tmp, before);\n-\t    index = DECL_BIT_INDEX (tmp);\n-\t    if (index >= 0)\n-\t      {\n-\t\tSET_ASSIGNED (when_false, index);\n-\t\tSET_ASSIGNED (when_true, index);\n-\t\tCLEAR_UNASSIGNED (when_false, index);\n-\t\tCLEAR_UNASSIGNED (when_true, index);\n-\t      }\n-\t    break;\n-\t  }\n-      }\n-      goto do_default;\n \n     case BIT_AND_EXPR:\n     case BIT_IOR_EXPR:\n@@ -390,8 +370,8 @@ check_bool_init (tree exp, words before, words when_false, words when_true)\n \t  COPY (when_true, before);\n \t}\n       break;\n+\n     default:\n-    do_default:\n       check_init (exp, before);\n       COPY (when_false, before);\n       COPY (when_true, before);\n@@ -531,6 +511,7 @@ check_init (tree exp, words before)\n \t     definitely assigned when once we checked the whole\n \t     function. */\n \t  if (! STATIC_CLASS_INIT_OPT_P () /* FIXME */\n+\t      && ! DECL_FINAL (tmp)\n \t      && index >= start_current_locals\n \t      && index == num_current_locals - 1)\n \t    {"}, {"sha": "64c07784d23717b32f7ca9fd761a0edf63840a6b", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf74484b2277d89da3d02da5ed694fd6fb0716f/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf74484b2277d89da3d02da5ed694fd6fb0716f/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=edf74484b2277d89da3d02da5ed694fd6fb0716f", "patch": "@@ -902,15 +902,17 @@ union lang_tree_node\n /* Safely tests whether FIELD_INNER_ACCESS exists or not. */\n #define FIELD_INNER_ACCESS_P(DECL) \\\n   DECL_LANG_SPECIFIC (DECL) && FIELD_INNER_ACCESS (DECL)\n-/* True if a final variable was initialized upon its declaration,\n-   or (if a field) in an initializer.  Set after definite assignment. */\n+/* True if a final field was initialized upon its declaration\n+   or in an initializer.  Set after definite assignment.  */\n #define DECL_FIELD_FINAL_IUD(NODE)  (DECL_LANG_SPECIFIC (NODE)->u.v.final_iud)\n /* The original WFL of a final variable. */\n #define DECL_FIELD_FINAL_WFL(NODE)  (DECL_LANG_SPECIFIC(NODE)->u.v.wfl)\n /* The class that's the owner of a dynamic binding table.  */\n #define DECL_OWNER(NODE)            (DECL_LANG_SPECIFIC(NODE)->u.v.owner)\n /* True if NODE is a local variable final. */\n #define LOCAL_FINAL_P(NODE) (DECL_LANG_SPECIFIC (NODE) && DECL_FINAL (NODE))\n+/* True if a final local variable was initialized upon its declaration.  */\n+#define DECL_LOCAL_FINAL_IUD(NODE)  (DECL_LANG_SPECIFIC (NODE)->u.v.final_iud)\n /* True if NODE is a final field. */\n #define FINAL_VARIABLE_P(NODE) (FIELD_FINAL (NODE) && !FIELD_STATIC (NODE))\n /* True if NODE is a class final field. */"}, {"sha": "65bd09186eeb96e96ce765894d4e5875fceddec8", "filename": "gcc/java/parse.y", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf74484b2277d89da3d02da5ed694fd6fb0716f/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf74484b2277d89da3d02da5ed694fd6fb0716f/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=edf74484b2277d89da3d02da5ed694fd6fb0716f", "patch": "@@ -7375,6 +7375,13 @@ declare_local_variables (int modifier, tree type, tree vlist)\n       if (init && java_error_count)\n \tinit = NULL_TREE;\n \n+      /* Remember it if this is an initialized-upon-declaration final\n+         variable.  */\n+      if (init && final_p)\n+        {\n+          DECL_LOCAL_FINAL_IUD (decl) = 1;\n+        }\n+\n       /* Add the initialization function to the current function's code */\n       if (init)\n \t{"}]}