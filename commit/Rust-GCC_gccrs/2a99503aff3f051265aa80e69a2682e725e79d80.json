{"sha": "2a99503aff3f051265aa80e69a2682e725e79d80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE5OTUwM2FmZjNmMDUxMjY1YWE4MGU2OWEyNjgyZTcyNWU3OWQ4MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-29T11:29:56Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-29T11:29:56Z"}, "message": "(FUNCTION_EPILOGUE): Local variables freed from SP, not FP.\n\n(ASM_OUTPUT_BYTE): Make distinct from ASM_OUTPUT_CHAR.\n\nFrom-SVN: r10190", "tree": {"sha": "0250434c47ffb47a1ebd99a715821daebf126ce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0250434c47ffb47a1ebd99a715821daebf126ce3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a99503aff3f051265aa80e69a2682e725e79d80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a99503aff3f051265aa80e69a2682e725e79d80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a99503aff3f051265aa80e69a2682e725e79d80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a99503aff3f051265aa80e69a2682e725e79d80/comments", "author": null, "committer": null, "parents": [{"sha": "f53b4c93f7a270544b96cb48fa0c52dd03f0e191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f53b4c93f7a270544b96cb48fa0c52dd03f0e191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f53b4c93f7a270544b96cb48fa0c52dd03f0e191"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "d7332efe4c8fc7a765eb4d4bbe0a0f47384c18cc", "filename": "gcc/config/1750a/1750a.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a99503aff3f051265aa80e69a2682e725e79d80/gcc%2Fconfig%2F1750a%2F1750a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a99503aff3f051265aa80e69a2682e725e79d80/gcc%2Fconfig%2F1750a%2F1750a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.h?ref=2a99503aff3f051265aa80e69a2682e725e79d80", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n-   Contributed by O.M.Kellogg, DASA (okellogg@salyko.cube.net).\n+   Contributed by O.M.Kellogg, DASA (kellogg@space.otn.dasa.de)\n \n This file is part of GNU CC.\n \n@@ -592,7 +592,7 @@ enum reg_class { NO_REGS, INDEX_REGS, BASE_REGS, ALL_REGS, LIM_REG_CLASSES };\n   fprintf(FILE,\"\\tlr\\tr15,r14 ; set stack ptr to frame ptr\\n\");\t\\\n   fprintf(FILE,\"\\tpopm\\tr14,r14 ; restore previous frame ptr\\n\");\t\\\n   if (SIZE > 0)\t\t\t\t\t\t\t\\\n-    fprintf(FILE,\"\\t%s\\tr14,%d ; free up local-var space\\n\",\t\\\n+    fprintf(FILE,\"\\t%s\\tr15,%d ; free up local-var space\\n\",\t\\\n \t\t\t (SIZE <= 16 ? \"aisp\" : \"aim\"),SIZE);\t\\\n   fprintf(FILE,\"\\turs\\tr15\\n\"); }\n \n@@ -1161,8 +1161,10 @@ enum reg_class { NO_REGS, INDEX_REGS, BASE_REGS, ALL_REGS, LIM_REG_CLASSES };\n \t   label_pending = 0;\t\t\t\t\t\t\\\n \t   datalbl[datalbl_ndx].size = 1;\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n-\tfprintf(FILE, \"\\tdata\\t\"); output_addr_const(FILE,VALUE);\t\\\n-\tfprintf(FILE, \"\\n\"); } while (0)\n+\tfprintf(FILE, \"\\tdata\\t\");\t\t\t\t\t\\\n+\toutput_addr_const(FILE, VALUE); \t\t\t\t\\\n+\tfprintf(FILE, \"\\n\");\t\t\t\t\t\t\\\n+  } while (0)\n \n /* This is how to output an assembler line defining a `long int' constant.\n    1750 NOTE: The reason why this macro outputs `long' instead of `short'\n@@ -1182,7 +1184,7 @@ enum reg_class { NO_REGS, INDEX_REGS, BASE_REGS, ALL_REGS, LIM_REG_CLASSES };\n \n /* This is how to output an assembler line for a numeric constant byte.  */\n \n-#define ASM_OUTPUT_BYTE(FILE,VALUE)  ASM_OUTPUT_CHAR(FILE,VALUE)\n+#define ASM_OUTPUT_BYTE(FILE,VALUE)  fprintf(FILE, \"\\tdata\\t#%x\\n\", VALUE)\n \n /* This is how to output an insn to push a register on the stack.\n    It need not be very fast code.  */"}]}