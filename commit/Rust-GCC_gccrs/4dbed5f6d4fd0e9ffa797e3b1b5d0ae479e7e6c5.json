{"sha": "4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRiZWQ1ZjZkNGZkMGU5ZmZhNzk3ZTNiMWI1ZDBhZTQ3OWU3ZTZjNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-30T16:55:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-30T16:55:35Z"}, "message": "re PR tree-optimization/46722 (Missed fma for x*x + y)\n\n2010-11-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46722\n\t* tree-ssa-math-opts.c (convert_mult_to_fma): Get multiplication\n\toperands as arguments.\n\t(execute_optimize_widening_mul): Also handle power of two as\n\tmultiplication.\n\n\t* gcc.target/i386/fma4-fma-2.c: New testcase.\n\nFrom-SVN: r167304", "tree": {"sha": "e61a7127cbad42be966353a6abec621a1e9d38ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e61a7127cbad42be966353a6abec621a1e9d38ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16187791e3c516705412dc57534f6b413143cfe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16187791e3c516705412dc57534f6b413143cfe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16187791e3c516705412dc57534f6b413143cfe2"}], "stats": {"total": 134, "additions": 123, "deletions": 11}, "files": [{"sha": "b4fe46515f738e0f60acd87a559e37dc48d258f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5", "patch": "@@ -1,3 +1,11 @@\n+2010-11-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46722\n+\t* tree-ssa-math-opts.c (convert_mult_to_fma): Get multiplication\n+\toperands as arguments.\n+\t(execute_optimize_widening_mul): Also handle power of two as\n+\tmultiplication.\n+\n 2010-11-30  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \tPR middle-end/46709"}, {"sha": "ba34ecdbe0f87862ff63241f95dbf7b9f2d0139c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5", "patch": "@@ -1,3 +1,8 @@\n+2010-11-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46722\n+\t* gcc.target/i386/fma4-fma-2.c: New testcase.\n+\n 2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/duplicate-class-1.m: New."}, {"sha": "23f6ec167e4f35a3720a788ba0484d25b705d7c1", "filename": "gcc/testsuite/gcc.target/i386/fma4-fma-2.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-fma-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-fma-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-fma-2.c?ref=4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5", "patch": "@@ -0,0 +1,67 @@\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into vfmaddss, vfmsubss, vfnmaddss,\n+   vfnmsubss on FMA4 systems.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-options \"-O2 -funsafe-math-optimizations -mfma4\" } */\n+\n+extern void exit (int);\n+\n+float\n+flt_mul_add (float a, float c)\n+{\n+  return (a * a) + c;\n+}\n+\n+double\n+dbl_mul_add (double a, double c)\n+{\n+  return (a * a) + c;\n+}\n+\n+float\n+flt_mul_sub (float a, float c)\n+{\n+  return (a * a) - c;\n+}\n+\n+double\n+dbl_mul_sub (double a, double c)\n+{\n+  return (a * a) - c;\n+}\n+\n+float\n+flt_neg_mul_add (float a, float c)\n+{\n+  return (-(a * a)) + c;\n+}\n+\n+double\n+dbl_neg_mul_add (double a, double c)\n+{\n+  return (-(a * a)) + c;\n+}\n+\n+float  f[10] = { 2, 3, 4 };\n+double d[10] = { 2, 3, 4 };\n+\n+int main ()\n+{\n+  f[3] = flt_mul_add (f[0], f[2]);\n+  f[4] = flt_mul_sub (f[0], f[2]);\n+  f[5] = flt_neg_mul_add (f[0], f[2]);\n+\n+  d[3] = dbl_mul_add (d[0], d[2]);\n+  d[4] = dbl_mul_sub (d[0], d[2]);\n+  d[5] = dbl_neg_mul_add (d[0], d[2]);\n+  exit (0);\n+}\n+\n+/* { dg-final { scan-assembler \"vfmaddss\" } } */\n+/* { dg-final { scan-assembler \"vfmaddsd\" } } */\n+/* { dg-final { scan-assembler \"vfmsubss\" } } */\n+/* { dg-final { scan-assembler \"vfmsubsd\" } } */\n+/* { dg-final { scan-assembler \"vfnmaddss\" } } */\n+/* { dg-final { scan-assembler \"vfnmaddsd\" } } */"}, {"sha": "435c014ea7c6177a53f1957b440626d624c9fdbf", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 43, "deletions": 11, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=4dbed5f6d4fd0e9ffa797e3b1b5d0ae479e7e6c5", "patch": "@@ -1494,14 +1494,14 @@ convert_plusminus_to_widen (gimple_stmt_iterator *gsi, gimple stmt,\n   return true;\n }\n \n-/* Combine the multiplication at MUL_STMT with uses in additions and\n-   subtractions to form fused multiply-add operations.  Returns true\n-   if successful and MUL_STMT should be removed.  */\n+/* Combine the multiplication at MUL_STMT with operands MULOP1 and MULOP2\n+   with uses in additions and subtractions to form fused multiply-add\n+   operations.  Returns true if successful and MUL_STMT should be removed.  */\n \n static bool\n-convert_mult_to_fma (gimple mul_stmt)\n+convert_mult_to_fma (gimple mul_stmt, tree op1, tree op2)\n {\n-  tree mul_result = gimple_assign_lhs (mul_stmt);\n+  tree mul_result = gimple_get_lhs (mul_stmt);\n   tree type = TREE_TYPE (mul_result);\n   gimple use_stmt, neguse_stmt, fma_stmt;\n   use_operand_p use_p;\n@@ -1607,7 +1607,7 @@ convert_mult_to_fma (gimple mul_stmt)\n     {\n       gimple_stmt_iterator gsi = gsi_for_stmt (use_stmt);\n       enum tree_code use_code;\n-      tree addop, mulop1, result = mul_result;\n+      tree addop, mulop1 = op1, result = mul_result;\n       bool negate_p = false;\n \n       if (is_gimple_debug (use_stmt))\n@@ -1646,7 +1646,6 @@ convert_mult_to_fma (gimple mul_stmt)\n \t    negate_p = !negate_p;\n \t}\n \n-      mulop1 = gimple_assign_rhs1 (mul_stmt);\n       if (negate_p)\n \tmulop1 = force_gimple_operand_gsi (&gsi,\n \t\t\t\t\t   build1 (NEGATE_EXPR,\n@@ -1656,8 +1655,7 @@ convert_mult_to_fma (gimple mul_stmt)\n \n       fma_stmt = gimple_build_assign_with_ops3 (FMA_EXPR,\n \t\t\t\t\t\tgimple_assign_lhs (use_stmt),\n-\t\t\t\t\t\tmulop1,\n-\t\t\t\t\t\tgimple_assign_rhs2 (mul_stmt),\n+\t\t\t\t\t\tmulop1, op2,\n \t\t\t\t\t\taddop);\n       gsi_replace (&gsi, fma_stmt, true);\n     }\n@@ -1673,6 +1671,7 @@ static unsigned int\n execute_optimize_widening_mul (void)\n {\n   basic_block bb;\n+  bool cfg_changed = false;\n \n   FOR_EACH_BB (bb)\n     {\n@@ -1690,7 +1689,9 @@ execute_optimize_widening_mul (void)\n \t\t{\n \t\tcase MULT_EXPR:\n \t\t  if (!convert_mult_to_widen (stmt)\n-\t\t      && convert_mult_to_fma (stmt))\n+\t\t      && convert_mult_to_fma (stmt,\n+\t\t\t\t\t      gimple_assign_rhs1 (stmt),\n+\t\t\t\t\t      gimple_assign_rhs2 (stmt)))\n \t\t    {\n \t\t      gsi_remove (&gsi, true);\n \t\t      release_defs (stmt);\n@@ -1706,11 +1707,42 @@ execute_optimize_widening_mul (void)\n \t\tdefault:;\n \t\t}\n \t    }\n+\t  else if (is_gimple_call (stmt))\n+\t    {\n+\t      tree fndecl = gimple_call_fndecl (stmt);\n+\t      if (fndecl\n+\t\t  && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL)\n+\t\t{\n+\t\t  switch (DECL_FUNCTION_CODE (fndecl))\n+\t\t    {\n+\t\t      case BUILT_IN_POWF:\n+\t\t      case BUILT_IN_POW:\n+\t\t      case BUILT_IN_POWL:\n+\t\t\tif (TREE_CODE (gimple_call_arg (stmt, 1)) == REAL_CST\n+\t\t\t    && REAL_VALUES_EQUAL\n+\t\t\t         (TREE_REAL_CST (gimple_call_arg (stmt, 1)),\n+\t\t\t\t  dconst2)\n+\t\t\t    && convert_mult_to_fma (stmt,\n+\t\t\t\t\t\t    gimple_call_arg (stmt, 0),\n+\t\t\t\t\t\t    gimple_call_arg (stmt, 0)))\n+\t\t\t  {\n+\t\t\t    gsi_remove (&gsi, true);\n+\t\t\t    release_defs (stmt);\n+\t\t\t    if (gimple_purge_dead_eh_edges (bb))\n+\t\t\t      cfg_changed = true;\n+\t\t\t    continue;\n+\t\t\t  }\n+\t\t\t  break;\n+\n+\t\t      default:;\n+\t\t    }\n+\t\t}\n+\t    }\n \t  gsi_next (&gsi);\n \t}\n     }\n \n-  return 0;\n+  return cfg_changed ? TODO_cleanup_cfg : 0;\n }\n \n static bool"}]}