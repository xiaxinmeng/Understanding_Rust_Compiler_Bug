{"sha": "e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThiYTk0ZmMxZmUyZDdkOTZiZmMyZmE1MjkzYzFiYjBiODZhNWI1Mg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-01-24T23:07:25Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-01-24T23:07:25Z"}, "message": "re PR c/21659 ([unit-at-a-time] \"weak declaration must precede definition\" error missing at >= O1)\n\n\n\tPR c/21659\n\t* doc/extend.texi (weak pragma): Drop claim that it must\n\tappear before definition.\n\t* varasm.c (merge_weak, declare_weak): Only sanity check\n\tthat DECL is not output at a time it is declared weak.\n\nFrom-SVN: r169184", "tree": {"sha": "22cf10e472b5ae4e466e1ea53c1f2933f186775d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22cf10e472b5ae4e466e1ea53c1f2933f186775d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/comments", "author": null, "committer": null, "parents": [{"sha": "71c67403a2faf26b64c2bf525e392953a2707aa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71c67403a2faf26b64c2bf525e392953a2707aa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71c67403a2faf26b64c2bf525e392953a2707aa3"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "c61e513dc7dfb97536f3d306da468f71ca5f0beb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -1,3 +1,11 @@\n+2011-01-24  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR c/21659\n+\t* doc/extend.texi (weak pragma): Drop claim that it must\n+\tappear before definition.\n+\t* varasm.c (merge_weak, declare_weak): Only sanity check\n+\tthat DECL is not output at a time it is declared weak.\n+\n 2011-01-24  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* machmode.def: Fixed comments."}, {"sha": "bc60bfe3f96f2829e423e16b9652eb0e60106c66", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -13024,8 +13024,7 @@ aliases.\n @cindex pragma, weak\n This pragma declares @var{symbol} to be weak, as if the declaration\n had the attribute of the same name.  The pragma may appear before\n-or after the declaration of @var{symbol}, but must appear before\n-either its first use or its definition.  It is not an error for\n+or after the declaration of @var{symbol}.  It is not an error for\n @var{symbol} to never be defined at all.\n \n @item #pragma weak @var{symbol1} = @var{symbol2}"}, {"sha": "afd9942c2955b65bb4629b91beeb6c77500e961e", "filename": "gcc/varasm.c", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -5139,20 +5139,16 @@ merge_weak (tree newdecl, tree olddecl)\n       /* NEWDECL is weak, but OLDDECL is not.  */\n \n       /* If we already output the OLDDECL, we're in trouble; we can't\n-\t go back and make it weak.  This error cannot be caught in\n-\t declare_weak because the NEWDECL and OLDDECL was not yet\n-\t been merged; therefore, TREE_ASM_WRITTEN was not set.  */\n-      if (TREE_ASM_WRITTEN (olddecl))\n-\terror (\"weak declaration of %q+D must precede definition\",\n-\t       newdecl);\n+\t go back and make it weak.  This should never happen in\n+\t unit-at-a-time compilation.  */\n+      gcc_assert (!TREE_ASM_WRITTEN (olddecl));\n \n       /* If we've already generated rtl referencing OLDDECL, we may\n \t have done so in a way that will not function properly with\n-\t a weak symbol.  */\n-      else if (TREE_USED (olddecl)\n-\t       && TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (olddecl)))\n-\twarning (0, \"weak declaration of %q+D after first use results \"\n-                 \"in unspecified behavior\", newdecl);\n+\t a weak symbol.  Again in unit-at-a-time this should be\n+\t impossible.  */\n+      gcc_assert (!TREE_USED (olddecl)\n+\t          || !TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (olddecl)));\n \n       if (TARGET_SUPPORTS_WEAK)\n \t{\n@@ -5184,10 +5180,9 @@ merge_weak (tree newdecl, tree olddecl)\n void\n declare_weak (tree decl)\n {\n+  gcc_assert (TREE_CODE (decl) != FUNCTION_DECL || !TREE_ASM_WRITTEN (decl));\n   if (! TREE_PUBLIC (decl))\n     error (\"weak declaration of %q+D must be public\", decl);\n-  else if (TREE_CODE (decl) == FUNCTION_DECL && TREE_ASM_WRITTEN (decl))\n-    error (\"weak declaration of %q+D must precede definition\", decl);\n   else if (!TARGET_SUPPORTS_WEAK)\n     warning (0, \"weak declaration of %q+D not supported\", decl);\n "}]}