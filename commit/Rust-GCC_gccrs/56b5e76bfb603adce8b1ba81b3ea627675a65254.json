{"sha": "56b5e76bfb603adce8b1ba81b3ea627675a65254", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZiNWU3NmJmYjYwM2FkY2U4YjFiYTgxYjNlYTYyNzY3NWE2NTI1NA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-05-15T01:25:47Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-05-15T01:25:47Z"}, "message": "(stupid_life_analysis): Make sure a function result reg\nis still live if it contains an argument.\n\nFrom-SVN: r7301", "tree": {"sha": "088f82c1b8fdefd129440f02c5743d0fc3b46c87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/088f82c1b8fdefd129440f02c5743d0fc3b46c87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56b5e76bfb603adce8b1ba81b3ea627675a65254", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b5e76bfb603adce8b1ba81b3ea627675a65254", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b5e76bfb603adce8b1ba81b3ea627675a65254", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b5e76bfb603adce8b1ba81b3ea627675a65254/comments", "author": null, "committer": null, "parents": [{"sha": "4d367579cc4e8a6e04f5169d130873225b08bf1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d367579cc4e8a6e04f5169d130873225b08bf1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d367579cc4e8a6e04f5169d130873225b08bf1b"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "1293d5da5b26f5f989d17bad2171def117165e2b", "filename": "gcc/stupid.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56b5e76bfb603adce8b1ba81b3ea627675a65254/gcc%2Fstupid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56b5e76bfb603adce8b1ba81b3ea627675a65254/gcc%2Fstupid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstupid.c?ref=56b5e76bfb603adce8b1ba81b3ea627675a65254", "patch": "@@ -199,6 +199,13 @@ stupid_life_analysis (f, nregs, file)\n \tif (regs_live[i])\n \t  SET_HARD_REG_BIT (*p, i);\n \n+      /* Update which hard regs are currently live\n+\t and also the birth and death suids of pseudo regs\n+\t based on the pattern of this insn.  */\n+\n+      if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n+\tstupid_mark_refs (PATTERN (insn), insn);\n+\n       /* Mark all call-clobbered regs as live after each call insn\n \t so that a pseudo whose life span includes this insn\n \t will not go in one of them.\n@@ -215,15 +222,11 @@ stupid_life_analysis (f, nregs, file)\n \t    if (call_used_regs[i])\n \t      regs_live[i] = 0;\n \n+\t  /* It is important that this be done after processing the insn's\n+\t     pattern because we want the function result register to still\n+\t     be live if it's also used to pass arguments.  */\n \t  stupid_mark_refs (CALL_INSN_FUNCTION_USAGE (insn), insn);\n \t}\n-\n-      /* Update which hard regs are currently live\n-\t and also the birth and death suids of pseudo regs\n-\t based on the pattern of this insn.  */\n-\n-      if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n-\tstupid_mark_refs (PATTERN (insn), insn);\n     }\n \n   /* Now decide the order in which to allocate the pseudo registers.  */"}]}