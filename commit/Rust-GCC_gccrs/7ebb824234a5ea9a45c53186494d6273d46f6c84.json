{"sha": "7ebb824234a5ea9a45c53186494d6273d46f6c84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ViYjgyNDIzNGE1ZWE5YTQ1YzUzMTg2NDk0ZDYyNzNkNDZmNmM4NA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-03-16T23:01:28Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-03-16T23:01:28Z"}, "message": "re PR libstdc++/43394 (Spurious warnings while building parallel_list.cc on x86_64 -m32)\n\n2010-03-16  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/43394\n\t* include/parallel/compatibility.h: Add __k8 and __core2 among the\n\ti386 targets supporting atomic operations.\n\nFrom-SVN: r157498", "tree": {"sha": "d00e98aecf7dae647fcfd4dd0c981831bb187000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d00e98aecf7dae647fcfd4dd0c981831bb187000"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ebb824234a5ea9a45c53186494d6273d46f6c84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ebb824234a5ea9a45c53186494d6273d46f6c84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ebb824234a5ea9a45c53186494d6273d46f6c84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ebb824234a5ea9a45c53186494d6273d46f6c84/comments", "author": null, "committer": null, "parents": [{"sha": "5ecfce5c58b6ff95a5e328bc3059aa09e3efc917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ecfce5c58b6ff95a5e328bc3059aa09e3efc917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ecfce5c58b6ff95a5e328bc3059aa09e3efc917"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "8e4842e1a7290e11ead946de63ba2bc514fe78d8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ebb824234a5ea9a45c53186494d6273d46f6c84/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ebb824234a5ea9a45c53186494d6273d46f6c84/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7ebb824234a5ea9a45c53186494d6273d46f6c84", "patch": "@@ -1,3 +1,9 @@\n+2010-03-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/43394\n+\t* include/parallel/compatibility.h: Add __k8 and __core2 among the\n+\ti386 targets supporting atomic operations.\n+\n 2010-03-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/backward/hash_map: Use consistently the _BACKWARD_*"}, {"sha": "9fffd8e012ccc9e51697772878166f583f366d6a", "filename": "libstdc++-v3/include/parallel/compatibility.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ebb824234a5ea9a45c53186494d6273d46f6c84/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fcompatibility.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ebb824234a5ea9a45c53186494d6273d46f6c84/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fcompatibility.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fcompatibility.h?ref=7ebb824234a5ea9a45c53186494d6273d46f6c84", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -147,7 +147,8 @@ namespace __gnu_parallel\n #elif defined(__GNUC__) && defined(__x86_64)\n     return __sync_fetch_and_add(__ptr, __addend);\n #elif defined(__GNUC__) && defined(__i386) &&                   \\\n-  (defined(__i686) || defined(__pentium4) || defined(__athlon))\n+  (defined(__i686) || defined(__pentium4) || defined(__athlon)  \\\n+   || defined(__k8) || defined(__core2))\n     return __sync_fetch_and_add(__ptr, __addend);\n #elif defined(__SUNPRO_CC) && defined(__sparc)\n     volatile int64_t __before, __after;\n@@ -299,7 +300,8 @@ namespace __gnu_parallel\n #elif defined(__GNUC__) && defined(__x86_64)\n     return __sync_bool_compare_and_swap(__ptr, __comparand, __replacement);\n #elif defined(__GNUC__) && defined(__i386) &&                   \\\n-  (defined(__i686) || defined(__pentium4) || defined(__athlon))\n+  (defined(__i686) || defined(__pentium4) || defined(__athlon)  \\\n+   || defined(__k8) || defined(__core2))\n     return __sync_bool_compare_and_swap(__ptr, __comparand, __replacement);\n #elif defined(__SUNPRO_CC) && defined(__sparc)\n     return atomic_cas_64((volatile unsigned long long*)__ptr,"}]}