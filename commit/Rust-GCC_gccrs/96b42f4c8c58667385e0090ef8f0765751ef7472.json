{"sha": "96b42f4c8c58667385e0090ef8f0765751ef7472", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZiNDJmNGM4YzU4NjY3Mzg1ZTAwOTBlZjhmMDc2NTc1MWVmNzQ3Mg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-11-29T12:09:54Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-11-29T12:09:54Z"}, "message": "Verify class is ok when allocating reload reg in push_reload\n\nFrom-SVN: r30702", "tree": {"sha": "d938f5d703d708dead195d04a511bbaf206d15af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d938f5d703d708dead195d04a511bbaf206d15af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96b42f4c8c58667385e0090ef8f0765751ef7472", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96b42f4c8c58667385e0090ef8f0765751ef7472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96b42f4c8c58667385e0090ef8f0765751ef7472", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96b42f4c8c58667385e0090ef8f0765751ef7472/comments", "author": null, "committer": null, "parents": [{"sha": "ca1a4af124196cef0751c8c8f504a45ecda9371f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca1a4af124196cef0751c8c8f504a45ecda9371f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca1a4af124196cef0751c8c8f504a45ecda9371f"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "a1a0e3980c472b2373aba9d339d2641217ef85b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96b42f4c8c58667385e0090ef8f0765751ef7472/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96b42f4c8c58667385e0090ef8f0765751ef7472/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96b42f4c8c58667385e0090ef8f0765751ef7472", "patch": "@@ -1,5 +1,9 @@\n 1999-11-29  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n+\t* reload.c (push_reload): When looking for a register to put into\n+\treg_rtx, make sure all hard regs in a multi-reg register are in the\n+\tright class and nonfixed.\n+\n \t* haifa-sched.c (reg_last_uses, reg_last_sets, reg_last_clobbers,\n \tpending_read_insns, pending_write_insns, pending_read_mems,\n \tpending_write_mems, pending_list_length, last_pending_memory_flush,"}, {"sha": "3ad2a7f0b45930c22fef3adacf0d50207901d766", "filename": "gcc/reload.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96b42f4c8c58667385e0090ef8f0765751ef7472/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96b42f4c8c58667385e0090ef8f0765751ef7472/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=96b42f4c8c58667385e0090ef8f0765751ef7472", "patch": "@@ -1460,12 +1460,21 @@ push_reload (in, out, inloc, outloc, class,\n \t    && GET_MODE_SIZE (inmode) <= GET_MODE_SIZE (GET_MODE (XEXP (note, 0)))\n \t    && HARD_REGNO_MODE_OK (regno, inmode)\n \t    && GET_MODE_SIZE (outmode) <= GET_MODE_SIZE (GET_MODE (XEXP (note, 0)))\n-\t    && HARD_REGNO_MODE_OK (regno, outmode)\n-\t    && TEST_HARD_REG_BIT (reg_class_contents[(int) class], regno)\n-\t    && !fixed_regs[regno])\n+\t    && HARD_REGNO_MODE_OK (regno, outmode))\n \t  {\n-\t    rld[i].reg_rtx = gen_rtx_REG (inmode, regno);\n-\t    break;\n+\t    int offs;\n+\t    int nregs = HARD_REGNO_NREGS (regno, inmode);\n+\t    for (offs = 0; offs < nregs; offs++)\n+\t      if (fixed_regs[regno + offs]\n+\t\t  || ! TEST_HARD_REG_BIT (reg_class_contents[(int) class],\n+\t\t\t\t\t  regno + offs))\n+\t\tbreak;\n+\n+\t    if (offs == nregs)\n+\t      {\n+\t\trld[i].reg_rtx = gen_rtx_REG (inmode, regno);\n+\t\tbreak;\n+\t      }\n \t  }\n     }\n "}]}