{"sha": "62d2739afd9e0b8cea92edae521222930b67743d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJkMjczOWFmZDllMGI4Y2VhOTJlZGFlNTIxMjIyOTMwYjY3NzQzZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-04T18:40:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-04T18:40:15Z"}, "message": "i386.md (*strmovsi_1): Simplify asm alternatives.\n\n        * config/i386/i386.md (*strmovsi_1): Simplify asm alternatives.\n        (*strmovsi_rex_1): Ditto.\n        (*strsetsi_1): Ditto.\n        (*strsetsi_rex_1): Ditto.\n\n        (add<mode>cc): Macroize expander from addqicc, addhicc, addsicc and\n        adddicc expanders using SWI mode iterator.\n\nFrom-SVN: r134933", "tree": {"sha": "8c5bdf0a7bcb02628efde25f30b91e69f91989bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c5bdf0a7bcb02628efde25f30b91e69f91989bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62d2739afd9e0b8cea92edae521222930b67743d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d2739afd9e0b8cea92edae521222930b67743d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62d2739afd9e0b8cea92edae521222930b67743d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d2739afd9e0b8cea92edae521222930b67743d/comments", "author": null, "committer": null, "parents": [{"sha": "4d31c3e1cb354eab0b861e8ba90e9f98e3f7f402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d31c3e1cb354eab0b861e8ba90e9f98e3f7f402", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d31c3e1cb354eab0b861e8ba90e9f98e3f7f402"}], "stats": {"total": 110, "additions": 44, "deletions": 66}, "files": [{"sha": "5017016cce4d8bdf8b296c386914b61d628f2710", "filename": "gcc/ChangeLog", "status": "modified", "additions": 36, "deletions": 34, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d2739afd9e0b8cea92edae521222930b67743d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d2739afd9e0b8cea92edae521222930b67743d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62d2739afd9e0b8cea92edae521222930b67743d", "patch": "@@ -1,8 +1,18 @@\n+2008-05-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*strmovsi_1): Simplify asm alternatives.\n+\t(*strmovsi_rex_1): Ditto.\n+\t(*strsetsi_1): Ditto.\n+\t(*strsetsi_rex_1): Ditto.\n+\n+\t(add<mode>cc): Macroize expander from addqicc, addhicc, addsicc and\n+\tadddicc expanders using SWI mode iterator.\n+\n 2008-05-04  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/36121\n-\t* config/i386/i386.c (ix86_expand_special_args_builtin): Remove\n-\t3 argument handling.\n+\t* config/i386/i386.c (ix86_expand_special_args_builtin): Remove three\n+\targument handling.\n \n 2008-05-04  David S. Miller  <davem@davemloft.net>\n \n@@ -243,31 +253,26 @@\n \n 2008-04-30  Nathan Froyd  <froydnj@codesourcery.com>\n \n-        * config/rs6000/crtresgpr.asm, config/rs6000/crtresxgpr.asm,\n-        config/rs6000/crtsavgpr.asm, config/rs6000/crtresfpr.asm,\n-        config/rs6000/crtresxfpr.asm, config/rs6000/crtsavfpr.asm: Break out\n-        from...\n-        * config/rs6000/crtsavres.asm: ...here.  Remove unneeded file.\n-        * config/rs6000/e500crtres32gpr.asm,\n-\tconfig/rs6000/e500crtres64gpr.asm\n-        config/rs6000/e500crtres64gprctr.asm,\n-\tconfig/rs6000/e500crtrest32gpr.asm\n-        config/rs6000/e500crtrest64gpr.asm,\n-\tconfig/rs6000/e500crtresx32gpr.asm\n-        config/rs6000/e500crtresx64gpr.asm,\n-\tconfig/rs6000/e500crtsav32gpr.asm\n-        config/rs6000/e500crtsav64gpr.asm,\n-\tconfig/rs6000/e500crtsav64gprctr.asm\n-        config/rs6000/e500crtsavg32gpr.asm,\n-\tconfig/rs6000/e500crtsavg64gpr.asm\n-        config/rs6000/e500crtsavg64gprctr.asm: New files.\n-        * config/rs6000/t-ppccomm: Add build rules for new files.\n-        (LIB2FUNCS_STATIC_EXTRA): Add new files.\n-        * config/rs6000/t-netbsd: Add build rules for new files.\n-        (LIB2FUNCS_STATIC_EXTRA): New variable.\n-        * config/rs6000/sysv4.h (ENDFILE_SPEC): Don't include crtsavres.o\n-        (CRTSAVRES_DEFAULT_SPEC): Likewise.\n-        * config/rs6000/netbsd.h (ENDFILE_SPEC): Likewise.\n+\t* config/rs6000/crtresgpr.asm, config/rs6000/crtresxgpr.asm,\n+\tconfig/rs6000/crtsavgpr.asm, config/rs6000/crtresfpr.asm,\n+\tconfig/rs6000/crtresxfpr.asm, config/rs6000/crtsavfpr.asm: Break out\n+\tfrom...\n+\t* config/rs6000/crtsavres.asm: ...here.  Remove unneeded file.\n+\t* config/rs6000/e500crtres32gpr.asm, config/rs6000/e500crtres64gpr.asm,\n+\tconfig/rs6000/e500crtres64gprctr.asm,\n+\tconfig/rs6000/e500crtrest32gpr.asm, config/rs6000/e500crtrest64gpr.asm,\n+\tconfig/rs6000/e500crtresx32gpr.asm, config/rs6000/e500crtresx64gpr.asm,\n+\tconfig/rs6000/e500crtsav32gpr.asm, config/rs6000/e500crtsav64gpr.asm,\n+\tconfig/rs6000/e500crtsav64gprctr.asm,\n+\tconfig/rs6000/e500crtsavg32gpr.asm, config/rs6000/e500crtsavg64gpr.asm,\n+\tconfig/rs6000/e500crtsavg64gprctr.asm: New files.\n+\t* config/rs6000/t-ppccomm: Add build rules for new files.\n+\t(LIB2FUNCS_STATIC_EXTRA): Add new files.\n+\t* config/rs6000/t-netbsd: Add build rules for new files.\n+\t(LIB2FUNCS_STATIC_EXTRA): New variable.\n+\t* config/rs6000/sysv4.h (ENDFILE_SPEC): Don't include crtsavres.o\n+\t(CRTSAVRES_DEFAULT_SPEC): Likewise.\n+\t* config/rs6000/netbsd.h (ENDFILE_SPEC): Likewise.\n \n 2008-04-30  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -297,19 +302,17 @@\n \t(ix86_expand_args_builtin): Updated.  Take a pointer\n \tto const struct builtin_description.  Handle comparison\n \tbuiltin functions.\n-\t(ix86_expand_sse_compare): Take a new argument for swapping\n-\toperands.\n+\t(ix86_expand_sse_compare): Take a new argument for swapping operands.\n \t(ix86_expand_builtin): Updated.\n \n \t* config/i386/sse.md (ssse3_pmaddubswv8hi3): Renamed to ...\n \t(ssse3_pmaddubsw128): This.\n \t(ssse3_pmaddubswv4hi3): Renamed to ...\n \t(ssse3_pmaddubsw): This.\n \n-\t* doc/extend.texi (__builtin_ia32_packsswb128): Correct\n-\tprototype.\n+\t* doc/extend.texi (__builtin_ia32_packsswb128): Correct prototype.\n \t(__builtin_ia32_packssdw128): Likewise.\n-\t)__builtin_ia32_packuswb128): Likewise.\n+\t(__builtin_ia32_packuswb128): Likewise.\n \t(__builtin_ia32_pmaddubsw): Likewise.\n \t(__builtin_ia32_pmaddubsw128): Likewise.\n \n@@ -935,8 +938,7 @@\n \t\n 2008-04-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n-\t* config/i386/sse.md (mov<mode>): Replace SSEMODEI with\n-\tSSEMODE.\n+\t* config/i386/sse.md (mov<mode>): Replace SSEMODEI with SSEMODE.\n \t(*mov<mode>_internal): Likewise.  Support V4SF and V2DF.\n \t(mov<mode>): Removed.\n \t(*movv4sf_internal): Likewise."}, {"sha": "a150b9bb49ab77baa15af3d06a2badc59c33b617", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 32, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d2739afd9e0b8cea92edae521222930b67743d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d2739afd9e0b8cea92edae521222930b67743d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=62d2739afd9e0b8cea92edae521222930b67743d", "patch": "@@ -18476,7 +18476,7 @@\n \t(plus:SI (match_dup 3)\n \t\t (const_int 4)))]\n   \"!TARGET_64BIT && (TARGET_SINGLE_STRINGOP || optimize_size)\"\n-  \"{movsl|movsd}\"\n+  \"movs{l|d}\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"memory\" \"both\")])\n@@ -18491,7 +18491,7 @@\n \t(plus:DI (match_dup 3)\n \t\t (const_int 4)))]\n   \"TARGET_64BIT && (TARGET_SINGLE_STRINGOP || optimize_size)\"\n-  \"{movsl|movsd}\"\n+  \"movs{l|d}\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"memory\" \"both\")])\n@@ -18747,7 +18747,7 @@\n \t(plus:SI (match_dup 1)\n \t\t (const_int 4)))]\n   \"!TARGET_64BIT && (TARGET_SINGLE_STRINGOP || optimize_size)\"\n-  \"{stosl|stosd}\"\n+  \"stos{l|d}\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"store\")\n    (set_attr \"mode\" \"SI\")])\n@@ -18759,7 +18759,7 @@\n \t(plus:DI (match_dup 1)\n \t\t (const_int 4)))]\n   \"TARGET_64BIT && (TARGET_SINGLE_STRINGOP || optimize_size)\"\n-  \"{stosl|stosd}\"\n+  \"stos{l|d}\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"store\")\n    (set_attr \"mode\" \"SI\")])\n@@ -19561,38 +19561,14 @@\n \t\t\t\t operands[1], operands[0]);\")\n \n ;; Conditional addition patterns\n-(define_expand \"addqicc\"\n-  [(match_operand:QI 0 \"register_operand\" \"\")\n+(define_expand \"add<mode>cc\"\n+  [(match_operand:SWI 0 \"register_operand\" \"\")\n    (match_operand 1 \"comparison_operator\" \"\")\n-   (match_operand:QI 2 \"register_operand\" \"\")\n-   (match_operand:QI 3 \"const_int_operand\" \"\")]\n+   (match_operand:SWI 2 \"register_operand\" \"\")\n+   (match_operand:SWI 3 \"const_int_operand\" \"\")]\n   \"\"\n   \"if (ix86_expand_int_addcc (operands)) DONE; else FAIL;\")\n \n-(define_expand \"addhicc\"\n-  [(match_operand:HI 0 \"register_operand\" \"\")\n-   (match_operand 1 \"comparison_operator\" \"\")\n-   (match_operand:HI 2 \"register_operand\" \"\")\n-   (match_operand:HI 3 \"const_int_operand\" \"\")]\n-  \"\"\n-  \"if (ix86_expand_int_addcc (operands)) DONE; else FAIL;\")\n-\n-(define_expand \"addsicc\"\n-  [(match_operand:SI 0 \"register_operand\" \"\")\n-   (match_operand 1 \"comparison_operator\" \"\")\n-   (match_operand:SI 2 \"register_operand\" \"\")\n-   (match_operand:SI 3 \"const_int_operand\" \"\")]\n-  \"\"\n-  \"if (ix86_expand_int_addcc (operands)) DONE; else FAIL;\")\n-\n-(define_expand \"adddicc\"\n-  [(match_operand:DI 0 \"register_operand\" \"\")\n-   (match_operand 1 \"comparison_operator\" \"\")\n-   (match_operand:DI 2 \"register_operand\" \"\")\n-   (match_operand:DI 3 \"const_int_operand\" \"\")]\n-  \"TARGET_64BIT\"\n-  \"if (ix86_expand_int_addcc (operands)) DONE; else FAIL;\")\n-\n \f\n ;; Misc patterns (?)\n "}]}