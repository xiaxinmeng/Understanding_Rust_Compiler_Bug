{"sha": "45e0984cdb0375ae04482f53c930530cab7e16b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVlMDk4NGNkYjAzNzVhZTA0NDgyZjUzYzkzMDUzMGNhYjdlMTZiMg==", "commit": {"author": {"name": "Dave Brolley", "email": "brolley@cygnus.com", "date": "1998-07-27T12:51:56Z"}, "committer": {"name": "Dave Brolley", "email": "brolley@gcc.gnu.org", "date": "1998-07-27T12:51:56Z"}, "message": "c-lex.c (yylex): Fix boundary conditions in character literal and string literal loops.\n\nMon Jul 27 14:22:36 1998  Dave Brolley  <brolley@cygnus.com>\n\t* c-lex.c (yylex): Fix boundary conditions in character literal and\n\tstring literal loops.\n\nFrom-SVN: r21413", "tree": {"sha": "f5c709a0172aa57e4f3fe5122348e354743a9a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5c709a0172aa57e4f3fe5122348e354743a9a46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45e0984cdb0375ae04482f53c930530cab7e16b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45e0984cdb0375ae04482f53c930530cab7e16b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45e0984cdb0375ae04482f53c930530cab7e16b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45e0984cdb0375ae04482f53c930530cab7e16b2/comments", "author": null, "committer": null, "parents": [{"sha": "ea6c1142846219717fa78ee9f030b841e7f4b52b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6c1142846219717fa78ee9f030b841e7f4b52b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6c1142846219717fa78ee9f030b841e7f4b52b"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "cf87be47eccac14865c098b20f7cbeda50b73df4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45e0984cdb0375ae04482f53c930530cab7e16b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45e0984cdb0375ae04482f53c930530cab7e16b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45e0984cdb0375ae04482f53c930530cab7e16b2", "patch": "@@ -1,3 +1,8 @@\n+Mon Jul 27 14:22:36 1998  Dave Brolley  <brolley@cygnus.com>\n+\n+\t* c-lex.c (yylex): Fix boundary conditions in character literal and\n+\tstring literal loops.\n+\n Mon Jul 27 11:43:54 1998  Stan Cox  <scox@cygnus.com>\n \n \t* longlong.h (count_leading_zeros): Sparclite scan instruction was"}, {"sha": "69055f4a7c27ad4d488b389da2b96b0619232c83", "filename": "gcc/c-lex.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45e0984cdb0375ae04482f53c930530cab7e16b2/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45e0984cdb0375ae04482f53c930530cab7e16b2/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=45e0984cdb0375ae04482f53c930530cab7e16b2", "patch": "@@ -1994,7 +1994,7 @@ yylex ()\n \t\tint char_len = -1;\n \t\tfor (i = 0; i < longest_char; ++i)\n \t\t  {\n-\t\t    if (p + i == token_buffer + maxtoken)\n+\t\t    if (p + i >= token_buffer + maxtoken)\n \t\t      p = extend_token_buffer (p);\n \t\t    p[i] = c;\n \n@@ -2031,7 +2031,7 @@ yylex ()\n \t\tunsigned bytemask = (1 << width) - 1;\n \t\tint byte;\n \n-\t\tif (p + WCHAR_BYTES >= token_buffer + maxtoken)\n+\t\tif (p + WCHAR_BYTES > token_buffer + maxtoken)\n \t\t  p = extend_token_buffer (p);\n \n \t\tfor (byte = 0; byte < WCHAR_BYTES; ++byte)\n@@ -2050,7 +2050,7 @@ yylex ()\n \t      }\n \t    else\n \t      {\n-\t\tif (p == token_buffer + maxtoken)\n+\t\tif (p >= token_buffer + maxtoken)\n \t\t  p = extend_token_buffer (p);\n \t\t*p++ = c;\n \t      }\n@@ -2063,14 +2063,14 @@ yylex ()\n \t   or with a wide zero.  */\n \tif (wide_flag)\n \t  {\n-\t    if (p + WCHAR_BYTES >= token_buffer + maxtoken)\n+\t    if (p + WCHAR_BYTES > token_buffer + maxtoken)\n \t      p = extend_token_buffer (p);\n \t    bzero (p, WCHAR_BYTES);\n \t    p += WCHAR_BYTES;\n \t  }\n \telse\n \t  {\n-\t    if (p == token_buffer + maxtoken)\n+\t    if (p >= token_buffer + maxtoken)\n \t      p = extend_token_buffer (p);\n \t    *p++ = 0;\n \t  }"}]}