{"sha": "e4542648e1d0e922bb2bb700f25b42e5af0da9ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ1NDI2NDhlMWQwZTkyMmJiMmJiNzAwZjI1YjQyZTVhZjBkYTlhYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-01-13T20:17:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-03T10:01:42Z"}, "message": "[Ada] Avoid creating temporaries in Universal_Integer, continued\n\n2020-06-03  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_util.adb (Remove_Side_Effects): For a type conversion, do\n\tnot remove the side effects of the expression only if it is of\n\tuniversal integer type.", "tree": {"sha": "357502e55889941b4074e487dfbcb838cb3efd30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/357502e55889941b4074e487dfbcb838cb3efd30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4542648e1d0e922bb2bb700f25b42e5af0da9ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4542648e1d0e922bb2bb700f25b42e5af0da9ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4542648e1d0e922bb2bb700f25b42e5af0da9ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4542648e1d0e922bb2bb700f25b42e5af0da9ab/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a10340812c6315b7b78bdfd69d31afef03184ba0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10340812c6315b7b78bdfd69d31afef03184ba0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a10340812c6315b7b78bdfd69d31afef03184ba0"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "af7a705251175c92b8ff77190c40a5cb1b6f8636", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4542648e1d0e922bb2bb700f25b42e5af0da9ab/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4542648e1d0e922bb2bb700f25b42e5af0da9ab/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=e4542648e1d0e922bb2bb700f25b42e5af0da9ab", "patch": "@@ -11428,12 +11428,15 @@ package body Exp_Util is\n          goto Leave;\n \n       --  If this is a type conversion, leave the type conversion and remove\n-      --  the side effects in the expression. This is important in several\n-      --  circumstances: for change of representations, and also when this is a\n-      --  view conversion to a smaller object, where gigi can end up creating\n-      --  its own temporary of the wrong size.\n-\n-      elsif Nkind (Exp) = N_Type_Conversion then\n+      --  side effects in the expression, unless it is of universal integer,\n+      --  which is a very large type for a temporary. This is important in\n+      --  several circumstances: for change of representations and also when\n+      --  this is a view conversion to a smaller object, where gigi can end\n+      --  up creating its own temporary of the wrong size.\n+\n+      elsif Nkind (Exp) = N_Type_Conversion\n+        and then Etype (Expression (Exp)) /= Universal_Integer\n+      then\n          Remove_Side_Effects (Expression (Exp), Name_Req, Variable_Ref);\n \n          --  Generating C code the type conversion of an access to constrained"}]}