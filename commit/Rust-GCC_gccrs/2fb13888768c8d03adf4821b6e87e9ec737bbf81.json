{"sha": "2fb13888768c8d03adf4821b6e87e9ec737bbf81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZiMTM4ODg3NjhjOGQwM2FkZjQ4MjFiNmU4N2U5ZWM3MzdiYmY4MQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2006-01-04T17:59:40Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-01-04T17:59:40Z"}, "message": "Class.h (_Jv_CopyClassesToSystemLoader): Updated.\n\n\t* java/lang/Class.h (_Jv_CopyClassesToSystemLoader): Updated.\n\t* java/lang/natClassLoader.cc (_Jv_CopyClassesToSystemLoader):\n\tChanged argument type.  Use SystemClassLoader.addClass.\n\t* gnu/gcj/runtime/SystemClassLoader.java (addClass): New method.\n\nFrom-SVN: r109340", "tree": {"sha": "e521b0eaad4a6095d031024a451e9d1b0154518b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e521b0eaad4a6095d031024a451e9d1b0154518b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fb13888768c8d03adf4821b6e87e9ec737bbf81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb13888768c8d03adf4821b6e87e9ec737bbf81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb13888768c8d03adf4821b6e87e9ec737bbf81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb13888768c8d03adf4821b6e87e9ec737bbf81/comments", "author": null, "committer": null, "parents": [{"sha": "a8c253d02021dd360a0af547f52f47218702b185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8c253d02021dd360a0af547f52f47218702b185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8c253d02021dd360a0af547f52f47218702b185"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "97c6284009543b7d3dfdfae86fd9cfb4fd745246", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb13888768c8d03adf4821b6e87e9ec737bbf81/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb13888768c8d03adf4821b6e87e9ec737bbf81/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2fb13888768c8d03adf4821b6e87e9ec737bbf81", "patch": "@@ -1,3 +1,10 @@\n+2006-01-04  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/Class.h (_Jv_CopyClassesToSystemLoader): Updated.\n+\t* java/lang/natClassLoader.cc (_Jv_CopyClassesToSystemLoader):\n+\tChanged argument type.  Use SystemClassLoader.addClass.\n+\t* gnu/gcj/runtime/SystemClassLoader.java (addClass): New method.\n+\n 2005-12-24  David Daney <ddaney@avtrex.com>\n \t    Tom Tromey  <tromey@redhat.com>\n "}, {"sha": "efd33230fbe8b0acfa806c7cc3bba73ce91a8825", "filename": "libjava/gnu/gcj/runtime/SystemClassLoader.java", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb13888768c8d03adf4821b6e87e9ec737bbf81/libjava%2Fgnu%2Fgcj%2Fruntime%2FSystemClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb13888768c8d03adf4821b6e87e9ec737bbf81/libjava%2Fgnu%2Fgcj%2Fruntime%2FSystemClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FSystemClassLoader.java?ref=2fb13888768c8d03adf4821b6e87e9ec737bbf81", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2005  Free Software Foundation\n+/* Copyright (C) 2005, 2006  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -21,6 +21,25 @@ public final class SystemClassLoader extends URLClassLoader\n     super(new URL[0], parent);\n   }\n \n+  // This is called to register a native class which was linked into\n+  // the application but which is registered with the system class\n+  // loader after the VM is initialized.\n+  void addClass(Class klass)\n+  {\n+    String packageName = null;\n+    String className = klass.getName();\n+    int lastDot = className.lastIndexOf('.');\n+    if (lastDot != -1)\n+      packageName = className.substring(0, lastDot);\n+    if (packageName != null && getPackage(packageName) == null)\n+      {\n+\t// Should have some way to store this information in a\n+\t// precompiled manifest.\n+\tdefinePackage(packageName, null, null, null, null, null, null, null);\n+      }\n+    loadedClasses.put(className, klass);\n+  }\n+\n   // We add the URLs to the system class loader late.  The reason for\n   // this is that during bootstrap we don't want to parse URLs or\n   // create URL connections, since that will result in circularities"}, {"sha": "1c14df3a9c39159347e11d71a8609dcb7762c771", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb13888768c8d03adf4821b6e87e9ec737bbf81/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb13888768c8d03adf4821b6e87e9ec737bbf81/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=2fb13888768c8d03adf4821b6e87e9ec737bbf81", "patch": "@@ -1,6 +1,6 @@\n // Class.h - Header file for java.lang.Class.  -*- c++ -*-\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -22,6 +22,21 @@ details.  */\n #include <java/security/ProtectionDomain.h>\n #include <java/lang/Package.h>\n \n+// Avoid including SystemClassLoader.h.\n+extern \"Java\"\n+{\n+  namespace gnu\n+  {\n+    namespace gcj\n+    {\n+      namespace runtime\n+      {\n+        class SystemClassLoader;\n+      }\n+    }\n+  }\n+}\n+\n // We declare these here to avoid including gcj/cni.h.\n extern \"C\" void _Jv_InitClass (jclass klass);\n extern \"C\" void _Jv_RegisterClasses (const jclass *classes);\n@@ -237,7 +252,7 @@ jclass _Jv_GetArrayClass (jclass klass, java::lang::ClassLoader *loader);\n jboolean _Jv_IsInterpretedClass (jclass);\n jboolean _Jv_IsBinaryCompatibilityABI (jclass);\n \n-void _Jv_CopyClassesToSystemLoader (java::lang::ClassLoader *);\n+void _Jv_CopyClassesToSystemLoader (gnu::gcj::runtime::SystemClassLoader *);\n \n #ifdef INTERPRETER\n void _Jv_InitField (jobject, jclass, int);\n@@ -498,7 +513,7 @@ class java::lang::Class : public java::lang::Object\n \n   friend void *::_Jv_ResolvePoolEntry (jclass this_class, jint index);\n \n-  friend void ::_Jv_CopyClassesToSystemLoader (java::lang::ClassLoader *);\n+  friend void ::_Jv_CopyClassesToSystemLoader (gnu::gcj::runtime::SystemClassLoader *);\n \n   // Chain for class pool.  This also doubles as the ABI version\n   // number.  It is only used for this purpose at class registration"}, {"sha": "797005b54c7c495efc4e47dd451422d3d7880989", "filename": "libjava/java/lang/natClassLoader.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb13888768c8d03adf4821b6e87e9ec737bbf81/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb13888768c8d03adf4821b6e87e9ec737bbf81/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClassLoader.cc?ref=2fb13888768c8d03adf4821b6e87e9ec737bbf81", "patch": "@@ -1,6 +1,6 @@\n // natClassLoader.cc - Implementation of java.lang.ClassLoader native methods.\n \n-/* Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -43,6 +43,7 @@ details.  */\n #include <java/lang/Cloneable.h>\n #include <java/util/HashMap.h>\n #include <gnu/gcj/runtime/BootClassLoader.h>\n+#include <gnu/gcj/runtime/SystemClassLoader.h>\n \n // Size of local hash table.\n #define HASH_LEN 1013\n@@ -253,14 +254,14 @@ _Jv_RegisterClass (jclass klass)\n // This is used during initialization to register all compiled-in\n // classes that are not part of the core with the system class loader.\n void\n-_Jv_CopyClassesToSystemLoader (java::lang::ClassLoader *loader)\n+_Jv_CopyClassesToSystemLoader (gnu::gcj::runtime::SystemClassLoader *loader)\n {\n   for (jclass klass = system_class_list;\n        klass;\n        klass = klass->next_or_version)\n     {\n       klass->loader = loader;\n-      loader->loadedClasses->put(klass->name->toString(), klass);\n+      loader->addClass(klass);\n     }\n   system_class_list = SYSTEM_LOADER_INITIALIZED;\n }"}]}