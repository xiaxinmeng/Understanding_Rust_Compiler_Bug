{"sha": "989cc652ee02ab598a01ccbeec55ca8e2b7df72d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg5Y2M2NTJlZTAyYWI1OThhMDFjY2JlZWM1NWNhOGUyYjdkZjcyZA==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-06-07T22:23:15Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-06-07T22:23:15Z"}, "message": "rs6000-c: The return type of the following built-in functions was implemented as int not...\n\ngcc/ChangeLog:\n\n2017-06-07  Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/rs6000-c: The return type of the following\n\tbuilt-in functions was implemented as int not long long.  Fix sign\n\tof return value for the unsigned version of vec_mulo and vec_mule.\n\tvector unsigned long long vec_bperm (vector unsigned long long,\n\t                                     vector unsigned char)\n\tvector signed long long vec_mule (vector signed int,\n\t                                  vector signed int)\n\tvector unsigned long long vec_mule (vector unsigned int,\n\t                                    vector unsigned int)\n\tvector signed long long vec_mulo (vector signed int,\n\t                                  vector signed int)\n\tvector unsigned long long vec_mulo (vector unsigned int,\n\t                                    vector unsigned int)\n\t* doc/extend.texi: Fix the documentation for the built-in\n\tfunctions.\n\ngcc/testsuite/ChangeLog:\n\n2017-06-07  Carl Love  <cel@us.ibm.com>\n\t* gcc.target/powerpc/builtins-3.c: Fix vec_mule, vec_mulo test cases.\n---\n\nFrom-SVN: r248998", "tree": {"sha": "15a28cf8c4a3785cf0121c6f7191b5d0fc44d6b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15a28cf8c4a3785cf0121c6f7191b5d0fc44d6b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/989cc652ee02ab598a01ccbeec55ca8e2b7df72d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/989cc652ee02ab598a01ccbeec55ca8e2b7df72d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/989cc652ee02ab598a01ccbeec55ca8e2b7df72d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a7f0dc0605c868a232b322862aa3b2e2c945ec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a7f0dc0605c868a232b322862aa3b2e2c945ec9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a7f0dc0605c868a232b322862aa3b2e2c945ec9"}], "stats": {"total": 76, "additions": 51, "deletions": 25}, "files": [{"sha": "f07dc97d21edda0333053ea2dc2c9319c79ee3f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=989cc652ee02ab598a01ccbeec55ca8e2b7df72d", "patch": "@@ -1,3 +1,21 @@\n+2017-06-07  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000-c: The return type of the following\n+\tbuilt-in functions was implemented as int not long long.  Fix sign\n+\tof return value for the unsigned version of vec_mulo and vec_mule.\n+\tvector unsigned long long vec_bperm (vector unsigned long long,\n+\t                                     vector unsigned char)\n+\tvector signed long long vec_mule (vector signed int,\n+\t                                  vector signed int)\n+\tvector unsigned long long vec_mule (vector unsigned int,\n+\t                                    vector unsigned int)\n+\tvector signed long long vec_mulo (vector signed int,\n+\t                                  vector signed int)\n+\tvector unsigned long long vec_mulo (vector unsigned int,\n+\t                                    vector unsigned int)\n+\t* doc/extend.texi: Fix the documentation for the built-in\n+\tfunctions.\n+\n 2017-06-07  Carl Love  <cel@us.ibm.com>\n \n \tPR target/80982"}, {"sha": "f1e8d3d2d5e6c321dcf3f454f98b2ecb1755e422", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=989cc652ee02ab598a01ccbeec55ca8e2b7df72d", "patch": "@@ -2208,9 +2208,9 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n   { ALTIVEC_BUILTIN_VEC_MULE, ALTIVEC_BUILTIN_VMULESH,\n     RS6000_BTI_V4SI, RS6000_BTI_V8HI, RS6000_BTI_V8HI, 0 },\n   { ALTIVEC_BUILTIN_VEC_MULE, ALTIVEC_BUILTIN_VMULESH,\n-    RS6000_BTI_V4SI, RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0 },\n-  { ALTIVEC_BUILTIN_VEC_MULE, ALTIVEC_BUILTIN_VMULESH,\n-    RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI,\n+    RS6000_BTI_V2DI, RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_MULE, ALTIVEC_BUILTIN_VMULEUH,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V4SI,\n     RS6000_BTI_unsigned_V4SI, 0 },\n   { ALTIVEC_BUILTIN_VEC_VMULEUB, ALTIVEC_BUILTIN_VMULEUB,\n     RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, 0 },\n@@ -2227,9 +2227,9 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n   { ALTIVEC_BUILTIN_VEC_MULO, ALTIVEC_BUILTIN_VMULOUH,\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V8HI, 0 },\n   { ALTIVEC_BUILTIN_VEC_MULO, ALTIVEC_BUILTIN_VMULOSH,\n-    RS6000_BTI_V4SI, RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0 },\n-  { ALTIVEC_BUILTIN_VEC_MULO, ALTIVEC_BUILTIN_VMULOSH,\n-    RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI,\n+    RS6000_BTI_V2DI, RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_MULO, ALTIVEC_BUILTIN_VMULOUH,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V4SI,\n     RS6000_BTI_unsigned_V4SI, 0 },\n   { ALTIVEC_BUILTIN_VEC_MULO, ALTIVEC_BUILTIN_VMULOSH,\n     RS6000_BTI_V4SI, RS6000_BTI_V8HI, RS6000_BTI_V8HI, 0 },"}, {"sha": "d467a1652eeaba47140734796b1c75322527cd9f", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=989cc652ee02ab598a01ccbeec55ca8e2b7df72d", "patch": "@@ -16345,10 +16345,10 @@ vector signed short vec_mule (vector signed char,\n vector unsigned int vec_mule (vector unsigned short,\n                               vector unsigned short);\n vector signed int vec_mule (vector signed short, vector signed short);\n-vector unsigned int vec_mule (vector unsigned int,\n-                              vector unsigned int);\n-vector signed int vec_mule (vector signed int,\n-                            vector signed int);\n+vector unsigned long long vec_mule (vector unsigned int,\n+                                    vector unsigned int);\n+vector signed long long vec_mule (vector signed int,\n+                                  vector signed int);\n \n vector signed int vec_vmulesh (vector signed short,\n                                vector signed short);\n@@ -16368,7 +16368,10 @@ vector signed short vec_mulo (vector signed char, vector signed char);\n vector unsigned int vec_mulo (vector unsigned short,\n                               vector unsigned short);\n vector signed int vec_mulo (vector signed short, vector signed short);\n-vector unsigned int vec_mulo (vector unsigned short, vector unsigned short);\n+vector unsigned long long vec_mulo (vector unsigned int,\n+                                    vector unsigned int);\n+vector signed long long vec_mulo (vector signed int,\n+                                  vector signed int);\n \n vector signed int vec_vmulosh (vector signed short,\n                                vector signed short);"}, {"sha": "e85e47843ef2d7a9f2f338104d7cd17f9a6fa767", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=989cc652ee02ab598a01ccbeec55ca8e2b7df72d", "patch": "@@ -1,3 +1,6 @@\n+2017-06-07  Carl Love  <cel@us.ibm.com>\n+\t* gcc.target/powerpc/builtins-3.c: Fix vec_mule, vec_mulo test cases.\n+\n 2017-06-07  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR c++/80990"}, {"sha": "b25248891d125135ac0acfe90f5c9363faaddda9", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3.c", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/989cc652ee02ab598a01ccbeec55ca8e2b7df72d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c?ref=989cc652ee02ab598a01ccbeec55ca8e2b7df72d", "patch": "@@ -112,26 +112,26 @@ test_vull_slo_vull_vuc (vector unsigned long long x, vector unsigned char y)\n \treturn vec_slo (x, y);\n }\n \n-vector signed int\n-test_vsi_mule_vsi_vsi (vector signed int x, vector signed int y)\n+vector signed long long\n+test_vsll_mule_vsi_vsi (vector signed int x, vector signed int y)\n {\n \treturn vec_mule (x, y);\n }\n \n-vector unsigned int\n-test_vui_mule_vui_vui (vector unsigned int x, vector unsigned int y)\n+vector unsigned long long\n+test_vull_mule_vui_vui (vector unsigned int x, vector unsigned int y)\n {\n \treturn vec_mule (x, y);\n }\n \n-vector signed int\n-test_vsi_mulo_vsi_vsi (vector signed int x, vector signed int y)\n+vector signed long long\n+test_vsll_mulo_vsi_vsi (vector signed int x, vector signed int y)\n {\n \treturn vec_mulo (x, y);\n }\n \n-vector unsigned int\n-test_vui_mulo_vui_vui (vector unsigned int x, vector unsigned int y)\n+vector unsigned long long\n+test_vull_mulo_vui_vui (vector unsigned int x, vector unsigned int y)\n {\n \treturn vec_mulo (x, y);\n }\n@@ -207,10 +207,10 @@ test_vul_sldw_vul_vul (vector unsigned long long x,\n      test_vsll_slo_vsll_vuc    1 vslo\n      test_vull_slo_vsll_vsc    1 vslo\n      test_vull_slo_vsll_vuc    1 vslo\n-     test_vsi_mulo_vsi_vsi     1 vmulosh\n-     test_vui_mulo_vui_vui     1 vmulosh\n-     test_vsi_mule_vsi_vsi     1 vmulesh\n-     test_vui_mule_vui_vui     1 vmulesh\n+     test_vsll_mulo_vsi_vsi    1 vmulosh\n+     test_vull_mulo_vui_vui    1 vmulouh\n+     test_vsll_mule_vsi_vsi    1 vmulesh\n+     test_vull_mule_vui_vui    1 vmuleuh\n      test_vsc_mulo_vsc_vsc     1 xxsldwi\n      test_vuc_mulo_vuc_vuc     1 xxsldwi\n      test_vssi_mulo_vssi_vssi  1 xxsldwi\n@@ -236,6 +236,8 @@ test_vul_sldw_vul_vul (vector unsigned long long x,\n /* { dg-final { scan-assembler-times \"xvnegsp\"  1 } } */\n /* { dg-final { scan-assembler-times \"xvnegdp\"  1 } } */\n /* { dg-final { scan-assembler-times \"vslo\"     4 } } */\n-/* { dg-final { scan-assembler-times \"vmulosh\"  2 } } */\n-/* { dg-final { scan-assembler-times \"vmulesh\"  2 } } */\n+/* { dg-final { scan-assembler-times \"vmulosh\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vmulouh\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vmulesh\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vmuleuh\"  1 } } */\n /* { dg-final { scan-assembler-times \"xxsldwi\"  8 } } */"}]}