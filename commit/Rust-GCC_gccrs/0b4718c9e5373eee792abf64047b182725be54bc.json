{"sha": "0b4718c9e5373eee792abf64047b182725be54bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI0NzE4YzllNTM3M2VlZTc5MmFiZjY0MDQ3YjE4MjcyNWJlNTRiYw==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-10-03T22:38:39Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-10-03T22:38:39Z"}, "message": "altivec.md (altivec_lvsl): New define_expand.\n\n[gcc]\n\n2014-10-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* altivec.md (altivec_lvsl): New define_expand.\n\t(altivec_lvsl_direct): Rename define_insn from altivec_lvsl.\n\t(altivec_lvsr): New define_expand.\n\t(altivec_lvsr_direct): Rename define_insn from altivec_lvsr.\n\t* rs6000.c (rs6000_expand_builtin): Change to use\n\taltivec_lvs[lr]_direct; remove commented-out code.\n\n[gcc/testsuite]\n\n2014-10-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/lvsl-lvsr.c: New test.\n\nFrom-SVN: r215882", "tree": {"sha": "cc3d8245407bb00b6e0139a5b4b0fc87fdf0675d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc3d8245407bb00b6e0139a5b4b0fc87fdf0675d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b4718c9e5373eee792abf64047b182725be54bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b4718c9e5373eee792abf64047b182725be54bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b4718c9e5373eee792abf64047b182725be54bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b4718c9e5373eee792abf64047b182725be54bc/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bea887908adaba4909b4242fb4bf8621885fa30d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bea887908adaba4909b4242fb4bf8621885fa30d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bea887908adaba4909b4242fb4bf8621885fa30d"}], "stats": {"total": 91, "additions": 86, "deletions": 5}, "files": [{"sha": "f7724f5b696fa8f9e9f5b656d03a9fc1360fc59b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4718c9e5373eee792abf64047b182725be54bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4718c9e5373eee792abf64047b182725be54bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b4718c9e5373eee792abf64047b182725be54bc", "patch": "@@ -1,3 +1,12 @@\n+2014-10-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* altivec.md (altivec_lvsl): New define_expand.\n+\t(altivec_lvsl_direct): Rename define_insn from altivec_lvsl.\n+\t(altivec_lvsr): New define_expand.\n+\t(altivec_lvsr_direct): Rename define_insn from altivec_lvsr.\n+\t* rs6000.c (rs6000_expand_builtin): Change to use\n+\taltivec_lvs[lr]_direct; remove commented-out code.\n+\n 2014-10-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):"}, {"sha": "02ea14237825f21e50f702ce0a38bde488c76b82", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 50, "deletions": 2, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4718c9e5373eee792abf64047b182725be54bc/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4718c9e5373eee792abf64047b182725be54bc/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=0b4718c9e5373eee792abf64047b182725be54bc", "patch": "@@ -2297,15 +2297,63 @@\n   \"dststt %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-(define_insn \"altivec_lvsl\"\n+(define_expand \"altivec_lvsl\"\n+  [(use (match_operand:V16QI 0 \"register_operand\" \"\"))\n+   (use (match_operand:V16QI 1 \"memory_operand\" \"\"))]\n+  \"TARGET_ALTIVEC\"\n+{\n+  if (VECTOR_ELT_ORDER_BIG)\n+    emit_insn (gen_altivec_lvsl_direct (operands[0], operands[1]));\n+  else\n+    {\n+      int i;\n+      rtx mask, perm[16], constv, vperm;\n+      mask = gen_reg_rtx (V16QImode);\n+      emit_insn (gen_altivec_lvsl_direct (mask, operands[1]));\n+      for (i = 0; i < 16; ++i)\n+        perm[i] = GEN_INT (i);\n+      constv = gen_rtx_CONST_VECTOR (V16QImode, gen_rtvec_v (16, perm));\n+      constv = force_reg (V16QImode, constv);\n+      vperm = gen_rtx_UNSPEC (V16QImode, gen_rtvec (3, mask, mask, constv),\n+                              UNSPEC_VPERM);\n+      emit_insn (gen_rtx_SET (VOIDmode, operands[0], vperm));\n+    }\n+  DONE;\n+})\n+\n+(define_insn \"altivec_lvsl_direct\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n \t(unspec:V16QI [(match_operand:V16QI 1 \"memory_operand\" \"Z\")]\n \t\t      UNSPEC_LVSL))]\n   \"TARGET_ALTIVEC\"\n   \"lvsl %0,%y1\"\n   [(set_attr \"type\" \"vecload\")])\n \n-(define_insn \"altivec_lvsr\"\n+(define_expand \"altivec_lvsr\"\n+  [(use (match_operand:V16QI 0 \"register_operand\" \"\"))\n+   (use (match_operand:V16QI 1 \"memory_operand\" \"\"))]\n+  \"TARGET_ALTIVEC\"\n+{\n+  if (VECTOR_ELT_ORDER_BIG)\n+    emit_insn (gen_altivec_lvsr_direct (operands[0], operands[1]));\n+  else\n+    {\n+      int i;\n+      rtx mask, perm[16], constv, vperm;\n+      mask = gen_reg_rtx (V16QImode);\n+      emit_insn (gen_altivec_lvsr_direct (mask, operands[1]));\n+      for (i = 0; i < 16; ++i)\n+        perm[i] = GEN_INT (i);\n+      constv = gen_rtx_CONST_VECTOR (V16QImode, gen_rtvec_v (16, perm));\n+      constv = force_reg (V16QImode, constv);\n+      vperm = gen_rtx_UNSPEC (V16QImode, gen_rtvec (3, mask, mask, constv),\n+                              UNSPEC_VPERM);\n+      emit_insn (gen_rtx_SET (VOIDmode, operands[0], vperm));\n+    }\n+  DONE;\n+})\n+\n+(define_insn \"altivec_lvsr_direct\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n \t(unspec:V16QI [(match_operand:V16QI 1 \"memory_operand\" \"Z\")]\n \t\t      UNSPEC_LVSR))]"}, {"sha": "489c65ecb98cace1e31f6115e8f236f397d6554a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4718c9e5373eee792abf64047b182725be54bc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4718c9e5373eee792abf64047b182725be54bc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=0b4718c9e5373eee792abf64047b182725be54bc", "patch": "@@ -13898,8 +13898,8 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n     case ALTIVEC_BUILTIN_MASK_FOR_LOAD:\n     case ALTIVEC_BUILTIN_MASK_FOR_STORE:\n       {\n-\tint icode = (BYTES_BIG_ENDIAN ? (int) CODE_FOR_altivec_lvsr\n-\t\t     : (int) CODE_FOR_altivec_lvsl);\n+\tint icode = (BYTES_BIG_ENDIAN ? (int) CODE_FOR_altivec_lvsr_direct\n+\t\t     : (int) CODE_FOR_altivec_lvsl_direct);\n \tenum machine_mode tmode = insn_data[icode].operand[0].mode;\n \tenum machine_mode mode = insn_data[icode].operand[1].mode;\n \ttree arg;\n@@ -13927,7 +13927,6 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n \t    || ! (*insn_data[icode].operand[0].predicate) (target, tmode))\n \t  target = gen_reg_rtx (tmode);\n \n-\t/*pat = gen_altivec_lvsr (target, op);*/\n \tpat = GEN_FCN (icode) (target, op);\n \tif (!pat)\n \t  return 0;"}, {"sha": "036b171d079aff8d8bffbf11dbc7fca19a894bc5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4718c9e5373eee792abf64047b182725be54bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4718c9e5373eee792abf64047b182725be54bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b4718c9e5373eee792abf64047b182725be54bc", "patch": "@@ -1,3 +1,7 @@\n+2014-10-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/lvsl-lvsr.c: New test.\n+\n 2014-10-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* g++.dg/ext/altivec-2.C: Compile with -Wno-deprecated to avoid"}, {"sha": "71dd0a24ae15fa0e3315ed9fb4ad88c7c359bf01", "filename": "gcc/testsuite/gcc.target/powerpc/lvsl-lvsr.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4718c9e5373eee792abf64047b182725be54bc/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flvsl-lvsr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4718c9e5373eee792abf64047b182725be54bc/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flvsl-lvsr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flvsl-lvsr.c?ref=0b4718c9e5373eee792abf64047b182725be54bc", "patch": "@@ -0,0 +1,21 @@\n+/* Test expected code generation for lvsl and lvsr on little endian.\n+   Note that lvsl and lvsr are each produced once, but the filename\n+   causes them to appear twice in the file.  */\n+\n+/* { dg-do compile { target { powerpc64le-*-* } } } */\n+/* { dg-options \"-O0 -Wno-deprecated\" } */\n+/* { dg-final { scan-assembler-times \"lvsl\" 2 } } */\n+/* { dg-final { scan-assembler-times \"lvsr\" 2 } } */\n+/* { dg-final { scan-assembler-times \"lxvd2x\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vperm\" 2 } } */\n+\n+\n+#include <altivec.h>\n+\n+float f[20];\n+\n+void foo ()\n+{\n+  vector unsigned char a = vec_lvsl (4, f);\n+  vector unsigned char b = vec_lvsr (8, f);\n+}"}]}