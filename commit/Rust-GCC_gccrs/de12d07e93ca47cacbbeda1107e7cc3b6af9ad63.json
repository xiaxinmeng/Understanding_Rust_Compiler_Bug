{"sha": "de12d07e93ca47cacbbeda1107e7cc3b6af9ad63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUxMmQwN2U5M2NhNDdjYWNiYmVkYTExMDdlN2NjM2I2YWY5YWQ2Mw==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-12-13T09:04:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-13T09:04:58Z"}, "message": "[Ada] Avoid spurious mismatch error of assertion policy in generics\n\n2019-12-13  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_util.adb (Original_Aspect_Pragma_Name): Go through\n\tOriginal_Node for pragma.\n\nFrom-SVN: r279359", "tree": {"sha": "7239ff004511d31c45c55a907996fe19b50ad350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7239ff004511d31c45c55a907996fe19b50ad350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de12d07e93ca47cacbbeda1107e7cc3b6af9ad63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de12d07e93ca47cacbbeda1107e7cc3b6af9ad63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de12d07e93ca47cacbbeda1107e7cc3b6af9ad63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de12d07e93ca47cacbbeda1107e7cc3b6af9ad63/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8973b987b6e8a33560a20723d2d32275ee86e907", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8973b987b6e8a33560a20723d2d32275ee86e907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8973b987b6e8a33560a20723d2d32275ee86e907"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "3ec76a28f3092cf8c6c68e5ddeac0b41d195c903", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de12d07e93ca47cacbbeda1107e7cc3b6af9ad63/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de12d07e93ca47cacbbeda1107e7cc3b6af9ad63/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=de12d07e93ca47cacbbeda1107e7cc3b6af9ad63", "patch": "@@ -1,3 +1,8 @@\n+2019-12-13  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_util.adb (Original_Aspect_Pragma_Name): Go through\n+\tOriginal_Node for pragma.\n+\n 2019-12-13  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* exp_aggr.adb, exp_unst.adb: Minor fix typo in comment."}, {"sha": "e29360f576fbfa27673432c57d780f37960249a6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de12d07e93ca47cacbbeda1107e7cc3b6af9ad63/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de12d07e93ca47cacbbeda1107e7cc3b6af9ad63/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=de12d07e93ca47cacbbeda1107e7cc3b6af9ad63", "patch": "@@ -23326,13 +23326,16 @@ package body Sem_Util is\n          Item := Corresponding_Aspect (Item);\n       end if;\n \n-      --  Retrieve the name of the aspect/pragma. Note that Pre, Pre_Class,\n+      --  Retrieve the name of the aspect/pragma. As assertion pragmas from\n+      --  a generic instantiation might have been rewritten into pragma Check,\n+      --  we look at the original node for Item. Note also that Pre, Pre_Class,\n       --  Post and Post_Class rewrite their pragma identifier to preserve the\n-      --  original name.\n+      --  original name, so we look at the original node for the identifier.\n       --  ??? this is kludgey\n \n       if Nkind (Item) = N_Pragma then\n-         Item_Nam := Chars (Original_Node (Pragma_Identifier (Item)));\n+         Item_Nam :=\n+           Chars (Original_Node (Pragma_Identifier (Original_Node (Item))));\n \n       else\n          pragma Assert (Nkind (Item) = N_Aspect_Specification);"}]}