{"sha": "9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ1OTQxZWVhOGU1NWQyN2I4YzRmMmIxOTE2Y2E3MjcyZDVjMTZjYw==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-08-31T22:37:48Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-08-31T22:37:48Z"}, "message": "jvmti.h: Update from Classpath to get latest fixes and improvements.\n\n        * include/jvmti.h: Update from Classpath to get latest fixes and\n        improvements.\n\nFrom-SVN: r116610", "tree": {"sha": "de41342da59953b64c7e75672a32dc79c57917d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de41342da59953b64c7e75672a32dc79c57917d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "acf3d3f8bf5fe84ed2c1dcdfa8924e660279d054", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf3d3f8bf5fe84ed2c1dcdfa8924e660279d054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf3d3f8bf5fe84ed2c1dcdfa8924e660279d054"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "ee73bdb8ef753b66b867831515b46a45446b1f21", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc", "patch": "@@ -1,3 +1,8 @@\n+2006-08-31  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/jvmti.h: Update from Classpath to get latest fixes and\n+\timprovements.\n+\n 2006-08-29  Gary Benson  <gbenson@redhat.com>\n \n \t* java/net/SocketPermission.java"}, {"sha": "b26f7932e54a8589c7fa841ce5352ad3d7b0b41f", "filename": "libjava/classpath/include/jvmti.h", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc/libjava%2Fclasspath%2Finclude%2Fjvmti.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc/libjava%2Fclasspath%2Finclude%2Fjvmti.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fjvmti.h?ref=9d5941eea8e55d27b8c4f2b1916ca7272d5c16cc", "patch": "@@ -45,6 +45,8 @@ exception statement from your version. */\n #define _CLASSPATH_JVMTI_H\n #include <jni.h>\n \n+#include \"jvmti_md.h\"\n+\n /* The VM might define JVMTI base types */\n #ifndef _CLASSPATH_VM_JVMTI_TYPES_DEFINED\n \n@@ -79,7 +81,7 @@ typedef struct _jvmtiAddrLocationMap jvmtiAddrLocationMap;\n #ifdef __cplusplus\n typedef struct _Jv_JVMTIEnv jvmtiEnv;\n #else\n-typedef const struct _Jv_jvmtiEnv jvmtiEnv;\n+typedef const struct _Jv_jvmtiEnv *jvmtiEnv;\n #endif\n \n /*\n@@ -140,7 +142,7 @@ typedef enum\n   JVMTI_ERROR_UNSUPPORTED_REDEFINITION_CLASS_MODIFIERS_CHANGED = 70,\n   JVMTI_ERROR_UNSUPPORTED_REDEFINITION_METHOD_MODIFIERS_CHANGED = 71,\n   JVMTI_ERROR_MUST_POSSESS_CAPABILITY = 99,\n-  JVMTI_ERROR_ILLEGAL_ARGUMENT = 103,\n+  JVMTI_ERROR_ILLEGAL_ARGUMENT = 103\n } jvmtiError;\n \n /*\n@@ -283,7 +285,7 @@ typedef enum\n   JVMTI_EVENT_EXCEPTION_CATCH = 59,\n   JVMTI_EVENT_SINGLE_STEP =  60,\n   JVMTI_EVENT_FRAME_POP = 61,\n-  JVMTI_EVENT_BERAKPOINT = 62,\n+  JVMTI_EVENT_BREAKPOINT = 62,\n   JVMTI_EVENT_FIELD_ACCESS = 63,\n   JVMTI_EVENT_FIELD_MODIFICATION = 64,\n   JVMTI_EVENT_METHOD_ENTRY = 65,\n@@ -658,7 +660,8 @@ struct _Jv_jvmtiEnv\n \t\t\t\t      jthread thread);\n \n   jvmtiError (JNICALL *StopThread) (jvmtiEnv *env,\n-\t\t\t\t    jthread thread);\n+\t\t\t\t    jthread thread,\n+                                    jobject exception);\n \n   jvmtiError (JNICALL *InterruptThread) (jvmtiEnv *env,\n \t\t\t\t\t jthread thread);\n@@ -790,7 +793,8 @@ struct _Jv_jvmtiEnv\n \t\t\t\t\tjrawMonitorID monitor);\n \n   jvmtiError (JNICALL *RawMonitorWait) (jvmtiEnv *env,\n-\t\t\t\t\tjrawMonitorID monitor);\n+\t\t\t\t\tjrawMonitorID monitor,\n+                                        jlong millis);\n \n   jvmtiError (JNICALL *RawMonitorNotify) (jvmtiEnv *env,\n \t\t\t\t\t  jrawMonitorID monitor);\n@@ -844,7 +848,7 @@ struct _Jv_jvmtiEnv\n \n   jvmtiError (JNICALL *GetSourceFileName) (jvmtiEnv *env,\n \t\t\t\t\t   jclass klass,\n-\t\t\t\t\t   char *source_name_ptr);\n+\t\t\t\t\t   char **source_name_ptr);\n \n   jvmtiError (JNICALL *GetClassModifiers) (jvmtiEnv *env,\n \t\t\t\t\t   jclass klass,\n@@ -1249,8 +1253,8 @@ class _Jv_JVMTIEnv\n   jvmtiError ResumeThread (jthread thread)\n   { return p->ResumeThread (this, thread); }\n \n-  jvmtiError StopThread (jthread thread)\n-  { return p->StopThread (this, thread); }\n+  jvmtiError StopThread (jthread thread, jobject exception)\n+  { return p->StopThread (this, thread, exception); }\n \n   jvmtiError InterruptThread (jthread thread)\n   { return p->InterruptThread (this, thread); }\n@@ -1360,8 +1364,8 @@ class _Jv_JVMTIEnv\n   jvmtiError RawMonitorExit (jrawMonitorID monitor)\n   { return p->RawMonitorExit (this, monitor); }\n \n-  jvmtiError RawMonitorWait (jrawMonitorID monitor)\n-  { return p->RawMonitorWait (this, monitor); }\n+  jvmtiError RawMonitorWait (jrawMonitorID monitor, jlong millis)\n+  { return p->RawMonitorWait (this, monitor, millis); }\n \n   jvmtiError RawMonitorNotify (jrawMonitorID monitor)\n   { return p->RawMonitorNotify (this, monitor); }\n@@ -1400,7 +1404,7 @@ class _Jv_JVMTIEnv\n   jvmtiError GetClassStatus (jclass klass, jint *status_ptr)\n   { return p->GetClassStatus (this, klass, status_ptr); }\n \n-  jvmtiError GetSourceFileName (jclass klass, char *source_name_ptr)\n+  jvmtiError GetSourceFileName (jclass klass, char **source_name_ptr)\n   { return p->GetSourceFileName (this, klass, source_name_ptr); }\n \n   jvmtiError GetClassModifiers (jclass klass, jint *modifiers_ptr)"}]}