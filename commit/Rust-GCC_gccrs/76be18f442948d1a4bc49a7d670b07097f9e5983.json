{"sha": "76be18f442948d1a4bc49a7d670b07097f9e5983", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZiZTE4ZjQ0Mjk0OGQxYTRiYzQ5YTdkNjcwYjA3MDk3ZjllNTk4Mw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-01-08T13:20:19Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-01-08T14:46:04Z"}, "message": "x86-64: Use R10 and R11 for profiling large model with PIC\n\nFor NO_PROFILE_COUNTERS targets, R11 is a scratch register.  We can use\nR10 and R11 to call mcount in large model with PIC.\n\ngcc/\n\n\tPR target/98482\n\t* config/i386/i386.c (x86_function_profiler): Use R10 and R11\n\tto call mcount in large model with PIC for NO_PROFILE_COUNTERS\n\ttargets.\n\ngcc/testsuite/\n\n\tPR target/98482\n\t* gcc.target/i386/pr98482-2.c: Updated.", "tree": {"sha": "d4d5c53ce81ccdec74ab8805cc9f6c5bf9f959d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4d5c53ce81ccdec74ab8805cc9f6c5bf9f959d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76be18f442948d1a4bc49a7d670b07097f9e5983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76be18f442948d1a4bc49a7d670b07097f9e5983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76be18f442948d1a4bc49a7d670b07097f9e5983", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76be18f442948d1a4bc49a7d670b07097f9e5983/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77a375a3ebf822914c19835ac690c67694c70bd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a375a3ebf822914c19835ac690c67694c70bd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a375a3ebf822914c19835ac690c67694c70bd0"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "d35af37a49c4c9f51e01620c877bd55e51f594a1", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76be18f442948d1a4bc49a7d670b07097f9e5983/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76be18f442948d1a4bc49a7d670b07097f9e5983/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=76be18f442948d1a4bc49a7d670b07097f9e5983", "patch": "@@ -20806,12 +20806,20 @@ x86_function_profiler (FILE *file, int labelno ATTRIBUTE_UNUSED)\n \t\t       mcount_name);\n \t      break;\n \t    case CM_LARGE_PIC:\n+#ifdef NO_PROFILE_COUNTERS\n+\t      fprintf (file, \"1:\\tmovabsq\\t$_GLOBAL_OFFSET_TABLE_-1b, %%r11\\n\");\n+\t      fprintf (file, \"\\tleaq\\t1b(%%rip), %%r10\\n\");\n+\t      fprintf (file, \"\\taddq\\t%%r11, %%r10\\n\");\n+\t      fprintf (file, \"\\tmovabsq\\t$%s@PLTOFF, %%r11\\n\", mcount_name);\n+\t      fprintf (file, \"\\taddq\\t%%r11, %%r10\\n\");\n+\t      fprintf (file, \"\\tcall\\t*%%r10\\n\");\n+#else\n \t      sorry (\"profiling %<-mcmodel=large%> with PIC is not supported\");\n+#endif\n \t      break;\n \t    case CM_SMALL_PIC:\n \t    case CM_MEDIUM_PIC:\n-\t      fprintf (file, \"1:\\tcall\\t*%s@GOTPCREL(%%rip)\\n\",\n-\t\t       mcount_name);\n+\t      fprintf (file, \"1:\\tcall\\t*%s@GOTPCREL(%%rip)\\n\", mcount_name);\n \t      break;\n \t    default:\n \t      x86_print_call_or_nop (file, mcount_name);"}, {"sha": "0ee142db12cc5ae3dd02b67b89e3af8f1ca91ba6", "filename": "gcc/testsuite/gcc.target/i386/pr98482-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76be18f442948d1a4bc49a7d670b07097f9e5983/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76be18f442948d1a4bc49a7d670b07097f9e5983/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-2.c?ref=76be18f442948d1a4bc49a7d670b07097f9e5983", "patch": "@@ -2,8 +2,9 @@\n /* { dg-require-effective-target mfentry } */\n /* { dg-require-effective-target fpic } */\n /* { dg-options \"-fpic -fprofile -mfentry -O2 -mcmodel=large\" } */\n+/* { dg-final { scan-assembler \"movabsq\\t\\\\\\$__fentry__@PLTOFF, %r11\\n\\taddq\\t%r11, %r10\\n\\tcall\\t\\\\*%r10\" } } */\n \n void\n func (void)\n {\n-} /* { dg-message \"sorry, unimplemented: profiling '-mcmodel=large' with PIC is not supported\" } */\n+}"}]}