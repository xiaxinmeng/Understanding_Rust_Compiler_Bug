{"sha": "002ee64f257f80ee1ca84091a5564669c7db5fbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAyZWU2NGYyNTdmODBlZTFjYTg0MDkxYTU1NjQ2NjljN2RiNWZiZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-07-20T10:30:47Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-07-20T10:30:47Z"}, "message": "cppinit.c (remove_dup_dir): Make static.\n\n\t* cppinit.c (remove_dup_dir): Make static.\n\t(remove_dup_dirs): Make static. Only warn about preempting a\n\tsystem directory with a non-system directory.\n\nFrom-SVN: r44188", "tree": {"sha": "8af78e78eba41a5b221046c007374ccdf5da9eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8af78e78eba41a5b221046c007374ccdf5da9eb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/002ee64f257f80ee1ca84091a5564669c7db5fbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002ee64f257f80ee1ca84091a5564669c7db5fbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/002ee64f257f80ee1ca84091a5564669c7db5fbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002ee64f257f80ee1ca84091a5564669c7db5fbe/comments", "author": null, "committer": null, "parents": [{"sha": "ef1846a7b8317d54dd8476de8b333e3c36b26bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef1846a7b8317d54dd8476de8b333e3c36b26bf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef1846a7b8317d54dd8476de8b333e3c36b26bf0"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "7e96c6823c918de7bced722ad1668c99ce6f6cb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002ee64f257f80ee1ca84091a5564669c7db5fbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002ee64f257f80ee1ca84091a5564669c7db5fbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=002ee64f257f80ee1ca84091a5564669c7db5fbe", "patch": "@@ -1,3 +1,9 @@\n+2001-07-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* cppinit.c (remove_dup_dir): Make static.\n+\t(remove_dup_dirs): Make static. Only warn about preempting a\n+\tsystem directory with a non-system directory.\n+\n 2001-07-19  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* ifcvt.c (noce_try_store_flag_constants): Correct order"}, {"sha": "0aac625f84c044bfde93f34259779f52c4ea679e", "filename": "gcc/cppinit.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002ee64f257f80ee1ca84091a5564669c7db5fbe/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002ee64f257f80ee1ca84091a5564669c7db5fbe/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=002ee64f257f80ee1ca84091a5564669c7db5fbe", "patch": "@@ -100,9 +100,9 @@ static void init_library\t\tPARAMS ((void));\n static void init_builtins\t\tPARAMS ((cpp_reader *));\n static void append_include_chain\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\t char *, int, int));\n-struct search_path * remove_dup_dir\tPARAMS ((cpp_reader *,\n+static struct search_path * remove_dup_dir\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\t struct search_path *));\n-struct search_path * remove_dup_dirs PARAMS ((cpp_reader *,\n+static struct search_path * remove_dup_dirs PARAMS ((cpp_reader *,\n \t\t\t\t\t\t struct search_path *));\n static void merge_include_chains\tPARAMS ((cpp_reader *));\n static void do_includes\t\t\tPARAMS ((cpp_reader *,\n@@ -264,7 +264,7 @@ append_include_chain (pfile, dir, path, cxx_aware)\n /* Handle a duplicated include path.  PREV is the link in the chain\n    before the duplicate.  The duplicate is removed from the chain and\n    freed.  Returns PREV.  */\n-struct search_path *\n+static struct search_path *\n remove_dup_dir (pfile, prev)\n      cpp_reader *pfile;\n      struct search_path *prev;\n@@ -285,7 +285,7 @@ remove_dup_dir (pfile, prev)\n    chain, or NULL if the chain is empty.  This algorithm is quadratic\n    in the number of -I switches, which is acceptable since there\n    aren't usually that many of them.  */\n-struct search_path *\n+static struct search_path *\n remove_dup_dirs (pfile, head)\n      cpp_reader *pfile;\n      struct search_path *head;\n@@ -297,20 +297,18 @@ remove_dup_dirs (pfile, head)\n       for (other = head; other != cur; other = other->next)\n         if (INO_T_EQ (cur->ino, other->ino) && cur->dev == other->dev)\n \t  {\n-\t    if (cur->sysp)\n+\t    if (cur->sysp && !other->sysp)\n \t      {\n \t\tcpp_warning (pfile,\n \t\t\t     \"changing search order for system directory \\\"%s\\\"\",\n \t\t\t     cur->name);\n \t\tif (strcmp (cur->name, other->name))\n-\t\t  cpp_warning (pfile, other->sysp\n-\t\t\t       ? \"  as it is the same as system directory \\\"%s\\\"\"\n-\t\t\t       : \"  as it is the same as non-system directory \\\"%s\\\"\",\n+\t\t  cpp_warning (pfile, \n+\t\t\t       \"  as it is the same as non-system directory \\\"%s\\\"\",\n \t\t\t       other->name);\n \t\telse\n-\t\t  cpp_warning (pfile, other->sysp\n-\t\t\t       ? \"  as it has already been specified as a system directory\"\n-\t\t\t       : \"  as it has already been specified as a non-system directory\");\n+\t\t  cpp_warning (pfile, \n+\t\t\t       \"  as it has already been specified as a non-system directory\");\n \t      }\n \t    cur = remove_dup_dir (pfile, prev);\n \t    break;"}]}