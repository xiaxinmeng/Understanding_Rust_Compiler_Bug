{"sha": "d30a825a20a3ff56fe44f5adaf5d5c6153785cac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMwYTgyNWEyMGEzZmY1NmZlNDRmNWFkYWY1ZDVjNjE1Mzc4NWNhYw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-05-20T13:41:34Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-05-20T13:41:34Z"}, "message": "re PR c++/2781 (bad code generated for reference call with -O2 (regression from 2.95))\n\ncp:\n\tPR c++/2781\n\t* optimize.c (update_cloned_parm): Copy addressability and other\n\tflags.\ntestsuite:\n\t* g++.old-deja/g++.other/optimize1.C: New test.\n\nFrom-SVN: r42344", "tree": {"sha": "e3de0e3eaa9d99d38ab4bcb7dfec4cf41c3a4c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3de0e3eaa9d99d38ab4bcb7dfec4cf41c3a4c1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d30a825a20a3ff56fe44f5adaf5d5c6153785cac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30a825a20a3ff56fe44f5adaf5d5c6153785cac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30a825a20a3ff56fe44f5adaf5d5c6153785cac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30a825a20a3ff56fe44f5adaf5d5c6153785cac/comments", "author": null, "committer": null, "parents": [{"sha": "3b82c249189ff6349ca7d8407258cb9745fd3b17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b82c249189ff6349ca7d8407258cb9745fd3b17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b82c249189ff6349ca7d8407258cb9745fd3b17"}], "stats": {"total": 89, "additions": 88, "deletions": 1}, "files": [{"sha": "a05a3acea858bb0b4bd26b4a2c268992d88a85e0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30a825a20a3ff56fe44f5adaf5d5c6153785cac/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30a825a20a3ff56fe44f5adaf5d5c6153785cac/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d30a825a20a3ff56fe44f5adaf5d5c6153785cac", "patch": "@@ -1,3 +1,9 @@\n+2001-05-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/2781\n+\t* optimize.c (update_cloned_parm): Copy addressability and other\n+\tflags.\n+\n 2001-05-20  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* pt.c (determine_specialization): Ignore artificial functions."}, {"sha": "b6b03b9423d57edd3912201e1eaa63d06b369fe5", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30a825a20a3ff56fe44f5adaf5d5c6153785cac/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30a825a20a3ff56fe44f5adaf5d5c6153785cac/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=d30a825a20a3ff56fe44f5adaf5d5c6153785cac", "patch": "@@ -1021,12 +1021,19 @@ update_cloned_parm (parm, cloned_parm)\n      tree cloned_parm;\n {\n   DECL_ABSTRACT_ORIGIN (cloned_parm) = parm;\n+\n+  /* We may have taken its address. */\n+  TREE_ADDRESSABLE (cloned_parm) = TREE_ADDRESSABLE (parm);\n+\n+  /* The definition might have different constness. */\n+  TREE_READONLY (cloned_parm) = TREE_READONLY (parm);\n+  \n+  TREE_USED (cloned_parm) = TREE_USED (parm);\n   \n   /* The name may have changed from the declaration. */\n   DECL_NAME (cloned_parm) = DECL_NAME (parm);\n   DECL_SOURCE_FILE (cloned_parm) = DECL_SOURCE_FILE (parm);\n   DECL_SOURCE_LINE (cloned_parm) = DECL_SOURCE_LINE (parm);\n-  \n }\n \n /* FN is a function that has a complete body.  Clone the body as"}, {"sha": "79d4f0a763f4e1f84774aa2f1adf5e8a5b92ed49", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30a825a20a3ff56fe44f5adaf5d5c6153785cac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30a825a20a3ff56fe44f5adaf5d5c6153785cac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d30a825a20a3ff56fe44f5adaf5d5c6153785cac", "patch": "@@ -1,3 +1,7 @@\n+2001-05-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.other/optimize1.C: New test.\n+\n 2001-05-20  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* g++.old-deja/g++.pt/spec41.C: New test."}, {"sha": "bff78dc3eaba32ee7f2f60cea5ce68be3b5f9638", "filename": "gcc/testsuite/g++.old-deja/g++.other/optimize1.C", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30a825a20a3ff56fe44f5adaf5d5c6153785cac/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foptimize1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30a825a20a3ff56fe44f5adaf5d5c6153785cac/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foptimize1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foptimize1.C?ref=d30a825a20a3ff56fe44f5adaf5d5c6153785cac", "patch": "@@ -0,0 +1,70 @@\n+// Special g++ Options: -O2\n+// \n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 18 May 2001 <nathan@codesourcery.com>\n+\n+// Bug 2781. We forgot to copy addressability information when\n+// cloning.\n+\n+struct B\n+{\n+  B(int v1);\n+  void Member (int v1);\n+  static void Static (int v1);\n+};\n+\n+struct D : B\n+{\n+  D (int v1);\n+};\n+\n+void xswap(int& x1) ;\n+\n+int xxx = 0;\n+\n+B::B(int v1) \n+{\n+  xswap(v1);\n+  xxx = v1;\n+}\n+\n+void B::Member(int v1) \n+{\n+  xswap(v1);\n+  xxx = v1;\n+}\n+\n+void B::Static(int v1) \n+{\n+  xswap(v1);\n+  xxx = v1;\n+}\n+\n+D::D(int v1)\n+  : B (v1)\n+{\n+}\n+\n+void xswap (int& x1) { x1 = 2; }\n+\n+int main ()\n+{\n+  B p (1);\n+\n+  if (xxx != 2)\n+    return 1;\n+\n+  D q (1);\n+  if (xxx != 2)\n+    return 2;\n+  \n+  p.Member (1);\n+  if (xxx != 2)\n+    return 3;\n+\n+  p.Static (1);\n+  if (xxx != 2)\n+    return 4;\n+\n+  return 0;\n+}"}]}