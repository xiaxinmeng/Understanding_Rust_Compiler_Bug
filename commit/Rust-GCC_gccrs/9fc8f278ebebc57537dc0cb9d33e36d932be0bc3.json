{"sha": "9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "node_id": "C_kwDOANBUbNoAKDlmYzhmMjc4ZWJlYmM1NzUzN2RjMGNiOWQzM2UzNmQ5MzJiZTBiYzM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-17T00:17:00Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-17T00:17:00Z"}, "message": "Daily bump.", "tree": {"sha": "fb17f877813d7d1424ee5d85318f0bf13b014df4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb17f877813d7d1424ee5d85318f0bf13b014df4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/comments", "author": null, "committer": null, "parents": [{"sha": "3ef2343927741757f7e2bed219c6e510f6f0facd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef2343927741757f7e2bed219c6e510f6f0facd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ef2343927741757f7e2bed219c6e510f6f0facd"}], "stats": {"total": 279, "additions": 278, "deletions": 1}, "files": [{"sha": "aee29354f012b17e981ee113c7f357ed353833ef", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "patch": "@@ -1,3 +1,7 @@\n+2022-03-16  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* MAINTAINERS: Add myself to DCO section.\n+\n 2022-03-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* configure.ac: Fix incorrect option in comment."}, {"sha": "f835ec0424dbf231c664be72de4fd2bdc1812a97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "patch": "@@ -1,3 +1,85 @@\n+2022-03-16  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* config/i386/sse.md: Delete corrupt character/typo.\n+\n+2022-03-16  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR target/94680\n+\t* config/i386/sse.md (sse2_movq128): New define_expand to\n+\tpreserve previous named instruction.\n+\t(*sse2_movq128_<mode>): Renamed from sse2_movq128, and\n+\tgeneralized to VI8F_128 (both V2DI and V2DF).\n+\n+2022-03-16  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\tPR tree-optimization/104941\n+\t* tree-object-size.cc (size_for_offset): Make useless conversion\n+\tcheck lighter and assign result of fold_convert to OFFSET.\n+\n+2022-03-16  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/104890\n+\t* config/i386/x86gprintrin.h: Also check _SOFT_FLOAT before\n+\tpushing target(\"general-regs-only\").\n+\n+2022-03-16  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* common/config/riscv/riscv-common.cc (riscv_ext_version_table):\n+\tAdd version info for zk, zks and zkn.\n+\n+2022-03-16  LiaoShihua  <shihua@iscas.ac.cn>\n+\n+\t* common/config/riscv/riscv-common.cc\n+\t(riscv_combine_info): New.\n+\t(riscv_subset_list::handle_combine_ext): Combine back into zk to\n+\tmaintain the canonical order in isa strings.\n+\t(riscv_subset_list::parse): Ditto.\n+\t* config/riscv/riscv-subset.h (handle_combine_ext): New.\n+\n+2022-03-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102008\n+\t* passes.def: Move the added code sinking pass before the\n+\tpreceeding phiopt pass.\n+\n+2022-03-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/96780\n+\t* doc/invoke.texi (C++ Dialect Options): Document\n+\t-ffold-simple-inlines.\n+\n+2022-03-16  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\tPR tree-optimization/104942\n+\t* tree-object-size.cc (alloc_object_size): Remove STRIP_NOPS.\n+\n+2022-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104910\n+\t* config/aarch64/aarch64.cc (aarch64_load_symref_appropriately): Copy\n+\timm rtx.\n+\n+2022-03-16  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-match-head.cc (single_use): Implement inline using a\n+\tsingle loop.\n+\n+2022-03-16  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* match.pd (X CMP X -> true): Test tree_expr_maybe_nan_p\n+\tinstead of HONOR_NANS.\n+\t(X LTGT X -> false): Enable if X is not tree_expr_maybe_nan_p, as\n+\tthis can't trap/signal.\n+\n+2022-03-16  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/104946\n+\t* config/i386/i386-builtin.def (BDESC): Add\n+\tCODE_FOR_sse4_1_blendvpd for IX86_BUILTIN_BLENDVPD.\n+\t* config/i386/i386.cc (ix86_gimple_fold_builtin): Don't fold\n+\t__builtin_ia32_blendvpd w/o sse4.2\n+\n 2022-03-15  Peter Bergner  <bergner@linux.ibm.com>\n \n \tPR target/104923"}, {"sha": "d034c2934fb9f8df333affb526e5aa055107b1b0", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "patch": "@@ -1 +1 @@\n-20220316\n+20220317"}, {"sha": "2d33f09f9882aa603a8dfd057bdf320621fb88cd", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "patch": "@@ -1,3 +1,75 @@\n+2022-03-16  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104955\n+\t* diagnostic-manager.cc (get_emission_location): New.\n+\t(diagnostic_manager::diagnostic_manager): Initialize\n+\tm_num_disabled_diagnostics.\n+\t(diagnostic_manager::add_diagnostic): Reject diagnostics that\n+\twill eventually be rejected due to being disabled.\n+\t(diagnostic_manager::emit_saved_diagnostics): Log the number\n+\tof disabled diagnostics.\n+\t(diagnostic_manager::emit_saved_diagnostic): Split out logic for\n+\tdetermining emission location to get_emission_location.\n+\t* diagnostic-manager.h\n+\t(diagnostic_manager::m_num_disabled_diagnostics): New field.\n+\t* engine.cc (stale_jmp_buf::get_controlling_option): New.\n+\t(stale_jmp_buf::emit): Use it.\n+\t* pending-diagnostic.h\n+\t(pending_diagnostic::get_controlling_option): New vfunc.\n+\t* region-model.cc\n+\t(poisoned_value_diagnostic::get_controlling_option): New.\n+\t(poisoned_value_diagnostic::emit): Use it.\n+\t(shift_count_negative_diagnostic::get_controlling_option): New.\n+\t(shift_count_negative_diagnostic::emit): Use it.\n+\t(shift_count_overflow_diagnostic::get_controlling_option): New.\n+\t(shift_count_overflow_diagnostic::emit): Use it.\n+\t(dump_path_diagnostic::get_controlling_option): New.\n+\t(dump_path_diagnostic::emit): Use it.\n+\t(write_to_const_diagnostic::get_controlling_option): New.\n+\t(write_to_const_diagnostic::emit): Use it.\n+\t(write_to_string_literal_diagnostic::get_controlling_option): New.\n+\t(write_to_string_literal_diagnostic::emit): Use it.\n+\t* sm-file.cc (double_fclose::get_controlling_option): New.\n+\t(double_fclose::emit): Use it.\n+\t(file_leak::get_controlling_option): New.\n+\t(file_leak::emit): Use it.\n+\t* sm-malloc.cc (mismatching_deallocation::get_controlling_option):\n+\tNew.\n+\t(mismatching_deallocation::emit): Use it.\n+\t(double_free::get_controlling_option): New.\n+\t(double_free::emit): Use it.\n+\t(possible_null_deref::get_controlling_option): New.\n+\t(possible_null_deref::emit): Use it.\n+\t(possible_null_arg::get_controlling_option): New.\n+\t(possible_null_arg::emit): Use it.\n+\t(null_deref::get_controlling_option): New.\n+\t(null_deref::emit): Use it.\n+\t(null_arg::get_controlling_option): New.\n+\t(null_arg::emit): Use it.\n+\t(use_after_free::get_controlling_option): New.\n+\t(use_after_free::emit): Use it.\n+\t(malloc_leak::get_controlling_option): New.\n+\t(malloc_leak::emit): Use it.\n+\t(free_of_non_heap::get_controlling_option): New.\n+\t(free_of_non_heap::emit): Use it.\n+\t* sm-pattern-test.cc (pattern_match::get_controlling_option): New.\n+\t(pattern_match::emit): Use it.\n+\t* sm-sensitive.cc\n+\t(exposure_through_output_file::get_controlling_option): New.\n+\t(exposure_through_output_file::emit): Use it.\n+\t* sm-signal.cc (signal_unsafe_call::get_controlling_option): New.\n+\t(signal_unsafe_call::emit): Use it.\n+\t* sm-taint.cc (tainted_array_index::get_controlling_option): New.\n+\t(tainted_array_index::emit): Use it.\n+\t(tainted_offset::get_controlling_option): New.\n+\t(tainted_offset::emit): Use it.\n+\t(tainted_size::get_controlling_option): New.\n+\t(tainted_size::emit): Use it.\n+\t(tainted_divisor::get_controlling_option): New.\n+\t(tainted_divisor::emit): Use it.\n+\t(tainted_allocation_size::get_controlling_option): New.\n+\t(tainted_allocation_size::emit): Use it.\n+\n 2022-03-15  David Malcolm  <dmalcolm@redhat.com>\n \n \t* store.cc (store::store): Presize m_cluster_map."}, {"sha": "e82d5f80e980f82f114cd8ec26b2fbd501792b7d", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "patch": "@@ -1,3 +1,14 @@\n+2022-03-16  Christophe Lyon  <christophe.lyon@arm.com>\n+\t    Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR c/98198\n+\t* c-attribs.cc (decl_or_type_attrs): Add error_mark_node check.\n+\n+2022-03-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/96780\n+\t* c.opt: Add -ffold-simple-inlines.\n+\n 2022-03-13  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* c-target.def (check_string_object_format_arg): Fix description typo."}, {"sha": "b6318e48a4062784914d6f2936e953d5fe00a002", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "patch": "@@ -1,3 +1,15 @@\n+2022-03-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* search.cc (lookup_member): Simplify by handling all values\n+\tof protect together in the ambiguous case.  Don't modify protect.\n+\n+2022-03-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/96780\n+\t* cp-gimplify.cc (cp_fold) <case CALL_EXPR>: Fold calls to\n+\tstd::move/forward and other cast-like functions into simple\n+\tcasts.\n+\n 2022-03-15  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/103177"}, {"sha": "f25b4cbe5da1df6540385b939d5e5f6fde7c7495", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "patch": "@@ -1,3 +1,65 @@\n+2022-03-16  Christophe Lyon  <christophe.lyon@arm.com>\n+\t    Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR c/98198\n+\t* gcc.dg/pr98198.c: New test case.\n+\n+2022-03-16  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR target/94680\n+\t* gcc.target/i386/sse2-pr94680-2.c: New stricter V2DF test case.\n+\n+2022-03-16  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/analyzer/many-disabled-diagnostics.c: New test.\n+\t* gcc.dg/plugin/analyzer_gil_plugin.c\n+\t(gil_diagnostic::get_controlling_option): New.\n+\t(double_save_thread::emit): Use it.\n+\t(fncall_without_gil::emit): Likewise.\n+\t(pyobject_usage_without_gil::emit): Likewise.\n+\n+2022-03-16  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\tPR tree-optimization/104941\n+\t* gcc.dg/builtin-dynamic-object-size-0.c (S1, S2): New structs.\n+\t(test_alloc_nested_structs, g): New functions.\n+\t(main): Call test_alloc_nested_structs.\n+\n+2022-03-16  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/104890\n+\t* gcc.target/i386/pr104890.c: New test.\n+\n+2022-03-16  LiaoShihua  <shihua@iscas.ac.cn>\n+\n+\t* gcc.target/riscv/predef-17.c: New test.\n+\n+2022-03-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102008\n+\t* gcc.target/aarch64/pr102008.c: New testcase.\n+\n+2022-03-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/96780\n+\t* g++.dg/opt/pr96780.C: New test.\n+\n+2022-03-16  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\tPR tree-optimization/104942\n+\t* gcc.dg/builtin-dynamic-object-size-0.c (alloc_func_long,\n+\ttest_builtin_malloc_long): New functions.\n+\t(main): Use it.\n+\n+2022-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104910\n+\t* gcc.dg/pr104910.c: New test.\n+\n+2022-03-16  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/sse4_1-blendvpd-1.c: New test.\n+\n 2022-03-15  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/95000"}, {"sha": "973c470b89a47ae15232fc255b594cc19f43dc8d", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "patch": "@@ -1,3 +1,14 @@\n+2022-03-16  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* fortran.c (omp_set_num_teams_8_): Call omp_set_num_teams instead of\n+\tomp_set_max_active_levels.\n+\t* testsuite/libgomp.fortran/icv-8.f90: New test.\n+\n+2022-03-16  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR testsuite/102841\n+\t* testsuite/libgomp.oacc-c-c++-common/host_data-7.c: Adjust.\n+\n 2022-03-13  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* libgomp.texi: Fix typo."}, {"sha": "64a2ad26a23f308baf58f7a30da67e9f19c4a0ff", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc8f278ebebc57537dc0cb9d33e36d932be0bc3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9fc8f278ebebc57537dc0cb9d33e36d932be0bc3", "patch": "@@ -1,3 +1,26 @@\n+2022-03-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/103407\n+\t* config/abi/pre/gnu.ver: Make version for std::from_chars\n+\tdepend on HAVE_USELOCALE macro.\n+\t* testsuite/util/testsuite_abi.cc (compare_symbols): Treat\n+\tstd::from_chars for floating-point types as undesignated if\n+\tnot found in the baseline symbols file.\n+\n+2022-03-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/charconv (__cpp_lib_to_chars): Only define when\n+\tboth from_chars and to_chars are supported for floating-point\n+\ttypes.\n+\t(from_chars, to_chars): Adjust preprocessor conditions guarding\n+\tdeclarations.\n+\t* include/std/version (__cpp_lib_to_chars): Adjust condition to\n+\tmatch <charconv> definition.\n+\t* src/c++17/floating_from_chars.cc (from_chars_strtod): New\n+\tfunction template.\n+\t(from_chars): Simplify preprocessor checks and use\n+\tfrom_chars_strtod when appropriate.\n+\n 2022-03-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/104875"}]}