{"sha": "097392de6b7eb5cba34ed8f367ab79837d7cedd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk3MzkyZGU2YjdlYjVjYmEzNGVkOGYzNjdhYjc5ODM3ZDdjZWRkMg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2008-01-03T02:38:24Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2008-01-03T02:38:24Z"}, "message": "re PR tree-optimization/34635 (tree check: expected polynomial_chrec, have integer_cst in add_multivariate_self_dist, at tree-data-ref.c:2813)\n\n2007-12-19  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR tree-optimization/34635\n\t* tree-data-ref.c (add_other_self_distances): Make sure that the\n\tevolution step is constant.\n\n\t* gcc.dg/tree-ssa/pr34635.c: New.\n\t* gcc.dg/tree-ssa/pr34635-1.c: New.\n\nFrom-SVN: r131275", "tree": {"sha": "7b6ea1945bfbc46843c39712210b90e54ad59129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b6ea1945bfbc46843c39712210b90e54ad59129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/097392de6b7eb5cba34ed8f367ab79837d7cedd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/097392de6b7eb5cba34ed8f367ab79837d7cedd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/097392de6b7eb5cba34ed8f367ab79837d7cedd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/097392de6b7eb5cba34ed8f367ab79837d7cedd2/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c7cc333be628a708bac4b59d1745c2c91bdcdc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7cc333be628a708bac4b59d1745c2c91bdcdc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c7cc333be628a708bac4b59d1745c2c91bdcdc3"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "f5516e75f4c929594a819ed7ea45d1baca579315", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/097392de6b7eb5cba34ed8f367ab79837d7cedd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/097392de6b7eb5cba34ed8f367ab79837d7cedd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=097392de6b7eb5cba34ed8f367ab79837d7cedd2", "patch": "@@ -1,3 +1,9 @@\n+2007-12-19  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/34635\n+\t* tree-data-ref.c (add_other_self_distances): Make sure that the\n+\tevolution step is constant.\n+\n 2008-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/34608"}, {"sha": "ff42813f96b6e3a88de7988358aa07dd1d716dc1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/097392de6b7eb5cba34ed8f367ab79837d7cedd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/097392de6b7eb5cba34ed8f367ab79837d7cedd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=097392de6b7eb5cba34ed8f367ab79837d7cedd2", "patch": "@@ -1,3 +1,9 @@\n+2007-12-19  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/34635\n+\t* gcc.dg/tree-ssa/pr34635.c: New.\n+\t* gcc.dg/tree-ssa/pr34635-1.c: New.\n+\n 2008-01-02  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR middle-end/34562"}, {"sha": "5afc6db27263b231a42edda125cbcd27892c89f0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr34635-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/097392de6b7eb5cba34ed8f367ab79837d7cedd2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34635-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/097392de6b7eb5cba34ed8f367ab79837d7cedd2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34635-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34635-1.c?ref=097392de6b7eb5cba34ed8f367ab79837d7cedd2", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+void foo(int x[])\n+{\n+ int i, j;\n+\n+ for (i = 0; i < 2; i++)\n+   for (j = 0; j < 2; j++)\n+   {\n+     x[i] = x[i+j];\n+     x[i] = x[i+j];\n+   }\n+}"}, {"sha": "5b4253cc4f0347f23c1fa71e0e3e8a6a3385701e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr34635.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/097392de6b7eb5cba34ed8f367ab79837d7cedd2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34635.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/097392de6b7eb5cba34ed8f367ab79837d7cedd2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34635.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34635.c?ref=097392de6b7eb5cba34ed8f367ab79837d7cedd2", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+void foo(int x[])\n+{\n+ int i, j;\n+\n+ for (i = 0; i < 2; i++)\n+   for (j = 0; j < 2; j++)\n+   {\n+     x[i] = x[i*j];\n+     x[i] = x[i*j];\n+   }\n+}"}, {"sha": "88f6347f777d8afd7ba8adec05999bc118285c2e", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/097392de6b7eb5cba34ed8f367ab79837d7cedd2/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/097392de6b7eb5cba34ed8f367ab79837d7cedd2/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=097392de6b7eb5cba34ed8f367ab79837d7cedd2", "patch": "@@ -2818,9 +2818,9 @@ constant_access_functions (const struct data_dependence_relation *ddr)\n   return true;\n }\n \n-\n /* Helper function for the case where DDR_A and DDR_B are the same\n-   multivariate access function.  */\n+   multivariate access function with a constant step.  For an example\n+   see pr34635-1.c.  */\n \n static void\n add_multivariate_self_dist (struct data_dependence_relation *ddr, tree c_2)\n@@ -2890,7 +2890,17 @@ add_other_self_distances (struct data_dependence_relation *ddr)\n \t\t  return;\n \t\t}\n \n-\t      add_multivariate_self_dist (ddr, DR_ACCESS_FN (DDR_A (ddr), 0));\n+\t      access_fun = DR_ACCESS_FN (DDR_A (ddr), 0);\n+\n+\t      if (TREE_CODE (CHREC_LEFT (access_fun)) == POLYNOMIAL_CHREC)\n+\t\tadd_multivariate_self_dist (ddr, access_fun);\n+\t      else\n+\t\t/* The evolution step is not constant: it varies in\n+\t\t   the outer loop, so this cannot be represented by a\n+\t\t   distance vector.  For example in pr34635.c the\n+\t\t   evolution is {0, +, {0, +, 4}_1}_2.  */\n+\t\tDDR_AFFINE_P (ddr) = false;\n+\n \t      return;\n \t    }\n "}]}