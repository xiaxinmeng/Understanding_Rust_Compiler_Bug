{"sha": "a619822289e7946eef8f2a7c7ddb682308fb13ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYxOTgyMjI4OWU3OTQ2ZWVmOGYyYTdjN2RkYjY4MjMwOGZiMTNlZQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-06-02T17:39:39Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-06-02T17:39:39Z"}, "message": "configure.ac (gcc_cv_ld_sol2_emulation): Test for GNU ld *_sol2 linker emulations.\n\n\t* configure.ac (gcc_cv_ld_sol2_emulation): Test for GNU ld *_sol2\n\tlinker emulations.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\n\t* config/i386/sol2-10.h [TARGET_GNU_LD] (I386_EMULATION): Define.\n\t(X86_64_EMULATION): Define.\n\t(TARGET_LD_EMULATION): Use them.\n\n\t* config/sparc/sol2-gld-bi.h (SPARC32_EMULATION): Define.\n\t(SPARC64_EMULATION): Define.\n\t(LINK_ARCH_SPEC): Use them.\n\nFrom-SVN: r160178", "tree": {"sha": "ec75c6dbfc74fe667063d8f58c67ead1f5d64829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec75c6dbfc74fe667063d8f58c67ead1f5d64829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a619822289e7946eef8f2a7c7ddb682308fb13ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a619822289e7946eef8f2a7c7ddb682308fb13ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a619822289e7946eef8f2a7c7ddb682308fb13ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a619822289e7946eef8f2a7c7ddb682308fb13ee/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6b7f7035579437cca221884047df6346c01b49d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6b7f7035579437cca221884047df6346c01b49d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6b7f7035579437cca221884047df6346c01b49d"}], "stats": {"total": 105, "additions": 100, "deletions": 5}, "files": [{"sha": "3fb2eec149df17b2e62b1750259ad0cd8f300e6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a619822289e7946eef8f2a7c7ddb682308fb13ee", "patch": "@@ -1,3 +1,18 @@\n+2010-06-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (gcc_cv_ld_sol2_emulation): Test for GNU ld *_sol2\n+\tlinker emulations.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\n+\t* config/i386/sol2-10.h [TARGET_GNU_LD] (I386_EMULATION): Define.\n+\t(X86_64_EMULATION): Define.\n+\t(TARGET_LD_EMULATION): Use them.\n+\n+\t* config/sparc/sol2-gld-bi.h (SPARC32_EMULATION): Define.\n+\t(SPARC64_EMULATION): Define.\n+\t(LINK_ARCH_SPEC): Use them.\n+\n 2010-06-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-clast-to-gimple.c (gcc_type_for_interval): Use"}, {"sha": "b7884a386d1fbcbc909aecefc782451e5a0c8e43", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=a619822289e7946eef8f2a7c7ddb682308fb13ee", "patch": "@@ -1194,6 +1194,12 @@\n #endif\n \n \n+/* Define if your linker supports the *_sol2 emulations. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_LD_SOL2_EMULATION\n+#endif\n+\n+\n /* Define if your linker supports -Bstatic/-Bdynamic option. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_LD_STATIC_DYNAMIC"}, {"sha": "d57ed7f9d69868ba00c006aae060d06f7b2b924b", "filename": "gcc/config/i386/sol2-10.h", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2Fconfig%2Fi386%2Fsol2-10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2Fconfig%2Fi386%2Fsol2-10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-10.h?ref=a619822289e7946eef8f2a7c7ddb682308fb13ee", "patch": "@@ -120,7 +120,18 @@ along with GCC; see the file COPYING3.  If not see\n #define LINK_ARCH64_SPEC LINK_ARCH64_SPEC_BASE\n \n #ifdef TARGET_GNU_LD\n-#define TARGET_LD_EMULATION \"%{m64:-m elf_x86_64}%{!m64:-m elf_i386} \"\n+/* Since binutils 2.21, GNU ld supports new *_sol2 emulations to strictly\n+   follow the Solaris 2 ABI.  Prefer them if present.  */\n+#ifdef HAVE_LD_SOL2_EMULATION\n+#define I386_EMULATION \"elf_i386_sol2\"\n+#define X86_64_EMULATION \"elf_x86_64_sol2\"\n+#else\n+#define I386_EMULATION \"elf_i386\"\n+#define X86_64_EMULATION \"elf_x86_64\"\n+#endif\n+\n+#define TARGET_LD_EMULATION \"%{m64:-m \" X86_64_EMULATION \"}\" \\\n+\t\t\t    \"%{!m64:-m \" I386_EMULATION \"} \"\n #else\n #define TARGET_LD_EMULATION \"\"\n #endif"}, {"sha": "04d5da45cf1036a85cea5c0850ba1d5c27dfc1b1", "filename": "gcc/config/sparc/sol2-gld-bi.h", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2Fconfig%2Fsparc%2Fsol2-gld-bi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2Fconfig%2Fsparc%2Fsol2-gld-bi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-gld-bi.h?ref=a619822289e7946eef8f2a7c7ddb682308fb13ee", "patch": "@@ -32,25 +32,35 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define LINK_ARCH64_SPEC \\\n   LINK_ARCH64_SPEC_BASE \"%{!static: -rpath-link %R/usr/lib/sparcv9}\"\n \n+/* Since binutils 2.21, GNU ld supports new *_sol2 emulations to strictly\n+   follow the Solaris 2 ABI.  Prefer them if present.  */\n+#ifdef HAVE_LD_SOL2_EMULATION\n+#define SPARC32_EMULATION \"elf32_sparc_sol2\"\n+#define SPARC64_EMULATION \"elf64_sparc_sol2\"\n+#else\n+#define SPARC32_EMULATION \"elf32_sparc\"\n+#define SPARC64_EMULATION \"elf64_sparc\"\n+#endif\n+\n #undef LINK_ARCH_SPEC\n #if DISABLE_MULTILIB\n #if DEFAULT_ARCH32_P\n #define LINK_ARCH_SPEC \"\\\n-%{m32:-m elf32_sparc %(link_arch32)} \\\n+%{m32:-m \" SPARC32_EMULATION \" %(link_arch32)} \\\n %{m64:%edoes not support multilib} \\\n %{!m32:%{!m64:%(link_arch_default)}} \\\n \"\n #else\n #define LINK_ARCH_SPEC \"\\\n %{m32:%edoes not support multilib} \\\n-%{m64:-m elf64_sparc %(link_arch64)} \\\n+%{m64:-m \" SPARC64_EMULATION \" %(link_arch64)} \\\n %{!m32:%{!m64:%(link_arch_default)}} \\\n \"\n #endif\n #else\n #define LINK_ARCH_SPEC \"\\\n-%{m32:-m elf32_sparc %(link_arch32)} \\\n-%{m64:-m elf64_sparc %(link_arch64)} \\\n+%{m32:-m \" SPARC32_EMULATION \" %(link_arch32)} \\\n+%{m64:-m \" SPARC64_EMULATION \" %(link_arch64)} \\\n %{!m32:%{!m64:%(link_arch_default)}} \\\n \"\n #endif"}, {"sha": "ea79930b808f271a72d1675d31f309dc96923e0f", "filename": "gcc/configure", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=a619822289e7946eef8f2a7c7ddb682308fb13ee", "patch": "@@ -24893,6 +24893,36 @@ $as_echo \"$as_me: WARNING: --build-id is not supported by your linker; --enable-\n   fi\n fi\n \n+# In binutils 2.21, GNU ld gained support for new emulations fully\n+# supporting the Solaris 2 ABI.  Detect their presence in the linker used.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking linker *_sol2 emulation support\" >&5\n+$as_echo_n \"checking linker *_sol2 emulation support... \" >&6; }\n+if test \"${gcc_cv_ld_sol2_emulation+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_ld_sol2_emulation=no\n+  if test $in_tree_ld = yes ; then\n+    if test \"$gcc_cv_gld_major_version\" -eq 2 -a \\\n+       \"$gcc_cv_gld_minor_version\" -ge 21 -o \\\n+       \"$gcc_cv_gld_major_version\" -gt 2 \\\n+       && test $in_tree_ld_is_elf = yes; then\n+      gcc_cv_ld_sol2_emulation=yes\n+    fi\n+  elif test x$gcc_cv_ld != x; then\n+    if $gcc_cv_ld -V 2>/dev/null | sed -e '1,/Supported emulations/d;q' | \\\n+       grep _sol2 > /dev/null; then\n+      gcc_cv_ld_sol2_emulation=yes\n+    fi\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_ld_sol2_emulation\" >&5\n+$as_echo \"$gcc_cv_ld_sol2_emulation\" >&6; }\n+if test x\"$gcc_cv_ld_sol2_emulation\" = xyes; then\n+\n+$as_echo \"#define HAVE_LD_SOL2_EMULATION 1\" >>confdefs.h\n+\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking linker --sysroot support\" >&5\n $as_echo_n \"checking linker --sysroot support... \" >&6; }\n if test \"${gcc_cv_ld_sysroot+set}\" = set; then :"}, {"sha": "27cb45c9a9ddeeb1efa4fb32915cf4164d5adbbd", "filename": "gcc/configure.ac", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a619822289e7946eef8f2a7c7ddb682308fb13ee/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=a619822289e7946eef8f2a7c7ddb682308fb13ee", "patch": "@@ -4034,6 +4034,29 @@ if test x\"$enable_linker_build_id\" = xyes; then\n   fi\n fi\n \n+# In binutils 2.21, GNU ld gained support for new emulations fully\n+# supporting the Solaris 2 ABI.  Detect their presence in the linker used.\n+AC_CACHE_CHECK(linker *_sol2 emulation support,\n+  gcc_cv_ld_sol2_emulation,\n+  [gcc_cv_ld_sol2_emulation=no\n+  if test $in_tree_ld = yes ; then\n+    if test \"$gcc_cv_gld_major_version\" -eq 2 -a \\\n+       \"$gcc_cv_gld_minor_version\" -ge 21 -o \\\n+       \"$gcc_cv_gld_major_version\" -gt 2 \\\n+       && test $in_tree_ld_is_elf = yes; then\n+      gcc_cv_ld_sol2_emulation=yes\n+    fi\n+  elif test x$gcc_cv_ld != x; then\n+    if $gcc_cv_ld -V 2>/dev/null | sed -e '1,/Supported emulations/d;q' | \\\n+       grep _sol2 > /dev/null; then\n+      gcc_cv_ld_sol2_emulation=yes\n+    fi\n+  fi])\n+if test x\"$gcc_cv_ld_sol2_emulation\" = xyes; then\n+  AC_DEFINE(HAVE_LD_SOL2_EMULATION, 1,\n+  [Define if your linker supports the *_sol2 emulations.])\n+fi\n+\n AC_CACHE_CHECK(linker --sysroot support,\n   gcc_cv_ld_sysroot,\n   [gcc_cv_ld_sysroot=no"}]}