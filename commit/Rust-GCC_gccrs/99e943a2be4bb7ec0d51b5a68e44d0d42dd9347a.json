{"sha": "99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTllOTQzYTJiZTRiYjdlYzBkNTFiNWE2OGU0NGQwZDQyZGQ5MzQ3YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-06-29T11:28:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-06-29T11:28:17Z"}, "message": "genmatch.c (add_operator): Treat ADDR_EXPR as atom.\n\n2015-06-29  Richard Biener  <rguenther@suse.de>\n\n\t* genmatch.c (add_operator): Treat ADDR_EXPR as atom.\n\t* fold-const.c (fold_binary_loc): Move &A - &B simplification\n\tvia ptr_difference_const ...\n\t* match.pd: ... here.\n\tWhen matching (X ^ Y) == Y also match with swapped operands.\n\nFrom-SVN: r225115", "tree": {"sha": "de2d1287b43d96691cfb42c5e3a59e13f9cf3696", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de2d1287b43d96691cfb42c5e3a59e13f9cf3696"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2dcaddb8d74e3ec30edb264b845a346e0b7e9ab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dcaddb8d74e3ec30edb264b845a346e0b7e9ab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dcaddb8d74e3ec30edb264b845a346e0b7e9ab9"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "976e6894fa2c6c14c5d281fa0f9ad16de666a380", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a", "patch": "@@ -1,3 +1,11 @@\n+2015-06-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* genmatch.c (add_operator): Treat ADDR_EXPR as atom.\n+\t* fold-const.c (fold_binary_loc): Move &A - &B simplification\n+\tvia ptr_difference_const ...\n+\t* match.pd: ... here.\n+\tWhen matching (X ^ Y) == Y also match with swapped operands.\n+\n 2015-06-29  Richard Biener  <rguenther@suse.de>\n \n \t* lto-streamer.h (LTO_major_version): Bump to 5."}, {"sha": "7b9502e2d38d56683c47137c06114bf52072457b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a", "patch": "@@ -10618,16 +10618,6 @@ fold_binary_loc (location_t loc,\n \t\t\t    fold_convert_loc (loc, type,\n \t\t\t\t\t      negate_expr (arg1)));\n \n-      /* Try folding difference of addresses.  */\n-      {\n-\tHOST_WIDE_INT diff;\n-\n-\tif ((TREE_CODE (arg0) == ADDR_EXPR\n-\t     || TREE_CODE (arg1) == ADDR_EXPR)\n-\t    && ptr_difference_const (arg0, arg1, &diff))\n-\t  return build_int_cst_type (type, diff);\n-      }\n-\n       /* Fold &a[i] - &a[j] to i-j.  */\n       if (TREE_CODE (arg0) == ADDR_EXPR\n \t  && TREE_CODE (TREE_OPERAND (arg0, 0)) == ARRAY_REF"}, {"sha": "2bd61d3f06be028898b4772e58e5d9f5d1d44642", "filename": "gcc/genmatch.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a", "patch": "@@ -324,6 +324,9 @@ add_operator (enum tree_code code, const char *id,\n       /* And allow CONSTRUCTOR for vector initializers.  */\n       && !(code == CONSTRUCTOR))\n     return;\n+  /* Treat ADDR_EXPR as atom, thus don't allow matching its operand.  */\n+  if (code == ADDR_EXPR)\n+    nargs = 0;\n   operator_id *op = new operator_id (code, id, nargs, tcc);\n   id_base **slot = operators->find_slot_with_hash (op, op->hashval, INSERT);\n   if (*slot)"}, {"sha": "0189a966bc8d5d57879319b7deccb39ae022db09", "filename": "gcc/match.pd", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=99e943a2be4bb7ec0d51b5a68e44d0d42dd9347a", "patch": "@@ -545,6 +545,21 @@ along with GCC; see the file COPYING3.  If not see\n   (with { tree algn = wide_int_to_tree (TREE_TYPE (@0), wi::bit_not (@1)); }\n    (bit_and @0 { algn; })))\n \n+/* Try folding difference of addresses.  */\n+(simplify\n+ (minus (convert ADDR_EXPR@0) (convert @1))\n+ (if (tree_nop_conversion_p (type, TREE_TYPE (@0)))\n+  (with { HOST_WIDE_INT diff; }\n+   (if (ptr_difference_const (@0, @1, &diff))\n+    { build_int_cst_type (type, diff); }))))\n+(simplify\n+ (minus (convert @0) (convert ADDR_EXPR@1))\n+ (if (tree_nop_conversion_p (type, TREE_TYPE (@0)))\n+  (with { HOST_WIDE_INT diff; }\n+   (if (ptr_difference_const (@0, @1, &diff))\n+    { build_int_cst_type (type, diff); }))))\n+\n+\n \n /* We can't reassociate at all for saturating types.  */\n (if (!TYPE_SATURATING (type))\n@@ -1229,7 +1244,7 @@ along with GCC; see the file COPYING3.  If not see\n  /* (X ^ Y) == Y becomes X == 0.\n     Likewise (X ^ Y) == X becomes Y == 0.  */\n  (simplify\n-  (cmp (bit_xor:c @0 @1) @0)\n+  (cmp:c (bit_xor:c @0 @1) @0)\n   (cmp @1 { build_zero_cst (TREE_TYPE (@1)); }))\n \n  /* (X ^ C1) op C2 can be rewritten as X op (C1 ^ C2).  */"}]}