{"sha": "0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVlMmVhMDk1YzBmODU3NjFmNWYyMDliZTNlN2ExYmFjYzJkZWE3Zg==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-02-16T03:54:54Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-02-16T03:54:54Z"}, "message": "c-tree.texi: Use `@.' where appropriate.\n\n* doc/c-tree.texi: Use `@.' where appropriate.\n* doc/extend.texi: Likewise.\n* doc/install.texi: Likewise.\n* doc/invoke.texi: Likewise.\n* doc/loop.texi: Likewise.\n* doc/makefile.texi: Likewise.\n* doc/md.texi: Likewise.\n* doc/passes.texi: Likewise.\n* doc/standards.texi: Likewise.\n* doc/tm.texi: Likewise.\n\nFrom-SVN: r132361", "tree": {"sha": "ce422517ace7236a82e63250e08e4bfb105f8c18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce422517ace7236a82e63250e08e4bfb105f8c18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/comments", "author": null, "committer": null, "parents": [{"sha": "dcec11cec7b58872b194a9774c48047f8e5c84f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcec11cec7b58872b194a9774c48047f8e5c84f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcec11cec7b58872b194a9774c48047f8e5c84f8"}], "stats": {"total": 99, "additions": 56, "deletions": 43}, "files": [{"sha": "82194cee534d5e2f70ed53c05a9504d6b5dc52f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -1,3 +1,16 @@\n+2008-02-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* doc/c-tree.texi: Use `@.' where appropriate.\n+\t* doc/extend.texi: Likewise.\n+\t* doc/install.texi: Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\t* doc/loop.texi: Likewise.\n+\t* doc/makefile.texi: Likewise.\n+\t* doc/md.texi: Likewise.\n+\t* doc/passes.texi: Likewise.\n+\t* doc/standards.texi: Likewise.\n+\t* doc/tm.texi: Likewise.\n+\n 2008-02-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/35196"}, {"sha": "b2cd9e0930c4a9dffdf738e600b8c2e4a0411dd1", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -2813,7 +2813,7 @@ label the critical section.\n @item OMP_RETURN\n \n This does not represent any OpenMP directive, it is an artificial\n-marker to indicate the end of the body of an OpenMP. It is used\n+marker to indicate the end of the body of an OpenMP@. It is used\n by the flow graph (@code{tree-cfg.c}) and OpenMP region\n building code (@code{omp-low.c}).\n "}, {"sha": "1d53a07a5d3a55088047e601dbb5690c6160d048", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -2383,7 +2383,7 @@ from the USP register in the function prologue.\n @item l1_text\n @cindex @code{l1_text} function attribute\n This attribute specifies a function to be placed into L1 Instruction\n-SRAM. The function will be put into a specific section named @code{.l1.text}.\n+SRAM@. The function will be put into a specific section named @code{.l1.text}.\n With @option{-mfdpic}, function calls with a such function as the callee\n or caller will use inlined PLT.\n \n@@ -10961,7 +10961,7 @@ The Solaris target supports @code{#pragma redefine_extname}\n Increase the minimum alignment of each @var{variable} to @var{alignment}.\n This is the same as GCC's @code{aligned} attribute @pxref{Variable\n Attributes}).  Macro expansion occurs on the arguments to this pragma\n-when compiling C and Objective-C.  It does not currently occur when\n+when compiling C and Objective-C@.  It does not currently occur when\n compiling C++, but this is a bug which may be fixed in a future\n release.\n \n@@ -11569,7 +11569,7 @@ causing an access.  However, there is reason to believe that it is,\n because otherwise certain simple expressions become undefined.  However,\n because it would surprise most programmers, G++ treats dereferencing a\n pointer to volatile object of complete type when the value is unused as\n-GCC would do for an equivalent type in C.  When the object has incomplete\n+GCC would do for an equivalent type in C@.  When the object has incomplete\n type, G++ issues a warning; if you wish to force an error, you must\n force a conversion to rvalue with, for instance, a static cast.\n "}, {"sha": "8411f4427ae4115f6984f3806282cb17a5b90ddb", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -297,14 +297,14 @@ systems' @command{tar} programs will also work, only try GNU\n \n @item GNU Multiple Precision Library (GMP) version 4.1 (or later)\n \n-Necessary to build GCC.  If you do not have it installed in your\n+Necessary to build GCC@.  If you do not have it installed in your\n library search path, you will have to configure with the\n @option{--with-gmp} configure option.  See also\n @option{--with-gmp-lib} and @option{--with-gmp-include}.\n \n @item MPFR Library version 2.3.0 (or later)\n \n-Necessary to build GCC.  It can be downloaded from\n+Necessary to build GCC@.  It can be downloaded from\n @uref{http://www.mpfr.org/}.  The version of MPFR that is bundled with\n GMP 4.1.x contains numerous bugs.  Although GCC may appear to function\n with the buggy versions of MPFR, there are a few bugs that will not be\n@@ -2997,7 +2997,7 @@ or @samp{98}.  Another way is to add an appropriate set of predefines\n to @env{CC}.  The description for the @option{munix=} option contains\n a list of the predefines used with each standard.\n \n-As of GCC 4.1, @env{DWARF2} exception handling is available on HP-UX. \n+As of GCC 4.1, @env{DWARF2} exception handling is available on HP-UX@.\n It is now the default.  This exposed a bug in the handling of data\n relocations in the GAS assembler.  The handling of 64-bit data relocations\n was seriously broken, affecting debugging and exception support on all\n@@ -3635,7 +3635,7 @@ use traps on systems that support them.\n Cross-compilers for the MIPS as target using the MIPS assembler\n currently do not work, because the auxiliary programs\n @file{mips-tdump.c} and @file{mips-tfile.c} can't be compiled on\n-anything but a MIPS.  It does work to cross compile for a MIPS\n+anything but a MIPS@.  It does work to cross compile for a MIPS\n if you use the GNU assembler and linker.\n \n The assembler from GNU binutils 2.17 and earlier has a bug in the way"}, {"sha": "280981209df9a49d77fb8e1dc012be4c045f8ad7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -3810,7 +3810,7 @@ recommended form for most uses.\n Unfortunately, there are some characters which ISO C and ISO C++ allow\n in identifiers that when turned into NFC aren't allowable as\n identifiers.  That is, there's no way to use these symbols in portable\n-ISO C or C++ and have all your identifiers in NFC.\n+ISO C or C++ and have all your identifiers in NFC@.\n @option{-Wnormalized=id} suppresses the warning for these characters.\n It is hoped that future versions of the standards involved will correct\n this, which is why this option is not the default.\n@@ -4821,7 +4821,7 @@ Dump each function after CCP@.  The file name is made by appending\n \n @item storeccp\n @opindex fdump-tree-storeccp\n-Dump each function after STORE-CCP.  The file name is made by appending\n+Dump each function after STORE-CCP@.  The file name is made by appending\n @file{.storeccp} to the source file name.\n \n @item pre\n@@ -5253,7 +5253,7 @@ Disabled at levels @option{-O}, @option{-O2}, @option{-O3}, @option{-Os}.\n \n @item -fforward-propagate\n @opindex fforward-propagate\n-Perform a forward propagation pass on RTL.  The pass tries to combine two\n+Perform a forward propagation pass on RTL@.  The pass tries to combine two\n instructions and checks if the result can be simplified.  If loop unrolling\n is active, two passes are performed and the second is scheduled after\n loop unrolling.\n@@ -5589,12 +5589,12 @@ higher on architectures that support this.\n \n @item -fdce\n @opindex fdce\n-Perform dead code elimination (DCE) on RTL.\n+Perform dead code elimination (DCE) on RTL@.\n Enabled by default at @option{-O} and higher.\n \n @item -fdse\n @opindex fdse\n-Perform dead store elimination (DSE) on RTL.\n+Perform dead store elimination (DSE) on RTL@.\n Enabled by default at @option{-O} and higher.\n \n @item -fif-conversion\n@@ -11175,7 +11175,7 @@ the M32C/80 series.\n @opindex msim\n Specifies that the program will be run on the simulator.  This causes\n an alternate runtime library to be linked in which supports, for\n-example, file I/O.  You must not use this option when generating\n+example, file I/O@.  You must not use this option when generating\n programs that will run on real hardware; you must provide your own\n runtime library for whatever I/O functions are needed.\n \n@@ -11473,7 +11473,7 @@ CPU32 or CPU32+ core, including the 68330, 68331, 68332, 68333, 68334,\n \n @item -m5200\n @opindex m5200\n-Generate output for a 520X ColdFire CPU.  This is the default\n+Generate output for a 520X ColdFire CPU@.  This is the default\n when the compiler is configured for 520X-based systems.\n It is equivalent to @option{-mcpu=5206}, and is now deprecated\n in favor of that option.\n@@ -11483,7 +11483,7 @@ the MCF5202, MCF5203, MCF5204 and MCF5206.\n \n @item -m5206e\n @opindex m5206e\n-Generate output for a 5206e ColdFire CPU.  The option is now\n+Generate output for a 5206e ColdFire CPU@.  The option is now\n deprecated in favor of the equivalent @option{-mcpu=5206e}.\n \n @item -m528x\n@@ -11494,12 +11494,12 @@ The option is now deprecated in favor of the equivalent\n \n @item -m5307\n @opindex m5307\n-Generate output for a ColdFire 5307 CPU.  The option is now deprecated\n+Generate output for a ColdFire 5307 CPU@.  The option is now deprecated\n in favor of the equivalent @option{-mcpu=5307}.\n \n @item -m5407\n @opindex m5407\n-Generate output for a ColdFire 5407 CPU.  The option is now deprecated\n+Generate output for a ColdFire 5407 CPU@.  The option is now deprecated\n in favor of the equivalent @option{-mcpu=5407}.\n \n @item -mcfv4e\n@@ -11532,7 +11532,7 @@ The option is equivalent to @option{-march=68020} @option{-mtune=68020-60}.\n @opindex mhard-float\n @opindex m68881\n Generate floating-point instructions.  This is the default for 68020\n-and above, and for ColdFire devices that have an FPU.  It defines the\n+and above, and for ColdFire devices that have an FPU@.  It defines the\n macro @samp{__HAVE_68881__} on M680x0 targets and @samp{__mcffpu__}\n on ColdFire targets.\n \n@@ -12081,7 +12081,7 @@ configurations; see the installation documentation for details.\n @itemx -mno-dsp\n @opindex mdsp\n @opindex mno-dsp\n-Use (do not use) revision 1 of the MIPS DSP ASE.\n+Use (do not use) revision 1 of the MIPS DSP ASE@.\n @xref{MIPS DSP Built-in Functions}.  This option defines the\n preprocessor macro @samp{__mips_dsp}.  It also defines\n @samp{__mips_dsp_rev} to 1.\n@@ -12090,7 +12090,7 @@ preprocessor macro @samp{__mips_dsp}.  It also defines\n @itemx -mno-dspr2\n @opindex mdspr2\n @opindex mno-dspr2\n-Use (do not use) revision 2 of the MIPS DSP ASE.\n+Use (do not use) revision 2 of the MIPS DSP ASE@.\n @xref{MIPS DSP Built-in Functions}.  This option defines the\n preprocessor macros @samp{__mips_dsp} and @samp{__mips_dspr2}.\n It also defines @samp{__mips_dsp_rev} to 2.\n@@ -12168,7 +12168,7 @@ The default @option{-G} option depends on the configuration.\n @opindex mlocal-sdata\n @opindex mno-local-sdata\n Extend (do not extend) the @option{-G} behavior to local data too,\n-such as to static variables in C.  @option{-mlocal-sdata} is the\n+such as to static variables in C@.  @option{-mlocal-sdata} is the\n default for all configurations.\n \n If the linker complains that an application is using too much small data,\n@@ -13089,7 +13089,7 @@ implies @option{-mno-powerpc64}.  GCC defaults to @option{-maix32}.\n @opindex mxl-compat\n @opindex mno-xl-compat\n Produce code that conforms more closely to IBM XL compiler semantics\n-when using AIX-compatible ABI.  Pass floating-point arguments to\n+when using AIX-compatible ABI@.  Pass floating-point arguments to\n prototyped functions beyond the register save area (RSA) on the stack\n in addition to argument FPRs.  Do not assume that most significant\n double in 128-bit long double value is properly rounded when comparing"}, {"sha": "baca8b67af7a00b980843aed21cee80f48c28073", "filename": "gcc/doc/loop.texi", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Floop.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Floop.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Floop.texi?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -62,7 +62,7 @@ query membership of blocks to loops and subloop relationships, or\n enumerate and test loop exits, can be expected to work).\n \n Body of the loop is the set of blocks that are dominated by its header,\n-and reachable from its latch against the direction of edges in CFG.  The\n+and reachable from its latch against the direction of edges in CFG@.  The\n loops are organized in a containment hierarchy (tree) such that all the\n loops immediately contained inside loop L are the children of L in the\n tree.  This tree is represented by the @code{struct loops} structure.\n@@ -93,7 +93,7 @@ were ended using break or goto, they would not be released;\n Each basic block contains the reference to the innermost loop it belongs\n to (@code{loop_father}).  For this reason, it is only possible to have\n one @code{struct loops} structure initialized at the same time for each\n-CFG.  The global variable @code{current_loops} contains the\n+CFG@.  The global variable @code{current_loops} contains the\n @code{struct loops} structure.  Many of the loop manipulation functions\n assume that dominance information is up-to-date.\n \n@@ -106,7 +106,7 @@ structures should be calculated/enforced and preserved later:\n @item @code{LOOPS_MAY_HAVE_MULTIPLE_LATCHES}: If this flag is set, no\n changes to CFG will be performed in the loop analysis, in particular,\n loops with multiple latch edges will not be disambiguated.  If a loop\n-has multiple latches, its latch block is set to NULL.  Most of\n+has multiple latches, its latch block is set to NULL@.  Most of\n the loop manipulation functions will not work for loops in this shape.\n No other flags that require CFG changes can be passed to\n loop_optimizer_init.\n@@ -240,7 +240,7 @@ are only reliable for the innermost loops:\n \n @itemize\n @item @code{create_iv}: Creates a new induction variable.  Only works on\n-GIMPLE.  @code{standard_iv_increment_position} can be used to find a\n+GIMPLE@.  @code{standard_iv_increment_position} can be used to find a\n suitable place for the iv increment.\n @item @code{duplicate_loop_to_header_edge},\n @code{tree_duplicate_loop_to_header_edge}: These functions (on RTL and\n@@ -269,7 +269,7 @@ cannot be taken.  Works only on GIMPLE.\n Throughout the loop optimizations on tree level, one extra condition is\n enforced on the SSA form:  No SSA name is used outside of the loop in\n that it is defined.  The SSA form satisfying this condition is called\n-``loop-closed SSA form'' -- LCSSA.  To enforce LCSSA, PHI nodes must be\n+``loop-closed SSA form'' -- LCSSA@.  To enforce LCSSA, PHI nodes must be\n created at the exits of the loops for the SSA names that are used\n outside of them.  Only the real operands (not virtual SSA names) are\n held in LCSSA, in order to save memory.\n@@ -308,7 +308,7 @@ LCSSA is preserved.\n @cindex IV analysis on GIMPLE\n \n Scalar evolutions (SCEV) are used to represent results of induction\n-variable analysis on GIMPLE.  They enable us to represent variables with\n+variable analysis on GIMPLE@.  They enable us to represent variables with\n complicated behavior in a simple and consistent way (we only use it to\n express values of polynomial induction variables, but it is possible to\n extend it).  The interfaces to SCEV analysis are declared in\n@@ -436,7 +436,7 @@ the information is invalid.\n @item @code{noloop_assumptions} on RTL, @code{may_be_zero} on GIMPLE: If\n this condition is true, the loop exits in the first iteration.\n @item @code{infinite}: If this condition is true, the loop is infinite.\n-This condition is only available on RTL.  On GIMPLE, conditions for\n+This condition is only available on RTL@.  On GIMPLE, conditions for\n finiteness of the loop are included in @code{assumptions}.\n @item @code{niter_expr} on RTL, @code{niter} on GIMPLE: The expression\n that gives number of iterations.  The number of iterations is defined as\n@@ -453,7 +453,7 @@ structure.  The corresponding function is named\n @code{check_simple_exit}.  There are also functions that pass through\n all the exits of a loop and try to find one with easy to determine\n number of iterations -- @code{find_loop_niter} on GIMPLE and\n-@code{find_simple_exit} on RTL.  Finally, there are functions that\n+@code{find_simple_exit} on RTL@.  Finally, there are functions that\n provide the same information, but additionally cache it, so that\n repeated calls to number of iterations are not so costly --\n @code{number_of_latch_executions} on GIMPLE and @code{get_simple_loop_desc}\n@@ -499,7 +499,7 @@ and mapping this order to the elements of this array avoids costly\n queries to the loop body representation.\n \n Three types of data references are currently handled: ARRAY_REF, \n-INDIRECT_REF and COMPONENT_REF. The data structure for the data reference \n+INDIRECT_REF and COMPONENT_REF@. The data structure for the data reference \n is @code{data_reference}, where @code{data_reference_p} is a name of a \n pointer to the data reference structure. The structure contains the \n following elements:"}, {"sha": "434f79697b59ba0070ef4d99bd59c66226627475", "filename": "gcc/doc/makefile.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fmakefile.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fmakefile.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmakefile.texi?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -152,7 +152,7 @@ with the stage@var{N-1} GCC@footnote{Customarily, the system compiler\n   is also termed the @file{stage0} GCC.}.\n \n You will invoke this target if you need to test or debug the\n-stage@var{N} GCC.  If you only need to execute GCC (but you need\n+stage@var{N} GCC@.  If you only need to execute GCC (but you need\n not run @samp{make} either to rebuild it or to run test suites),\n you should be able to work directly in the @file{stage@var{N}-gcc}\n directory.  This makes it easier to debug multiple stages in"}, {"sha": "2ef192559adf55daa4fda4096634811b06c2ca84", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -3663,7 +3663,7 @@ The output and input vectors should have the same modes.\n @item @samp{vec_pack_trunc_@var{m}}\n Narrow (demote) and merge the elements of two vectors. Operands 1 and 2\n are vectors of the same mode having N integral or floating point elements\n-of size S.  Operand 0 is the resulting vector in which 2*N elements of\n+of size S@.  Operand 0 is the resulting vector in which 2*N elements of\n size N/2 are concatenated after narrowing them down using truncation.\n \n @cindex @code{vec_pack_ssat_@var{m}} instruction pattern\n@@ -3680,15 +3680,15 @@ saturating arithmetic.\n @item @samp{vec_pack_sfix_trunc_@var{m}}, @samp{vec_pack_ufix_trunc_@var{m}}\n Narrow, convert to signed/unsigned integral type and merge the elements\n of two vectors.  Operands 1 and 2 are vectors of the same mode having N\n-floating point elements of size S.  Operand 0 is the resulting vector\n+floating point elements of size S@.  Operand 0 is the resulting vector\n in which 2*N elements of size N/2 are concatenated.\n \n @cindex @code{vec_unpacks_hi_@var{m}} instruction pattern\n @cindex @code{vec_unpacks_lo_@var{m}} instruction pattern\n @item @samp{vec_unpacks_hi_@var{m}}, @samp{vec_unpacks_lo_@var{m}}\n Extract and widen (promote) the high/low part of a vector of signed\n integral or floating point elements.  The input vector (operand 1) has N\n-elements of size S.  Widen (promote) the high/low elements of the vector\n+elements of size S@.  Widen (promote) the high/low elements of the vector\n using signed or floating point extension and place the resulting N/2\n values of size 2*S in the output vector (operand 0).\n \n@@ -3708,7 +3708,7 @@ place the resulting N/2 values of size 2*S in the output vector (operand 0).\n @itemx @samp{vec_unpacku_float_hi_@var{m}}, @samp{vec_unpacku_float_lo_@var{m}}\n Extract, convert to floating point type and widen the high/low part of a\n vector of signed/unsigned integral elements.  The input vector (operand 1)\n-has N elements of size S.  Convert the high/low elements of the vector using\n+has N elements of size S@.  Convert the high/low elements of the vector using\n floating point conversion and place the resulting N/2 values of size 2*S in\n the output vector (operand 0).\n \n@@ -3719,7 +3719,7 @@ the output vector (operand 0).\n @item @samp{vec_widen_umult_hi_@var{m}}, @samp{vec_widen_umult_lo_@var{m}}\n @itemx @samp{vec_widen_smult_hi_@var{m}}, @samp{vec_widen_smult_lo_@var{m}}\n Signed/Unsigned widening multiplication.  The two inputs (operands 1 and 2)\n-are vectors with N signed/unsigned elements of size S.  Multiply the high/low\n+are vectors with N signed/unsigned elements of size S@.  Multiply the high/low\n elements of the two vectors, and put the N/2 products of size 2*S in the\n output vector (operand 0).\n "}, {"sha": "c5ec8d094faed6cffdc9a13855a42f62cd779944", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -559,7 +559,7 @@ If a function always returns the same local variable, and that local\n variable is an aggregate type, then the variable is replaced with the\n return value for the function (i.e., the function's DECL_RESULT).  This\n is equivalent to the C++ named return value optimization applied to\n-GIMPLE.  The pass is located in @file{tree-nrv.c} and is described by\n+GIMPLE@.  The pass is located in @file{tree-nrv.c} and is described by\n @code{pass_nrv}.\n \n @item Return slot optimization"}, {"sha": "cd6e82f5fe94e3d0ae0add446e9e3d295fe3b87f", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -178,7 +178,7 @@ warnings).\n The ISO C++ committee is working on a new ISO C++ standard, dubbed\n C++0x, that is intended to be published by 2009. C++0x contains several\n changes to the C++ language, some of which have been implemented in an\n-experimental C++0x mode in GCC. The C++0x mode in GCC tracks the draft\n+experimental C++0x mode in GCC@. The C++0x mode in GCC tracks the draft\n working paper for the C++0x standard; the latest working paper is\n available on the ISO C++ committee's web site at\n @uref{http://www.open-std.org/jtc1/sc22/wg21/}. For information"}, {"sha": "5207953e0215445ec5389d2a98e2c68e0d425ba9", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=0ee2ea095c0f85761f5f209be3e7a1bacc2dea7f", "patch": "@@ -6350,7 +6350,7 @@ enabled/used.  @var{flags} initially may have either the SCHED_RGN or SCHED_EBB\n bit set.  This denotes the scheduler pass for which the data should be\n provided.  The target backend should modify @var{flags} by modifying\n the bits corresponding to the following features: USE_DEPS_LIST, USE_GLAT,\n-DETACH_LIFE_INFO, and DO_SPECULATION.  For the DO_SPECULATION feature\n+DETACH_LIFE_INFO, and DO_SPECULATION@.  For the DO_SPECULATION feature\n an additional structure @var{spec_info} should be filled by the target.\n The structure describes speculation types that can be used in the scheduler.\n @end deftypefn\n@@ -7151,7 +7151,7 @@ defining this macro.  If unable, use the expression\n before and after that, output the additional assembler syntax for defining\n the name, and a newline.\n \n-There are two ways of handling global BSS.  One is to define either\n+There are two ways of handling global BSS@.  One is to define either\n this macro or its aligned counterpart, @code{ASM_OUTPUT_ALIGNED_BSS}.\n The other is to have @code{TARGET_ASM_SELECT_SECTION} return a\n switchable BSS section (@pxref{TARGET_HAVE_SWITCHABLE_BSS_SECTIONS}).\n@@ -10142,7 +10142,7 @@ may in turn cause a branch offset to overflow.\n @deftypefn {Target Hook} bool TARGET_COMMUTATIVE_P (rtx @var{x}, @var{outer_code})\n This target hook returns @code{true} if @var{x} is considered to be commutative.\n Usually, this is just COMMUTATIVE_P (@var{x}), but the HP PA doesn't consider\n-PLUS to be commutative inside a MEM.  @var{outer_code} is the rtx code\n+PLUS to be commutative inside a MEM@.  @var{outer_code} is the rtx code\n of the enclosing rtl, if known, otherwise it is UNKNOWN.\n @end deftypefn\n "}]}