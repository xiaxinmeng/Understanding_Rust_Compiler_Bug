{"sha": "445a6ba4c1bbfd362d30cb04f36b2baed793cb61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ1YTZiYTRjMWJiZmQzNjJkMzBjYjA0ZjM2YjJiYWVkNzkzY2I2MQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-03-17T17:38:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-03-17T17:38:51Z"}, "message": "re PR target/26721 (Gcc generates unaligned access)\n\n2006-03-17  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/26721\n\t* builtins.c (get_pointer_alignment): For component style references\n\tadjust alignment to the component type alignment.  Make sure\n\tto adjust alignment for component access of constants.\n\nFrom-SVN: r112177", "tree": {"sha": "a8e9ab37adf91c6a9904b0ff2841525c952788e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8e9ab37adf91c6a9904b0ff2841525c952788e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/445a6ba4c1bbfd362d30cb04f36b2baed793cb61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/445a6ba4c1bbfd362d30cb04f36b2baed793cb61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/445a6ba4c1bbfd362d30cb04f36b2baed793cb61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/445a6ba4c1bbfd362d30cb04f36b2baed793cb61/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d550ef0bf6d072706ae7d03468ade5b7c267cb6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d550ef0bf6d072706ae7d03468ade5b7c267cb6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d550ef0bf6d072706ae7d03468ade5b7c267cb6b"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "67c4e209e9ec198ad97538c912ddf95ac919f2b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/445a6ba4c1bbfd362d30cb04f36b2baed793cb61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/445a6ba4c1bbfd362d30cb04f36b2baed793cb61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=445a6ba4c1bbfd362d30cb04f36b2baed793cb61", "patch": "@@ -1,3 +1,10 @@\n+2006-03-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/26721\n+\t* builtins.c (get_pointer_alignment): For component style references\n+\tadjust alignment to the component type alignment.  Make sure\n+\tto adjust alignment for component access of constants.\n+\n 2006-03-17  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.md (strlensi): Emit barrier after"}, {"sha": "999d777ecc472a860d83a5953b4602c0d48e6c7c", "filename": "gcc/builtins.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/445a6ba4c1bbfd362d30cb04f36b2baed793cb61/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/445a6ba4c1bbfd362d30cb04f36b2baed793cb61/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=445a6ba4c1bbfd362d30cb04f36b2baed793cb61", "patch": "@@ -278,8 +278,13 @@ get_pointer_alignment (tree exp, unsigned int max_align)\n \t  inner = max_align;\n \t  while (handled_component_p (exp))\n \t    {\n+\t      /* Fields in a structure can be packed, honour DECL_ALIGN\n+\t\t of the FIELD_DECL.  For all other references the conservative \n+\t\t alignment is the element type alignment.  */\n \t      if (TREE_CODE (exp) == COMPONENT_REF)\n \t\tinner = MIN (inner, DECL_ALIGN (TREE_OPERAND (exp, 1)));\n+\t      else\n+\t\tinner = MIN (inner, TYPE_ALIGN (TREE_TYPE (exp)));\n \t      exp = TREE_OPERAND (exp, 0);\n \t    }\n \t  if (TREE_CODE (exp) == FUNCTION_DECL)\n@@ -288,7 +293,7 @@ get_pointer_alignment (tree exp, unsigned int max_align)\n \t    align = MIN (inner, DECL_ALIGN (exp));\n #ifdef CONSTANT_ALIGNMENT\n \t  else if (CONSTANT_CLASS_P (exp))\n-\t    align = CONSTANT_ALIGNMENT (exp, align);\n+\t    align = MIN (inner, (unsigned)CONSTANT_ALIGNMENT (exp, align));\n #endif\n \t  else\n \t    align = MIN (align, inner);"}]}