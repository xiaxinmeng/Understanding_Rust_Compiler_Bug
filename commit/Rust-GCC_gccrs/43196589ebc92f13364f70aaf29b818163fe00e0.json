{"sha": "43196589ebc92f13364f70aaf29b818163fe00e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMxOTY1ODllYmM5MmYxMzM2NGY3MGFhZjI5YjgxODE2M2ZlMDBlMA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2003-01-28T11:02:28Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2003-01-28T11:02:28Z"}, "message": "combine.c (force_to_mode): Add cast to fix warning when STORE_FLAG_VALUE is negative.\n\n\t* combine.c (force_to_mode): Add cast to fix warning when\n\tSTORE_FLAG_VALUE is negative.\n\nFrom-SVN: r61961", "tree": {"sha": "fbcee0404487bf3414274aecd8885b253b514d30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbcee0404487bf3414274aecd8885b253b514d30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43196589ebc92f13364f70aaf29b818163fe00e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43196589ebc92f13364f70aaf29b818163fe00e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43196589ebc92f13364f70aaf29b818163fe00e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43196589ebc92f13364f70aaf29b818163fe00e0/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d52c5b0a9c001de6e197b57a2ecf822afb3a5c79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d52c5b0a9c001de6e197b57a2ecf822afb3a5c79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d52c5b0a9c001de6e197b57a2ecf822afb3a5c79"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "6ffdabadaf293868e443225b4d33ed80408219fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43196589ebc92f13364f70aaf29b818163fe00e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43196589ebc92f13364f70aaf29b818163fe00e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43196589ebc92f13364f70aaf29b818163fe00e0", "patch": "@@ -1,3 +1,8 @@\n+2003-01-28  Andreas Schwab  <schwab@suse.de>\n+\n+\t* combine.c (force_to_mode): Add cast to fix warning when\n+\tSTORE_FLAG_VALUE is negative.\n+\n 2003-01-27  Richard Henderson  <rth@redhat.com>\n \n \t* Makefile.in (cse.o): Depend on TARGET_H."}, {"sha": "4f03d008e7e4b7d19f90a883b259dc3f73735c9e", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43196589ebc92f13364f70aaf29b818163fe00e0/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43196589ebc92f13364f70aaf29b818163fe00e0/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=43196589ebc92f13364f70aaf29b818163fe00e0", "patch": "@@ -7310,7 +7310,8 @@ force_to_mode (x, mode, mask, reg, just_select)\n \t which is equal to STORE_FLAG_VALUE.  */\n       if ((mask & ~STORE_FLAG_VALUE) == 0 && XEXP (x, 1) == const0_rtx\n \t  && exact_log2 (nonzero_bits (XEXP (x, 0), mode)) >= 0\n-\t  && nonzero_bits (XEXP (x, 0), mode) == STORE_FLAG_VALUE)\n+\t  && (nonzero_bits (XEXP (x, 0), mode)\n+\t      == (unsigned HOST_WIDE_INT) STORE_FLAG_VALUE))\n \treturn force_to_mode (XEXP (x, 0), mode, mask, reg, next_select);\n \n       break;"}]}