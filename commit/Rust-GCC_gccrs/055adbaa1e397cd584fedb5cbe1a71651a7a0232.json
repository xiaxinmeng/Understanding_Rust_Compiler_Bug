{"sha": "055adbaa1e397cd584fedb5cbe1a71651a7a0232", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU1YWRiYWExZTM5N2NkNTg0ZmVkYjVjYmUxYTcxNjUxYTdhMDIzMg==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-02-16T22:31:52Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-02-16T22:31:52Z"}, "message": "expr.c (build_instanceof): Check for arrays when trying fold to false.\n\n2001-02-15  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* expr.c (build_instanceof): Check for arrays when trying fold to\n\tfalse.\n\n(http://gcc.gnu.org/ml/gcc-patches/2001-02/msg00993.html)\n\nFrom-SVN: r39778", "tree": {"sha": "e0047553957bce79ad10a84c5610e93daba3c3aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0047553957bce79ad10a84c5610e93daba3c3aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/055adbaa1e397cd584fedb5cbe1a71651a7a0232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/055adbaa1e397cd584fedb5cbe1a71651a7a0232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/055adbaa1e397cd584fedb5cbe1a71651a7a0232", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/055adbaa1e397cd584fedb5cbe1a71651a7a0232/comments", "author": null, "committer": null, "parents": [{"sha": "2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c1be3223f5bbc9e2238d15e8a48d37b1f02fdbe"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "848fd7ce197212b3c440fa19887db6fdfc5c2d81", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/055adbaa1e397cd584fedb5cbe1a71651a7a0232/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/055adbaa1e397cd584fedb5cbe1a71651a7a0232/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=055adbaa1e397cd584fedb5cbe1a71651a7a0232", "patch": "@@ -1,3 +1,8 @@\n+2001-02-15  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* expr.c (build_instanceof): Check for arrays when trying fold to\n+\tfalse.\n+\n 2001-02-15  Jim Meyering  <meyering@lucent.com>\n \n \t* Make-lang.in (java.install-common): Depend on `installdirs'.\n@@ -10,12 +15,12 @@\n 2001-02-14  Tom Tromey  <tromey@redhat.com>\n             Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        Fix for PR java/1261.\n-        * typeck.c (build_java_array_type): Add public `clone' method to\n-        arrays.\n-        * parse.y (resolve_qualified_expression_name): Use current_class\n+\tFix for PR java/1261.\n+\t* typeck.c (build_java_array_type): Add public `clone' method to\n+\tarrays.\n+\t* parse.y (resolve_qualified_expression_name): Use current_class\n \twhen checking for inaccessibility.\n-        (patch_method_invocation): Fixed error message when accessibility\n+\t(patch_method_invocation): Fixed error message when accessibility\n \tdenied.  Added `from_super' argument.\n \n 2001-02-14  Alexandre Petit-Bianco  <apbianco@redhat.com>"}, {"sha": "4f7c0dc6a861281ea3e62b63150543bde05f3a84", "filename": "gcc/java/expr.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/055adbaa1e397cd584fedb5cbe1a71651a7a0232/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/055adbaa1e397cd584fedb5cbe1a71651a7a0232/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=055adbaa1e397cd584fedb5cbe1a71651a7a0232", "patch": "@@ -1157,7 +1157,9 @@ build_instanceof (value, type)\n \t\t    value,\n \t\t    boolean_true_node, boolean_false_node);\n     }\n-  else if (DECL_P (klass) && DECL_P (valclass)\n+  else if (! TYPE_ARRAY_P (type)\n+\t   && ! TYPE_ARRAY_P (valtype)\n+\t   && DECL_P (klass) && DECL_P (valclass)\n \t   && ! CLASS_INTERFACE (valclass)\n \t   && ! CLASS_INTERFACE (klass)\n \t   && ! inherits_from_p (type, valtype)"}]}