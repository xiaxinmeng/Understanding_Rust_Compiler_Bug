{"sha": "0554d39aed16ebeab2b35b24ee9e57f5035da15c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU1NGQzOWFlZDE2ZWJlYWIyYjM1YjI0ZWU5ZTU3ZjUwMzVkYTE1Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-01-23T10:45:01Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-01-23T10:45:01Z"}, "message": "re PR libstdc++/19343 (New warnings in libstdc++-v3 since 2004-01-05)\n\n2005-01-23  Paolo Carlini  <pcarlini@suse.de>\n\t    Andreas Jaeger  <aj@suse.de>\n\n\tPR libstdc++/19343\n\t* include/bits/functexcept.h: Mark the helpers as 'noreturn'.\n\nCo-Authored-By: Andreas Jaeger <aj@suse.de>\n\nFrom-SVN: r94106", "tree": {"sha": "1c30b451f7d78970c0dcaad8123419a1e4c3a294", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c30b451f7d78970c0dcaad8123419a1e4c3a294"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0554d39aed16ebeab2b35b24ee9e57f5035da15c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0554d39aed16ebeab2b35b24ee9e57f5035da15c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0554d39aed16ebeab2b35b24ee9e57f5035da15c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0554d39aed16ebeab2b35b24ee9e57f5035da15c/comments", "author": null, "committer": null, "parents": [{"sha": "54a12711c838eb66be4ffbdfa4167aa1ec8f70cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54a12711c838eb66be4ffbdfa4167aa1ec8f70cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54a12711c838eb66be4ffbdfa4167aa1ec8f70cd"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "2b53cfe7e35316c09ba5e8304a6a342c5caed3da", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0554d39aed16ebeab2b35b24ee9e57f5035da15c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0554d39aed16ebeab2b35b24ee9e57f5035da15c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0554d39aed16ebeab2b35b24ee9e57f5035da15c", "patch": "@@ -1,3 +1,9 @@\n+2005-01-23  Paolo Carlini  <pcarlini@suse.de>\n+            Andreas Jaeger  <aj@suse.de>\n+\n+\tPR libstdc++/19343\n+\t* include/bits/functexcept.h: Mark the helpers as 'noreturn'.\n+\n 2005-01-21  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* testsuite/27_io/basic_filebuf/open/char/9507.cc: Allow"}, {"sha": "4c2d4a4a319dbc7c0be9ba931742041dc33280d1", "filename": "libstdc++-v3/include/bits/functexcept.h", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0554d39aed16ebeab2b35b24ee9e57f5035da15c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0554d39aed16ebeab2b35b24ee9e57f5035da15c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctexcept.h?ref=0554d39aed16ebeab2b35b24ee9e57f5035da15c", "patch": "@@ -1,6 +1,6 @@\n // Function-Based Exception Support -*- C++ -*-\n \n-// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -44,50 +44,50 @@ namespace std\n {\n   // Helper for exception objects in <except>\n   void\n-  __throw_bad_exception(void);\n+  __throw_bad_exception(void) __attribute__((__noreturn__));\n \n   // Helper for exception objects in <new>\n   void\n-  __throw_bad_alloc(void);\n+  __throw_bad_alloc(void) __attribute__((__noreturn__));\n \n   // Helper for exception objects in <typeinfo>\n   void\n-  __throw_bad_cast(void);\n+  __throw_bad_cast(void) __attribute__((__noreturn__));\n \n   void\n-  __throw_bad_typeid(void);\n+  __throw_bad_typeid(void) __attribute__((__noreturn__));\n \n   // Helpers for exception objects in <stdexcept>\n   void\n-  __throw_logic_error(const char* __s);\n+  __throw_logic_error(const char* __s) __attribute__((__noreturn__));\n \n   void\n-  __throw_domain_error(const char* __s);\n+  __throw_domain_error(const char* __s) __attribute__((__noreturn__));\n \n   void\n-  __throw_invalid_argument(const char* __s);\n+  __throw_invalid_argument(const char* __s) __attribute__((__noreturn__));\n \n   void\n-  __throw_length_error(const char* __s);\n+  __throw_length_error(const char* __s) __attribute__((__noreturn__));\n \n   void\n-  __throw_out_of_range(const char* __s);\n+  __throw_out_of_range(const char* __s) __attribute__((__noreturn__));\n \n   void\n-  __throw_runtime_error(const char* __s);\n+  __throw_runtime_error(const char* __s) __attribute__((__noreturn__));\n \n   void\n-  __throw_range_error(const char* __s);\n+  __throw_range_error(const char* __s) __attribute__((__noreturn__));\n \n   void\n-  __throw_overflow_error(const char* __s);\n+  __throw_overflow_error(const char* __s) __attribute__((__noreturn__));\n \n   void\n-  __throw_underflow_error(const char* __s);\n+  __throw_underflow_error(const char* __s) __attribute__((__noreturn__));\n \n   // Helpers for exception objects in basic_ios\n   void\n-  __throw_ios_failure(const char* __s);\n+  __throw_ios_failure(const char* __s) __attribute__((__noreturn__));\n } // namespace std\n \n #endif"}]}