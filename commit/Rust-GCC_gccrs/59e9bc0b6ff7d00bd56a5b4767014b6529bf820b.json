{"sha": "59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTllOWJjMGI2ZmY3ZDAwYmQ1NmE1YjQ3NjcwMTRiNjUyOWJmODIwYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T10:22:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T10:22:41Z"}, "message": "[multiple changes]\n\n2015-01-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb: Sloc of wrapper is that of instantiation.\n\n2015-01-06  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch11.adb: Minor reformatting.\n\n2015-01-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_aggr.adb (Get_Assoc_Expr): New routine internal to\n\tBuild_Array_Aggr_Code, used to initialized components covered\n\tby a box association. If the component type is scalar and has\n\ta default aspect, use it to initialize such components.\n\n2015-01-06  Pascal Obry  <obry@adacore.com>\n\n\t* rtinit.c (__gnat_runtime_initialize): Add a parameter to\n\tcontrol the setup of the exception handler.\n\t* initialize.c: Remove unused declaration.\n\t* bindgen.adb: Always call __gnat_runtime_initialize and pass\n\twhether the exeception handler must be set or not.\n\nFrom-SVN: r219251", "tree": {"sha": "6a6bd4a86df01a948ed4eeae70967786292cf016", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a6bd4a86df01a948ed4eeae70967786292cf016"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/comments", "author": null, "committer": null, "parents": [{"sha": "1a779058e1ebd6e68771f25062e95f3bb7ff48ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a779058e1ebd6e68771f25062e95f3bb7ff48ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a779058e1ebd6e68771f25062e95f3bb7ff48ab"}], "stats": {"total": 165, "additions": 100, "deletions": 65}, "files": [{"sha": "5f34d8f6cfca4ffa7971a6171c07c21492f9572c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "patch": "@@ -1,3 +1,26 @@\n+2015-01-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb: Sloc of wrapper is that of instantiation.\n+\n+2015-01-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch11.adb: Minor reformatting.\n+\n+2015-01-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb (Get_Assoc_Expr): New routine internal to\n+\tBuild_Array_Aggr_Code, used to initialized components covered\n+\tby a box association. If the component type is scalar and has\n+\ta default aspect, use it to initialize such components.\n+\n+2015-01-06  Pascal Obry  <obry@adacore.com>\n+\n+\t* rtinit.c (__gnat_runtime_initialize): Add a parameter to\n+\tcontrol the setup of the exception handler.\n+\t* initialize.c: Remove unused declaration.\n+\t* bindgen.adb: Always call __gnat_runtime_initialize and pass\n+\twhether the exeception handler must be set or not.\n+\n 2015-01-06  Thomas Quinot  <quinot@adacore.com>\n \n \t* freeze.adb (Set_SSO_From_Defaults): When setting scalar storage"}, {"sha": "9a5c1a8017e13c796a4371280b7bdce15c9e950e", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "patch": "@@ -606,7 +606,8 @@ package body Bindgen is\n          --  installation, and indication of if it's been called previously.\n \n          WBI (\"\");\n-         WBI (\"      procedure Runtime_Initialize;\");\n+         WBI (\"      procedure Runtime_Initialize \" &\n+              \"(Install_Handler : Integer);\");\n          WBI (\"      pragma Import (C, Runtime_Initialize, \" &\n               \"\"\"__gnat_runtime_initialize\"\");\");\n \n@@ -838,9 +839,14 @@ package body Bindgen is\n          --  In .NET, when binding with -z, we don't install the signal handler\n          --  to let the caller handle the last exception handler.\n \n-         if Bind_Main_Program then\n-            WBI (\"\");\n-            WBI (\"      Runtime_Initialize;\");\n+         WBI (\"\");\n+\n+         if VM_Target /= CLI_Target\n+           or else Bind_Main_Program\n+         then\n+            WBI (\"      Runtime_Initialize (1);\");\n+         else\n+            WBI (\"      Runtime_Initialize (0);\");\n          end if;\n       end if;\n "}, {"sha": "f958c152b6e820a400c9cf086da19e4e3968ba36", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 39, "deletions": 32, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "patch": "@@ -785,6 +785,10 @@ package body Exp_Aggr is\n       --\n       --  Otherwise we call Build_Code recursively\n \n+      function Get_Assoc_Expr (Assoc : Node_Id) return Node_Id;\n+      --  For an association with a box, use default aspect of component type\n+      --  if present, to initialize one or more components.\n+\n       function Local_Compile_Time_Known_Value (E : Node_Id) return Boolean;\n       function Local_Expr_Value               (E : Node_Id) return Uint;\n       --  These two Local routines are used to replace the corresponding ones\n@@ -1524,6 +1528,26 @@ package body Exp_Aggr is\n          return S;\n       end Gen_While;\n \n+      --------------------\n+      -- Get_Assoc_Expr --\n+      --------------------\n+\n+      function Get_Assoc_Expr (Assoc : Node_Id) return Node_Id is\n+      begin\n+         if Box_Present (Assoc) then\n+            if Is_Scalar_Type (Ctype)\n+              and then Present (Default_Aspect_Value (Ctype))\n+            then\n+               return Default_Aspect_Value (Ctype);\n+            else\n+               return Empty;\n+            end if;\n+\n+         else\n+            return Expression (Assoc);\n+         end if;\n+      end Get_Assoc_Expr;\n+\n       ---------------------\n       -- Index_Base_Name --\n       ---------------------\n@@ -1566,8 +1590,7 @@ package body Exp_Aggr is\n       Expr   : Node_Id;\n       Typ    : Entity_Id;\n \n-      Others_Expr        : Node_Id := Empty;\n-      Others_Box_Present : Boolean := False;\n+      Others_Assoc        : Node_Id := Empty;\n \n       Aggr_L : constant Node_Id := Low_Bound (Aggregate_Bounds (N));\n       Aggr_H : constant Node_Id := High_Bound (Aggregate_Bounds (N));\n@@ -1637,12 +1660,7 @@ package body Exp_Aggr is\n             while Present (Choice) loop\n                if Nkind (Choice) = N_Others_Choice then\n                   Set_Loop_Actions (Assoc, New_List);\n-\n-                  if Box_Present (Assoc) then\n-                     Others_Box_Present := True;\n-                  else\n-                     Others_Expr := Expression (Assoc);\n-                  end if;\n+                  Others_Assoc := Assoc;\n                   exit;\n                end if;\n \n@@ -1653,15 +1671,12 @@ package body Exp_Aggr is\n                end if;\n \n                Nb_Choices := Nb_Choices + 1;\n-               if Box_Present (Assoc) then\n-                  Table (Nb_Choices) := (Choice_Lo   => Low,\n-                                         Choice_Hi   => High,\n-                                         Choice_Node => Empty);\n-               else\n-                  Table (Nb_Choices) := (Choice_Lo   => Low,\n-                                         Choice_Hi   => High,\n-                                         Choice_Node => Expression (Assoc));\n-               end if;\n+\n+               Table (Nb_Choices) :=\n+                  (Choice_Lo   => Low,\n+                   Choice_Hi   => High,\n+                   Choice_Node => Get_Assoc_Expr (Assoc));\n+\n                Next (Choice);\n             end loop;\n \n@@ -1689,7 +1704,7 @@ package body Exp_Aggr is\n          --  We don't need to generate loops over empty gaps, but if there is\n          --  a single empty range we must analyze the expression for semantics\n \n-         if Present (Others_Expr) or else Others_Box_Present then\n+         if Present (Others_Assoc) then\n             declare\n                First : Boolean := True;\n \n@@ -1730,7 +1745,8 @@ package body Exp_Aggr is\n                   then\n                      First := False;\n                      Append_List\n-                       (Gen_Loop (Low, High, Others_Expr), To => New_Code);\n+                       (Gen_Loop (Low, High,\n+                          Get_Assoc_Expr (Others_Assoc)), To => New_Code);\n                   end if;\n                end loop;\n             end;\n@@ -1760,19 +1776,10 @@ package body Exp_Aggr is\n \n             --  Ada 2005 (AI-287)\n \n-            if Box_Present (Assoc) then\n-               Append_List (Gen_While (Add (Nb_Elements, To => Aggr_L),\n-                                       Aggr_High,\n-                                       Empty),\n-                            To => New_Code);\n-            else\n-               Expr  := Expression (Assoc);\n-\n-               Append_List (Gen_While (Add (Nb_Elements, To => Aggr_L),\n-                                       Aggr_High,\n-                                       Expr), --  AI-287\n-                            To => New_Code);\n-            end if;\n+            Append_List (Gen_While (Add (Nb_Elements, To => Aggr_L),\n+                                    Aggr_High,\n+                                    Get_Assoc_Expr (Assoc)), --  AI-287\n+                         To => New_Code);\n          end if;\n       end if;\n "}, {"sha": "4343937e6535ac52177a5deb3451a2605acf8322", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "patch": "@@ -62,8 +62,6 @@ extern \"C\" {\n /* __gnat_initialize (NT-mingw32 Version) */\n /******************************************/\n \n-extern void __gnat_install_handler(void);\n-\n #if defined (__MINGW32__)\n \n extern void __gnat_install_SEH_handler (void *);"}, {"sha": "97582db3a0f20e3ef10c13f43847199aa115aa82", "filename": "gcc/ada/rtinit.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Frtinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Frtinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtinit.c?ref=59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "patch": "@@ -76,7 +76,6 @@ int __gnat_rt_init_count = 0;\n #include <windows.h>\n \n extern void __gnat_init_float (void);\n-extern void __gnat_install_SEH_handler (void *);\n \n extern int gnat_argc;\n extern char **gnat_argv;\n@@ -138,7 +137,7 @@ append_arg (int *index, LPWSTR dir, LPWSTR value,\n #endif\n \n void\n-__gnat_runtime_initialize(void)\n+__gnat_runtime_initialize(int install_handler)\n {\n   /*  increment the reference counter */\n \n@@ -302,7 +301,8 @@ __gnat_runtime_initialize(void)\n    }\n #endif\n \n-   __gnat_install_handler();\n+  if (install_handler)\n+    __gnat_install_handler();\n }\n \n /**************************************************/\n@@ -315,7 +315,7 @@ __gnat_runtime_initialize(void)\n extern void __gnat_init_float (void);\n \n void\n-__gnat_runtime_initialize(void)\n+__gnat_runtime_initialize(int install_handler)\n {\n   /*  increment the reference counter */\n \n@@ -327,7 +327,8 @@ __gnat_runtime_initialize(void)\n \n    __gnat_init_float ();\n \n-   __gnat_install_handler();\n+  if (install_handler)\n+    __gnat_install_handler();\n }\n \n /***********************************************/\n@@ -339,7 +340,7 @@ __gnat_runtime_initialize(void)\n extern void __gnat_init_float (void);\n \n void\n-__gnat_runtime_initialize(void)\n+__gnat_runtime_initialize(int install_handler)\n {\n   /*  increment the reference counter */\n \n@@ -351,7 +352,8 @@ __gnat_runtime_initialize(void)\n \n   __gnat_init_float ();\n \n-  __gnat_install_handler();\n+  if (install_handler)\n+    __gnat_install_handler();\n }\n \n #else\n@@ -361,7 +363,7 @@ __gnat_runtime_initialize(void)\n /***********************************************/\n \n void\n-__gnat_runtime_initialize(void)\n+__gnat_runtime_initialize(int install_handler)\n {\n   /*  increment the reference counter */\n \n@@ -371,7 +373,8 @@ __gnat_runtime_initialize(void)\n   if (__gnat_rt_init_count > 1)\n     return;\n \n-  __gnat_install_handler();\n+  if (install_handler)\n+    __gnat_install_handler();\n }\n \n #endif"}, {"sha": "c193f1ad5cae69e8c933d84210ea58cb686cf20e", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "patch": "@@ -121,12 +121,11 @@ package body Sem_Ch11 is\n                elsif Nkind (Id1) /= N_Others_Choice\n                  and then\n                    (Id_Entity = Entity (Id1)\n-                      or else (Id_Entity = Renamed_Entity (Entity (Id1))))\n+                     or else (Id_Entity = Renamed_Entity (Entity (Id1))))\n                then\n                   if Handler /= Parent (Id) then\n                      Error_Msg_Sloc := Sloc (Id1);\n-                     Error_Msg_NE\n-                       (\"exception choice duplicates &#\", Id, Id1);\n+                     Error_Msg_NE (\"exception choice duplicates &#\", Id, Id1);\n \n                   else\n                      if Ada_Version = Ada_83\n@@ -348,7 +347,7 @@ package body Sem_Ch11 is\n               and then Nkind (First (Statements (Handler))) = N_Raise_Statement\n               and then No (Name (First (Statements (Handler))))\n               and then (not Others_Present\n-                          or else Nkind (First (Exception_Choices (Handler))) =\n+                         or else Nkind (First (Exception_Choices (Handler))) =\n                                               N_Others_Choice)\n             then\n                Error_Msg_N\n@@ -534,9 +533,7 @@ package body Sem_Ch11 is\n \n             --  See if preceding statement is an assignment\n \n-            if Present (P)\n-              and then Nkind (P) = N_Assignment_Statement\n-            then\n+            if Present (P) and then Nkind (P) = N_Assignment_Statement then\n                L := Name (P);\n \n                --  Give warning for assignment to scalar formal\n@@ -549,7 +546,7 @@ package body Sem_Ch11 is\n                  --  This avoids some false positives for the nested case.\n \n                  and then Nearest_Dynamic_Scope (Current_Scope) =\n-                            Scope (Entity (L))\n+                                                        Scope (Entity (L))\n \n                then\n                   --  Don't give warning if we are covered by an exception\n@@ -571,11 +568,11 @@ package body Sem_Ch11 is\n \n                   if No (Exception_Handlers (Par)) then\n                      Error_Msg_N\n-                       (\"assignment to pass-by-copy formal \" &\n-                        \"may have no effect??\", P);\n+                       (\"assignment to pass-by-copy formal \"\n+                        & \"may have no effect??\", P);\n                      Error_Msg_N\n-                       (\"\\RAISE statement may result in abnormal return\" &\n-                        \" (RM 6.4.1(17))??\", P);\n+                       (\"\\RAISE statement may result in abnormal return \"\n+                        & \"(RM 6.4.1(17))??\", P);\n                   end if;\n                end if;\n             end if;"}, {"sha": "e454ffe7500ed51cacb214dc920354e3fcdac4d8", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e9bc0b6ff7d00bd56a5b4767014b6529bf820b/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=59e9bc0b6ff7d00bd56a5b4767014b6529bf820b", "patch": "@@ -5112,7 +5112,7 @@ package body Sem_Ch12 is\n      (Formal_Subp : Entity_Id;\n       Actual_Subp : Entity_Id) return Node_Id\n    is\n-      Loc       : constant Source_Ptr := Sloc (Formal_Subp);\n+      Loc       : constant Source_Ptr := Sloc (Current_Scope);\n       Ret_Type  : constant Entity_Id  := Get_Instance_Of (Etype (Formal_Subp));\n       Actuals   : List_Id;\n       Decl      : Node_Id;\n@@ -5187,11 +5187,12 @@ package body Sem_Ch12 is\n      (Formal_Subp : Entity_Id;\n       Actual_Subp : Entity_Id) return Node_Id\n    is\n-      Loc       : constant Source_Ptr := Sloc (Formal_Subp);\n-      Ret_Type  : constant Entity_Id := Get_Instance_Of (Etype (Formal_Subp));\n-      Op_Type   : constant Entity_Id := Get_Instance_Of\n-                                          (Etype (First_Formal (Formal_Subp)));\n-      Is_Binary : constant Boolean :=\n+      Loc       : constant Source_Ptr := Sloc (Current_Scope);\n+      Ret_Type  : constant Entity_Id  :=\n+                    Get_Instance_Of (Etype (Formal_Subp));\n+      Op_Type   : constant Entity_Id  :=\n+                    Get_Instance_Of (Etype (First_Formal (Formal_Subp)));\n+      Is_Binary : constant Boolean    :=\n                     Present (Next_Formal (First_Formal (Formal_Subp)));\n \n       Decl    : Node_Id;"}]}