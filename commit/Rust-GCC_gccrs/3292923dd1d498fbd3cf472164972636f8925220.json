{"sha": "3292923dd1d498fbd3cf472164972636f8925220", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI5MjkyM2RkMWQ0OThmYmQzY2Y0NzIxNjQ5NzI2MzZmODkyNTIyMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-17T02:46:36Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-17T02:46:36Z"}, "message": "(parse_number): Warn about '9' in octal constants.\n\nCommonize overflow detection for various radices.\n\nFrom-SVN: r2139", "tree": {"sha": "215e3d5edb9bc5c18ed8fc824165dfbc01affc74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/215e3d5edb9bc5c18ed8fc824165dfbc01affc74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3292923dd1d498fbd3cf472164972636f8925220", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3292923dd1d498fbd3cf472164972636f8925220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3292923dd1d498fbd3cf472164972636f8925220", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3292923dd1d498fbd3cf472164972636f8925220/comments", "author": null, "committer": null, "parents": [{"sha": "58939c25bdc16c2a1a31e08b640980119994cac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58939c25bdc16c2a1a31e08b640980119994cac6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58939c25bdc16c2a1a31e08b640980119994cac6"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "c0fbca561b39b274514c5f28ae739f0f58e626be", "filename": "gcc/cexp.y", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3292923dd1d498fbd3cf472164972636f8925220/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3292923dd1d498fbd3cf472164972636f8925220/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=3292923dd1d498fbd3cf472164972636f8925220", "patch": "@@ -347,6 +347,7 @@ parse_number (olen)\n   register int base = 10;\n   register int len = olen;\n   register int overflow = 0;\n+  register int digit, largest_digit = 0;\n   int spec_long = 0;\n \n   for (c = 0; c < len; c++)\n@@ -370,19 +371,14 @@ parse_number (olen)\n \n   for (; len > 0; len--) {\n     c = *p++;\n-    if (c >= 'A' && c <= 'Z') c += 'a' - 'A';\n-\n-    if (c >= '0' && c <= '9') {\n-      overflow |= ULONG_MAX_over_base < n;\n-      nd = n * base + c - '0';\n-      overflow |= nd < n;\n-      n = nd;\n-    } else if (base == 16 && c >= 'a' && c <= 'f') {\n-      overflow |= ULONG_MAX_over_base < n;\n-      nd = n * 16 + c - 'a' + 10;\n-      overflow |= nd < n;\n-      n = nd;\n-    } else {\n+\n+    if (c >= '0' && c <= '9')\n+      digit = c - '0';\n+    else if (base == 16 && c >= 'a' && c <= 'f')\n+      digit = c - 'a' + 10;\n+    else if (base == 16 && c >= 'A' && c <= 'F')\n+      digit = c - 'A' + 10;\n+    else {\n       /* `l' means long, and `u' means unsigned.  */\n       while (1) {\n \tif (c == 'l' || c == 'L')\n@@ -407,13 +403,21 @@ parse_number (olen)\n       /* Don't look for any more digits after the suffixes.  */\n       break;\n     }\n+    if (largest_digit < digit)\n+      largest_digit = digit;\n+    nd = n * base + digit;\n+    overflow |= ULONG_MAX_over_base < n | nd < n;\n+    n = nd;\n   }\n \n   if (len != 0) {\n     yyerror (\"Invalid number in #if expression\");\n     return ERROR;\n   }\n \n+  if (base <= largest_digit)\n+    warning (\"integer constant contains digits beyond the radix\");\n+\n   if (overflow)\n     warning (\"integer constant out of range\");\n "}]}