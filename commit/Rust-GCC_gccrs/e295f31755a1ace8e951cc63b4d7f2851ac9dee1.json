{"sha": "e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI5NWYzMTc1NWExYWNlOGU5NTFjYzYzYjRkN2YyODUxYWM5ZGVlMQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-19T12:25:36Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-19T12:25:36Z"}, "message": "c-tree.h: Remove declaration of poplevel.\n\n\t* c-tree.h: Remove declaration of poplevel.\n\n\t* tree.h: Remove declaration of approx_sqrt.\n\n\t* c-lex.c: Remove redundant declaration of asm_out_file.\n\n\t* flags.h: Remove declaration of warn_unknown_pragma and\n\tmain_input_filename.\n\n\t* rtl.h: Remove functions from fold-const.c since they're already\n\tdeclared in tree.h.\n\n\t* regs.h: Remove redundant declaration of reg_names.\n\ncp:\n\n\t* cp-tree.h: Remove duplicated declarations.\n\nFrom-SVN: r68193", "tree": {"sha": "b6d2073ea90e334c020c7570d062f0d8453a39fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6d2073ea90e334c020c7570d062f0d8453a39fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/comments", "author": null, "committer": null, "parents": [{"sha": "551dc3602f1b8f12a734e70a20bf4ddd586e007a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/551dc3602f1b8f12a734e70a20bf4ddd586e007a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/551dc3602f1b8f12a734e70a20bf4ddd586e007a"}], "stats": {"total": 85, "additions": 24, "deletions": 61}, "files": [{"sha": "c8a2a7d4dacc45cdd396a9f42909bf61453f996d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "patch": "@@ -1,5 +1,19 @@\n 2003-06-19  Andreas Jaeger  <aj@suse.de>\n \n+\t* c-tree.h: Remove declaration of poplevel.\n+\n+\t* tree.h: Remove declaration of approx_sqrt.\n+\n+\t* c-lex.c: Remove redundant declaration of asm_out_file.\n+\n+\t* flags.h: Remove declaration of warn_unknown_pragma and\n+\tmain_input_filename.\n+\n+\t* rtl.h: Remove functions from fold-const.c since they're already\n+\tdeclared in tree.h.\n+\n+\t* regs.h: Remove redundant declaration of reg_names.\n+\n \t* bt-load.c (migrate_btr_defs): Correct printf arguments.\n \n \t* protoize.c: Fix breakage from last patch."}, {"sha": "313b4be4e90f27b5c5bd94413731924877ea6fce", "filename": "gcc/c-lex.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "patch": "@@ -52,9 +52,6 @@ static unsigned int src_lineno;\n static int header_time, body_time;\n static splay_tree file_info_tree;\n \n-/* File used for outputting assembler code.  */\n-extern FILE *asm_out_file;\n-\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE TYPE_PRECISION (wchar_type_node)\n "}, {"sha": "62a6d4aa88fe8ef765d59514b961cdb39ef57c3f", "filename": "gcc/c-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "patch": "@@ -175,7 +175,6 @@ extern int global_bindings_p\t\t\tPARAMS ((void));\n extern int kept_level_p\t\t\t\tPARAMS ((void));\n extern tree getdecls\t\t\t\tPARAMS ((void));\n extern void pushlevel\t\t\t\tPARAMS ((int));\n-extern tree poplevel\t\t\t\tPARAMS ((int,int, int));\n extern void insert_block\t\t\tPARAMS ((tree));\n extern void set_block\t\t\t\tPARAMS ((tree));\n extern tree pushdecl\t\t\t\tPARAMS ((tree));"}, {"sha": "0b620d69462b9155b5d8191a5c62e69c994e9245", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "patch": "@@ -1,3 +1,7 @@\n+2003-06-19  Andreas Jaeger  <aj@suse.de>\n+\n+\t* cp-tree.h: Remove duplicated declarations.\n+\n 2003-06-18  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* pt.c: Convert to ISO C.\n@@ -13,7 +17,7 @@\n \t(at_least_as_qualified_p, more_qualified_p,\n \tcomp_cv_qualification): Cache cv quals.\n \t(compparms): Rearrange loop.\n-\t\n+\n 2003-06-18  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* cp-tree.h (COMPARE_RELAXED): Rename to ...\n@@ -35,7 +39,7 @@\n \t(comp_target_types): Remove unreachable code. Adjust\n \tsame_or_base_type_p calls.\n \t(ptr_reasonably_similar): Adjust base and derived check.\n-\t\n+\n \t* typeck.c (maybe_warn_about_returning_address_of_local): Remove\n \tunused calculation.\n \t(check_return_expr): Adjust error messages.\n@@ -145,7 +149,7 @@\n \n 2003-06-11  Roger Sayle  <roger@eyesopen.com>\n \n-\t* decl2.c (generate_ctor_or_dtor_function): Avoid expanding a \n+\t* decl2.c (generate_ctor_or_dtor_function): Avoid expanding a\n \tglobal static constructor/destructor if it will be empty, i.e.\n \teither doesn't call any ctors/dtors or only calls pure or const\n \tctors/dtors."}, {"sha": "d3d20e7d211dffd2f507bb1641ad6b4869dc4089", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "patch": "@@ -3587,7 +3587,6 @@ extern int global_bindings_p\t\t\t(void);\n extern int kept_level_p\t\t\t\t(void);\n extern tree getdecls\t\t\t\t(void);\n extern void pushlevel\t\t\t\t(int);\n-extern tree poplevel\t\t\t\t(int,int, int);\n extern void insert_block\t\t\t(tree);\n extern void set_block\t\t\t\t(tree);\n extern tree pushdecl\t\t\t\t(tree);\n@@ -3762,9 +3761,7 @@ extern void comdat_linkage (tree);\n extern void import_export_vtable (tree, tree, int);\n extern void import_export_decl (tree);\n extern void import_export_tinfo\t(tree, tree, bool);\n-extern tree build_cleanup\t\t\t(tree);\n extern void finish_file\t\t\t\t(void);\n-extern tree build_expr_from_tree\t\t(tree);\n extern tree build_cleanup\t\t\t(tree);\n extern tree build_expr_from_tree\t\t(tree);\n extern tree build_offset_ref_call_from_tree     (tree, tree);"}, {"sha": "d9ac7bfb05553de08494bc2c78cb19c8ef7df4f9", "filename": "gcc/flags.h", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "patch": "@@ -1,5 +1,6 @@\n /* Compilation switch flag definitions for GCC.\n-   Copyright (C) 1987, 1988, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002\n+   Copyright (C) 1987, 1988, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002,\n+   2003\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -22,9 +23,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #ifndef GCC_FLAGS_H\n #define GCC_FLAGS_H\n \n-/* Name of the input .c file being compiled.  */\n-extern const char *main_input_filename;\n-\n enum debug_info_type\n {\n   NO_DEBUG,\t    /* Write no debug info.  */\n@@ -114,14 +112,6 @@ extern int warn_inline;\n \n extern int warn_uninitialized;\n \n-/* Zero if unknown pragmas are ignored\n-   One if the compiler should warn about an unknown pragma not in\n-   a system include file.\n-   Greater than one if the compiler should warn for all unknown\n-   pragmas.  */\n-\n-extern int warn_unknown_pragmas;\n-\n /* Nonzero means warn about all declarations which shadow others.  */\n \n extern int warn_shadow;"}, {"sha": "5a95385021956114580387efa39cbc0fbd210be6", "filename": "gcc/regs.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fregs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Fregs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregs.h?ref=e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "patch": "@@ -1,6 +1,6 @@\n /* Define per-register tables for data flow info and register allocation.\n    Copyright (C) 1987, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -158,10 +158,6 @@ extern short *reg_renumber;\n \n extern char regs_ever_live[FIRST_PSEUDO_REGISTER];\n \n-/* Vector indexed by hardware reg giving its name.  */\n-\n-extern const char * reg_names[FIRST_PSEUDO_REGISTER];\n-\n /* For each hard register, the widest mode object that it can contain.\n    This will be a MODE_INT mode if the register can hold integers.  Otherwise\n    it will be a MODE_FLOAT or a MODE_CC mode, whichever is valid for the"}, {"sha": "d71a6ae8a82bd666697b2b2a5a0b7e2794b7965e", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "patch": "@@ -2240,36 +2240,6 @@ extern void end_branch_prob\t\tPARAMS ((void));\n extern bool reg_to_stack\t\tPARAMS ((rtx, FILE *));\n #endif\n \n-/* In fold-const.c */\n-extern int add_double\t\tPARAMS ((unsigned HOST_WIDE_INT, HOST_WIDE_INT,\n-\t\t\t\t\t unsigned HOST_WIDE_INT, HOST_WIDE_INT,\n-\t\t\t\t\t unsigned HOST_WIDE_INT *,\n-\t\t\t\t\t HOST_WIDE_INT *));\n-extern int neg_double\t\tPARAMS ((unsigned HOST_WIDE_INT, HOST_WIDE_INT,\n-\t\t\t\t\t unsigned HOST_WIDE_INT *,\n-\t\t\t\t\t HOST_WIDE_INT *));\n-extern int mul_double\t\tPARAMS ((unsigned HOST_WIDE_INT,\n-\t\t\t\t\t HOST_WIDE_INT,\n-\t\t\t\t\t unsigned HOST_WIDE_INT, HOST_WIDE_INT,\n-\t\t\t\t\t unsigned HOST_WIDE_INT *,\n-\t\t\t\t\t HOST_WIDE_INT *));\n-extern void lshift_double\tPARAMS ((unsigned HOST_WIDE_INT, HOST_WIDE_INT,\n-\t\t\t\t\t HOST_WIDE_INT, unsigned int,\n-\t\t\t\t\t unsigned HOST_WIDE_INT *,\n-\t\t\t\t\t HOST_WIDE_INT *, int));\n-extern void rshift_double\tPARAMS ((unsigned HOST_WIDE_INT, HOST_WIDE_INT,\n-\t\t\t\t\t HOST_WIDE_INT, unsigned int,\n-\t\t\t\t\t unsigned HOST_WIDE_INT *,\n-\t\t\t\t\t HOST_WIDE_INT *, int));\n-extern void lrotate_double\tPARAMS ((unsigned HOST_WIDE_INT, HOST_WIDE_INT,\n-\t\t\t\t\t HOST_WIDE_INT, unsigned int,\n-\t\t\t\t\t unsigned HOST_WIDE_INT *,\n-\t\t\t\t\t HOST_WIDE_INT *));\n-extern void rrotate_double\tPARAMS ((unsigned HOST_WIDE_INT, HOST_WIDE_INT,\n-\t\t\t\t\t HOST_WIDE_INT, unsigned int,\n-\t\t\t\t\t unsigned HOST_WIDE_INT *,\n-\t\t\t\t\t HOST_WIDE_INT *));\n-\n /* In calls.c */\n enum libcall_type\n {"}, {"sha": "0466a03d67b52ddf18b64252bfaf8b778cf88282", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e295f31755a1ace8e951cc63b4d7f2851ac9dee1/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=e295f31755a1ace8e951cc63b4d7f2851ac9dee1", "patch": "@@ -1999,10 +1999,6 @@ enum ptrmemfunc_vbit_where_t\n \f\n #define NULL_TREE (tree) NULL\n \n-/* Approximate positive square root of a host double.  This is for\n-   statistical reports, not code generation.  */\n-extern double approx_sqrt\t\tPARAMS ((double));\n-\n extern tree decl_assembler_name\t\tPARAMS ((tree));\n \n /* Compute the number of bytes occupied by 'node'.  This routine only"}]}