{"sha": "08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhhYTlhNGExY2MwYmI0YTk0YjI2MTJhOTgxODU3OGZjOTIyMmNkZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-12-01T13:29:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-12-01T13:29:28Z"}, "message": "[multiple changes]\n\n2003-12-01  Nicolas Setton  <setton@act-europe.fr>\n\n\t* a-except.adb (Raise_Current_Excep): Add a pragma Inspection_Point,\n\tso that the debugger can reliably access the value of the parameter,\n\tand therefore is able to display the exception name when an exception\n\tbreakpoint is reached.\n\n2003-12-01  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* fmap.adb: Fix typo in warning message.\n\n\t* g-socket.ads, g-socket.adb: Make Free a visible instance of\n\tAda.Unchecked_Deallocation (no need to wrap it in a subprogram).\n\n2003-12-01  Vincent Celier  <celier@gnat.com>\n\n\t* mlib-prj.adb (Build_Library.Process): Do not check a withed unit if\n\tther is no Afile.\n\t(Build_Library): Get the switches only if Default_Switches is declared\n\tin package Binder.\n\n2003-12-01  Ed Schonberg  <schonberg@gnat.com>\n\n\t* exp_ch6.adb (Expand_Actuals): When applying validity checks to\n\tactuals that are indexed components, reanalyze actual to ensure that\n\tpacked array references are properly expanded.\n\n\t* sem_ch5.adb (Diagnose_Non_Variable_Lhs): Add special case for\n\tattempted assignment to a discriminant.\n\n2003-12-01  Robert Dewar  <dewar@gnat.com>\n\n\t* rtsfind.adb, exp_ch4.adb, s-exnint.ads, s-exnint.adb: Minor\n\treformatting.\n\n\t* switch-c.adb: Minor reformatting of comments\n\n2003-12-01  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t* Makefile.in: Clean ups.\n\n2003-12-01  GNAT Script  <nobody@gnat.com>\n\n\t* Make-lang.in: Makefile automatically updated\n\nFrom-SVN: r74100", "tree": {"sha": "c0ac6a55329023fb31e9b9e80f35357a07004365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0ac6a55329023fb31e9b9e80f35357a07004365"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/comments", "author": null, "committer": null, "parents": [{"sha": "80fcc7bcaefc31cabda221cf137b89fdd2d1cf8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80fcc7bcaefc31cabda221cf137b89fdd2d1cf8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80fcc7bcaefc31cabda221cf137b89fdd2d1cf8d"}], "stats": {"total": 321, "additions": 175, "deletions": 146}, "files": [{"sha": "dbcf21f623b0105b0a64f831c19d3c7c3ee44a92", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -1,3 +1,48 @@\n+2003-12-01  Nicolas Setton  <setton@act-europe.fr>\n+\n+\t* a-except.adb (Raise_Current_Excep): Add a pragma Inspection_Point,\n+\tso that the debugger can reliably access the value of the parameter,\n+\tand therefore is able to display the exception name when an exception\n+\tbreakpoint is reached.\n+\n+2003-12-01  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* fmap.adb: Fix typo in warning message.\n+\n+\t* g-socket.ads, g-socket.adb: Make Free a visible instance of\n+\tAda.Unchecked_Deallocation (no need to wrap it in a subprogram).\n+\n+2003-12-01  Vincent Celier  <celier@gnat.com>\n+\n+\t* mlib-prj.adb (Build_Library.Process): Do not check a withed unit if\n+\tther is no Afile.\n+\t(Build_Library): Get the switches only if Default_Switches is declared\n+\tin package Binder.\n+\n+2003-12-01  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* exp_ch6.adb (Expand_Actuals): When applying validity checks to\n+\tactuals that are indexed components, reanalyze actual to ensure that\n+\tpacked array references are properly expanded.\n+\n+\t* sem_ch5.adb (Diagnose_Non_Variable_Lhs): Add special case for\n+\tattempted assignment to a discriminant.\n+\n+2003-12-01  Robert Dewar  <dewar@gnat.com>\n+\n+\t* rtsfind.adb, exp_ch4.adb, s-exnint.ads, s-exnint.adb: Minor\n+\treformatting.\n+\n+\t* switch-c.adb: Minor reformatting of comments\n+\n+2003-12-01  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\t* Makefile.in: Clean ups.\n+\n+2003-12-01  GNAT Script  <nobody@gnat.com>\n+\n+\t* Make-lang.in: Makefile automatically updated\n+\n 2003-12-01  Arnaud Charlet  <charlet@act-europe.fr>\n \n \t* 5wsystem.ads: Disable zero cost exception, not ready yet."}, {"sha": "aa26bb042513347df76c6f1b247efdfde24ec8b7", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -1417,17 +1417,17 @@ ada/cstand.o : ada/ada.ads ada/a-except.ads ada/alloc.ads ada/atree.ads \\\n    ada/scans.ads ada/scn.ads ada/scng.ads ada/scng.adb ada/sem.ads \\\n    ada/sem_ch8.ads ada/sem_eval.ads ada/sem_mech.ads ada/sem_res.ads \\\n    ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n-   ada/stringt.ads ada/style.ads ada/styleg.ads ada/styleg.adb \\\n-   ada/styleg-c.ads ada/stylesw.ads ada/system.ads ada/s-crc32.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imgenu.ads ada/s-memory.ads \\\n-   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n-   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tree_io.ads ada/ttypef.ads \\\n-   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n-   ada/widechar.ads \n+   ada/sinfo.adb ada/sinput.ads ada/sinput.adb ada/snames.ads \\\n+   ada/stand.ads ada/stringt.ads ada/style.ads ada/styleg.ads \\\n+   ada/styleg.adb ada/styleg-c.ads ada/stylesw.ads ada/system.ads \\\n+   ada/s-crc32.ads ada/s-crc32.adb ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imgenu.ads ada/s-memory.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n+   ada/tree_io.ads ada/ttypef.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads ada/urealp.adb ada/widechar.ads \n \n ada/debug.o : ada/debug.ads ada/debug.adb ada/system.ads \n \n@@ -2305,7 +2305,8 @@ ada/gnatbind.o : ada/ada.ads ada/a-except.ads ada/ali.ads ada/ali-util.ads \\\n    ada/tree_io.ads ada/types.ads ada/uintp.ads ada/unchconv.ads \\\n    ada/unchdeal.ads \n \n-ada/gnatvsn.o : ada/gnatvsn.ads ada/gnatvsn.adb ada/system.ads \n+ada/gnatvsn.o : ada/gnatvsn.ads ada/gnatvsn.adb ada/system.ads \\\n+   ada/s-secsta.ads ada/s-stoele.ads ada/s-stoele.adb ada/unchconv.ads \n \n ada/hlo.o : ada/hlo.ads ada/hlo.adb ada/output.ads ada/system.ads \\\n    ada/s-exctab.ads ada/s-stalib.ads ada/s-unstyp.ads ada/types.ads \\\n@@ -2533,9 +2534,11 @@ ada/nmake.o : ada/ada.ads ada/a-except.ads ada/alloc.ads ada/atree.ads \\\n    ada/tree_io.ads ada/types.ads ada/uintp.ads ada/unchconv.ads \\\n    ada/unchdeal.ads ada/urealp.ads \n \n-ada/opt.o : ada/gnat.ads ada/g-os_lib.ads ada/g-string.ads ada/gnatvsn.ads \\\n-   ada/hostparm.ads ada/opt.ads ada/opt.adb ada/system.ads \\\n-   ada/s-exctab.ads ada/s-stalib.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n+ada/opt.o : ada/ada.ads ada/a-except.ads ada/gnat.ads ada/g-os_lib.ads \\\n+   ada/g-string.ads ada/gnatvsn.ads ada/hostparm.ads ada/opt.ads \\\n+   ada/opt.adb ada/system.ads ada/s-exctab.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n    ada/tree_io.ads ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n \n ada/osint-b.o : ada/ada.ads ada/a-except.ads ada/alloc.ads ada/debug.ads \\"}, {"sha": "4983adc5299438f5bb25f3575e85944cd4feda69", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 20, "deletions": 44, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -577,33 +577,6 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n   s-vxwork.ads<5pvxwork.ads \\\n   a-taside.adb<1ataside.adb \\\n \n-  CERT_LEVEL_B_TARGET_PAIRS=\\\n-  a-tags.ads<1atags.ads     \\\n-  a-tags.adb<1atags.adb     \\\n-  a-except.adb<2aexcept.adb \\\n-  a-except.ads<2aexcept.ads \\\n-  a-excach.adb<2aexcach.adb \\\n-  i-c.ads<1ic.ads           \\\n-  g-io.adb<2gio.adb         \\\n-  s-init.ads<2sinit.ads     \\\n-  s-init.adb<5zinit.adb     \\\n-  s-memory.adb<2smemory.adb \\\n-  s-memory.ads<2smemory.ads \\\n-  s-osinte.ads<2sosinte.ads \\\n-  s-secsta.ads<2ssecsta.ads \\\n-  s-secsta.adb<2ssecsta.adb \\\n-  s-soflin.adb<2ssoflin.adb \\\n-  s-soflin.ads<2ssoflin.ads \\\n-  s-stalib.adb<1sstalib.adb \\\n-  s-stalib.ads<1sstalib.ads \\\n-  s-thread.adb<5zthread.adb \\\n-  s-thrini.ads<2sthrini.ads \\\n-  s-thrini.adb<5zthrini.adb \\\n-  s-tiitho.adb<5ztiitho.adb \\\n-  s-traceb.adb<2straceb.adb \\\n-  s-traceb.ads<2straceb.ads \\\n-  system.ads<5isystem.ads\n-\n   ifeq ($(strip $(filter-out yes,$(TRACE))),)\n     LIBGNAT_TARGET_PAIRS += \\\n     s-traces.adb<7straces.adb \\\n@@ -632,9 +605,6 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n   s-taprop.adb<5ztaprop.adb \\\n   s-taspri.ads<5ztaspri.ads \\\n   s-thread.adb<5zthread.adb \\\n-  s-thrini.ads<2sthrini.ads \\\n-  s-thrini.adb<5zthrini.adb \\\n-  s-tiitho.adb<5ytiitho.adb \\\n   s-tpopsp.adb<5ztpopsp.adb \\\n   s-vxwork.ads<5pvxwork.ads \\\n   g-soccon.ads<3zsoccon.ads \\\n@@ -649,7 +619,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n \n   EXTRA_RAVEN_SOURCES=i-vxwork.ads s-vxwork.ads\n   EXTRA_RAVEN_OBJS=i-vxwork.o s-vxwork.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-thread.o s-thrini.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-thread.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o\n   HIE_RAVEN_TARGET_PAIRS=\\\n   $(HIE_NONE_TARGET_PAIRS) \\\n@@ -681,6 +651,9 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n   CERT_LEVEL_B_TARGET_PAIRS=\\\n   a-tags.ads<1atags.ads     \\\n   a-tags.adb<1atags.adb     \\\n+  a-elchha.ads<2aelchha.ads \\\n+  a-elchha.adb<2aelchha.adb.empty \\\n+  a-elchha.adb.full<2aelchha.adb.full \\\n   a-except.adb<2aexcept.adb \\\n   a-except.ads<2aexcept.ads \\\n   a-excach.adb<2aexcach.adb \\\n@@ -698,13 +671,12 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n   s-stalib.adb<1sstalib.adb \\\n   s-stalib.ads<1sstalib.ads \\\n   s-thread.adb<5zthread.adb \\\n-  s-thrini.ads<2sthrini.ads \\\n-  s-thrini.adb<5zthrini.adb \\\n-  s-tiitho.adb<5ytiitho.adb \\\n   s-traceb.adb<2straceb.adb \\\n   s-traceb.ads<2straceb.ads \\\n   system.ads<5isystem.ads\n \n+  CERT_LEVEL_B_EXTRA_OBJECT_FILES=a-elchha.adb\n+\n   ifeq ($(strip $(filter-out yes,$(TRACE))),)\n     LIBGNAT_TARGET_PAIRS += \\\n     s-traces.adb<7straces.adb \\\n@@ -1571,8 +1543,6 @@ $(COMPILABLE_HIE_SOURCES) \\\n  s-soflin.ads \\\n  s-stalib.adb \\\n  s-stalib.ads \\\n- s-thrini.adb \\\n- s-thrini.ads \\\n  s-assert.adb \\\n  s-assert.ads \\\n  s-exnint.adb \\\n@@ -1592,8 +1562,10 @@ $(COMPILABLE_HIE_SOURCES) \\\n  $(EXTRA_CERT_LEVEL_B_SOURCES)\n \n NON_COMPILABLE_CERT_LEVEL_B_SOURCES= \\\n+ a-elchha.ads \\\n+ a-elchha.adb \\\n+ a-elchha.adb.full \\\n  a-excach.adb \\\n- s-tiitho.adb \\\n  $(NON_COMPILABLE_HIE_SOURCES)\n \n CERT_LEVEL_B_SOURCES = \\\n@@ -1605,12 +1577,10 @@ $(COMPILABLE_CERT_LEVEL_B_SOURCES)\n CERT_LEVEL_B_OBJS = \\\n  $(HIE_OBJS) \\\n  a-except.o  \\\n- a-excach.o  \\\n  s-init.o    \\\n  s-memory.o  \\\n  s-soflin.o  \\\n  s-stalib.o  \\\n- s-tiitho.o  \\\n  s-thrini.o  \\\n  s-traceb.o  \\\n  s-assert.o  \\\n@@ -2052,9 +2022,8 @@ rts-cert: force\n \t$(MAKE) $(FLAGS_TO_PASS) prepare-rts \\\n \t   RTS_NAME=cert RTS_SRCS=\"$(CERT_LEVEL_B_SOURCES)\" \\\n \t   RTS_TARGET_PAIRS=\"$(CERT_LEVEL_B_TARGET_PAIRS)\" \\\n-\t   COMPILABLE_SOURCES=\"$(COMPILABLE_CERT_LEVEL_B_SOURCES)\" \n-\t-$(GNATMAKE) -Prts-cert/cert.gpr --GCC=\"../../../xgcc -B../../../\"\n-\t$(CHMOD) a-wx rts-cert/adalib/*.ali\n+\t   COMPILABLE_SOURCES=\"$(COMPILABLE_CERT_LEVEL_B_SOURCES)\"\n+\t$(GNATMAKE) -Prts-cert/cert.gpr --GCC=\"../../../xgcc -B../../../\"\n # ... then the C files. This section will eventually be removed.\n \t$(foreach f,$(CERT_LEVEL_B_C_FILES), \\\n \t  $(CP) $(fsrcpfx)$(f).c rts-cert/adainclude/ ;)\n@@ -2063,10 +2032,17 @@ rts-cert: force\n \t../../../$(GCC_FOR_TARGET) -B../../../ $(TARGET_LIBGCC2_CFLAGS) \\\n \t$(ALL_CFLAGS) $(GNATLIBCFLAGS_FOR_C) -c ../adainclude/$(f).c \\\n \t-I../adainclude $(INCLUDES_FOR_SUBDIR) -I../../../ ;) \\\n+# ... Finally, generate the libs:\n+\tcd rts-cert/adalib ; \\\n \t../../../xgcc -B../../../ *.o -o libgnat ; \\\n-\t$(CHMOD) a-wx *.ali ; \\\n \t$(RM) *.o ; \\\n-\t$(MV) libgnat libgnat.o\n+\t$(MV) libgnat libgnat.o ; \\\n+\t$(AR) $(ARFLAGS) libgnat.a libgnat.o ; \\\n+\t$(foreach f,$(CERT_LEVEL_B_EXTRA_OBJECT_FILES), \\\n+\t../../../xgcc -c -B../../../ $(GNATLIBFLAGS) ../adainclude/$(f) \\\n+\t-I../adainclude; \\\n+\t$(AR) $(ARFLAGS) libgnat.a $(subst .adb,.o,$(f))) ; \\\n+\t$(CHMOD) a-wx *.ali *.o *.a ; \\\n \n rts-none: force\n \t$(MAKE) $(FLAGS_TO_PASS) prepare-rts \\"}, {"sha": "cf12af818c74ed5902514ff9887553237d1cbd44", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -859,6 +859,8 @@ package body Ada.Exceptions is\n    -------------------------\n \n    procedure Raise_Current_Excep (E : Exception_Id) is\n+      pragma Inspection_Point (E);\n+      --  This is so the debugger can reliably inspect the parameter\n    begin\n       Process_Raise_Exception (E => E, From_Signal_Handler => False);\n    end Raise_Current_Excep;"}, {"sha": "192e89805d4a26bf224cf91a9d977819c178a51d", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -5349,6 +5349,7 @@ package body Exp_Ch4 is\n \n       function Is_Procedure_Actual (N : Node_Id) return Boolean is\n          Par : Node_Id := Parent (N);\n+\n       begin\n          while Present (Par)\n            and then Nkind (Par) not in N_Statement_Other_Than_Procedure_Call\n@@ -5448,8 +5449,9 @@ package body Exp_Ch4 is\n       --       with generating the error message).\n \n       if not Is_Packed (Typ) then\n-         --  apply transformation for actuals of a function call, where\n-         --  Expand_Actuals is not used.\n+\n+         --  Apply transformation for actuals of a function call,\n+         --  where Expand_Actuals is not used.\n \n          if Nkind (Parent (N)) = N_Function_Call\n            and then Is_Possibly_Unaligned_Slice (N)"}, {"sha": "809eb0b9b2c1c727027bc743a12e6da84ce1c7dd", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -547,8 +547,9 @@ package body Exp_Ch6 is\n \n             Var := Make_Var (Expression (Actual));\n \n-            Crep  := not Same_Representation\n-                       (Etype (Formal), Etype (Expression (Actual)));\n+            Crep := not Same_Representation\n+                          (Etype (Formal), Etype (Expression (Actual)));\n+\n          else\n             V_Typ := Etype (Actual);\n             Var   := Make_Var (Actual);\n@@ -1528,8 +1529,16 @@ package body Exp_Ch6 is\n          if Validity_Checks_On then\n             if Ekind (Formal) = E_In_Parameter\n               and then Validity_Check_In_Params\n-              and then Is_Entity_Name (Actual)\n             then\n+               --  If the actual is an indexed component of a packed\n+               --  type, it has not been expanded yet. It will be\n+               --  copied in the validity code that follows, and has\n+               --  to be expanded appropriately, so reanalyze it.\n+\n+               if Nkind (Actual) = N_Indexed_Component then\n+                  Set_Analyzed (Actual, False);\n+               end if;\n+\n                Ensure_Valid (Actual);\n \n             elsif Ekind (Formal) = E_In_Out_Parameter"}, {"sha": "0c7ec893ce2da5cffc00efaba56271fdef10b902", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -292,7 +292,7 @@ package body Fmap is\n             then\n                Write_Str (\"warning: mapping file \"\"\");\n                Write_Str (File_Name);\n-               Write_Line (\"\"\" is incorrectly formated\");\n+               Write_Line (\"\"\" is incorrectly formatted\");\n                Empty_Tables;\n                return;\n             end if;"}, {"sha": "5ad723bab26150057a224e1a22737755c5b69c3f", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -34,7 +34,6 @@\n with Ada.Streams;                use Ada.Streams;\n with Ada.Exceptions;             use Ada.Exceptions;\n with Ada.Unchecked_Conversion;\n-with Ada.Unchecked_Deallocation;\n \n with Interfaces.C.Strings;\n \n@@ -778,17 +777,6 @@ package body GNAT.Sockets is\n       end if;\n    end Finalize;\n \n-   ----------\n-   -- Free --\n-   ----------\n-\n-   procedure Free (Stream : in out Stream_Access) is\n-      procedure Do_Free is new Ada.Unchecked_Deallocation\n-        (Ada.Streams.Root_Stream_Type'Class, Stream_Access);\n-   begin\n-      Do_Free (Stream);\n-   end Free;\n-\n    ---------\n    -- Get --\n    ---------"}, {"sha": "27841d8c9d2cd9ca4f039283b00bc4ccdbfaec5a", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -54,6 +54,7 @@\n \n with Ada.Exceptions;\n with Ada.Streams;\n+with Ada.Unchecked_Deallocation;\n \n with System;\n \n@@ -902,10 +903,11 @@ package GNAT.Sockets is\n    --  Return the socket address from which the last message was\n    --  received.\n \n-   procedure Free (Stream : in out Stream_Access);\n-   --  Destroy a stream created by one of the Stream functions above, and\n-   --  release associated resources. The user is responsible for calling\n-   --  this subprogram when the stream is not needed anymore.\n+   procedure Free is new Ada.Unchecked_Deallocation\n+     (Ada.Streams.Root_Stream_Type'Class, Stream_Access);\n+   --  Destroy a stream created by one of the Stream functions above,\n+   --  releasing the corresponding resources. The user is responsible\n+   --  for calling this subprogram when the stream is not needed anymore.\n \n    type Socket_Set_Type is limited private;\n    --  This type allows to manipulate sets of sockets. It allows to"}, {"sha": "93025586b312a754df96799a93f19d03bd1f0c21", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -576,7 +576,7 @@ package body MLib.Prj is\n                      for W in Unit_Data.First_With .. Unit_Data.Last_With loop\n                         Afile := Withs.Table (W).Afile;\n \n-                        if Library_ALIs.Get (Afile)\n+                        if Afile /= No_Name and then Library_ALIs.Get (Afile)\n                           and then not Processed_ALIs.Get (Afile)\n                         then\n                            if not Interface_ALIs.Get (Afile) then\n@@ -811,9 +811,10 @@ package body MLib.Prj is\n \n             declare\n                Binder_Package : constant Package_Id :=\n-                 Value_Of\n-                   (Name        => Name_Binder,\n-                    In_Packages => Data.Decl.Packages);\n+                                  Value_Of\n+                                    (Name        => Name_Binder,\n+                                     In_Packages => Data.Decl.Packages);\n+\n             begin\n                if Binder_Package /= No_Package then\n                   declare\n@@ -823,20 +824,26 @@ package body MLib.Prj is\n                                      In_Arrays =>\n                                        Packages.Table\n                                          (Binder_Package).Decl.Arrays);\n-                     Switches : Variable_Value :=\n-                                  Value_Of\n-                                    (Index => Name_Ada, In_Array => Defaults);\n+                     Switches : Variable_Value := Nil_Variable_Value;\n+\n                      Switch : String_List_Id := Nil_String;\n+\n                   begin\n-                     if not Switches.Default then\n-                        Switch := Switches.Values;\n-\n-                        while Switch /= Nil_String loop\n-                           Add_Argument\n-                             (Get_Name_String\n-                                (String_Elements.Table (Switch).Value));\n-                           Switch := String_Elements.Table (Switch).Next;\n-                        end loop;\n+                     if Defaults /= No_Array_Element then\n+                        Switches :=\n+                          Value_Of\n+                            (Index => Name_Ada, In_Array => Defaults);\n+\n+                        if not Switches.Default then\n+                           Switch := Switches.Values;\n+\n+                           while Switch /= Nil_String loop\n+                              Add_Argument\n+                                (Get_Name_String\n+                                   (String_Elements.Table (Switch).Value));\n+                              Switch := String_Elements.Table (Switch).Next;\n+                           end loop;\n+                        end if;\n                      end if;\n                   end;\n                end if;"}, {"sha": "3d0acf160261caedd371ccc57d04adecc4a100cc", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -550,7 +550,6 @@ package body Rtsfind is\n       declare\n          Loaded : Boolean;\n          pragma Warnings (Off, Loaded);\n-\n       begin\n          Loaded := Is_Loaded (U.Uname);\n       end;\n@@ -569,7 +568,6 @@ package body Rtsfind is\n \n       if U.Unum = No_Unit then\n          Load_Fail (\"not found\", U_Id, Id);\n-\n       elsif Fatal_Error (U.Unum) then\n          Load_Fail (\"had parser errors\", U_Id, Id);\n       end if;\n@@ -601,7 +599,6 @@ package body Rtsfind is\n          Set_Analyzed (Cunit (Current_Sem_Unit), True);\n \n          if not Analyzed (Cunit (U.Unum)) then\n-\n             Save_Private_Visibility;\n             Semantics (Cunit (U.Unum));\n             Restore_Private_Visibility;"}, {"sha": "10b51d877d9480d83bcf5f84964c6cc926bd5831", "filename": "gcc/ada/s-exnint.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fs-exnint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fs-exnint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exnint.adb?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -37,11 +37,7 @@ package body System.Exn_Int is\n    -- Exn_Integer --\n    -----------------\n \n-   function Exn_Integer\n-     (Left  : Integer;\n-      Right : Natural)\n-      return  Integer\n-   is\n+   function Exn_Integer (Left : Integer; Right : Natural) return Integer is\n       pragma Suppress (Division_Check);\n       pragma Suppress (Overflow_Check);\n "}, {"sha": "d35547b7bb5e5f17f22a21a85212a7a97afcd1f7", "filename": "gcc/ada/s-exnint.ads", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fs-exnint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fs-exnint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exnint.ads?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -36,9 +36,6 @@\n package System.Exn_Int is\n pragma Pure (Exn_Int);\n \n-   function Exn_Integer\n-     (Left  : Integer;\n-      Right : Natural)\n-      return  Integer;\n+   function Exn_Integer (Left : Integer; Right : Natural) return Integer;\n \n end System.Exn_Int;"}, {"sha": "ecb00348fa0bd188a8ce3d89542e79c11a2bcfbd", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -115,11 +115,9 @@ package body Sem_Ch5 is\n          --  Some special bad cases of entity names\n \n          elsif Is_Entity_Name (N) then\n-\n             if Ekind (Entity (N)) = E_In_Parameter then\n                Error_Msg_N\n                  (\"assignment to IN mode parameter not allowed\", N);\n-               return;\n \n             --  Private declarations in a protected object are turned into\n             --  constants when compiling a protected function.\n@@ -133,27 +131,38 @@ package body Sem_Ch5 is\n             then\n                Error_Msg_N\n                  (\"protected function cannot modify protected object\", N);\n-               return;\n \n             elsif Ekind (Entity (N)) = E_Loop_Parameter then\n                Error_Msg_N\n                  (\"assignment to loop parameter not allowed\", N);\n-               return;\n \n+            else\n+               Error_Msg_N\n+                 (\"left hand side of assignment must be a variable\", N);\n             end if;\n \n-         --  For indexed components, or selected components, test prefix\n+         --  For indexed components or selected components, test prefix\n \n-         elsif Nkind (N) = N_Indexed_Component\n-           or else Nkind (N) = N_Selected_Component\n-         then\n+         elsif Nkind (N) = N_Indexed_Component then\n             Diagnose_Non_Variable_Lhs (Prefix (N));\n-            return;\n-         end if;\n \n-         --  If we fall through, we have no special message to issue!\n+         --  Another special case for assignment to discriminant.\n+\n+         elsif Nkind (N) = N_Selected_Component then\n+            if Present (Entity (Selector_Name (N)))\n+              and then Ekind (Entity (Selector_Name (N))) = E_Discriminant\n+            then\n+               Error_Msg_N\n+                 (\"assignment to discriminant not allowed\", N);\n+            else\n+               Diagnose_Non_Variable_Lhs (Prefix (N));\n+            end if;\n+\n+         else\n+            --  If we fall through, we have no special message to issue!\n \n-         Error_Msg_N (\"left hand side of assignment must be a variable\", N);\n+            Error_Msg_N (\"left hand side of assignment must be a variable\", N);\n+         end if;\n       end Diagnose_Non_Variable_Lhs;\n \n       -------------------------\n@@ -396,7 +405,6 @@ package body Sem_Ch5 is\n           (Nkind (Rhs) /= N_Type_Conversion\n              or else Is_Constrained (Etype (Rhs)))\n       then\n-\n          --  Assignment verifies that the length of the Lsh and Rhs are equal,\n          --  but of course the indices do not have to match. If the right-hand\n          --  side is a type conversion to an unconstrained type, a length check\n@@ -597,7 +605,7 @@ package body Sem_Ch5 is\n            Process_Non_Static_Choice => Non_Static_Choice_Error,\n            Process_Associated_Node   => Process_Statements);\n       use Case_Choices_Processing;\n-      --  Instantiation of the generic choice processing package.\n+      --  Instantiation of the generic choice processing package\n \n       -----------------------------\n       -- Non_Static_Choice_Error --\n@@ -668,11 +676,10 @@ package body Sem_Ch5 is\n          return;\n       end if;\n \n-      --  If the case expression is a formal object of mode in out,\n-      --  then treat it as having a nonstatic subtype by forcing\n-      --  use of the base type (which has to get passed to\n-      --  Check_Case_Choices below).  Also use base type when\n-      --  the case expression is parenthesized.\n+      --  If the case expression is a formal object of mode in out, then\n+      --  treat it as having a nonstatic subtype by forcing use of the base\n+      --  type (which has to get passed to Check_Case_Choices below).  Also\n+      --  use base type when the case expression is parenthesized.\n \n       if Paren_Count (Exp) > 0\n         or else (Is_Entity_Name (Exp)\n@@ -681,7 +688,7 @@ package body Sem_Ch5 is\n          Exp_Type := Exp_Btype;\n       end if;\n \n-      --  Call the instantiated Analyze_Choices which does the rest of the work\n+      --  Call instantiated Analyze_Choices which does the rest of the work\n \n       Analyze_Choices\n         (N, Exp_Type, Case_Table, Last_Choice, Dont_Care, Others_Present);\n@@ -778,7 +785,7 @@ package body Sem_Ch5 is\n          end if;\n       end loop;\n \n-      --  Verify that if present the condition is a Boolean expression.\n+      --  Verify that if present the condition is a Boolean expression\n \n       if Present (Cond) then\n          Analyze_And_Resolve (Cond, Any_Boolean);\n@@ -991,7 +998,6 @@ package body Sem_Ch5 is\n \n    procedure Analyze_Implicit_Label_Declaration (N : Node_Id) is\n       Id : constant Node_Id := Defining_Identifier (N);\n-\n    begin\n       Enter_Name          (Id);\n       Set_Ekind           (Id, E_Label);\n@@ -1003,7 +1009,6 @@ package body Sem_Ch5 is\n    -- Analyze_Iteration_Scheme --\n    ------------------------------\n \n-\n    procedure Analyze_Iteration_Scheme (N : Node_Id) is\n       procedure Check_Controlled_Array_Attribute (DS : Node_Id);\n       --  If the bounds are given by a 'Range reference on a function call\n@@ -1101,7 +1106,6 @@ package body Sem_Ch5 is\n \n                   declare\n                      H : constant Entity_Id := Homonym (Id);\n-\n                   begin\n                      if Present (H)\n                        and then Enclosing_Dynamic_Scope (H) =\n@@ -1248,7 +1252,6 @@ package body Sem_Ch5 is\n \n    procedure Analyze_Label (N : Node_Id) is\n       pragma Warnings (Off, N);\n-\n    begin\n       Kill_Current_Values;\n    end Analyze_Label;\n@@ -1329,7 +1332,6 @@ package body Sem_Ch5 is\n \n    procedure Analyze_Null_Statement (N : Node_Id) is\n       pragma Warnings (Off, N);\n-\n    begin\n       null;\n    end Analyze_Null_Statement;"}, {"sha": "837be568d1b7bfe0748b76fd02a63c882e503420", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08aa9a4a1cc0bb4a94b2612a9818578fc9222cde/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=08aa9a4a1cc0bb4a94b2612a9818578fc9222cde", "patch": "@@ -296,20 +296,21 @@ package body Switch.C is\n                Xref_Active := False;\n                Set_Debug_Flag ('g');\n \n-            --  Processing for e switch\n+            --  -gnate? (extended switches)\n \n             when 'e' =>\n-               --  Only -gnateD and -gnatep= are stored\n-\n                Ptr := Ptr + 1;\n \n+               --  The -gnate? switches are all double character switches\n+               --  so we must always have a character after the e.\n+\n                if Ptr > Max then\n                   raise Bad_Switch;\n                end if;\n \n                case Switch_Chars (Ptr) is\n \n-                  --  Configuration pragmas\n+                  --  -gnatec (configuration pragmas)\n \n                   when 'c' =>\n                      Store_Switch := False;\n@@ -359,7 +360,7 @@ package body Switch.C is\n \n                      return;\n \n-                  --  Symbol definition\n+                  --  -gnateD switch (symbol definition)\n \n                   when 'D' =>\n                      Store_Switch := False;\n@@ -381,15 +382,15 @@ package body Switch.C is\n                               (Storing'First .. First_Stored + Max - Ptr + 2));\n                      return;\n \n-                  --  Full source path for brief error messages\n+                  --  -gnatef (full source path for brief error messages)\n \n                   when 'f' =>\n                      Store_Switch := False;\n                      Ptr := Ptr + 1;\n                      Full_Path_Name_For_Brief_Errors := True;\n                      return;\n \n-                  --  Mapping file\n+                  --  -gnatem (mapping file)\n \n                   when 'm' =>\n                      Store_Switch := False;\n@@ -410,7 +411,7 @@ package body Switch.C is\n                        new String'(Switch_Chars (Ptr .. Max));\n                      return;\n \n-                  --  Preprocessing data file\n+                  --  -gnatep (preprocessing data file)\n \n                   when 'p' =>\n                      Store_Switch := False;\n@@ -445,19 +446,21 @@ package body Switch.C is\n                         Store_Compilation_Switch (To_Store);\n                      end;\n \n-                     return;\n+                  return;\n+\n+                  --  All other -gnate? switches are unassigned\n \n                   when others =>\n                      raise Bad_Switch;\n                end case;\n \n-            --  Processing for E switch\n+            --  -gnatE (dynamic elaboration checks)\n \n             when 'E' =>\n                Ptr := Ptr + 1;\n                Dynamic_Elaboration_Checks := True;\n \n-            --  Processing for f switch\n+            --  -gnatf (full error messages)\n \n             when 'f' =>\n                Ptr := Ptr + 1;"}]}