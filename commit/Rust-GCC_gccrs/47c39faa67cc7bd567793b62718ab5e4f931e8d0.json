{"sha": "47c39faa67cc7bd567793b62718ab5e4f931e8d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdjMzlmYWE2N2NjN2JkNTY3NzkzYjYyNzE4YWI1ZTRmOTMxZThkMA==", "commit": {"author": {"name": "guojiufu", "email": "guojiufu@linux.ibm.com", "date": "2020-04-27T06:08:20Z"}, "committer": {"name": "guojiufu", "email": "guojiufu@linux.ibm.com", "date": "2020-04-27T06:08:20Z"}, "message": "rs6000: enable -fweb for small loops unrolling\n\nPreviously -fweb was disabled if only unroll small loops.  After that\nwe find there is cases where it could help to rename pseudos and avoid\nsome anti-dependence which may occur after unroll.\n\nThis patch enables -fweb for small loops unrolling.\n\n2020-04-27  Jiufu Guo   <guojiufu@cn.ibm.com>\n\n\t* common/config/rs6000/rs6000-common.c\n\t(rs6000_option_optimization_table) [OPT_LEVELS_ALL]: Remove turn off\n\t-fweb.\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Avoid to\n\tset flag_web.", "tree": {"sha": "95d6841752c8807dfd73c69fdd2b5f123985aad0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95d6841752c8807dfd73c69fdd2b5f123985aad0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47c39faa67cc7bd567793b62718ab5e4f931e8d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c39faa67cc7bd567793b62718ab5e4f931e8d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c39faa67cc7bd567793b62718ab5e4f931e8d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c39faa67cc7bd567793b62718ab5e4f931e8d0/comments", "author": null, "committer": null, "parents": [{"sha": "66711279083121b07d909ac0fc2f3a744ac7c937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66711279083121b07d909ac0fc2f3a744ac7c937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66711279083121b07d909ac0fc2f3a744ac7c937"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "477d2a7163cd39f41787cf21c30461265ba9e710", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c39faa67cc7bd567793b62718ab5e4f931e8d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c39faa67cc7bd567793b62718ab5e4f931e8d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47c39faa67cc7bd567793b62718ab5e4f931e8d0", "patch": "@@ -1,3 +1,11 @@\n+2020-04-27  Jiufu Guo   <guojiufu@cn.ibm.com>\n+\n+\t* common/config/rs6000/rs6000-common.c\n+\t(rs6000_option_optimization_table) [OPT_LEVELS_ALL]: Remove turn off\n+\t-fweb.\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Avoid to\n+\tset flag_web.\n+\n 2020-04-27  Martin Liska  <mliska@suse.cz>\n \n \tPR lto/94659"}, {"sha": "ee37b9dc90b61dcf075d50dea68f648d9e974b99", "filename": "gcc/common/config/rs6000/rs6000-common.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c39faa67cc7bd567793b62718ab5e4f931e8d0/gcc%2Fcommon%2Fconfig%2Frs6000%2Frs6000-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c39faa67cc7bd567793b62718ab5e4f931e8d0/gcc%2Fcommon%2Fconfig%2Frs6000%2Frs6000-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Frs6000%2Frs6000-common.c?ref=47c39faa67cc7bd567793b62718ab5e4f931e8d0", "patch": "@@ -38,9 +38,9 @@ static const struct default_options rs6000_option_optimization_table[] =\n        loops at -O2 and above by default.  */\n     { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_funroll_loops, NULL, 1 },\n     { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_munroll_only_small_loops, NULL, 1 },\n-    /* -fweb and -frename-registers are useless in general for rs6000,\n-       turn them off.  */\n-    { OPT_LEVELS_ALL, OPT_fweb, NULL, 0 },\n+\n+    /* -frename-registers leads to non-optimal codegen and performance\n+       on rs6000, turn it off by default.  */\n     { OPT_LEVELS_ALL, OPT_frename_registers, NULL, 0 },\n \n     /* Double growth factor to counter reduced min jump length.  */"}, {"sha": "2007617cdee3237937fa4a7832a04cc225c11a38", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47c39faa67cc7bd567793b62718ab5e4f931e8d0/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47c39faa67cc7bd567793b62718ab5e4f931e8d0/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=47c39faa67cc7bd567793b62718ab5e4f931e8d0", "patch": "@@ -4557,7 +4557,7 @@ rs6000_option_override_internal (bool global_init_p)\n \t\t\t   SCHED_PRESSURE_MODEL);\n \n       /* Explicit -funroll-loops turns -munroll-only-small-loops off, and\n-\t turns -fweb and -frename-registers on.  */\n+\t turns -frename-registers on.  */\n       if ((global_options_set.x_flag_unroll_loops && flag_unroll_loops)\n \t   || (global_options_set.x_flag_unroll_all_loops\n \t       && flag_unroll_all_loops))\n@@ -4566,8 +4566,6 @@ rs6000_option_override_internal (bool global_init_p)\n \t    unroll_only_small_loops = 0;\n \t  if (!global_options_set.x_flag_rename_registers)\n \t    flag_rename_registers = 1;\n-\t  if (!global_options_set.x_flag_web)\n-\t    flag_web = 1;\n \t}\n \n       /* If using typedef char *va_list, signal that"}]}