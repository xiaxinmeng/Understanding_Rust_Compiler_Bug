{"sha": "f6c930a38a5633c4880f572feaddfce14b45951b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZjOTMwYTM4YTU2MzNjNDg4MGY1NzJmZWFkZGZjZTE0YjQ1OTUxYg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2004-01-23T20:40:52Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2004-01-23T20:40:52Z"}, "message": "inclhack.def (bad_lval): Renamed to ...\n\n\t* fixinc/inclhack.def (bad_lval): Renamed to ...\n\t(alpha_bad_lval): ... this.\n\tRemoved file list.\n\tRestrict to alpha*-dec-osf*.\n\t* fixinc/fixincl.x: Regenerate.\n\t* fixinc/tests/base/dirent.h: Remove, moving test ...\n\t* fixinc/tests/base/testing.h: ... here, reflecting new name.\n\nFrom-SVN: r76450", "tree": {"sha": "fe9c6882bca9064f4e6acd558827b753e9cc8d42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe9c6882bca9064f4e6acd558827b753e9cc8d42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6c930a38a5633c4880f572feaddfce14b45951b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c930a38a5633c4880f572feaddfce14b45951b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6c930a38a5633c4880f572feaddfce14b45951b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c930a38a5633c4880f572feaddfce14b45951b/comments", "author": null, "committer": null, "parents": [{"sha": "30cab86985cd901aee1ec78580b3a6f912c624db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30cab86985cd901aee1ec78580b3a6f912c624db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30cab86985cd901aee1ec78580b3a6f912c624db"}], "stats": {"total": 205, "additions": 91, "deletions": 114}, "files": [{"sha": "1e4f1761d011d2f8095db3002d62d6b545957709", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c930a38a5633c4880f572feaddfce14b45951b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c930a38a5633c4880f572feaddfce14b45951b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6c930a38a5633c4880f572feaddfce14b45951b", "patch": "@@ -1,3 +1,13 @@\n+2004-01-23  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* fixinc/inclhack.def (bad_lval): Renamed to ...\n+\t(alpha_bad_lval): ... this.\n+\tRemoved file list.\n+\tRestrict to alpha*-dec-osf*.\n+\t* fixinc/fixincl.x: Regenerate.\n+\t* fixinc/tests/base/dirent.h: Remove, moving test ...\n+\t* fixinc/tests/base/testing.h: ... here, reflecting new name.\n+\n 2004-01-23  Zack Weinberg  <zack@codesourcery.com>\n \n \tPR c/13814"}, {"sha": "620c934be8f73bf612b80df16792e094e9510f13", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 43, "deletions": 42, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c930a38a5633c4880f572feaddfce14b45951b/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c930a38a5633c4880f572feaddfce14b45951b/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=f6c930a38a5633c4880f572feaddfce14b45951b", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Wednesday January 21, 2004 at 03:05:26 PM EST\n+ * It has been AutoGen-ed  Thursday January 22, 2004 at 08:36:55 PM MET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Wed Jan 21 15:05:26 EST 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Thu Jan 22 20:36:56 MET 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -864,6 +864,41 @@ static const char* apzAlpha_AssertPatch[] = {\n     \"%1(EX)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Alpha_Bad_Lval fix\n+ */\n+tSCC zAlpha_Bad_LvalName[] =\n+     \"alpha_bad_lval\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+#define zAlpha_Bad_LvalList (char*)NULL\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAlpha_Bad_LvalMachs[] = {\n+        \"alpha*-dec-osf*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAlpha_Bad_LvalSelect0[] =\n+       \"^[ \\t]*#[ \\t]*pragma[ \\t]+extern_prefix\";\n+\n+#define    ALPHA_BAD_LVAL_TEST_CT  1\n+static tTestDesc aAlpha_Bad_LvalTests[] = {\n+  { TT_EGREP,    zAlpha_Bad_LvalSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Alpha_Bad_Lval\n+ */\n+static const char* apzAlpha_Bad_LvalPatch[] = { \"sed\",\n+    \"-e\", \"s/^[ \\t]*#[ \\t]*define[ \\t][ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\\\\(_.*\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Alpha_Getopt fix\n@@ -1223,40 +1258,6 @@ static const char* apzAvoid_Wchar_T_TypePatch[] = {\n #endif\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Bad_Lval fix\n- */\n-tSCC zBad_LvalName[] =\n-     \"bad_lval\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zBad_LvalList[] =\n-  \"|dirent.h|ftw.h|grp.h|libgen.h|ndbm.h|pthread.h|pwd.h|signal.h|standards.h|stdio.h|stdlib.h|string.h|stropts.h|sys/mount.h|sys/resource.h|sys/signal.h|sys/socket.h|sys/stat.h|sys/stropts.h|sys/uio.h|time.h|unistd.h|utmp.h|utmpx.h|wchar.h|\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzBad_LvalMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zBad_LvalSelect0[] =\n-       \"^[ \\t]*#[ \\t]*pragma[ \\t]+extern_prefix\";\n-\n-#define    BAD_LVAL_TEST_CT  1\n-static tTestDesc aBad_LvalTests[] = {\n-  { TT_EGREP,    zBad_LvalSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Bad_Lval\n- */\n-static const char* apzBad_LvalPatch[] = { \"sed\",\n-    \"-e\", \"s/^[ \\t]*#[ \\t]*define[ \\t][ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\\\\(_.*\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Bad_Struct_Term fix\n@@ -6847,6 +6848,7 @@ typedef enum {\n     ALPHA___EXTERN_PREFIX_STANDARDS_FIXIDX,\n     ALPHA___EXTERN_PREFIX_SYS_STAT_FIXIDX,\n     ALPHA_ASSERT_FIXIDX,\n+    ALPHA_BAD_LVAL_FIXIDX,\n     ALPHA_GETOPT_FIXIDX,\n     ALPHA_PARENS_FIXIDX,\n     ALPHA_PTHREAD_FIXIDX,\n@@ -6856,7 +6858,6 @@ typedef enum {\n     AVOID_BOOL_DEFINE_FIXIDX,\n     AVOID_BOOL_TYPE_FIXIDX,\n     AVOID_WCHAR_T_TYPE_FIXIDX,\n-    BAD_LVAL_FIXIDX,\n     BAD_STRUCT_TERM_FIXIDX,\n     BADQUOTE_FIXIDX,\n     BROKEN_ASSERT_STDIO_FIXIDX,\n@@ -7094,6 +7095,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA_ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_AssertTests,   apzAlpha_AssertPatch, 0 },\n \n+  {  zAlpha_Bad_LvalName,    zAlpha_Bad_LvalList,\n+     apzAlpha_Bad_LvalMachs,\n+     ALPHA_BAD_LVAL_TEST_CT, FD_MACH_ONLY,\n+     aAlpha_Bad_LvalTests,   apzAlpha_Bad_LvalPatch, 0 },\n+\n   {  zAlpha_GetoptName,    zAlpha_GetoptList,\n      apzAlpha_GetoptMachs,\n      ALPHA_GETOPT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -7139,11 +7145,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AVOID_WCHAR_T_TYPE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAvoid_Wchar_T_TypeTests,   apzAvoid_Wchar_T_TypePatch, 0 },\n \n-  {  zBad_LvalName,    zBad_LvalList,\n-     apzBad_LvalMachs,\n-     BAD_LVAL_TEST_CT, FD_MACH_ONLY,\n-     aBad_LvalTests,   apzBad_LvalPatch, 0 },\n-\n   {  zBad_Struct_TermName,    zBad_Struct_TermList,\n      apzBad_Struct_TermMachs,\n      BAD_STRUCT_TERM_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "78dda4b8dbbb658d7e840186b5fd0935ec9bff56", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 31, "deletions": 56, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c930a38a5633c4880f572feaddfce14b45951b/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c930a38a5633c4880f572feaddfce14b45951b/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=f6c930a38a5633c4880f572feaddfce14b45951b", "patch": "@@ -591,6 +591,37 @@ fix = {\n };\n \n \n+/*\n+ *  Fix #defines under Alpha OSF/1:\n+ *  The following files contain '#pragma extern_prefix \"_FOO\"' followed by\n+ *  a '#define something(x,y,z) _FOOsomething(x,y,z)'.  The intent of these\n+ *  statements is to reduce namespace pollution.  While these macros work\n+ *  properly in most cases, they don't allow you to take a pointer to the\n+ *  \"something\" being modified.  To get around this limitation, change these\n+ *  statements to be of the form '#define something _FOOsomething'.\n+ *\n+ *  sed ain't egrep, lesson 2463:  sed can use self-referential\n+ *  regular expressions.  In the substitute expression below,\n+ *  \"\\\\1\" and \"\\\\2\" refer to subexpressions found earlier in the\n+ *  same match.  So, we continue to use sed.  \"extern_prefix\" will\n+ *  be a rare match anyway...\n+ */\n+fix = {\n+    hackname = alpha_bad_lval;\n+\n+    select   = \"^[ \\t]*#[ \\t]*pragma[ \\t]+extern_prefix\";\n+    mach      = \"alpha*-dec-osf*\";\n+\n+    sed      =\n+        \"s/^[ \\t]*#[ \\t]*define[ \\t][ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\"\n+               \"\\\\(_.*\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\";\n+\n+    test_text = '#pragma extern_prefix \"_FOO\"'\"\\n\"\n+                \"#define something(x,y,z) _FOOsomething(x,y,z)\\n\"\n+                \"#define mumble _FOOmumble\";\n+};\n+\n+\n /*\n  *  Fix getopt declarations in stdio.h and stdlib.h on Alpha OSF/1 and AIX.\n  */\n@@ -756,62 +787,6 @@ fix = {\n };\n \n \n-/*\n- *  Fix #defines under Alpha OSF/1:\n- *  The following files contain '#pragma extern_prefix \"_FOO\"' followed by\n- *  a '#define something(x,y,z) _FOOsomething(x,y,z)'.  The intent of these\n- *  statements is to reduce namespace pollution.  While these macros work\n- *  properly in most cases, they don't allow you to take a pointer to the\n- *  \"something\" being modified.  To get around this limitation, change these\n- *  statements to be of the form '#define something _FOOsomething'.\n- *\n- *  sed ain't egrep, lesson 2463:  sed can use self-referential\n- *  regular expressions.  In the substitute expression below,\n- *  \"\\\\1\" and \"\\\\2\" refer to subexpressions found earlier in the\n- *  same match.  So, we continue to use sed.  \"extern_prefix\" will\n- *  be a rare match anyway...\n- */\n-fix = {\n-    hackname = bad_lval;\n-\n-    select   = \"^[ \\t]*#[ \\t]*pragma[ \\t]+extern_prefix\";\n-\n-    files    = dirent.h;\n-    files    = ftw.h;\n-    files    = grp.h;\n-    files    = libgen.h;\n-    files    = ndbm.h;\n-    files    = pthread.h;\n-    files    = pwd.h;\n-    files    = signal.h;\n-    files    = standards.h;\n-    files    = stdio.h;\n-    files    = stdlib.h;\n-    files    = string.h;\n-    files    = stropts.h;\n-    files    = sys/mount.h;\n-    files    = sys/resource.h;\n-    files    = sys/signal.h;\n-    files    = sys/socket.h;\n-    files    = sys/stat.h;\n-    files    = sys/stropts.h;\n-    files    = sys/uio.h;\n-    files    = time.h;\n-    files    = unistd.h;\n-    files    = utmp.h;\n-    files    = utmpx.h;\n-    files    = wchar.h;\n-\n-    sed      =\n-        \"s/^[ \\t]*#[ \\t]*define[ \\t][ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\"\n-               \"\\\\(_.*\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\";\n-\n-    test_text = '#pragma extern_prefix \"_FOO\"'\"\\n\"\n-                \"#define something(x,y,z) _FOOsomething(x,y,z)\\n\"\n-                \"#define mumble _FOOmumble\";\n-};\n-\n-\n /*\n  *  Fix `typedef struct term;' on hppa1.1-hp-hpux9.\n  */"}, {"sha": "55a76d1bd4320007861099464b5de504da5e7f68", "filename": "gcc/fixinc/tests/base/dirent.h", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30cab86985cd901aee1ec78580b3a6f912c624db/gcc%2Ffixinc%2Ftests%2Fbase%2Fdirent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30cab86985cd901aee1ec78580b3a6f912c624db/gcc%2Ffixinc%2Ftests%2Fbase%2Fdirent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fdirent.h?ref=30cab86985cd901aee1ec78580b3a6f912c624db", "patch": "@@ -1,16 +0,0 @@\n-/*  DO NOT EDIT THIS FILE.\n-\n-    It has been auto-edited by fixincludes from:\n-\n-\t\"fixinc/tests/inc/dirent.h\"\n-\n-    This had to be done to correct non-standard usages in the\n-    original, manufacturer supplied header file.  */\n-\n-\n-\n-#if defined( BAD_LVAL_CHECK )\n-#pragma extern_prefix \"_FOO\"\n-#define something _FOOsomething\n-#define mumble _FOOmumble\n-#endif  /* BAD_LVAL_CHECK */"}, {"sha": "0530cdf490ff344ec61d2c4870e06e69b84b710d", "filename": "gcc/fixinc/tests/base/testing.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c930a38a5633c4880f572feaddfce14b45951b/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c930a38a5633c4880f572feaddfce14b45951b/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h?ref=f6c930a38a5633c4880f572feaddfce14b45951b", "patch": "@@ -19,6 +19,13 @@\n #endif  /* ALPHA___EXTERN_PREFIX_CHECK */\n \n \n+#if defined( ALPHA_BAD_LVAL_CHECK )\n+#pragma extern_prefix \"_FOO\"\n+#define something _FOOsomething\n+#define mumble _FOOmumble\n+#endif  /* ALPHA_BAD_LVAL_CHECK */\n+\n+\n #if defined( AVOID_WCHAR_T_TYPE_CHECK )\n #ifndef __cplusplus\n typedef unsigned short\twchar_t \t;"}]}