{"sha": "58b8c5a87b0bac61bb88e802fc742fdc0d3e6699", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThiOGM1YTg3YjBiYWM2MWJiODhlODAyZmM3NDJmZGMwZDNlNjY5OQ==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@suse.com", "date": "2019-07-23T08:07:49Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@gcc.gnu.org", "date": "2019-07-23T08:07:49Z"}, "message": "x86/AVX512: improve generated code for mask-to-vector-register conversions\n\nConversion of comparison results to full vectors does, when VPMOVM2* are\nunavailable, not require any intermediate VMOVDQ{A,U}*: Simply use\nembedded masking on VPTERNLOG* right away, which is available with\nAVX512F (while VPMOVM2{D,Q} are available only with AVX512DQ).\n\nNote that the chosen immediate is only one of many possible ones; I was\ntrying to make the insn here distinguishable from the pre-existing uses\nof vpternlog.\n\ngcc/\n2019-07-23  Jan Beulich  <jbeulich@suse.com>\n\n\t* config/i386/sse.md (<avx512>_cvtmask2<ssemodesuffix><mode>):\n\tRequire only AVX512F.\n\t(*<avx512>_cvtmask2<ssemodesuffix><mode>): Likewise.  Add\n\talternative expanding to vpternlog.\n\nFrom-SVN: r273719", "tree": {"sha": "8e693b05ac236d1496ab64062007d2e5fceff355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e693b05ac236d1496ab64062007d2e5fceff355"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58b8c5a87b0bac61bb88e802fc742fdc0d3e6699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b8c5a87b0bac61bb88e802fc742fdc0d3e6699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58b8c5a87b0bac61bb88e802fc742fdc0d3e6699", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b8c5a87b0bac61bb88e802fc742fdc0d3e6699/comments", "author": {"login": "jbeulich", "id": 5610135, "node_id": "MDQ6VXNlcjU2MTAxMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeulich", "html_url": "https://github.com/jbeulich", "followers_url": "https://api.github.com/users/jbeulich/followers", "following_url": "https://api.github.com/users/jbeulich/following{/other_user}", "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions", "organizations_url": "https://api.github.com/users/jbeulich/orgs", "repos_url": "https://api.github.com/users/jbeulich/repos", "events_url": "https://api.github.com/users/jbeulich/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeulich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1bc0f50350a568e67ed731c4fec2c72847f15fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1bc0f50350a568e67ed731c4fec2c72847f15fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1bc0f50350a568e67ed731c4fec2c72847f15fe"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "3b39269f0857598afc905af751a39fccd42bc1ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b8c5a87b0bac61bb88e802fc742fdc0d3e6699/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b8c5a87b0bac61bb88e802fc742fdc0d3e6699/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58b8c5a87b0bac61bb88e802fc742fdc0d3e6699", "patch": "@@ -1,3 +1,10 @@\n+2019-07-23  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/i386/sse.md (<avx512>_cvtmask2<ssemodesuffix><mode>):\n+\tRequire only AVX512F.\n+\t(*<avx512>_cvtmask2<ssemodesuffix><mode>): Likewise.  Add\n+\talternative expanding to vpternlog.\n+\n 2019-07-23  Martin Liska  <mliska@suse.cz>\n \n \t* dwarf2out.c (gen_producer_string): Canonize -flto=N"}, {"sha": "fa8f13f5796a0c513269169f15286e528162adac", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b8c5a87b0bac61bb88e802fc742fdc0d3e6699/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b8c5a87b0bac61bb88e802fc742fdc0d3e6699/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=58b8c5a87b0bac61bb88e802fc742fdc0d3e6699", "patch": "@@ -6565,21 +6565,25 @@\n \t  (match_dup 2)\n \t  (match_dup 3)\n \t  (match_operand:<avx512fmaskmode> 1 \"register_operand\")))]\n-  \"TARGET_AVX512DQ\"\n+  \"TARGET_AVX512F\"\n   \"{\n     operands[2] = CONSTM1_RTX (<MODE>mode);\n     operands[3] = CONST0_RTX (<MODE>mode);\n   }\")\n \n (define_insn \"*<avx512>_cvtmask2<ssemodesuffix><mode>\"\n-  [(set (match_operand:VI48_AVX512VL 0 \"register_operand\" \"=v\")\n+  [(set (match_operand:VI48_AVX512VL 0 \"register_operand\" \"=v,v\")\n \t(vec_merge:VI48_AVX512VL\n \t  (match_operand:VI48_AVX512VL 2 \"vector_all_ones_operand\")\n \t  (match_operand:VI48_AVX512VL 3 \"const0_operand\")\n-\t  (match_operand:<avx512fmaskmode> 1 \"register_operand\" \"k\")))]\n-  \"TARGET_AVX512DQ\"\n-  \"vpmovm2<ssemodesuffix>\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"prefix\" \"evex\")\n+\t  (match_operand:<avx512fmaskmode> 1 \"register_operand\" \"k,Yk\")))]\n+  \"TARGET_AVX512F\"\n+  \"@\n+   vpmovm2<ssemodesuffix>\\t{%1, %0|%0, %1}\n+   vpternlog<ssemodesuffix>\\t{$0x81, %0, %0, %0%{%1%}%{z%}|%0%{%1%}%{z%}, %0, %0, 0x81}\"\n+  [(set_attr \"isa\" \"avx512dq,*\")\n+   (set_attr \"length_immediate\" \"0,1\")\n+   (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"sse2_cvtps2pd<mask_name>\""}]}