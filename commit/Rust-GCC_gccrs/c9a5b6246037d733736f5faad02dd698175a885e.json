{"sha": "c9a5b6246037d733736f5faad02dd698175a885e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhNWI2MjQ2MDM3ZDczMzczNmY1ZmFhZDAyZGQ2OTgxNzVhODg1ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-01-19T19:17:50Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-01-19T19:17:50Z"}, "message": "fnptr-by-value-1_x.c, [...]: Guard non-C99 tests with SKIP_COMPLEX_INT, SKIP_ATTRIBUTE and SKIP_ZERO_ARRAY.\n\n\t* gcc.dg/compat/fnptr-by-value-1_x.c, scalar-by-value-1_y.c\n\tscalar-by-value-3_x.c, scalar-by-value-3_y.c,\n\tscalar-by-value-4_x.c, scalar-by-value-4_y.c,\n\tscalar-return-1_x.c, scalar-return-2_y.c,\n\tscalar-return-3_x.c, scalar-return-3_y.c,\n\tscalar-return-4_x.c, scalar-return-4_y.c,\n\tstruct-align-1.h, struct-align-1_x.c,\n\tstruct-align-1_y.c, struct-align-2.h,\n\tstruct-align-2_x.c, struct-align-2_y.c,\n\tstruct-by-value-10_y.c, struct-by-value-11_x.c,\n\tstruct-by-value-11_y.c, struct-by-value-12_x.c,\n\tstruct-by-value-12_y.c, struct-by-value-13_x.c,\n\tstruct-by-value-13_y.c, struct-by-value-14_x.c,\n\tstruct-by-value-14_y.c, struct-by-value-15_x.c,\n\tstruct-by-value-15_y.c, struct-by-value-16_y.c,\n\tstruct-by-value-17_y.c, struct-by-value-18_y.c,\n\tstruct-by-value-19_y.c, struct-by-value-1_x.c,\n\tstruct-by-value-1_y.c, struct-by-value-20_y.c,\n\tstruct-by-value-2_x.c, struct-by-value-2_y.c,\n\tstruct-by-value-3_y.c, struct-by-value-4_x.c,\n\tstruct-by-value-4_y.c, struct-by-value-5_y.c,\n\tstruct-by-value-6_y.c, struct-by-value-7_y.c\n\tstruct-by-value-8_x.c, struct-by-value-8_y.c\n\tstruct-by-value-9_x.c, struct-by-value-9_y.c\n\tstruct-return-10_x.c, struct-return-10_y.c,\n\tstruct-return-19_x.c, struct-return-20_x.c\n\tstruct-return-2_x.c, struct-return-2_y.c\n\tstruct-return-3_x.c: Guard non-C99 tests with SKIP_COMPLEX_INT,\n\tSKIP_ATTRIBUTE and SKIP_ZERO_ARRAY.  Turns SKIPVA into SKIP_VA.\n\nFrom-SVN: r76170", "tree": {"sha": "0255105f4bce0aacf8cab8ddf5e37fbff64d44a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0255105f4bce0aacf8cab8ddf5e37fbff64d44a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9a5b6246037d733736f5faad02dd698175a885e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a5b6246037d733736f5faad02dd698175a885e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9a5b6246037d733736f5faad02dd698175a885e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a5b6246037d733736f5faad02dd698175a885e/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee6d161908d88b920bf77cd6d2837c793dccf590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee6d161908d88b920bf77cd6d2837c793dccf590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee6d161908d88b920bf77cd6d2837c793dccf590"}], "stats": {"total": 319, "additions": 238, "deletions": 81}, "files": [{"sha": "9bd505d2c67f4620c139f19d4df6d7d4ff3cd283", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -1,3 +1,35 @@\n+2004-01-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/compat/fnptr-by-value-1_x.c, scalar-by-value-1_y.c\n+\tscalar-by-value-3_x.c, scalar-by-value-3_y.c,\n+\tscalar-by-value-4_x.c, scalar-by-value-4_y.c,\n+\tscalar-return-1_x.c, scalar-return-2_y.c,\n+\tscalar-return-3_x.c, scalar-return-3_y.c,\n+\tscalar-return-4_x.c, scalar-return-4_y.c,\n+\tstruct-align-1.h, struct-align-1_x.c,\n+\tstruct-align-1_y.c, struct-align-2.h,\n+\tstruct-align-2_x.c, struct-align-2_y.c,\n+\tstruct-by-value-10_y.c, struct-by-value-11_x.c,\n+\tstruct-by-value-11_y.c, struct-by-value-12_x.c,\n+\tstruct-by-value-12_y.c, struct-by-value-13_x.c,\n+\tstruct-by-value-13_y.c, struct-by-value-14_x.c,\n+\tstruct-by-value-14_y.c, struct-by-value-15_x.c,\n+\tstruct-by-value-15_y.c, struct-by-value-16_y.c,\n+\tstruct-by-value-17_y.c, struct-by-value-18_y.c,\n+\tstruct-by-value-19_y.c, struct-by-value-1_x.c,\n+\tstruct-by-value-1_y.c, struct-by-value-20_y.c,\n+\tstruct-by-value-2_x.c, struct-by-value-2_y.c,\n+\tstruct-by-value-3_y.c, struct-by-value-4_x.c,\n+\tstruct-by-value-4_y.c, struct-by-value-5_y.c,\n+\tstruct-by-value-6_y.c, struct-by-value-7_y.c\n+\tstruct-by-value-8_x.c, struct-by-value-8_y.c\n+\tstruct-by-value-9_x.c, struct-by-value-9_y.c\n+\tstruct-return-10_x.c, struct-return-10_y.c,\n+\tstruct-return-19_x.c, struct-return-20_x.c\n+\tstruct-return-2_x.c, struct-return-2_y.c\n+\tstruct-return-3_x.c: Guard non-C99 tests with SKIP_COMPLEX_INT,\n+\tSKIP_ATTRIBUTE and SKIP_ZERO_ARRAY.  Turns SKIPVA into SKIP_VA.\n+\n 2004-01-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/tls/alias-1.c: Add dg-warning for unsupported visibility"}, {"sha": "156a417a48bfc01a618c0dc2df1980c0d8c49274", "filename": "gcc/testsuite/gcc.dg/compat/fnptr-by-value-1_x.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffnptr-by-value-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffnptr-by-value-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffnptr-by-value-1_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -1,7 +1,6 @@\n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "73f3de0e2e7f1911d200992ac63e621a41e0a81e", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-1_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-1_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "6d20fef1d326734df426831f333ca30afb863ed7", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-3_x.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -144,9 +144,11 @@ testit##NAME (void)\t\t\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_COMPLEX_INT\n T(ci, _Complex int, (2,3))\n T(cl, _Complex long, (3,4))\n T(cll, _Complex long long, (5,6))\n+#endif\n T(cd, _Complex double, (7.0,8.0))\n T(cld, _Complex long double, (8.0,9.0))\n \n@@ -159,9 +161,11 @@ DEBUG_INIT\n \n #define T(NAME) testit##NAME ();\n \n+#ifndef SKIP_COMPLEX_INT\n T(ci)\n T(cl)\n T(cll)\n+#endif\n T(cd)\n T(cld)\n "}, {"sha": "7c6822af993e9ce187636bc174951b9d1af9ae5e", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-3_y.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -85,8 +84,10 @@ testva##NAME (int n, ...)\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_COMPLEX_INT\n T(ci, _Complex int, (2,3))\n T(cl, _Complex long, (3,4))\n T(cll, _Complex long long, (5,6))\n+#endif\n T(cd, _Complex double, (7.0,8.0))\n T(cld, _Complex long double, (8.0,9.0))"}, {"sha": "20f58d20ea7474a3ac3efcc912a78ac1b1721f69", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-4_x.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -68,8 +68,10 @@ testit##NAME (void)\t\t\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_COMPLEX_INT\n T(cc, _Complex char, (0,1))\n T(cs, _Complex short, (1,2))\n+#endif\n T(cf, _Complex float, (6.0,7.0))\n \n #undef T\n@@ -81,8 +83,10 @@ DEBUG_INIT\n \n #define T(NAME) testit##NAME ();\n \n+#ifndef SKIP_COMPLEX_INT\n T(cc)\n T(cs)\n+#endif\n T(cf)\n \n DEBUG_FINI"}, {"sha": "8205b8259891fa3e0bf1f58b3c1270a6d1c5882d", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-4_y.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -68,6 +67,8 @@ test##NAME (TYPE x01, TYPE x02, TYPE x03, TYPE x04,\t\t\\\n   check##NAME (x16, 16);\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_COMPLEX_INT\n T(cc, _Complex char, (0,1))\n T(cs, _Complex short, (1,2))\n+#endif\n T(cf, _Complex float, (6.0,7.0))"}, {"sha": "5556f9510a3efe9b6eeb908ec6ad3c085a9d13cd", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-1_x.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -1,7 +1,6 @@\n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "485165c716bb547221c6933b105b4e2b4523460a", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-2_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "34ced255180fb871c8d4c1099956929cadc63049", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-3_x.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -1,7 +1,6 @@\n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -84,9 +83,11 @@ testit##NAME (void)\t\t\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_COMPLEX_INT\n T(ci, _Complex int, (2,3))\n T(cl, _Complex long, (3,4))\n T(cll, _Complex long long, (4,5))\n+#endif\n T(cd, _Complex double, (2.0,3.0))\n T(cld, _Complex long double, (3.0,4.0))\n \n@@ -99,9 +100,11 @@ DEBUG_INIT\n \n #define T(NAME) testit##NAME ();\n \n+#ifndef SKIP_COMPLEX_INT\n T(ci)\n T(cl)\n T(cll)\n+#endif\n T(cd)\n T(cld)\n "}, {"sha": "5894fd397066d823393e2a7629c0322db439b04b", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-3_y.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -62,8 +62,10 @@ testva##NAME (int n, ...)\t\t\t\t\t\\\n   return rslt;\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_COMPLEX_INT\n T(ci, _Complex int, (2,3))\n T(cl, _Complex long, (3,4))\n T(cll, _Complex long long, (4,5))\n+#endif\n T(cd, _Complex double, (2.0,3.0))\n T(cld, _Complex long double, (3.0,4.0))"}, {"sha": "232b0a700adbaa4fb7ac3085a6d5ca44e41de1f7", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-4_x.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -36,8 +36,10 @@ testit##NAME (void)\t\t\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_COMPLEX_INT\n T(cc, _Complex char, (0,1))\n T(cs, _Complex short, (1,2))\n+#endif\n T(cf, _Complex float, (1.0,2.0))\n \n #undef T\n@@ -49,8 +51,10 @@ DEBUG_INIT\n \n #define T(NAME) testit##NAME ();\n \n+#ifndef SKIP_COMPLEX_INT\n T(cc)\n T(cs)\n+#endif\n T(cf)\n \n DEBUG_FINI"}, {"sha": "caaa031b3b535bd7d4e4334f47605e2a6c6f9ca8", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-4_y.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -38,6 +37,8 @@ test1##NAME (TYPE x01)\t\t\t\t\t\t\\\n   return x01;\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_COMPLEX_INT\n T(cc, _Complex char, (0,1))\n T(cs, _Complex short, (1,2))\n+#endif\n T(cf, _Complex float, (1.0,2.0))"}, {"sha": "d9006c74159ec87f9d55220a258de2666050a4c7", "filename": "gcc/testsuite/gcc.dg/compat/struct-align-1.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1.h?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -27,6 +27,7 @@ struct B3_orig {\n   struct A3_orig a3;\n };\n \n+#ifndef SKIP_ATTRIBUTE\n #define DESC_p_all \"packed attribute for all\"\n struct B1_p_all {\n   char c;\n@@ -176,3 +177,4 @@ struct B3_m_inner_p_outer {\n   char c;\n   struct A3_m_inner_p_outer a3;\n } __attribute__ ((packed));\n+#endif"}, {"sha": "6b99ceb002f747e29c57141bd24dcd30ef25a699", "filename": "gcc/testsuite/gcc.dg/compat/struct-align-1_x.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -64,25 +64,29 @@ return3_##NAME (void)\t\t\t\t\t\\\n #define CHECK(NAME) test_##NAME()\n \n SETUP (orig, 49, 1.0, 111111)\n+#ifndef SKIP_ATTRIBUTE\n SETUP (p_all, 50, 2.0, 222222)\n SETUP (p_inner, 51, 3.0, 333333)\n SETUP (p_outer, 52, 4.0, 444444)\n SETUP (a_max, 53, 5.0, 555555)\n SETUP (m_outer_p_inner, 54, 6.0, 666666)\n SETUP (m_inner_p_outer, 55, 7.0, 777777) \n+#endif\n \n void\n struct_align_1_x (void)\n {\n   DEBUG_INIT\n \n   CHECK (orig);\n+#ifndef SKIP_ATTRIBUTE\n   CHECK (p_all);\n   CHECK (p_inner);\n   CHECK (p_outer);\n   CHECK (a_max);\n   CHECK (m_outer_p_inner);\n   CHECK (m_inner_p_outer);\n+#endif\n \n   DEBUG_FINI\n "}, {"sha": "c858e10d763f43acde84a672664d541eab461a7c", "filename": "gcc/testsuite/gcc.dg/compat/struct-align-1_y.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -80,9 +80,11 @@ test_##NAME (void)\t\t\t\t\t\t\\\n }\n \n TEST (orig)\n+#ifndef SKIP_ATTRIBUTE\n TEST (p_all)\n TEST (p_inner)\n TEST (p_outer)\n TEST (a_max)\n TEST (m_outer_p_inner)\n TEST (m_inner_p_outer)\n+#endif"}, {"sha": "f94fe57e1343be966b18671e4b170942b3823a0b", "filename": "gcc/testsuite/gcc.dg/compat/struct-align-2.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2.h?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -11,6 +11,7 @@ struct epoll_event_orig {\n   unsigned long long data;\n };\n \n+#ifndef SKIP_ATTRIBUTE\n #define DESC_structmax \"maximum useful struct alignment\"\n struct epoll_event_structmax {\n   unsigned int events;\n@@ -71,3 +72,4 @@ struct epoll_event_pdata8 {\n   unsigned int events;\n   unsigned long long data __attribute__ ((aligned(8)));\n } __attribute__ ((packed));\n+#endif"}, {"sha": "47f32d443ec6b52fa0e82e42e735ae48971ac94a", "filename": "gcc/testsuite/gcc.dg/compat/struct-align-2_x.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -1,6 +1,6 @@\n /* Disable this test for 16-bit targets.  */\n \n-#if __INT_MAX__ > 32767\n+#if !(defined __GNUC__) || (__INT_MAX__ > 32767)\n \n #include \"compat-common.h\"\n #include \"struct-align-2.h\"\n@@ -38,6 +38,7 @@ return_##NAME (void)\t\t\t\t\t\t\\\n   test_##NAME()\n \n SETUP (orig,101, 102, 0x0101010101010101ULL)\n+#ifndef SKIP_ATTRIBUTE\n SETUP (structmax, 103, 104, 0x1212121212121212ULL)\n SETUP (struct4, 105, 106, 0x2323232323232323ULL)\n SETUP (struct8, 107, 108, 0x3434343434343434ULL)\n@@ -48,13 +49,15 @@ SETUP (pstruct4, 115, 116, 0x7878787878787878ULL)\n SETUP (pstruct8, 117, 118, 0x8989898989898989ULL)\n SETUP (pdata4, 119, 120, 0x9A9A9A9A9A9A9A9AULL)\n SETUP (pdata8, 121, 122, 0xABABABABABABABABULL)\n+#endif\n \n void\n struct_align_2_x (void)\n {\n   DEBUG_INIT\n \n   CHECK (orig);\n+#ifndef SKIP_ATTRIBUTE\n   CHECK (structmax);\n   CHECK (struct4);\n   CHECK (struct8);\n@@ -65,6 +68,7 @@ struct_align_2_x (void)\n   CHECK (pstruct8);\n   CHECK (pdata4);\n   CHECK (pdata8);\n+#endif\n \n   DEBUG_FINI\n "}, {"sha": "15b684f453cc4711cb4700a2d2c5357840068634", "filename": "gcc/testsuite/gcc.dg/compat/struct-align-2_y.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -1,6 +1,6 @@\n /* Disable this test for 16-bit targets.  */\n \n-#if __INT_MAX__ > 32767\n+#if !(defined __GNUC__) || (__INT_MAX__ > 32767)\n \n #include \"compat-common.h\"\n #include \"struct-align-2.h\"\n@@ -51,6 +51,7 @@ test_##NAME (void)\t\t\t\t\t\t\\\n }\n \n TEST (orig)\n+#ifndef SKIP_ATTRIBUTE\n TEST (structmax)\n TEST (struct4)\n TEST (struct8)\n@@ -61,6 +62,7 @@ TEST (pstruct4)\n TEST (pstruct8)\n TEST (pdata4)\n TEST (pdata8)\n+#endif\n \n #else\n "}, {"sha": "6c9589d029d471da70115700a2469ebe455d4791", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-10_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "cea1ac09688787542024e3f16f7869d6c4e8ad6b", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-11_x.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-11_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-11_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-11_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -4,6 +4,7 @@\n #include \"fp-struct-check.h\"\n #include \"fp-struct-test-by-value-x.h\"\n \n+#ifndef SKIP_COMPLEX_INT\n DEFS(cc, _Complex char)\n CHECKS(cc, _Complex char)\n \n@@ -23,12 +24,14 @@ TEST(Scc13, _Complex char)\n TEST(Scc14, _Complex char)\n TEST(Scc15, _Complex char)\n TEST(Scc16, _Complex char)\n+#endif\n \n #undef T\n \n void\n struct_by_value_11_x ()\n {\n+#ifndef SKIP_COMPLEX_INT\n DEBUG_INIT\n \n #define T(TYPE, MTYPE) testit##TYPE ();\n@@ -56,4 +59,5 @@ if (fails != 0)\n   abort ();\n \n #undef T\n+#endif\n }"}, {"sha": "c4e47fc35494812ba662b6cfea9e69cb73e79ec7", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-11_y.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-11_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-11_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-11_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -13,6 +12,7 @@ const int test_va = 1;\n #include \"fp-struct-init.h\"\n #include \"fp-struct-test-by-value-y.h\"\n \n+#ifndef SKIP_COMPLEX_INT\n DEFS(cc,_Complex char)\n INITS(cc, _Complex char)\n \n@@ -32,3 +32,4 @@ TEST(Scc13, _Complex char)\n TEST(Scc14, _Complex char)\n TEST(Scc15, _Complex char)\n TEST(Scc16, _Complex char)\n+#endif"}, {"sha": "925ce9270b9ebfa17c7fc9db89eabfb9995dad13", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-12_x.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-12_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-12_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-12_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -4,6 +4,7 @@\n #include \"fp-struct-check.h\"\n #include \"fp-struct-test-by-value-x.h\"\n \n+#ifndef SKIP_COMPLEX_INT\n DEFS(cs, _Complex short)\n CHECKS(cs, _Complex short)\n \n@@ -23,12 +24,14 @@ TEST(Scs13, _Complex short)\n TEST(Scs14, _Complex short)\n TEST(Scs15, _Complex short)\n TEST(Scs16, _Complex short)\n+#endif\n \n #undef T\n \n void\n struct_by_value_12_x ()\n {\n+#ifndef SKIP_COMPLEX_INT\n DEBUG_INIT\n \n #define T(TYPE, MTYPE) testit##TYPE ();\n@@ -56,4 +59,5 @@ if (fails != 0)\n   abort ();\n \n #undef T\n+#endif\n }"}, {"sha": "2e8e393eeee58b0db7898a8b6ad58ace352c10ff", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-12_y.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-12_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-12_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-12_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -13,6 +12,7 @@ const int test_va = 1;\n #include \"fp-struct-init.h\"\n #include \"fp-struct-test-by-value-y.h\"\n \n+#ifndef SKIP_COMPLEX_INT\n DEFS(cs,_Complex short)\n INITS(cs, _Complex short)\n \n@@ -32,3 +32,4 @@ TEST(Scs13, _Complex short)\n TEST(Scs14, _Complex short)\n TEST(Scs15, _Complex short)\n TEST(Scs16, _Complex short)\n+#endif"}, {"sha": "f27222f2df602ca8ae7a22b87720403ff405781e", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-13_x.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-13_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-13_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-13_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -4,6 +4,7 @@\n #include \"fp-struct-check.h\"\n #include \"fp-struct-test-by-value-x.h\"\n \n+#ifndef SKIP_COMPLEX_INT\n DEFS(ci, _Complex int)\n CHECKS(ci, _Complex int)\n \n@@ -23,12 +24,14 @@ TEST(Sci13, _Complex int)\n TEST(Sci14, _Complex int)\n TEST(Sci15, _Complex int)\n TEST(Sci16, _Complex int)\n+#endif\n \n #undef T\n \n void\n struct_by_value_13_x ()\n {\n+#ifndef SKIP_COMPLEX_INT\n DEBUG_INIT\n \n #define T(TYPE, MTYPE) testit##TYPE ();\n@@ -56,4 +59,5 @@ if (fails != 0)\n   abort ();\n \n #undef T\n+#endif\n }"}, {"sha": "7a3657e0f01e0f1a152a4c9594cc23ae9c269793", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-13_y.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-13_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-13_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-13_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -13,6 +12,7 @@ const int test_va = 1;\n #include \"fp-struct-init.h\"\n #include \"fp-struct-test-by-value-y.h\"\n \n+#ifndef SKIP_COMPLEX_INT\n DEFS(ci,_Complex int)\n INITS(ci, _Complex int)\n \n@@ -32,3 +32,4 @@ TEST(Sci13, _Complex int)\n TEST(Sci14, _Complex int)\n TEST(Sci15, _Complex int)\n TEST(Sci16, _Complex int)\n+#endif"}, {"sha": "bb8db70721ebac6846d9f0c17ef2ef58321593cd", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-14_x.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-14_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-14_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-14_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -4,6 +4,7 @@\n #include \"fp-struct-check.h\"\n #include \"fp-struct-test-by-value-x.h\"\n \n+#ifndef SKIP_COMPLEX_INT\n DEFS(cl, _Complex long)\n CHECKS(cl, _Complex long)\n \n@@ -23,12 +24,14 @@ TEST(Scl13, _Complex long)\n TEST(Scl14, _Complex long)\n TEST(Scl15, _Complex long)\n TEST(Scl16, _Complex long)\n+#endif\n \n #undef T\n \n void\n struct_by_value_14_x ()\n {\n+#ifndef SKIP_COMPLEX_INT\n DEBUG_INIT\n \n #define T(TYPE, MTYPE) testit##TYPE ();\n@@ -56,4 +59,5 @@ if (fails != 0)\n   abort ();\n \n #undef T\n+#endif\n }"}, {"sha": "5abd063ef214de2a960f708efb4f6699e69a4cbf", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-14_y.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-14_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-14_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-14_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -13,6 +12,7 @@ const int test_va = 1;\n #include \"fp-struct-init.h\"\n #include \"fp-struct-test-by-value-y.h\"\n \n+#ifndef SKIP_COMPLEX_INT\n DEFS(cl,_Complex long)\n INITS(cl, _Complex long)\n \n@@ -32,3 +32,4 @@ TEST(Scl13, _Complex long)\n TEST(Scl14, _Complex long)\n TEST(Scl15, _Complex long)\n TEST(Scl16, _Complex long)\n+#endif"}, {"sha": "4409c9668dc11285c89cc31c021ab088ddee55be", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-15_x.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-15_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-15_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-15_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -4,6 +4,7 @@\n #include \"fp-struct-check.h\"\n #include \"fp-struct-test-by-value-x.h\"\n \n+#ifndef SKIP_COMPLEX_INT\n DEFS(cll, _Complex long long)\n CHECKS(cll, _Complex long long)\n \n@@ -23,12 +24,14 @@ TEST(Scll13, _Complex long long)\n TEST(Scll14, _Complex long long)\n TEST(Scll15, _Complex long long)\n TEST(Scll16, _Complex long long)\n+#endif\n \n #undef T\n \n void\n struct_by_value_15_x ()\n {\n+#ifndef SKIP_COMPLEX_INT\n DEBUG_INIT\n \n #define T(TYPE, MTYPE) testit##TYPE ();\n@@ -56,4 +59,5 @@ if (fails != 0)\n   abort ();\n \n #undef T\n+#endif\n }"}, {"sha": "a5fec4fdb6efd2c4e4e6b5cb48001420f61280b0", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-15_y.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-15_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-15_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-15_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -13,6 +12,7 @@ const int test_va = 1;\n #include \"fp-struct-init.h\"\n #include \"fp-struct-test-by-value-y.h\"\n \n+#ifndef SKIP_COMPLEX_INT\n DEFS(cll,_Complex long long)\n INITS(cll, _Complex long long)\n \n@@ -32,3 +32,4 @@ TEST(Scll13, _Complex long long)\n TEST(Scll14, _Complex long long)\n TEST(Scll15, _Complex long long)\n TEST(Scll16, _Complex long long)\n+#endif"}, {"sha": "273d7cc4f3e7c340b7c7962c5241c6951c88f21e", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-16_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "a0342a37c0c81bf392e11e2d6cb251ec557e1a47", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-17_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "b69425a5f4e5dd19e9a3389ca81a63e6b990e9a8", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-18_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "036c6b618d77b9c41dfd59cbebb47d32a81aedf3", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-19_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-19_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-19_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-19_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "67ac16d1d1575332113167e7c16c297e535cd17f", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-1_x.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-1_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -34,7 +34,10 @@ testit##N (void)\t\t\t\t\t\t\\\n \n extern void abort (void);\n \n-T(0) T(1) T(2) T(3) T(4) T(5) T(6) T(7)\n+#ifndef SKIP_ZERO_ARRAY\n+T(0)\n+#endif\n+T(1) T(2) T(3) T(4) T(5) T(6) T(7)\n T(8) T(9) T(10) T(11) T(12) T(13) T(14) T(15)\n T(16) T(17) T(18) T(19) T(20) T(21) T(22) T(23)\n T(24) T(25) T(26) T(27) T(28) T(29) T(30) T(31)\n@@ -50,7 +53,10 @@ struct_by_value_1_x ()\n {\n #define T(N) testit##N ();\n \n-T(0) T(1) T(2) T(3) T(4) T(5) T(6) T(7)\n+#ifndef SKIP_ZERO_ARRAY\n+T(0)\n+#endif\n+T(1) T(2) T(3) T(4) T(5) T(6) T(7)\n T(8) T(9) T(10) T(11) T(12) T(13) T(14) T(15)\n T(16) T(17) T(18) T(19) T(20) T(21) T(22) T(23)\n T(24) T(25) T(26) T(27) T(28) T(29) T(30) T(31)"}, {"sha": "8370dbac34220216b617669b49a263ddf40c2f7c", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-1_y.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-1_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -30,7 +30,10 @@ test##N (struct S##N s1, struct S##N s2,\t\t\t\\\n   check##N (s3, 192);\t\t\t\t\t\t\\\n }\n \n-T(0) T(1) T(2) T(3) T(4) T(5) T(6) T(7)\n+#ifndef SKIP_ZERO_ARRAY\n+T(0)\n+#endif\n+T(1) T(2) T(3) T(4) T(5) T(6) T(7)\n T(8) T(9) T(10) T(11) T(12) T(13) T(14) T(15)\n T(16) T(17) T(18) T(19) T(20) T(21) T(22) T(23)\n T(24) T(25) T(26) T(27) T(28) T(29) T(30) T(31)"}, {"sha": "1a4a6775def5963aa72ae27d76588be5a4d19397", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-20_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-20_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-20_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-20_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "57c6da0c0bb08d188f547d1bbe1ef9f31ddb7c19", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-2_x.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -105,7 +105,9 @@ testit##NAME##N (void)\t\t\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, uc, unsigned char)\n+#endif\n T(1, uc, unsigned char)\n T(2, uc, unsigned char)\n T(3, uc, unsigned char)\n@@ -121,7 +123,9 @@ T(12, uc, unsigned char)\n T(13, uc, unsigned char)\n T(14, uc, unsigned char)\n T(15, uc, unsigned char)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, us, unsigned short)\n+#endif\n T(1, us, unsigned short)\n T(2, us, unsigned short)\n T(3, us, unsigned short)\n@@ -137,7 +141,9 @@ T(12, us, unsigned short)\n T(13, us, unsigned short)\n T(14, us, unsigned short)\n T(15, us, unsigned short)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, ui, unsigned int)\n+#endif\n T(1, ui, unsigned int)\n T(2, ui, unsigned int)\n T(3, ui, unsigned int)\n@@ -163,7 +169,9 @@ DEBUG_INIT\n \n #define T(N, NAME, TYPE) testit##NAME##N ();\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, uc, unsigned char)\n+#endif\n T(1, uc, unsigned char)\n T(2, uc, unsigned char)\n T(3, uc, unsigned char)\n@@ -179,7 +187,9 @@ T(12, uc, unsigned char)\n T(13, uc, unsigned char)\n T(14, uc, unsigned char)\n T(15, uc, unsigned char)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, us, unsigned short)\n+#endif\n T(1, us, unsigned short)\n T(2, us, unsigned short)\n T(3, us, unsigned short)\n@@ -195,7 +205,9 @@ T(12, us, unsigned short)\n T(13, us, unsigned short)\n T(14, us, unsigned short)\n T(15, us, unsigned short)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, ui, unsigned int)\n+#endif\n T(1, ui, unsigned int)\n T(2, ui, unsigned int)\n T(3, ui, unsigned int)"}, {"sha": "3b203fab2010d36126644d0637a065000667f38a", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-2_y.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-2_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -102,7 +101,9 @@ testva##NAME##N (int n, ...)\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, uc, unsigned char)\n+#endif\n T(1, uc, unsigned char)\n T(2, uc, unsigned char)\n T(3, uc, unsigned char)\n@@ -118,7 +119,9 @@ T(12, uc, unsigned char)\n T(13, uc, unsigned char)\n T(14, uc, unsigned char)\n T(15, uc, unsigned char)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, us, unsigned short)\n+#endif\n T(1, us, unsigned short)\n T(2, us, unsigned short)\n T(3, us, unsigned short)\n@@ -134,7 +137,9 @@ T(12, us, unsigned short)\n T(13, us, unsigned short)\n T(14, us, unsigned short)\n T(15, us, unsigned short)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, ui, unsigned int)\n+#endif\n T(1, ui, unsigned int)\n T(2, ui, unsigned int)\n T(3, ui, unsigned int)"}, {"sha": "d5a31c9d5a491ec1a7c79a38bd32515bec23dc1a", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-3_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-3_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "def20ce8b0315d99f632793a58d22d38b3c79149", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-4_x.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -129,7 +129,9 @@ void checkScsi (Scsi x, int i)\n void checkScis (Scis x, int i)\n { if (x.c != i/16 || x.i != i+1 || x.s != i+2) DEBUG_CHECK }\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, Sc)\n+#endif\n T(1, Sc)\n T(2, Sc)\n T(3, Sc)\n@@ -145,7 +147,9 @@ T(12, Sc)\n T(13, Sc)\n T(14, Sc)\n T(15, Sc)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Ss)\n+#endif\n T(1, Ss)\n T(2, Ss)\n T(3, Ss)\n@@ -161,7 +165,9 @@ T(12, Ss)\n T(13, Ss)\n T(14, Ss)\n T(15, Ss)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Si)\n+#endif\n T(1, Si)\n T(2, Si)\n T(3, Si)\n@@ -187,7 +193,9 @@ DEBUG_INIT\n \n #define T(N, TYPE) testit##TYPE##N ();\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, Sc)\n+#endif\n T(1, Sc)\n T(2, Sc)\n T(3, Sc)\n@@ -203,7 +211,9 @@ T(12, Sc)\n T(13, Sc)\n T(14, Sc)\n T(15, Sc)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Ss)\n+#endif\n T(1, Ss)\n T(2, Ss)\n T(3, Ss)\n@@ -219,7 +229,9 @@ T(12, Ss)\n T(13, Ss)\n T(14, Ss)\n T(15, Ss)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Si)\n+#endif\n T(1, Si)\n T(2, Si)\n T(3, Si)"}, {"sha": "fe1b09577dd6dbf9a6d322514905e3091719074f", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-4_y.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-4_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -107,7 +106,9 @@ testva##TYPE##N (int n, ...)\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, Sc)\n+#endif\n T(1, Sc)\n T(2, Sc)\n T(3, Sc)\n@@ -123,7 +124,9 @@ T(12, Sc)\n T(13, Sc)\n T(14, Sc)\n T(15, Sc)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Ss)\n+#endif\n T(1, Ss)\n T(2, Ss)\n T(3, Ss)\n@@ -139,7 +142,9 @@ T(12, Ss)\n T(13, Ss)\n T(14, Ss)\n T(15, Ss)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Si)\n+#endif\n T(1, Si)\n T(2, Si)\n T(3, Si)"}, {"sha": "224d8409e28987cacaad6adc7d89a4e84150df99", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-5_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-5_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "4a27b67cc02c9c63aa19bc703f3bd9dd33aa06d8", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-6_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-6_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "39e46ba8481a589ebb33bcfa687a0fffd27b08c7", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-7_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-7_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "5a376fd38cfcba58cd53b168d5cf85922bdaecdf", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-8_x.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -129,7 +129,9 @@ void checkScsi (Scsi x, int i)\n void checkScis (Scis x, int i)\n { if (x.c != i/16 || x.i != i+1 || x.s != i+2) DEBUG_CHECK }\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, Ssc)\n+#endif\n T(1, Ssc)\n T(2, Ssc)\n T(3, Ssc)\n@@ -145,7 +147,9 @@ T(12, Ssc)\n T(13, Ssc)\n T(14, Ssc)\n T(15, Ssc)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Sis)\n+#endif\n T(1, Sis)\n T(2, Sis)\n T(3, Sis)\n@@ -171,7 +175,9 @@ DEBUG_INIT\n \n #define T(N, TYPE) testit##TYPE##N ();\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, Ssc)\n+#endif\n T(1, Ssc)\n T(2, Ssc)\n T(3, Ssc)\n@@ -187,7 +193,9 @@ T(12, Ssc)\n T(13, Ssc)\n T(14, Ssc)\n T(15, Ssc)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Sis)\n+#endif\n T(1, Sis)\n T(2, Sis)\n T(3, Sis)"}, {"sha": "b246fd44893b14e57777946175242f2a6894e058", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-8_y.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-8_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -107,7 +106,9 @@ testva##TYPE##N (int n, ...)\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, Ssc)\n+#endif\n T(1, Ssc)\n T(2, Ssc)\n T(3, Ssc)\n@@ -123,7 +124,9 @@ T(12, Ssc)\n T(13, Ssc)\n T(14, Ssc)\n T(15, Ssc)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Sis)\n+#endif\n T(1, Sis)\n T(2, Sis)\n T(3, Sis)"}, {"sha": "5bbef770aca6789c629cf6bb992fe8bea198a534", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-9_x.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -132,7 +132,9 @@ void checkScsi (Scsi x, int i)\n void checkScis (Scis x, int i)\n { if (x.c != i/16 || x.i != i+1 || x.s != i+2) DEBUG_CHECK }\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, Scsi)\n+#endif\n T(1, Scsi)\n T(2, Scsi)\n T(3, Scsi)\n@@ -148,7 +150,9 @@ T(12, Scsi)\n T(13, Scsi)\n T(14, Scsi)\n T(15, Scsi)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Scis)\n+#endif\n T(1, Scis)\n T(2, Scis)\n T(3, Scis)\n@@ -174,7 +178,9 @@ DEBUG_INIT\n \n #define T(N, TYPE) testit##TYPE##N ();\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, Scsi)\n+#endif\n T(1, Scsi)\n T(2, Scsi)\n T(3, Scsi)\n@@ -190,7 +196,9 @@ T(12, Scsi)\n T(13, Scsi)\n T(14, Scsi)\n T(15, Scsi)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Scis)\n+#endif\n T(1, Scis)\n T(2, Scis)\n T(3, Scis)"}, {"sha": "0f6521800851a33593b1214a461795b07e0411ac", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-9_y.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-9_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -107,7 +106,9 @@ testva##TYPE##N (int n, ...)\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, Scsi)\n+#endif\n T(1, Scsi)\n T(2, Scsi)\n T(3, Scsi)\n@@ -123,7 +124,9 @@ T(12, Scsi)\n T(13, Scsi)\n T(14, Scsi)\n T(15, Scsi)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, Scis)\n+#endif\n T(1, Scis)\n T(2, Scis)\n T(3, Scis)"}, {"sha": "d1531b179bd0cf9c6857038ecb06cf7873dd08ca", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-10_x.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -75,18 +75,18 @@ testit##TYPE (void)\t\t\t\t\t\t\\\n #include \"fp2-struct-defs.h\"\n #include \"fp2-struct-check.h\"\n \n-T(Sfd);\n-T(Sfl);\n-T(Sdf);\n-T(Sdl);\n-T(Slf);\n-T(Sld);\n-T(Sfdl);\n-T(Sfld);\n-T(Sdfl);\n-T(Sdlf);\n-T(Slfd);\n-T(Sldf);\n+T(Sfd)\n+T(Sfl)\n+T(Sdf)\n+T(Sdl)\n+T(Slf)\n+T(Sld)\n+T(Sfdl)\n+T(Sfld)\n+T(Sdfl)\n+T(Sdlf)\n+T(Slfd)\n+T(Sldf)\n \n #undef T\n "}, {"sha": "7af4068d5d0bee310c705100ce8364fd18e5ec42", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-10_y.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -2,8 +2,7 @@\n \n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "0085a9f6883b79c8a2e7cae3d28e4135dfaffdcf", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-19_x.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-19_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-19_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-19_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -1,7 +1,6 @@\n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "be7139f7d546481f7a7c42f265d82c8ecb770e8b", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-20_x.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-20_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-20_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-20_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -1,7 +1,6 @@\n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}, {"sha": "590c30aa937879679c6d39379b486ce51d2c6a37", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-2_x.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -1,7 +1,6 @@\n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;\n@@ -102,7 +101,9 @@ testit##NAME##N (void)\t\t\t\t\t\t\\\n   DEBUG_NL;\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, uc, unsigned char)\n+#endif\n T(1, uc, unsigned char)\n T(2, uc, unsigned char)\n T(3, uc, unsigned char)\n@@ -118,7 +119,9 @@ T(12, uc, unsigned char)\n T(13, uc, unsigned char)\n T(14, uc, unsigned char)\n T(15, uc, unsigned char)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, us, unsigned short)\n+#endif\n T(1, us, unsigned short)\n T(2, us, unsigned short)\n T(3, us, unsigned short)\n@@ -134,7 +137,9 @@ T(12, us, unsigned short)\n T(13, us, unsigned short)\n T(14, us, unsigned short)\n T(15, us, unsigned short)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, ui, unsigned int)\n+#endif\n T(1, ui, unsigned int)\n T(2, ui, unsigned int)\n T(3, ui, unsigned int)\n@@ -160,7 +165,9 @@ DEBUG_INIT\n \n #define T(N, NAME, TYPE) testit##NAME##N ();\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, uc, unsigned char)\n+#endif\n T(1, uc, unsigned char)\n T(2, uc, unsigned char)\n T(3, uc, unsigned char)\n@@ -176,7 +183,9 @@ T(12, uc, unsigned char)\n T(13, uc, unsigned char)\n T(14, uc, unsigned char)\n T(15, uc, unsigned char)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, us, unsigned short)\n+#endif\n T(1, us, unsigned short)\n T(2, us, unsigned short)\n T(3, us, unsigned short)\n@@ -192,7 +201,9 @@ T(12, us, unsigned short)\n T(13, us, unsigned short)\n T(14, us, unsigned short)\n T(15, us, unsigned short)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, ui, unsigned int)\n+#endif\n T(1, ui, unsigned int)\n T(2, ui, unsigned int)\n T(3, ui, unsigned int)"}, {"sha": "7d7df8ef6cdb3f6e50095486d65bacc79b6b2cf1", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-2_y.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_y.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -70,7 +70,9 @@ testva##NAME##N (int n, ...)\t\t\t\t\t\\\n   return rslt;\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SKIP_ZERO_ARRAY\n T(0, uc, unsigned char)\n+#endif\n T(1, uc, unsigned char)\n T(2, uc, unsigned char)\n T(3, uc, unsigned char)\n@@ -86,7 +88,9 @@ T(12, uc, unsigned char)\n T(13, uc, unsigned char)\n T(14, uc, unsigned char)\n T(15, uc, unsigned char)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, us, unsigned short)\n+#endif\n T(1, us, unsigned short)\n T(2, us, unsigned short)\n T(3, us, unsigned short)\n@@ -102,7 +106,9 @@ T(12, us, unsigned short)\n T(13, us, unsigned short)\n T(14, us, unsigned short)\n T(15, us, unsigned short)\n+#ifndef SKIP_ZERO_ARRAY\n T(0, ui, unsigned int)\n+#endif\n T(1, ui, unsigned int)\n T(2, ui, unsigned int)\n T(3, ui, unsigned int)"}, {"sha": "e985f91e444045061212643c9c53371659ca87e0", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-3_x.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5b6246037d733736f5faad02dd698175a885e/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_x.c?ref=c9a5b6246037d733736f5faad02dd698175a885e", "patch": "@@ -1,7 +1,6 @@\n #include \"compat-common.h\"\n \n-/* Turn off checking for variable arguments with -DSKIPVA.  */\n-#ifdef SKIPVA\n+#ifdef SKIP_VA\n const int test_va = 0;\n #else\n const int test_va = 1;"}]}