{"sha": "3dd836179aa32c3ded97ded16bb24305cefc43b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RkODM2MTc5YWEzMmMzZGVkOTdkZWQxNmJiMjQzMDVjZWZjNDNiMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-10T20:47:16Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-10T20:47:16Z"}, "message": "pt.c (print_candidates_1): Separate TREE_LIST and OVERLOAD printing.\n\n\t* pt.c (print_candidates_1): Separate TREE_LIST and OVERLOAD\n\tprinting.\n\t(print_candidates): Adjust.\n\nFrom-SVN: r247863", "tree": {"sha": "fe6f0d9c92e267df269da020c7a301cfcf1ba02e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe6f0d9c92e267df269da020c7a301cfcf1ba02e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dd836179aa32c3ded97ded16bb24305cefc43b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd836179aa32c3ded97ded16bb24305cefc43b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd836179aa32c3ded97ded16bb24305cefc43b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd836179aa32c3ded97ded16bb24305cefc43b0/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "268de039e3d8136c02e7a11e1e97a7637d7d1323", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268de039e3d8136c02e7a11e1e97a7637d7d1323", "html_url": "https://github.com/Rust-GCC/gccrs/commit/268de039e3d8136c02e7a11e1e97a7637d7d1323"}], "stats": {"total": 61, "additions": 25, "deletions": 36}, "files": [{"sha": "c0bba2aa8f42896e96e4c4daf9a5567774b06469", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd836179aa32c3ded97ded16bb24305cefc43b0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd836179aa32c3ded97ded16bb24305cefc43b0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3dd836179aa32c3ded97ded16bb24305cefc43b0", "patch": "@@ -1,5 +1,9 @@\n 2017-05-10  Nathan Sidwell  <nathan@acm.org>\n \n+\t* pt.c (print_candidates_1): Separate TREE_LIST and OVERLOAD\n+\tprinting.\n+\t(print_candidates): Adjust.\n+\n \t* cp-tree.h (build_new_function_call): Lose koenig_p arg.  Fix\n \tline breaking.\n \t* call.c (build_new_function_call): Lose koenig_p arg.  Remove"}, {"sha": "5f7d4291457dfa6565bbd5c5d12b75c4011b9f25", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 21, "deletions": 36, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd836179aa32c3ded97ded16bb24305cefc43b0/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd836179aa32c3ded97ded16bb24305cefc43b0/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3dd836179aa32c3ded97ded16bb24305cefc43b0", "patch": "@@ -1922,43 +1922,28 @@ explicit_class_specialization_p (tree type)\n    in *STR when it ends.  */\n \n static void\n-print_candidates_1 (tree fns, bool more, const char **str)\n+print_candidates_1 (tree fns, char **str, bool more = false)\n {\n-  tree fn, fn2;\n-  char *spaces = NULL;\n-\n-  for (fn = fns; fn; fn = OVL_NEXT (fn))\n-    if (TREE_CODE (fn) == TREE_LIST)\n-      {\n-        for (fn2 = fn; fn2 != NULL_TREE; fn2 = TREE_CHAIN (fn2))\n-          print_candidates_1 (TREE_VALUE (fn2),\n-                              TREE_CHAIN (fn2) || more, str);\n-      }\n-    else\n+  if (TREE_CODE (fns) == TREE_LIST)\n+    for (; fns; fns = TREE_CHAIN (fns))\n+      print_candidates_1 (TREE_VALUE (fns), str, more || TREE_CHAIN (fns));\n+  else\n+    while (fns)\n       {\n-\ttree cand = OVL_CURRENT (fn);\n-        if (!*str)\n-          {\n-            /* Pick the prefix string.  */\n-            if (!more && !OVL_NEXT (fns))\n-              {\n-                inform (DECL_SOURCE_LOCATION (cand),\n-\t\t\t\"candidate is: %#qD\", cand);\n-                continue;\n-              }\n+\ttree cand = OVL_CURRENT (fns);\n \n-            *str = _(\"candidates are:\");\n-            spaces = get_spaces (*str);\n-          }\n-\tinform (DECL_SOURCE_LOCATION (cand), \"%s %#qD\", *str, cand);\n-        *str = spaces ? spaces : *str;\n+\tfns = OVL_NEXT (fns);\n+\tconst char *pfx = *str;\n+\tif (!pfx)\n+\t  {\n+\t    if (more || fns)\n+\t      pfx = _(\"candidates are:\");\n+\t    else\n+\t      pfx = _(\"candidate is:\");\n+\t    *str = get_spaces (pfx);\n+\t  }\n+\tinform (DECL_SOURCE_LOCATION (cand), \"%s %#qD\", pfx, cand);\n       }\n-\n-  if (!more)\n-    {\n-      free (spaces);\n-      *str = NULL;\n-    }\n }\n \n /* Print the list of candidate FNS in an error message.  FNS can also\n@@ -1967,9 +1952,9 @@ print_candidates_1 (tree fns, bool more, const char **str)\n void\n print_candidates (tree fns)\n {\n-  const char *str = NULL;\n-  print_candidates_1 (fns, false, &str);\n-  gcc_assert (str == NULL);\n+  char *str = NULL;\n+  print_candidates_1 (fns, &str);\n+  free (str);\n }\n \n /* Get a (possibly) constrained template declaration for the"}]}