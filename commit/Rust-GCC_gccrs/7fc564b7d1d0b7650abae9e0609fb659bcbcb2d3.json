{"sha": "7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZjNTY0YjdkMWQwYjc2NTBhYmFlOWUwNjA5ZmI2NTliY2JjYjJkMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-02-09T13:49:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-02-09T13:49:14Z"}, "message": "target-supports.exp (check_effective_target_coldfire_fpu): New procedure.\n\ngcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target_coldfire_fpu): New\n\tprocedure.\n\t* gcc.c-torture/execute/ieee/mul-subnormal-single-1.x: XFAIL on\n\tm68k targets if check_effective_target_coldfire_fpu returns true.\n\nFrom-SVN: r121744", "tree": {"sha": "c2840bcce3ffec5b05e0550aa1361096ffbe6da6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2840bcce3ffec5b05e0550aa1361096ffbe6da6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3/comments", "author": null, "committer": null, "parents": [{"sha": "10e96df47c9067b69bde01f173a3869896ab388e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10e96df47c9067b69bde01f173a3869896ab388e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10e96df47c9067b69bde01f173a3869896ab388e"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "4870ee4fa516710edf3d44b45d7d11779a747181", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3", "patch": "@@ -1,3 +1,10 @@\n+2007-02-09  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_coldfire_fpu): New\n+\tprocedure.\n+\t* gcc.c-torture/execute/ieee/mul-subnormal-single-1.x: XFAIL on\n+\tm68k targets if check_effective_target_coldfire_fpu returns true.\n+\n 2007-02-09  Zdenek Dvorak  <dvorakz@suse.cz>\n \tRichard Guenther  <rguenther@suse.de>\n "}, {"sha": "bb8aa0765b81fe6486047ac22e2b4b7300ff2ced", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/mul-subnormal-single-1.x", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmul-subnormal-single-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmul-subnormal-single-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmul-subnormal-single-1.x?ref=7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3", "patch": "@@ -3,4 +3,9 @@ if [istarget \"mips-sgi-irix6*\"] {\n     # isn't expected to work for n32 and n64 on MIPS IV targets.\n     return 1\n }\n+if {[istarget \"m68k-*-linux-gnu*\"] && [check_effective_target_coldfire_fpu]} {\n+    # ColdFire FPUs require software handling of subnormals.  Linux 2.6.10\n+    # does not have this.\n+    set torture_execute_xfail \"m68k-*-linux-gnu*\"\n+}\n return 0"}, {"sha": "7c4d4b58aee735a87359566d741a4629f3c03e71", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=7fc564b7d1d0b7650abae9e0609fb659bcbcb2d3", "patch": "@@ -2024,6 +2024,16 @@ proc check_effective_target_sync_char_short { } {\n     return $et_sync_char_short_saved\n }\n \n+# Return 1 if the target uses a ColdFire FPU.\n+\n+proc check_effective_target_coldfire_fpu { } {\n+    return [check_no_compiler_messages coldfire_fpu assembly {\n+\t#ifndef __mcffpu__\n+\t#error FOO\n+\t#endif\n+    }]\n+}\n+\n # Return 1 if the target matches the effective target 'arg', 0 otherwise.\n # This can be used with any check_* proc that takes no argument and\n # returns only 1 or 0.  It could be used with check_* procs that take"}]}