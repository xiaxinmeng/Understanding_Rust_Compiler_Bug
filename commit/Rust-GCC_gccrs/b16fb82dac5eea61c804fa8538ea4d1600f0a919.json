{"sha": "b16fb82dac5eea61c804fa8538ea4d1600f0a919", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE2ZmI4MmRhYzVlZWE2MWM4MDRmYTg1MzhlYTRkMTYwMGYwYTkxOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-06-21T08:11:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-06-21T08:11:28Z"}, "message": "tree-ssa-loop-niter.c (simplify_using_initial_conditions): Limit iteration over the dominators.\n\n2006-06-21  Richrad Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-loop-niter.c (simplify_using_initial_conditions):\n\tLimit iteration over the dominators.\n\nFrom-SVN: r114840", "tree": {"sha": "9cf8df85c5cbde4359653bfd0afd0fa5b7e562c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cf8df85c5cbde4359653bfd0afd0fa5b7e562c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b16fb82dac5eea61c804fa8538ea4d1600f0a919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16fb82dac5eea61c804fa8538ea4d1600f0a919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b16fb82dac5eea61c804fa8538ea4d1600f0a919", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16fb82dac5eea61c804fa8538ea4d1600f0a919/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "470145e722602c492436baa4b77098121569eeb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/470145e722602c492436baa4b77098121569eeb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/470145e722602c492436baa4b77098121569eeb5"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "9b190b48694b48458370a562b6c280da15e2e0de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16fb82dac5eea61c804fa8538ea4d1600f0a919/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16fb82dac5eea61c804fa8538ea4d1600f0a919/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b16fb82dac5eea61c804fa8538ea4d1600f0a919", "patch": "@@ -1,3 +1,8 @@\n+2006-06-21  Richrad Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-niter.c (simplify_using_initial_conditions):\n+\tLimit iteration over the dominators.\n+\n 2006-06-20  Roger Sayle  <roger@eyesopen.com>\n \n \t* config/mips/iris6.h (LIB_SPEC): Add support for -pthread."}, {"sha": "9428dd6a3aabffc18367f2bc4dcf079afc4674f0", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16fb82dac5eea61c804fa8538ea4d1600f0a919/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16fb82dac5eea61c804fa8538ea4d1600f0a919/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=b16fb82dac5eea61c804fa8538ea4d1600f0a919", "patch": "@@ -886,7 +886,12 @@ tree_simplify_using_condition (tree cond, tree expr)\n \n   return tree_simplify_using_condition_1 (cond, expr);\n }\n-     \n+\n+/* The maximum number of dominator BBs we search for conditions\n+   of loop header copies we use for simplifying a conditional\n+   expression.  */\n+#define MAX_DOMINATORS_TO_WALK 8\n+\n /* Tries to simplify EXPR using the conditions on entry to LOOP.\n    Record the conditions used for simplification to CONDS_USED.\n    Returns the simplified expression (or EXPR unchanged, if no\n@@ -899,12 +904,16 @@ simplify_using_initial_conditions (struct loop *loop, tree expr,\n   edge e;\n   basic_block bb;\n   tree exp, cond;\n+  int cnt = 0;\n \n   if (TREE_CODE (expr) == INTEGER_CST)\n     return expr;\n \n+  /* Limit walking the dominators to avoid quadraticness in\n+     the number of BBs times the number of loops in degenerate\n+     cases.  */\n   for (bb = loop->header;\n-       bb != ENTRY_BLOCK_PTR;\n+       bb != ENTRY_BLOCK_PTR && cnt < MAX_DOMINATORS_TO_WALK;\n        bb = get_immediate_dominator (CDI_DOMINATORS, bb))\n     {\n       if (!single_pred_p (bb))\n@@ -926,6 +935,7 @@ simplify_using_initial_conditions (struct loop *loop, tree expr,\n \t\t\t\t   cond);\n \n       expr = exp;\n+      ++cnt;\n     }\n \n   return expr;"}]}