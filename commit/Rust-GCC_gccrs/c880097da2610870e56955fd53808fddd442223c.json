{"sha": "c880097da2610870e56955fd53808fddd442223c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg4MDA5N2RhMjYxMDg3MGU1Njk1NWZkNTM4MDhmZGRkNDQyMjIzYw==", "commit": {"author": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-12-14T16:49:47Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-12-14T16:49:47Z"}, "message": "re PR tree-optimization/42284 (failing tree check in  graphite-sese-to-poly.c for 164.gzip)\n\nFix PR42284.\n\n2009-12-12  Sebastian Pop  <sebpop@gmail.com>\n\n\tPR middle-end/42284\n\t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Call\n\tinsert_out_of_ssa_copy_on_edge for anything else than SSA_NAMEs.\n\t(detect_commutative_reduction_arg): Simplified.\n\t(detect_commutative_reduction): Early return when the argument of\n\tthe close phi is not of an SSA_NAME.\n\n\t* testsuite/gcc.dg/graphite/pr42284.c: New.\n\nFrom-SVN: r155218", "tree": {"sha": "e935081b3cab99f08a242643172e2734e2bc61c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e935081b3cab99f08a242643172e2734e2bc61c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c880097da2610870e56955fd53808fddd442223c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c880097da2610870e56955fd53808fddd442223c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c880097da2610870e56955fd53808fddd442223c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c880097da2610870e56955fd53808fddd442223c/comments", "author": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "519517fd497032bb67c1231a31c6422c3b17b928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/519517fd497032bb67c1231a31c6422c3b17b928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/519517fd497032bb67c1231a31c6422c3b17b928"}], "stats": {"total": 51, "additions": 38, "deletions": 13}, "files": [{"sha": "9974d1934af950b879e9ef135b5ffc1b2be94dac", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c880097da2610870e56955fd53808fddd442223c/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c880097da2610870e56955fd53808fddd442223c/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=c880097da2610870e56955fd53808fddd442223c", "patch": "@@ -1,3 +1,20 @@\n+2009-12-12  Sebastian Pop  <sebpop@gmail.com>\n+\n+\tPR middle-end/42284\n+\t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Call\n+\tinsert_out_of_ssa_copy_on_edge for anything else than SSA_NAMEs.\n+\t(detect_commutative_reduction_arg): Simplified.\n+\t(detect_commutative_reduction): Early return when the argument of\n+\tthe close phi is not of an SSA_NAME.\n+\n+\t* testsuite/gcc.dg/graphite/pr42284.c: New.\n+\n+2009-12-11  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* dbgcnt.def (graphite_scop): New counter.\n+\t* graphite.c: Include dbgcnt.h\n+\t(graphite_transform_loops): Use new counter to limit transformations.\n+\n 2009-12-08  Sebastian Pop  <sebpop@gmail.com>\n \n \tPR middle-end/42285"}, {"sha": "1eb0696705968b97a7199a87c59d0e3e045f4466", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c880097da2610870e56955fd53808fddd442223c/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c880097da2610870e56955fd53808fddd442223c/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=c880097da2610870e56955fd53808fddd442223c", "patch": "@@ -2186,7 +2186,11 @@ rewrite_close_phi_out_of_ssa (gimple_stmt_iterator *psi)\n   gimple stmt = gimple_build_assign (res, zero_dim_array);\n   tree arg = gimple_phi_arg_def (phi, 0);\n \n-  insert_out_of_ssa_copy (zero_dim_array, arg);\n+  if (TREE_CODE (arg) == SSA_NAME)\n+    insert_out_of_ssa_copy (zero_dim_array, arg);\n+  else\n+    insert_out_of_ssa_copy_on_edge (single_pred_edge (gimple_bb (phi)),\n+\t\t\t\t    zero_dim_array, arg);\n \n   remove_phi_node (psi, false);\n   gsi_insert_before (&gsi, stmt, GSI_NEW_STMT);\n@@ -2511,7 +2515,7 @@ follow_ssa_with_commutative_ops (tree arg, tree lhs)\n }\n \n /* Detect commutative and associative scalar reductions starting at\n-   the STMT.  */\n+   the STMT.  Return the phi node of the reduction cycle, or NULL.  */\n \n static gimple\n detect_commutative_reduction_arg (tree lhs, gimple stmt, tree arg,\n@@ -2520,18 +2524,16 @@ detect_commutative_reduction_arg (tree lhs, gimple stmt, tree arg,\n {\n   gimple phi = follow_ssa_with_commutative_ops (arg, lhs);\n \n-  if (phi)\n-    {\n-      VEC_safe_push (gimple, heap, *in, stmt);\n-      VEC_safe_push (gimple, heap, *out, stmt);\n-      return phi;\n-    }\n+  if (!phi)\n+    return NULL;\n \n-  return NULL;\n+  VEC_safe_push (gimple, heap, *in, stmt);\n+  VEC_safe_push (gimple, heap, *out, stmt);\n+  return phi;\n }\n \n /* Detect commutative and associative scalar reductions starting at\n-   the STMT.  */\n+   the STMT.  Return the phi node of the reduction cycle, or NULL.  */\n \n static gimple\n detect_commutative_reduction_assign (gimple stmt, VEC (gimple, heap) **in,\n@@ -2619,7 +2621,8 @@ initial_value_for_loop_phi (gimple phi)\n }\n \n /* Detect commutative and associative scalar reductions starting at\n-   the loop closed phi node CLOSE_PHI.  */\n+   the loop closed phi node CLOSE_PHI.  Return the phi node of the\n+   reduction cycle, or NULL.  */\n \n static gimple\n detect_commutative_reduction (gimple stmt, VEC (gimple, heap) **in,\n@@ -2628,8 +2631,13 @@ detect_commutative_reduction (gimple stmt, VEC (gimple, heap) **in,\n   if (scalar_close_phi_node_p (stmt))\n     {\n       tree arg = gimple_phi_arg_def (stmt, 0);\n-      gimple def = SSA_NAME_DEF_STMT (arg);\n-      gimple loop_phi = detect_commutative_reduction (def, in, out);\n+      gimple def, loop_phi;\n+\n+      if (TREE_CODE (arg) != SSA_NAME)\n+\treturn NULL;\n+\n+      def = SSA_NAME_DEF_STMT (arg);\n+      loop_phi = detect_commutative_reduction (def, in, out);\n \n       if (loop_phi)\n \t{"}]}