{"sha": "d3da4d1439ccf9d2c7f51931c393c0fc1642039e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNkYTRkMTQzOWNjZjlkMmM3ZjUxOTMxYzM5M2MwZmMxNjQyMDM5ZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-03T23:15:15Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-03T23:15:15Z"}, "message": "tm.texi (TARGET_BUILD_BUILTIN_VA_LIST): New.\n\n        * doc/tm.texi (TARGET_BUILD_BUILTIN_VA_LIST): New.\n        (TARGET_CANNOT_FORCE_CONST_MEM): New.\n\nFrom-SVN: r91703", "tree": {"sha": "4d9f30bf3bcfad894f574e89924bacdc9c04ed10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d9f30bf3bcfad894f574e89924bacdc9c04ed10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3da4d1439ccf9d2c7f51931c393c0fc1642039e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3da4d1439ccf9d2c7f51931c393c0fc1642039e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3da4d1439ccf9d2c7f51931c393c0fc1642039e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3da4d1439ccf9d2c7f51931c393c0fc1642039e/comments", "author": null, "committer": null, "parents": [{"sha": "668707f70d3c709af4266606a59866cc23a00077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668707f70d3c709af4266606a59866cc23a00077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/668707f70d3c709af4266606a59866cc23a00077"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "36f9530bb741102f933c5907b02b360c125f3976", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3da4d1439ccf9d2c7f51931c393c0fc1642039e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3da4d1439ccf9d2c7f51931c393c0fc1642039e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3da4d1439ccf9d2c7f51931c393c0fc1642039e", "patch": "@@ -1,3 +1,8 @@\n+2004-12-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* doc/tm.texi (TARGET_BUILD_BUILTIN_VA_LIST): New.\n+\t(TARGET_CANNOT_FORCE_CONST_MEM): New.\n+\n 2004-12-04  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR middle end/18718"}, {"sha": "46a9adff1a1e1413dc991c128745879d85f250f9", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3da4d1439ccf9d2c7f51931c393c0fc1642039e/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3da4d1439ccf9d2c7f51931c393c0fc1642039e/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=d3da4d1439ccf9d2c7f51931c393c0fc1642039e", "patch": "@@ -3925,6 +3925,11 @@ The default value of this hook is @code{NULL}, which is treated as always\n false.\n @end deftypefn\n \n+@deftypefn {Target Hook} tree TARGET_BUILD_BUILTIN_VA_LIST (void)\n+This hook returns a type node for @code{va_list} for the target.\n+The default version of the hook returns @code{void*}.\n+@end deftypefn\n+\n @deftypefn {Target Hook} tree TARGET_GIMPLIFY_VA_ARG_EXPR (tree @var{valist}, tree @var{type}, tree *@var{pre_p}, tree *@var{post_p})\n This hook performs target-specific gimplification of\n @code{VA_ARG_EXPR}.  The first two parameters correspond to the\n@@ -5151,6 +5156,18 @@ an immediate operand on the target machine.  You can assume that\n anything @code{CONSTANT_P} is valid.\n @end defmac\n \n+@deftypefn {Target Hook} bool TARGET_CANNOT_FORCE_CONST_MEM (rtx @var{x})\n+This hook should return true if @var{x} is of a form that cannot (or\n+should not) be spilled to the constant pool.  The default version of\n+this hook returns false.\n+\n+The primary reason to define this hook is to prevent reload from\n+deciding that a non-legitimate constant would be better reloaded\n+from the constant pool instead of spilling and reloading a register\n+holding the constant.  This restriction is often true of addresses\n+of TLS symbols for various targets.\n+@end deftypefn\n+\n @node Condition Code\n @section Condition Code Status\n @cindex condition code status"}]}