{"sha": "0e02d8e3759562d76f6299916b36b35a230e1148", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUwMmQ4ZTM3NTk1NjJkNzZmNjI5OTkxNmIzNmIzNWEyMzBlMTE0OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-10-06T21:41:19Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-10-06T21:41:19Z"}, "message": "re PR c++/58126 (No diagnostic when inheriting an uninitialized const or reference member)\n\n/cp\n2013-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58126\n\t* class.c (check_bases): Propagate CLASSTYPE_READONLY_FIELDS_NEED_INIT\n\tand CLASSTYPE_REF_FIELDS_NEED_INIT from bases to derived.\n\t* init.c (diagnose_uninitialized_cst_or_ref_member_1): Extend error\n\tmessages about uninitialized const and references members to mention\n\tthe base class.\n\n/testsuite\n2013-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58126\n\t* g++.dg/init/uninitialized1.C: New.\n\nFrom-SVN: r203232", "tree": {"sha": "4963ba028981963fff09851c5561e64cc473b0b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4963ba028981963fff09851c5561e64cc473b0b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e02d8e3759562d76f6299916b36b35a230e1148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e02d8e3759562d76f6299916b36b35a230e1148", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e02d8e3759562d76f6299916b36b35a230e1148", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e02d8e3759562d76f6299916b36b35a230e1148/comments", "author": null, "committer": null, "parents": [{"sha": "6cb4308702d0333775a1da15f43bcfd949115aeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb4308702d0333775a1da15f43bcfd949115aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb4308702d0333775a1da15f43bcfd949115aeb"}], "stats": {"total": 74, "additions": 66, "deletions": 8}, "files": [{"sha": "fc2ec31c551f26a5d07dc213943eb4e0a6fc342d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e02d8e3759562d76f6299916b36b35a230e1148/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e02d8e3759562d76f6299916b36b35a230e1148/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0e02d8e3759562d76f6299916b36b35a230e1148", "patch": "@@ -1,3 +1,12 @@\n+2013-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58126\n+\t* class.c (check_bases): Propagate CLASSTYPE_READONLY_FIELDS_NEED_INIT\n+\tand CLASSTYPE_REF_FIELDS_NEED_INIT from bases to derived.\n+\t* init.c (diagnose_uninitialized_cst_or_ref_member_1): Extend error\n+\tmessages about uninitialized const and references members to mention\n+\tthe base class.\n+\n 2013-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/56060"}, {"sha": "c587e55ac6815e178c34ce2bdd53ee005f1f5384", "filename": "gcc/cp/class.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e02d8e3759562d76f6299916b36b35a230e1148/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e02d8e3759562d76f6299916b36b35a230e1148/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=0e02d8e3759562d76f6299916b36b35a230e1148", "patch": "@@ -1517,6 +1517,12 @@ check_bases (tree t,\n \t|= CLASSTYPE_CONTAINS_EMPTY_CLASS_P (basetype);\n       TYPE_HAS_COMPLEX_DFLT (t) |= (!TYPE_HAS_DEFAULT_CONSTRUCTOR (basetype)\n \t\t\t\t    || TYPE_HAS_COMPLEX_DFLT (basetype));\n+      SET_CLASSTYPE_READONLY_FIELDS_NEED_INIT\n+\t(t, CLASSTYPE_READONLY_FIELDS_NEED_INIT (t)\n+\t | CLASSTYPE_READONLY_FIELDS_NEED_INIT (basetype));\n+      SET_CLASSTYPE_REF_FIELDS_NEED_INIT\n+\t(t, CLASSTYPE_REF_FIELDS_NEED_INIT (t)\n+\t | CLASSTYPE_REF_FIELDS_NEED_INIT (basetype));\n \n       /*  A standard-layout class is a class that:\n \t  ..."}, {"sha": "d18dc5e8deb900c87cdcfe053c43ec90d709cf30", "filename": "gcc/cp/init.c", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e02d8e3759562d76f6299916b36b35a230e1148/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e02d8e3759562d76f6299916b36b35a230e1148/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=0e02d8e3759562d76f6299916b36b35a230e1148", "patch": "@@ -2120,11 +2120,24 @@ diagnose_uninitialized_cst_or_ref_member_1 (tree type, tree origin,\n \t  ++ error_count;\n \t  if (complain)\n \t    {\n-\t      if (using_new)\n-\t\terror (\"uninitialized reference member in %q#T \"\n-\t\t       \"using %<new%> without new-initializer\", origin);\n+\t      if (DECL_CONTEXT (field) == origin)\n+\t\t{\n+\t\t  if (using_new)\n+\t\t    error (\"uninitialized reference member in %q#T \"\n+\t\t\t   \"using %<new%> without new-initializer\", origin);\n+\t\t  else\n+\t\t    error (\"uninitialized reference member in %q#T\", origin);\n+\t\t}\n \t      else\n-\t\terror (\"uninitialized reference member in %q#T\", origin);\n+\t\t{\n+\t\t  if (using_new)\n+\t\t    error (\"uninitialized reference member in base %q#T \"\n+\t\t\t   \"of %q#T using %<new%> without new-initializer\",\n+\t\t\t   DECL_CONTEXT (field), origin);\n+\t\t  else\n+\t\t    error (\"uninitialized reference member in base %q#T \"\n+\t\t\t   \"of %q#T\", DECL_CONTEXT (field), origin);\n+\t\t}\n \t      inform (DECL_SOURCE_LOCATION (field),\n \t\t      \"%qD should be initialized\", field);\n \t    }\n@@ -2135,11 +2148,24 @@ diagnose_uninitialized_cst_or_ref_member_1 (tree type, tree origin,\n \t  ++ error_count;\n \t  if (complain)\n \t    {\n-\t      if (using_new)\n-\t\terror (\"uninitialized const member in %q#T \"\n-\t\t       \"using %<new%> without new-initializer\", origin);\n+\t      if (DECL_CONTEXT (field) == origin)\n+\t\t{\n+\t\t  if (using_new)\n+\t\t    error (\"uninitialized const member in %q#T \"\n+\t\t\t   \"using %<new%> without new-initializer\", origin);\n+\t\t  else\n+\t\t    error (\"uninitialized const member in %q#T\", origin);\n+\t\t}\n \t      else\n-\t\terror (\"uninitialized const member in %q#T\", origin);\n+\t\t{\n+\t\t  if (using_new)\n+\t\t    error (\"uninitialized const member in base %q#T \"\n+\t\t\t   \"of %q#T using %<new%> without new-initializer\",\n+\t\t\t   DECL_CONTEXT (field), origin);\n+\t\t  else\n+\t\t    error (\"uninitialized const member in base %q#T \"\n+\t\t\t   \"of %q#T\", DECL_CONTEXT (field), origin);\n+\t\t}\n \t      inform (DECL_SOURCE_LOCATION (field),\n \t\t      \"%qD should be initialized\", field);\n \t    }"}, {"sha": "016545a54bd98acf352d74050532e1164a87d572", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e02d8e3759562d76f6299916b36b35a230e1148/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e02d8e3759562d76f6299916b36b35a230e1148/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0e02d8e3759562d76f6299916b36b35a230e1148", "patch": "@@ -1,3 +1,8 @@\n+2013-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58126\n+\t* g++.dg/init/uninitialized1.C: New.\n+\n 2013-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/56060"}, {"sha": "200c424305d682614f234a554561d7d3ce6ad2d3", "filename": "gcc/testsuite/g++.dg/init/uninitialized1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e02d8e3759562d76f6299916b36b35a230e1148/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Funinitialized1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e02d8e3759562d76f6299916b36b35a230e1148/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Funinitialized1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Funinitialized1.C?ref=0e02d8e3759562d76f6299916b36b35a230e1148", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/58126\n+\n+struct A {\n+  const int value1;\n+  int& value2;\n+};\n+\n+struct B : A { };\n+\n+A a;  // { dg-error \"uninitialized const member in 'struct A'|uninitialized reference member in 'struct A'\" }\n+\n+B b;  // { dg-error \"uninitialized const member in base 'struct A' of 'struct B'|uninitialized reference member in base 'struct A' of 'struct B'\" }"}]}