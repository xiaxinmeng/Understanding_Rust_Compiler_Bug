{"sha": "098eae0067631ae7a8d98ac19ff47cb89ec2ba25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk4ZWFlMDA2NzYzMWFlN2E4ZDk4YWMxOWZmNDdjYjg5ZWMyYmEyNQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-12-07T13:00:02Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-12-07T13:00:02Z"}, "message": "pt.c (tsubst <{NON,}TYPE_ARGUMENT_PACK>): Simplify control flow and avoid re-tsubsting type.\n\n\t* pt.c (tsubst <{NON,}TYPE_ARGUMENT_PACK>: Simplify control flow\n\tand avoid re-tsubsting type.\n\nFrom-SVN: r243343", "tree": {"sha": "4e47e0b0c4fe75f926969153c4c811cc8f77496a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e47e0b0c4fe75f926969153c4c811cc8f77496a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/098eae0067631ae7a8d98ac19ff47cb89ec2ba25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/098eae0067631ae7a8d98ac19ff47cb89ec2ba25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/098eae0067631ae7a8d98ac19ff47cb89ec2ba25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/098eae0067631ae7a8d98ac19ff47cb89ec2ba25/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3235e974fee0ce362afafed93a8e5916ae790e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3235e974fee0ce362afafed93a8e5916ae790e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3235e974fee0ce362afafed93a8e5916ae790e1"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "c666f1689652fe5a2553330639cff7cb36800b44", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/098eae0067631ae7a8d98ac19ff47cb89ec2ba25/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/098eae0067631ae7a8d98ac19ff47cb89ec2ba25/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=098eae0067631ae7a8d98ac19ff47cb89ec2ba25", "patch": "@@ -1,5 +1,8 @@\n 2016-12-07  Nathan Sidwell  <nathan@acm.org>\n \n+\t* pt.c (tsubst <{NON,}TYPE_ARGUMENT_PACK>: Simplify control flow\n+\tand avoid re-tsubsting type.\n+\n \t* cp-tree.h (enum cp_tree_index): Add CPTI_AUTO_IDENTIFIER &\n \tCPTI_DECLTYPE_AUTO_IDENTIFIER.\n \t(auto_identifier, decltype_auto_identifier): New."}, {"sha": "97d0b4840fcb12d827ad1e686e4e5f90560b446b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/098eae0067631ae7a8d98ac19ff47cb89ec2ba25/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/098eae0067631ae7a8d98ac19ff47cb89ec2ba25/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=098eae0067631ae7a8d98ac19ff47cb89ec2ba25", "patch": "@@ -13795,22 +13795,23 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n     case TYPE_ARGUMENT_PACK:\n     case NONTYPE_ARGUMENT_PACK:\n       {\n-        tree r = TYPE_P (t) ? cxx_make_type (code) : make_node (code);\n-        tree packed_out = \n-          tsubst_template_args (ARGUMENT_PACK_ARGS (t), \n-                                args,\n-                                complain,\n-                                in_decl);\n-        SET_ARGUMENT_PACK_ARGS (r, packed_out);\n-\n-        /* For template nontype argument packs, also substitute into\n-           the type.  */\n-        if (code == NONTYPE_ARGUMENT_PACK)\n-          TREE_TYPE (r) = tsubst (TREE_TYPE (t), args, complain, in_decl);\n-\n-        return r;\n+        tree r;\n+\n+\tif (code == NONTYPE_ARGUMENT_PACK)\n+\t  {\n+\t    r = make_node (code);\n+\t    /* Set the already-substituted type.  */\n+\t    TREE_TYPE (r) = type;\n+\t  }\n+\telse\n+\t  r = cxx_make_type (code);\n+\n+\ttree pack_args = ARGUMENT_PACK_ARGS (t);\n+\tpack_args = tsubst_template_args (pack_args, args, complain, in_decl);\n+\tSET_ARGUMENT_PACK_ARGS (r, pack_args);\n+\n+\treturn r;\n       }\n-      break;\n \n     case VOID_CST:\n     case INTEGER_CST:"}]}