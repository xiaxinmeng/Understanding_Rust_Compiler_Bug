{"sha": "db6556348d92709dfaa930251b5aa0fd5cb740c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI2NTU2MzQ4ZDkyNzA5ZGZhYTkzMDI1MWI1YWEwZmQ1Y2I3NDBjMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-10-11T20:26:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-10-11T20:26:50Z"}, "message": "re PR c/7344 (performance regression on huge case statements)\n\n\t* calls.c (expand_call): Simplify noreturn call.\n\n\tPR c/7344\n\t* cfgbuild.c (make_edges): Create edge cache when we do have\n\tlarge jumptable.\n\t(do_tablejump): Note size of maximal jumptable.\n\t* function.c (prepare_function_start): Zero out size.\n\t* function.h (function): Add max_jumptable_ents.\n\n\t* cfgcleanup.c (insn_match_p): Verify sibcall flag for calls to.\n\nFrom-SVN: r58063", "tree": {"sha": "fbcbac53dc98b47f9f2b0b115a5d2f2bb473c34d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbcbac53dc98b47f9f2b0b115a5d2f2bb473c34d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db6556348d92709dfaa930251b5aa0fd5cb740c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db6556348d92709dfaa930251b5aa0fd5cb740c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db6556348d92709dfaa930251b5aa0fd5cb740c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db6556348d92709dfaa930251b5aa0fd5cb740c3/comments", "author": null, "committer": null, "parents": [{"sha": "ca91148bcd4fd17dea7dbd0407e491e0cfd5ee3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca91148bcd4fd17dea7dbd0407e491e0cfd5ee3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca91148bcd4fd17dea7dbd0407e491e0cfd5ee3d"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "6a8f85a7012517508bf9323c48a668e5388e4114", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db6556348d92709dfaa930251b5aa0fd5cb740c3", "patch": "@@ -1,3 +1,16 @@\n+Fri Oct 11 22:22:38 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* calls.c (expand_call): Simplify noreturn call.\n+\n+\tPR c/7344\n+\t* cfgbuild.c (make_edges): Create edge cache when we do have\n+\tlarge jumptable.\n+\t(do_tablejump): Note size of maximal jumptable.\n+\t* function.c (prepare_function_start): Zero out size.\n+\t* function.h (function): Add max_jumptable_ents.\n+\n+\t* cfgcleanup.c (insn_match_p): Verify sibcall flag for calls to.\n+\n Fri Oct 11 12:34:33 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.md (movv8qi_i+2): For V8QI destinations, generate V4HI"}, {"sha": "903ddc17fe9bb215d2110e58c6fba68073f81918", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=db6556348d92709dfaa930251b5aa0fd5cb740c3", "patch": "@@ -2459,8 +2459,7 @@ expand_call (exp, target, ignore)\n \t reload insns generated to fix things up would appear\n \t before the sibcall_epilogue.  */\n       || fndecl == NULL_TREE\n-      || (flags & (ECF_RETURNS_TWICE | ECF_LONGJMP))\n-      || TREE_THIS_VOLATILE (fndecl)\n+      || (flags & (ECF_RETURNS_TWICE | ECF_LONGJMP | ECF_NORETURN))\n       || !FUNCTION_OK_FOR_SIBCALL (fndecl)\n       /* If this function requires more stack slots than the current\n \t function, we cannot change it into a sibling call.  */"}, {"sha": "9ac758b28095dd3074eb68f6804c7a75e372344d", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=db6556348d92709dfaa930251b5aa0fd5cb740c3", "patch": "@@ -292,7 +292,7 @@ make_edges (label_value_list, min, max, update_p)\n   /* Heavy use of computed goto in machine-generated code can lead to\n      nearly fully-connected CFGs.  In that case we spend a significant\n      amount of time searching the edge lists for duplicates.  */\n-  if (forced_labels || label_value_list)\n+  if (forced_labels || label_value_list || cfun->max_jumptable_ents > 100)\n     {\n       edge_cache = sbitmap_vector_alloc (last_basic_block, last_basic_block);\n       sbitmap_vector_zero (edge_cache, last_basic_block);"}, {"sha": "594eb5cebd7ed4a2922ad9c54294887ed44c0b64", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=db6556348d92709dfaa930251b5aa0fd5cb740c3", "patch": "@@ -911,8 +911,9 @@ insns_match_p (mode, i1, i2)\n      equal, they were constructed identically.  */\n \n   if (GET_CODE (i1) == CALL_INSN\n-      && !rtx_equal_p (CALL_INSN_FUNCTION_USAGE (i1),\n-\t\t       CALL_INSN_FUNCTION_USAGE (i2)))\n+      && (!rtx_equal_p (CALL_INSN_FUNCTION_USAGE (i1),\n+\t\t        CALL_INSN_FUNCTION_USAGE (i2))\n+\t  || SIBLING_CALL_P (i1) != SIBLING_CALL_P (i2)))\n     return false;\n \n #ifdef STACK_REGS"}, {"sha": "479ecef4141a931b905b3a372b82813090b4cfb6", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=db6556348d92709dfaa930251b5aa0fd5cb740c3", "patch": "@@ -6295,6 +6295,8 @@ prepare_function_start ()\n \n   cfun->function_frequency = FUNCTION_FREQUENCY_NORMAL;\n \n+  cfun->max_jumptable_ents = 0;\n+\n   (*lang_hooks.function.init) (cfun);\n   if (init_machine_status)\n     cfun->machine = (*init_machine_status) ();"}, {"sha": "89319ebf2e355980858515f1b00b63b9d64e031f", "filename": "gcc/function.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db6556348d92709dfaa930251b5aa0fd5cb740c3/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=db6556348d92709dfaa930251b5aa0fd5cb740c3", "patch": "@@ -500,6 +500,10 @@ struct function GTY(())\n        (set only when profile feedback is available).  */\n     FUNCTION_FREQUENCY_HOT\n   } function_frequency;\n+\n+  /* Maximal number of entities in the single jumptable.  Used to estimate\n+     final flowgraph size.  */\n+  int max_jumptable_ents;\n };\n \n /* The function currently being compiled.  */"}]}