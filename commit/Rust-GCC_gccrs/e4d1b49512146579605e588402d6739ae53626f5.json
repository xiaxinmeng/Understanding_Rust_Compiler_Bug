{"sha": "e4d1b49512146579605e588402d6739ae53626f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRkMWI0OTUxMjE0NjU3OTYwNWU1ODg0MDJkNjczOWFlNTM2MjZmNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-10-27T18:43:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-10-27T18:43:14Z"}, "message": "i386.c (ix86_loop_memcount): Delete.\n\ngcc/\n\t* config/i386/i386.c (ix86_loop_memcount): Delete.\n\t(ix86_loop_unroll_adjust): Use FOR_EACH_SUBRTX.\n\nFrom-SVN: r216761", "tree": {"sha": "f1aaa4a3fc22a49eb84cb098bc7fae02329ba777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1aaa4a3fc22a49eb84cb098bc7fae02329ba777"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4d1b49512146579605e588402d6739ae53626f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d1b49512146579605e588402d6739ae53626f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4d1b49512146579605e588402d6739ae53626f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d1b49512146579605e588402d6739ae53626f5/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8dc252595b9cd211faca8929ab2149751a8bdfdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc252595b9cd211faca8929ab2149751a8bdfdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc252595b9cd211faca8929ab2149751a8bdfdc"}], "stats": {"total": 52, "additions": 22, "deletions": 30}, "files": [{"sha": "2c7550a87fd8208115677e82c49fd0a69e995b59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d1b49512146579605e588402d6739ae53626f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d1b49512146579605e588402d6739ae53626f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4d1b49512146579605e588402d6739ae53626f5", "patch": "@@ -1,3 +1,8 @@\n+2014-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/i386/i386.c (ix86_loop_memcount): Delete.\n+\t(ix86_loop_unroll_adjust): Use FOR_EACH_SUBRTX.\n+\n 2014-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/i386/i386.c (find_constant_1): Delete."}, {"sha": "6ffafa9d86610a8c41276805644a7c1334f2e44e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 30, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d1b49512146579605e588402d6739ae53626f5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d1b49512146579605e588402d6739ae53626f5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e4d1b49512146579605e588402d6739ae53626f5", "patch": "@@ -47412,29 +47412,6 @@ ix86_simd_clone_usable (struct cgraph_node *node)\n     }\n }\n \n-/* This function gives out the number of memory references.\n-   This value determines the unrolling factor for\n-   bdver3 and bdver4 architectures. */\n-\n-static int\n-ix86_loop_memcount (rtx *x, unsigned *mem_count)\n-{\n-  if (*x != NULL_RTX && MEM_P (*x))\n-   {\n-     enum machine_mode mode;\n-     unsigned int n_words;\n-\n-     mode = GET_MODE (*x);\n-     n_words = GET_MODE_SIZE (mode) / UNITS_PER_WORD;\n-\n-    if (n_words > 4)\n-       (*mem_count)+=2;\n-    else\n-       (*mem_count)+=1;\n-   }\n-  return 0;\n-}\n-\n /* This function adjusts the unroll factor based on\n    the hardware capabilities. For ex, bdver3 has\n    a loop buffer which makes unrolling of smaller\n@@ -47453,15 +47430,25 @@ ix86_loop_unroll_adjust (unsigned nunroll, struct loop *loop)\n   if (!TARGET_ADJUST_UNROLL)\n      return nunroll;\n \n-  /* Count the number of memory references within the loop body.  */\n+  /* Count the number of memory references within the loop body.\n+     This value determines the unrolling factor for bdver3 and bdver4\n+     architectures. */\n+  subrtx_iterator::array_type array;\n   bbs = get_loop_body (loop);\n   for (i = 0; i < loop->num_nodes; i++)\n-    {\n-      for (insn = BB_HEAD (bbs[i]); insn != BB_END (bbs[i]); insn = NEXT_INSN (insn))\n-        if (NONDEBUG_INSN_P (insn))\n-            for_each_rtx_in_insn (&insn, (rtx_function) ix86_loop_memcount,\n-\t\t\t\t  &mem_count);\n-    }\n+    FOR_BB_INSNS (bbs[i], insn)\n+      if (NONDEBUG_INSN_P (insn))\n+\tFOR_EACH_SUBRTX (iter, array, insn, NONCONST)\n+\t  if (const_rtx x = *iter)\n+\t    if (MEM_P (x))\n+\t      {\n+\t\tenum machine_mode mode = GET_MODE (x);\n+\t\tunsigned int n_words = GET_MODE_SIZE (mode) / UNITS_PER_WORD;\n+\t\tif (n_words > 4)\n+\t\t  mem_count += 2;\n+\t\telse\n+\t\t  mem_count += 1;\n+\t      }\n   free (bbs);\n \n   if (mem_count && mem_count <=32)"}]}