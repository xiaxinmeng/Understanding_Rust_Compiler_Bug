{"sha": "08b2ba302b753810b42419f77415a77e16262901", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhiMmJhMzAyYjc1MzgxMGI0MjQxOWY3NzQxNWE3N2UxNjI2MjkwMQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-12-30T15:47:43Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-12-30T15:47:43Z"}, "message": "re PR target/44606 (Wrong SPE floating point during computation)\n\ngcc/\n        PR target/44606\n        * reload1.c (choose_reload_regs): Don't look for equivalences for\n        output reloads of constant loads.\n\ngcc/testsuite/\n        PR target/44606\n        * gcc.dg/pr44606.c: New test.\n\nFrom-SVN: r168347", "tree": {"sha": "1f6201ad3996b3c23e7df3db877c16fca1600bd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f6201ad3996b3c23e7df3db877c16fca1600bd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08b2ba302b753810b42419f77415a77e16262901", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b2ba302b753810b42419f77415a77e16262901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08b2ba302b753810b42419f77415a77e16262901", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b2ba302b753810b42419f77415a77e16262901/comments", "author": null, "committer": null, "parents": [{"sha": "829f3c640f8e5375345115a1871a0e54e7fe2170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829f3c640f8e5375345115a1871a0e54e7fe2170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/829f3c640f8e5375345115a1871a0e54e7fe2170"}], "stats": {"total": 74, "additions": 63, "deletions": 11}, "files": [{"sha": "fbe61e348a4ae861b39cee36380a066a83b5fe11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b2ba302b753810b42419f77415a77e16262901/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b2ba302b753810b42419f77415a77e16262901/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08b2ba302b753810b42419f77415a77e16262901", "patch": "@@ -1,3 +1,9 @@\n+2010-12-30  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+        PR target/44606\n+        * reload1.c (choose_reload_regs): Don't look for equivalences for\n+        output reloads of constant loads.\n+\n 2010-12-30  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* emit-rtl.c (set_mem_attributes_minus_bitpos): Explicitly derive"}, {"sha": "2f02ae381582d7403e8d9a8c614f440decf42ec3", "filename": "gcc/reload1.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b2ba302b753810b42419f77415a77e16262901/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b2ba302b753810b42419f77415a77e16262901/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=08b2ba302b753810b42419f77415a77e16262901", "patch": "@@ -6600,17 +6600,6 @@ choose_reload_regs (struct insn_chain *chain)\n \t      && (rld[r].nregs == max_group_size\n \t\t  || ! reg_classes_intersect_p (rld[r].rclass, group_class)))\n \t    search_equiv = rld[r].in;\n-\t  /* If this is an output reload from a simple move insn, look\n-\t     if an equivalence for the input is available.  */\n-\t  else if (inheritance && rld[r].in == 0 && rld[r].out != 0)\n-\t    {\n-\t      rtx set = single_set (insn);\n-\n-\t      if (set\n-\t\t  && rtx_equal_p (rld[r].out, SET_DEST (set))\n-\t\t  && CONSTANT_P (SET_SRC (set)))\n-\t\tsearch_equiv = SET_SRC (set);\n-\t    }\n \n \t  if (search_equiv)\n \t    {"}, {"sha": "25c2b8ebc370d4e0b2c27f87063f73e886e2eeae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b2ba302b753810b42419f77415a77e16262901/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b2ba302b753810b42419f77415a77e16262901/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08b2ba302b753810b42419f77415a77e16262901", "patch": "@@ -1,3 +1,8 @@\n+2010-12-30  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+        PR target/44606\n+        * gcc.dg/pr44606.c: New test.\n+\n 2010-12-30  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/46519"}, {"sha": "3929775535e0dbbe4fa1284ba8f30523ec134f00", "filename": "gcc/testsuite/gcc.dg/pr44606.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b2ba302b753810b42419f77415a77e16262901/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44606.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b2ba302b753810b42419f77415a77e16262901/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44606.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44606.c?ref=08b2ba302b753810b42419f77415a77e16262901", "patch": "@@ -0,0 +1,52 @@\n+/* PR target/44606 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <stdio.h>\n+\n+extern void abort (void);\n+\n+ typedef struct _PixelPacket { \tunsigned char r, g, b; }\n+ PixelPacket;\n+#define ARRAYLEN(X) (sizeof(X)/sizeof(X[0]))\n+PixelPacket q[6];\n+#define COLS (ARRAYLEN(q) - 1)\n+PixelPacket p[2*COLS + 22];\n+#define Minify(POS, WEIGHT) do {\t\\\n+\ttotal_r += (WEIGHT)*(p[POS].r);\t\\\n+\ttotal_g += (WEIGHT)*(p[POS].g);\t\\\n+\ttotal_b += (WEIGHT)*(p[POS].b);\t\\\n+} while (0)\n+unsigned long columns = COLS;\n+int main(void)\n+{\n+\tstatic const unsigned char answers[COLS] = { 31, 32, 34, 35, 36 };\n+\tunsigned long x;\n+\tfor (x = 0; x < sizeof(p)/sizeof(p[0]); x++) {\n+\t\tp[x].b = (x + 34) | 1;\n+\t}\n+\tfor (x = 0; x < columns; x++) {\n+\t\tdouble total_r = 0, total_g = 0, total_b = 0;\n+\t\tdouble saved_r = 0, saved_g = 0, saved_b = 0;\n+\t\tMinify(2*x +  0,  3.0);\n+\t\tMinify(2*x +  1,  7.0);\n+\t\tMinify(2*x +  2,  7.0);\n+\t\tsaved_r = total_r;\n+\t\tsaved_g = total_g;\n+\t\tMinify(2*x + 11, 15.0);\n+\t\tMinify(2*x + 12,  7.0);\n+\t\tMinify(2*x + 18,  7.0);\n+\t\tMinify(2*x + 19, 15.0);\n+\t\tMinify(2*x + 20, 15.0);\n+\t\tMinify(2*x + 21,  7.0);\n+\t\tq[x].r = (unsigned char)(total_r/128.0 + 0.5);\n+\t\tq[x].g = (unsigned char)(total_g/128.0 + 0.5);\n+\t\tq[x].b = (unsigned char)(total_b/128.0 + 0.5);\n+\t\tfprintf(stderr, \"r:%f g:%f b:%f\\n\", saved_r, saved_g, saved_b);\n+\t}\n+\tfor (x = 0; x < COLS; x++) {\n+\t\tif (answers[x] != q[x].b)\n+\t\t\tabort();\n+\t}\n+\treturn 0;\n+}"}]}