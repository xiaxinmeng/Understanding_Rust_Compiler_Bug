{"sha": "e903c96af0352839873e05e90256276f96a9d77e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkwM2M5NmFmMDM1MjgzOTg3M2UwNWU5MDI1NjI3NmY5NmE5ZDc3ZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-09-25T18:02:42Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-09-25T18:02:42Z"}, "message": "Fix last patch to allow indexed operand.\n\nFrom-SVN: r45809", "tree": {"sha": "a2975f32354681048a1fab74eadbe8fe964905d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2975f32354681048a1fab74eadbe8fe964905d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e903c96af0352839873e05e90256276f96a9d77e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e903c96af0352839873e05e90256276f96a9d77e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e903c96af0352839873e05e90256276f96a9d77e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e903c96af0352839873e05e90256276f96a9d77e/comments", "author": null, "committer": null, "parents": [{"sha": "ca6c03cabd8de0c3d6614ffd3100eb063778871b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca6c03cabd8de0c3d6614ffd3100eb063778871b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca6c03cabd8de0c3d6614ffd3100eb063778871b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c196489a2347f876125b82c6fdaadeed8461bd76", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e903c96af0352839873e05e90256276f96a9d77e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e903c96af0352839873e05e90256276f96a9d77e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e903c96af0352839873e05e90256276f96a9d77e", "patch": "@@ -1310,8 +1310,8 @@ lwa_operand (op, mode)\n \t&& GET_CODE (XEXP (inner, 0)) != PRE_INC\n \t&& GET_CODE (XEXP (inner, 0)) != PRE_DEC\n \t&& (GET_CODE (XEXP (inner, 0)) != PLUS\n-\t    || (GET_CODE (XEXP (XEXP (inner, 0), 1)) == CONST_INT\n-\t\t&& INTVAL (XEXP (XEXP (inner, 0), 1)) % 4 == 0)));\n+\t    || GET_CODE (XEXP (XEXP (inner, 0), 1)) != CONST_INT\n+\t    || INTVAL (XEXP (XEXP (inner, 0), 1)) % 4 == 0));\n }\n \n /* Return 1 if the operand, used inside a MEM, is a valid first argument"}]}