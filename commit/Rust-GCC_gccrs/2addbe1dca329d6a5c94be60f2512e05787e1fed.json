{"sha": "2addbe1dca329d6a5c94be60f2512e05787e1fed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFkZGJlMWRjYTMyOWQ2YTVjOTRiZTYwZjI1MTJlMDU3ODdlMWZlZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-05-05T01:27:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-05T01:27:06Z"}, "message": "tree.def: Add NAMESPACE_DECL.\n\n\t* tree.def: Add NAMESPACE_DECL.\n\t* dwarfout.c (type_ok_for_scope): Ignore NAMESPACE_DECLs for now.\n\t* dwarf2out.c (push_decl_scope): Likewise.\n\t(scope_die_for): Likewise.\n\t* tree.c (decl_function_context): Use TREE_CODE_CLASS to determine\n\thow to get next context level.\n\t* cp-tree.def: Remove NAMESPACE_DECL.\n\t* cp/Makefile.in: Add .SUFFIXES.\n\nFrom-SVN: r19539", "tree": {"sha": "5a18ae7b4648a1141acc035141e7f86ae0c82e17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a18ae7b4648a1141acc035141e7f86ae0c82e17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2addbe1dca329d6a5c94be60f2512e05787e1fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2addbe1dca329d6a5c94be60f2512e05787e1fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2addbe1dca329d6a5c94be60f2512e05787e1fed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2addbe1dca329d6a5c94be60f2512e05787e1fed/comments", "author": null, "committer": null, "parents": [{"sha": "2e14a41b63bb3ac89e91b85e58ae3d0f3e3798c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e14a41b63bb3ac89e91b85e58ae3d0f3e3798c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e14a41b63bb3ac89e91b85e58ae3d0f3e3798c9"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "772c621456f5db2dd47709d5d93db83a5f8e92b2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2addbe1dca329d6a5c94be60f2512e05787e1fed", "patch": "@@ -1,3 +1,9 @@\n+Tue May  5 01:25:03 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* Makefile.in: Add .SUFFIXES.\n+\n+\t* cp-tree.def: Remove NAMESPACE_DECL.\n+\n Sun May  3 01:32:14 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* call.c (build_over_call): Do evaluate arg even if it has empty "}, {"sha": "84d7a0c33ab37e6c04c547e268cdf30a4c30efb9", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=2addbe1dca329d6a5c94be60f2512e05787e1fed", "patch": "@@ -156,6 +156,10 @@ INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. -I$(srcdir)/../config\n .c.o:\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n \n+# The only suffixes we want for implicit rules are .c and .o.\n+.SUFFIXES:\n+.SUFFIXES: .c .o\n+\n # This tells GNU make version 3 not to export all the variables\n # defined in this file into the environment.\n .NOEXPORT:"}, {"sha": "25c64bfe0b1b7e9b217c5762e055e1848f036540", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=2addbe1dca329d6a5c94be60f2512e05787e1fed", "patch": "@@ -151,9 +151,6 @@ DEFTREECODE (TYPENAME_TYPE, \"typename_type\", 't', 0)\n    Other kinds of thunks may be defined later. */\n DEFTREECODE (THUNK_DECL, \"thunk_decl\", 'd', 0)\n \n-/* A namespace declaration.  */\n-DEFTREECODE (NAMESPACE_DECL, \"namespace_decl\", 'd', 0)\n-\n /* A using declaration.  DECL_INITIAL contains the specified scope.  \n    This is not an alias, but is later expanded into multiple aliases.  */\n DEFTREECODE (USING_DECL, \"using_decl\", 'd', 0)"}, {"sha": "e8ba8e3995bef663b49d958124d8c90f113c1273", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=2addbe1dca329d6a5c94be60f2512e05787e1fed", "patch": "@@ -7523,6 +7523,8 @@ push_decl_scope (scope)\n   /* The normal case.  */\n   if (decl_scope_depth == 0\n       || containing_scope == NULL_TREE\n+      /* Ignore namespaces for the moment.  */\n+      || TREE_CODE (containing_scope) == NAMESPACE_DECL\n       || containing_scope == decl_scope_table[decl_scope_depth - 1].scope)\n     decl_scope_table[decl_scope_depth].previous = decl_scope_depth - 1;\n   else\n@@ -7541,7 +7543,7 @@ push_decl_scope (scope)\n   decl_scope_depth++;\n }\n \n-/* Return the DIE for the scope the immediately contains this declaration.  */\n+/* Return the DIE for the scope that immediately contains this declaration.  */\n \n static dw_die_ref\n scope_die_for (t, context_die)\n@@ -7561,6 +7563,10 @@ scope_die_for (t, context_die)\n   else\n     containing_scope = DECL_CONTEXT (t);\n \n+  /* Ignore namespaces for the moment.  */\n+  if (containing_scope && TREE_CODE (containing_scope) == NAMESPACE_DECL)\n+    containing_scope = NULL_TREE;\n+\n   /* Function-local tags and functions get stuck in limbo until they are\n      fixed up by decls_for_scope.  */\n   if (context_die == NULL && containing_scope != NULL_TREE"}, {"sha": "edcf82241b81a222c29338129bb5a0c52de7755b", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=2addbe1dca329d6a5c94be60f2512e05787e1fed", "patch": "@@ -4136,6 +4136,9 @@ type_ok_for_scope (type, scope)\n \n   return is_tagged_type (type)\n \t ? (TYPE_CONTEXT (type) == scope\n+\t    /* Ignore namespaces for the moment.  */\n+\t    || (scope == NULL_TREE\n+\t\t&& TREE_CODE (TYPE_CONTEXT (type)) == NAMESPACE_DECL)\n \t    || (scope == NULL_TREE && is_tagged_type (TYPE_CONTEXT (type))\n \t\t&& TREE_ASM_WRITTEN (TYPE_CONTEXT (type))))\n \t : (scope == NULL_TREE || ! is_tagged_type (scope));"}, {"sha": "ff608db5360a84a1323f4cb30908d206c144b8e2", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=2addbe1dca329d6a5c94be60f2512e05787e1fed", "patch": "@@ -4654,11 +4654,9 @@ decl_function_context (decl)\n \n   while (context && TREE_CODE (context) != FUNCTION_DECL)\n     {\n-      if (TREE_CODE (context) == RECORD_TYPE\n-\t  || TREE_CODE (context) == UNION_TYPE\n-\t  || TREE_CODE (context) == QUAL_UNION_TYPE)\n+      if (TREE_CODE_CLASS (TREE_CODE (context)) == 't')\n \tcontext = TYPE_CONTEXT (context);\n-      else if (TREE_CODE (context) == TYPE_DECL)\n+      else if (TREE_CODE_CLASS (TREE_CODE (context)) == 'd')\n \tcontext = DECL_CONTEXT (context);\n       else if (TREE_CODE (context) == BLOCK)\n \tcontext = BLOCK_SUPERCONTEXT (context);"}, {"sha": "5e18393303b10103250d3d9839a9b7b91ff46c39", "filename": "gcc/tree.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2addbe1dca329d6a5c94be60f2512e05787e1fed/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=2addbe1dca329d6a5c94be60f2512e05787e1fed", "patch": "@@ -331,6 +331,10 @@ DEFTREECODE (VAR_DECL, \"var_decl\", 'd', 0)\n DEFTREECODE (PARM_DECL, \"parm_decl\", 'd', 0)\n DEFTREECODE (RESULT_DECL, \"result_decl\", 'd', 0)\n DEFTREECODE (FIELD_DECL, \"field_decl\", 'd', 0)\n+\n+/* A namespace declaration.  Namespaces appear in DECL_CONTEXT of other\n+   _DECLs, providing a hierarchy of names.  */\n+DEFTREECODE (NAMESPACE_DECL, \"namespace_decl\", 'd', 0)\n \f\n /* References to storage.  */\n "}]}