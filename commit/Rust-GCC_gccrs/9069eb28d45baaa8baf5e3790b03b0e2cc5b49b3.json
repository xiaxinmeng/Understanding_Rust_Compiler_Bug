{"sha": "9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA2OWViMjhkNDViYWFhOGJhZjVlMzc5MGIwM2IwZTJjYzViNDliMw==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "igor.v.tsimbalist@intel.com", "date": "2017-11-17T21:34:50Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-11-17T21:34:50Z"}, "message": "Enable building libsanitizer with Intel CET\n\nlibsanitizer/\n\t* acinclude.m4: Add enable.m4 and cet.m4.\n\t* Makefile.in: Regenerate.\n\t* asan/Makefile.am: Update AM_CXXFLAGS.\n\t* asan/Makefile.in: Regenerate.\n\t* configure: Likewise.\n\t* configure.ac: Set CET_FLAGS. Update EXTRA_CFLAGS,\n\tEXTRA_CXXFLAGS, EXTRA_ASFLAGS.\n\t* interception/Makefile.am: Update AM_CXXFLAGS.\n\t* interception/Makefile.in: Regenerate.\n\t* libbacktrace/Makefile.am: Update AM_CFLAGS, AM_CXXFLAGS.\n\t* libbacktrace/Makefile.in: Regenerate.\n\t* lsan/Makefile.am: Update AM_CXXFLAGS.\n\t* lsan/Makefile.in: Regenerate.\n\t* sanitizer_common/Makefile.am: Update AM_CXXFLAGS,\n\tAM_CCASFLAGS.\n\t* sanitizer_common/sanitizer_linux_x86_64.S: Include cet.h.\n\tAdd _CET_ENDBR macro.\n\t* sanitizer_common/Makefile.in: Regenerate.\n\t* tsan/Makefile.am: Update AM_CXXFLAGS.\n\t* tsan/Makefile.in: Regenerate.\n\t* tsan/tsan_rtl_amd64.S Include cet.h. Add _CET_ENDBR macro.\n\t* ubsan/Makefile.am: Update AM_CXXFLAGS.\n\t* ubsan/Makefile.in: Regenerate.\n\nFrom-SVN: r254896", "tree": {"sha": "f469641defe27b6947139a2f9ebaf9d086248a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f469641defe27b6947139a2f9ebaf9d086248a32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/comments", "author": {"login": "itsimbal", "id": 29258612, "node_id": "MDQ6VXNlcjI5MjU4NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/29258612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsimbal", "html_url": "https://github.com/itsimbal", "followers_url": "https://api.github.com/users/itsimbal/followers", "following_url": "https://api.github.com/users/itsimbal/following{/other_user}", "gists_url": "https://api.github.com/users/itsimbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsimbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsimbal/subscriptions", "organizations_url": "https://api.github.com/users/itsimbal/orgs", "repos_url": "https://api.github.com/users/itsimbal/repos", "events_url": "https://api.github.com/users/itsimbal/events{/privacy}", "received_events_url": "https://api.github.com/users/itsimbal/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36101de96474a2c223625dcc28119779e555058f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36101de96474a2c223625dcc28119779e555058f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36101de96474a2c223625dcc28119779e555058f"}], "stats": {"total": 205, "additions": 187, "deletions": 18}, "files": [{"sha": "497c4eaed5c0873ccb3c375e5512f429967e2fd6", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -1,3 +1,29 @@\n+2017-11-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* acinclude.m4: Add enable.m4 and cet.m4.\n+\t* Makefile.in: Regenerate.\n+\t* asan/Makefile.am: Update AM_CXXFLAGS.\n+\t* asan/Makefile.in: Regenerate.\n+\t* configure: Likewise.\n+\t* configure.ac: Set CET_FLAGS. Update EXTRA_CFLAGS,\n+\tEXTRA_CXXFLAGS, EXTRA_ASFLAGS.\n+\t* interception/Makefile.am: Update AM_CXXFLAGS.\n+\t* interception/Makefile.in: Regenerate.\n+\t* libbacktrace/Makefile.am: Update AM_CFLAGS, AM_CXXFLAGS.\n+\t* libbacktrace/Makefile.in: Regenerate.\n+\t* lsan/Makefile.am: Update AM_CXXFLAGS.\n+\t* lsan/Makefile.in: Regenerate.\n+\t* sanitizer_common/Makefile.am: Update AM_CXXFLAGS,\n+\tAM_CCASFLAGS.\n+\t* sanitizer_common/sanitizer_linux_x86_64.S: Include cet.h.\n+\tAdd _CET_ENDBR macro.\n+\t* sanitizer_common/Makefile.in: Regenerate.\n+\t* tsan/Makefile.am: Update AM_CXXFLAGS.\n+\t* tsan/Makefile.in: Regenerate.\n+\t* tsan/tsan_rtl_amd64.S Include cet.h. Add _CET_ENDBR macro.\n+\t* ubsan/Makefile.am: Update AM_CXXFLAGS.\n+\t* ubsan/Makefile.in: Regenerate.\n+\n 2017-11-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/82670"}, {"sha": "a9fea21eaf8fff0db777db949d351d3032fcd100", "filename": "libsanitizer/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.in?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -75,7 +75,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n@@ -174,6 +175,9 @@ ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n+EXTRA_ASFLAGS = @EXTRA_ASFLAGS@\n+EXTRA_CFLAGS = @EXTRA_CFLAGS@\n+EXTRA_CXXFLAGS = @EXTRA_CXXFLAGS@\n FGREP = @FGREP@\n FORMAT_FILE = @FORMAT_FILE@\n GREP = @GREP@"}, {"sha": "059b4595d75b3a490d8ede08aaf61c5a9f7c8433", "filename": "libsanitizer/acinclude.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Facinclude.m4?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -2,6 +2,8 @@ dnl ----------------------------------------------------------------------\n dnl This whole bit snagged from libgfortran.\n \n sinclude(../libtool.m4)\n+sinclude(../config/enable.m4)\n+sinclude(../config/cet.m4)\n dnl The lines below arrange for aclocal not to bring an installed\n dnl libtool.m4 into aclocal.m4, while still arranging for automake to\n dnl add a definition of LIBTOOL to Makefile.in."}, {"sha": "f105b0357964ca85d9dd48653e13ef5c5b6cbef9", "filename": "libsanitizer/asan/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fasan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fasan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.am?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -10,6 +10,7 @@ endif\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros -fno-ipa-icf\n AM_CXXFLAGS += $(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n AM_CXXFLAGS += -std=gnu++11\n+AM_CXXFLAGS += $(EXTRA_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I $(top_srcdir) -I $(top_srcdir)/config\n \n toolexeclib_LTLIBRARIES = libasan.la"}, {"sha": "4cf27e712f70638cae67e9e5faf9c833a16c00b6", "filename": "libsanitizer/asan/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fasan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fasan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.in?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -69,7 +69,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -184,6 +185,9 @@ ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n+EXTRA_ASFLAGS = @EXTRA_ASFLAGS@\n+EXTRA_CFLAGS = @EXTRA_CFLAGS@\n+EXTRA_CXXFLAGS = @EXTRA_CXXFLAGS@\n FGREP = @FGREP@\n FORMAT_FILE = @FORMAT_FILE@\n GREP = @GREP@\n@@ -304,7 +308,7 @@ AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\\n \t-Wno-variadic-macros -fno-ipa-icf \\\n-\t$(LIBSTDCXX_RAW_CXX_CXXFLAGS) -std=gnu++11\n+\t$(LIBSTDCXX_RAW_CXX_CXXFLAGS) -std=gnu++11 $(EXTRA_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I $(top_srcdir) -I $(top_srcdir)/config\n toolexeclib_LTLIBRARIES = libasan.la\n nodist_toolexeclib_HEADERS = libasan_preinit.o"}, {"sha": "a0104d8c2abcbf057c0b7340c56952588e6f8a5d", "filename": "libsanitizer/configure", "status": "modified", "additions": 82, "deletions": 2, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -604,6 +604,9 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+EXTRA_CXXFLAGS\n+EXTRA_CFLAGS\n+EXTRA_ASFLAGS\n get_gcc_base_ver\n SANITIZER_COMMON_TARGET_DEPENDENT_OBJECTS\n TSAN_TARGET_DEPENDENT_OBJECTS\n@@ -774,6 +777,7 @@ enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n with_gcc_major_version_only\n+enable_cet\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1421,6 +1425,8 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n+  --enable-cet            enable Intel CET in target libraries\n+                          [default=default]\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -12032,7 +12038,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12035 \"configure\"\n+#line 12041 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12138,7 +12144,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12141 \"configure\"\n+#line 12147 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16519,6 +16525,80 @@ fi\n \n \n \n+# Add CET specific flags if Intel CET is enabled.\n+ # Check whether --enable-cet was given.\n+if test \"${enable_cet+set}\" = set; then :\n+  enableval=$enable_cet;\n+      case \"$enableval\" in\n+       yes|no|default) ;;\n+       *) as_fn_error \"Unknown argument to enable/disable cet\" \"$LINENO\" 5 ;;\n+                          esac\n+\n+else\n+  enable_cet=default\n+fi\n+\n+\n+case \"$host\" in\n+  i[34567]86-*-linux* | x86_64-*-linux*)\n+    case \"$enable_cet\" in\n+      default)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  enable_cet=yes\n+else\n+  enable_cet=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+      yes)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  as_fn_error \"assembler with CET support is required for --enable-cet\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+    esac\n+    ;;\n+  *)\n+    enable_cet=no\n+    ;;\n+esac\n+if test x$enable_cet = xyes; then\n+  CET_FLAGS=\"-fcf-protection -mcet\"\n+fi\n+\n+EXTRA_CFLAGS=\"$EXTRA_CFLAGS $CET_FLAGS\"\n+EXTRA_CXXFLAGS=\"$EXTRA_CXXFLAGS $CET_FLAGS\"\n+EXTRA_ASFLAGS=$CET_FLAGS\n+\n+\n+\n+\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"}, {"sha": "0d11afd19483232a31c8a20511e45ecd832ad340", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -380,4 +380,13 @@ AC_SUBST([SANITIZER_COMMON_TARGET_DEPENDENT_OBJECTS])\n # Determine what GCC version number to use in filesystem paths.\n GCC_BASE_VER\n \n+# Add CET specific flags if Intel CET is enabled.\n+GCC_CET_FLAGS(CET_FLAGS)\n+EXTRA_CFLAGS=\"$EXTRA_CFLAGS $CET_FLAGS\"\n+EXTRA_CXXFLAGS=\"$EXTRA_CXXFLAGS $CET_FLAGS\"\n+EXTRA_ASFLAGS=$CET_FLAGS\n+AC_SUBST(EXTRA_ASFLAGS)\n+AC_SUBST(EXTRA_CFLAGS)\n+AC_SUBST(EXTRA_CXXFLAGS)\n+\n AC_OUTPUT"}, {"sha": "22ce8d5edaca2d049dfa022616f2ba6522ebea9d", "filename": "libsanitizer/interception/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Finterception%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Finterception%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finterception%2FMakefile.am?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -7,6 +7,7 @@ DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros\n AM_CXXFLAGS += $(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n AM_CXXFLAGS += -std=gnu++11\n+AM_CXXFLAGS += $(EXTRA_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n \n noinst_LTLIBRARIES = libinterception.la"}, {"sha": "4eb64562e702a9a41d4009c3ae17f3942ec7dd44", "filename": "libsanitizer/interception/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Finterception%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Finterception%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finterception%2FMakefile.in?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -65,7 +65,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -132,6 +133,9 @@ ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n+EXTRA_ASFLAGS = @EXTRA_ASFLAGS@\n+EXTRA_CFLAGS = @EXTRA_CFLAGS@\n+EXTRA_CXXFLAGS = @EXTRA_CXXFLAGS@\n FGREP = @FGREP@\n FORMAT_FILE = @FORMAT_FILE@\n GREP = @GREP@\n@@ -252,7 +256,7 @@ AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\\n \t-Wno-variadic-macros $(LIBSTDCXX_RAW_CXX_CXXFLAGS) \\\n-\t-std=gnu++11\n+\t-std=gnu++11 $(EXTRA_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n noinst_LTLIBRARIES = libinterception.la\n interception_files = \\"}, {"sha": "9c752272be1c5fef41714afa175ef744552d39b0", "filename": "libsanitizer/libbacktrace/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Flibbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Flibbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flibbacktrace%2FMakefile.am?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -39,8 +39,10 @@ WARN_FLAGS = -W -Wall -Wwrite-strings -Wmissing-format-attribute \\\n C_WARN_FLAGS = $(WARN_FLAGS) -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition\n CXX_WARN_FLAGS = $(WARN_FLAGS) -Wno-unused-parameter\n AM_CFLAGS = $(C_WARN_FLAGS)\n+AM_CFLAGS += $(EXTRA_CFLAGS)\n AM_CXXFLAGS = $(CXX_WARN_FLAGS) -fno-rtti -fno-exceptions\n AM_CXXFLAGS += -std=gnu++11\n+AM_CXXFLAGS += $(EXTRA_CXXFLAGS)\n \n noinst_LTLIBRARIES = libsanitizer_libbacktrace.la\n "}, {"sha": "e23aa846a5647efb11ca313b62a8fb246003b172", "filename": "libsanitizer/libbacktrace/Makefile.in", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Flibbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Flibbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flibbacktrace%2FMakefile.in?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -97,7 +97,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -174,6 +175,9 @@ ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n+EXTRA_ASFLAGS = @EXTRA_ASFLAGS@\n+EXTRA_CFLAGS = @EXTRA_CFLAGS@\n+EXTRA_CXXFLAGS = @EXTRA_CXXFLAGS@\n FGREP = @FGREP@\n FORMAT_FILE = @FORMAT_FILE@\n GREP = @GREP@\n@@ -295,8 +299,9 @@ WARN_FLAGS = -W -Wall -Wwrite-strings -Wmissing-format-attribute \\\n \n C_WARN_FLAGS = $(WARN_FLAGS) -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition\n CXX_WARN_FLAGS = $(WARN_FLAGS) -Wno-unused-parameter\n-AM_CFLAGS = $(C_WARN_FLAGS)\n-AM_CXXFLAGS = $(CXX_WARN_FLAGS) -fno-rtti -fno-exceptions -std=gnu++11\n+AM_CFLAGS = $(C_WARN_FLAGS) $(EXTRA_CFLAGS)\n+AM_CXXFLAGS = $(CXX_WARN_FLAGS) -fno-rtti -fno-exceptions -std=gnu++11 \\\n+\t$(EXTRA_CXXFLAGS)\n noinst_LTLIBRARIES = libsanitizer_libbacktrace.la\n libsanitizer_libbacktrace_la_SOURCES = \\\n \t../../libbacktrace/backtrace.h \\"}, {"sha": "423ffc249e0b048f0dfde7b3b2c58a033ff5cf7d", "filename": "libsanitizer/lsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Flsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Flsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.am?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -7,6 +7,7 @@ DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros\n AM_CXXFLAGS += $(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n AM_CXXFLAGS += -std=gnu++11\n+AM_CXXFLAGS += $(EXTRA_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n \n noinst_LTLIBRARIES = libsanitizer_lsan.la"}, {"sha": "a88d1f82647554c7865e3e979e90172b266422aa", "filename": "libsanitizer/lsan/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Flsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Flsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.in?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -67,7 +67,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -177,6 +178,9 @@ ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n+EXTRA_ASFLAGS = @EXTRA_ASFLAGS@\n+EXTRA_CFLAGS = @EXTRA_CFLAGS@\n+EXTRA_CXXFLAGS = @EXTRA_CXXFLAGS@\n FGREP = @FGREP@\n FORMAT_FILE = @FORMAT_FILE@\n GREP = @GREP@\n@@ -297,7 +301,7 @@ AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\\n \t-Wno-variadic-macros $(LIBSTDCXX_RAW_CXX_CXXFLAGS) \\\n-\t-std=gnu++11\n+\t-std=gnu++11 $(EXTRA_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n noinst_LTLIBRARIES = libsanitizer_lsan.la\n @LSAN_SUPPORTED_TRUE@toolexeclib_LTLIBRARIES = liblsan.la"}, {"sha": "246985b9933845bc998b0422c658665a2cf04393", "filename": "libsanitizer/sanitizer_common/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fsanitizer_common%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fsanitizer_common%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2FMakefile.am?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -7,13 +7,15 @@ DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros\n AM_CXXFLAGS += $(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n AM_CXXFLAGS += -std=gnu++11\n+AM_CXXFLAGS += $(EXTRA_CXXFLAGS)\n if LIBBACKTRACE_SUPPORTED\n AM_CXXFLAGS += -DSANITIZER_LIBBACKTRACE -DSANITIZER_CP_DEMANGLE \\\n \t       -I $(top_srcdir)/../libbacktrace \\\n \t       -I $(top_builddir)/libbacktrace \\\n \t       -I $(top_srcdir)/../include \\\n \t       -include $(top_srcdir)/libbacktrace/backtrace-rename.h\n endif\n+AM_CCASFLAGS = $(EXTRA_ASFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n \n noinst_LTLIBRARIES = libsanitizer_common.la"}, {"sha": "b0f5ac25a7f6dc9572879c26a12651b03b5dd520", "filename": "libsanitizer/sanitizer_common/Makefile.in", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fsanitizer_common%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fsanitizer_common%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2FMakefile.in?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -71,7 +71,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -177,6 +178,9 @@ ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n+EXTRA_ASFLAGS = @EXTRA_ASFLAGS@\n+EXTRA_CFLAGS = @EXTRA_CFLAGS@\n+EXTRA_CXXFLAGS = @EXTRA_CXXFLAGS@\n FGREP = @FGREP@\n FORMAT_FILE = @FORMAT_FILE@\n GREP = @GREP@\n@@ -297,7 +301,8 @@ AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\\n \t-Wno-variadic-macros $(LIBSTDCXX_RAW_CXX_CXXFLAGS) \\\n-\t-std=gnu++11 $(am__append_1)\n+\t-std=gnu++11 $(EXTRA_CXXFLAGS) $(am__append_1)\n+AM_CCASFLAGS = $(EXTRA_ASFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n noinst_LTLIBRARIES = libsanitizer_common.la\n sanitizer_common_files = \\"}, {"sha": "846d1a43370b3c9a9ed451076a4bd80404feec8e", "filename": "libsanitizer/sanitizer_common/sanitizer_linux_x86_64.S", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux_x86_64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux_x86_64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux_x86_64.S?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -10,12 +10,14 @@\n #if defined(__linux__) && defined(__x86_64__)\n \n #include \"../builtins/assembly.h\"\n+#include \"cet.h\"\n \n // If the \"naked\" function attribute were supported for x86 we could\n // do this via inline asm.\n .text\n .balign 4\n DEFINE_COMPILERRT_FUNCTION(internal_sigreturn)\n+\t_CET_ENDBR\n         mov           $0xf,             %eax    // 0xf == SYS_rt_sigreturn\n         mov           %rcx,             %r10\n         syscall"}, {"sha": "753cb8f4fc13e000a8724c884ffc5ac86f5dfb20", "filename": "libsanitizer/tsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Ftsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Ftsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.am?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -7,6 +7,7 @@ DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros\n AM_CXXFLAGS += $(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n AM_CXXFLAGS += -std=gnu++11\n+AM_CXXFLAGS += $(EXTRA_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n \n toolexeclib_LTLIBRARIES = libtsan.la"}, {"sha": "629056bf17b099f793de3d5d8c4fa0d46b2e2ef9", "filename": "libsanitizer/tsan/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Ftsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Ftsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.in?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -68,7 +68,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -193,6 +194,9 @@ ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n+EXTRA_ASFLAGS = @EXTRA_ASFLAGS@\n+EXTRA_CFLAGS = @EXTRA_CFLAGS@\n+EXTRA_CXXFLAGS = @EXTRA_CXXFLAGS@\n FGREP = @FGREP@\n FORMAT_FILE = @FORMAT_FILE@\n GREP = @GREP@\n@@ -313,7 +317,7 @@ AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\\n \t-Wno-variadic-macros $(LIBSTDCXX_RAW_CXX_CXXFLAGS) \\\n-\t-std=gnu++11\n+\t-std=gnu++11 $(EXTRA_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n toolexeclib_LTLIBRARIES = libtsan.la\n nodist_toolexeclib_HEADERS = libtsan_preinit.o"}, {"sha": "4eb1ffdd2b7fa01a6c6ef55d53460455dec51c40", "filename": "libsanitizer/tsan/tsan_rtl_amd64.S", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Ftsan%2Ftsan_rtl_amd64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Ftsan%2Ftsan_rtl_amd64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2Ftsan_rtl_amd64.S?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -2,6 +2,7 @@\n #if defined(__x86_64__)\n \n #include \"sanitizer_common/sanitizer_asm.h\"\n+#include \"cet.h\"\n \n #if !defined(__APPLE__)\n .section .text\n@@ -13,6 +14,7 @@ ASM_HIDDEN(__tsan_trace_switch)\n .globl ASM_TSAN_SYMBOL(__tsan_trace_switch_thunk)\n ASM_TSAN_SYMBOL(__tsan_trace_switch_thunk):\n   CFI_STARTPROC\n+  _CET_ENDBR\n   # Save scratch registers.\n   push %rax\n   CFI_ADJUST_CFA_OFFSET(8)\n@@ -93,6 +95,7 @@ ASM_HIDDEN(__tsan_report_race)\n .globl ASM_TSAN_SYMBOL(__tsan_report_race_thunk)\n ASM_TSAN_SYMBOL(__tsan_report_race_thunk):\n   CFI_STARTPROC\n+  _CET_ENDBR\n   # Save scratch registers.\n   push %rax\n   CFI_ADJUST_CFA_OFFSET(8)\n@@ -177,6 +180,7 @@ ASM_HIDDEN(__tsan_setjmp)\n ASM_TYPE_FUNCTION(ASM_TSAN_SYMBOL_INTERCEPTOR(setjmp))\n ASM_TSAN_SYMBOL_INTERCEPTOR(setjmp):\n   CFI_STARTPROC\n+  _CET_ENDBR\n   // save env parameter\n   push %rdi\n   CFI_ADJUST_CFA_OFFSET(8)\n@@ -218,6 +222,7 @@ ASM_SIZE(ASM_TSAN_SYMBOL_INTERCEPTOR(setjmp))\n ASM_TYPE_FUNCTION(ASM_TSAN_SYMBOL_INTERCEPTOR(_setjmp))\n ASM_TSAN_SYMBOL_INTERCEPTOR(_setjmp):\n   CFI_STARTPROC\n+  _CET_ENDBR\n   // save env parameter\n   push %rdi\n   CFI_ADJUST_CFA_OFFSET(8)\n@@ -259,6 +264,7 @@ ASM_SIZE(ASM_TSAN_SYMBOL_INTERCEPTOR(_setjmp))\n ASM_TYPE_FUNCTION(ASM_TSAN_SYMBOL_INTERCEPTOR(sigsetjmp))\n ASM_TSAN_SYMBOL_INTERCEPTOR(sigsetjmp):\n   CFI_STARTPROC\n+  _CET_ENDBR\n   // save env parameter\n   push %rdi\n   CFI_ADJUST_CFA_OFFSET(8)\n@@ -315,6 +321,7 @@ ASM_SIZE(ASM_TSAN_SYMBOL_INTERCEPTOR(sigsetjmp))\n ASM_TYPE_FUNCTION(ASM_TSAN_SYMBOL_INTERCEPTOR(__sigsetjmp))\n ASM_TSAN_SYMBOL_INTERCEPTOR(__sigsetjmp):\n   CFI_STARTPROC\n+  _CET_ENDBR\n   // save env parameter\n   push %rdi\n   CFI_ADJUST_CFA_OFFSET(8)"}, {"sha": "2bff6be93b7b38bb4fc1faa698d00b6cf674a816", "filename": "libsanitizer/ubsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fubsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fubsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2FMakefile.am?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -7,6 +7,7 @@ DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros\n AM_CXXFLAGS += $(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n AM_CXXFLAGS += -std=gnu++11\n+AM_CXXFLAGS += $(EXTRA_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n \n toolexeclib_LTLIBRARIES = libubsan.la"}, {"sha": "d75260f1ef76c73dd0ff37ea350023ec07e1cf6c", "filename": "libsanitizer/ubsan/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fubsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3/libsanitizer%2Fubsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2FMakefile.in?ref=9069eb28d45baaa8baf5e3790b03b0e2cc5b49b3", "patch": "@@ -67,7 +67,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -171,6 +172,9 @@ ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n+EXTRA_ASFLAGS = @EXTRA_ASFLAGS@\n+EXTRA_CFLAGS = @EXTRA_CFLAGS@\n+EXTRA_CXXFLAGS = @EXTRA_CXXFLAGS@\n FGREP = @FGREP@\n FORMAT_FILE = @FORMAT_FILE@\n GREP = @GREP@\n@@ -291,7 +295,7 @@ AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-long-long -fPIC -fno-builtin -fno-exceptions -fno-rtti \\\n \t-fomit-frame-pointer -funwind-tables -fvisibility=hidden \\\n \t-Wno-variadic-macros $(LIBSTDCXX_RAW_CXX_CXXFLAGS) \\\n-\t-std=gnu++11\n+\t-std=gnu++11 $(EXTRA_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n toolexeclib_LTLIBRARIES = libubsan.la\n ubsan_plugin_files = \\"}]}