{"sha": "dc38a61086ce5044b9b78c48e7897179b819e06e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMzOGE2MTA4NmNlNTA0NGI5Yjc4YzQ4ZTc4OTcxNzliODE5ZTA2ZQ==", "commit": {"author": {"name": "Fariborz Jahanian", "email": "fjahanian@apple.com", "date": "2005-08-31T15:55:52Z"}, "committer": {"name": "Fariborz Jahanian", "email": "fjahanian@gcc.gnu.org", "date": "2005-08-31T15:55:52Z"}, "message": "Fix ppc -m64 constant address expression expansion bug.\n\nOked by Richard Henderson.\n\nFrom-SVN: r103676", "tree": {"sha": "18099d4c9108cab72f9d8b420877fd4281f5f06d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18099d4c9108cab72f9d8b420877fd4281f5f06d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc38a61086ce5044b9b78c48e7897179b819e06e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc38a61086ce5044b9b78c48e7897179b819e06e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc38a61086ce5044b9b78c48e7897179b819e06e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc38a61086ce5044b9b78c48e7897179b819e06e/comments", "author": null, "committer": null, "parents": [{"sha": "f471f0fcc76c7e67c8c958f25203660d78913537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f471f0fcc76c7e67c8c958f25203660d78913537", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f471f0fcc76c7e67c8c958f25203660d78913537"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "40dcbe33045cfe9fe111040cfcb57c7d52af02a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc38a61086ce5044b9b78c48e7897179b819e06e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc38a61086ce5044b9b78c48e7897179b819e06e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc38a61086ce5044b9b78c48e7897179b819e06e", "patch": "@@ -1,3 +1,9 @@\n+2005-08-31  Fariborz Jahanian <fjahanian@apple.com>\n+\n+\t* expr.c (expand_expr_real_1): Compare size of address \n+\tmode to target's address mode size in deciding expansion of \n+\tthe constant address.\n+\n 2005-08-31  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/23477"}, {"sha": "e44a54f9729898b97cd99e92ac42ef4da76ae44b", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc38a61086ce5044b9b78c48e7897179b819e06e/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc38a61086ce5044b9b78c48e7897179b819e06e/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=dc38a61086ce5044b9b78c48e7897179b819e06e", "patch": "@@ -7673,7 +7673,7 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t    }\n \n \t  else if (TREE_CODE (TREE_OPERAND (exp, 1)) == INTEGER_CST\n-\t\t   && GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_INT\n+\t\t   && GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_WIDE_INT\n \t\t   && TREE_CONSTANT (TREE_OPERAND (exp, 0)))\n \t    {\n \t      rtx constant_part;"}, {"sha": "dc34368cb4a4bb3a1c2ab1c40d9215e2041a5ee7", "filename": "gcc/testsuite/gcc.c-torture/execute/const-addr-expr-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc38a61086ce5044b9b78c48e7897179b819e06e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fconst-addr-expr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc38a61086ce5044b9b78c48e7897179b819e06e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fconst-addr-expr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fconst-addr-expr-1.c?ref=dc38a61086ce5044b9b78c48e7897179b819e06e", "patch": "@@ -0,0 +1,33 @@\n+#include        <stdio.h>\n+#include        <stdlib.h>\n+extern void abort();\n+\n+typedef struct foo\n+{\n+        int     uaattrid;\n+        char    *name;\n+} FOO;\n+\n+FOO     Upgrade_items[] =\n+{\n+        {1, \"1\"},\n+        {2, \"2\"},\n+        {0, NULL}\n+};\n+\n+int     *Upgd_minor_ID = \n+        (int *) &((Upgrade_items + 1)->uaattrid);\n+\n+int     *Upgd_minor_ID1 = \n+        (int *) &((Upgrade_items)->uaattrid);\n+\n+int\n+main(int argc, char **argv)\n+{\n+\tif (*Upgd_minor_ID != 2)\n+\t  abort();\n+\n+\tif (*Upgd_minor_ID1 != 1)\n+\t  abort();\n+\treturn 0;\n+}"}]}