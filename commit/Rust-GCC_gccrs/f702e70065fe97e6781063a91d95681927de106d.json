{"sha": "f702e70065fe97e6781063a91d95681927de106d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcwMmU3MDA2NWZlOTdlNjc4MTA2M2E5MWQ5NTY4MTkyN2RlMTA2ZA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2002-11-13T20:55:02Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2002-11-13T20:55:02Z"}, "message": "install.texi (Testing): Document extra Java testing.\n\n2002-11-13  Janis Johnson  <janis187@us.ibm.com>\n\n\t* doc/install.texi (Testing): Document extra Java testing.\n\t* doc/sourcebuild.texi (Test Suites): Document libgcj testing.\n\nFrom-SVN: r59085", "tree": {"sha": "269f340a36d706dee63cc7256b7831b7e6c6d14d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/269f340a36d706dee63cc7256b7831b7e6c6d14d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f702e70065fe97e6781063a91d95681927de106d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f702e70065fe97e6781063a91d95681927de106d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f702e70065fe97e6781063a91d95681927de106d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f702e70065fe97e6781063a91d95681927de106d/comments", "author": null, "committer": null, "parents": [{"sha": "08ec53e7980ab9f5d4e9e6a7152684580b78bad8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ec53e7980ab9f5d4e9e6a7152684580b78bad8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08ec53e7980ab9f5d4e9e6a7152684580b78bad8"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "4316431c13be4693c0570531ee9cbe8c5f18258b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f702e70065fe97e6781063a91d95681927de106d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f702e70065fe97e6781063a91d95681927de106d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f702e70065fe97e6781063a91d95681927de106d", "patch": "@@ -1,3 +1,8 @@\n+2002-11-13  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* doc/install.texi (Testing): Document extra Java testing.\n+\t* doc/sourcebuild.texi (Test Suites): Document libgcj testing.\n+\n 2002-11-13  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa64-hpux.h (LINK_SPEC): Move \"+Accept TypeMismatch\" switch to the"}, {"sha": "09b29f3e8f46da7462019e79a0d4fbd8d165530b", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f702e70065fe97e6781063a91d95681927de106d/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f702e70065fe97e6781063a91d95681927de106d/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=f702e70065fe97e6781063a91d95681927de106d", "patch": "@@ -1264,6 +1264,19 @@ To get a list of the possible @file{*.exp} files, pipe the\n output of @samp{make check} into a file and look at the\n @samp{Running @dots{}  .exp} lines.\n \n+To run only the tests for a library, run @samp{make check} from the\n+the library's testsuite in a subdirectory of the object directory:\n+@file{libstdc++-v3/testsuite} or @file{libcgj/testsuite}.\n+\n+@section Additional testing for Java Class Libraries\n+\n+The @uref{http://sources.redhat.com/mauve/,,Mauve Project} provides\n+a suite of tests for the Java Class Libraries.  This suite can be run\n+as part of libgcj testing by placing the Mauve tree within the libjava\n+testsuite at @file{libjava/testsuite/libjava.mauve/mauve}, or by\n+specifying the location of that tree when invoking @samp{make}, as in\n+@samp{make MAUVEDIR=~/mauve check}.\n+\n @section How to interpret test results\n \n After the testsuite has run you'll find various @file{*.sum} and @file{*.log}"}, {"sha": "e337a50ac510ca0c804316604b888e9a23b65e8f", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f702e70065fe97e6781063a91d95681927de106d/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f702e70065fe97e6781063a91d95681927de106d/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=f702e70065fe97e6781063a91d95681927de106d", "patch": "@@ -753,6 +753,7 @@ here; FIXME: document the others.\n @menu\n * Test Idioms::  Idioms used in test suite code.\n * C Tests::      The C language test suites.\n+* libgcj Tests:: The Java library test suites.\n @end menu\n \n @node Test Idioms\n@@ -903,3 +904,32 @@ shouldn't.\n \n FIXME: merge in @file{testsuite/README.gcc} and discuss the format of\n test cases and magic comments more.\n+\n+@node libgcj Tests\n+@subsection The Java library test suites.\n+\n+Runtime tests are executed via @samp{make check} from the @samp{testsuite}\n+directory of the libjava hierarchy in the build tree.  Additional runtime\n+tests can be checked into this testsuite.\n+\n+Regression testing of the core packages in libgcj is also covered by the\n+Mauve test suite.  The @uref{http://sources.redhat.com/mauve/,,Mauve Project}\n+develops tests for the Java Class Libraries.  These tests are run as part\n+of libgcj testing by placing the Mauve tree within the libjava testsuite\n+sources at @file{libjava/testsuite/libjava.mauve/mauve}, or by specifying\n+the location of that tree when invoking @samp{make}, as in\n+@samp{make MAUVEDIR=~/mauve check}.\n+\n+To detect regressions, a mechanism in @file{mauve.exp} compares the\n+failures for a test run against the list of expected failures in\n+@file{libjava/testsuite/libjava.mauve/xfails} from the source hierarchy.\n+Update this file when adding new failing tests to Mauve, or when fixing\n+bugs in libgcj that had caused Mauve test failures.\n+\n+The @uref{http://oss.software.ibm.com/developerworks/opensource/jacks/,,\n+Jacks} project provides a test suite for Java compilers that can be used\n+to test changes that affect the GCJ front end.  This test suite is run as\n+part of Java testing by placing the Jacks tree within the the libjava\n+testsuite sources at @file{libjava/testsuite/libjava.jacks/jacks}.\n+\n+We encourage developers to contribute test cases to Mauve and Jacks."}]}