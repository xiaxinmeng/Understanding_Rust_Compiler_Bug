{"sha": "1f8e994ce9960687917d0fca2fef96af3080da50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY4ZTk5NGNlOTk2MDY4NzkxN2QwZmNhMmZlZjk2YWYzMDgwZGE1MA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-04-13T18:34:36Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-04-13T18:34:36Z"}, "message": "re PR fortran/31559 ([4.1 only] Assigning to an EXTERNAL leads to ICE)\n\n2007-04-13  Tobias Burnus  <burnus@net-b.de>\n\n\tPR fortran/31559\n\t* primary.c (match_variable): External functions\n\tare no variables.\n\n2007-04-13  Tobias Burnus  <burnus@net-b.de>\n\n\tPR fortran/31559\n\t* gfortran.dg/func_assign.f90: New test.\n\nFrom-SVN: r123793", "tree": {"sha": "9b79ca9baa26e575692ca093f5d9b2a865c1b900", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b79ca9baa26e575692ca093f5d9b2a865c1b900"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f8e994ce9960687917d0fca2fef96af3080da50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8e994ce9960687917d0fca2fef96af3080da50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f8e994ce9960687917d0fca2fef96af3080da50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8e994ce9960687917d0fca2fef96af3080da50/comments", "author": null, "committer": null, "parents": [{"sha": "c40ce8f320df0b2cf23426a9c3da37df10dde3d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c40ce8f320df0b2cf23426a9c3da37df10dde3d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c40ce8f320df0b2cf23426a9c3da37df10dde3d7"}], "stats": {"total": 93, "additions": 69, "deletions": 24}, "files": [{"sha": "aaad10f7f07858612e9d149dfff23d96d3866cd4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8e994ce9960687917d0fca2fef96af3080da50/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8e994ce9960687917d0fca2fef96af3080da50/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1f8e994ce9960687917d0fca2fef96af3080da50", "patch": "@@ -1,9 +1,15 @@\n-2007-04-13  Paul Thomas  <pault@gcc.gnu.org>\r\n-\r\n-\tPR fortran/31550\r\n-\t* trans-types.c (copy_dt_decls_ifequal): Do not get pointer\r\n-\tderived type components.\r\n-\r\n+2007-04-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/31559\n+\t* primary.c (match_variable): External functions\n+\tare no variables.\n+\n+2007-04-13  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/31550\n+\t* trans-types.c (copy_dt_decls_ifequal): Do not get pointer\n+\tderived type components.\n+\n 2007-04-13  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n \n \tPR fortran/18937\n@@ -106,18 +112,18 @@\n \t* parse.c (parse_progunit): Call it after parsing specification\n \tstatements.\n \n-2007-04-05  Paul Thomas  <pault@gcc.gnu.org>\r\n-\r\n-\tPR fortran/31483\r\n-\t* trans-expr.c (gfc_conv_function_call): Give a dummy\r\n-\tprocedure the correct type if it has alternate returns.\r\n-\r\n-2007-04-05  Paul Thomas  <pault@gcc.gnu.org>\r\n-\r\n-\tPR fortran/31292\r\n-\t* decl.c (gfc_match_modproc): Go up to the top of the namespace\r\n-\ttree to find the module namespace for gfc_get_symbol.\r\n-\r\n+2007-04-05  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/31483\n+\t* trans-expr.c (gfc_conv_function_call): Give a dummy\n+\tprocedure the correct type if it has alternate returns.\n+\n+2007-04-05  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/31292\n+\t* decl.c (gfc_match_modproc): Go up to the top of the namespace\n+\ttree to find the module namespace for gfc_get_symbol.\n+\n 2007-04-03  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/31304"}, {"sha": "e31e1c5dbfd328fdf3bb59b7498d7695d4948f00", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8e994ce9960687917d0fca2fef96af3080da50/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8e994ce9960687917d0fca2fef96af3080da50/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=1f8e994ce9960687917d0fca2fef96af3080da50", "patch": "@@ -2420,7 +2420,8 @@ match_variable (gfc_expr **result, int equiv_flag, int host_flag)\n \n     case FL_PROCEDURE:\n       /* Check for a nonrecursive function result */\n-      if (sym->attr.function && (sym->result == sym || sym->attr.entry))\n+      if (sym->attr.function && (sym->result == sym || sym->attr.entry)\n+\t  && !sym->attr.external)\n \t{\n \t  /* If a function result is a derived type, then the derived\n \t     type may still have to be resolved.  */"}, {"sha": "56f8ff813601bdcd80a3da21e99284c962f19e41", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8e994ce9960687917d0fca2fef96af3080da50/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8e994ce9960687917d0fca2fef96af3080da50/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f8e994ce9960687917d0fca2fef96af3080da50", "patch": "@@ -1,8 +1,13 @@\n-2007-04-13  Paul Thomas  <pault@gcc.gnu.org>\r\n-\r\n-\tPR fortran/31550\r\n-\t* gfortran.dg/used_types_16.f90: New test.\r\n-\r\n+2007-04-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/31559\n+\t* gfortran.dg/func_assign.f90: New test.\n+\n+2007-04-13  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/31550\n+\t* gfortran.dg/used_types_16.f90: New test.\n+\n 2007-04-13  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n \n \tPR fortran/18937"}, {"sha": "3651dfded2eeb0952c4382a7dc700d330dc79507", "filename": "gcc/testsuite/gfortran.dg/func_assign.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8e994ce9960687917d0fca2fef96af3080da50/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_assign.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8e994ce9960687917d0fca2fef96af3080da50/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_assign.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_assign.f90?ref=1f8e994ce9960687917d0fca2fef96af3080da50", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do compile }\n+!\n+! PR fortran/31559\n+! Do not allow assigning to external functions\n+!\n+! Contributed by Steve Kargl <sgk@troutmask.apl.washington.edu>\n+!\n+module mod\n+  implicit none\n+contains\n+  integer function bar()\n+    bar = 4\n+  end function bar\n+\n+  subroutine a() \n+   implicit none\n+   real :: fun\n+   external fun\n+   interface\n+     function funget(a)\n+       integer :: a\n+     end function\n+     subroutine sub()\n+     end subroutine sub\n+   end interface\n+   sub = 'a'  ! { dg-error \"Expected VARIABLE\" }\n+   fun = 4.4  ! { dg-error \"Expected VARIABLE\" }\n+   funget = 4 ! { dg-error \"is not a VALUE\" }\n+   bar = 5    ! { dg-error \"is not a VALUE\" }\n+  end subroutine a\n+end module mod\n+\n+end"}]}