{"sha": "7b91690215d275028eacf31f75a22aaa9bc4f3b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I5MTY5MDIxNWQyNzUwMjhlYWNmMzFmNzVhMjJhYWE5YmM0ZjNiMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-06-08T17:31:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-06-08T17:31:40Z"}, "message": "alloc_traits.h (allocator_traits::max_size()): LWG 2162: Add noexcept.\n\n\t* include/bits/alloc_traits.h (allocator_traits::max_size()): LWG\n\t2162: Add noexcept.\n\nFrom-SVN: r199858", "tree": {"sha": "dbc8cf8ac3490b49d88e8fe35e7255583557b0ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbc8cf8ac3490b49d88e8fe35e7255583557b0ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b91690215d275028eacf31f75a22aaa9bc4f3b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b91690215d275028eacf31f75a22aaa9bc4f3b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b91690215d275028eacf31f75a22aaa9bc4f3b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b91690215d275028eacf31f75a22aaa9bc4f3b2/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "776434d183b632291cac1d89b025ab7565c623c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776434d183b632291cac1d89b025ab7565c623c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/776434d183b632291cac1d89b025ab7565c623c6"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c48f2fc1a6e4a0acb2c81123f4edf5df7ac2d4f3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b91690215d275028eacf31f75a22aaa9bc4f3b2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b91690215d275028eacf31f75a22aaa9bc4f3b2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7b91690215d275028eacf31f75a22aaa9bc4f3b2", "patch": "@@ -1,3 +1,8 @@\n+2013-06-08  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/bits/alloc_traits.h (allocator_traits::max_size()): LWG\n+\t2162: Add noexcept.\n+\n 2013-06-08  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/bits/stl_algo.h (is_permutation): Add overloads from N3671."}, {"sha": "e68d31710951bfc4e9dfc60b76e5ec8484526f8b", "filename": "libstdc++-v3/include/bits/alloc_traits.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b91690215d275028eacf31f75a22aaa9bc4f3b2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b91690215d275028eacf31f75a22aaa9bc4f3b2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h?ref=7b91690215d275028eacf31f75a22aaa9bc4f3b2", "patch": "@@ -412,7 +412,7 @@ _GLIBCXX_ALLOC_TR_NESTED_TYPE(propagate_on_container_swap,\n        *  Returns @c __a.max_size() if that expression is well-formed,\n        *  otherwise returns @c numeric_limits<size_type>::max()\n       */\n-      static size_type max_size(const _Alloc& __a)\n+      static size_type max_size(const _Alloc& __a) noexcept\n       { return _S_max_size(__a); }\n \n       /**"}]}