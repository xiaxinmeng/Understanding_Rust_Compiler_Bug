{"sha": "183624479fd426c67928bb931a6474b15a8e8e95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgzNjI0NDc5ZmQ0MjZjNjc5MjhiYjkzMWE2NDc0YjE1YThlOGU5NQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-11-02T22:23:13Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-11-02T22:23:13Z"}, "message": "Makefile.in (LIB2_DIVMOD_FUNCS): Add _divmoddi4.\n\n\t* Makefile.in (LIB2_DIVMOD_FUNCS): Add _divmoddi4.\n\t* libgcc2.c (__divmoddi4): New function.\n\t* libgcc2.h (__divmoddi4): Declare.\n\t* libgcc-std.ver.in (GCC_7.0.0): New. Add __PFX_divmoddi4\n\tand __PFX_divmodti4.\n\nFrom-SVN: r241804", "tree": {"sha": "b154ef3d06dc1c3ad500e527dee1edde04dd04bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b154ef3d06dc1c3ad500e527dee1edde04dd04bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/183624479fd426c67928bb931a6474b15a8e8e95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183624479fd426c67928bb931a6474b15a8e8e95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/183624479fd426c67928bb931a6474b15a8e8e95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183624479fd426c67928bb931a6474b15a8e8e95/comments", "author": null, "committer": null, "parents": [{"sha": "6668eb4593253eab2677d844c95b3be64487e4cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6668eb4593253eab2677d844c95b3be64487e4cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6668eb4593253eab2677d844c95b3be64487e4cb"}], "stats": {"total": 67, "additions": 56, "deletions": 11}, "files": [{"sha": "e2e5327b37cc33e651d0635c488ab2e5ab27d1f0", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183624479fd426c67928bb931a6474b15a8e8e95/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183624479fd426c67928bb931a6474b15a8e8e95/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=183624479fd426c67928bb931a6474b15a8e8e95", "patch": "@@ -1,11 +1,19 @@\n+2016-11-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* Makefile.in (LIB2_DIVMOD_FUNCS): Add _divmoddi4.\n+\t* libgcc2.c (__divmoddi4): New function.\n+\t* libgcc2.h (__divmoddi4): Declare.\n+\t* libgcc-std.ver.in (GCC_7.0.0): New. Add __PFX_divmoddi4\n+\tand __PFX_divmodti4.\n+\n 2016-10-24  Florian Weimer  <fweimer@redhat.com>\n \n \tPR libgcc/78064\n \t* unwind-c.c: Include auto-target.h.\n \n 2016-10-19  John David Anglin  <danglin@gcc.gnu.org>\n \n-\t* config/pa/pa64-hpux-lib.h: New file.  \n+\t* config/pa/pa64-hpux-lib.h: New file.\n \t(EH_FRAME_SECTION_NAME): Rename to __LIBGCC_EH_FRAME_SECTION_NAME__.\n \t(DTORS_SECTION_ASM_OP): Rename to __LIBGCC_DTORS_SECTION_ASM_OP__.\n \t* config.host (tm_file): Add pa/pa64-hpux-lib.h to tm_file on\n@@ -358,7 +366,7 @@\n \n 2016-06-23  Jakub Sejdak  <jakub.sejdak@phoesys.com>\n \n-   * config.host: Add suport for arm*-*-phoenix* targets.\n+\t* config.host: Add suport for arm*-*-phoenix* targets.\n \n 2016-06-21  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n "}, {"sha": "ae69611f2bf2345f75e551661c35f0cb0c555b8e", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183624479fd426c67928bb931a6474b15a8e8e95/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183624479fd426c67928bb931a6474b15a8e8e95/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=183624479fd426c67928bb931a6474b15a8e8e95", "patch": "@@ -255,10 +255,6 @@ LIB2FUNCS_ST = _eprintf __gcc_bcmp\n # List of functions not to build from libgcc2.c.\n LIB2FUNCS_EXCLUDE =\n \n-# These might cause a divide overflow trap and so are compiled with\n-# unwinder info.\n-LIB2_DIVMOD_FUNCS = _divdi3 _moddi3 _udivdi3 _umoddi3 _udiv_w_sdiv _udivmoddi4\n-\n # List of extra C and assembler files to add to static and shared libgcc2.\n # Assembler files should have names ending in `.S'.\n LIB2ADD = \n@@ -455,7 +451,8 @@ endif\n \n # These might cause a divide overflow trap and so are compiled with\n # unwinder info.\n-LIB2_DIVMOD_FUNCS = _divdi3 _moddi3 _udivdi3 _umoddi3 _udiv_w_sdiv _udivmoddi4\n+LIB2_DIVMOD_FUNCS = _divdi3 _moddi3 _divmoddi4 \\\n+\t\t    _udivdi3 _umoddi3 _udivmoddi4 _udiv_w_sdiv\n \n # Remove any objects from lib2funcs and LIB2_DIVMOD_FUNCS that are\n # defined as optimized assembly code in LIB1ASMFUNCS or as C code"}, {"sha": "a35d4b3013ad28356ce58d907b5001ad364c418b", "filename": "libgcc/libgcc-std.ver.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183624479fd426c67928bb931a6474b15a8e8e95/libgcc%2Flibgcc-std.ver.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183624479fd426c67928bb931a6474b15a8e8e95/libgcc%2Flibgcc-std.ver.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcc-std.ver.in?ref=183624479fd426c67928bb931a6474b15a8e8e95", "patch": "@@ -1938,3 +1938,9 @@ GCC_4.7.0 {\n %inherit GCC_4.8.0 GCC_4.7.0\n GCC_4.8.0 {\n }\n+\n+%inherit GCC_7.0.0 GCC_4.8.0\n+GCC_7.0.0 {\n+  __PFX__divmoddi4\n+  __PFX__divmodti4\n+}"}, {"sha": "1d71fc48567d9bbfe134f1956b754ff4d83a42c3", "filename": "libgcc/libgcc2.c", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183624479fd426c67928bb931a6474b15a8e8e95/libgcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183624479fd426c67928bb931a6474b15a8e8e95/libgcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcc2.c?ref=183624479fd426c67928bb931a6474b15a8e8e95", "patch": "@@ -680,7 +680,8 @@ __udiv_w_sdiv (UWtype *rp __attribute__ ((__unused__)),\n #endif\n \f\n #if (defined (L_udivdi3) || defined (L_divdi3) || \\\n-     defined (L_umoddi3) || defined (L_moddi3))\n+     defined (L_umoddi3) || defined (L_moddi3) || \\\n+     defined (L_divmoddi4))\n #define L_udivmoddi4\n #endif\n \n@@ -937,7 +938,8 @@ __parityDI2 (UDWtype x)\n #ifdef TARGET_HAS_NO_HW_DIVIDE\n \n #if (defined (L_udivdi3) || defined (L_divdi3) || \\\n-     defined (L_umoddi3) || defined (L_moddi3))\n+     defined (L_umoddi3) || defined (L_moddi3) || \\\n+     defined (L_divmoddi4))\n static inline __attribute__ ((__always_inline__))\n #endif\n UDWtype\n@@ -1004,7 +1006,8 @@ __udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)\n #else\n \n #if (defined (L_udivdi3) || defined (L_divdi3) || \\\n-     defined (L_umoddi3) || defined (L_moddi3))\n+     defined (L_umoddi3) || defined (L_moddi3) || \\\n+     defined (L_divmoddi4))\n static inline __attribute__ ((__always_inline__))\n #endif\n UDWtype\n@@ -1269,6 +1272,34 @@ __moddi3 (DWtype u, DWtype v)\n }\n #endif\n \n+#ifdef L_divmoddi4\n+DWtype\n+__divmoddi4 (DWtype u, DWtype v, DWtype *rp)\n+{\n+  Wtype c1 = 0, c2 = 0;\n+  DWunion uu = {.ll = u};\n+  DWunion vv = {.ll = v};\n+  DWtype w;\n+  DWtype r;\n+\n+  if (uu.s.high < 0)\n+    c1 = ~c1, c2 = ~c2,\n+    uu.ll = -uu.ll;\n+  if (vv.s.high < 0)\n+    c1 = ~c1,\n+    vv.ll = -vv.ll;\n+\n+  w = __udivmoddi4 (uu.ll, vv.ll, (UDWtype*)&r);\n+  if (c1)\n+    w = -w;\n+  if (c2)\n+    r = -r;\n+\n+  *rp = r;\n+  return w;\n+}\n+#endif\n+\n #ifdef L_umoddi3\n UDWtype\n __umoddi3 (UDWtype u, UDWtype v)"}, {"sha": "15f970515f871f9a1f2258f6b7fbc5b51cb7f1b7", "filename": "libgcc/libgcc2.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183624479fd426c67928bb931a6474b15a8e8e95/libgcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183624479fd426c67928bb931a6474b15a8e8e95/libgcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcc2.h?ref=183624479fd426c67928bb931a6474b15a8e8e95", "patch": "@@ -281,6 +281,7 @@ typedef int shift_count_type __attribute__((mode (__libgcc_shift_count__)));\n #define __ashrdi3\t__NDW(ashr,3)\n #define __cmpdi2\t__NDW(cmp,2)\n #define __ucmpdi2\t__NDW(ucmp,2)\n+#define __divmoddi4\t__NDW(divmod,4)\n #define __udivmoddi4\t__NDW(udivmod,4)\n #define __fixunstfDI\t__NDW(fixunstf,)\n #define __fixtfdi\t__NDW(fixtf,)\n@@ -376,10 +377,12 @@ extern DWtype __divdi3 (DWtype, DWtype);\n extern UDWtype __udivdi3 (UDWtype, UDWtype);\n extern UDWtype __umoddi3 (UDWtype, UDWtype);\n extern DWtype __moddi3 (DWtype, DWtype);\n+extern DWtype __divmoddi4 (DWtype, DWtype, DWtype *);\n \n /* __udivmoddi4 is static inline when building other libgcc2 portions.  */\n #if (!defined (L_udivdi3) && !defined (L_divdi3) && \\\n-     !defined (L_umoddi3) && !defined (L_moddi3))\n+     !defined (L_umoddi3) && !defined (L_moddi3) && \\\n+     !defined (L_divmoddi4))\n extern UDWtype __udivmoddi4 (UDWtype, UDWtype, UDWtype *);\n #endif\n "}]}