{"sha": "af268547dec49c0356f622369582fe2e2d112586", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYyNjg1NDdkZWM0OWMwMzU2ZjYyMjM2OTU4MmZlMmUyZDExMjU4Ng==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2009-06-23T09:25:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-23T09:25:20Z"}, "message": "sem_ch3.adb (Derive_Subprogram): If the inherited subprogram is a primitive equality include it with its source...\n\n2009-06-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Derive_Subprogram): If the inherited subprogram is a\n\tprimitive equality include it with its source name even if the\n\toperation is currently invisible, to make sure that the corresponding\n\tslot in the dispatch table is reserved for the internal equality\n\tsubsequently generated during expansion.\n\nFrom-SVN: r148834", "tree": {"sha": "081eedd1be25cb10c2dfa1d7677f74523d56523d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/081eedd1be25cb10c2dfa1d7677f74523d56523d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af268547dec49c0356f622369582fe2e2d112586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af268547dec49c0356f622369582fe2e2d112586", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af268547dec49c0356f622369582fe2e2d112586", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af268547dec49c0356f622369582fe2e2d112586/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3e3b8daed9866b18e4a059f58989f42f23dc393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3e3b8daed9866b18e4a059f58989f42f23dc393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3e3b8daed9866b18e4a059f58989f42f23dc393"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "69ea312679496f9c962bcdec6b57a3bc355de70f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af268547dec49c0356f622369582fe2e2d112586/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af268547dec49c0356f622369582fe2e2d112586/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=af268547dec49c0356f622369582fe2e2d112586", "patch": "@@ -1,3 +1,11 @@\n+2009-06-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Derive_Subprogram): If the inherited subprogram is a\n+\tprimitive equality include it with its source name even if the\n+\toperation is currently invisible, to make sure that the corresponding\n+\tslot in the dispatch table is reserved for the internal equality\n+\tsubsequently generated during expansion.\n+\n 2009-06-23  Matthew Gingell  <gingell@adacore.com>\n \n \t* Makefile.rtl, a-stwiha.adb: Add a-stwiha.adb back."}, {"sha": "df1a5002a40b319e1919d1f29643f7b801a60e86", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af268547dec49c0356f622369582fe2e2d112586/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af268547dec49c0356f622369582fe2e2d112586/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=af268547dec49c0356f622369582fe2e2d112586", "patch": "@@ -12034,6 +12034,26 @@ package body Sem_Ch3 is\n       then\n          Set_Derived_Name;\n \n+      --  An inherited dispatching equality will be overridden by an internally\n+      --  generated one, or by an explicit one, so preserve its name and thus\n+      --  its entry in the dispatch table. Otherwise, if Parent_Subp is a\n+      --  private operation it may become invisible if the full view has\n+      --  progenitors, and the dispatch table will be malformed.\n+      --  We check that the type is limited to handle the anomalous declaration\n+      --  of Limited_Controlled, which is derived from a non-limited type, and\n+      --  which is handled specially elsewhere as well.\n+\n+      elsif Chars (Parent_Subp) = Name_Op_Eq\n+        and then Is_Dispatching_Operation (Parent_Subp)\n+        and then Etype (Parent_Subp) = Standard_Boolean\n+        and then\n+          not Is_Limited_Type (Etype (First_Formal (Parent_Subp)))\n+        and then\n+          Etype (First_Formal (Parent_Subp))\n+          = Etype (Next_Formal (First_Formal (Parent_Subp)))\n+      then\n+         Set_Derived_Name;\n+\n       --  If parent is hidden, this can be a regular derivation if the\n       --  parent is immediately visible in a non-instantiating context,\n       --  or if we are in the private part of an instance. This test\n@@ -12065,7 +12085,7 @@ package body Sem_Ch3 is\n       elsif Parent_Overrides_Interface_Primitive then\n          Set_Derived_Name;\n \n-      --  The type is inheriting a private operation, so enter\n+      --  Otherwise, the type is inheriting a private operation, so enter\n       --  it with a special name so it can't be overridden.\n \n       else"}]}