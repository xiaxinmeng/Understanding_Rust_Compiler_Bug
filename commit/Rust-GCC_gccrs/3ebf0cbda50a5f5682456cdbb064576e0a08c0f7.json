{"sha": "3ebf0cbda50a5f5682456cdbb064576e0a08c0f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ViZjBjYmRhNTBhNWY1NjgyNDU2Y2RiYjA2NDU3NmUwYTA4YzBmNw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-02-11T22:01:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-08T07:50:57Z"}, "message": "[Ada] Reuse Get_Index_Subtype in the special expander for GNATprove\n\n2020-06-08  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* exp_attr.adb, exp_util.ads, exp_util.adb (Get_Index_Subtype):\n\tMove from the body of Exp_Attr to Exp_Util and expose from the\n\tspec.\n\t* exp_spark.adb (Expand_SPARK_N_Attribute_Reference): Replace\n\tduplicated code with a call to Get_Index_Subtype.", "tree": {"sha": "50292a3cbd06b219734939b2e4524b638985242d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50292a3cbd06b219734939b2e4524b638985242d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e063ac3887d7e3b2992fa5fa12a57e743be6c1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e063ac3887d7e3b2992fa5fa12a57e743be6c1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e063ac3887d7e3b2992fa5fa12a57e743be6c1d"}], "stats": {"total": 96, "additions": 37, "deletions": 59}, "files": [{"sha": "aac5972c6f93e9440ff82cde3c4507baec996746", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=3ebf0cbda50a5f5682456cdbb064576e0a08c0f7", "patch": "@@ -192,10 +192,6 @@ package body Exp_Attr is\n    procedure Expand_Update_Attribute (N : Node_Id);\n    --  Handle the expansion of attribute Update\n \n-   function Get_Index_Subtype (N : Node_Id) return Entity_Id;\n-   --  Used for Last, Last, and Length, when the prefix is an array type.\n-   --  Obtains the corresponding index subtype.\n-\n    procedure Find_Fat_Info\n      (T        : Entity_Id;\n       Fat_Type : out Entity_Id;\n@@ -8518,35 +8514,6 @@ package body Exp_Attr is\n       return BT;\n    end Full_Base;\n \n-   -----------------------\n-   -- Get_Index_Subtype --\n-   -----------------------\n-\n-   function Get_Index_Subtype (N : Node_Id) return Node_Id is\n-      P_Type : Entity_Id := Etype (Prefix (N));\n-      Indx   : Node_Id;\n-      J      : Int;\n-\n-   begin\n-      if Is_Access_Type (P_Type) then\n-         P_Type := Designated_Type (P_Type);\n-      end if;\n-\n-      if No (Expressions (N)) then\n-         J := 1;\n-      else\n-         J := UI_To_Int (Expr_Value (First (Expressions (N))));\n-      end if;\n-\n-      Indx := First_Index (P_Type);\n-      while J > 1 loop\n-         Next_Index (Indx);\n-         J := J - 1;\n-      end loop;\n-\n-      return Etype (Indx);\n-   end Get_Index_Subtype;\n-\n    -------------------------------\n    -- Get_Stream_Convert_Pragma --\n    -------------------------------"}, {"sha": "5257f29677b132118d8913799d942ad321835861", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 4, "deletions": 26, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=3ebf0cbda50a5f5682456cdbb064576e0a08c0f7", "patch": "@@ -36,7 +36,6 @@ with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n-with Sem_Eval; use Sem_Eval;\n with Sem_Prag; use Sem_Prag;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n@@ -262,37 +261,16 @@ package body Exp_SPARK is\n          --  and 'Range_Length when the type is as big as Long_Long_Integer.\n \n          declare\n-            Typ : Entity_Id := Empty;\n+            Typ : Entity_Id;\n          begin\n             if Attr_Id = Attribute_Range_Length then\n                Typ := Etype (Prefix (N));\n \n             elsif Attr_Id = Attribute_Length then\n-               Typ := Etype (Prefix (N));\n+               Typ := Get_Index_Subtype (N);\n \n-               declare\n-                  Indx : Node_Id;\n-                  J    : Int;\n-\n-               begin\n-                  if Is_Access_Type (Typ) then\n-                     Typ := Designated_Type (Typ);\n-                  end if;\n-\n-                  if No (Expressions (N)) then\n-                     J := 1;\n-                  else\n-                     J := UI_To_Int (Expr_Value (First (Expressions (N))));\n-                  end if;\n-\n-                  Indx := First_Index (Typ);\n-                  while J > 1 loop\n-                     Next_Index (Indx);\n-                     J := J - 1;\n-                  end loop;\n-\n-                  Typ := Etype (Indx);\n-               end;\n+            else\n+               Typ := Empty;\n             end if;\n \n             Apply_Universal_Integer_Attribute_Checks (N);"}, {"sha": "47c5b4759292f145557652471446f191c8fb9274", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=3ebf0cbda50a5f5682456cdbb064576e0a08c0f7", "patch": "@@ -6575,6 +6575,35 @@ package body Exp_Util is\n       end;\n    end Get_Current_Value_Condition;\n \n+   -----------------------\n+   -- Get_Index_Subtype --\n+   -----------------------\n+\n+   function Get_Index_Subtype (N : Node_Id) return Node_Id is\n+      P_Type : Entity_Id := Etype (Prefix (N));\n+      Indx   : Node_Id;\n+      J      : Int;\n+\n+   begin\n+      if Is_Access_Type (P_Type) then\n+         P_Type := Designated_Type (P_Type);\n+      end if;\n+\n+      if No (Expressions (N)) then\n+         J := 1;\n+      else\n+         J := UI_To_Int (Expr_Value (First (Expressions (N))));\n+      end if;\n+\n+      Indx := First_Index (P_Type);\n+      while J > 1 loop\n+         Next_Index (Indx);\n+         J := J - 1;\n+      end loop;\n+\n+      return Etype (Indx);\n+   end Get_Index_Subtype;\n+\n    ---------------------\n    -- Get_Stream_Size --\n    ---------------------"}, {"sha": "e30a4f3bbf71368872e062e7eea2fae9ac7a6018", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ebf0cbda50a5f5682456cdbb064576e0a08c0f7/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=3ebf0cbda50a5f5682456cdbb064576e0a08c0f7", "patch": "@@ -724,6 +724,10 @@ package Exp_Util is\n    --  N_Op_Eq), or to determine the result of some other test in other cases\n    --  (e.g. no access check required if N_Op_Ne Null).\n \n+   function Get_Index_Subtype (N : Node_Id) return Entity_Id;\n+   --  Used for Last, Last, and Length, when the prefix is an array type.\n+   --  Obtains the corresponding index subtype.\n+\n    function Get_Stream_Size (E : Entity_Id) return Uint;\n    --  Return the stream size value of the subtype E\n "}]}