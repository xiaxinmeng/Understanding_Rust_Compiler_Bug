{"sha": "55dea919b6f3a8a18d50644aa235680c07a7b153", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVkZWE5MTliNmYzYThhMThkNTA2NDRhYTIzNTY4MGMwN2E3YjE1Mw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-06-16T08:33:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-06-16T08:33:09Z"}, "message": "function.h (enum function_frequency): Move declaration out of struct function.\n\n2006-06-16  Richard Guenther  <rguenther@suse.de>\n\n\t* function.h (enum function_frequency): Move declaration\n\tout of struct function.\n\t(struct function): Move bool fields and the enum to the bitfield\n\tsection.  Reorder elements to avoid padding.  Remove unused\n\tfields left over from the RTL inliner removal.\n\t* function.c (free_after_compilation): Do not zero removed fields.\n\t* Makefile.in (ipa-reference.o): Add $(FUNCTION_H) dependency.\n\t(ipa-type-escape.o): Likewise.\n\nFrom-SVN: r114712", "tree": {"sha": "06bf56f3d3b7725124bc6f55e04f93dde039d096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06bf56f3d3b7725124bc6f55e04f93dde039d096"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55dea919b6f3a8a18d50644aa235680c07a7b153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55dea919b6f3a8a18d50644aa235680c07a7b153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55dea919b6f3a8a18d50644aa235680c07a7b153", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55dea919b6f3a8a18d50644aa235680c07a7b153/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4e19405bc16c663afd58b08aeba3f8936679ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e19405bc16c663afd58b08aeba3f8936679ffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e19405bc16c663afd58b08aeba3f8936679ffc"}], "stats": {"total": 74, "additions": 44, "deletions": 30}, "files": [{"sha": "e600a4eb4598ad9a7771909ae0f2ab90ccb10527", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55dea919b6f3a8a18d50644aa235680c07a7b153/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55dea919b6f3a8a18d50644aa235680c07a7b153/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55dea919b6f3a8a18d50644aa235680c07a7b153", "patch": "@@ -1,3 +1,14 @@\n+2006-06-16  Richard Guenther  <rguenther@suse.de>\n+\n+\t* function.h (enum function_frequency): Move declaration\n+\tout of struct function.\n+\t(struct function): Move bool fields and the enum to the bitfield\n+\tsection.  Reorder elements to avoid padding.  Remove unused\n+\tfields left over from the RTL inliner removal.\n+\t* function.c (free_after_compilation): Do not zero removed fields.\n+\t* Makefile.in (ipa-reference.o): Add $(FUNCTION_H) dependency.\n+\t(ipa-type-escape.o): Likewise.\n+\n 2006-06-16  Richard Guenther  <rguenther@suse.de>\n \n \t* cgraph.h (struct cgraph_local_info): Turn bool elements"}, {"sha": "9197d4eb88c0408e06297eb146eaf7d258f4fba4", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55dea919b6f3a8a18d50644aa235680c07a7b153/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55dea919b6f3a8a18d50644aa235680c07a7b153/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=55dea919b6f3a8a18d50644aa235680c07a7b153", "patch": "@@ -2306,15 +2306,19 @@ ipa-utils.o : ipa-utils.c $(IPA_UTILS_H) $(CONFIG_H) $(SYSTEM_H) \\\n ipa-reference.o : ipa-reference.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_REFERENCE_H) $(IPA_UTILS_H) $(C_COMMON_H) \\\n-   $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(DIAGNOSTIC_H)  \n+   $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h \\\n+   $(DIAGNOSTIC_H) $(FUNCTION_H) \n+\n ipa-pure-const.o : ipa-pure-const.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_UTILS_H) $(C_COMMON_H) $(TARGET_H) \\\n    $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(DIAGNOSTIC_H)  \n ipa-type-escape.o : ipa-type-escape.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_TYPE_ESCAPE_H) $(IPA_UTILS_H) $(C_COMMON_H) \\\n-   $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(DIAGNOSTIC_H)  \n+   $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h \\\n+   $(DIAGNOSTIC_H) $(FUNCTION_H) \n+\n coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n    $(FUNCTION_H) toplev.h $(GGC_H) langhooks.h $(COVERAGE_H) gt-coverage.h \\"}, {"sha": "1a495ac1a056c9221514e3194f24f6a9134b75af", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55dea919b6f3a8a18d50644aa235680c07a7b153/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55dea919b6f3a8a18d50644aa235680c07a7b153/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=55dea919b6f3a8a18d50644aa235680c07a7b153", "patch": "@@ -332,8 +332,6 @@ free_after_compilation (struct function *f)\n   f->x_stack_check_probe_note = NULL;\n   f->x_arg_pointer_save_area = NULL;\n   f->x_parm_birth_insn = NULL;\n-  f->original_arg_vector = NULL;\n-  f->original_decl_initial = NULL;\n   f->epilogue_delay_list = NULL;\n }\n \f"}, {"sha": "1903b165f419a05d7caa5cbbcb9e823f1d583a5a", "filename": "gcc/function.h", "status": "modified", "additions": 27, "deletions": 26, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55dea919b6f3a8a18d50644aa235680c07a7b153/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55dea919b6f3a8a18d50644aa235680c07a7b153/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=55dea919b6f3a8a18d50644aa235680c07a7b153", "patch": "@@ -165,6 +165,17 @@ typedef struct temp_slot *temp_slot_p;\n DEF_VEC_P(temp_slot_p);\n DEF_VEC_ALLOC_P(temp_slot_p,gc);\n \n+enum function_frequency {\n+  /* This function most likely won't be executed at all.\n+     (set only when profile feedback is available).  */\n+  FUNCTION_FREQUENCY_UNLIKELY_EXECUTED,\n+  /* The default value.  */\n+  FUNCTION_FREQUENCY_NORMAL,\n+  /* Optimize this function hard\n+     (set only when profile feedback is available).  */\n+  FUNCTION_FREQUENCY_HOT\n+};\n+\n /* This structure can save all the important global and static variables\n    describing the status of the current function.  */\n \n@@ -177,7 +188,6 @@ struct function GTY(())\n \n   /* The control flow graph for this function.  */\n   struct control_flow_graph *cfg;\n-  bool after_inlining;\n \n   /* For function.c.  */\n \n@@ -277,18 +287,12 @@ struct function GTY(())\n   /* List of available temp slots.  */\n   struct temp_slot *x_avail_temp_slots;\n \n-  /* Current nesting level for temporaries.  */\n-  int x_temp_slot_level;\n-\n   /* This slot is initialized as 0 and is added to\n      during the nested function.  */\n   struct var_refs_queue *fixup_var_refs_queue;\n \n-  /* For integrate.c.  */\n-  int inlinable;\n-  int no_debugging_symbols;\n-  rtvec original_arg_vector;\n-  tree original_decl_initial;\n+  /* Current nesting level for temporaries.  */\n+  int x_temp_slot_level;\n \n   /* Highest label number in current function.  */\n   int inl_max_label_num;\n@@ -307,14 +311,12 @@ struct function GTY(())\n \n   /* tm.h can use this to store whatever it likes.  */\n   struct machine_function * GTY ((maybe_undef)) machine;\n+\n   /* The largest alignment of slot allocated on the stack.  */\n   unsigned int stack_alignment_needed;\n+\n   /* Preferred alignment of the end of stack frame.  */\n   unsigned int preferred_stack_boundary;\n-  /* Set when the call to function itself has been emit.  */\n-  bool recursive_call_emit;\n-  /* Set when the tail call has been produced.  */\n-  bool tail_call_emit;\n \n   /* Language-specific code can use this to store whatever it likes.  */\n   struct language_function * language;\n@@ -328,19 +330,6 @@ struct function GTY(())\n      delay list for them is recorded here.  */\n   rtx epilogue_delay_list;\n \n-  /* How commonly executed the function is.  Initialized during branch\n-     probabilities pass.  */\n-  enum function_frequency {\n-    /* This function most likely won't be executed at all.\n-       (set only when profile feedback is available).  */\n-    FUNCTION_FREQUENCY_UNLIKELY_EXECUTED,\n-    /* The default value.  */\n-    FUNCTION_FREQUENCY_NORMAL,\n-    /* Optimize this function hard\n-       (set only when profile feedback is available).  */\n-    FUNCTION_FREQUENCY_HOT\n-  } function_frequency;\n-\n   /* Maximal number of entities in the single jumptable.  Used to estimate\n      final flowgraph size.  */\n   int max_jumptable_ents;\n@@ -454,6 +443,18 @@ struct function GTY(())\n   /* Nonzero if code to initialize arg_pointer_save_area has been emitted.  */\n   unsigned int arg_pointer_save_area_init : 1;\n \n+  unsigned int after_inlining : 1;\n+\n+  /* Set when the call to function itself has been emit.  */\n+  unsigned int recursive_call_emit : 1;\n+\n+  /* Set when the tail call has been produced.  */\n+  unsigned int tail_call_emit : 1;\n+\n+  /* How commonly executed the function is.  Initialized during branch\n+     probabilities pass.  */\n+  ENUM_BITFIELD (function_frequency) function_frequency : 2;\n+\n   /* Number of units of general registers that need saving in stdarg\n      function.  What unit is depends on the backend, either it is number\n      of bytes, or it can be number of registers.  */"}]}