{"sha": "cfb120b55dc31f9d6dc27a63747ec436fd6a80f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZiMTIwYjU1ZGMzMWY5ZDZkYzI3YTYzNzQ3ZWM0MzZmZDZhODBmMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T08:12:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T08:12:11Z"}, "message": "[multiple changes]\n\n2009-07-13  Robert Dewar  <dewar@adacore.com>\n\n\t* i-cobol.ads: Minor code fix (2**4 instead of 16 as modulus to avoid\n\twarning).\n\n\t* par-ch4.adb: Minor reformatting\n\n2009-07-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb, freeze.ads, exp_aggr.adb: Rename Expand_Atomic_Aggregate\n\t=> Is_Atomic_Aggregate\n\nFrom-SVN: r149548", "tree": {"sha": "56a3f2468cc8daed245bc41f9016ad9f88c5cbf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56a3f2468cc8daed245bc41f9016ad9f88c5cbf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/comments", "author": null, "committer": null, "parents": [{"sha": "01e17342864c6703b95bed379229fa92080a76e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e17342864c6703b95bed379229fa92080a76e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01e17342864c6703b95bed379229fa92080a76e8"}], "stats": {"total": 66, "additions": 37, "deletions": 29}, "files": [{"sha": "fb20bf253b79b2fc827710655ee24385566f6275", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cfb120b55dc31f9d6dc27a63747ec436fd6a80f2", "patch": "@@ -1,3 +1,15 @@\n+2009-07-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* i-cobol.ads: Minor code fix (2**4 instead of 16 as modulus to avoid\n+\twarning).\n+\n+\t* par-ch4.adb: Minor reformatting\n+\n+2009-07-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb, freeze.ads, exp_aggr.adb: Rename Expand_Atomic_Aggregate\n+\t=> Is_Atomic_Aggregate\n+\n 2009-07-13  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-nmsc.adb: Avoid traversing the list of source files if"}, {"sha": "17862fe778e3b07ae11214515ba0df9052a7a209", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=cfb120b55dc31f9d6dc27a63747ec436fd6a80f2", "patch": "@@ -5476,7 +5476,7 @@ package body Exp_Aggr is\n \n       if Is_Atomic (Typ)\n         and then Comes_From_Source (Parent (N))\n-        and then Expand_Atomic_Aggregate (N, Typ)\n+        and then Is_Atomic_Aggregate (N, Typ)\n       then\n          return;\n "}, {"sha": "152d982f68914ffd0e55aa6330f08885fef83a1a", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=cfb120b55dc31f9d6dc27a63747ec436fd6a80f2", "patch": "@@ -1111,11 +1111,11 @@ package body Freeze is\n       end loop;\n    end Check_Unsigned_Type;\n \n-   -----------------------------\n-   -- Expand_Atomic_Aggregate --\n-   -----------------------------\n+   -------------------------\n+   -- Is_Atomic_Aggregate --\n+   -------------------------\n \n-   function  Expand_Atomic_Aggregate\n+   function  Is_Atomic_Aggregate\n      (E   : Entity_Id;\n       Typ : Entity_Id) return Boolean\n    is\n@@ -1154,7 +1154,7 @@ package body Freeze is\n       else\n          return False;\n       end if;\n-   end Expand_Atomic_Aggregate;\n+   end Is_Atomic_Aggregate;\n \n    ----------------\n    -- Freeze_All --\n@@ -2364,7 +2364,7 @@ package body Freeze is\n            and then Present (Expression (Parent (E)))\n            and then Nkind (Expression (Parent (E))) = N_Aggregate\n            and then\n-             Expand_Atomic_Aggregate (Expression (Parent (E)), Etype (E))\n+             Is_Atomic_Aggregate (Expression (Parent (E)), Etype (E))\n          then\n             null;\n          end if;"}, {"sha": "f78321057c91bfcad44bcc978c790997dc26f046", "filename": "gcc/ada/freeze.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2Ffreeze.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2Ffreeze.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.ads?ref=cfb120b55dc31f9d6dc27a63747ec436fd6a80f2", "patch": "@@ -175,7 +175,7 @@ package Freeze is\n    --  do not allow a size clause if the size would not otherwise be known at\n    --  compile time in any case.\n \n-   function  Expand_Atomic_Aggregate\n+   function  Is_Atomic_Aggregate\n      (E   : Entity_Id;\n       Typ : Entity_Id) return Boolean;\n "}, {"sha": "ad885e4a91a9fa6ba381fa1b39c09db791208b2a", "filename": "gcc/ada/i-cobol.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2Fi-cobol.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2Fi-cobol.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cobol.ads?ref=cfb120b55dc31f9d6dc27a63747ec436fd6a80f2", "patch": "@@ -55,7 +55,7 @@ package Interfaces.COBOL is\n    Max_Digits_Binary      : constant := 9;\n    Max_Digits_Long_Binary : constant := 18;\n \n-   type Decimal_Element is mod 16;\n+   type Decimal_Element is mod 2**4;\n    type Packed_Decimal is array (Positive range <>) of Decimal_Element;\n    pragma Pack (Packed_Decimal);\n "}, {"sha": "6bfc40af7adf2f1d66482aafb9bda40ad2e632f3", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb120b55dc31f9d6dc27a63747ec436fd6a80f2/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=cfb120b55dc31f9d6dc27a63747ec436fd6a80f2", "patch": "@@ -857,7 +857,6 @@ package body Ch4 is\n    exception\n       when Error_Resync =>\n          return Error;\n-\n    end P_Function_Name;\n \n    --  This function parses a restricted form of Names which are either\n@@ -929,7 +928,6 @@ package body Ch4 is\n    exception\n       when Error_Resync =>\n          return Error;\n-\n    end P_Qualified_Simple_Name;\n \n    --  This procedure differs from P_Qualified_Simple_Name only in that it\n@@ -994,7 +992,6 @@ package body Ch4 is\n          Set_Selector_Name (Selector_Node, Designator_Node);\n          return Selector_Node;\n       end if;\n-\n    end P_Qualified_Simple_Name_Resync;\n \n    ----------------------\n@@ -2106,7 +2103,6 @@ package body Ch4 is\n          Resync_Expression;\n          Expr_Form := EF_Simple;\n          return Error;\n-\n    end P_Simple_Expression;\n \n    -----------------------------------------------\n@@ -2482,15 +2478,15 @@ package body Ch4 is\n    function P_Relational_Operator return Node_Kind is\n       Op_Kind : Node_Kind;\n       Relop_Node : constant array (Token_Class_Relop) of Node_Kind :=\n-        (Tok_Less           => N_Op_Lt,\n-         Tok_Equal          => N_Op_Eq,\n-         Tok_Greater        => N_Op_Gt,\n-         Tok_Not_Equal      => N_Op_Ne,\n-         Tok_Greater_Equal  => N_Op_Ge,\n-         Tok_Less_Equal     => N_Op_Le,\n-         Tok_In             => N_In,\n-         Tok_Not            => N_Not_In,\n-         Tok_Box            => N_Op_Ne);\n+                     (Tok_Less          => N_Op_Lt,\n+                      Tok_Equal         => N_Op_Eq,\n+                      Tok_Greater       => N_Op_Gt,\n+                      Tok_Not_Equal     => N_Op_Ne,\n+                      Tok_Greater_Equal => N_Op_Ge,\n+                      Tok_Less_Equal    => N_Op_Le,\n+                      Tok_In            => N_In,\n+                      Tok_Not           => N_Not_In,\n+                      Tok_Box           => N_Op_Ne);\n \n    begin\n       if Token = Tok_Box then\n@@ -2528,9 +2524,9 @@ package body Ch4 is\n \n    function P_Binary_Adding_Operator return Node_Kind is\n       Addop_Node : constant array (Token_Class_Binary_Addop) of Node_Kind :=\n-        (Tok_Ampersand      => N_Op_Concat,\n-         Tok_Minus          => N_Op_Subtract,\n-         Tok_Plus           => N_Op_Add);\n+                     (Tok_Ampersand => N_Op_Concat,\n+                      Tok_Minus     => N_Op_Subtract,\n+                      Tok_Plus      => N_Op_Add);\n    begin\n       return Addop_Node (Token);\n    end P_Binary_Adding_Operator;\n@@ -2551,8 +2547,8 @@ package body Ch4 is\n \n    function P_Unary_Adding_Operator return Node_Kind is\n       Addop_Node : constant array (Token_Class_Unary_Addop) of Node_Kind :=\n-        (Tok_Minus          => N_Op_Minus,\n-         Tok_Plus           => N_Op_Plus);\n+                     (Tok_Minus => N_Op_Minus,\n+                      Tok_Plus  => N_Op_Plus);\n    begin\n       return Addop_Node (Token);\n    end P_Unary_Adding_Operator;\n@@ -2670,8 +2666,8 @@ package body Ch4 is\n       Inside_Conditional_Expression := Inside_Conditional_Expression + 1;\n \n       if Token = Tok_If and then not Extensions_Allowed then\n-         Error_Msg_SC (\"conditional expression is an Ada extension\");\n-         Error_Msg_SC (\"\\use -gnatX switch to compile this unit\");\n+         Error_Msg_SC (\"|conditional expression is an Ada extension\");\n+         Error_Msg_SC (\"\\|use -gnatX switch to compile this unit\");\n       end if;\n \n       Scan; -- past IF or ELSIF"}]}