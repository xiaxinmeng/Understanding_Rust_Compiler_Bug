{"sha": "52cdac6823237d0ff46f245f35b44a24b8c9fc63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJjZGFjNjgyMzIzN2QwZmY0NmYyNDVmMzViNDRhMjRiOGM5ZmM2Mw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2020-07-24T21:50:05Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2020-07-24T21:50:05Z"}, "message": "testsuite: Adjust patchable_function tests for mmix.\n\nThere's no reason anyone would want to use the \"patchable function\"\nfeature for MMIX and also no reason to exclude those tests.  For MMIX,\nthe NOP equivalent is SWYM (\"swymming\" is a healthy exercise).\nText-wise, making the tests pass by adjusting the regexp, is shorter,\nand it seems unlikely to both appear as a mnemonic for other targets\n*and* being emitted in uppercase.\n\ngcc/testsuite:\n\n\t* c-c++-common/patchable_function_entry-decl.c,\n\tc-c++-common/patchable_function_entry-default.c,\n\tc-c++-common/patchable_function_entry-definition.c: Adjust for mmix.", "tree": {"sha": "ea65fbb89bd51820443a5df8c023a80c7eef570a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea65fbb89bd51820443a5df8c023a80c7eef570a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52cdac6823237d0ff46f245f35b44a24b8c9fc63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52cdac6823237d0ff46f245f35b44a24b8c9fc63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52cdac6823237d0ff46f245f35b44a24b8c9fc63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52cdac6823237d0ff46f245f35b44a24b8c9fc63/comments", "author": null, "committer": null, "parents": [{"sha": "07c70c29affe7c6d01ab37cc7bc725fd1351f668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07c70c29affe7c6d01ab37cc7bc725fd1351f668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07c70c29affe7c6d01ab37cc7bc725fd1351f668"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3ce7a5b8790ddc91f541c874639759766d821a23", "filename": "gcc/testsuite/c-c++-common/patchable_function_entry-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52cdac6823237d0ff46f245f35b44a24b8c9fc63/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpatchable_function_entry-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52cdac6823237d0ff46f245f35b44a24b8c9fc63/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpatchable_function_entry-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpatchable_function_entry-decl.c?ref=52cdac6823237d0ff46f245f35b44a24b8c9fc63", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { ! { nvptx*-*-* visium-*-* } } } } */\n /* { dg-options \"-O2 -fpatchable-function-entry=3,1\" } */\n /* { dg-additional-options \"-fno-pie\" { target sparc*-*-* } } */\n-/* { dg-final { scan-assembler-times \"nop|NOP\" 2 { target { ! { alpha*-*-* } } } } } */\n+/* { dg-final { scan-assembler-times \"nop|NOP|SWYM\" 2 { target { ! { alpha*-*-* } } } } } */\n /* { dg-final { scan-assembler-times \"bis\" 2 { target alpha*-*-* } } } */\n \n extern int a;"}, {"sha": "7036f7bfbea4c6700a212ffa213cb1df694e9734", "filename": "gcc/testsuite/c-c++-common/patchable_function_entry-default.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52cdac6823237d0ff46f245f35b44a24b8c9fc63/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpatchable_function_entry-default.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52cdac6823237d0ff46f245f35b44a24b8c9fc63/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpatchable_function_entry-default.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpatchable_function_entry-default.c?ref=52cdac6823237d0ff46f245f35b44a24b8c9fc63", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { ! { nvptx*-*-* visium-*-* } } } } */\n /* { dg-options \"-O2 -fpatchable-function-entry=3,1\" } */\n /* { dg-additional-options \"-fno-pie\" { target sparc*-*-* } } */\n-/* { dg-final { scan-assembler-times \"nop|NOP\" 3 { target { ! { alpha*-*-* } } } } } */\n+/* { dg-final { scan-assembler-times \"nop|NOP|SWYM\" 3 { target { ! { alpha*-*-* } } } } } */\n /* { dg-final { scan-assembler-times \"bis\" 3 { target alpha*-*-* } } } */\n \n extern int a;"}, {"sha": "ad7d7a9e0768f954931c1b3fea0a8c86c304bf04", "filename": "gcc/testsuite/c-c++-common/patchable_function_entry-definition.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52cdac6823237d0ff46f245f35b44a24b8c9fc63/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpatchable_function_entry-definition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52cdac6823237d0ff46f245f35b44a24b8c9fc63/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpatchable_function_entry-definition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpatchable_function_entry-definition.c?ref=52cdac6823237d0ff46f245f35b44a24b8c9fc63", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { ! { nvptx*-*-* visium-*-* } } } } */\n /* { dg-options \"-O2 -fpatchable-function-entry=3,1\" } */\n /* { dg-additional-options \"-fno-pie\" { target sparc*-*-* } } */\n-/* { dg-final { scan-assembler-times \"nop|NOP\" 1 { target { ! { alpha*-*-* } } } } } */\n+/* { dg-final { scan-assembler-times \"nop|NOP|SWYM\" 1 { target { ! { alpha*-*-* } } } } } */\n /* { dg-final { scan-assembler-times \"bis\" 1 { target alpha*-*-* } } } */\n \n extern int a;"}]}