{"sha": "e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA2ZDNmNWRkN2QwYzZiNGEyMGZlODEzZTZlZTVhZGRkMDk3ZjU2MA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-07T15:05:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-07T15:39:24Z"}, "message": "libstdc++: Fix filesystem::path construction from COW string [PR 99805]\n\nCalling the non-const data() member on a COW string makes it \"leaked\",\npossibly resulting in reallocating the string to ensure a unique owner.\n\nThe path::_M_split_cmpts() member parses its _M_pathname string using\nstring_view objects and then calls _M_pathname.data() to find the offset\nof each string_view from the start of the string. However because\n_M_pathname is non-const that will cause a COW string to reallocate if\nit happens to be shared with another string object. This results in the\noffsets calculated for each component being wrong (i.e. undefined)\nbecause the string views no longer refer to substrings of the\n_M_pathname member. The fix is to use the parse.offset(c) member which\ngets the offset safely.\n\nThe bug only happens for the path(string_type&&) constructor and only\nfor COW strings. When constructed from an lvalue string the string's\ncontents are copied rather than just incrementing the refcount, so\nthere's no reallocation when calling the non-const data() member. The\ntestsuite changes check the lvalue case anyway, because we should\nprobably change the deep copying to just be a refcount increment (by\nadding a path(const string_type&) constructor or an overload for\n__effective_range(const string_type&), for COW strings only).\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/99805\n\t* src/c++17/fs_path.cc (path::_M_split_cmpts): Do not call\n\tnon-const member on _M_pathname, to avoid copy-on-write.\n\t* testsuite/27_io/filesystem/path/decompose/parent_path.cc:\n\tCheck construction from strings that might be shared.", "tree": {"sha": "aa9c5749be11e6bf194005c90983845beb5f8cfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa9c5749be11e6bf194005c90983845beb5f8cfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f3d9104610cb2058cf091707a20c1c6eff8d470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3d9104610cb2058cf091707a20c1c6eff8d470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f3d9104610cb2058cf091707a20c1c6eff8d470"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "506ff25f9a6db19ad8062a224c07c61e19f31f22", "filename": "libstdc++-v3/src/c++17/fs_path.cc", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc?ref=e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560", "patch": "@@ -1907,10 +1907,9 @@ path::_M_split_cmpts()\n \t  _M_cmpts.type(_Type::_Multi);\n \t  _M_cmpts.reserve(_M_cmpts.size() + buf.size());\n \t  auto output = _M_cmpts._M_impl->end();\n-\t  for (auto& c : buf)\n+\t  for (const auto& c : buf)\n \t    {\n-\t      auto pos = c.str.data() - _M_pathname.data();\n-\t      ::new(output++) _Cmpt(c.str, c.type, pos);\n+\t      ::new(output++) _Cmpt(c.str, c.type, parser.offset(c));\n \t      ++_M_cmpts._M_impl->_M_size;\n \t    }\n \t  next = buf.begin();\n@@ -1930,9 +1929,8 @@ path::_M_split_cmpts()\n       auto output = _M_cmpts._M_impl->end();\n       for (int i = 0; i < n; ++i)\n \t{\n-\t  auto c = buf[i];\n-\t  auto pos = c.str.data() - _M_pathname.data();\n-\t  ::new(output++) _Cmpt(c.str, c.type, pos);\n+\t  const auto& c = buf[i];\n+\t  ::new(output++) _Cmpt(c.str, c.type, parser.offset(c));\n \t  ++_M_cmpts._M_impl->_M_size;\n \t}\n     }"}, {"sha": "b6ca525bc82c3e23805d3fa831dc2eaaaee38ab3", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/decompose/parent_path.cc", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fdecompose%2Fparent_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fdecompose%2Fparent_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fdecompose%2Fparent_path.cc?ref=e06d3f5dd7d0c6b4a20fe813e6ee5addd097f560", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 8.4.9 path decomposition [path.decompose]\n+// C++17 30.10.8.4.9 path decomposition [fs.path.decompose]\n \n #include <filesystem>\n #include <testsuite_hooks.h>\n@@ -64,9 +64,32 @@ test02()\n   }\n }\n \n+void\n+test03()\n+{\n+  const std::string narrow = \"there/are/no/wrong/turns/only/unexpected/paths\";\n+  const path::string_type s(narrow.begin(), narrow.end());\n+  const auto s1 = s.substr(0, s.length() - 6);    // remove \"/paths\"\n+  const auto s2 = s1.substr(0, s1.length() - 16); // remove \"/only/...\"\n+\n+  // PR libstdc++/99805\n+  path p = path::string_type(s);\n+  auto pp = p.parent_path();\n+  VERIFY( pp.native() == s1 );\n+  pp = pp.parent_path().parent_path();\n+  VERIFY( pp.native() == s2 );\n+\n+  path from_lval(s);\n+  pp = from_lval.parent_path();\n+  VERIFY( pp.native() == s1 );\n+  pp = pp.parent_path().parent_path();\n+  VERIFY( pp.native() == s2 );\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n+  test03();\n }"}]}