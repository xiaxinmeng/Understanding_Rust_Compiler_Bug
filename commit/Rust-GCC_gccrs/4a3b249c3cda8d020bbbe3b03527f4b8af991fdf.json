{"sha": "4a3b249c3cda8d020bbbe3b03527f4b8af991fdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEzYjI0OWMzY2RhOGQwMjBiYmJlM2IwMzUyN2Y0YjhhZjk5MWZkZg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-04-16T09:55:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-16T09:55:55Z"}, "message": "exp_ch6.adb: Add comments\n\n2009-04-16  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch6.adb: Add comments\n\n\t* rtsfind.ads: Add entries for s-conca? routines\n\nFrom-SVN: r146160", "tree": {"sha": "963c3a6e8bb1f220a99a8d8802a85a4db2990d41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/963c3a6e8bb1f220a99a8d8802a85a4db2990d41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a3b249c3cda8d020bbbe3b03527f4b8af991fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a3b249c3cda8d020bbbe3b03527f4b8af991fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a3b249c3cda8d020bbbe3b03527f4b8af991fdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a3b249c3cda8d020bbbe3b03527f4b8af991fdf/comments", "author": null, "committer": null, "parents": [{"sha": "148141702ba2f5d5b251c1a70be58d36b7cdc952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148141702ba2f5d5b251c1a70be58d36b7cdc952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/148141702ba2f5d5b251c1a70be58d36b7cdc952"}], "stats": {"total": 195, "additions": 114, "deletions": 81}, "files": [{"sha": "f395227c5b425d61043d42c2d1694fd6c390303d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b249c3cda8d020bbbe3b03527f4b8af991fdf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b249c3cda8d020bbbe3b03527f4b8af991fdf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4a3b249c3cda8d020bbbe3b03527f4b8af991fdf", "patch": "@@ -1,3 +1,9 @@\n+2009-04-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch6.adb: Add comments\n+\n+\t* rtsfind.ads: Add entries for s-conca? routines\n+\n 2009-04-15  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gcc-interface/Make-lang.in: Update dependencies."}, {"sha": "66a3d0edd6c9049919a4702acdb28c35b4b65503", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 46, "deletions": 44, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b249c3cda8d020bbbe3b03527f4b8af991fdf/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b249c3cda8d020bbbe3b03527f4b8af991fdf/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=4a3b249c3cda8d020bbbe3b03527f4b8af991fdf", "patch": "@@ -3795,11 +3795,11 @@ package body Exp_Ch6 is\n             --  its value is captured in a renaming declaration. Otherwise\n             --  declare a local constant initialized with the actual.\n \n-            --  We also  use a renaming declaration for expressions of an\n-            --  array type that is not bit-packed, both for efficiency reasons\n-            --  and to respect the semantics of the call: in most cases the\n-            --  original call will pass the parameter by reference, and thus\n-            --  the inlined code will have the same semantics.\n+            --  We also use a renaming declaration for expressions of an array\n+            --  type that is not bit-packed, both for efficiency reasons and to\n+            --  respect the semantics of the call: in most cases the original\n+            --  call will pass the parameter by reference, and thus the inlined\n+            --  code will have the same semantics.\n \n             if Ekind (F) = E_In_Parameter\n               and then not Is_Limited_Type (Etype (A))\n@@ -3857,9 +3857,9 @@ package body Exp_Ch6 is\n             Set_Is_Internal (Temp);\n \n             --  For the unconstrained case, the generated temporary has the\n-            --  same constrained declaration as the result variable.\n-            --  It may eventually be possible to remove that temporary and\n-            --  use the result variable directly.\n+            --  same constrained declaration as the result variable. It may\n+            --  eventually be possible to remove that temporary and use the\n+            --  result variable directly.\n \n             if Is_Unc then\n                Decl :=\n@@ -3919,7 +3919,7 @@ package body Exp_Ch6 is\n       end if;\n \n       --  Analyze Blk with In_Inlined_Body set, to avoid spurious errors on\n-      --  conflicting private views that Gigi would ignore. If this is\n+      --  conflicting private views that Gigi would ignore. If this is a\n       --  predefined unit, analyze with checks off, as is done in the non-\n       --  inlined run-time units.\n \n@@ -3982,9 +3982,9 @@ package body Exp_Ch6 is\n    begin\n       Expand_Call (N);\n \n-      --  If the return value of a foreign compiled function is\n-      --  VAX Float then expand the return (adjusts the location\n-      --  of the return value on Alpha/VMS, noop everywhere else).\n+      --  If the return value of a foreign compiled function is VAX Float, then\n+      --  expand the return (adjusts the location of the return value on\n+      --  Alpha/VMS, no-op everywhere else).\n       --  Comes_From_Source intercepts recursive expansion.\n \n       if Vax_Float (Etype (N))\n@@ -4011,11 +4011,11 @@ package body Exp_Ch6 is\n    -- Expand_N_Subprogram_Body --\n    ------------------------------\n \n-   --  Add poll call if ATC polling is enabled, unless the body will be\n-   --  inlined by the back-end.\n+   --  Add poll call if ATC polling is enabled, unless the body will be inlined\n+   --  by the back-end.\n \n    --  Add dummy push/pop label nodes at start and end to clear any local\n-   --  exception indications if local-exception-to-goto optimization active.\n+   --  exception indications if local-exception-to-goto optimization is active.\n \n    --  Add return statement if last statement in body is not a return statement\n    --  (this makes things easier on Gigi which does not want to have to handle\n@@ -4047,8 +4047,8 @@ package body Exp_Ch6 is\n       procedure Add_Return (S : List_Id);\n       --  Append a return statement to the statement sequence S if the last\n       --  statement is not already a return or a goto statement. Note that\n-      --  the latter test is not critical, it does not matter if we add a\n-      --  few extra returns, since they get eliminated anyway later on.\n+      --  the latter test is not critical, it does not matter if we add a few\n+      --  extra returns, since they get eliminated anyway later on.\n \n       ----------------\n       -- Add_Return --\n@@ -4094,11 +4094,11 @@ package body Exp_Ch6 is\n                Rtn : constant Node_Id := Make_Simple_Return_Statement (Loc);\n \n             begin\n-               --  Append return statement, and set analyzed manually. We\n-               --  can't call Analyze on this return since the scope is wrong.\n+               --  Append return statement, and set analyzed manually. We can't\n+               --  call Analyze on this return since the scope is wrong.\n \n                --  Note: it almost works to push the scope and then do the\n-               --  analyze call, but something goes wrong in some weird cases\n+               --  Analyze call, but something goes wrong in some weird cases\n                --  and it is not worth worrying about ???\n \n                Append_To (S, Rtn);\n@@ -4124,9 +4124,9 @@ package body Exp_Ch6 is\n    --  Start of processing for Expand_N_Subprogram_Body\n \n    begin\n-      --  Set L to either the list of declarations if present, or\n-      --  to the list of statements if no declarations are present.\n-      --  This is used to insert new stuff at the start.\n+      --  Set L to either the list of declarations if present, or to the list\n+      --  of statements if no declarations are present. This is used to insert\n+      --  new stuff at the start.\n \n       if Is_Non_Empty_List (Declarations (N)) then\n          L := Declarations (N);\n@@ -4184,11 +4184,13 @@ package body Exp_Ch6 is\n \n       --  Need poll on entry to subprogram if polling enabled. We only do this\n       --  for non-empty subprograms, since it does not seem necessary to poll\n-      --  for a dummy null subprogram. Do not add polling point if calls to\n-      --  this subprogram will be inlined by the back-end, to avoid repeated\n-      --  polling points in nested inlinings.\n+      --  for a dummy null subprogram.\n \n       if Is_Non_Empty_List (L) then\n+\n+         --  Do not add a polling call if the subprogram is to be inlined by\n+         --  the back-end, to avoid repeated calls with multiple inlinings.\n+\n          if Is_Inlined (Spec_Id)\n            and then Front_End_Inlining\n            and then Optimization_Level > 1\n@@ -4199,18 +4201,18 @@ package body Exp_Ch6 is\n          end if;\n       end if;\n \n-      --  If this is a Pure function which has any parameters whose root\n-      --  type is System.Address, reset the Pure indication, since it will\n-      --  likely cause incorrect code to be generated as the parameter is\n-      --  probably a pointer, and the fact that the same pointer is passed\n-      --  does not mean that the same value is being referenced.\n+      --  If this is a Pure function which has any parameters whose root type\n+      --  is System.Address, reset the Pure indication, since it will likely\n+      --  cause incorrect code to be generated as the parameter is probably\n+      --  a pointer, and the fact that the same pointer is passed does not mean\n+      --  that the same value is being referenced.\n \n       --  Note that if the programmer gave an explicit Pure_Function pragma,\n       --  then we believe the programmer, and leave the subprogram Pure.\n \n-      --  This code should probably be at the freeze point, so that it\n-      --  happens even on a -gnatc (or more importantly -gnatt) compile\n-      --  so that the semantic tree has Is_Pure set properly ???\n+      --  This code should probably be at the freeze point, so that it happens\n+      --  even on a -gnatc (or more importantly -gnatt) compile, so that the\n+      --  semantic tree has Is_Pure set properly ???\n \n       if Is_Pure (Spec_Id)\n         and then Is_Subprogram (Spec_Id)\n@@ -4296,8 +4298,8 @@ package body Exp_Ch6 is\n          Set_Discriminals (Parent (Base_Type (Scope (Spec_Id))));\n       end if;\n \n-      --  Returns_By_Ref flag is normally set when the subprogram is frozen\n-      --  but subprograms with no specs are not frozen.\n+      --  Returns_By_Ref flag is normally set when the subprogram is frozen but\n+      --  subprograms with no specs are not frozen.\n \n       declare\n          Typ  : constant Entity_Id := Etype (Spec_Id);\n@@ -4318,8 +4320,8 @@ package body Exp_Ch6 is\n          end if;\n       end;\n \n-      --  For a procedure, we add a return for all possible syntactic ends\n-      --  of the subprogram.\n+      --  For a procedure, we add a return for all possible syntactic ends of\n+      --  the subprogram.\n \n       if Ekind (Spec_Id) = E_Procedure\n         or else Ekind (Spec_Id) = E_Generic_Procedure\n@@ -4352,13 +4354,13 @@ package body Exp_Ch6 is\n       --       raise Program_Error;\n       --    end;\n \n-      --  This approach is necessary because the raise must be signalled\n-      --  to the caller, not handled by any local handler (RM 6.4(11)).\n+      --  This approach is necessary because the raise must be signalled to the\n+      --  caller, not handled by any local handler (RM 6.4(11)).\n \n-      --  Note: we do not need to analyze the constructed sequence here,\n-      --  since it has no handler, and an attempt to analyze the handled\n-      --  statement sequence twice is risky in various ways (e.g. the\n-      --  issue of expanding cleanup actions twice).\n+      --  Note: we do not need to analyze the constructed sequence here, since\n+      --  it has no handler, and an attempt to analyze the handled statement\n+      --  sequence twice is risky in various ways (e.g. the issue of expanding\n+      --  cleanup actions twice).\n \n       elsif Has_Missing_Return (Spec_Id) then\n          declare"}, {"sha": "b9be1d5ae7d90f0890e093a16e56d587ce6df435", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 62, "deletions": 37, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b249c3cda8d020bbbe3b03527f4b8af991fdf/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b249c3cda8d020bbbe3b03527f4b8af991fdf/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=4a3b249c3cda8d020bbbe3b03527f4b8af991fdf", "patch": "@@ -36,37 +36,36 @@ package Rtsfind is\n    -- Runtime Unit Table --\n    ------------------------\n \n-   --  The following type includes an enumeration entry for each runtime\n-   --  unit. The enumeration literal represents the fully qualified\n-   --  name of the unit, as follows:\n+   --  The following type includes an enumeration entry for each runtime unit.\n+   --  The enumeration literal represents the fully qualified name of the unit,\n+   --  as follows:\n \n-   --    Names of the form Ada_xxx are first level children of Ada, whose\n-   --    name is Ada.xxx. For example, the name Ada_Tags refers to package\n-   --    Ada.Tags.\n+   --    Names of the form Ada_xxx are first level children of Ada, whose name\n+   --    is Ada.xxx. For example, the name Ada_Tags refers to package Ada.Tags.\n \n-   --    Names of the form Ada_Calendar_xxx are second level children\n-   --    of Ada.Calendar. This is part of a temporary implementation of\n-   --    delays; eventually, packages implementing delays will be found\n-   --    relative to the package that declares the time type.\n+   --    Names of the form Ada_Calendar_xxx are second level children of\n+   --    Ada.Calendar. This is part of a temporary implementation of delays;\n+   --    eventually, packages implementing delays will be found relative to\n+   --    the package that declares the time type.\n \n-   --    Names of the form Ada_Finalization_xxx are second level children\n-   --    of Ada.Finalization.\n+   --    Names of the form Ada_Finalization_xxx are second level children of\n+   --    Ada.Finalization.\n \n-   --    Names of the form Ada_Interrupts_xxx are second level children\n-   --    of Ada.Interrupts. This is needed for Ada.Interrupts.Names which\n-   --    is used by pragma Interrupt_State.\n+   --    Names of the form Ada_Interrupts_xxx are second level children of\n+   --    Ada.Interrupts. This is needed for Ada.Interrupts.Names which is used\n+   --    by pragma Interrupt_State.\n \n-   --    Names of the form Ada_Real_Time_xxx are second level children\n-   --    of Ada.Real_Time.\n+   --    Names of the form Ada_Real_Time_xxx are second level children of\n+   --    Ada.Real_Time.\n \n    --    Names of the form Ada_Streams_xxx are second level children\n    --    of Ada.Streams.\n \n-   --    Names of the form Ada_Text_IO_xxx are second level children\n-   --    of Ada.Text_IO.\n+   --    Names of the form Ada_Text_IO_xxx are second level children of\n+   --    Ada.Text_IO.\n \n-   --    Names of the form Ada_Wide_Text_IO_xxx are second level children\n-   --    of Ada.Wide_Text_IO.\n+   --    Names of the form Ada_Wide_Text_IO_xxx are second level children of\n+   --    Ada.Wide_Text_IO.\n \n    --    Names of the form Ada_Wide_Wide_Text_IO_xxx are second level children\n    --    of Ada.Wide_Wide_Text_IO.\n@@ -88,22 +87,22 @@ package Rtsfind is\n    --    Other names stand for themselves (e.g. System for package System)\n \n    --  This list can contain both subprogram and package unit names. For\n-   --  packages, the accessible entities in the package are separately\n-   --  listed in the package entity table. The units must be either library\n-   --  level package declarations, or library level subprogram declarations.\n-   --  Generic units, library level instantiations and subprogram bodies\n-   --  acting as specs may not be referenced (all these cases could be added\n-   --  at the expense of additional complexity in the body of Rtsfind, but\n-   --  it doesn't seem worthwhile, since the implementation controls the\n-   --  set of units that are referenced, and this restriction is easily met.\n-\n-   --  IMPORTANT NOTE: the specs of packages and procedures with'ed using\n-   --  this mechanism may not contain use clauses. This is because these\n-   --  subprograms are compiled in the current visibility environment, and\n-   --  it would be too much trouble to establish a clean environment for the\n-   --  compilation. The presence of extraneous visible stuff has no effect\n-   --  on the compilation except in the presence of use clauses (which might\n-   --  result in unexpected ambiguities).\n+   --  packages, the accessible entities in the package are separately listed\n+   --  in the package entity table. The units must be either library level\n+   --  package declarations, or library level subprogram declarations. Generic\n+   --  units, library level instantiations and subprogram bodies acting as\n+   --  specs may not be referenced (all these cases could be added at the\n+   --  expense of additional complexity in the body of Rtsfind, but it doesn't\n+   --  seem worthwhile, since the implementation controls the set of units that\n+   --  are referenced, and this restriction is easily met.\n+\n+   --  IMPORTANT NOTE: the specs of packages and procedures with'ed using this\n+   --  mechanism may not contain use clauses. This is because these subprograms\n+   --  are compiled in the current visibility environment, and it would be too\n+   --  much trouble to establish a clean environment for the compilation. The\n+   --  presence of extraneous visible stuff has no effect on the compilation\n+   --  except in the presence of use clauses (which might result in unexpected\n+   --  ambiguities).\n \n    type RTU_Id is (\n       --  Runtime packages, for list of accessible entities in each\n@@ -208,6 +207,14 @@ package Rtsfind is\n       System_Compare_Array_Unsigned_32,\n       System_Compare_Array_Unsigned_64,\n       System_Compare_Array_Unsigned_8,\n+      System_Concat_2,\n+      System_Concat_3,\n+      System_Concat_4,\n+      System_Concat_5,\n+      System_Concat_6,\n+      System_Concat_7,\n+      System_Concat_8,\n+      System_Concat_9,\n       System_DSA_Services,\n       System_DSA_Types,\n       System_Exception_Table,\n@@ -689,6 +696,15 @@ package Rtsfind is\n \n      RE_Compare_Array_U64,               -- System.Compare_Array_Unsigned_16\n \n+     RE_Str_Concat_2,                    -- System.Concat_2\n+     RE_Str_Concat_3,                    -- System.Concat_3\n+     RE_Str_Concat_4,                    -- System.Concat_4\n+     RE_Str_Concat_5,                    -- System.Concat_5\n+     RE_Str_Concat_6,                    -- System.Concat_6\n+     RE_Str_Concat_7,                    -- System.Concat_7\n+     RE_Str_Concat_8,                    -- System.Concat_8\n+     RE_Str_Concat_9,                    -- System.Concat_9\n+\n      RE_Get_Active_Partition_Id,         -- System.DSA_Services\n      RE_Get_Local_Partition_Id,          -- System.DSA_Services\n      RE_Get_Passive_Partition_Id,        -- System.DSA_Services\n@@ -1832,6 +1848,15 @@ package Rtsfind is\n \n      RE_Compare_Array_U64                => System_Compare_Array_Unsigned_64,\n \n+     RE_Str_Concat_2                     => System_Concat_2,\n+     RE_Str_Concat_3                     => System_Concat_3,\n+     RE_Str_Concat_4                     => System_Concat_4,\n+     RE_Str_Concat_5                     => System_Concat_5,\n+     RE_Str_Concat_6                     => System_Concat_6,\n+     RE_Str_Concat_7                     => System_Concat_7,\n+     RE_Str_Concat_8                     => System_Concat_8,\n+     RE_Str_Concat_9                     => System_Concat_9,\n+\n      RE_Get_Active_Partition_Id          => System_DSA_Services,\n      RE_Get_Local_Partition_Id           => System_DSA_Services,\n      RE_Get_Passive_Partition_Id         => System_DSA_Services,"}]}