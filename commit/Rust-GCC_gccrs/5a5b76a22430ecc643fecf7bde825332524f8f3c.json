{"sha": "5a5b76a22430ecc643fecf7bde825332524f8f3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE1Yjc2YTIyNDMwZWNjNjQzZmVjZjdiZGU4MjUzMzI1MjRmOGYzYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-23T00:03:38Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-23T00:03:38Z"}, "message": "(movsi): Add special handling for constants which are illegal addresses when pic.\n\n(movsi): Add special handling for constants which are\nillegal addresses when pic.\n(tablejump_internal1, tablejump_internal2): Emit .cpadd when\nTARGET_ABICALLS.  Adjust length to include .cpadd.\n\nFrom-SVN: r6850", "tree": {"sha": "6a8476edc7c4218f0266a429c0111d3d678854f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a8476edc7c4218f0266a429c0111d3d678854f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a5b76a22430ecc643fecf7bde825332524f8f3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5b76a22430ecc643fecf7bde825332524f8f3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5b76a22430ecc643fecf7bde825332524f8f3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5b76a22430ecc643fecf7bde825332524f8f3c/comments", "author": null, "committer": null, "parents": [{"sha": "5de1e2cef4e8cd750d44a2ca52b550f212d7454e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de1e2cef4e8cd750d44a2ca52b550f212d7454e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5de1e2cef4e8cd750d44a2ca52b550f212d7454e"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "ed7db3653045dbd68175815e7063bb50c12fa70a", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a5b76a22430ecc643fecf7bde825332524f8f3c/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a5b76a22430ecc643fecf7bde825332524f8f3c/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=5a5b76a22430ecc643fecf7bde825332524f8f3c", "patch": "@@ -2769,6 +2769,20 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"\n {\n+  /* If operands[1] is a constant address illegal for pic, then we need to\n+     handle it just like LEGITIMIZE_ADDRESS does.  */\n+  if (flag_pic && pic_address_needs_scratch (operands[1]))\n+    {\n+      rtx temp = force_reg (SImode, XEXP (XEXP (operands[1], 0), 0));\n+      rtx temp2 = XEXP (XEXP (operands[1], 0), 1);\n+\n+      if (! SMALL_INT (temp2))\n+\ttemp2 = force_reg (SImode, temp2);\n+\n+      emit_move_insn (operands[0], gen_rtx (PLUS, SImode, temp, temp2));\n+      DONE;\n+    }\n+\n   if ((reload_in_progress | reload_completed) == 0\n       && !register_operand (operands[0], SImode)\n       && !register_operand (operands[1], SImode)\n@@ -5350,20 +5364,38 @@ move\\\\t%0,%z4\\\\n\\\\\n \t(match_operand:SI 0 \"register_operand\" \"d\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"!TARGET_LONG64\"\n-  \"%*j\\\\t%0\"\n+  \"*\n+{\n+  /* .cpadd expands to add REG,REG,$gp when pic, and nothing when not pic.  */\n+  if (TARGET_ABICALLS)\n+    output_asm_insn (\\\".cpadd\\\\t%0\\\", operands);\n+  return \\\"%*j\\\\t%0\\\";\n+}\"\n   [(set_attr \"type\"\t\"jump\")\n    (set_attr \"mode\"\t\"none\")\n-   (set_attr \"length\"\t\"1\")])\n+   (set (attr \"length\")\n+\t(if_then_else (eq_attr \"abicalls\" \"yes\")\n+\t\t      (const_int 2)\n+\t\t      (const_int 1)))])\n \n (define_insn \"tablejump_internal2\"\n   [(set (pc)\n \t(match_operand:DI 0 \"register_operand\" \"d\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"TARGET_LONG64\"\n-  \"%*j\\\\t%0\"\n+  \"*\n+{\n+  /* .cpdadd expands to dadd REG,REG,$gp when pic, and nothing when not pic. */\n+  if (TARGET_ABICALLS)\n+    output_asm_insn (\\\".cpdadd\\\\t%0\\\", operands);\n+  return \\\"%*j\\\\t%0\\\";\n+}\"\n   [(set_attr \"type\"\t\"jump\")\n    (set_attr \"mode\"\t\"none\")\n-   (set_attr \"length\"\t\"1\")])\n+   (set (attr \"length\")\n+\t(if_then_else (eq_attr \"abicalls\" \"yes\")\n+\t\t      (const_int 2)\n+\t\t      (const_int 1)))])\n \n ;; Function return, only allow after optimization, so that we can\n ;; eliminate jumps to jumps if no stack space is used."}]}