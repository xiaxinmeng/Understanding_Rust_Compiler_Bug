{"sha": "23d083f2866c01cb432d999714fec794e62a3026", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNkMDgzZjI4NjZjMDFjYjQzMmQ5OTk3MTRmZWM3OTRlNjJhMzAyNg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2007-10-15T13:57:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-10-15T13:57:26Z"}, "message": "tb-alvms.c (tb_entry_t, [...]): Store a frame pointer instead of a procedure value in each traceback entry.\n\n2007-10-15  Olivier Hainque  <hainque@adacore.com>\n\n\t* tb-alvms.c (tb_entry_t, __gnat_backtrace): Store a frame pointer\n\tinstead of a procedure value in each traceback entry.\n\n\t* g-trasym-vms-alpha.adb (Symbolic_Traceback): Pass frame pointer\n\tinstead of procedure value to TBK$SYMBOLIZE.\n\n\t* s-traent-vms.adb (PV_For): Rename as FP_For and access the proper\n\tfield.\n\t(TB_Entry_For): Account for the PV/FP renaming.\n\n\t* s-traent-vms.ads (Traceback_Entry): Rename PV component into FP and\n\tadd comment.\n\t(Null_TB_Entry): Account for change of component name.\n\t(PV_For): Rename as FP_For.\n\nFrom-SVN: r129338", "tree": {"sha": "4bee605a57c669a56aafb92101d10a93d71bb26b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bee605a57c669a56aafb92101d10a93d71bb26b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23d083f2866c01cb432d999714fec794e62a3026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d083f2866c01cb432d999714fec794e62a3026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23d083f2866c01cb432d999714fec794e62a3026", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d083f2866c01cb432d999714fec794e62a3026/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca14fd026e1d6cce51a7679fae85fdfb18e7aa16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca14fd026e1d6cce51a7679fae85fdfb18e7aa16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca14fd026e1d6cce51a7679fae85fdfb18e7aa16"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "68bb5d87e5927cc8bf15be9c52ef79ac4288b5ba", "filename": "gcc/ada/g-trasym-vms-alpha.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d083f2866c01cb432d999714fec794e62a3026/gcc%2Fada%2Fg-trasym-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d083f2866c01cb432d999714fec794e62a3026/gcc%2Fada%2Fg-trasym-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym-vms-alpha.adb?ref=23d083f2866c01cb432d999714fec794e62a3026", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1999-2006, Free Software Foundation, Inc.        --\n+--           Copyright (C) 1999-2007, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -229,7 +229,7 @@ package body GNAT.Traceback.Symbolic is\n               (Status,\n                PC_For (Traceback (J)),\n                PC_For (Traceback (J)),\n-               PV_For (Traceback (J)),\n+               FP_For (Traceback (J)),\n                Return_Address,\n                Image_Name_Addr,\n                Module_Name_Addr,"}, {"sha": "3bf0d3f863555dff3c8ff2d59faf35e20ce944db", "filename": "gcc/ada/s-traent-vms.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d083f2866c01cb432d999714fec794e62a3026/gcc%2Fada%2Fs-traent-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d083f2866c01cb432d999714fec794e62a3026/gcc%2Fada%2Fs-traent-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traent-vms.adb?ref=23d083f2866c01cb432d999714fec794e62a3026", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,21 +43,21 @@ package body System.Traceback_Entries is\n    end PC_For;\n \n    ------------\n-   -- PV_For --\n+   -- FP_For --\n    ------------\n \n-   function PV_For (TB_Entry : Traceback_Entry) return System.Address is\n+   function FP_For (TB_Entry : Traceback_Entry) return System.Address is\n    begin\n-      return TB_Entry.PV;\n-   end PV_For;\n+      return TB_Entry.FP;\n+   end FP_For;\n \n    ------------------\n    -- TB_Entry_For --\n    ------------------\n \n    function TB_Entry_For (PC : System.Address) return Traceback_Entry is\n    begin\n-      return (PC => PC, PV => System.Null_Address);\n+      return (PC => PC, FP => System.Null_Address);\n    end TB_Entry_For;\n \n end System.Traceback_Entries;"}, {"sha": "33dc98894b14b3b4fb2ee05d6038ce2358d26f72", "filename": "gcc/ada/s-traent-vms.ads", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d083f2866c01cb432d999714fec794e62a3026/gcc%2Fada%2Fs-traent-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d083f2866c01cb432d999714fec794e62a3026/gcc%2Fada%2Fs-traent-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traent-vms.ads?ref=23d083f2866c01cb432d999714fec794e62a3026", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -40,19 +40,22 @@\n package System.Traceback_Entries is\n    pragma Preelaborate;\n \n+   --  Symbolization is done by a VMS service which requires an instruction\n+   --  and a frame pointer for each traceback entry.\n+\n    type Traceback_Entry is record\n       PC : System.Address;\n-      PV : System.Address;\n+      FP : System.Address;\n    end record;\n \n    pragma Suppress_Initialization (Traceback_Entry);\n \n    Null_TB_Entry : constant Traceback_Entry :=\n                      (PC => System.Null_Address,\n-                      PV => System.Null_Address);\n+                      FP => System.Null_Address);\n \n    function PC_For (TB_Entry : Traceback_Entry) return System.Address;\n-   function PV_For (TB_Entry : Traceback_Entry) return System.Address;\n+   function FP_For (TB_Entry : Traceback_Entry) return System.Address;\n \n    function TB_Entry_For (PC : System.Address) return Traceback_Entry;\n "}, {"sha": "5905282490f80693a73b217439bed5b24b0134bf", "filename": "gcc/ada/tb-alvms.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d083f2866c01cb432d999714fec794e62a3026/gcc%2Fada%2Ftb-alvms.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d083f2866c01cb432d999714fec794e62a3026/gcc%2Fada%2Ftb-alvms.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftb-alvms.c?ref=23d083f2866c01cb432d999714fec794e62a3026", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                     Copyright (C) 2003-2005, AdaCore                     *\n+ *                     Copyright (C) 2003-2007, AdaCore                     *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -337,8 +337,8 @@ unwind_kernel_handler (frame_state_t * fs)\n    system functions need more than just a mere PC to compute info on a frame\n    (e.g. for non-symbolic->symbolic translation purposes).  */\n typedef struct {\n-  ADDR pc;\n-  ADDR pv;\n+  ADDR pc; /* instruction pointer */\n+  ADDR fp; /* frame pointer */\n } tb_entry_t;\n \n /********************\n@@ -375,8 +375,6 @@ __gnat_backtrace (void **array, int size,\n   cnt = 0;\n   while (cnt < size)\n     {\n-      PDSCDEF * pv = PV_FOR (frame_state.fp);\n-\n       /* Stop if either the frame contents or the unwinder say so.  */\n       if (STOP_FRAME)\n         break;\n@@ -385,7 +383,7 @@ __gnat_backtrace (void **array, int size,\n \t  && (frame_state.pc < exclude_min || frame_state.pc > exclude_max))\n \t{\n \t  tbe->pc = (ADDR) frame_state.pc;\n-\t  tbe->pv = (ADDR) PV_FOR (frame_state.fp);\n+\t  tbe->fp = (ADDR) frame_state.fp;\n \n \t  cnt ++;\n \t  tbe ++;"}]}