{"sha": "760801691294e8684d7aeae69b5bc317393c0d63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYwODAxNjkxMjk0ZTg2ODRkN2FlYWU2OWI1YmMzMTczOTNjMGQ2Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-05-09T02:01:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-05-09T02:01:55Z"}, "message": "* machmode.h (COMPLEX_MODE_P): New macro.\n\nFrom-SVN: r19644", "tree": {"sha": "8fb6e4004d044d5477800072ce41cf40836c78b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fb6e4004d044d5477800072ce41cf40836c78b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/760801691294e8684d7aeae69b5bc317393c0d63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/760801691294e8684d7aeae69b5bc317393c0d63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/760801691294e8684d7aeae69b5bc317393c0d63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/760801691294e8684d7aeae69b5bc317393c0d63/comments", "author": null, "committer": null, "parents": [{"sha": "53c0919dd910df64aadaf73b9960542c5ee8720a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c0919dd910df64aadaf73b9960542c5ee8720a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53c0919dd910df64aadaf73b9960542c5ee8720a"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "451f4d1304cd5d0d4884f868ff1646ba6d35a44f", "filename": "gcc/machmode.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760801691294e8684d7aeae69b5bc317393c0d63/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760801691294e8684d7aeae69b5bc317393c0d63/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=760801691294e8684d7aeae69b5bc317393c0d63", "patch": "@@ -164,6 +164,11 @@ extern enum mode_class mode_class[];\n   (GET_MODE_CLASS (MODE) == MODE_FLOAT\t\\\n    || GET_MODE_CLASS (MODE) == MODE_COMPLEX_FLOAT)\n \n+/* Nonzero if MODE is a complex mode.  */\n+#define COMPLEX_MODE_P(MODE)\t\t\t\\\n+  (GET_MODE_CLASS (MODE) == MODE_COMPLEX_INT\t\\\n+   || GET_MODE_CLASS (MODE) == MODE_COMPLEX_FLOAT)\n+\n /* Get the size in bytes of an object of mode MODE.  */\n \n extern int mode_size[];"}]}