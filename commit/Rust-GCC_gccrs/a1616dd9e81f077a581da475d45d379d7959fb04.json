{"sha": "a1616dd9e81f077a581da475d45d379d7959fb04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE2MTZkZDllODFmMDc3YTU4MWRhNDc1ZDQ1ZDM3OWQ3OTU5ZmIwNA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-07-08T21:02:16Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-07-08T21:02:16Z"}, "message": "* First cut at support for the H8/S.\n\n        * h8300/h8300.c (h8300_init_once): Handle the H8/S (treat it\n        like the H8/300H).\n        (dosize, adds_subs_operand, one_insn_adds_subs_operand): Likewise.\n        (output_adds_subs, const_costs, print_operand): Likewise.\n        (output_simode_bld, h8300_adjust_insn_length): Likewise.\n        (push_order, pop_order): Reverse.\n        (function_prologue): Try to use ldm.l and stm.l insns\n        on the H8/S.  Minor cleanups.\n        (function_epilogue): Likewise.\n        (asm_file_start): Emit \".h8300s\" when compiling for the H8/S.\n        * h8300/h8300.h (CPP_SPEC): Handle the H8/S.\n        (TARGET_H8300S): New target.\n        (TARGET_SWITCHES): Add \"-ms\" and \"-mno-s\".\n        (BITS_PER_WORD): Handle the H8/S (treat it like the H8/300H).\n        (UNITS_PER_WORD, POINTER_SIZE, PARM_BOUNDARY): Likewise.\n        (BIGGEST_ALIGNMENT, BIGGEST_FIELD_ALIGNMENT): Likewise.\n        (INITIALIZE_TRAMPOLINE, MOVE_MAX, Pmode): Likewise.\n        * h8300/h8300.md: Handle H8/S just like H8/300H\n        throughout the entire file.\n        * h8300/t-h8300 (MULTILIB_OPTIONS): Build \"-ms\" libraries\n        too.\n        (MULTILIB_DIRNAMES): Put H8/S libraries in \"h8300s\" directory.\n        * h8300/lib1funcs.asm: Emit \".h8300s\" pseudo-op when generating\n        h8300s object files.  Otherwise treat the H8/S just like the H8/300H.\n        * ginclude/stdarg.h: Handle the H8/S.\n        * ginclude/varargs.h: Likewise.\n\nFrom-SVN: r12410", "tree": {"sha": "00d3da0eeba3ca80390e177cc5ad43f968c90e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00d3da0eeba3ca80390e177cc5ad43f968c90e4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1616dd9e81f077a581da475d45d379d7959fb04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1616dd9e81f077a581da475d45d379d7959fb04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1616dd9e81f077a581da475d45d379d7959fb04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1616dd9e81f077a581da475d45d379d7959fb04/comments", "author": null, "committer": null, "parents": [{"sha": "8343b898b93c9d2f89154b58315592d217e37f66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8343b898b93c9d2f89154b58315592d217e37f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8343b898b93c9d2f89154b58315592d217e37f66"}], "stats": {"total": 436, "additions": 294, "deletions": 142}, "files": [{"sha": "255eadb790fb26b1c9b31def16860afc1ea180b6", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 195, "deletions": 71, "changes": 266, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1616dd9e81f077a581da475d45d379d7959fb04/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1616dd9e81f077a581da475d45d379d7959fb04/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=a1616dd9e81f077a581da475d45d379d7959fb04", "patch": "@@ -99,6 +99,7 @@ h8300_init_once ()\n     }\n   else\n     {\n+      /* For this we treat the H8/300 and H8/S the same.  */\n       cpu_type = (int) CPU_H8300H;\n       h8_reg_names = names_extended;\n     }\n@@ -137,10 +138,10 @@ dosize (file, op, size)\n      char *op;\n      unsigned int size;\n {\n-  /* On the h8300h, for sizes <= 8 bytes it is as good or\n+  /* On the h8300h and h8300s, for sizes <= 8 bytes it is as good or\n      better to use adds/subs insns rather than add.l/sub.l\n      with an immediate value.   */\n-  if (size > 4 && size <= 8 && TARGET_H8300H)\n+  if (size > 4 && size <= 8 && (TARGET_H8300H || TARGET_H8300S))\n     {\n       /* Crank the size down to <= 4 */\n       fprintf (file, \"\\t%ss\\t#%d,sp\\n\", op, 4);\n@@ -150,7 +151,7 @@ dosize (file, op, size)\n   switch (size)\n     {\n     case 4:\n-      if (TARGET_H8300H)\n+      if (TARGET_H8300H || TARGET_H8300S)\n \t{\n \t  fprintf (file, \"\\t%ss\\t#%d,sp\\n\", op, 4);\n \t  size = 0;\n@@ -179,9 +180,9 @@ dosize (file, op, size)\n \n /* Output assembly language code for the function prologue.  */\n static int push_order[FIRST_PSEUDO_REGISTER] =\n-{6, 5, 4, 3, 2, 1, 0, -1, -1};\n-static int pop_order[FIRST_PSEUDO_REGISTER] =\n {0, 1, 2, 3, 4, 5, 6, -1, -1};\n+static int pop_order[FIRST_PSEUDO_REGISTER] =\n+{6, 5, 4, 3, 2, 1, 0, -1, -1};\n \n /* This is what the stack looks like after the prolog of \n    a function with a frame has been set up:\n@@ -240,7 +241,7 @@ function_prologue (file, size)\n \t  fprintf (file, \"\\torc\\t#128,ccr\\n\");\n \t  fprintf (file, \"\\tmov.b\\tr0l,@(4,sp)\\n\");\n \t}\n-      else if (TARGET_H8300H)\n+      else\n \t{\n \t  fprintf (file, \"\\tpush\\ter0\\n\");\n \t  fprintf (file, \"\\tstc\\tccr,r0l\\n\");\n@@ -257,28 +258,88 @@ function_prologue (file, size)\n       fprintf (file, \"\\t%s\\t%s,%s\\n\", h8_mov_op,\n \t       h8_reg_names[STACK_POINTER_REGNUM],\n \t       h8_reg_names[FRAME_POINTER_REGNUM]);\n+    }\n \n-      /* leave room for locals */\n-      dosize (file, \"sub\", fsize);\n-\n-      /* Push the rest of the registers */\n-      for (idx = 0; idx < FIRST_PSEUDO_REGISTER; idx++)\n-\t{\n-\t  int regno = push_order[idx];\n+  /* leave room for locals */\n+  dosize (file, \"sub\", fsize);\n \n-\t  if (regno >= 0 && WORD_REG_USED (regno) && regno != FRAME_POINTER_REGNUM)\n-\t    fprintf (file, \"\\t%s\\t%s\\n\", h8_push_op, h8_reg_names[regno]);\n-\t}\n-    }\n-  else\n+  /* Push the rest of the registers */\n+  for (idx = 0; idx < FIRST_PSEUDO_REGISTER; idx++)\n     {\n-      dosize (file, \"sub\", fsize);\n-      for (idx = 0; idx < FIRST_PSEUDO_REGISTER; idx++)\n-\t{\n-\t  int regno = push_order[idx];\n+      int regno = push_order[idx];\n \n-\t  if (regno >= 0 && WORD_REG_USED (regno))\n-\t    fprintf (file, \"\\t%s\\t%s\\n\", h8_push_op, h8_reg_names[regno]);\n+      if (regno >= 0\n+\t  && WORD_REG_USED (regno)\n+\t  && (!frame_pointer_needed || regno != FRAME_POINTER_REGNUM))\n+\t{\n+\t  if (TARGET_H8300S)\n+\t    {\n+\t      /* Try to push multiple registers.  */\n+\t      if (regno == 0 || regno == 4)\n+\t\t{\n+\t\t  int second_regno = push_order[idx + 1];\n+\t\t  int third_regno = push_order[idx + 2];\n+\t\t  int fourth_regno = push_order[idx + 3];\n+\n+\t\t  if (fourth_regno >= 0\n+\t\t      && WORD_REG_USED (fourth_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || fourth_regno != FRAME_POINTER_REGNUM)\n+\t\t      && third_regno >= 0\n+\t\t      && WORD_REG_USED (third_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || third_regno != FRAME_POINTER_REGNUM)\n+\t\t      && second_regno >= 0\n+\t\t      && WORD_REG_USED (second_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || second_regno != FRAME_POINTER_REGNUM))\n+\t\t    {\n+\t\t      fprintf (file, \"\\tstm.l %s-%s,@-sp\\n\", \n+\t\t\t       h8_reg_names[regno],\n+\t\t\t       h8_reg_names[fourth_regno]);\n+\t\t      idx += 3;\n+\t\t      continue;\n+\t\t    }\n+\t\t}\n+\t      if (regno == 0 || regno == 4)\n+\t\t{\n+\t\t  int second_regno = push_order[idx + 1];\n+\t\t  int third_regno = push_order[idx + 2];\n+\n+\t\t  if (third_regno >= 0\n+\t\t      && WORD_REG_USED (third_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || third_regno != FRAME_POINTER_REGNUM)\n+\t\t      && second_regno >= 0\n+\t\t      && WORD_REG_USED (second_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || second_regno != FRAME_POINTER_REGNUM))\n+\t\t    {\n+\t\t      fprintf (file, \"\\tstm.l %s-%s,@-sp\\n\", \n+\t\t\t       h8_reg_names[regno],\n+\t\t\t       h8_reg_names[third_regno]);\n+\t\t      idx += 2;\n+\t\t      continue;\n+\t\t    }\n+\t\t}\n+\t      if (regno == 0 || regno == 2 || regno == 4 || regno == 6)\n+\t\t{\n+\t\t  int second_regno = push_order[idx + 1];\n+\n+\t\t  if (second_regno >= 0\n+\t\t      && WORD_REG_USED (second_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || second_regno != FRAME_POINTER_REGNUM))\n+\t\t    {\n+\t\t      fprintf (file, \"\\tstm.l %s-%s,@-sp\\n\", \n+\t\t\t       h8_reg_names[regno],\n+\t\t\t       h8_reg_names[second_regno]);\n+\t\t      idx += 1;\n+\t\t      continue;\n+\t\t    }\n+\t\t}\n+\t    }\n+\t  fprintf (file, \"\\t%s\\t%s\\n\", h8_push_op, h8_reg_names[regno]);\n \t}\n     }\n }\n@@ -293,8 +354,6 @@ function_epilogue (file, size)\n   register int regno;\n   register int mask = 0;\n   int fsize = (size + STACK_BOUNDARY / 8 - 1) & -STACK_BOUNDARY / 8;\n-  int nregs;\n-  int offset;\n   int idx;\n   rtx insn = get_last_insn ();\n \n@@ -318,35 +377,93 @@ function_epilogue (file, size)\n   if (insn && GET_CODE (insn) == BARRIER)\n     return;\n \n-  nregs = 0;\n-\n-  if (frame_pointer_needed)\n+  /* Pop the saved registers. */\n+  for (idx = 0; idx < FIRST_PSEUDO_REGISTER; idx++)\n     {\n-      /* Pop saved registers */\n-      for (idx = 0; idx < FIRST_PSEUDO_REGISTER; idx++)\n-\t{\n-\t  regno = pop_order[idx];\n-\t  if (regno >= 0 && regno != FRAME_POINTER_REGNUM && WORD_REG_USED (regno))\n-\t    fprintf (file, \"\\t%s\\t%s\\n\", h8_pop_op, h8_reg_names[regno]);\n-\t}\n-      /* deallocate locals */\n-      dosize (file, \"add\", fsize);\n-      /* pop frame pointer */\n-      fprintf (file, \"\\t%s\\t%s\\n\", h8_pop_op, h8_reg_names[FRAME_POINTER_REGNUM]);\n-    }\n-  else\n-    {\n-      /* pop saved registers */\n-      for (idx = 0; idx < FIRST_PSEUDO_REGISTER; idx++)\n+      int regno = pop_order[idx];\n+\n+      if (regno >= 0\n+\t  && WORD_REG_USED (regno)\n+\t  && (!frame_pointer_needed || regno != FRAME_POINTER_REGNUM))\n \t{\n-\t  regno = pop_order[idx];\n-\t  if (regno >= 0 && WORD_REG_USED (regno))\n-\t    fprintf (file, \"\\t%s\\t%s\\n\", h8_pop_op, h8_reg_names[regno]);\n+\t  if (TARGET_H8300S)\n+\t    {\n+\t      /* Try to pop multiple registers.  */\n+\t      if (regno == 7 || regno == 3)\n+\t\t{\n+\t\t  int second_regno = pop_order[idx + 1];\n+\t\t  int third_regno = pop_order[idx + 2];\n+\t\t  int fourth_regno = pop_order[idx + 3];\n+\n+\t\t  if (fourth_regno >= 0\n+\t\t      && WORD_REG_USED (fourth_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || fourth_regno != FRAME_POINTER_REGNUM)\n+\t\t      && third_regno >= 0\n+\t\t      && WORD_REG_USED (third_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || third_regno != FRAME_POINTER_REGNUM)\n+\t\t      && second_regno >= 0\n+\t\t      && WORD_REG_USED (second_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || second_regno != FRAME_POINTER_REGNUM))\n+\t\t    {\n+\t\t      fprintf (file, \"\\tldm.l @sp+,%s-%s\\n\", \n+\t\t\t       h8_reg_names[fourth_regno],\n+\t\t\t       h8_reg_names[regno]);\n+\t\t      idx += 3;\n+\t\t      continue;\n+\t\t    }\n+\t\t}\n+\t      if (regno == 6 || regno == 2)\n+\t\t{\n+\t\t  int second_regno = pop_order[idx + 1];\n+\t\t  int third_regno = pop_order[idx + 2];\n+\n+\t\t  if (third_regno >= 0\n+\t\t      && WORD_REG_USED (third_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || third_regno != FRAME_POINTER_REGNUM)\n+\t\t      && second_regno >= 0\n+\t\t      && WORD_REG_USED (second_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || second_regno != FRAME_POINTER_REGNUM))\n+\t\t    {\n+\t\t      fprintf (file, \"\\tldm.l @sp+,%s-%s\\n\", \n+\t\t\t       h8_reg_names[third_regno],\n+\t\t\t       h8_reg_names[regno]);\n+\t\t      idx += 2;\n+\t\t      continue;\n+\t\t    }\n+\t\t}\n+\t      if (regno == 7 || regno == 5 || regno == 3 || regno == 1)\n+\t\t{\n+\t\t  int second_regno = pop_order[idx + 1];\n+\n+\t\t  if (second_regno >= 0\n+\t\t      && WORD_REG_USED (second_regno)\n+\t\t      && (!frame_pointer_needed\n+\t\t\t  || second_regno != FRAME_POINTER_REGNUM))\n+\t\t    {\n+\t\t      fprintf (file, \"\\tldm.l @sp+,%s-%s\\n\", \n+\t\t\t       h8_reg_names[second_regno],\n+\t\t\t       h8_reg_names[regno]);\n+\t\t      idx += 1;\n+\t\t      continue;\n+\t\t    }\n+\t\t}\n+\t    }\n+\t  fprintf (file, \"\\t%s\\t%s\\n\", h8_pop_op, h8_reg_names[regno]);\n \t}\n-      /* deallocate locals */\n-      dosize (file, \"add\", fsize);\n     }\n \n+  /* deallocate locals */\n+  dosize (file, \"add\", fsize);\n+\n+  /* pop frame pointer if we had one. */\n+  if (frame_pointer_needed)\n+    fprintf (file, \"\\t%s\\t%s\\n\", h8_pop_op, h8_reg_names[FRAME_POINTER_REGNUM]);\n+\n   /* If this is a monitor function, there is one register still left on\n      the stack.  */\n   if (monitor)\n@@ -376,6 +493,8 @@ asm_file_start (file)\n     fprintf (file, \"; -O%d\\n\", optimize);\n   if (TARGET_H8300H)\n     fprintf (file, \"\\n\\t.h8300h\\n\");\n+  else if (TARGET_H8300S)\n+    fprintf (file, \"\\n\\t.h8300s\\n\");\n   else\n     fprintf (file, \"\\n\\n\");\n   output_file_directive (file, main_input_filename);\n@@ -508,11 +627,11 @@ adds_subs_operand (op, mode)\n \treturn 1;\n       if (INTVAL (op) >= -4 && INTVAL (op) <= 0)\n \treturn 1;\n-      if (TARGET_H8300H\n+      if ((TARGET_H8300H || TARGET_H8300S)\n \t  && INTVAL (op) != 7\n \t  && (INTVAL (op) <= 8 && INTVAL (op) >= 0))\n \treturn 1;\n-      if (TARGET_H8300H\n+      if ((TARGET_H8300H || TARGET_H8300S)\n \t  && INTVAL (op) != -7\n \t  && (INTVAL (op) >= -8 && INTVAL (op) <= 0))\n \treturn 1;\n@@ -532,7 +651,7 @@ one_insn_adds_subs_operand (op, mode)\n \n   if (val == 1 || val == -1\n       || val == 2 || val == -2\n-      || (TARGET_H8300H\n+      || ((TARGET_H8300H || TARGET_H8300S)\n \t  && (val == 4 || val == -4)))\n     return 1;\n   return 0;\n@@ -547,7 +666,7 @@ output_adds_subs (operands)\n   /* First get the value into the range -4..4 inclusive.\n \n      The only way it can be out of this range is when TARGET_H8300H\n-     is true, thus it is safe to use adds #4 and subs #4.  */\n+     or TARGET_H8300S is true, thus it is safe to use adds #4 and subs #4.  */\n   if (val > 4)\n     {\n       output_asm_insn (\"adds #4,%A0\", operands);\n@@ -561,11 +680,13 @@ output_adds_subs (operands)\n     }\n \n   /* Handle case were val == 4 or val == -4 and we're compiling\n-     for TARGET_H8300H.  */\n-  if (TARGET_H8300H && val == 4)\n+     for TARGET_H8300H or TARGET_H8300S.  */\n+  if ((TARGET_H8300H || TARGET_H8300S)\n+      && val == 4)\n     return \"adds #4,%A0\";\n \n-  if (TARGET_H8300H && val == -4)\n+  if ((TARGET_H8300H || TARGET_H8300S)\n+      && val == -4)\n     return \"subs #4,%A0\";\n \n   if (val > 2)\n@@ -851,7 +972,7 @@ const_costs (r, c)\n \t  return 0;\n \tcase 4:\n \tcase -4:\n-\t  if (TARGET_H8300H)\n+\t  if (TARGET_H8300H || TARGET_H8300S)\n \t    return 0;\n \t  else\n \t    return 1;\n@@ -1211,13 +1332,15 @@ print_operand (file, x, code)\n       if (GET_CODE (x) == CONST_INT)\n \tfprintf (file, \"#%d\", INTVAL (x) & 0xff);\n       else\n-\tfprintf (file, \"%s\", byte_reg (x, TARGET_H8300 ? 2 : 0));\n+\tfprintf (file, \"%s\",\n+\t\t byte_reg (x, TARGET_H8300 ? 2 : 0));\n       break;\n     case 'x':\n       if (GET_CODE (x) == CONST_INT)\n \tfprintf (file, \"#%d\", (INTVAL (x) >> 8) & 0xff);\n       else\n-\tfprintf (file, \"%s\", byte_reg (x, TARGET_H8300 ? 3 : 1));\n+\tfprintf (file, \"%s\",\n+\t\t byte_reg (x, TARGET_H8300 ? 3 : 1));\n       break;\n     case 'y':\n       if (GET_CODE (x) == CONST_INT)\n@@ -2414,7 +2537,7 @@ output_simode_bld (bild, log2, operands)\n      rtx operands[];\n {\n   /* Clear the destination register.  */\n-  if (TARGET_H8300H)\n+  if (TARGET_H8300H || TARGET_H8300S)\n     output_asm_insn (\"sub.l\\t%S0,%S0\", operands);\n   else\n     output_asm_insn (\"sub.w\\t%e0,%e0\\n\\tsub.w\\t%f0,%f0\", operands);\n@@ -2464,24 +2587,25 @@ h8300_adjust_insn_length (insn, length)\n       if (TARGET_H8300 && GET_CODE (addr) == REG)\n \treturn -2;\n \n-      /* On the H8/300H, register indirect is 6 bytes shorter than\n+      /* On the H8/300H and H8/S, register indirect is 6 bytes shorter than\n \t indicated in the machine description.  */\n-      if (TARGET_H8300H && GET_CODE (addr) == REG)\n+      if ((TARGET_H8300H || TARGET_H8300S)\n+          && GET_CODE (addr) == REG)\n \treturn -6;\n \n-      /* On the H8/300H, reg + d, for small displacements is 4 bytes\n-\t shorter than indicated in the machine description.  */\n-      if (TARGET_H8300H\n+      /* On the H8/300H and H8/300S, reg + d, for small displacements is 4\n+\t bytes shorter than indicated in the machine description.  */\n+      if ((TARGET_H8300H || TARGET_H8300S)\n \t  && GET_CODE (addr) == PLUS\n \t  && GET_CODE (XEXP (addr, 0)) == REG\n \t  && GET_CODE (XEXP (addr, 1)) == CONST_INT\n \t  && INTVAL (XEXP (addr, 1)) > -32768\n \t  && INTVAL (XEXP (addr, 1)) < 32767)\n \treturn -4;\n \n-      /* On the H8/300H, abs:16 is two bytes shorter than the\n+      /* On the H8/300H and H8/300S, abs:16 is two bytes shorter than the\n \t more general abs:24.  */\n-      if (TARGET_H8300H\n+      if ((TARGET_H8300H || TARGET_H8300S)\n \t  && GET_CODE (addr) == SYMBOL_REF\n \t  && TINY_DATA_NAME_P (XSTR (addr, 0)))\n \treturn -2;\n@@ -2498,7 +2622,7 @@ h8300_adjust_insn_length (insn, length)\n \t      || ((INTVAL (SET_SRC (pat)) >> 16) & 0xffff) == 0))\n \treturn -2;\n \n-      if (TARGET_H8300H)\n+      if (TARGET_H8300H || TARGET_H8300S)\n \t{\n \t  int val = INTVAL (SET_SRC (pat));\n \n@@ -2531,8 +2655,8 @@ h8300_adjust_insn_length (insn, length)\n \treturn -(20 - INTVAL (XEXP (src, 1)) * 2);\n \n       /* Similarly for HImode and SImode shifts by\n-\t small constants on the H8/300H.  */\n-      if (TARGET_H8300H\n+\t small constants on the H8/300H and H8/300S.  */\n+      if ((TARGET_H8300H || TARGET_H8300S)\n \t  && (mode == HImode || mode == SImode)\n \t  && INTVAL (XEXP (src, 1)) <= 4)\n \treturn -(20 - INTVAL (XEXP (src, 1)) * 2);"}, {"sha": "76efc06ec72cc6de981a35b3cdc756409d4c31f6", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1616dd9e81f077a581da475d45d379d7959fb04/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1616dd9e81f077a581da475d45d379d7959fb04/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=a1616dd9e81f077a581da475d45d379d7959fb04", "patch": "@@ -39,13 +39,16 @@ extern char **h8_reg_names;\n \"-D__LONG_MAX__=2147483647L -D__LONG_LONG_MAX__=2147483647L\"\n \n #define CPP_SPEC \\\n-  \"%{!mh:-D__H8300__} %{mh:-D__H8300H__} \\\n-   %{!mh:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  \"%{!mh:%{!ms:-D__H8300__}} %{mh:-D__H8300H__} %{ms:-D__H8300S__} \\\n+   %{!mh:%{!ms:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n    %{mh:-D__SIZE_TYPE__=unsigned\\\\ long -D__PTRDIFF_TYPE__=long} \\\n-   %{!mh:-Acpu(h8300) -Amachine(h8300)} %{mh:-Acpu(h8300h) -Amachine(h8300h)} \\\n+   %{ms:-D__SIZE_TYPE__=unsigned\\\\ long -D__PTRDIFF_TYPE__=long} \\\n+   %{!mh:%{!ms:-Acpu(h8300) -Amachine(h8300)}} \\\n+   %{mh:-Acpu(h8300h) -Amachine(h8300h)} \\\n+   %{ms:-Acpu(h8300s) -Amachine(h8300s)} \\\n    %{!mint32:-D__INT_MAX__=32767} %{mint32:-D__INT_MAX__=2147483647}\"\n \n-#define LINK_SPEC \"%{mh:-m h8300h}\"\n+#define LINK_SPEC \"%{mh:-m h8300h} %{ms:-m h8300s}\"\n \n #define LIB_SPEC \"%{mrelax:-relax} %{g:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}\"\n \n@@ -77,8 +80,9 @@ extern int target_flags;\n #define TARGET_RTL_DUMP\t(target_flags & 2048)\n \n /* Select between the h8/300 and h8/300h cpus.  */\n-#define TARGET_H8300\t(! TARGET_H8300H)\n+#define TARGET_H8300\t(! TARGET_H8300H && ! TARGET_H8300S)\n #define TARGET_H8300H\t(target_flags & 4096)\n+#define TARGET_H8300S\t(target_flags & 1)\n \n /* Align all values on the h8/300h the same way as the h8/300.  Specifically,\n    32 bit and larger values are aligned on 16 bit boundaries.\n@@ -94,7 +98,9 @@ extern int target_flags;\n    An empty string NAME is used to identify the default VALUE.  */\n \n #define TARGET_SWITCHES  \\\n-  { {\"int32\",8},\t\t\\\n+  { {\"s\",1 },\t\t\t\\\n+    {\"no-s\",-1},\t\t\\\n+    {\"int32\",8},\t\t\\\n     {\"addresses\",64 },\t\t\\\n     {\"quickcall\",128},  \t\\\n     {\"no-quickcall\",-128},\t\\\n@@ -160,16 +166,16 @@ do {\t\t\t\t\\\n    Note that this is not necessarily the width of data type `int';\n    if using 16-bit ints on a 68000, this would still be 32.\n    But on a machine with 16-bit registers, this would be 16.  */\n-#define BITS_PER_WORD\t\t(TARGET_H8300H ? 32 : 16)\n+#define BITS_PER_WORD\t\t(TARGET_H8300H || TARGET_H8300S ? 32 : 16)\n #define MAX_BITS_PER_WORD\t32\n \n /* Width of a word, in units (bytes).  */\n-#define UNITS_PER_WORD\t\t(TARGET_H8300H ? 4 : 2)\n+#define UNITS_PER_WORD\t\t(TARGET_H8300H || TARGET_H8300S ? 4 : 2)\n #define MIN_UNITS_PER_WORD\t2\n \n /* Width in bits of a pointer.\n    See also the macro `Pmode' defined below.  */\n-#define POINTER_SIZE (TARGET_H8300H ? 32 : 16)\n+#define POINTER_SIZE (TARGET_H8300H || TARGET_H8300S ? 32 : 16)\n \n #define SHORT_TYPE_SIZE \t16\n #define INT_TYPE_SIZE \t\t(TARGET_INT32 ? 32 : 16)\n@@ -182,7 +188,7 @@ do {\t\t\t\t\\\n #define MAX_FIXED_MODE_SIZE \t32\n \n /* Allocation boundary (in *bits*) for storing arguments in argument list.  */\n-#define PARM_BOUNDARY (TARGET_H8300H ? 32 : 16)\n+#define PARM_BOUNDARY (TARGET_H8300H || TARGET_H8300S ? 32 : 16)\n \n /* Allocation boundary (in *bits*) for the code of a function.  */\n #define FUNCTION_BOUNDARY 16\n@@ -199,11 +205,11 @@ do {\t\t\t\t\\\n /* No data type wants to be aligned rounder than this.\n    32 bit values are aligned as such on the 300h for speed.  */\n #define BIGGEST_ALIGNMENT \\\n-((TARGET_H8300H && ! TARGET_ALIGN_300) ? 32 : 16)\n+(((TARGET_H8300H || TARGET_H8300S) && ! TARGET_ALIGN_300) ? 32 : 16)\n \n /* No structure field wants to be aligned rounder than this.  */\n #define BIGGEST_FIELD_ALIGNMENT \\\n-((TARGET_H8300H && ! TARGET_ALIGN_300) ? 32 : 16)\n+(((TARGET_H8300H || TARGET_H8300S) && ! TARGET_ALIGN_300) ? 32 : 16)\n \n /* The stack goes in 16/32 bit lumps.  */\n #define STACK_BOUNDARY (TARGET_H8300 ? 16 : 32)\n@@ -699,10 +705,10 @@ struct rtx_def *function_arg();\n \n #define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\t\\\n-  enum machine_mode mode = TARGET_H8300H ? SImode : HImode;\t\t\t\\\n-  emit_move_insn (gen_rtx (MEM, mode, plus_constant ((TRAMP), 2)), CXT);\t\\\n-  emit_move_insn (gen_rtx (MEM, mode, plus_constant ((TRAMP), 6)), FNADDR);\t\\\n-  if (TARGET_H8300H)\t\t\t\t\t\t\t\t\\\n+  enum machine_mode mode = TARGET_H8300H || TARGET_H8300S? SImode : HImode; \\\n+  emit_move_insn (gen_rtx (MEM, mode, plus_constant ((TRAMP), 2)), CXT);    \\\n+  emit_move_insn (gen_rtx (MEM, mode, plus_constant ((TRAMP), 6)), FNADDR); \\\n+  if (TARGET_H8300H || TARGET_H8300S)\t\t\t\t\t    \\\n     emit_move_insn (gen_rtx (MEM, QImode, plus_constant ((TRAMP), 6)), GEN_INT (0x5A)); \\\n }\n \f\n@@ -886,7 +892,7 @@ struct rtx_def *function_arg();\n \n /* Max number of bytes we can move from memory to memory\n    in one reasonably fast instruction.  */\n-#define MOVE_MAX\t(TARGET_H8300H ? 4 : 2)\n+#define MOVE_MAX\t(TARGET_H8300H || TARGET_H8300S ? 4 : 2)\n #define MAX_MOVE_MAX\t4\n \n /* Define this if zero-extension is slow (more than one real instruction).  */\n@@ -907,7 +913,7 @@ struct rtx_def *function_arg();\n /* Specify the machine mode that pointers have.\n    After generation of rtl, the compiler makes no further distinction\n    between pointers and any other objects of this machine mode.  */\n-#define Pmode (TARGET_H8300H ? SImode : HImode)\n+#define Pmode (TARGET_H8300H || TARGET_H8300S ? SImode : HImode)\n \n /* ANSI C types.\n    We use longs for the 300h because ints can be 16 or 32."}, {"sha": "a1709efb5b71c13357619ddbf25fe697b10ab751", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 62, "deletions": 50, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1616dd9e81f077a581da475d45d379d7959fb04/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1616dd9e81f077a581da475d45d379d7959fb04/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=a1616dd9e81f077a581da475d45d379d7959fb04", "patch": "@@ -238,7 +238,7 @@\n       if (do_movsi (operands))\n \tDONE;\n     }\n-  else /* TARGET_H8300H */\n+  else\n     {\n       /* One of the ops has to be in a register.  */\n       if (!register_operand (operand1, SImode)\n@@ -260,7 +260,7 @@\n       if (do_movsi (operands))\n \tDONE;\n     }\n-  else /* TARGET_H8300H */\n+  else\n     {\n       /* One of the ops has to be in a register.  */\n       if (!register_operand (operand1, SFmode)\n@@ -398,7 +398,7 @@\n (define_insn \"movsi_h8300h\"\n   [(set (match_operand:SI 0 \"general_operand_dst\" \"=r,r,r,m,<,r\")\n \t(match_operand:SI 1 \"general_operand_src\" \"I,r,im,r,r,>\"))]\n-  \"TARGET_H8300H\n+  \"(TARGET_H8300H || TARGET_H8300S)\n    && (register_operand (operands[0], SImode)\n        || register_operand (operands[1], SImode))\"\n   \"*\n@@ -439,7 +439,7 @@\n (define_insn \"movsf_h8300h\"\n   [(set (match_operand:SF 0 \"general_operand_dst\" \"=r,r,r,m,<,r\")\n \t(match_operand:SF 1 \"general_operand_src\" \"I,r,im,r,r,>\"))]\n-  \"TARGET_H8300H\n+  \"(TARGET_H8300H || TARGET_H8300S)\n    && (register_operand (operands[0], SFmode)\n        || register_operand (operands[1], SFmode))\"\n   \"@\n@@ -526,7 +526,7 @@\n \n (define_insn \"tstsi\"\n   [(set (cc0) (match_operand:SI 0 \"register_operand\" \"r\"))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"mov.l\t%S0,%S0\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"set\")])\n@@ -549,7 +549,7 @@\n {\n   /* Force operand1 into a register if we're compiling\n      for the h8/300.  */\n-  if (GET_CODE (operands[1]) != REG && !TARGET_H8300H)\n+  if (GET_CODE (operands[1]) != REG && TARGET_H8300)\n     operands[1] = force_reg (HImode, operands[1]);\n }\")\n \n@@ -566,7 +566,7 @@\n   [(set (cc0)\n \t(compare:HI (match_operand:HI 0 \"register_operand\" \"r,r\")\n \t\t    (match_operand:HI 1 \"nonmemory_operand\" \"r,n\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"cmp.w\t%T1,%T0\"\n   [(set_attr \"length\" \"2,4\")\n    (set_attr \"cc\" \"compare,compare\")])\n@@ -575,7 +575,7 @@\n   [(set (cc0)\n \t(compare:SI (match_operand:SI 0 \"register_operand\" \"r,r\")\n \t\t    (match_operand:SI 1 \"nonmemory_operand\" \"r,i\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"cmp.l\t%S1,%S0\"\n   [(set_attr \"length\" \"2,6\")\n    (set_attr \"cc\" \"compare,compare\")])\n@@ -631,7 +631,7 @@\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n \t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0\")\n \t\t (match_operand:HI 2 \"nonmemory_operand\" \"n,r\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"@\n    add.w\t%T2,%T0\n    add.w\t%T2,%T0\"\n@@ -651,7 +651,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(plus:SI (match_operand:SI 1 \"register_operand\" \"%0\")\n \t\t (match_operand:SI 2 \"adds_subs_operand\" \"n\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"* return output_adds_subs (operands);\"\n   [(set_attr \"cc\" \"none_0hit\")\n    (set (attr \"length\")\n@@ -676,7 +676,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(plus:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n \t\t (match_operand:SI 2 \"nonmemory_operand\" \"i,r\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"@\n    add.l\t%S2,%S0\n    add.l\t%S2,%S0\"\n@@ -740,7 +740,7 @@\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,&r\")\n \t(minus:HI (match_operand:HI 1 \"general_operand\" \"0,0\")\n \t\t  (match_operand:HI 2 \"nonmemory_operand\" \"r,n\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"@\n    sub.w\t%T2,%T0\n    sub.w\t%T2,%T0\"\n@@ -770,7 +770,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(minus:SI (match_operand:SI 1 \"general_operand\" \"0\")\n \t\t  (match_operand:SI 2 \"adds_subs_operand\" \"n\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"*\n {\n   operands[2] = GEN_INT (-INTVAL (operands[2]));\n@@ -787,7 +787,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(minus:SI (match_operand:SI 1 \"general_operand\" \"0,0\")\n \t\t  (match_operand:SI 2 \"nonmemory_operand\" \"r,i\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"@\n    sub.l\t%S2,%S0\n    sub.l\t%S2,%S0\"\n@@ -804,7 +804,7 @@\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n \t(mult:HI (sign_extend:HI (match_operand:QI 1 \"general_operand\" \"%0\"))\n \t\t (sign_extend:HI (match_operand:QI 2 \"register_operand\" \"r\"))))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"mulxs.b\t%X2,%T0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"set_zn_c0\")])\n@@ -813,7 +813,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(mult:SI (sign_extend:SI (match_operand:HI 1 \"general_operand\" \"%0\"))\n \t\t (sign_extend:SI (match_operand:HI 2 \"register_operand\" \"r\"))))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"mulxs.w\t%T2,%S0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"set_zn_c0\")])\n@@ -831,7 +831,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(mult:SI (zero_extend:SI (match_operand:HI 1 \"general_operand\" \"%0\"))\n \t\t (zero_extend:SI (match_operand:HI 2 \"register_operand\" \"r\"))))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"mulxu.w\t%T2,%S0\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"none_0hit\")])\n@@ -870,7 +870,7 @@\n \t  (udiv:SI\n \t    (match_operand:SI 1 \"general_operand\" \"0\")\n \t    (zero_extend:SI (match_operand:HI 2 \"register_operand\" \"r\")))))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"divxu.w\t%T2,%S0\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"clobber\")])\n@@ -881,7 +881,7 @@\n \t  (div:SI\n \t    (match_operand:SI 1 \"general_operand\" \"0\")\n \t    (sign_extend:SI (match_operand:HI 2 \"register_operand\" \"r\")))))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"divxs.w\t%T2,%S0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"clobber\")])\n@@ -907,7 +907,7 @@\n \t  (mod:HI\n \t    (match_operand:HI 1 \"general_operand\" \"0\")\n \t    (sign_extend:HI (match_operand:QI 2 \"register_operand\" \"r\")))))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"divxs.b\t%X2,%T0\\;mov %t0,%s0\"\n   [(set_attr \"length\" \"6\")\n    (set_attr \"cc\" \"clobber\")])\n@@ -918,7 +918,7 @@\n \t  (umod:SI\n \t    (match_operand:SI 1 \"general_operand\" \"0\")\n \t    (zero_extend:SI (match_operand:HI 2 \"register_operand\" \"r\")))))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"divxu.w\t%T2,%S0\\;mov %e0,%f0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"clobber\")])\n@@ -929,7 +929,7 @@\n \t  (mod:SI\n \t    (match_operand:SI 1 \"general_operand\" \"0\")\n \t    (sign_extend:SI (match_operand:HI 2 \"register_operand\" \"r\")))))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"divxs.w\t%T2,%S0\\;mov %e0,%f0\"\n   [(set_attr \"length\" \"6\")\n    (set_attr \"cc\" \"clobber\")])\n@@ -977,7 +977,7 @@\n \toutput_asm_insn (\\\"and\t%t2,%t0\\\", operands);\n       return \\\"\\\";\n     }\n-  if (TARGET_H8300H)\n+  if (TARGET_H8300H || TARGET_H8300S)\n     return \\\"and.w %T2,%T0\\\";\n   return \\\"and\t%s2,%s0\\;and\t%t2,%t0;\\\";\n }\"\n@@ -1001,7 +1001,7 @@\n \t those bits aren't going to change, or they're\n \t going to be zero'd out, then we can work on the\n \t low-order bits.  */\n-      if (TARGET_H8300H\n+      if ((TARGET_H8300H || TARGET_H8300S)\n \t  && ((i & 0xffff0000) != 0xffff0000\n \t      || (i & 0xffff0000) == 0x00000000))\n         return \\\"and.l\t%S2,%S0\\\";\n@@ -1030,7 +1030,7 @@\n \toutput_asm_insn (\\\"and\t%z2,%z0\\\", operands);\n       return \\\"\\\";\n     }\n-  if (TARGET_H8300H)\n+  if (TARGET_H8300H || TARGET_H8300S)\n     return \\\"and.l\t%S2,%S0\\\";\n   return \\\"and\t%w2,%w0\\;and\t%x2,%x0\\;and\t%y2,%y0\\;and\t%z2,%z0\\;\\\";\n }\"\n@@ -1081,7 +1081,7 @@\n \toutput_asm_insn (\\\"or\t%t2,%t0\\\", operands);\n       return \\\"\\\";\n     }\n-  if (TARGET_H8300H)\n+  if (TARGET_H8300H || TARGET_H8300S)\n     return \\\"or.w\t%T2,%T0\\\";\n   return \\\"or\t%s2,%s0\\;or\t%t2,%t0; %2 or2\\\";\n }\"\n@@ -1103,7 +1103,7 @@\n \t upper 16bits of 32bit registers.  However, if\n \t those bits aren't going to change, then we can\n \t work on the low-order bits.  */\n-      if (TARGET_H8300H\n+      if ((TARGET_H8300H || TARGET_H8300S)\n \t  && (i & 0xffff0000) != 0x00000000)\n         return \\\"or.l\t%S2,%S0\\\";\n \t\n@@ -1117,7 +1117,7 @@\n \toutput_asm_insn (\\\"or\t%z2,%z0\\\", operands);\n       return \\\"\\\";\n     }\n-  if (TARGET_H8300H)\n+  if (TARGET_H8300H || TARGET_H8300S)\n     return \\\"or.l\t%S2,%S0\\\";\n   return \\\"or\t%w2,%w0\\;or\t%x2,%x0\\;or\t%y2,%y0\\;or\t%z2,%z0\\;\\\";\n }\"\n@@ -1167,7 +1167,7 @@\n \toutput_asm_insn (\\\"xor\t%t2,%t0\\\", operands);\n       return \\\"\\\";\n     }\n-  if (TARGET_H8300H)\n+  if (TARGET_H8300H || TARGET_H8300S)\n     return \\\"xor.w\t%T2,%T0\\\";\n   return \\\"xor\t%s2,%s0\\;xor\t%t2,%t0\\\";\n }\"\n@@ -1189,7 +1189,7 @@\n \t upper 16bits of 32bit registers.  However, if\n \t those bits aren't going to change, then we can\n \t work on the low-order bits.  */\n-      if (TARGET_H8300H\n+      if ((TARGET_H8300H || TARGET_H8300S)\n \t  && (i & 0xffff0000) != 0x00000000)\n         return \\\"xor.l\t%S2,%S0\\\";\n \n@@ -1203,7 +1203,7 @@\n \toutput_asm_insn (\\\"xor\t%z2,%z0\\\", operands);\n       return \\\"\\\";\n     }\n-  if (TARGET_H8300H)\n+  if (TARGET_H8300H || TARGET_H8300S)\n     return \\\"xor.l\t%S2,%S0\\\";\n   return \\\"xor\t%w2,%w0\\;xor\t%x2,%x0\\;xor\t%y2,%y0\\;xor\t%z2,%z0\\;\\\";\n }\"\n@@ -1247,7 +1247,7 @@\n (define_insn \"neghi2_h8300h\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n \t(neg:HI (match_operand:HI 1 \"general_operand\" \"0\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"neg\t%T0\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"set_zn_c0\")])\n@@ -1277,7 +1277,7 @@\n (define_insn \"negsi2_h8300h\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(neg:SI (match_operand:SI 1 \"general_operand\" \"0\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"neg\t%S0\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"set_zn_c0\")])\n@@ -1307,7 +1307,8 @@\n }\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 4)\n \t\t      (const_int 2)))])\n \n@@ -1324,7 +1325,8 @@\n }\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 8)\n \t\t      (const_int 2)))])\n \t\t\t\n@@ -1510,7 +1512,7 @@\n (define_insn \"tablejump_h8300h\"\n   [(set (pc) (match_operand:SI 0 \"register_operand\" \"r\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"jmp\t@%0\"\n   [(set_attr \"cc\" \"none\")\n    (set_attr \"length\" \"2\")])\n@@ -1531,7 +1533,7 @@\n \n (define_insn \"indirect_jump_h8300h\"\n   [(set (pc) (match_operand:SI 0 \"jump_address_operand\" \"Vr\"))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"jmp @%0\"\n   [(set_attr \"cc\" \"none\")\n    (set_attr \"length\" \"2\")])\n@@ -1654,7 +1656,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(zero_extend:SI (match_operand:HI 1 \"general_operand_src\" \"0,g>\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"@\n   extu.l\t%S0\n   mov.w\t%T1,%T0\\;extu.l\t%S0\"\n@@ -1680,7 +1682,7 @@\n (define_insn \"\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n \t(sign_extend:HI (match_operand:QI 1 \"general_operand_src\" \"0,g>\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"@\n   exts.w\t%T0\n   mov.b\t%R1,%s0\\;exts.w\t%T0\"\n@@ -1737,7 +1739,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(sign_extend:SI (match_operand:HI 1 \"general_operand_src\" \"0,g>\")))]\n-  \"TARGET_H8300H\"\n+  \"TARGET_H8300H || TARGET_H8300S\"\n   \"@\n   exts.l\t%S0\n   mov.w\t%T1,%T0\\;exts.l\t%S0\"\n@@ -1957,7 +1959,8 @@\n \t\t      (match_operand:SI 1 \"bit_operand\" \"Ur\")\n \t\t      (match_operand:SI 2 \"const_int_operand\" \"n\")) 0))\n \t\t(const_int 1)))]\n-  \"TARGET_H8300H && INTVAL (operands[2]) < 16\"\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && INTVAL (operands[2]) < 16\"\n   \"sub.w\t%0,%0\\;bild\t%Z2,%Y1\\;bst\t#0,%X0\"\n   [(set_attr \"cc\" \"clobber\")\n    (set_attr \"length\" \"8\")])\n@@ -1976,7 +1979,8 @@\n   \"* return output_simode_bld (0, 0, operands);\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 10)\n \t\t      (const_int 8)))])\n \n@@ -1991,7 +1995,8 @@\n   \"* return output_simode_bld (0, 0, operands);\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 10)\n \t\t      (const_int 8)))])\n \n@@ -2006,7 +2011,8 @@\n   \"* return output_simode_bld (0, 0, operands);\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 10)\n \t\t      (const_int 8)))])\n \n@@ -2024,7 +2030,8 @@\n   \"* return output_simode_bld (1, 1, operands);\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 10)\n \t\t      (const_int 8)))])\n (define_insn \"\"\n@@ -2038,7 +2045,8 @@\n   \"* return output_simode_bld (1, 0, operands);\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 10)\n \t\t      (const_int 8)))])\n \n@@ -2051,7 +2059,8 @@\n   \"* return output_simode_bld (1, 1, operands);\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 10)\n \t\t      (const_int 8)))])\n (define_insn \"\"\n@@ -2065,7 +2074,8 @@\n   \"* return output_simode_bld (1, 0, operands);\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 10)\n \t\t      (const_int 8)))])\n \n@@ -2081,7 +2091,8 @@\n   \"* return output_simode_bld (1, 0, operands);\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 10)\n \t\t      (const_int 8)))])\n \n@@ -2097,7 +2108,8 @@\n   \"* return output_simode_bld (1, 0, operands);\"\n   [(set_attr \"cc\" \"clobber\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"TARGET_H8300H\") (const_int 0))\n+\t(if_then_else (eq (symbol_ref \"TARGET_H8300H || TARGET_H8300S\")\n+\t\t\t  (const_int 0))\n \t\t      (const_int 10)\n \t\t      (const_int 8)))])\n "}, {"sha": "4179a747fabcda3c08ab16a11e07591d9f4ec993", "filename": "gcc/config/h8300/lib1funcs.asm", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1616dd9e81f077a581da475d45d379d7959fb04/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1616dd9e81f077a581da475d45d379d7959fb04/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm?ref=a1616dd9e81f077a581da475d45d379d7959fb04", "patch": "@@ -80,7 +80,7 @@ Boston, MA 02111-1307, USA.  */\n #define S2P\tr6\n #endif\n \n-#ifdef __H8300H__\n+#if defined (__H8300H__) || defined (__H8300S__)\n #define MOVP\tmov.l\t/* pointers are 32 bits */\n #define ADDP\tadd.l\n #define CMPP\tcmp.l\n@@ -314,6 +314,10 @@ setbit:\tinc\tA0L\t\t; do insert bit\n \t.h8300h\n #endif\n \n+#ifdef __H8300S__\n+\t.h8300s\n+#endif\n+\n \t.section .text\n \t.align 2\n \n@@ -738,7 +742,13 @@ _done:\n \n #else /* __H8300H__ */\n \n+#ifdef __H8300H__\n \t.h8300h\n+#endif\n+\n+#ifdef __H8300S__\n+\t.h8300s\n+#endif\n \n \t.global\t___mulsi3\n ___mulsi3:"}, {"sha": "236ebccc8c41e19c008d3e38157c25a1ec9f5b10", "filename": "gcc/config/h8300/t-h8300", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1616dd9e81f077a581da475d45d379d7959fb04/gcc%2Fconfig%2Fh8300%2Ft-h8300", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1616dd9e81f077a581da475d45d379d7959fb04/gcc%2Fconfig%2Fh8300%2Ft-h8300", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Ft-h8300?ref=a1616dd9e81f077a581da475d45d379d7959fb04", "patch": "@@ -18,8 +18,8 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#endif' >> fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n-MULTILIB_OPTIONS = mh mint32\n-MULTILIB_DIRNAMES = h8300h int32\n+MULTILIB_OPTIONS = mh/ms mint32\n+MULTILIB_DIRNAMES = h8300h h8300s int32\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib"}]}