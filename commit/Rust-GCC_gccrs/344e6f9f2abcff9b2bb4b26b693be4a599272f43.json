{"sha": "344e6f9f2abcff9b2bb4b26b693be4a599272f43", "node_id": "C_kwDOANBUbNoAKDM0NGU2ZjlmMmFiY2ZmOWIyYmI0YjI2YjY5M2JlNGE1OTkyNzJmNDM", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2022-03-11T03:07:00Z"}, "committer": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2022-03-14T16:39:47Z"}, "message": "Enable libsanitizer build on mips64\n\nBootstrapped and regtested on mips64-linux-gnuabi64.\n\nbootstrap-ubsan revealed 3 bugs (PR 104842, 104843, 104851).\nbootstrap-asan did not reveal any new bug.\n\ngcc/\n\n\t* config/mips/mips.h (SUBTARGET_SHADOW_OFFSET): Define.\n\t* config/mips/mips.cc (mips_option_override): Make\n\t-fsanitize=address imply -fasynchronous-unwind-tables.  This is\n\tneeded by libasan for stack backtrace on MIPS.\n\t(mips_asan_shadow_offset): Return SUBTARGET_SHADOW_OFFSET.\n\ngcc/testsuite:\n\n\t* c-c++-common/asan/global-overflow-1.c: Skip for MIPS with some\n\toptimization levels because inaccurate debug info is causing\n\tdg-output mismatch on line numbers.\n\t* g++.dg/asan/large-func-test-1.C: Likewise.\n\nlibsanitizer/\n\n\t* configure.tgt: Enable build on mips*64*-*-linux*.", "tree": {"sha": "8e6197eecc695f4abb1e8179a27cde47a9ebc509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e6197eecc695f4abb1e8179a27cde47a9ebc509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/344e6f9f2abcff9b2bb4b26b693be4a599272f43", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEEunTLnZqV9wGnXaw2V5HFsy7NNwFAmIvb9sACgkQ2V5HFsy7\nNNysag//cRNkxrt76hr3aB7jgafIulf8SmkV6iGaBWOE1+Kub2lBfC+m3OF8uI5n\nkuzlnUC25s9Nsxkx/dPXtsK7QwnA6zEhgTKmfmF+lKmChYhim6QyqNgCJHZOdOP6\n5YBAebLfnfX+CgK333lVXF6bYRzGmJx15kc1W39nqF1SuxQT24RPQDlY7FU+9Ihw\n6qy8EVJdhuRU8eI8S9hD1uWVRol0W0gUAAN4C987LipqHTdZxR1WKojU55ivaRwQ\nS4eITe/DZvR1EC0j20laizm9oZbh409kp5SnKW2vCCZxhC/MH9rDoAw+qfFJjv3T\n+4hLBEX56QvQ84rh4yyq4GWuVlSkwInAvGQlFzSVr/abPufnFZfJxyo128BW6lFv\nsiSHiMIvA4CrArx3I/a/pZrJHH7NL9juri3H82XT9iHcmSzPZm+jojyf+qU6tPEv\nU13FPtRSuwOx1BfqTYv9obCpiC6ibCjYsd/HJV0X5ntSVamK8gHrbu2DZA0IsiGf\nlUFkUhNyRLbiDZHLZzz+E28P9uvE0tWueYZUpa0vRiKDXEuv5PkcDHrv9hJJc1LF\n2oNizL+cmXEX5ypI8WMcE+/ged9d7cA8X6CGkHMELyebNUdOTGeGzxUlAgbICv9G\nRcScx7luS/5AvgIbD2mTGhDaEt7VhJh7NpeQnKCJzBCsrCIEaoE=\n=xgFj\n-----END PGP SIGNATURE-----", "payload": "tree 8e6197eecc695f4abb1e8179a27cde47a9ebc509\nparent a60a3a95d0f6bb11567a13b8684c97671ef12e1d\nauthor Xi Ruoyao <xry111@mengyan1223.wang> 1646968020 +0800\ncommitter Xi Ruoyao <xry111@mengyan1223.wang> 1647275987 +0800\n\nEnable libsanitizer build on mips64\n\nBootstrapped and regtested on mips64-linux-gnuabi64.\n\nbootstrap-ubsan revealed 3 bugs (PR 104842, 104843, 104851).\nbootstrap-asan did not reveal any new bug.\n\ngcc/\n\n\t* config/mips/mips.h (SUBTARGET_SHADOW_OFFSET): Define.\n\t* config/mips/mips.cc (mips_option_override): Make\n\t-fsanitize=address imply -fasynchronous-unwind-tables.  This is\n\tneeded by libasan for stack backtrace on MIPS.\n\t(mips_asan_shadow_offset): Return SUBTARGET_SHADOW_OFFSET.\n\ngcc/testsuite:\n\n\t* c-c++-common/asan/global-overflow-1.c: Skip for MIPS with some\n\toptimization levels because inaccurate debug info is causing\n\tdg-output mismatch on line numbers.\n\t* g++.dg/asan/large-func-test-1.C: Likewise.\n\nlibsanitizer/\n\n\t* configure.tgt: Enable build on mips*64*-*-linux*.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/344e6f9f2abcff9b2bb4b26b693be4a599272f43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/344e6f9f2abcff9b2bb4b26b693be4a599272f43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/344e6f9f2abcff9b2bb4b26b693be4a599272f43/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a60a3a95d0f6bb11567a13b8684c97671ef12e1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a60a3a95d0f6bb11567a13b8684c97671ef12e1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a60a3a95d0f6bb11567a13b8684c97671ef12e1d"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "a1c4b437cd4affb52cc47bf1c80047d8c46442a1", "filename": "gcc/config/mips/mips.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344e6f9f2abcff9b2bb4b26b693be4a599272f43/gcc%2Fconfig%2Fmips%2Fmips.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344e6f9f2abcff9b2bb4b26b693be4a599272f43/gcc%2Fconfig%2Fmips%2Fmips.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.cc?ref=344e6f9f2abcff9b2bb4b26b693be4a599272f43", "patch": "@@ -19974,6 +19974,13 @@ mips_option_override (void)\n \ttarget_flags |= MASK_64BIT;\n     }\n \n+  /* -fsanitize=address needs to turn on -fasynchronous-unwind-tables in\n+     order for tracebacks to be complete but not if any\n+     -fasynchronous-unwind-table were already specified.  */\n+  if (flag_sanitize & SANITIZE_USER_ADDRESS\n+      && !global_options_set.x_flag_asynchronous_unwind_tables)\n+    flag_asynchronous_unwind_tables = 1;\n+\n   if ((target_flags_explicit & MASK_FLOAT64) != 0)\n     {\n       if (mips_isa_rev >= 6 && !TARGET_FLOAT64)\n@@ -22591,7 +22598,7 @@ mips_constant_alignment (const_tree exp, HOST_WIDE_INT align)\n static unsigned HOST_WIDE_INT\n mips_asan_shadow_offset (void)\n {\n-  return 0x0aaa0000;\n+  return SUBTARGET_SHADOW_OFFSET;\n }\n \n /* Implement TARGET_STARTING_FRAME_OFFSET.  See mips_compute_frame_info"}, {"sha": "858bbba3a369a9cc5a65cbac345c83b56c75455c", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344e6f9f2abcff9b2bb4b26b693be4a599272f43/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344e6f9f2abcff9b2bb4b26b693be4a599272f43/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=344e6f9f2abcff9b2bb4b26b693be4a599272f43", "patch": "@@ -3463,3 +3463,10 @@ struct GTY(())  machine_function {\n    && !TARGET_MICROMIPS && !TARGET_FIX_24K)\n \n #define NEED_INDICATE_EXEC_STACK 0\n+\n+/* Define the shadow offset for asan. Other OS's can override in the\n+   respective tm.h files.  */\n+#ifndef SUBTARGET_SHADOW_OFFSET\n+#define SUBTARGET_SHADOW_OFFSET \\\n+  (POINTER_SIZE == 64 ? HOST_WIDE_INT_1 << 37 : HOST_WIDE_INT_C (0x0aaa0000))\n+#endif"}, {"sha": "ec412231be0d9cf390de2acf595329f2dd69419d", "filename": "gcc/testsuite/c-c++-common/asan/global-overflow-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344e6f9f2abcff9b2bb4b26b693be4a599272f43/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344e6f9f2abcff9b2bb4b26b693be4a599272f43/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c?ref=344e6f9f2abcff9b2bb4b26b693be4a599272f43", "patch": "@@ -22,6 +22,7 @@ int main() {\n   return res;\n }\n \n+/* { dg-skip-if \"inaccurate debug info\" { mips*-*-* } { \"*\" } { \"-O0\" } } */\n /* { dg-output \"READ of size 1 at 0x\\[0-9a-f\\]+ thread T0.*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*global-overflow-1.c:20|\\[^\\n\\r]*:0|\\[^\\n\\r]*\\\\+0x\\[0-9a-z\\]*)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r).*\" } */\n /* { dg-output \"0x\\[0-9a-f\\]+ is located 0 bytes to the right of global variable\" } */"}, {"sha": "ac9deb898c8ad19185d4c5b14d2a81179f6722b4", "filename": "gcc/testsuite/g++.dg/asan/large-func-test-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344e6f9f2abcff9b2bb4b26b693be4a599272f43/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Flarge-func-test-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344e6f9f2abcff9b2bb4b26b693be4a599272f43/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Flarge-func-test-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Flarge-func-test-1.C?ref=344e6f9f2abcff9b2bb4b26b693be4a599272f43", "patch": "@@ -35,6 +35,7 @@ int main() {\n   delete x;\n }\n \n+// { dg-skip-if \"inaccurate debug info\" { mips*-*-* } { \"-Os\" } { \"\" }  }\n // { dg-output \"ERROR: AddressSanitizer:? heap-buffer-overflow on address\\[^\\n\\r]*\" }\n // { dg-output \"0x\\[0-9a-f\\]+ at pc 0x\\[0-9a-f\\]+ bp 0x\\[0-9a-f\\]+ sp 0x\\[0-9a-f\\]+\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"\\[^\\n\\r]*READ of size 4 at 0x\\[0-9a-f\\]+ thread T0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" }"}, {"sha": "fb89df4935cc24ef21e13ef9aae68fb78b87f43e", "filename": "libsanitizer/configure.tgt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344e6f9f2abcff9b2bb4b26b693be4a599272f43/libsanitizer%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344e6f9f2abcff9b2bb4b26b693be4a599272f43/libsanitizer%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.tgt?ref=344e6f9f2abcff9b2bb4b26b693be4a599272f43", "patch": "@@ -54,10 +54,6 @@ case \"${target}\" in\n \t;;\n   arm*-*-linux*)\n \t;;\n-  mips*64*-*-linux*)\n-\t# This clause is only here to not match the supported mips*-*-linux*.\n-\tUNSUPPORTED=1\n-\t;;\n   mips*-*-linux*)\n \t;;\n   aarch64*-*-linux*)"}]}