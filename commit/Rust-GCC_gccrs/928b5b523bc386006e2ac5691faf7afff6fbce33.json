{"sha": "928b5b523bc386006e2ac5691faf7afff6fbce33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI4YjViNTIzYmMzODYwMDZlMmFjNTY5MWZhZjdhZmZmNmZiY2UzMw==", "commit": {"author": {"name": "Ludovic Brenta", "email": "ludovic@ludovic-brenta.org", "date": "2015-12-06T14:11:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-12-06T14:11:17Z"}, "message": "re PR ada/49944 (Bootstrapping on x86_64-pc-kfreebsd-gnu fails with \"s-taprop.adb:856:10: \"pthread_attr_setaffinity_np\" is undefined (more references follow)\")\n\n\tPR ada/49944\n\t* s-osinte-freebsd.ads: Minor reformatting.\n\t(Stack_Base_Available): Correct comments.\n\t* s-osinte-kfreebsd-gnu.ads (Time_Slice_Supported, nanosleep,\n\tclock_id_t, clock_gettime, Stack_Base_Available, Get_Page_Size,\n\tmprotect, pthread_mutexattr_setprotocol,pthread_mutexattr_getprotocol\n\tpthread_mutexattr_setprioceiling, pthread_mutexattr_getprioceiling,\n\tpthread_attr_setscope, pthread_attr_getscope,\n\tpthread_attr_setinheritsched, pthread_attr_getinheritsched,\n\tTime_Slice_Supported): Copy from s-osinte-freebsd.ads.\n\t* gcc-interface/Makefile.in (x86/kfreebsd): Use the POSIX version of\n\tthe System.Task_Primitives.Operations package.\n\nFrom-SVN: r231333", "tree": {"sha": "540371fbfb35177f86b0fbaa73f384717f8067ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/540371fbfb35177f86b0fbaa73f384717f8067ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/928b5b523bc386006e2ac5691faf7afff6fbce33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/928b5b523bc386006e2ac5691faf7afff6fbce33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/928b5b523bc386006e2ac5691faf7afff6fbce33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/928b5b523bc386006e2ac5691faf7afff6fbce33/comments", "author": {"login": "lbrenta", "id": 63524058, "node_id": "MDQ6VXNlcjYzNTI0MDU4", "avatar_url": "https://avatars.githubusercontent.com/u/63524058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbrenta", "html_url": "https://github.com/lbrenta", "followers_url": "https://api.github.com/users/lbrenta/followers", "following_url": "https://api.github.com/users/lbrenta/following{/other_user}", "gists_url": "https://api.github.com/users/lbrenta/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbrenta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbrenta/subscriptions", "organizations_url": "https://api.github.com/users/lbrenta/orgs", "repos_url": "https://api.github.com/users/lbrenta/repos", "events_url": "https://api.github.com/users/lbrenta/events{/privacy}", "received_events_url": "https://api.github.com/users/lbrenta/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1b7620802b03045c0833de64f793624212545c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b7620802b03045c0833de64f793624212545c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b7620802b03045c0833de64f793624212545c8"}], "stats": {"total": 131, "additions": 117, "deletions": 14}, "files": [{"sha": "a238a4386a354ecc03e7fde6d521a81ff13a3564", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928b5b523bc386006e2ac5691faf7afff6fbce33/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928b5b523bc386006e2ac5691faf7afff6fbce33/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=928b5b523bc386006e2ac5691faf7afff6fbce33", "patch": "@@ -1,3 +1,18 @@\n+2015-12-06  Ludovic Brenta  <ludovic@ludovic-brenta.org>\n+\n+\tPR ada/49944\n+\t* s-osinte-freebsd.ads: Minor reformatting.\n+\t(Stack_Base_Available): Correct comments.\n+\t* s-osinte-kfreebsd-gnu.ads (Time_Slice_Supported, nanosleep,\n+\tclock_id_t, clock_gettime, Stack_Base_Available, Get_Page_Size,\n+\tmprotect, pthread_mutexattr_setprotocol,pthread_mutexattr_getprotocol\n+\tpthread_mutexattr_setprioceiling, pthread_mutexattr_getprioceiling,\n+\tpthread_attr_setscope, pthread_attr_getscope,\n+\tpthread_attr_setinheritsched, pthread_attr_getinheritsched,\n+\tTime_Slice_Supported): Copy from s-osinte-freebsd.ads.\n+\t* gcc-interface/Makefile.in (x86/kfreebsd): Use the POSIX version of\n+\tthe System.Task_Primitives.Operations package.\n+\n 2015-12-06  Ludovic Brenta  <ludovic@ludovic-brenta.org>\n \n \tPR ada/49940"}, {"sha": "c5e6b3013e2142b4732d45df2bdf6212624ad565", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928b5b523bc386006e2ac5691faf7afff6fbce33/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928b5b523bc386006e2ac5691faf7afff6fbce33/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=928b5b523bc386006e2ac5691faf7afff6fbce33", "patch": "@@ -1398,9 +1398,7 @@ ifeq ($(strip $(filter-out %86 kfreebsd%,$(target_cpu) $(target_os))),)\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osinte.ads<s-osinte-kfreebsd-gnu.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n-  s-taprop.adb<s-taprop-linux.adb \\\n-  s-tasinf.ads<s-tasinf-linux.ads \\\n-  s-tasinf.adb<s-tasinf-linux.adb \\\n+  s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n@@ -1431,9 +1429,7 @@ ifeq ($(strip $(filter-out x86_64 kfreebsd%,$(target_cpu) $(target_os))),)\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osinte.ads<s-osinte-kfreebsd-gnu.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n-  s-taprop.adb<s-taprop-linux.adb \\\n-  s-tasinf.ads<s-tasinf-linux.ads \\\n-  s-tasinf.adb<s-tasinf-linux.adb \\\n+  s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   system.ads<system-freebsd-x86_64.ads"}, {"sha": "a5ba5f188c803b8ed548b6385aa495fc744d491c", "filename": "gcc/ada/s-osinte-freebsd.ads", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928b5b523bc386006e2ac5691faf7afff6fbce33/gcc%2Fada%2Fs-osinte-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928b5b523bc386006e2ac5691faf7afff6fbce33/gcc%2Fada%2Fs-osinte-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-freebsd.ads?ref=928b5b523bc386006e2ac5691faf7afff6fbce33", "patch": "@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the FreeBSD PTHREADS version of this package\n+--  This is the FreeBSD (POSIX Threads) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by the tasking run-time (libgnarl).\n@@ -197,7 +197,7 @@ package System.OS_Interface is\n \n    type timespec is private;\n \n-   function nanosleep (rqtp, rmtp : access timespec)  return int;\n+   function nanosleep (rqtp, rmtp : access timespec) return int;\n    pragma Import (C, nanosleep, \"nanosleep\");\n \n    type clockid_t is new int;\n@@ -322,10 +322,7 @@ package System.OS_Interface is\n    --  No alternate signal stack is used on this platform\n \n    Stack_Base_Available : constant Boolean := False;\n-   --  Indicates whether the stack base is available on this target. This\n-   --  allows us to share s-osinte.adb between all the FSU run time. Note that\n-   --  this value can only be true if pthread_t has a complete definition that\n-   --  corresponds exactly to the C header files.\n+   --  Indicates whether the stack base is available on this target\n \n    function Get_Stack_Base (thread : pthread_t) return Address;\n    pragma Inline (Get_Stack_Base);"}, {"sha": "a11cc6b4f9cb760d07daa304bb14643df17888ba", "filename": "gcc/ada/s-osinte-kfreebsd-gnu.ads", "status": "modified", "additions": 97, "deletions": 2, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/928b5b523bc386006e2ac5691faf7afff6fbce33/gcc%2Fada%2Fs-osinte-kfreebsd-gnu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/928b5b523bc386006e2ac5691faf7afff6fbce33/gcc%2Fada%2Fs-osinte-kfreebsd-gnu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-kfreebsd-gnu.ads?ref=928b5b523bc386006e2ac5691faf7afff6fbce33", "patch": "@@ -30,7 +30,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the GNU/kFreeBSD (GNU/LinuxThreads) version of this package\n+--  This is the GNU/kFreeBSD (POSIX Threads) version of this package\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n@@ -198,8 +198,24 @@ package System.OS_Interface is\n    -- Time --\n    ----------\n \n+   Time_Slice_Supported : constant Boolean := True;\n+   --  Indicates whether time slicing is supported (i.e SCHED_RR is supported)\n+\n    type timespec is private;\n \n+   function nanosleep (rqtp, rmtp : access timespec) return int;\n+   pragma Import (C, nanosleep, \"nanosleep\");\n+\n+   type clockid_t is private;\n+\n+   CLOCK_REALTIME : constant clockid_t;\n+\n+   function clock_gettime\n+     (clock_id : clockid_t;\n+      tp       : access timespec)\n+      return int;\n+   pragma Import (C, clock_gettime, \"clock_gettime\");\n+\n    function To_Duration (TS : timespec) return Duration;\n    pragma Inline (To_Duration);\n \n@@ -271,6 +287,10 @@ package System.OS_Interface is\n    type pthread_key_t       is private;\n \n    PTHREAD_CREATE_DETACHED : constant := 1;\n+   PTHREAD_CREATE_JOINABLE : constant := 0;\n+\n+   PTHREAD_SCOPE_PROCESS : constant := 0;\n+   PTHREAD_SCOPE_SYSTEM  : constant := 2;\n \n    -----------\n    -- Stack --\n@@ -294,9 +314,29 @@ package System.OS_Interface is\n    Alternate_Stack_Size : constant := 0;\n    --  No alternate signal stack is used on this platform\n \n+   Stack_Base_Available : constant Boolean := False;\n+   --  Indicates whether the stack base is available on this target\n+\n    function Get_Stack_Base (thread : pthread_t) return Address;\n    pragma Inline (Get_Stack_Base);\n-   --  This is a dummy procedure to share some GNULLI files\n+   --  returns the stack base of the specified thread. Only call this function\n+   --  when Stack_Base_Available is True.\n+\n+   function Get_Page_Size return size_t;\n+   function Get_Page_Size return Address;\n+   pragma Import (C, Get_Page_Size, \"getpagesize\");\n+   --  Returns the size of a page\n+\n+   PROT_NONE  : constant := 0;\n+   PROT_READ  : constant := 1;\n+   PROT_WRITE : constant := 2;\n+   PROT_EXEC  : constant := 4;\n+   PROT_ALL   : constant := PROT_READ + PROT_WRITE + PROT_EXEC;\n+   PROT_ON    : constant := PROT_NONE;\n+   PROT_OFF   : constant := PROT_ALL;\n+\n+   function mprotect (addr : Address; len : size_t; prot : int) return int;\n+   pragma Import (C, mprotect);\n \n    ---------------------------------------\n    -- Nonstandard Thread Initialization --\n@@ -385,6 +425,36 @@ package System.OS_Interface is\n    -- POSIX.1c  Section 13 --\n    --------------------------\n \n+   PTHREAD_PRIO_NONE    : constant := 0;\n+   PTHREAD_PRIO_PROTECT : constant := 2;\n+   PTHREAD_PRIO_INHERIT : constant := 1;\n+\n+   function pthread_mutexattr_setprotocol\n+     (attr     : access pthread_mutexattr_t;\n+      protocol : int) return int;\n+   pragma Import\n+      (C, pthread_mutexattr_setprotocol, \"pthread_mutexattr_setprotocol\");\n+\n+   function pthread_mutexattr_getprotocol\n+     (attr     : access pthread_mutexattr_t;\n+      protocol : access int) return int;\n+   pragma Import\n+     (C, pthread_mutexattr_getprotocol, \"pthread_mutexattr_getprotocol\");\n+\n+   function pthread_mutexattr_setprioceiling\n+     (attr     : access pthread_mutexattr_t;\n+      prioceiling : int) return int;\n+   pragma Import\n+     (C, pthread_mutexattr_setprioceiling,\n+      \"pthread_mutexattr_setprioceiling\");\n+\n+   function pthread_mutexattr_getprioceiling\n+     (attr     : access pthread_mutexattr_t;\n+      prioceiling : access int) return int;\n+   pragma Import\n+     (C, pthread_mutexattr_getprioceiling,\n+      \"pthread_mutexattr_getprioceiling\");\n+\n    type struct_sched_param is record\n       sched_priority : int;  --  scheduling priority\n    end record;\n@@ -396,6 +466,28 @@ package System.OS_Interface is\n       param  : access struct_sched_param) return int;\n    pragma Import (C, pthread_setschedparam, \"pthread_setschedparam\");\n \n+   function pthread_attr_setscope\n+     (attr            : access pthread_attr_t;\n+      contentionscope : int) return int;\n+   pragma Import (C, pthread_attr_setscope, \"pthread_attr_setscope\");\n+\n+   function pthread_attr_getscope\n+     (attr            : access pthread_attr_t;\n+      contentionscope : access int) return int;\n+   pragma Import (C, pthread_attr_getscope, \"pthread_attr_getscope\");\n+\n+   function pthread_attr_setinheritsched\n+     (attr            : access pthread_attr_t;\n+      inheritsched : int) return int;\n+   pragma Import\n+     (C, pthread_attr_setinheritsched, \"pthread_attr_setinheritsched\");\n+\n+   function pthread_attr_getinheritsched\n+     (attr         : access pthread_attr_t;\n+      inheritsched : access int) return int;\n+   pragma Import\n+     (C, pthread_attr_getinheritsched, \"pthread_attr_getinheritsched\");\n+\n    function pthread_attr_setschedpolicy\n      (attr   : access pthread_attr_t;\n       policy : int) return int;\n@@ -506,6 +598,9 @@ private\n    end record;\n    pragma Convention (C, timespec);\n \n+   type clockid_t is new int;\n+   CLOCK_REALTIME : constant clockid_t := 0;\n+\n    type pthread_attr_t is record\n       detachstate   : int;\n       schedpolicy   : int;"}]}