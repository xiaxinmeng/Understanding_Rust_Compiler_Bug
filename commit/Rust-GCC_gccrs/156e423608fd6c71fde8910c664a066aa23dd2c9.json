{"sha": "156e423608fd6c71fde8910c664a066aa23dd2c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU2ZTQyMzYwOGZkNmM3MWZkZTg5MTBjNjY0YTA2NmFhMjNkZDJjOQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2009-11-03T17:58:59Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2009-11-03T17:58:59Z"}, "message": "neon.ml (vectype): Add T_floatSF.\n\n2009-11-03  Paul Brook  <paul@codesourcery.com>\n\n\tgcc/\n\t* config/arm/neon.ml (vectype): Add T_floatSF.\n\t(string_of_vectype): Ditto.\n\t* config/arm/neon-gen.ml (signed_ctype): Add T_floatSF.\n\t(deftypes): Use float for float32_t.\n\t* config/arm/arm_neon.h: Regenerate.\n\nFrom-SVN: r153858", "tree": {"sha": "623ee31021da109ea2285ed6a7e863984225ad31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/623ee31021da109ea2285ed6a7e863984225ad31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/156e423608fd6c71fde8910c664a066aa23dd2c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156e423608fd6c71fde8910c664a066aa23dd2c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/156e423608fd6c71fde8910c664a066aa23dd2c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156e423608fd6c71fde8910c664a066aa23dd2c9/comments", "author": null, "committer": null, "parents": [{"sha": "60d21717a2dd6a4132b45c4dc8c3ad0548349bfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60d21717a2dd6a4132b45c4dc8c3ad0548349bfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60d21717a2dd6a4132b45c4dc8c3ad0548349bfb"}], "stats": {"total": 114, "additions": 62, "deletions": 52}, "files": [{"sha": "ccab39cdb474b915711fb3bc724e89dd3dfb0cc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156e423608fd6c71fde8910c664a066aa23dd2c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156e423608fd6c71fde8910c664a066aa23dd2c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=156e423608fd6c71fde8910c664a066aa23dd2c9", "patch": "@@ -1,3 +1,11 @@\n+2009-11-03  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/neon.ml (vectype): Add T_floatSF.\n+\t(string_of_vectype): Ditto.\n+\t* config/arm/neon-gen.ml (signed_ctype): Add T_floatSF.\n+\t(deftypes): Use float for float32_t.\n+\t* config/arm/arm_neon.h: Regenerate.\n+\n 2009-11-03  Nick Clifton  <nickc@redhat.com>\n \t    Kevin Buettner  <kevinb@redhat.com>\n "}, {"sha": "ccfc742607722954b55d61fc412015f00ad1528c", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156e423608fd6c71fde8910c664a066aa23dd2c9/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156e423608fd6c71fde8910c664a066aa23dd2c9/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=156e423608fd6c71fde8910c664a066aa23dd2c9", "patch": "@@ -61,7 +61,7 @@ typedef __builtin_neon_uhi uint16x8_t\t__attribute__ ((__vector_size__ (16)));\n typedef __builtin_neon_usi uint32x4_t\t__attribute__ ((__vector_size__ (16)));\n typedef __builtin_neon_udi uint64x2_t\t__attribute__ ((__vector_size__ (16)));\n \n-typedef __builtin_neon_sf float32_t;\n+typedef float float32_t;\n typedef __builtin_neon_poly8 poly8_t;\n typedef __builtin_neon_poly16 poly16_t;\n \n@@ -5085,7 +5085,7 @@ vset_lane_s32 (int32_t __a, int32x2_t __b, const int __c)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vset_lane_f32 (float32_t __a, float32x2_t __b, const int __c)\n {\n-  return (float32x2_t)__builtin_neon_vset_lanev2sf (__a, __b, __c);\n+  return (float32x2_t)__builtin_neon_vset_lanev2sf ((__builtin_neon_sf) __a, __b, __c);\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n@@ -5151,7 +5151,7 @@ vsetq_lane_s32 (int32_t __a, int32x4_t __b, const int __c)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vsetq_lane_f32 (float32_t __a, float32x4_t __b, const int __c)\n {\n-  return (float32x4_t)__builtin_neon_vset_lanev4sf (__a, __b, __c);\n+  return (float32x4_t)__builtin_neon_vset_lanev4sf ((__builtin_neon_sf) __a, __b, __c);\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n@@ -5283,7 +5283,7 @@ vdup_n_s32 (int32_t __a)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vdup_n_f32 (float32_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vdup_nv2sf (__a);\n+  return (float32x2_t)__builtin_neon_vdup_nv2sf ((__builtin_neon_sf) __a);\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n@@ -5349,7 +5349,7 @@ vdupq_n_s32 (int32_t __a)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vdupq_n_f32 (float32_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vdup_nv4sf (__a);\n+  return (float32x4_t)__builtin_neon_vdup_nv4sf ((__builtin_neon_sf) __a);\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n@@ -5415,7 +5415,7 @@ vmov_n_s32 (int32_t __a)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vmov_n_f32 (float32_t __a)\n {\n-  return (float32x2_t)__builtin_neon_vdup_nv2sf (__a);\n+  return (float32x2_t)__builtin_neon_vdup_nv2sf ((__builtin_neon_sf) __a);\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n@@ -5481,7 +5481,7 @@ vmovq_n_s32 (int32_t __a)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vmovq_n_f32 (float32_t __a)\n {\n-  return (float32x4_t)__builtin_neon_vdup_nv4sf (__a);\n+  return (float32x4_t)__builtin_neon_vdup_nv4sf ((__builtin_neon_sf) __a);\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n@@ -6591,7 +6591,7 @@ vmul_n_s32 (int32x2_t __a, int32_t __b)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vmul_n_f32 (float32x2_t __a, float32_t __b)\n {\n-  return (float32x2_t)__builtin_neon_vmul_nv2sf (__a, __b, 3);\n+  return (float32x2_t)__builtin_neon_vmul_nv2sf (__a, (__builtin_neon_sf) __b, 3);\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n@@ -6621,7 +6621,7 @@ vmulq_n_s32 (int32x4_t __a, int32_t __b)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vmulq_n_f32 (float32x4_t __a, float32_t __b)\n {\n-  return (float32x4_t)__builtin_neon_vmul_nv4sf (__a, __b, 3);\n+  return (float32x4_t)__builtin_neon_vmul_nv4sf (__a, (__builtin_neon_sf) __b, 3);\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n@@ -6735,7 +6735,7 @@ vmla_n_s32 (int32x2_t __a, int32x2_t __b, int32_t __c)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vmla_n_f32 (float32x2_t __a, float32x2_t __b, float32_t __c)\n {\n-  return (float32x2_t)__builtin_neon_vmla_nv2sf (__a, __b, __c, 3);\n+  return (float32x2_t)__builtin_neon_vmla_nv2sf (__a, __b, (__builtin_neon_sf) __c, 3);\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n@@ -6765,7 +6765,7 @@ vmlaq_n_s32 (int32x4_t __a, int32x4_t __b, int32_t __c)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vmlaq_n_f32 (float32x4_t __a, float32x4_t __b, float32_t __c)\n {\n-  return (float32x4_t)__builtin_neon_vmla_nv4sf (__a, __b, __c, 3);\n+  return (float32x4_t)__builtin_neon_vmla_nv4sf (__a, __b, (__builtin_neon_sf) __c, 3);\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n@@ -6831,7 +6831,7 @@ vmls_n_s32 (int32x2_t __a, int32x2_t __b, int32_t __c)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vmls_n_f32 (float32x2_t __a, float32x2_t __b, float32_t __c)\n {\n-  return (float32x2_t)__builtin_neon_vmls_nv2sf (__a, __b, __c, 3);\n+  return (float32x2_t)__builtin_neon_vmls_nv2sf (__a, __b, (__builtin_neon_sf) __c, 3);\n }\n \n __extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n@@ -6861,7 +6861,7 @@ vmlsq_n_s32 (int32x4_t __a, int32x4_t __b, int32_t __c)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vmlsq_n_f32 (float32x4_t __a, float32x4_t __b, float32_t __c)\n {\n-  return (float32x4_t)__builtin_neon_vmls_nv4sf (__a, __b, __c, 3);\n+  return (float32x4_t)__builtin_neon_vmls_nv4sf (__a, __b, (__builtin_neon_sf) __c, 3);\n }\n \n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n@@ -7851,7 +7851,7 @@ vld1_s64 (const int64_t * __a)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vld1_f32 (const float32_t * __a)\n {\n-  return (float32x2_t)__builtin_neon_vld1v2sf (__a);\n+  return (float32x2_t)__builtin_neon_vld1v2sf ((const __builtin_neon_sf *) __a);\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n@@ -7917,7 +7917,7 @@ vld1q_s64 (const int64_t * __a)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vld1q_f32 (const float32_t * __a)\n {\n-  return (float32x4_t)__builtin_neon_vld1v4sf (__a);\n+  return (float32x4_t)__builtin_neon_vld1v4sf ((const __builtin_neon_sf *) __a);\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n@@ -7977,7 +7977,7 @@ vld1_lane_s32 (const int32_t * __a, int32x2_t __b, const int __c)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vld1_lane_f32 (const float32_t * __a, float32x2_t __b, const int __c)\n {\n-  return (float32x2_t)__builtin_neon_vld1_lanev2sf (__a, __b, __c);\n+  return (float32x2_t)__builtin_neon_vld1_lanev2sf ((const __builtin_neon_sf *) __a, __b, __c);\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n@@ -8043,7 +8043,7 @@ vld1q_lane_s32 (const int32_t * __a, int32x4_t __b, const int __c)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vld1q_lane_f32 (const float32_t * __a, float32x4_t __b, const int __c)\n {\n-  return (float32x4_t)__builtin_neon_vld1_lanev4sf (__a, __b, __c);\n+  return (float32x4_t)__builtin_neon_vld1_lanev4sf ((const __builtin_neon_sf *) __a, __b, __c);\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n@@ -8109,7 +8109,7 @@ vld1_dup_s32 (const int32_t * __a)\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vld1_dup_f32 (const float32_t * __a)\n {\n-  return (float32x2_t)__builtin_neon_vld1_dupv2sf (__a);\n+  return (float32x2_t)__builtin_neon_vld1_dupv2sf ((const __builtin_neon_sf *) __a);\n }\n \n __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n@@ -8175,7 +8175,7 @@ vld1q_dup_s32 (const int32_t * __a)\n __extension__ static __inline float32x4_t __attribute__ ((__always_inline__))\n vld1q_dup_f32 (const float32_t * __a)\n {\n-  return (float32x4_t)__builtin_neon_vld1_dupv4sf (__a);\n+  return (float32x4_t)__builtin_neon_vld1_dupv4sf ((const __builtin_neon_sf *) __a);\n }\n \n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n@@ -8247,7 +8247,7 @@ vst1_s64 (int64_t * __a, int64x1_t __b)\n __extension__ static __inline void __attribute__ ((__always_inline__))\n vst1_f32 (float32_t * __a, float32x2_t __b)\n {\n-  __builtin_neon_vst1v2sf (__a, __b);\n+  __builtin_neon_vst1v2sf ((__builtin_neon_sf *) __a, __b);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -8313,7 +8313,7 @@ vst1q_s64 (int64_t * __a, int64x2_t __b)\n __extension__ static __inline void __attribute__ ((__always_inline__))\n vst1q_f32 (float32_t * __a, float32x4_t __b)\n {\n-  __builtin_neon_vst1v4sf (__a, __b);\n+  __builtin_neon_vst1v4sf ((__builtin_neon_sf *) __a, __b);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -8373,7 +8373,7 @@ vst1_lane_s32 (int32_t * __a, int32x2_t __b, const int __c)\n __extension__ static __inline void __attribute__ ((__always_inline__))\n vst1_lane_f32 (float32_t * __a, float32x2_t __b, const int __c)\n {\n-  __builtin_neon_vst1_lanev2sf (__a, __b, __c);\n+  __builtin_neon_vst1_lanev2sf ((__builtin_neon_sf *) __a, __b, __c);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -8439,7 +8439,7 @@ vst1q_lane_s32 (int32_t * __a, int32x4_t __b, const int __c)\n __extension__ static __inline void __attribute__ ((__always_inline__))\n vst1q_lane_f32 (float32_t * __a, float32x4_t __b, const int __c)\n {\n-  __builtin_neon_vst1_lanev4sf (__a, __b, __c);\n+  __builtin_neon_vst1_lanev4sf ((__builtin_neon_sf *) __a, __b, __c);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -8512,7 +8512,7 @@ __extension__ static __inline float32x2x2_t __attribute__ ((__always_inline__))\n vld2_f32 (const float32_t * __a)\n {\n   union { float32x2x2_t __i; __builtin_neon_ti __o; } __rv;\n-  __rv.__o = __builtin_neon_vld2v2sf (__a);\n+  __rv.__o = __builtin_neon_vld2v2sf ((const __builtin_neon_sf *) __a);\n   return __rv.__i;\n }\n \n@@ -8600,7 +8600,7 @@ __extension__ static __inline float32x4x2_t __attribute__ ((__always_inline__))\n vld2q_f32 (const float32_t * __a)\n {\n   union { float32x4x2_t __i; __builtin_neon_oi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld2v4sf (__a);\n+  __rv.__o = __builtin_neon_vld2v4sf ((const __builtin_neon_sf *) __a);\n   return __rv.__i;\n }\n \n@@ -8676,7 +8676,7 @@ vld2_lane_f32 (const float32_t * __a, float32x2x2_t __b, const int __c)\n {\n   union { float32x2x2_t __i; __builtin_neon_ti __o; } __bu = { __b };\n   union { float32x2x2_t __i; __builtin_neon_ti __o; } __rv;\n-  __rv.__o = __builtin_neon_vld2_lanev2sf (__a, __bu.__o, __c);\n+  __rv.__o = __builtin_neon_vld2_lanev2sf ((const __builtin_neon_sf *) __a, __bu.__o, __c);\n   return __rv.__i;\n }\n \n@@ -8748,7 +8748,7 @@ vld2q_lane_f32 (const float32_t * __a, float32x4x2_t __b, const int __c)\n {\n   union { float32x4x2_t __i; __builtin_neon_oi __o; } __bu = { __b };\n   union { float32x4x2_t __i; __builtin_neon_oi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld2_lanev4sf (__a, __bu.__o, __c);\n+  __rv.__o = __builtin_neon_vld2_lanev4sf ((const __builtin_neon_sf *) __a, __bu.__o, __c);\n   return __rv.__i;\n }\n \n@@ -8807,7 +8807,7 @@ __extension__ static __inline float32x2x2_t __attribute__ ((__always_inline__))\n vld2_dup_f32 (const float32_t * __a)\n {\n   union { float32x2x2_t __i; __builtin_neon_ti __o; } __rv;\n-  __rv.__o = __builtin_neon_vld2_dupv2sf (__a);\n+  __rv.__o = __builtin_neon_vld2_dupv2sf ((const __builtin_neon_sf *) __a);\n   return __rv.__i;\n }\n \n@@ -8892,7 +8892,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst2_f32 (float32_t * __a, float32x2x2_t __b)\n {\n   union { float32x2x2_t __i; __builtin_neon_ti __o; } __bu = { __b };\n-  __builtin_neon_vst2v2sf (__a, __bu.__o);\n+  __builtin_neon_vst2v2sf ((__builtin_neon_sf *) __a, __bu.__o);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -8969,7 +8969,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst2q_f32 (float32_t * __a, float32x4x2_t __b)\n {\n   union { float32x4x2_t __i; __builtin_neon_oi __o; } __bu = { __b };\n-  __builtin_neon_vst2v4sf (__a, __bu.__o);\n+  __builtin_neon_vst2v4sf ((__builtin_neon_sf *) __a, __bu.__o);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -9032,7 +9032,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst2_lane_f32 (float32_t * __a, float32x2x2_t __b, const int __c)\n {\n   union { float32x2x2_t __i; __builtin_neon_ti __o; } __bu = { __b };\n-  __builtin_neon_vst2_lanev2sf (__a, __bu.__o, __c);\n+  __builtin_neon_vst2_lanev2sf ((__builtin_neon_sf *) __a, __bu.__o, __c);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -9088,7 +9088,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst2q_lane_f32 (float32_t * __a, float32x4x2_t __b, const int __c)\n {\n   union { float32x4x2_t __i; __builtin_neon_oi __o; } __bu = { __b };\n-  __builtin_neon_vst2_lanev4sf (__a, __bu.__o, __c);\n+  __builtin_neon_vst2_lanev4sf ((__builtin_neon_sf *) __a, __bu.__o, __c);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -9140,7 +9140,7 @@ __extension__ static __inline float32x2x3_t __attribute__ ((__always_inline__))\n vld3_f32 (const float32_t * __a)\n {\n   union { float32x2x3_t __i; __builtin_neon_ei __o; } __rv;\n-  __rv.__o = __builtin_neon_vld3v2sf (__a);\n+  __rv.__o = __builtin_neon_vld3v2sf ((const __builtin_neon_sf *) __a);\n   return __rv.__i;\n }\n \n@@ -9228,7 +9228,7 @@ __extension__ static __inline float32x4x3_t __attribute__ ((__always_inline__))\n vld3q_f32 (const float32_t * __a)\n {\n   union { float32x4x3_t __i; __builtin_neon_ci __o; } __rv;\n-  __rv.__o = __builtin_neon_vld3v4sf (__a);\n+  __rv.__o = __builtin_neon_vld3v4sf ((const __builtin_neon_sf *) __a);\n   return __rv.__i;\n }\n \n@@ -9304,7 +9304,7 @@ vld3_lane_f32 (const float32_t * __a, float32x2x3_t __b, const int __c)\n {\n   union { float32x2x3_t __i; __builtin_neon_ei __o; } __bu = { __b };\n   union { float32x2x3_t __i; __builtin_neon_ei __o; } __rv;\n-  __rv.__o = __builtin_neon_vld3_lanev2sf (__a, __bu.__o, __c);\n+  __rv.__o = __builtin_neon_vld3_lanev2sf ((const __builtin_neon_sf *) __a, __bu.__o, __c);\n   return __rv.__i;\n }\n \n@@ -9376,7 +9376,7 @@ vld3q_lane_f32 (const float32_t * __a, float32x4x3_t __b, const int __c)\n {\n   union { float32x4x3_t __i; __builtin_neon_ci __o; } __bu = { __b };\n   union { float32x4x3_t __i; __builtin_neon_ci __o; } __rv;\n-  __rv.__o = __builtin_neon_vld3_lanev4sf (__a, __bu.__o, __c);\n+  __rv.__o = __builtin_neon_vld3_lanev4sf ((const __builtin_neon_sf *) __a, __bu.__o, __c);\n   return __rv.__i;\n }\n \n@@ -9435,7 +9435,7 @@ __extension__ static __inline float32x2x3_t __attribute__ ((__always_inline__))\n vld3_dup_f32 (const float32_t * __a)\n {\n   union { float32x2x3_t __i; __builtin_neon_ei __o; } __rv;\n-  __rv.__o = __builtin_neon_vld3_dupv2sf (__a);\n+  __rv.__o = __builtin_neon_vld3_dupv2sf ((const __builtin_neon_sf *) __a);\n   return __rv.__i;\n }\n \n@@ -9520,7 +9520,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst3_f32 (float32_t * __a, float32x2x3_t __b)\n {\n   union { float32x2x3_t __i; __builtin_neon_ei __o; } __bu = { __b };\n-  __builtin_neon_vst3v2sf (__a, __bu.__o);\n+  __builtin_neon_vst3v2sf ((__builtin_neon_sf *) __a, __bu.__o);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -9597,7 +9597,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst3q_f32 (float32_t * __a, float32x4x3_t __b)\n {\n   union { float32x4x3_t __i; __builtin_neon_ci __o; } __bu = { __b };\n-  __builtin_neon_vst3v4sf (__a, __bu.__o);\n+  __builtin_neon_vst3v4sf ((__builtin_neon_sf *) __a, __bu.__o);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -9660,7 +9660,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst3_lane_f32 (float32_t * __a, float32x2x3_t __b, const int __c)\n {\n   union { float32x2x3_t __i; __builtin_neon_ei __o; } __bu = { __b };\n-  __builtin_neon_vst3_lanev2sf (__a, __bu.__o, __c);\n+  __builtin_neon_vst3_lanev2sf ((__builtin_neon_sf *) __a, __bu.__o, __c);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -9716,7 +9716,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst3q_lane_f32 (float32_t * __a, float32x4x3_t __b, const int __c)\n {\n   union { float32x4x3_t __i; __builtin_neon_ci __o; } __bu = { __b };\n-  __builtin_neon_vst3_lanev4sf (__a, __bu.__o, __c);\n+  __builtin_neon_vst3_lanev4sf ((__builtin_neon_sf *) __a, __bu.__o, __c);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -9768,7 +9768,7 @@ __extension__ static __inline float32x2x4_t __attribute__ ((__always_inline__))\n vld4_f32 (const float32_t * __a)\n {\n   union { float32x2x4_t __i; __builtin_neon_oi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld4v2sf (__a);\n+  __rv.__o = __builtin_neon_vld4v2sf ((const __builtin_neon_sf *) __a);\n   return __rv.__i;\n }\n \n@@ -9856,7 +9856,7 @@ __extension__ static __inline float32x4x4_t __attribute__ ((__always_inline__))\n vld4q_f32 (const float32_t * __a)\n {\n   union { float32x4x4_t __i; __builtin_neon_xi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld4v4sf (__a);\n+  __rv.__o = __builtin_neon_vld4v4sf ((const __builtin_neon_sf *) __a);\n   return __rv.__i;\n }\n \n@@ -9932,7 +9932,7 @@ vld4_lane_f32 (const float32_t * __a, float32x2x4_t __b, const int __c)\n {\n   union { float32x2x4_t __i; __builtin_neon_oi __o; } __bu = { __b };\n   union { float32x2x4_t __i; __builtin_neon_oi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld4_lanev2sf (__a, __bu.__o, __c);\n+  __rv.__o = __builtin_neon_vld4_lanev2sf ((const __builtin_neon_sf *) __a, __bu.__o, __c);\n   return __rv.__i;\n }\n \n@@ -10004,7 +10004,7 @@ vld4q_lane_f32 (const float32_t * __a, float32x4x4_t __b, const int __c)\n {\n   union { float32x4x4_t __i; __builtin_neon_xi __o; } __bu = { __b };\n   union { float32x4x4_t __i; __builtin_neon_xi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld4_lanev4sf (__a, __bu.__o, __c);\n+  __rv.__o = __builtin_neon_vld4_lanev4sf ((const __builtin_neon_sf *) __a, __bu.__o, __c);\n   return __rv.__i;\n }\n \n@@ -10063,7 +10063,7 @@ __extension__ static __inline float32x2x4_t __attribute__ ((__always_inline__))\n vld4_dup_f32 (const float32_t * __a)\n {\n   union { float32x2x4_t __i; __builtin_neon_oi __o; } __rv;\n-  __rv.__o = __builtin_neon_vld4_dupv2sf (__a);\n+  __rv.__o = __builtin_neon_vld4_dupv2sf ((const __builtin_neon_sf *) __a);\n   return __rv.__i;\n }\n \n@@ -10148,7 +10148,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst4_f32 (float32_t * __a, float32x2x4_t __b)\n {\n   union { float32x2x4_t __i; __builtin_neon_oi __o; } __bu = { __b };\n-  __builtin_neon_vst4v2sf (__a, __bu.__o);\n+  __builtin_neon_vst4v2sf ((__builtin_neon_sf *) __a, __bu.__o);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -10225,7 +10225,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst4q_f32 (float32_t * __a, float32x4x4_t __b)\n {\n   union { float32x4x4_t __i; __builtin_neon_xi __o; } __bu = { __b };\n-  __builtin_neon_vst4v4sf (__a, __bu.__o);\n+  __builtin_neon_vst4v4sf ((__builtin_neon_sf *) __a, __bu.__o);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -10288,7 +10288,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst4_lane_f32 (float32_t * __a, float32x2x4_t __b, const int __c)\n {\n   union { float32x2x4_t __i; __builtin_neon_oi __o; } __bu = { __b };\n-  __builtin_neon_vst4_lanev2sf (__a, __bu.__o, __c);\n+  __builtin_neon_vst4_lanev2sf ((__builtin_neon_sf *) __a, __bu.__o, __c);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))\n@@ -10344,7 +10344,7 @@ __extension__ static __inline void __attribute__ ((__always_inline__))\n vst4q_lane_f32 (float32_t * __a, float32x4x4_t __b, const int __c)\n {\n   union { float32x4x4_t __i; __builtin_neon_xi __o; } __bu = { __b };\n-  __builtin_neon_vst4_lanev4sf (__a, __bu.__o, __c);\n+  __builtin_neon_vst4_lanev4sf ((__builtin_neon_sf *) __a, __bu.__o, __c);\n }\n \n __extension__ static __inline void __attribute__ ((__always_inline__))"}, {"sha": "112c8be6e3b437a52c185162430ebf28b77ed6d0", "filename": "gcc/config/arm/neon-gen.ml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156e423608fd6c71fde8910c664a066aa23dd2c9/gcc%2Fconfig%2Farm%2Fneon-gen.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156e423608fd6c71fde8910c664a066aa23dd2c9/gcc%2Fconfig%2Farm%2Fneon-gen.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon-gen.ml?ref=156e423608fd6c71fde8910c664a066aa23dd2c9", "patch": "@@ -122,6 +122,7 @@ let rec signed_ctype = function\n   | T_uint16 | T_int16 -> T_intHI\n   | T_uint32 | T_int32 -> T_intSI\n   | T_uint64 | T_int64 -> T_intDI\n+  | T_float32 -> T_floatSF\n   | T_poly8 -> T_intQI\n   | T_poly16 -> T_intHI\n   | T_arrayof (n, elt) -> T_arrayof (n, signed_ctype elt)\n@@ -320,7 +321,7 @@ let deftypes () =\n     typeinfo;\n   Format.print_newline ();\n   (* Extra types not in <stdint.h>.  *)\n-  Format.printf \"typedef __builtin_neon_sf float32_t;\\n\";\n+  Format.printf \"typedef float float32_t;\\n\";\n   Format.printf \"typedef __builtin_neon_poly8 poly8_t;\\n\";\n   Format.printf \"typedef __builtin_neon_poly16 poly16_t;\\n\"\n "}, {"sha": "114097d22a724f74af9d691692e54bf989aafc24", "filename": "gcc/config/arm/neon.ml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156e423608fd6c71fde8910c664a066aa23dd2c9/gcc%2Fconfig%2Farm%2Fneon.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156e423608fd6c71fde8910c664a066aa23dd2c9/gcc%2Fconfig%2Farm%2Fneon.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.ml?ref=156e423608fd6c71fde8910c664a066aa23dd2c9", "patch": "@@ -50,7 +50,7 @@ type vectype = T_int8x8    | T_int8x16\n              | T_ptrto of vectype | T_const of vectype\n              | T_void      | T_intQI\n              | T_intHI     | T_intSI\n-             | T_intDI\n+             | T_intDI     | T_floatSF\n \n (* The meanings of the following are:\n      TImode : \"Tetra\", two registers (four words).\n@@ -1693,6 +1693,7 @@ let string_of_vectype vt =\n   | T_intHI -> \"__builtin_neon_hi\"\n   | T_intSI -> \"__builtin_neon_si\"\n   | T_intDI -> \"__builtin_neon_di\"\n+  | T_floatSF -> \"__builtin_neon_sf\"\n   | T_arrayof (num, base) ->\n       let basename = name (fun x -> x) base in\n       affix (Printf.sprintf \"%sx%d\" basename num)"}]}