{"sha": "0d0b79a649ac98c868e0341a16d7b23f9cddee70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQwYjc5YTY0OWFjOThjODY4ZTAzNDFhMTZkN2IyM2Y5Y2RkZWU3MA==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2014-05-08T14:33:05Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2014-05-08T14:33:05Z"}, "message": "Neon intrinsics TLC - remove dead code.\n\n2014-05-08  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\t* config/arm/arm_neon_builtins.def (vadd, vsub): Only define the v2sf\n\tand v4sf versions.\n\t(vand, vorr, veor, vorn, vbic): Remove.\n\t* config/arm/neon.md (neon_vadd, neon_vsub, neon_vadd_unspec): Adjust\n\titerator.\n\t(neon_vsub_unspec): Likewise.\n\t(neon_vorr, neon_vand, neon_vbic, neon_veor, neon_vorn): Remove.\n\nFrom-SVN: r210218", "tree": {"sha": "d7b73cbc1cdf999e72c2624455e0195654480e36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7b73cbc1cdf999e72c2624455e0195654480e36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d0b79a649ac98c868e0341a16d7b23f9cddee70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0b79a649ac98c868e0341a16d7b23f9cddee70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d0b79a649ac98c868e0341a16d7b23f9cddee70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0b79a649ac98c868e0341a16d7b23f9cddee70/comments", "author": null, "committer": null, "parents": [{"sha": "7e422c4f04827a80a296dd080001927beea2634f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e422c4f04827a80a296dd080001927beea2634f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e422c4f04827a80a296dd080001927beea2634f"}], "stats": {"total": 106, "additions": 25, "deletions": 81}, "files": [{"sha": "b20cf808edcdf4cf706a219da505ff9acc2b3183", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0b79a649ac98c868e0341a16d7b23f9cddee70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0b79a649ac98c868e0341a16d7b23f9cddee70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d0b79a649ac98c868e0341a16d7b23f9cddee70", "patch": "@@ -1,3 +1,13 @@\n+2014-05-08  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\t* config/arm/arm_neon_builtins.def (vadd, vsub): Only define the v2sf\n+\tand v4sf versions.\n+\t(vand, vorr, veor, vorn, vbic): Remove.\n+\t* config/arm/neon.md (neon_vadd, neon_vsub, neon_vadd_unspec): Adjust\n+\titerator.\n+\t(neon_vsub_unspec): Likewise.\n+\t(neon_vorr, neon_vand, neon_vbic, neon_veor, neon_vorn): Remove.\n+\n 2014-05-08  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \t* config/arm/arm_neon.h (vadd_s8): GNU C implementation"}, {"sha": "85215b5294ca158e942efcd6ea497a8133e1bf69", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0b79a649ac98c868e0341a16d7b23f9cddee70/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0b79a649ac98c868e0341a16d7b23f9cddee70/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=0d0b79a649ac98c868e0341a16d7b23f9cddee70", "patch": "@@ -18,8 +18,7 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-VAR10 (BINOP, vadd,\n-\tv8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n+VAR2 (BINOP, vadd, v2sf, v4sf),\n VAR3 (BINOP, vaddl, v8qi, v4hi, v2si),\n VAR3 (BINOP, vaddw, v8qi, v4hi, v2si),\n VAR6 (BINOP, vhadd, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n@@ -54,7 +53,7 @@ VAR8 (SHIFTIMM, vqshl_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n VAR8 (SHIFTIMM, vqshlu_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n VAR3 (SHIFTIMM, vshll_n, v8qi, v4hi, v2si),\n VAR8 (SHIFTACC, vsra_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n-VAR10 (BINOP, vsub, v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n+VAR2 (BINOP, vsub, v2sf, v4sf),\n VAR3 (BINOP, vsubl, v8qi, v4hi, v2si),\n VAR3 (BINOP, vsubw, v8qi, v4hi, v2si),\n VAR8 (BINOP, vqsub, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n@@ -199,14 +198,4 @@ VAR5 (LOADSTRUCT, vld4_dup, v8qi, v4hi, v2si, v2sf, di),\n VAR9 (STORESTRUCT, vst4,\n \tv8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf),\n VAR7 (STORESTRUCTLANE, vst4_lane,\n-\tv8qi, v4hi, v2si, v2sf, v8hi, v4si, v4sf),\n-VAR10 (LOGICBINOP, vand,\n-\t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n-VAR10 (LOGICBINOP, vorr,\n-\t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n-VAR10 (BINOP, veor,\n-\t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n-VAR10 (LOGICBINOP, vbic,\n-\t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n-VAR10 (LOGICBINOP, vorn,\n-\t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di)\n+\tv8qi, v4hi, v2si, v2sf, v8hi, v4si, v4sf)"}, {"sha": "9ac393baaa5a342824fe1f072514213c668fa28e", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 12, "deletions": 67, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0b79a649ac98c868e0341a16d7b23f9cddee70/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0b79a649ac98c868e0341a16d7b23f9cddee70/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=0d0b79a649ac98c868e0341a16d7b23f9cddee70", "patch": "@@ -1842,9 +1842,9 @@\n ; good for plain vadd, vaddq.\n \n (define_expand \"neon_vadd<mode>\"\n-  [(match_operand:VDQX 0 \"s_register_operand\" \"=w\")\n-   (match_operand:VDQX 1 \"s_register_operand\" \"w\")\n-   (match_operand:VDQX 2 \"s_register_operand\" \"w\")\n+  [(match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n+   (match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n+   (match_operand:VCVTF 2 \"s_register_operand\" \"w\")\n    (match_operand:SI 3 \"immediate_operand\" \"i\")]\n   \"TARGET_NEON\"\n {\n@@ -1869,9 +1869,9 @@\n ; Used for intrinsics when flag_unsafe_math_optimizations is false.\n \n (define_insn \"neon_vadd<mode>_unspec\"\n-  [(set (match_operand:VDQX 0 \"s_register_operand\" \"=w\")\n-        (unspec:VDQX [(match_operand:VDQX 1 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:VDQX 2 \"s_register_operand\" \"w\")]\n+  [(set (match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n+        (unspec:VCVTF [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n+\t\t      (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n                      UNSPEC_VADD))]\n   \"TARGET_NEON\"\n   \"vadd.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n@@ -2132,9 +2132,9 @@\n )\n \n (define_expand \"neon_vsub<mode>\"\n-  [(match_operand:VDQX 0 \"s_register_operand\" \"=w\")\n-   (match_operand:VDQX 1 \"s_register_operand\" \"w\")\n-   (match_operand:VDQX 2 \"s_register_operand\" \"w\")\n+  [(match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n+   (match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n+   (match_operand:VCVTF 2 \"s_register_operand\" \"w\")\n    (match_operand:SI 3 \"immediate_operand\" \"i\")]\n   \"TARGET_NEON\"\n {\n@@ -2149,9 +2149,9 @@\n ; Used for intrinsics when flag_unsafe_math_optimizations is false.\n \n (define_insn \"neon_vsub<mode>_unspec\"\n-  [(set (match_operand:VDQX 0 \"s_register_operand\" \"=w\")\n-        (unspec:VDQX [(match_operand:VDQX 1 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:VDQX 2 \"s_register_operand\" \"w\")]\n+  [(set (match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n+        (unspec:VCVTF [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n+\t\t      (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n                      UNSPEC_VSUB))]\n   \"TARGET_NEON\"\n   \"vsub.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n@@ -5357,61 +5357,6 @@\n   [(set_attr \"type\" \"neon_store4_4reg<q>\")]\n )\n \n-(define_expand \"neon_vand<mode>\"\n-  [(match_operand:VDQX 0 \"s_register_operand\" \"\")\n-   (match_operand:VDQX 1 \"s_register_operand\" \"\")\n-   (match_operand:VDQX 2 \"neon_inv_logic_op2\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  emit_insn (gen_and<mode>3 (operands[0], operands[1], operands[2]));\n-  DONE;\n-})\n-\n-(define_expand \"neon_vorr<mode>\"\n-  [(match_operand:VDQX 0 \"s_register_operand\" \"\")\n-   (match_operand:VDQX 1 \"s_register_operand\" \"\")\n-   (match_operand:VDQX 2 \"neon_logic_op2\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  emit_insn (gen_ior<mode>3 (operands[0], operands[1], operands[2]));\n-  DONE;\n-})\n-\n-(define_expand \"neon_veor<mode>\"\n-  [(match_operand:VDQX 0 \"s_register_operand\" \"\")\n-   (match_operand:VDQX 1 \"s_register_operand\" \"\")\n-   (match_operand:VDQX 2 \"s_register_operand\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  emit_insn (gen_xor<mode>3 (operands[0], operands[1], operands[2]));\n-  DONE;\n-})\n-\n-(define_expand \"neon_vbic<mode>\"\n-  [(match_operand:VDQX 0 \"s_register_operand\" \"\")\n-   (match_operand:VDQX 1 \"s_register_operand\" \"\")\n-   (match_operand:VDQX 2 \"neon_logic_op2\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  emit_insn (gen_bic<mode>3_neon (operands[0], operands[1], operands[2]));\n-  DONE;\n-})\n-\n-(define_expand \"neon_vorn<mode>\"\n-  [(match_operand:VDQX 0 \"s_register_operand\" \"\")\n-   (match_operand:VDQX 1 \"s_register_operand\" \"\")\n-   (match_operand:VDQX 2 \"neon_inv_logic_op2\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n-  \"TARGET_NEON\"\n-{\n-  emit_insn (gen_orn<mode>3_neon (operands[0], operands[1], operands[2]));\n-  DONE;\n-})\n-\n (define_insn \"neon_vec_unpack<US>_lo_<mode>\"\n   [(set (match_operand:<V_unpack> 0 \"register_operand\" \"=w\")\n         (SE:<V_unpack> (vec_select:<V_HALF>"}]}