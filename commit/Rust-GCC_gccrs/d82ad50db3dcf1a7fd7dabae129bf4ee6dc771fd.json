{"sha": "d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgyYWQ1MGRiM2RjZjFhN2ZkN2RhYmFlMTI5YmY0ZWU2ZGM3NzFmZA==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@fgznet.ch", "date": "2012-03-21T20:12:16Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2012-03-21T20:12:16Z"}, "message": "config.host: Add bits to support powerpc64-*-freebsd*.\n\n2012-03-21  Andreas Tobler  <andreast@fgznet.ch>\n\n        * config.host: Add bits to support powerpc64-*-freebsd*.\n        * config/rs6000/freebsd-unwind.h: New file.\n        * config/rs6000/t-freebsd64: New file.\n\nFrom-SVN: r185614", "tree": {"sha": "cbc102cde16bd74e962539de9fe1795e92371b68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbc102cde16bd74e962539de9fe1795e92371b68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd/comments", "author": null, "committer": null, "parents": [{"sha": "f4e017c4b169ec8833d38905710cd53e3b08639e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e017c4b169ec8833d38905710cd53e3b08639e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4e017c4b169ec8833d38905710cd53e3b08639e"}], "stats": {"total": 90, "additions": 88, "deletions": 2}, "files": [{"sha": "c4a34f60f88ef9fb4dacffb811fe0bd308358dee", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd", "patch": "@@ -1,3 +1,9 @@\n+2012-03-21  Andreas Tobler  <andreast@fgznet.ch>\n+\n+\t* config.host: Add bits to support powerpc64-*-freebsd*.\n+\t* config/rs6000/freebsd-unwind.h: New file.\n+\t* config/rs6000/t-freebsd64: New file.\n+\n 2012-03-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR gcov-profile/52627"}, {"sha": "1e815181802060c4b906ccbe5c418c676ab16175", "filename": "libgcc/config.host", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd", "patch": "@@ -830,9 +830,15 @@ powerpc64-*-darwin*)\n \ttmake_file=\"$tmake_file rs6000/t-darwin64 rs6000/t-ibm-ldouble\"\n \textra_parts=\"$extra_parts crt2.o\"\n \t;;\n-powerpc-*-freebsd*)\n-\ttmake_file=\"${tmake_file} rs6000/t-ppccomm rs6000/t-savresfgpr rs6000/t-crtstuff rs6000/t-freebsd t-softfp-sfdf t-softfp-excl t-softfp t-slibgcc-libgcc\"\n+powerpc*-*-freebsd*)\n+\ttmake_file=\"${tmake_file} rs6000/t-ppccomm rs6000/t-savresfgpr rs6000/t-crtstuff rs6000/t-freebsd t-softfp-sfdf t-softfp-excl t-softfp\"\n \textra_parts=\"$extra_parts crtbeginT.o ecrti.o ecrtn.o ncrti.o ncrtn.o\"\n+\tcase ${host} in\n+\tpowerpc64*)\n+\t  tmake_file=\"${tmake_file} rs6000/t-freebsd64\"\n+\t  md_unwind_header=rs6000/freebsd-unwind.h\n+\t  ;;\n+\tesac\n \t;;\n powerpc-*-netbsd*)\n \ttmake_file=\"$tmake_file rs6000/t-netbsd rs6000/t-crtstuff\""}, {"sha": "3bdedff94bf153ab1168100449aebe071184888f", "filename": "libgcc/config/rs6000/freebsd-unwind.h", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd/libgcc%2Fconfig%2Frs6000%2Ffreebsd-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd/libgcc%2Fconfig%2Frs6000%2Ffreebsd-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ffreebsd-unwind.h?ref=d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd", "patch": "@@ -0,0 +1,69 @@\n+/* DWARF2 EH unwinding support for PowerPC64 FreeBSD.\n+   Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#define R_LR\t\t65\n+\n+#define MD_FROB_UPDATE_CONTEXT frob_update_context\n+\n+static void\n+frob_update_context (struct _Unwind_Context *context,\n+\t\t     _Unwind_FrameState *fs ATTRIBUTE_UNUSED)\n+{\n+  const unsigned int *pc = (const unsigned int *) context->ra;\n+\n+#ifdef __powerpc64__\n+  if (fs->regs.reg[2].how == REG_UNSAVED)\n+    {\n+      /* If the current unwind info (FS) does not contain explicit info\n+\t saving R2, then we have to do a minor amount of code reading to\n+\t figure out if it was saved.  The big problem here is that the\n+\t code that does the save/restore is generated by the linker, so\n+\t we have no good way to determine at compile time what to do.  */\n+      if (pc[0] == 0xF8410028\n+\t  || ((pc[0] & 0xFFFF0000) == 0x3D820000\n+\t      && pc[1] == 0xF8410028))\n+\t{\n+\t  /* We are in a plt call stub or r2 adjusting long branch stub,\n+\t     before r2 has been saved.  Keep REG_UNSAVED.  */\n+\t}\n+      else\n+\t{\n+\t  unsigned int *insn\n+\t    = (unsigned int *) _Unwind_GetGR (context, R_LR);\n+\t  if (insn && *insn == 0xE8410028)\n+\t    _Unwind_SetGRPtr (context, 2, context->cfa + 40);\n+\t  else if (pc[0] == 0x4E800421\n+\t\t   && pc[1] == 0xE8410028)\n+\t    {\n+\t      /* We are at the bctrl instruction in a call via function\n+\t\t pointer.  gcc always emits the load of the new R2 just\n+\t\t before the bctrl so this is the first and only place\n+\t\t we need to use the stored R2.  */\n+\t      _Unwind_Word sp = _Unwind_GetGR (context, 1);\n+\t      _Unwind_SetGRPtr (context, 2, (void *)(sp + 40));\n+\t    }\n+\t}\n+    }\n+#endif\n+}"}, {"sha": "5dc0d4895357ef44460a8beb8a9e22d7de64daa2", "filename": "libgcc/config/rs6000/t-freebsd64", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd/libgcc%2Fconfig%2Frs6000%2Ft-freebsd64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd/libgcc%2Fconfig%2Frs6000%2Ft-freebsd64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ft-freebsd64?ref=d82ad50db3dcf1a7fd7dabae129bf4ee6dc771fd", "patch": "@@ -0,0 +1,5 @@\n+HOST_LIBGCC2_CFLAGS += -mno-minimal-toc\n+SHLIB_MAPFILES = libgcc-std.ver\n+\n+softfp_wrap_start := '\\#ifndef __powerpc64__'\n+softfp_wrap_end := '\\#endif'"}]}