{"sha": "adcd36bc3fb6d707477683284024d11c179a4822", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRjZDM2YmMzZmI2ZDcwNzQ3NzY4MzI4NDAyNGQxMWMxNzlhNDgyMg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-11-21T17:03:50Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-11-21T17:03:50Z"}, "message": "Support sun symbol versioning in libitm\n\n\tlibitm:\n\t* acinclude.m4 (LIBITM_CHECK_LINKER_FEATURES): Handle gold.\n\t(LIBITM_ENABLE_SYMVERS): Handle sun style.\n\t* Makefile.am: Handle sun style versioning.\n\t(libitm_la_LINK): Add $(libitm_la_LDFLAGS).\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\n\tcontrib:\n\t* make_sunver.pl: Convert '?' in glob patterns to '.'.\n\nFrom-SVN: r181588", "tree": {"sha": "c02f30287a054a81055483a7e265e0d78137c81f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c02f30287a054a81055483a7e265e0d78137c81f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adcd36bc3fb6d707477683284024d11c179a4822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adcd36bc3fb6d707477683284024d11c179a4822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adcd36bc3fb6d707477683284024d11c179a4822", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adcd36bc3fb6d707477683284024d11c179a4822/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4b4b54263c81a0fbebc54580ab3ebb279d14d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4b4b54263c81a0fbebc54580ab3ebb279d14d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4b4b54263c81a0fbebc54580ab3ebb279d14d54"}], "stats": {"total": 212, "additions": 182, "deletions": 30}, "files": [{"sha": "abe317ad9db5f93062367a47eadc8139ec65852d", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcd36bc3fb6d707477683284024d11c179a4822/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcd36bc3fb6d707477683284024d11c179a4822/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=adcd36bc3fb6d707477683284024d11c179a4822", "patch": "@@ -1,3 +1,7 @@\n+2011-11-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* make_sunver.pl: Convert '?' in glob patterns to '.'.\n+\n 2011-11-07  Richard Henderson  <rth@redhat.com>\n \n \tMerged from transactional-memory."}, {"sha": "96ad22c2311120d6adaef9b9667c81b04440356e", "filename": "contrib/make_sunver.pl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcd36bc3fb6d707477683284024d11c179a4822/contrib%2Fmake_sunver.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcd36bc3fb6d707477683284024d11c179a4822/contrib%2Fmake_sunver.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmake_sunver.pl?ref=adcd36bc3fb6d707477683284024d11c179a4822", "patch": "@@ -276,9 +276,10 @@\n     if (/^([ \\t]*)([^ \\t;{}#]+);?[ \\t]*$/) {\n \tmy $ws = $1;\n \tmy $ptn = $2;\n-\t# Turn the glob into a regex by replacing '*' with '.*'.\n+\t# Turn the glob into a regex by replacing '*' with '.*', '?' with '.'.\n \t# Keep $ptn so we can still print the original form.\n \t($pattern = $ptn) =~ s/\\*/\\.\\*/g;\n+\t$pattern =~ s/\\?/\\./g;\n \n \tif ($glob eq 'ign') {\n \t    # We're in a local: * section; just continue."}, {"sha": "9ccf619b25d0b83cc6fdd8cabf857ad943504d8f", "filename": "libitm/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcd36bc3fb6d707477683284024d11c179a4822/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcd36bc3fb6d707477683284024d11c179a4822/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=adcd36bc3fb6d707477683284024d11c179a4822", "patch": "@@ -1,3 +1,12 @@\n+2011-11-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* acinclude.m4 (LIBITM_CHECK_LINKER_FEATURES): Handle gold.\n+\t(LIBITM_ENABLE_SYMVERS): Handle sun style.\n+\t* Makefile.am: Handle sun style versioning.\n+\t(libitm_la_LINK): Add $(libitm_la_LDFLAGS).\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n 2011-11-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/generic/asmcfi.h: Fix comment."}, {"sha": "7df807eaee40d99893009e3d3fb73eb7c7310efe", "filename": "libitm/Makefile.am", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcd36bc3fb6d707477683284024d11c179a4822/libitm%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcd36bc3fb6d707477683284024d11c179a4822/libitm%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.am?ref=adcd36bc3fb6d707477683284024d11c179a4822", "patch": "@@ -27,15 +27,33 @@ toolexeclib_LTLIBRARIES = libitm.la\n nodist_toolexeclib_HEADERS = libitm.spec\n \n if LIBITM_BUILD_VERSIONED_SHLIB\n+if LIBITM_BUILD_VERSIONED_SHLIB_GNU\n libitm_version_script = -Wl,--version-script,$(top_srcdir)/libitm.map\n+libitm_version_dep = $(top_srcdir)/libitm.map\n+endif\n+if LIBITM_BUILD_VERSIONED_SHLIB_SUN\n+libitm_version_script = -Wl,-M,libitm.map-sun\n+libitm_version_dep = libitm.map-sun\n+libitm.map-sun : $(top_srcdir)/libitm.map \\\n+\t\t$(top_srcdir)/../contrib/make_sunver.pl \\\n+\t\t$(libitm_la_OBJECTS) $(libitm_la_LIBADD)\n+\tperl $(top_srcdir)/../contrib/make_sunver.pl \\\n+\t  $(top_srcdir)/libitm.map \\\n+\t  $(libitm_la_OBJECTS:%.lo=.libs/%.o) \\\n+\t `echo $(libitm_la_LIBADD) | \\\n+\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n+\t > $@ || (rm -f $@ ; exit 1)\n+endif\n else\n libitm_version_script =\n+libitm_version_dep =\n endif\n libitm_version_info = -version-info $(libtool_VERSION)\n \n # Force link with C, not C++.  For now, while we're using C++ we don't\n # want or need libstdc++.\n-libitm_la_LINK = $(LINK)\n+libitm_la_DEPENDENCIES = $(libitm_version_dep)\n+libitm_la_LINK = $(LINK) $(libitm_la_LDFLAGS)\n libitm_la_LDFLAGS = $(libitm_version_info) $(libitm_version_script) \\\n         -no-undefined\n "}, {"sha": "d3872c9d36e73a699ba850ecccaa4bb7cc045144", "filename": "libitm/Makefile.in", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcd36bc3fb6d707477683284024d11c179a4822/libitm%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcd36bc3fb6d707477683284024d11c179a4822/libitm%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.in?ref=adcd36bc3fb6d707477683284024d11c179a4822", "patch": "@@ -359,12 +359,17 @@ AM_LDFLAGS = $(XLDFLAGS) $(SECTION_LDFLAGS) $(OPT_LDFLAGS)\n toolexeclib_LTLIBRARIES = libitm.la\n nodist_toolexeclib_HEADERS = libitm.spec\n @LIBITM_BUILD_VERSIONED_SHLIB_FALSE@libitm_version_script = \n-@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@libitm_version_script = -Wl,--version-script,$(top_srcdir)/libitm.map\n+@LIBITM_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@libitm_version_script = -Wl,--version-script,$(top_srcdir)/libitm.map\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@libitm_version_script = -Wl,-M,libitm.map-sun\n+@LIBITM_BUILD_VERSIONED_SHLIB_FALSE@libitm_version_dep = \n+@LIBITM_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@libitm_version_dep = $(top_srcdir)/libitm.map\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@libitm_version_dep = libitm.map-sun\n libitm_version_info = -version-info $(libtool_VERSION)\n \n # Force link with C, not C++.  For now, while we're using C++ we don't\n # want or need libstdc++.\n-libitm_la_LINK = $(LINK)\n+libitm_la_DEPENDENCIES = $(libitm_version_dep)\n+libitm_la_LINK = $(LINK) $(libitm_la_LDFLAGS)\n libitm_la_LDFLAGS = $(libitm_version_info) $(libitm_version_script) \\\n         -no-undefined\n \n@@ -1258,6 +1263,15 @@ uninstall-am: uninstall-dvi-am uninstall-html-am uninstall-info-am \\\n \n \n vpath % $(strip $(search_path))\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@libitm.map-sun : $(top_srcdir)/libitm.map \\\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@\t\t$(top_srcdir)/../contrib/make_sunver.pl \\\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@\t\t$(libitm_la_OBJECTS) $(libitm_la_LIBADD)\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@\tperl $(top_srcdir)/../contrib/make_sunver.pl \\\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@\t  $(top_srcdir)/libitm.map \\\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@\t  $(libitm_la_OBJECTS:%.lo=.libs/%.o) \\\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@\t `echo $(libitm_la_LIBADD) | \\\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n+@LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBITM_BUILD_VERSIONED_SHLIB_TRUE@\t > $@ || (rm -f $@ ; exit 1)\n @ARCH_X86_TRUE@x86_sse.lo : XCFLAGS += -msse\n @ARCH_X86_AVX_TRUE@x86_avx.lo : XCFLAGS += -mavx\n "}, {"sha": "069738d8e8068d4a55a34ea3a955c99879065bd0", "filename": "libitm/acinclude.m4", "status": "modified", "additions": 51, "deletions": 12, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcd36bc3fb6d707477683284024d11c179a4822/libitm%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcd36bc3fb6d707477683284024d11c179a4822/libitm%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Facinclude.m4?ref=adcd36bc3fb6d707477683284024d11c179a4822", "patch": "@@ -169,6 +169,7 @@ dnl  OPT_LDFLAGS='-Wl,-O1' if possible\n dnl  LD (as a side effect of testing)\n dnl Sets:\n dnl  with_gnu_ld\n+dnl  libitm_ld_is_gold (possibly)\n dnl  libitm_gnu_ld_version (possibly)\n dnl\n dnl The last will be a single integer, e.g., version 1.23.45.0.67.89 will\n@@ -200,9 +201,13 @@ AC_DEFUN([LIBITM_CHECK_LINKER_FEATURES], [\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  libitm_ld_is_gold=no\n+  if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n+    libitm_ld_is_gold=yes\n+  fi\n   changequote(,)\n-  ldver=`$LD --version 2>/dev/null | head -1 | \\\n-         sed -e 's/GNU ld \\(version \\)\\{0,1\\}\\(([^)]*) \\)\\{0,1\\}\\([0-9.][0-9.]*\\).*/\\3/'`\n+  ldver=`$LD --version 2>/dev/null |\n+         sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n   changequote([,])\n   libitm_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) [$]3=0; print ([$]1*100+[$]2)*100+[$]3 }'`\n@@ -272,16 +277,46 @@ AC_DEFUN([LIBITM_ENABLE_SYMVERS], [\n \n LIBITM_ENABLE(symvers,yes,[=STYLE],\n   [enables symbol versioning of the shared library],\n-  [permit yes|no|gnu])\n+  [permit yes|no|gnu*|sun])\n \n # If we never went through the LIBITM_CHECK_LINKER_FEATURES macro, then we\n # don't know enough about $LD to do tricks...\n AC_REQUIRE([LIBITM_CHECK_LINKER_FEATURES])\n-# FIXME  The following test is too strict, in theory.\n-if test $enable_shared = no ||\n-        test \"x$LD\" = x ||\n-        test x$libitm_gnu_ld_version = x; then\n-  enable_symvers=no\n+\n+# Turn a 'yes' into a suitable default.\n+if test x$enable_symvers = xyes ; then\n+  # FIXME  The following test is too strict, in theory.\n+  if test $enable_shared = no || test \"x$LD\" = x; then\n+    enable_symvers=no\n+  else\n+    if test $with_gnu_ld = yes ; then\n+      enable_symvers=gnu\n+    else\n+      case ${target_os} in\n+        # Sun symbol versioning exists since Solaris 2.5.\n+        solaris2.[[5-9]]* | solaris2.1[[0-9]]*)\n+          enable_symvers=sun ;;\n+        *)\n+          enable_symvers=no ;;\n+      esac\n+    fi\n+  fi\n+fi\n+\n+# Check if 'sun' was requested on non-Solaris 2 platforms.\n+if test x$enable_symvers = xsun ; then\n+  case ${target_os} in\n+    solaris2*)\n+      # All fine.\n+      ;;\n+    *)\n+      # Unlikely to work.\n+      AC_MSG_WARN([=== You have requested Sun symbol versioning, but])\n+      AC_MSG_WARN([=== you are not targetting Solaris 2.])\n+      AC_MSG_WARN([=== Symbol versioning will be disabled.])\n+      enable_symvers=no\n+      ;;\n+  esac\n fi\n \n # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n@@ -318,12 +353,12 @@ libitm_min_gnu_ld_version=21400\n \n # Check to see if unspecified \"yes\" value can win, given results above.\n # Change \"yes\" into either \"no\" or a style name.\n-if test $enable_symvers = yes; then\n-  if test $with_gnu_ld = yes &&\n-     test $libitm_shared_libgcc = yes;\n-  then\n+if test $enable_symvers != no && test $libitm_shared_libgcc = yes; then\n+  if test $with_gnu_ld = yes; then\n     if test $libitm_gnu_ld_version -ge $libitm_min_gnu_ld_version ; then\n       enable_symvers=gnu\n+    elif test $libitm_ld_is_gold = yes ; then\n+      enable_symvers=gnu\n     else\n       # The right tools, the right setup, but too old.  Fallbacks?\n       AC_MSG_WARN(=== Linker version $libitm_gnu_ld_version is too old for)\n@@ -342,6 +377,8 @@ if test $enable_symvers = yes; then\n         enable_symvers=no\n       fi\n     fi\n+  elif test $enable_symvers = sun; then\n+    : All interesting versions of Sun ld support sun style symbol versioning.\n   else\n     # just fail for now\n     AC_MSG_WARN([=== You have requested some kind of symbol versioning, but])\n@@ -353,5 +390,7 @@ if test $enable_symvers = yes; then\n fi\n \n AM_CONDITIONAL(LIBITM_BUILD_VERSIONED_SHLIB, test $enable_symvers != no)\n+AM_CONDITIONAL(LIBITM_BUILD_VERSIONED_SHLIB_GNU, test $enable_symvers = gnu)\n+AM_CONDITIONAL(LIBITM_BUILD_VERSIONED_SHLIB_SUN, test $enable_symvers = sun)\n AC_MSG_NOTICE(versioning on shared library symbols is $enable_symvers)\n ])"}, {"sha": "1512ad184ccfe741f618bf14cab84397eab889ab", "filename": "libitm/configure", "status": "modified", "additions": 81, "deletions": 14, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcd36bc3fb6d707477683284024d11c179a4822/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcd36bc3fb6d707477683284024d11c179a4822/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=adcd36bc3fb6d707477683284024d11c179a4822", "patch": "@@ -611,6 +611,10 @@ link_itm\n XLDFLAGS\n XCFLAGS\n config_path\n+LIBITM_BUILD_VERSIONED_SHLIB_SUN_FALSE\n+LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE\n+LIBITM_BUILD_VERSIONED_SHLIB_GNU_FALSE\n+LIBITM_BUILD_VERSIONED_SHLIB_GNU_TRUE\n LIBITM_BUILD_VERSIONED_SHLIB_FALSE\n LIBITM_BUILD_VERSIONED_SHLIB_TRUE\n OPT_LDFLAGS\n@@ -11716,7 +11720,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11719 \"configure\"\n+#line 11723 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11822,7 +11826,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11825 \"configure\"\n+#line 11829 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16688,9 +16692,13 @@ with_gnu_ld=$lt_cv_prog_gnu_ld\n \n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n+  libitm_ld_is_gold=no\n+  if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n+    libitm_ld_is_gold=yes\n+  fi\n \n-  ldver=`$LD --version 2>/dev/null | head -1 | \\\n-         sed -e 's/GNU ld \\(version \\)\\{0,1\\}\\(([^)]*) \\)\\{0,1\\}\\([0-9.][0-9.]*\\).*/\\3/'`\n+  ldver=`$LD --version 2>/dev/null |\n+         sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n \n   libitm_gnu_ld_version=`echo $ldver | \\\n          $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n@@ -16764,7 +16772,7 @@ $as_echo \"$ac_sectionLDflags\" >&6; }\n if test \"${enable_symvers+set}\" = set; then :\n   enableval=$enable_symvers;\n       case \"$enableval\" in\n-       yes|no|gnu) ;;\n+       yes|no|gnu*|sun) ;;\n        *) as_fn_error \"Unknown argument to enable/disable symvers\" \"$LINENO\" 5 ;;\n                           esac\n \n@@ -16777,11 +16785,44 @@ fi\n # If we never went through the LIBITM_CHECK_LINKER_FEATURES macro, then we\n # don't know enough about $LD to do tricks...\n \n-# FIXME  The following test is too strict, in theory.\n-if test $enable_shared = no ||\n-        test \"x$LD\" = x ||\n-        test x$libitm_gnu_ld_version = x; then\n-  enable_symvers=no\n+\n+# Turn a 'yes' into a suitable default.\n+if test x$enable_symvers = xyes ; then\n+  # FIXME  The following test is too strict, in theory.\n+  if test $enable_shared = no || test \"x$LD\" = x; then\n+    enable_symvers=no\n+  else\n+    if test $with_gnu_ld = yes ; then\n+      enable_symvers=gnu\n+    else\n+      case ${target_os} in\n+        # Sun symbol versioning exists since Solaris 2.5.\n+        solaris2.[5-9]* | solaris2.1[0-9]*)\n+          enable_symvers=sun ;;\n+        *)\n+          enable_symvers=no ;;\n+      esac\n+    fi\n+  fi\n+fi\n+\n+# Check if 'sun' was requested on non-Solaris 2 platforms.\n+if test x$enable_symvers = xsun ; then\n+  case ${target_os} in\n+    solaris2*)\n+      # All fine.\n+      ;;\n+    *)\n+      # Unlikely to work.\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === You have requested Sun symbol versioning, but\" >&5\n+$as_echo \"$as_me: WARNING: === You have requested Sun symbol versioning, but\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === you are not targetting Solaris 2.\" >&5\n+$as_echo \"$as_me: WARNING: === you are not targetting Solaris 2.\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Symbol versioning will be disabled.\" >&5\n+$as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n+      enable_symvers=no\n+      ;;\n+  esac\n fi\n \n # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n@@ -16850,12 +16891,12 @@ libitm_min_gnu_ld_version=21400\n \n # Check to see if unspecified \"yes\" value can win, given results above.\n # Change \"yes\" into either \"no\" or a style name.\n-if test $enable_symvers = yes; then\n-  if test $with_gnu_ld = yes &&\n-     test $libitm_shared_libgcc = yes;\n-  then\n+if test $enable_symvers != no && test $libitm_shared_libgcc = yes; then\n+  if test $with_gnu_ld = yes; then\n     if test $libitm_gnu_ld_version -ge $libitm_min_gnu_ld_version ; then\n       enable_symvers=gnu\n+    elif test $libitm_ld_is_gold = yes ; then\n+      enable_symvers=gnu\n     else\n       # The right tools, the right setup, but too old.  Fallbacks?\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Linker version $libitm_gnu_ld_version is too old for\" >&5\n@@ -16878,6 +16919,8 @@ $as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n         enable_symvers=no\n       fi\n     fi\n+  elif test $enable_symvers = sun; then\n+    : All interesting versions of Sun ld support sun style symbol versioning.\n   else\n     # just fail for now\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === You have requested some kind of symbol versioning, but\" >&5\n@@ -16900,6 +16943,22 @@ else\n   LIBITM_BUILD_VERSIONED_SHLIB_FALSE=\n fi\n \n+ if test $enable_symvers = gnu; then\n+  LIBITM_BUILD_VERSIONED_SHLIB_GNU_TRUE=\n+  LIBITM_BUILD_VERSIONED_SHLIB_GNU_FALSE='#'\n+else\n+  LIBITM_BUILD_VERSIONED_SHLIB_GNU_TRUE='#'\n+  LIBITM_BUILD_VERSIONED_SHLIB_GNU_FALSE=\n+fi\n+\n+ if test $enable_symvers = sun; then\n+  LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE=\n+  LIBITM_BUILD_VERSIONED_SHLIB_SUN_FALSE='#'\n+else\n+  LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE='#'\n+  LIBITM_BUILD_VERSIONED_SHLIB_SUN_FALSE=\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: versioning on shared library symbols is $enable_symvers\" >&5\n $as_echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n \n@@ -17424,6 +17483,14 @@ if test -z \"${LIBITM_BUILD_VERSIONED_SHLIB_TRUE}\" && test -z \"${LIBITM_BUILD_VER\n   as_fn_error \"conditional \\\"LIBITM_BUILD_VERSIONED_SHLIB\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${LIBITM_BUILD_VERSIONED_SHLIB_GNU_TRUE}\" && test -z \"${LIBITM_BUILD_VERSIONED_SHLIB_GNU_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBITM_BUILD_VERSIONED_SHLIB_GNU\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBITM_BUILD_VERSIONED_SHLIB_SUN_TRUE}\" && test -z \"${LIBITM_BUILD_VERSIONED_SHLIB_SUN_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBITM_BUILD_VERSIONED_SHLIB_SUN\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${ARCH_X86_TRUE}\" && test -z \"${ARCH_X86_FALSE}\"; then\n   as_fn_error \"conditional \\\"ARCH_X86\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}]}