{"sha": "2a9b395b1e4542c79b250b756346816a9b72d859", "node_id": "C_kwDOANBUbNoAKDJhOWIzOTViMWU0NTQyYzc5YjI1MGI3NTYzNDY4MTZhOWI3MmQ4NTk", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-03T17:47:01Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-03T17:47:01Z"}, "message": "analyzer: use std::unique_ptr for saved_diagnostic::m_stmt_finder\n\ngcc/analyzer/ChangeLog:\n\t* diagnostic-manager.cc (saved_diagnostic::saved_diagnostic): Make\n\tstmt_finder const.\n\t(saved_diagnostic::~saved_diagnostic): Remove explicit delete of\n\tm_stmt_finder.\n\t(diagnostic_manager::add_diagnostic): Make stmt_finder const.\n\t* diagnostic-manager.h (saved_diagnostic::saved_diagnostic):\n\tLikewise.\n\t(saved_diagnostic::m_stmt_finder): Convert to std::unique_ptr.\n\t(diagnostic_manager::add_diagnostic): Make stmt_finder const.\n\t* engine.cc (impl_sm_context::impl_sm_context): Likewise.\n\t(impl_sm_context::m_stmt_finder): Likewise.\n\t(leak_stmt_finder::clone): Convert return type to std::unique_ptr.\n\t* exploded-graph.h (stmt_finder::clone): Likewise.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "b53286381395f1bb40d9be4cf91ef1a07800d935", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b53286381395f1bb40d9be4cf91ef1a07800d935"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a9b395b1e4542c79b250b756346816a9b72d859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a9b395b1e4542c79b250b756346816a9b72d859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a9b395b1e4542c79b250b756346816a9b72d859", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a9b395b1e4542c79b250b756346816a9b72d859/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6341f14e369a5cd5920bb91660cfea1b2594628f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6341f14e369a5cd5920bb91660cfea1b2594628f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6341f14e369a5cd5920bb91660cfea1b2594628f"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "bb8584a1e0b6368c11f1b94d3b51d2221675f7d0", "filename": "gcc/analyzer/diagnostic-manager.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a9b395b1e4542c79b250b756346816a9b72d859/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a9b395b1e4542c79b250b756346816a9b72d859/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fdiagnostic-manager.cc?ref=2a9b395b1e4542c79b250b756346816a9b72d859", "patch": "@@ -635,7 +635,7 @@ epath_finder::dump_feasible_path (const exploded_node *target_enode,\n saved_diagnostic::saved_diagnostic (const state_machine *sm,\n \t\t\t\t    const exploded_node *enode,\n \t\t\t\t    const supernode *snode, const gimple *stmt,\n-\t\t\t\t    stmt_finder *stmt_finder,\n+\t\t\t\t    const stmt_finder *stmt_finder,\n \t\t\t\t    tree var,\n \t\t\t\t    const svalue *sval,\n \t\t\t\t    state_machine::state_t state,\n@@ -662,7 +662,6 @@ saved_diagnostic::saved_diagnostic (const state_machine *sm,\n \n saved_diagnostic::~saved_diagnostic ()\n {\n-  delete m_stmt_finder;\n   delete m_best_epath;\n   delete m_problem;\n }\n@@ -961,7 +960,7 @@ bool\n diagnostic_manager::add_diagnostic (const state_machine *sm,\n \t\t\t\t    exploded_node *enode,\n \t\t\t\t    const supernode *snode, const gimple *stmt,\n-\t\t\t\t    stmt_finder *finder,\n+\t\t\t\t    const stmt_finder *finder,\n \t\t\t\t    tree var,\n \t\t\t\t    const svalue *sval,\n \t\t\t\t    state_machine::state_t state,\n@@ -1010,7 +1009,7 @@ diagnostic_manager::add_diagnostic (const state_machine *sm,\n bool\n diagnostic_manager::add_diagnostic (exploded_node *enode,\n \t\t\t\t    const supernode *snode, const gimple *stmt,\n-\t\t\t\t    stmt_finder *finder,\n+\t\t\t\t    const stmt_finder *finder,\n \t\t\t\t    std::unique_ptr<pending_diagnostic> d)\n {\n   gcc_assert (enode);"}, {"sha": "c87f2159753636d976b084c518c2d1911c94c6a1", "filename": "gcc/analyzer/diagnostic-manager.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a9b395b1e4542c79b250b756346816a9b72d859/gcc%2Fanalyzer%2Fdiagnostic-manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a9b395b1e4542c79b250b756346816a9b72d859/gcc%2Fanalyzer%2Fdiagnostic-manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fdiagnostic-manager.h?ref=2a9b395b1e4542c79b250b756346816a9b72d859", "patch": "@@ -33,7 +33,7 @@ class saved_diagnostic\n   saved_diagnostic (const state_machine *sm,\n \t\t    const exploded_node *enode,\n \t\t    const supernode *snode, const gimple *stmt,\n-\t\t    stmt_finder *stmt_finder,\n+\t\t    const stmt_finder *stmt_finder,\n \t\t    tree var, const svalue *sval,\n \t\t    state_machine::state_t state,\n \t\t    std::unique_ptr<pending_diagnostic> d,\n@@ -72,7 +72,7 @@ class saved_diagnostic\n   const exploded_node *m_enode;\n   const supernode *m_snode;\n   const gimple *m_stmt;\n-  stmt_finder *m_stmt_finder;\n+  std::unique_ptr<stmt_finder> m_stmt_finder;\n   tree m_var;\n   const svalue *m_sval;\n   state_machine::state_t m_state;\n@@ -113,15 +113,15 @@ class diagnostic_manager : public log_user\n   bool add_diagnostic (const state_machine *sm,\n \t\t       exploded_node *enode,\n \t\t       const supernode *snode, const gimple *stmt,\n-\t\t       stmt_finder *finder,\n+\t\t       const stmt_finder *finder,\n \t\t       tree var,\n \t\t       const svalue *sval,\n \t\t       state_machine::state_t state,\n \t\t       std::unique_ptr<pending_diagnostic> d);\n \n   bool add_diagnostic (exploded_node *enode,\n \t\t       const supernode *snode, const gimple *stmt,\n-\t\t       stmt_finder *finder,\n+\t\t       const stmt_finder *finder,\n \t\t       std::unique_ptr<pending_diagnostic> d);\n \n   void add_note (std::unique_ptr<pending_note> pn);"}, {"sha": "553957ad982641a3aa3aaa251da688eeaccb1f87", "filename": "gcc/analyzer/engine.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a9b395b1e4542c79b250b756346816a9b72d859/gcc%2Fanalyzer%2Fengine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a9b395b1e4542c79b250b756346816a9b72d859/gcc%2Fanalyzer%2Fengine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fengine.cc?ref=2a9b395b1e4542c79b250b756346816a9b72d859", "patch": "@@ -282,7 +282,7 @@ class impl_sm_context : public sm_context\n \t\t   const sm_state_map *old_smap,\n \t\t   sm_state_map *new_smap,\n \t\t   path_context *path_ctxt,\n-\t\t   stmt_finder *stmt_finder = NULL,\n+\t\t   const stmt_finder *stmt_finder = NULL,\n \t\t   bool unknown_side_effects = false)\n   : sm_context (sm_idx, sm),\n     m_logger (eg.get_logger ()),\n@@ -523,7 +523,7 @@ class impl_sm_context : public sm_context\n   const sm_state_map *m_old_smap;\n   sm_state_map *m_new_smap;\n   path_context *m_path_ctxt;\n-  stmt_finder *m_stmt_finder;\n+  const stmt_finder *m_stmt_finder;\n \n   /* Are we handling an external function with unknown side effects?  */\n   bool m_unknown_side_effects;\n@@ -538,9 +538,9 @@ class leak_stmt_finder : public stmt_finder\n   leak_stmt_finder (const exploded_graph &eg, tree var)\n   : m_eg (eg), m_var (var) {}\n \n-  stmt_finder *clone () const final override\n+  std::unique_ptr<stmt_finder> clone () const final override\n   {\n-    return new leak_stmt_finder (m_eg, m_var);\n+    return make_unique<leak_stmt_finder> (m_eg, m_var);\n   }\n \n   const gimple *find_stmt (const exploded_path &epath)"}, {"sha": "7947f50cdd7643b92a0f57bb2d98b8c78a3a3ab1", "filename": "gcc/analyzer/exploded-graph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a9b395b1e4542c79b250b756346816a9b72d859/gcc%2Fanalyzer%2Fexploded-graph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a9b395b1e4542c79b250b756346816a9b72d859/gcc%2Fanalyzer%2Fexploded-graph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fexploded-graph.h?ref=2a9b395b1e4542c79b250b756346816a9b72d859", "patch": "@@ -991,7 +991,7 @@ class stmt_finder\n {\n public:\n   virtual ~stmt_finder () {}\n-  virtual stmt_finder *clone () const = 0;\n+  virtual std::unique_ptr<stmt_finder> clone () const = 0;\n   virtual const gimple *find_stmt (const exploded_path &epath) = 0;\n };\n "}]}