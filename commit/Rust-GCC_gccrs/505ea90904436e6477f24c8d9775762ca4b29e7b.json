{"sha": "505ea90904436e6477f24c8d9775762ca4b29e7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA1ZWE5MDkwNDQzNmU2NDc3ZjI0YzhkOTc3NTc2MmNhNGIyOWU3Yg==", "commit": {"author": {"name": "Jonathan Yong", "email": "10walls@gmail.com", "date": "2020-11-11T15:21:26Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-11T15:36:05Z"}, "message": "libstdc++: Exclude cygwin and mingw from linker relro support\n\nPE format does not have ELF style relro linker support, exclude\nfrom checking. If the host linker supports ELF format, configure\nmay get confused.\n\nlibstdc++-v3/ChangeLog:\n\n\t* acinclude.m4 (GLIBCXX_CHECK_LINKER_FEATURES): Exclude\n\tcygwin and mingw from relro linker test.\n\t* configure: Regenerate.", "tree": {"sha": "2f05f0e60c94bc9a8de2e1203d8fa9deb73cafdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f05f0e60c94bc9a8de2e1203d8fa9deb73cafdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/505ea90904436e6477f24c8d9775762ca4b29e7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505ea90904436e6477f24c8d9775762ca4b29e7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/505ea90904436e6477f24c8d9775762ca4b29e7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505ea90904436e6477f24c8d9775762ca4b29e7b/comments", "author": {"login": "jon-y", "id": 4688224, "node_id": "MDQ6VXNlcjQ2ODgyMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4688224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-y", "html_url": "https://github.com/jon-y", "followers_url": "https://api.github.com/users/jon-y/followers", "following_url": "https://api.github.com/users/jon-y/following{/other_user}", "gists_url": "https://api.github.com/users/jon-y/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-y/subscriptions", "organizations_url": "https://api.github.com/users/jon-y/orgs", "repos_url": "https://api.github.com/users/jon-y/repos", "events_url": "https://api.github.com/users/jon-y/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-y/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86cca5cc14602814b98e55aae313fbe237af1b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86cca5cc14602814b98e55aae313fbe237af1b04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86cca5cc14602814b98e55aae313fbe237af1b04"}], "stats": {"total": 253, "additions": 176, "deletions": 77}, "files": [{"sha": "650d63ab3d75a3aa2b9dfaf696da40a83a47a6e3", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505ea90904436e6477f24c8d9775762ca4b29e7b/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505ea90904436e6477f24c8d9775762ca4b29e7b/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=505ea90904436e6477f24c8d9775762ca4b29e7b", "patch": "@@ -273,13 +273,22 @@ AC_DEFUN([GLIBCXX_CHECK_LINKER_FEATURES], [\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    AC_MSG_CHECKING([for ld that supports -Wl,-z,relro])\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    AC_MSG_RESULT($ac_ld_relro)\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      AC_MSG_CHECKING([for ld that supports -Wl,-z,relro])\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      AC_MSG_RESULT($ac_ld_relro)\n+    esac\n   fi\n \n   # Set linker optimization flags."}, {"sha": "1997c1fce4a913b8d37283b5585673d291d46120", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 160, "deletions": 70, "changes": 230, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505ea90904436e6477f24c8d9775762ca4b29e7b/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505ea90904436e6477f24c8d9775762ca4b29e7b/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=505ea90904436e6477f24c8d9775762ca4b29e7b", "patch": "@@ -22936,15 +22936,24 @@ $as_echo \"$ac_gcsections\" >&6; }\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n $as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n $as_echo \"$ac_ld_relro\" >&6; }\n+    esac\n   fi\n \n   # Set linker optimization flags.\n@@ -30131,15 +30140,24 @@ $as_echo \"$ac_gcsections\" >&6; }\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n $as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n $as_echo \"$ac_ld_relro\" >&6; }\n+    esac\n   fi\n \n   # Set linker optimization flags.\n@@ -36054,15 +36072,24 @@ $as_echo \"$ac_gcsections\" >&6; }\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n $as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n $as_echo \"$ac_ld_relro\" >&6; }\n+    esac\n   fi\n \n   # Set linker optimization flags.\n@@ -47976,15 +48003,24 @@ $as_echo \"$ac_gcsections\" >&6; }\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n $as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n $as_echo \"$ac_ld_relro\" >&6; }\n+    esac\n   fi\n \n   # Set linker optimization flags.\n@@ -48252,15 +48288,24 @@ $as_echo \"$ac_gcsections\" >&6; }\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n $as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n $as_echo \"$ac_ld_relro\" >&6; }\n+    esac\n   fi\n \n   # Set linker optimization flags.\n@@ -48719,15 +48764,24 @@ $as_echo \"$ac_gcsections\" >&6; }\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n $as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n $as_echo \"$ac_ld_relro\" >&6; }\n+    esac\n   fi\n \n   # Set linker optimization flags.\n@@ -55098,15 +55152,24 @@ $as_echo \"$ac_gcsections\" >&6; }\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n $as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n $as_echo \"$ac_ld_relro\" >&6; }\n+    esac\n   fi\n \n   # Set linker optimization flags.\n@@ -61029,15 +61092,24 @@ $as_echo \"$ac_gcsections\" >&6; }\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n $as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n $as_echo \"$ac_ld_relro\" >&6; }\n+    esac\n   fi\n \n   # Set linker optimization flags.\n@@ -61230,15 +61302,24 @@ $as_echo \"$ac_gcsections\" >&6; }\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n $as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n $as_echo \"$ac_ld_relro\" >&6; }\n+    esac\n   fi\n \n   # Set linker optimization flags.\n@@ -61450,15 +61531,24 @@ $as_echo \"$ac_gcsections\" >&6; }\n   # Note this is only for shared objects.\n   ac_ld_relro=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n+    # cygwin and mingw uses PE, which has no ELF relro support,\n+    # multi target ld may confuse configure machinery\n+    case \"$host\" in\n+    *-*-cygwin*)\n+     ;;\n+    *-*-mingw*)\n+     ;;\n+    *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n $as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n+      cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n+      if test -n \"$cxx_z_relo\"; then\n+        OPT_LDFLAGS=\"-Wl,-z,relro\"\n+        ac_ld_relro=yes\n+      fi\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n $as_echo \"$ac_ld_relro\" >&6; }\n+    esac\n   fi\n \n   # Set linker optimization flags."}]}