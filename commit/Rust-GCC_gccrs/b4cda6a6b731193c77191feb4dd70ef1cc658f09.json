{"sha": "b4cda6a6b731193c77191feb4dd70ef1cc658f09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRjZGE2YTZiNzMxMTkzYzc3MTkxZmViNGRkNzBlZjFjYzY1OGYwOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-01-18T22:15:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-01-18T22:15:32Z"}, "message": "Fix template/inherit4.C.\n\n\tPR c++/83714\n\t* search.c (any_dependent_bases_p): Handle null TREE_BINFO.\n\t* pt.c (instantiation_dependent_scope_ref_p): True if\n\tany_dependent_bases_p.\n\nFrom-SVN: r256866", "tree": {"sha": "c43ba9dbd3f6cf2d16341706a5a02473d522e3f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c43ba9dbd3f6cf2d16341706a5a02473d522e3f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4cda6a6b731193c77191feb4dd70ef1cc658f09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4cda6a6b731193c77191feb4dd70ef1cc658f09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4cda6a6b731193c77191feb4dd70ef1cc658f09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4cda6a6b731193c77191feb4dd70ef1cc658f09/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48cdaab9d79b0046f72570fe59a4394d0e575ef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48cdaab9d79b0046f72570fe59a4394d0e575ef2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48cdaab9d79b0046f72570fe59a4394d0e575ef2"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "d23bfc433a5c5810526f364464ea088ae2cbb81d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4cda6a6b731193c77191feb4dd70ef1cc658f09/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4cda6a6b731193c77191feb4dd70ef1cc658f09/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b4cda6a6b731193c77191feb4dd70ef1cc658f09", "patch": "@@ -1,3 +1,10 @@\n+2018-01-18  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/83714\n+\t* search.c (any_dependent_bases_p): Handle null TREE_BINFO.\n+\t* pt.c (instantiation_dependent_scope_ref_p): True if\n+\tany_dependent_bases_p.\n+\n 2018-01-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* cp-tree.h: Fix comment typo (DECL_NON_TRIVIALLY_INITIALIZED_P"}, {"sha": "0296845a31bf092e5c1534431a70558cde430674", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4cda6a6b731193c77191feb4dd70ef1cc658f09/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4cda6a6b731193c77191feb4dd70ef1cc658f09/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b4cda6a6b731193c77191feb4dd70ef1cc658f09", "patch": "@@ -23952,6 +23952,9 @@ instantiation_dependent_scope_ref_p (tree t)\n {\n   if (DECL_P (TREE_OPERAND (t, 1))\n       && CLASS_TYPE_P (TREE_OPERAND (t, 0))\n+      /* A dependent base could make a member inaccessible in the current\n+\t class.  */\n+      && !any_dependent_bases_p ()\n       && accessible_in_template_p (TREE_OPERAND (t, 0),\n \t\t\t\t   TREE_OPERAND (t, 1)))\n     return false;"}, {"sha": "920fc15468a8b4578cf08e77cafe551759a46624", "filename": "gcc/cp/search.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4cda6a6b731193c77191feb4dd70ef1cc658f09/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4cda6a6b731193c77191feb4dd70ef1cc658f09/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=b4cda6a6b731193c77191feb4dd70ef1cc658f09", "patch": "@@ -2612,6 +2612,13 @@ any_dependent_bases_p (tree type)\n   if (!type || !CLASS_TYPE_P (type) || !processing_template_decl)\n     return false;\n \n+  /* If we haven't set TYPE_BINFO yet, we don't know anything about the bases.\n+     Return false because in this situation we aren't actually looking up names\n+     in the scope of the class, so it doesn't matter whether it has dependent\n+     bases.  */\n+  if (!TYPE_BINFO (type))\n+    return false;\n+\n   unsigned i;\n   tree base_binfo;\n   FOR_EACH_VEC_SAFE_ELT (BINFO_BASE_BINFOS (TYPE_BINFO (type)), i, base_binfo)"}, {"sha": "5afd3ce0790dd632eeb6e63469bad6837c64d06f", "filename": "gcc/testsuite/g++.dg/torture/pr83619.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4cda6a6b731193c77191feb4dd70ef1cc658f09/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83619.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4cda6a6b731193c77191feb4dd70ef1cc658f09/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83619.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83619.C?ref=b4cda6a6b731193c77191feb4dd70ef1cc658f09", "patch": "@@ -22,7 +22,7 @@ public:\n     static void\n     c (e *g)\n     {\n-      g->c ();\n+      g->c ();\t\t\t// { dg-message \"incomplete\" }\n     }\n   };\n };"}]}