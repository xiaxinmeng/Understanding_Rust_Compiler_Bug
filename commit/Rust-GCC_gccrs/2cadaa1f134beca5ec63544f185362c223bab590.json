{"sha": "2cadaa1f134beca5ec63544f185362c223bab590", "node_id": "C_kwDOANBUbNoAKDJjYWRhYTFmMTM0YmVjYTVlYzYzNTQ0ZjE4NTM2MmMyMjNiYWI1OTA", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-11-26T12:54:41Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-11-26T12:54:41Z"}, "message": "Minor ipa-modref tweaks\n\nTo make dumps easier to read modref now dumps cgraph_node name rather then\ncfun name in function being analysed and I also fixed minor issue with ECF\nflags merging when updating inline summary.\n\ngcc/ChangeLog:\n\n2021-11-26  Jan Hubicka  <hubicka@ucw.cz>\n\n\t* ipa-modref.c (analyze_function): Drop parameter F and dump\n\tcgraph node name rather than cfun name.\n\t(modref_generate): Update.\n\t(modref_summaries::insert):Update.\n\t(modref_summaries_lto::insert):Update.\n\t(pass_modref::execute):Update.\n\t(ipa_merge_modref_summary_after_inlining): Improve combining of\n\tECF_FLAGS.", "tree": {"sha": "78cb436b98978e0bcb588cec13d9d6b514e29d41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78cb436b98978e0bcb588cec13d9d6b514e29d41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cadaa1f134beca5ec63544f185362c223bab590", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cadaa1f134beca5ec63544f185362c223bab590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cadaa1f134beca5ec63544f185362c223bab590", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cadaa1f134beca5ec63544f185362c223bab590/comments", "author": null, "committer": null, "parents": [{"sha": "906cad89b390f7b471c0558c5770fc720bab2b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/906cad89b390f7b471c0558c5770fc720bab2b1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/906cad89b390f7b471c0558c5770fc720bab2b1d"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "9e537b04196562fcd62c7a433f827bb670482bd9", "filename": "gcc/ipa-modref.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cadaa1f134beca5ec63544f185362c223bab590/gcc%2Fipa-modref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cadaa1f134beca5ec63544f185362c223bab590/gcc%2Fipa-modref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref.c?ref=2cadaa1f134beca5ec63544f185362c223bab590", "patch": "@@ -2943,17 +2943,17 @@ analyze_parms (modref_summary *summary, modref_summary_lto *summary_lto,\n     }\n }\n \n-/* Analyze function F.  IPA indicates whether we're running in local mode\n+/* Analyze function.  IPA indicates whether we're running in local mode\n    (false) or the IPA mode (true).\n    Return true if fixup cfg is needed after the pass.  */\n \n static bool\n-analyze_function (function *f, bool ipa)\n+analyze_function (bool ipa)\n {\n   bool fixup_cfg = false;\n   if (dump_file)\n-    fprintf (dump_file, \"modref analyzing '%s' (ipa=%i)%s%s\\n\",\n-\t     function_name (f), ipa,\n+    fprintf (dump_file, \"\\n\\nmodref analyzing '%s' (ipa=%i)%s%s\\n\",\n+\t     cgraph_node::get (current_function_decl)->dump_name (), ipa,\n \t     TREE_READONLY (current_function_decl) ? \" (const)\" : \"\",\n \t     DECL_PURE_P (current_function_decl) ? \" (pure)\" : \"\");\n \n@@ -3224,7 +3224,7 @@ modref_generate (void)\n       if (!f)\n \tcontinue;\n       push_cfun (f);\n-      analyze_function (f, true);\n+      analyze_function (true);\n       pop_cfun ();\n     }\n }\n@@ -3257,7 +3257,7 @@ modref_summaries::insert (struct cgraph_node *node, modref_summary *)\n       return;\n     }\n   push_cfun (DECL_STRUCT_FUNCTION (node->decl));\n-  analyze_function (DECL_STRUCT_FUNCTION (node->decl), true);\n+  analyze_function (true);\n   pop_cfun ();\n }\n \n@@ -3277,7 +3277,7 @@ modref_summaries_lto::insert (struct cgraph_node *node, modref_summary_lto *)\n       return;\n     }\n   push_cfun (DECL_STRUCT_FUNCTION (node->decl));\n-  analyze_function (DECL_STRUCT_FUNCTION (node->decl), true);\n+  analyze_function (true);\n   pop_cfun ();\n }\n \n@@ -4032,9 +4032,9 @@ class pass_ipa_modref : public ipa_opt_pass_d\n \n }\n \n-unsigned int pass_modref::execute (function *f)\n+unsigned int pass_modref::execute (function *)\n {\n-  if (analyze_function (f, false))\n+  if (analyze_function (false))\n     return execute_fixup_cfg ();\n   return 0;\n }\n@@ -5106,8 +5106,10 @@ ipa_merge_modref_summary_after_inlining (cgraph_edge *edge)\n \t\t = summaries_lto ? summaries_lto->get (edge->callee) : NULL;\n   int flags = flags_from_decl_or_type (edge->callee->decl);\n   /* Combine in outer flags.  */\n-  for (cgraph_node *n = edge->caller; n->inlined_to; n = n->callers->caller)\n-    flags |= flags_from_decl_or_type (edge->callee->decl);\n+  cgraph_node *n;\n+  for (n = edge->caller; n->inlined_to; n = n->callers->caller)\n+    flags |= flags_from_decl_or_type (n->decl);\n+  flags |= flags_from_decl_or_type (n->decl);\n   bool ignore_stores = ignore_stores_p (edge->caller->decl, flags);\n \n   if (!callee_info && to_info)"}]}