{"sha": "eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFmMjNmYzNkNTZmNmFhNjNlMjRmZTI5NTFmYzVlYzc2YjM5Y2JjNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-09-02T10:36:27Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-09-02T10:36:27Z"}, "message": "re PR rtl-optimization/54369 (delayed-branch pass removes too many instructions)\n\n\tPR rtl-optimization/54369\n\t* config/mips/mips.c (mips_reorg): Invoke cleanup_barriers before\n\tcalling dbr_schedule.\n\t* config/sparc/sparc.c (sparc_reorg): Likewise.\n\nFrom-SVN: r190858", "tree": {"sha": "37f7caab339392c9226dbb570e377ccf9b688013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37f7caab339392c9226dbb570e377ccf9b688013"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6/comments", "author": null, "committer": null, "parents": [{"sha": "51ad44fd6ba163c3945e4d20b2d8d63524d6a1ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51ad44fd6ba163c3945e4d20b2d8d63524d6a1ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51ad44fd6ba163c3945e4d20b2d8d63524d6a1ac"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "19c3645e8a978a5f29ca65605a75bc7d4989e3a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6", "patch": "@@ -1,3 +1,10 @@\n+2012-09-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR rtl-optimization/54369\n+\t* config/mips/mips.c (mips_reorg): Invoke cleanup_barriers before\n+\tcalling dbr_schedule.\n+\t* config/sparc/sparc.c (sparc_reorg): Likewise.\n+\n 2012-09-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/54436"}, {"sha": "06b2ff4d0c36e7934fba7d3de683810a435a98b5", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6", "patch": "@@ -15729,7 +15729,10 @@ mips_reorg (void)\n     }\n \n   if (optimize > 0 && flag_delayed_branch)\n-    dbr_schedule (get_insns ());\n+    {\n+      cleanup_barriers ();\n+      dbr_schedule (get_insns ());\n+    }\n   mips_reorg_process_insns ();\n   if (!TARGET_MIPS16\n       && TARGET_EXPLICIT_RELOCS"}, {"sha": "140332eb8990a381efe2943d6acd1e54038cf5c8", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=eaf23fc3d56f6aa63e24fe2951fc5ec76b39cbc6", "patch": "@@ -10691,7 +10691,10 @@ sparc_reorg (void)\n   /* We need to have the (essentially) final form of the insn stream in order\n      to properly detect the various hazards.  Run delay slot scheduling.  */\n   if (optimize > 0 && flag_delayed_branch)\n-    dbr_schedule (get_insns ());\n+    {\n+      cleanup_barriers ();\n+      dbr_schedule (get_insns ());\n+    }\n \n   /* Now look for specific patterns in the insn stream.  */\n   for (insn = get_insns (); insn; insn = next)"}]}