{"sha": "913e4b3617fe7f46fbdbb72b010cf6cf7201d329", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEzZTRiMzYxN2ZlN2Y0NmZiZGJiNzJiMDEwY2Y2Y2Y3MjAxZDMyOQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2017-01-23T12:00:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-23T12:00:26Z"}, "message": "sem_ch4.adb (Try_Primitive_Operations, [...]): argument is valid if it is a derived type with unknown discriminants that...\n\n2017-01-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Try_Primitive_Operations,\n\tIs_Valid_First_Argument_Of): argument is valid if it is a derived\n\ttype with unknown discriminants that matches its underlying\n\trecord view.\n\t* exp_util.adb (Expand_Subtype_From_Expr): Do not expand\n\texpression if its type is derived from a limited type with\n\tunknown discriminants, because the expansion (which is a call)\n\tmust be expanded in the enclosing context to add the proper build-\n\tin-place parameters to the call.\n\t* lib.ads, exp_ch9.adb: Minor fixes in comments.\n\nFrom-SVN: r244790", "tree": {"sha": "a30bc477380cd60dbeb59b86ec2abe49e3833502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a30bc477380cd60dbeb59b86ec2abe49e3833502"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/913e4b3617fe7f46fbdbb72b010cf6cf7201d329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/913e4b3617fe7f46fbdbb72b010cf6cf7201d329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/913e4b3617fe7f46fbdbb72b010cf6cf7201d329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a77152ca855e6009a38ee011043465d60ed8f5c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a77152ca855e6009a38ee011043465d60ed8f5c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a77152ca855e6009a38ee011043465d60ed8f5c2"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "e05fcaa9c3588ed2548a41e0a97ad1cfd55cfb2d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=913e4b3617fe7f46fbdbb72b010cf6cf7201d329", "patch": "@@ -1,3 +1,16 @@\n+2017-01-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Try_Primitive_Operations,\n+\tIs_Valid_First_Argument_Of): argument is valid if it is a derived\n+\ttype with unknown discriminants that matches its underlying\n+\trecord view.\n+\t* exp_util.adb (Expand_Subtype_From_Expr): Do not expand\n+\texpression if its type is derived from a limited type with\n+\tunknown discriminants, because the expansion (which is a call)\n+\tmust be expanded in the enclosing context to add the proper build-\n+\tin-place parameters to the call.\n+\t* lib.ads, exp_ch9.adb: Minor fixes in comments.\n+\n 2017-01-23  Yannick Moy  <moy@adacore.com>\n \n \t* frontend.adb (Frontend): Do not load runtime"}, {"sha": "b38aed3eaff71a887a00b2d8e5f93fb427c447f0", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=913e4b3617fe7f46fbdbb72b010cf6cf7201d329", "patch": "@@ -8469,9 +8469,9 @@ package body Exp_Ch9 is\n \n       Op_Body := First (Declarations (N));\n \n-      --  The protected body is replaced with the bodies of its\n-      --  protected operations, and the declarations for internal objects\n-      --  that may have been created for entry family bounds.\n+      --  The protected body is replaced with the bodies of its protected\n+      --  operations, and the declarations for internal objects that may\n+      --  have been created for entry family bounds.\n \n       Rewrite (N, Make_Null_Statement (Sloc (N)));\n       Analyze (N);"}, {"sha": "e828a1e0978d65aedc6c24bc205c30b205e3020c", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=913e4b3617fe7f46fbdbb72b010cf6cf7201d329", "patch": "@@ -3782,7 +3782,13 @@ package body Exp_Util is\n       then\n          --  Nothing to be done if no underlying record view available\n \n-         if No (Underlying_Record_View (Unc_Type)) then\n+         --  If this is a limited type derived from a type with unknown\n+         --  discriminants, do not expand either, so that subsequent\n+         --  expansion of the call can add build-in-place parameters to call.\n+\n+         if No (Underlying_Record_View (Unc_Type))\n+           or else Is_Limited_Type (Unc_Type)\n+         then\n             null;\n \n          --  Otherwise use the Underlying_Record_View to create the proper"}, {"sha": "a6cfd5dff7f1a5a7580b9b36af15a6bcf3242519", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=913e4b3617fe7f46fbdbb72b010cf6cf7201d329", "patch": "@@ -302,7 +302,7 @@ package Lib is\n    --      No_Name for the main unit.\n \n    --    Fatal_Error\n-   --      A flag that is initialized to None and gets set to Errorif a fatal\n+   --      A flag that is initialized to None and gets set to Error if a fatal\n    --      error occurs during the processing of a unit. A fatal error is one\n    --      defined as serious enough to stop the next phase of the compiler\n    --      from running (i.e. fatal error during parsing stops semantics,"}, {"sha": "7a2666144b932f50bb99b8ceb308f39f68c2359c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/913e4b3617fe7f46fbdbb72b010cf6cf7201d329/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=913e4b3617fe7f46fbdbb72b010cf6cf7201d329", "patch": "@@ -9294,6 +9294,13 @@ package body Sem_Ch4 is\n               or else Base_Type (Obj_Type) = Typ\n               or else Corr_Type = Typ\n \n+              --  Object may be of a derived type whose parent has unknown\n+              --  discriminants, in which case the type matches the\n+              --  underlying record view of its base.\n+\n+              or else (Has_Unknown_Discriminants (Typ)\n+                and then Typ = Underlying_Record_View (Base_Type (Obj_Type)))\n+\n                --  Prefix can be dereferenced\n \n               or else"}]}