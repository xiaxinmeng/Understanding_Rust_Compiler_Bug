{"sha": "8498adc27141f048a0492c5b0cc1438a7fee24b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ5OGFkYzI3MTQxZjA0OGEwNDkyYzViMGNjMTQzOGE3ZmVlMjRiNw==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "gerald@pfeifer.com", "date": "2019-08-31T17:20:28Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2019-08-31T17:20:28Z"}, "message": "generic.texi (Unary and Binary Expressions): Mark up an instance of TYPE_MIN.\n\n\t* doc/generic.texi (Unary and Binary Expressions): Mark up\n\tan instance of TYPE_MIN.\n\nFrom-SVN: r275243", "tree": {"sha": "5279ef8b972ccaa510a0f9a299446264d767662c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5279ef8b972ccaa510a0f9a299446264d767662c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8498adc27141f048a0492c5b0cc1438a7fee24b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8498adc27141f048a0492c5b0cc1438a7fee24b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8498adc27141f048a0492c5b0cc1438a7fee24b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8498adc27141f048a0492c5b0cc1438a7fee24b7/comments", "author": {"login": "GeraldPfeifer", "id": 4573532, "node_id": "MDQ6VXNlcjQ1NzM1MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4573532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeraldPfeifer", "html_url": "https://github.com/GeraldPfeifer", "followers_url": "https://api.github.com/users/GeraldPfeifer/followers", "following_url": "https://api.github.com/users/GeraldPfeifer/following{/other_user}", "gists_url": "https://api.github.com/users/GeraldPfeifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeraldPfeifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeraldPfeifer/subscriptions", "organizations_url": "https://api.github.com/users/GeraldPfeifer/orgs", "repos_url": "https://api.github.com/users/GeraldPfeifer/repos", "events_url": "https://api.github.com/users/GeraldPfeifer/events{/privacy}", "received_events_url": "https://api.github.com/users/GeraldPfeifer/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd631eb5a7597a7040f770b2a912cec13af50df4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd631eb5a7597a7040f770b2a912cec13af50df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd631eb5a7597a7040f770b2a912cec13af50df4"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "49c371b7e179a704dec891874b25f5a594d9abc6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8498adc27141f048a0492c5b0cc1438a7fee24b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8498adc27141f048a0492c5b0cc1438a7fee24b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8498adc27141f048a0492c5b0cc1438a7fee24b7", "patch": "@@ -1,3 +1,8 @@\n+2019-08-31  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* doc/generic.texi (Unary and Binary Expressions): Mark up\n+\tan instance of TYPE_MIN.\n+\n 2019-08-31  Stafford Horne  <shorne@gmail.com>\n \n \t* config/or1k/constraints.md (t): New constraint."}, {"sha": "86a53cc360385b90c126f5c4099a75c67b2a76bc", "filename": "gcc/doc/generic.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8498adc27141f048a0492c5b0cc1438a7fee24b7/gcc%2Fdoc%2Fgeneric.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8498adc27141f048a0492c5b0cc1438a7fee24b7/gcc%2Fdoc%2Fgeneric.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgeneric.texi?ref=8498adc27141f048a0492c5b0cc1438a7fee24b7", "patch": "@@ -1373,8 +1373,8 @@ built-in functions.\n \n @item ABSU_EXPR\n These nodes represent the absolute value of the single operand in\n-equivalent unsigned type such that @code{ABSU_EXPR} of TYPE_MIN is\n-well defined.\n+equivalent unsigned type such that @code{ABSU_EXPR} of @code{TYPE_MIN}\n+is well defined.\n \n @item BIT_NOT_EXPR\n These nodes represent bitwise complement, and will always have integral"}]}