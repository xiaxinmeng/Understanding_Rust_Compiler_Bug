{"sha": "b23ba0b898de1ff77ea043847d7e3131f7e14336", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIzYmEwYjg5OGRlMWZmNzdlYTA0Mzg0N2Q3ZTMxMzFmN2UxNDMzNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-07-17T16:33:22Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-07-17T16:33:22Z"}, "message": "re PR target/10907 ([IA64] gcc violates the ia64 ABI)\n\n        PR target/10907\n        * config/ia64/ia64.c (ia64_epilogue_uses): GP is live at end\n        even with !TARGET_CONST_GP.\n        (ia64_function_ok_for_sibcall): Reject non-local functions.\n\nFrom-SVN: r69515", "tree": {"sha": "24ac6c991d36e27fb90ff4a1475694d104d4cd10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24ac6c991d36e27fb90ff4a1475694d104d4cd10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b23ba0b898de1ff77ea043847d7e3131f7e14336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b23ba0b898de1ff77ea043847d7e3131f7e14336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b23ba0b898de1ff77ea043847d7e3131f7e14336", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b23ba0b898de1ff77ea043847d7e3131f7e14336/comments", "author": null, "committer": null, "parents": [{"sha": "2a39bedbed4ad8389a9b7421215d7cf857070e13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a39bedbed4ad8389a9b7421215d7cf857070e13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a39bedbed4ad8389a9b7421215d7cf857070e13"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "44832d1e2105a458cb546c25dbbfeb6a637c3cf1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23ba0b898de1ff77ea043847d7e3131f7e14336/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23ba0b898de1ff77ea043847d7e3131f7e14336/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b23ba0b898de1ff77ea043847d7e3131f7e14336", "patch": "@@ -1,3 +1,10 @@\n+2003-07-17  Richard Henderson  <rth@redhat.com>\n+\n+        PR target/10907\n+        * config/ia64/ia64.c (ia64_epilogue_uses): GP is live at end\n+        even with !TARGET_CONST_GP.\n+        (ia64_function_ok_for_sibcall): Reject non-local functions.\n+\n 2003-07-17  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* c-common.c (c_estimate_num_insns_1): Don't handle"}, {"sha": "b277eb0e2b011bf8360e0646677ac03234793533", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23ba0b898de1ff77ea043847d7e3131f7e14336/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23ba0b898de1ff77ea043847d7e3131f7e14336/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=b23ba0b898de1ff77ea043847d7e3131f7e14336", "patch": "@@ -3642,14 +3642,9 @@ ia64_function_ok_for_sibcall (decl, exp)\n      tree decl;\n      tree exp ATTRIBUTE_UNUSED;\n {\n-  /* Direct calls are always ok.  */\n-  if (decl)\n-    return true;\n-\n-  /* If TARGET_CONST_GP is in effect, then our caller expects us to\n-     return with our current GP.  This means that we'll always have\n-     a GP reload after an indirect call.  */\n-  return !ia64_epilogue_uses (R_GR (1));\n+  /* We must always return with our current GP.  This means we can\n+     only sibcall to functions defined in the current module.  */\n+  return decl && (*targetm.binds_local_p) (decl);\n }\n \f\n \n@@ -7356,12 +7351,11 @@ ia64_epilogue_uses (regno)\n   switch (regno)\n     {\n     case R_GR (1):\n-      /* When a function makes a call through a function descriptor, we\n-         will write a (potentially) new value to \"gp\".  After returning\n-         from such a call, we need to make sure the function restores the\n-         original gp-value, even if the function itself does not use the\n-         gp anymore.  */\n-      return (TARGET_CONST_GP && !(TARGET_AUTO_PIC || TARGET_NO_PIC));\n+      /* With a call to a function in another module, we will write a new\n+\t value to \"gp\".  After returning from such a call, we need to make\n+\t sure the function restores the original gp-value, even if the\n+\t function itself does not use the gp anymore.  */\n+      return !(TARGET_AUTO_PIC || TARGET_NO_PIC);\n \n     case IN_REG (0): case IN_REG (1): case IN_REG (2): case IN_REG (3):\n     case IN_REG (4): case IN_REG (5): case IN_REG (6): case IN_REG (7):"}]}