{"sha": "53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNmOTRhNWMxOGFhMDM1Y2ViNGY5YWRhMmFmYjllYzhhYTA3Y2U1Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-04-21T11:31:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-04-21T11:31:52Z"}, "message": "tree-ssa-alias.c (ref_maybe_used_by_stmt_p): Handle return statements.\n\n2011-04-21  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-alias.c (ref_maybe_used_by_stmt_p): Handle\n\treturn statements.\n\nFrom-SVN: r172820", "tree": {"sha": "16beee1774ba2326722157c467df642024eced08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16beee1774ba2326722157c467df642024eced08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0dca5baf206a94c93c9aef85eb32d2734bf2878", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0dca5baf206a94c93c9aef85eb32d2734bf2878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0dca5baf206a94c93c9aef85eb32d2734bf2878"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "a414107f799fe69a4fa6e2322b4ba9094f58bd66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57", "patch": "@@ -1,3 +1,8 @@\n+2011-04-21  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.c (ref_maybe_used_by_stmt_p): Handle\n+\treturn statements.\n+\n 2011-04-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/i386/cygming.h (union tree_node, TREE): Don't define or"}, {"sha": "673073ee81a5f1c572e8a1ec79e8541b653f597a", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=53f94a5c18aa035ceb4f9ada2afb9ec8aa07ce57", "patch": "@@ -1364,6 +1364,26 @@ ref_maybe_used_by_stmt_p (gimple stmt, tree ref)\n     }\n   else if (is_gimple_call (stmt))\n     return ref_maybe_used_by_call_p (stmt, ref);\n+  else if (gimple_code (stmt) == GIMPLE_RETURN)\n+    {\n+      tree retval = gimple_return_retval (stmt);\n+      tree base;\n+      if (retval\n+\t  && TREE_CODE (retval) != SSA_NAME\n+\t  && !is_gimple_min_invariant (retval)\n+\t  && refs_may_alias_p (retval, ref))\n+\treturn true;\n+      /* If ref escapes the function then the return acts as a use.  */\n+      base = get_base_address (ref);\n+      if (!base)\n+\t;\n+      else if (DECL_P (base))\n+\treturn is_global_var (base);\n+      else if (TREE_CODE (base) == MEM_REF\n+\t       || TREE_CODE (base) == TARGET_MEM_REF)\n+\treturn ptr_deref_may_alias_global_p (TREE_OPERAND (base, 0));\n+      return false;\n+    }\n \n   return true;\n }"}]}