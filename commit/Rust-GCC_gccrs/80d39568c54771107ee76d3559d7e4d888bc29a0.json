{"sha": "80d39568c54771107ee76d3559d7e4d888bc29a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBkMzk1NjhjNTQ3NzExMDdlZTc2ZDM1NTlkN2U0ZDg4OGJjMjlhMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-11-25T09:08:20Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-11-25T09:08:20Z"}, "message": "ipa-inline-analysis.c: Include gimplify.h (set_cond_stmt_execution_predicate...\n\n\t* ipa-inline-analysis.c: Include gimplify.h\n\t(set_cond_stmt_execution_predicate,\n\tset_switch_stmt_execution_predicate): Be sure to not leak locations\n\tto function body.\n\nFrom-SVN: r230857", "tree": {"sha": "d6f63deed97bf900176e1ac53286dece43a90300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6f63deed97bf900176e1ac53286dece43a90300"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80d39568c54771107ee76d3559d7e4d888bc29a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d39568c54771107ee76d3559d7e4d888bc29a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80d39568c54771107ee76d3559d7e4d888bc29a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d39568c54771107ee76d3559d7e4d888bc29a0/comments", "author": null, "committer": null, "parents": [{"sha": "6837d899c86d8b5eab15103e9466039304897ae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6837d899c86d8b5eab15103e9466039304897ae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6837d899c86d8b5eab15103e9466039304897ae7"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "3ec9ab7008fbf423fedbd161bc07fc22f1c9aa67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80d39568c54771107ee76d3559d7e4d888bc29a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80d39568c54771107ee76d3559d7e4d888bc29a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80d39568c54771107ee76d3559d7e4d888bc29a0", "patch": "@@ -1,3 +1,10 @@\n+2015-11-24  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-inline-analysis.c: Include gimplify.h\n+\t(set_cond_stmt_execution_predicate,\n+\tset_switch_stmt_execution_predicate): Be sure to not leak locations\n+\tto function body.\n+\n 2015-11-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/67089"}, {"sha": "cf7766b7d1424d73682348d6716789857cea65ba", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80d39568c54771107ee76d3559d7e4d888bc29a0/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80d39568c54771107ee76d3559d7e4d888bc29a0/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=80d39568c54771107ee76d3559d7e4d888bc29a0", "patch": "@@ -94,6 +94,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-utils.h\"\n #include \"cilk.h\"\n #include \"cfgexpand.h\"\n+#include \"gimplify.h\"\n \n /* Estimate runtime of function can easilly run into huge numbers with many\n    nested loops.  Be sure we can compute time * INLINE_SIZE_SCALE * 2 in an\n@@ -1773,9 +1774,9 @@ set_cond_stmt_execution_predicate (struct ipa_func_body_info *fbi,\n \t     unordered one.  Be sure it is not confused with NON_CONSTANT.  */\n \t  if (this_code != ERROR_MARK)\n \t    {\n-\t      struct predicate p = add_condition (summary, index, &aggpos,\n-\t\t\t\t\t\t  this_code,\n-\t\t\t\t\t\t  gimple_cond_rhs (last));\n+\t      struct predicate p = add_condition\n+\t\t (summary, index, &aggpos, this_code,\n+\t\t  unshare_expr_without_location (gimple_cond_rhs (last)));\n \t      e->aux = edge_predicate_pool.allocate ();\n \t      *(struct predicate *) e->aux = p;\n \t    }\n@@ -1861,12 +1862,15 @@ set_switch_stmt_execution_predicate (struct ipa_func_body_info *fbi,\n       if (!min && !max)\n \tp = true_predicate ();\n       else if (!max)\n-\tp = add_condition (summary, index, &aggpos, EQ_EXPR, min);\n+\tp = add_condition (summary, index, &aggpos, EQ_EXPR,\n+\t\t\t   unshare_expr_without_location (min));\n       else\n \t{\n \t  struct predicate p1, p2;\n-\t  p1 = add_condition (summary, index, &aggpos, GE_EXPR, min);\n-\t  p2 = add_condition (summary, index, &aggpos, LE_EXPR, max);\n+\t  p1 = add_condition (summary, index, &aggpos, GE_EXPR,\n+\t\t\t      unshare_expr_without_location (min));\n+\t  p2 = add_condition (summary, index, &aggpos, LE_EXPR,\n+\t\t\t      unshare_expr_without_location (max));\n \t  p = and_predicates (summary->conds, &p1, &p2);\n \t}\n       *(struct predicate *) e->aux"}]}