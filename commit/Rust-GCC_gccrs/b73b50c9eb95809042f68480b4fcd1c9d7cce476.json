{"sha": "b73b50c9eb95809042f68480b4fcd1c9d7cce476", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjczYjUwYzllYjk1ODA5MDQyZjY4NDgwYjRmY2QxYzlkN2NjZTQ3Ng==", "commit": {"author": {"name": "Janis Johnson", "email": "janisjo@codesourcery.com", "date": "2011-06-20T17:07:24Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2011-06-20T17:07:24Z"}, "message": "scanasm.exp (object-size): Move argument processing earlier to report errors before verifying that the...\n\n\t* lib/scanasm.exp (object-size): Move argument processing earlier\n\tto report errors before verifying that the file exists.  Report\n\tproblems detected at runtime as unresolved instead of error and\n\treport their reasons to the log file.\n\nFrom-SVN: r175223", "tree": {"sha": "c6234591c58b7ffae8b7ee5a9d46d75d5a65ba44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6234591c58b7ffae8b7ee5a9d46d75d5a65ba44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b73b50c9eb95809042f68480b4fcd1c9d7cce476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b73b50c9eb95809042f68480b4fcd1c9d7cce476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b73b50c9eb95809042f68480b4fcd1c9d7cce476", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b73b50c9eb95809042f68480b4fcd1c9d7cce476/comments", "author": null, "committer": null, "parents": [{"sha": "83a8cbdab0a2dd9c7dc38a88780907aea27b81a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83a8cbdab0a2dd9c7dc38a88780907aea27b81a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83a8cbdab0a2dd9c7dc38a88780907aea27b81a5"}], "stats": {"total": 57, "additions": 36, "deletions": 21}, "files": [{"sha": "23714ca5127bf5cd287737daba89ae102166a4ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73b50c9eb95809042f68480b4fcd1c9d7cce476/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73b50c9eb95809042f68480b4fcd1c9d7cce476/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b73b50c9eb95809042f68480b4fcd1c9d7cce476", "patch": "@@ -1,3 +1,10 @@\n+2011-06-20  Janis Johnson  <janisjo@codesourcery.com>\n+\n+\t* lib/scanasm.exp (object-size): Move argument processing earlier\n+\tto report errors before verifying that the file exists.  Report\n+\tproblems detected at runtime as unresolved instead of error and\n+\treport their reasons to the log file.\n+\n 2011-06-20  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/47080"}, {"sha": "80014d0195c6e9c88bd61ce558a5a8d4227f3466", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 29, "deletions": 21, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73b50c9eb95809042f68480b4fcd1c9d7cce476/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73b50c9eb95809042f68480b4fcd1c9d7cce476/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=b73b50c9eb95809042f68480b4fcd1c9d7cce476", "patch": "@@ -350,11 +350,35 @@ proc object-size { args } {\n \n     upvar 2 name testcase\n     set testcase [lindex $testcase 0]\n+\n+    set what [lindex $args 0]\n+    set where [lsearch { text data bss total } $what]\n+    if { $where == -1 } {\n+        error \"object-size: illegal argument: $what\"\n+        return\n+    }\n+    set cmp [lindex $args 1]\n+    if { [lsearch { < > <= >= == != } $cmp] == -1 } {\n+        error \"object-size: illegal argument: $cmp\"\n+        return\n+    }\n+    set with [lindex $args 2]\n+    if ![string is integer $with ] {\n+        error \"object-size: illegal argument: $with\"\n+        return\n+    }\n+\n     set output_file \"[file rootname [file tail $testcase]].o\"\n+    if ![file_on_host exists $output_file] {\n+\tverbose -log \"$testcase: $output_file does not exist\"\n+\tunresolved \"$testcase object-size $what $cmp $with\"\n+\treturn\n+    }\n     set output [remote_exec host \"$size\" \"$output_file\"]\n     set status [lindex $output 0]\n     if { $status != 0 } {\n-        error \"object-size: $size failed\"\n+        verbose -log \"$testcase object-size: $size failed\"\n+        unresolved \"$testcase object-size $what $cmp $with\"\n         return\n     }\n \n@@ -363,37 +387,21 @@ proc object-size { args } {\n \n     set line0 [lindex $lines 0]\n     if ![regexp {^\\s*text\\s+data\\s+bss\\s+dec\\s+hex\\s+filename\\s*$} $line0] {\n-        error \"object-size: $size did not produce expected first line: $line0\"\n+        verbose -log \"$testcase object-size: $size did not produce expected first line: $line0\"\n+        unresolved \"$testcase object-size $what $cmp $with\"\n         return\n     }\n \n     set line1 [lindex $lines 1]\n     if ![regexp {^\\s*\\d+\\s+\\d+\\s+\\d+\\s+\\d+\\s+[\\da-fA-F]+\\s+} $line1] {\n-        error \"object-size: $size did not produce expected second line: $line1\"\n+        verbose -log \"$testcase object-size: $size did not produce expected second line: $line1\"\n+        unresolved \"$testcase object-size $what $cmp $with\"\n         return\n     }\n \n-    set what [lindex $args 0]\n-    set where [lsearch { text data bss total } $what]\n-    if { $where == -1 } {\n-        error \"object-size: illegal argument: $what\"\n-        return\n-    }\n     set actual [lindex $line1 $where]\n     verbose -log \"$what size is $actual\"\n \n-    set cmp [lindex $args 1]\n-    if { [lsearch { < > <= >= == != } $cmp] == -1 } {\n-        error \"object-size: illegal argument: $cmp\"\n-        return\n-    }\n-\n-    set with [lindex $args 2]\n-    if ![string is integer $with ] {\n-        error \"object-size: illegal argument: $with\"\n-        return\n-    }\n-\n     if [expr $actual $cmp $with] {\n \tpass \"$testcase object-size $what $cmp $with\"\n     } else {"}]}